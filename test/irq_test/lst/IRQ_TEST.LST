
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	src\irq_test.a51
	Object File:	bin\irq_test.hex
	List File:	lst\irq_test.lst



 Line  I  Addr  Code            Source

    1:				; irq_test.a51 -- First interrupt srvice test.
    2:				;
    3:				; This program is meant to run on a light53 MCU with the 8-bit timer. It can be
    4:				; run on simulation or in actual hardware.
    5:				; Its purpose is to demonstrate the working of the interrupt service logic. No
    6:				; actual tests are performed (other than the co-simulation tests), only checks.
    7:				;
    8:
    9:				        ;-----------------------------------------------------------------------
   10:
   11:		N      0060	timer_irq_ctr   set     060h        ; Incremented by timer irq routine
   12:
   13:
   14:				        ;-- Macros -------------------------------------------------------------
   15:
   16:				        ; putc: send character in A to console (UART)
   17:				putc    macro   character
   18:				        local   putc_loop
   19:				        mov     SBUF,character
   20:				putc_loop:
   21:				        ;mov     a,SCON
   22:				        ;anl     a,#10h
   23:				        ;jz      putc_loop
   24:				        endm
   25:
   26:				        ; put_crlf: send CR+LF to console
   27:				put_crlf macro
   28:				        putc    #13
   29:				        putc    #10
   30:				        endm
   31:
   32:
   33:				        ;-- Reset & interrupt vectors ------------------------------------------
   34:
   35:		N      0000	        org     00h
   36:	  0000	02 00 30	        ljmp    start               ;
   37:		N      0003	        org     03h
   38:	  0003	02 00 AD	        ljmp    irq_wrong
   39:		N      000B	        org     0bh
   40:	  000B	02 00 A3	        ljmp    irq_timer
   41:		N      0013	        org     13h
   42:	  0013	02 00 AD	        ljmp    irq_wrong
   43:		N      001B	        org     1bh

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   44:	  001B	02 00 AD	        ljmp    irq_wrong
   45:		N      0023	        org     23h
   46:	  0023	02 00 AD	        ljmp    irq_wrong
   47:
   48:
   49:				        ;-- Main test program --------------------------------------------------
   50:		N      0030	        org     30h
   51:	  0030			start:
   52:				        ; Disable all interrupts.
   53:	  0030	75 A8 00	        mov     IE,#00
   54:				        ; Initialize timer.
   55:	  0033	75 8A 0A	        mov     TL0,#10
   56:	  0036	75 88 20	        mov     TCON,#20h
   57:
   58:				        ; Trigger timer IRQ with IRQs disabled, it should be ignored.
   59:	  0039	75 60 00	        mov     timer_irq_ctr,#00
   60:	  003C	7F 10		        mov     r7,#10h
   61:	  003E	75 8A 0A	        mov     TL0,#10
   62:	  0041	75 88 20	        mov     TCON,#20h
   63:	  0044			loop0:
   64:	  0044	DF FE		        djnz    r7,loop0
   65:	  0046	E5 60		        mov     a,timer_irq_ctr
   66:	  0048	B4 00 41	        cjne    a,#00,fail_unexpected
   67:	  004B	D2 88		        setb    TCON.0              ; Clear timer IRQ flag
   68:
   69:				        ; Trigger timer IRQ with timer IRQ enabled but global IE disabled
   70:	  004D	75 A8 02	        mov     IE,#02h
   71:	  0050	75 60 00	        mov     timer_irq_ctr,#00
   72:	  0053	7F 10		        mov     r7,#10h
   73:	  0055	75 8A 0A	        mov     TL0,#10
   74:	  0058	75 88 20	        mov     TCON,#20h
   75:	  005B			loop1:
   76:	  005B	DF FE		        djnz    r7,loop1
   77:	  005D	E5 60		        mov     a,timer_irq_ctr
   78:	  005F	B4 00 2A	        cjne    a,#00,fail_unexpected
   79:	  0062	D2 88		        setb    TCON.0              ; Clear timer IRQ flag
   80:
   81:				        ; Trigger timer IRQ with timer and global IRQ enabled
   82:	  0064	75 A8 82	        mov     IE,#82h
   83:	  0067	75 60 00	        mov     timer_irq_ctr,#00
   84:	  006A	7F 10		        mov     r7,#10h
   85:	  006C	75 8A 0A	        mov     TL0,#10
   86:	  006F	75 88 20	        mov     TCON,#20h
   87:	  0072			loop2:
   88:	  0072	DF FE		        djnz    r7,loop2
   89:	  0074	E5 60		        mov     a,timer_irq_ctr
   90:	  0076	B4 01 08	        cjne    a,#01,fail_expected
   91:
   92:
   93:				        ;-- End of test program, enter single-instruction endless loop
   94:	  0079	90 00 D0	        mov     DPTR,#text2
   95:	  007C	12 00 97	        call    puts
   96:	  007F	01 7F		quit:   ajmp    $
   97:
   98:
   99:				        ; Did not get expected IRQ: print failure message and block.

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

  100:	  0081			fail_expected:
  101:	  0081	90 00 EF	        mov     DPTR,#text3
  102:	  0084	12 00 97	        call    puts
  103:	  0087	75 A8 00	        mov     IE,#00h
  104:	  008A	01 8A		        ajmp    $
  105:
  106:
  107:				        ; Got unexpected IRQ: print failure message and block.
  108:	  008C			fail_unexpected:
  109:	  008C	90 00 BE	        mov     DPTR,#text1
  110:	  008F	12 00 97	        call    puts
  111:	  0092	75 A8 00	        mov     IE,#00h
  112:	  0095	01 95		        ajmp    $
  113:
  114:				;-- puts: output to UART a zero-terminated string at DPTR ----------------------
  115:	  0097			puts:
  116:	  0097	78 00		        mov     r0,#00h
  117:	  0099			puts_loop:
  118:	  0099	E8		        mov     a,r0
  119:	  009A	08		        inc     r0
  120:	  009B	93		        movc    a,@a+DPTR
  121:	  009C	60 04		        jz      puts_done
  122:
  123:				        putc    a
  124+ 1  009E	F5 99		        mov     SBUF,a
  125+ 1  00A0			??0000:
  126+ 1			        ;mov     a,SCON
  127+ 1			        ;anl     a,#10h
  128+ 1			        ;jz      putc_loop
  129:	  00A0	80 F7		        sjmp    puts_loop
  130:	  00A2			puts_done:
  131:	  00A2	22		        ret
  132:
  133:				;-- irq_timer: interrupt routine for timer -------------------------------------
  134:				; Note we don't bother to preserve any registers
  135:	  00A3			irq_timer:
  136:	  00A3	D2 88		        setb    TCON.0              ; Clear timer IRQ flag
  137:	  00A5	05 60		        inc     timer_irq_ctr       ; Increment irq counter
  138:	  00A7	90 00 AF	        mov     DPTR,#text0         ; Print IRQ message...
  139:	  00AA	11 97		        call    puts
  140:	  00AC	32		        reti                        ; ...and quit
  141:
  142:	  00AD			irq_wrong:
  143:	  00AD	01 AD		        ajmp    irq_wrong
  144:
  145:
  146:
  147:
  148:	  00AF	3C 54 69 6D	text0:  db      '<Timer irq>',13,10,00h,00h
	  00B3	65 72 20 69
	  00B7	72 71 3E 0D
	  00BB	0A 00 00
  149:	  00BE	55 6E 65 78	text1:  db      'Unexpected IRQ',13,10,00h,00h
	  00C2	70 65 63 74
	  00C6	65 64 20 49
	  00CA	52 51 0D 0A

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

	  00CE	00 00
  150:	  00D0	49 52 51 20	text2:  db      'IRQ test finished, no errors',13,10,0
	  00D4	74 65 73 74
	  00D8	20 66 69 6E
	  00DC	69 73 68 65
	  00E0	64 2C 20 6E
	  00E4	6F 20 65 72
	  00E8	72 6F 72 73
	  00EC	0D 0A 00
  151:	  00EF	4D 69 73 73	text3:  db      'Missing IRQ',13,10,0
	  00F3	69 6E 67 20
	  00F7	49 52 51 0D
	  00FB	0A 00
  152:
  153:				        end





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0000				  CODE	    00A0	 125
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6
ACC				  DATA	      E0
B				  DATA	      F0
CY				  BIT	      D7
DPH				  DATA	      83
DPL				  DATA	      82
EA				  BIT	      AF
ES				  BIT	      AC
ET0				  BIT	      A9
ET1				  BIT	      AB
EX0				  BIT	      A8
EX1				  BIT	      AA
EXTI0				  CODE	    0003
EXTI1				  CODE	    0013
F0				  BIT	      D5
FAIL_EXPECTED			  CODE	    0081	 100
FAIL_UNEXPECTED			  CODE	    008C	 108
IE				  DATA	      A8
IE0				  BIT	      89
IE1				  BIT	      8B
INT0				  BIT	      B2
INT1				  BIT	      B3
IP				  DATA	      B8
IRQ_TIMER			  CODE	    00A3	 135
IRQ_WRONG			  CODE	    00AD	 142
IT0				  BIT	      88
IT1				  BIT	      8A
LOOP0				  CODE	    0044	  63
LOOP1				  CODE	    005B	  75
LOOP2				  CODE	    0072	  87
OV				  BIT	      D2
P				  BIT	      D0
P0				  DATA	      80
P1				  DATA	      90
P2				  DATA	      A0
P3				  DATA	      B0
PCON				  DATA	      87
PS				  BIT	      BC
PSW				  DATA	      D0
PT0				  BIT	      B9
PT1				  BIT	      BB
PUTC				  MACRO	        	  17
PUTS				  CODE	    0097	 115
PUTS_DONE			  CODE	    00A2	 130
PUTS_LOOP			  CODE	    0099	 117
PUT_CRLF			  MACRO	        	  27
PX0				  BIT	      B8

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
PX1				  BIT	      BA
QUIT				  CODE	    007F	  96
RB8				  BIT	      9A
RD				  BIT	      B7
REN				  BIT	      9C
RESET				  CODE	    0000
RI				  BIT	      98
RS0				  BIT	      D3
RS1				  BIT	      D4
RXD				  BIT	      B0
SBUF				  DATA	      99
SCON				  DATA	      98
SINT				  CODE	    0023
SM0				  BIT	      9F
SM1				  BIT	      9E
SM2				  BIT	      9D
SP				  DATA	      81
START				  CODE	    0030	  51
T0				  BIT	      B4
T1				  BIT	      B5
TB8				  BIT	      9B
TCON				  DATA	      88
TEXT0				  CODE	    00AF	 148
TEXT1				  CODE	    00BE	 149
TEXT2				  CODE	    00D0	 150
TEXT3				  CODE	    00EF	 151
TF0				  BIT	      8D
TF1				  BIT	      8F
TH0				  DATA	      8C
TH1				  DATA	      8D
TI				  BIT	      99
TIMER0				  CODE	    000B
TIMER1				  CODE	    001B
TIMER_IRQ_CTR			  NUMBER    0060	  11
TL0				  DATA	      8A
TL1				  DATA	      8B
TMOD				  DATA	      89
TR0				  BIT	      8C
TR1				  BIT	      8E
TXD				  BIT	      B1
WR				  BIT	      B6
