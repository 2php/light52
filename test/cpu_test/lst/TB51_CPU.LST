
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	src\tb51_cpu.a51
	Object File:	bin\tb51_cpu.hex
	List File:	lst\tb51_cpu.lst



 Line  I  Addr  Code            Source

    1:				;-------------------------------------------------------------------------------
    2:				; tb51_cpu.a51 -- MCS51 instruction set test bench.
    3:				;-------------------------------------------------------------------------------
    4:				; This program is meant to verify the basic operation of an MCS51 CPU
    5:				; instruction set implementation.
    6:				; It is far too weak to rely on it exclusively but it can help detect gross
    7:				; implementation errors (overclocked CPUs, timing errors in FPGA cores, that
    8:				; kind of thing).
    9:				;
   10:				; The program is not yet ready to run on actual hardware (UART interface).
   11:				;
   12:				; For a full verification of the instruction set, an instruction set exerciser
   13:				; such as 'zexall' for the Z80 would be more suitable. This one is too weak.
   14:				;
   15:				; The program is meant to run in actual hardware or on a simulated environment.
   16:				; In the latter case you can use the co-simulation features of the light52
   17:				; project to pinpoint bugs.
   18:				;
   19:				; FIXME add assembly option to run tests in an (possibly infinite) loop.
   20:				;-------------------------------------------------------------------------------
   21:				; Major limitations:
   22:				;   1.- PSW is not checked for undue changes.
   23:				;   2.- <#imm> instructions are tested with one imm value only.
   24:				;   3.- <rel> jumps tested with small values (not near corner values).
   25:				;   4.- <bit> tested on 1 byte only, on 2 bits only.
   26:				;   5.- BCD instructions (DA, XCHG) not tested at all.
   27:				;
   28:				; Note there are too many limitations to list. Use this test bench as a first
   29:				; approximation only. If your CPU fails this test, it must be dead!
   30:				;-------------------------------------------------------------------------------
   31:
   32:				        ; Include the definitions for the light52 derivative
   33:				        $nomod51
   34:				        $include (light52.mcu)
   35: 1			;   Light52 processor definition file (for ASEM-51 assembler)
   36: 1			;   =========================================================
   37: 1
   38: 1	N	 80	P0          DATA        080H
   39: 1	N	 81	SP          DATA        081H
   40: 1	N	 82	DPL         DATA        082H
   41: 1	N	 83	DPH         DATA        083H
   42: 1			;PCON      DATA        087H
   43: 1	N	 88	TSTAT       DATA        088H

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   44: 1			;TMOD      DATA        089H
   45: 1	N	 8C	TL          DATA        08CH
   46: 1	N	 8D	TH          DATA        08DH
   47: 1	N	 8E	TCL         DATA        08EH
   48: 1	N	 8F	TCH         DATA        08FH
   49: 1	N	 90	P1          DATA        090H
   50: 1	N	 98	SCON        DATA        098H
   51: 1	N	 99	SBUF        DATA        099H
   52: 1	N	 A0	P2          DATA        0A0H
   53: 1	N	 A8	IE          DATA        0A8H
   54: 1	N	 B0	P3          DATA        0B0H
   55: 1			;IP        DATA        0B8H
   56: 1	N	 C0	EXTINT0     DATA        0C0H
   57: 1	N	 D0	PSW         DATA        0D0H
   58: 1	N	 E0	ACC         DATA        0E0H
   59: 1	N	 F0	B           DATA        0F0H
   60: 1
   61: 1			; TSTAT flags
   62: 1	N	 88	T0IRQ       BIT         088H
   63: 1	N	 8C	T0ARL       BIT         08CH
   64: 1	N	 8D	T0CEN       BIT         08DH
   65: 1
   66: 1			; IE flags
   67: 1	N	 A8	EX0         BIT         0A8H
   68: 1	N	 A9	ET0         BIT         0A9H
   69: 1			;EX1         BIT        0AAH
   70: 1			;ET1         BIT        0ABH
   71: 1	N	 AC	ES          BIT         0ACH
   72: 1			;ET2         BIT        0ADH
   73: 1	N	 AF	EA          BIT         0AFH
   74: 1
   75: 1			; SCON flags
   76: 1	N	 98	TXIRQ       BIT         098H
   77: 1	N	 99	RXIRQ       BIT         099H
   78: 1	N	 9C	TXRDY       BIT         09CH
   79: 1	N	 9D	RXRDY       BIT         09DH
   80: 1
   81: 1			; PSW flags
   82: 1	N	 D0	P           BIT        0D0H
   83: 1	N	 D2	OV          BIT        0D2H
   84: 1	N	 D3	RS0         BIT        0D3H
   85: 1	N	 D4	RS1         BIT        0D4H
   86: 1	N	 D5	F0          BIT        0D5H
   87: 1	N	 D6	AC          BIT        0D6H
   88: 1	N	 D7	CY          BIT        0D7H
   89: 1
   90: 1			; Interrupt vectors
   91: 1	N      0000	RESET       CODE       000H
   92: 1	N      0003	EXTI0       CODE       003H
   93: 1	N      000B	TIMER0      CODE       00BH
   94: 1	N      0013	EXTI1       CODE       013H
   95: 1	N      001B	TIMER1      CODE       01BH
   96: 1	N      0023	SINT        CODE       023H
   97: 1	N      002B	TIMER2      CODE       02BH
   98:
   99:				        ;-- Parameters common to all tests -------------------------------------

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

  100:
  101:		N      0060	dir0    set     060h                ; Address used in direct addressing tests
  102:		N      0061	dir1    set     061h                ; Address used in direct addressing tests
  103:		N      006E	fail    set     06eh                ; (IDATA) set to 1 upon test failure
  104:		N      0070	saved_psw set   070h                ; (IDATA) temp store for PSW value
  105:		N      009F	stack0  set     09fh                ; (IDATA) stack addr used for push/pop tests
  106:
  107:
  108:				        ;-- Macros common to all tests -----------------------------------------
  109:
  110:				        ; putc: send character to console (UART)
  111:				        ; If you change this macro, make sure it DOES NOT MODIFY PSW!
  112:				putc    macro   character
  113:				        local   putc_loop
  114:				putc_loop:
  115:				        ;jnb     SCON.1,putc_loop
  116:				        ;clr     SCON.1
  117:				        mov     SBUF,character
  118:				        endm
  119:
  120:				        ; put_crlf: send CR+LF to console
  121:				put_crlf macro
  122:				        putc    #13
  123:				        putc    #10
  124:				        endm
  125:
  126:				        ;eot char, label: 'end of test' to be used at the end of all tests.
  127:				        ; If you run into this macro it will print character 'char' and
  128:				        ; continue.
  129:				        ; If you jump to label 'label', it will instead print char '?' and
  130:				        ; will set variable 'fail' to 1, then it will continue.
  131:				eot     macro   char,label
  132:				        local   skip
  133:				        putc    #char
  134:				        sjmp    skip
  135:				label:  putc    #'?'
  136:				        mov     fail,#001h
  137:				skip:
  138:				        endm
  139:
  140:				        ;-- Reset & interrupt vectors ------------------------------------------
  141:
  142:		N      0000	        org     00h
  143:	  0000	02 00 30	        ljmp    start               ; We'll assume LJMP works this far...
  144:		N      0003	        org     03h
  145:		N      000B	        org     0bh
  146:		N      0013	        org     13h
  147:		N      001B	        org     1bh
  148:		N      0023	        org     23h
  149:
  150:
  151:				        ;-- Main test program --------------------------------------------------
  152:		N      0030	        org     30h
  153:	  0030			start:
  154:				        ; Initialize serial port
  155:				        ;(leave it with the default configuration: 19200-8-N-1)

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

  156:				        ;mov     TMOD,#20h           ; C/T = 0, Mode = 2
  157:				        ;mov     TH1,#0fdh           ; 9600 bauds @11.xxx MHz
  158:				        ;mov     TCON,#40h           ; Enable T1
  159:				        ;mov     SCON,#52h           ; 8/N/1, TI enabled
  160:
  161:				        ; Clear failure flag
  162:	  0030	75 6E 00	        mov     fail,#000h
  163:
  164:
  165:				        ;-- Test series A ------------------------------------------------------
  166:				        ; Test the basic opcodes needed in later tests:
  167:				        ; a.- Serial port initialization is OK
  168:				        ; a.- Bootstrap instructions work as used
  169:				        ; b.- <SJMP rel> (small positive rel only)
  170:				        ; c.- ACC can be loaded with direct mode addressing (as an SFR)
  171:				        ; c.- <CJNE a,#imm,rel>
  172:				        ; d.- <DJNZ dir, rel> (small positive rel only)
  173:				        ; e.- <MOV  a,dir>
  174:				        ; Note that one instance of LJMP has been tested too.
  175:
  176:				        putc    #'A'                ; start of test series
  177+ 1  0033			??0000:
  178+ 1			        ;jnb     SCON.1,putc_loop
  179+ 1			        ;clr     SCON.1
  180+ 1  0033	75 99 41	        mov     SBUF,#'A'
  181:
  182:				        ; If we arrive here at all, and you see the chars in the
  183:				        ; terminal, the A.a test has passed
  184:				        putc    #'a'
  185+ 1  0036			??0001:
  186+ 1			        ;jnb     SCON.1,putc_loop
  187+ 1			        ;clr     SCON.1
  188+ 1  0036	75 99 61	        mov     SBUF,#'a'
  189:
  190:	  0039	80 06		        sjmp    ta_b0               ; <SJMP rel> with very small positive rel
  191:				        putc    #'?'
  192+ 1  003B			??0002:
  193+ 1			        ;jnb     SCON.1,putc_loop
  194+ 1			        ;clr     SCON.1
  195+ 1  003B	75 99 3F	        mov     SBUF,#'?'
  196:	  003E	75 6E 01	        mov     fail,#001h
  197:	  0041			ta_b0:  putc    #'b'
  198+ 1  0041			??0003:
  199+ 1			        ;jnb     SCON.1,putc_loop
  200+ 1			        ;clr     SCON.1
  201+ 1  0041	75 99 62	        mov     SBUF,#'b'
  202:
  203:
  204:	  0044	80 05		ta_c0:  sjmp    ta_c1
  205:	  0046			ta_c3:  putc    #'c'
  206+ 1  0046			??0004:
  207+ 1			        ;jnb     SCON.1,putc_loop
  208+ 1			        ;clr     SCON.1
  209+ 1  0046	75 99 63	        mov     SBUF,#'c'
  210:	  0049	80 18		        sjmp    ta_c4
  211:	  004B	75 E0 5A	ta_c1:  mov     0e0h,#5ah           ; load A as SFR

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



 Line  I  Addr  Code            Source

  212:	  004E	B4 5A F5	        cjne    a,#5ah,ta_c3        ; test cjne with == args...
  213:	  0051	B4 7A 06	        cjne    a,#7ah,ta_c2        ; ...with != args, rel>0...
  214:				        putc    #'?'
  215+ 1  0054			??0005:
  216+ 1			        ;jnb     SCON.1,putc_loop
  217+ 1			        ;clr     SCON.1
  218+ 1  0054	75 99 3F	        mov     SBUF,#'?'
  219:	  0057	75 6E 01	        mov     fail,#001h
  220:	  005A	B4 7A E9	ta_c2:  cjne    a,#7ah,ta_c3        ; ...and with != args, rel<0
  221:				        putc    #'?'
  222+ 1  005D			??0006:
  223+ 1			        ;jnb     SCON.1,putc_loop
  224+ 1			        ;clr     SCON.1
  225+ 1  005D	75 99 3F	        mov     SBUF,#'?'
  226:	  0060	75 6E 01	        mov     fail,#001h
  227:	  0063			ta_c4:
  228:
  229:	  0063	75 60 02	        mov     dir0,#02h
  230:	  0066	D5 60 06	        djnz    dir0,ta_d1
  231:				        putc    #'?'
  232+ 1  0069			??0007:
  233+ 1			        ;jnb     SCON.1,putc_loop
  234+ 1			        ;clr     SCON.1
  235+ 1  0069	75 99 3F	        mov     SBUF,#'?'
  236:	  006C	75 6E 01	        mov     fail,#001h
  237:	  006F	D5 60 05	ta_d1:  djnz    dir0,ta_d2
  238:
  239:				        eot     'd',ta_d2
  240+ 1			        putc    #'d'
  241+ 2  0072			??0009:
  242+ 2			        ;jnb     SCON.1,putc_loop
  243+ 2			        ;clr     SCON.1
  244+ 2  0072	75 99 64	        mov     SBUF,#'d'
  245+ 1  0075	80 06		        sjmp    ??0008
  246+ 1  0077			ta_d2:  putc    #'?'
  247+ 2  0077			??0010:
  248+ 2			        ;jnb     SCON.1,putc_loop
  249+ 2			        ;clr     SCON.1
  250+ 2  0077	75 99 3F	        mov     SBUF,#'?'
  251+ 1  007A	75 6E 01	        mov     fail,#001h
  252+ 1  007D			??0008:
  253:
  254:	  007D	75 60 A5	        mov     dir0,#0a5h          ; test mov a,dir
  255:	  0080	E5 60		        mov     a,dir0
  256:	  0082	B4 A5 05	        cjne    a,#0a5h,ta_e1
  257:
  258:				        eot     'e',ta_e1
  259+ 1			        putc    #'e'
  260+ 2  0085			??0012:
  261+ 2			        ;jnb     SCON.1,putc_loop
  262+ 2			        ;clr     SCON.1
  263+ 2  0085	75 99 65	        mov     SBUF,#'e'
  264+ 1  0088	80 06		        sjmp    ??0011
  265+ 1  008A			ta_e1:  putc    #'?'
  266+ 2  008A			??0013:
  267+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6



 Line  I  Addr  Code            Source

  268+ 2			        ;clr     SCON.1
  269+ 2  008A	75 99 3F	        mov     SBUF,#'?'
  270+ 1  008D	75 6E 01	        mov     fail,#001h
  271+ 1  0090			??0011:
  272:
  273:				        put_crlf                    ; end of test series
  274+ 1			        putc    #13
  275+ 2  0090			??0014:
  276+ 2			        ;jnb     SCON.1,putc_loop
  277+ 2			        ;clr     SCON.1
  278+ 2  0090	75 99 0D	        mov     SBUF,#13
  279+ 1			        putc    #10
  280+ 2  0093			??0015:
  281+ 2			        ;jnb     SCON.1,putc_loop
  282+ 2			        ;clr     SCON.1
  283+ 2  0093	75 99 0A	        mov     SBUF,#10
  284:
  285:				        ;-- Test series B ------------------------------------------------------
  286:				        ; Test CJNE plus a few aux opcodes
  287:				        ; a.- <MOV Rn, #imm>
  288:				        ; a.- <MOV a, Rn>
  289:				        ; b.- <JC rel>, <JNC rel>
  290:				        ; c.- <CJNE Rn, #imm, rel>
  291:				        ; d.- <SETB C>, <CLR C>, <CPL C>
  292:				        ; e.- <MOV @Ri, #imm>
  293:				        ; f.- <CJNE @Ri, #imm, rel>
  294:				        ; g.- <CJNE A, dir, rel>
  295:
  296:				        putc    #'B'                ; start of test series
  297+ 1  0096			??0016:
  298+ 1			        ;jnb     SCON.1,putc_loop
  299+ 1			        ;clr     SCON.1
  300+ 1  0096	75 99 42	        mov     SBUF,#'B'
  301:
  302:				tb_ma   macro   reg,val
  303:				        mov     reg,val
  304:				        mov     a,reg
  305:				        cjne    a,val,tb_a1
  306:				        endm
  307:
  308:				        tb_ma   r0,#081h
  309+ 1  0099	78 81		        mov     r0,#081h
  310+ 1  009B	E8		        mov     a,r0
  311+ 1  009C	B4 81 2F	        cjne    a,#081h,tb_a1
  312:				        tb_ma   r1,#043h
  313+ 1  009F	79 43		        mov     r1,#043h
  314+ 1  00A1	E9		        mov     a,r1
  315+ 1  00A2	B4 43 29	        cjne    a,#043h,tb_a1
  316:				        tb_ma   r2,#027h
  317+ 1  00A5	7A 27		        mov     r2,#027h
  318+ 1  00A7	EA		        mov     a,r2
  319+ 1  00A8	B4 27 23	        cjne    a,#027h,tb_a1
  320:				        tb_ma   r3,#0c2h
  321+ 1  00AB	7B C2		        mov     r3,#0c2h
  322+ 1  00AD	EB		        mov     a,r3
  323+ 1  00AE	B4 C2 1D	        cjne    a,#0c2h,tb_a1

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 7



 Line  I  Addr  Code            Source

  324:				        tb_ma   r4,#0f1h
  325+ 1  00B1	7C F1		        mov     r4,#0f1h
  326+ 1  00B3	EC		        mov     a,r4
  327+ 1  00B4	B4 F1 17	        cjne    a,#0f1h,tb_a1
  328:				        tb_ma   r5,#004h
  329+ 1  00B7	7D 04		        mov     r5,#004h
  330+ 1  00B9	ED		        mov     a,r5
  331+ 1  00BA	B4 04 11	        cjne    a,#004h,tb_a1
  332:				        tb_ma   r6,#092h
  333+ 1  00BD	7E 92		        mov     r6,#092h
  334+ 1  00BF	EE		        mov     a,r6
  335+ 1  00C0	B4 92 0B	        cjne    a,#092h,tb_a1
  336:				        tb_ma   r7,#01fh
  337+ 1  00C3	7F 1F		        mov     r7,#01fh
  338+ 1  00C5	EF		        mov     a,r7
  339+ 1  00C6	B4 1F 05	        cjne    a,#01fh,tb_a1
  340:
  341:				        eot     'a',tb_a1
  342+ 1			        putc    #'a'
  343+ 2  00C9			??0018:
  344+ 2			        ;jnb     SCON.1,putc_loop
  345+ 2			        ;clr     SCON.1
  346+ 2  00C9	75 99 61	        mov     SBUF,#'a'
  347+ 1  00CC	80 06		        sjmp    ??0017
  348+ 1  00CE			tb_a1:  putc    #'?'
  349+ 2  00CE			??0019:
  350+ 2			        ;jnb     SCON.1,putc_loop
  351+ 2			        ;clr     SCON.1
  352+ 2  00CE	75 99 3F	        mov     SBUF,#'?'
  353+ 1  00D1	75 6E 01	        mov     fail,#001h
  354+ 1  00D4			??0017:
  355:
  356:	  00D4	75 D0 80	        mov     PSW,#80h            ; <JC rel>, <JNC rel>
  357:	  00D7	40 06		        jc      tb_b0
  358:				        putc    #'?'
  359+ 1  00D9			??0020:
  360+ 1			        ;jnb     SCON.1,putc_loop
  361+ 1			        ;clr     SCON.1
  362+ 1  00D9	75 99 3F	        mov     SBUF,#'?'
  363:	  00DC	75 6E 01	        mov     fail,#001h
  364:	  00DF	50 07		tb_b0:  jnc     tb_b1
  365:	  00E1	75 D0 00	        mov     PSW,#00h
  366:	  00E4	40 02		        jc      tb_b1
  367:	  00E6	50 06		        jnc     tb_b2
  368:	  00E8			tb_b1:  putc    #'?'
  369+ 1  00E8			??0021:
  370+ 1			        ;jnb     SCON.1,putc_loop
  371+ 1			        ;clr     SCON.1
  372+ 1  00E8	75 99 3F	        mov     SBUF,#'?'
  373:	  00EB	75 6E 01	        mov     fail,#001h
  374:	  00EE			tb_b2:  putc    #'b'
  375+ 1  00EE			??0022:
  376+ 1			        ;jnb     SCON.1,putc_loop
  377+ 1			        ;clr     SCON.1
  378+ 1  00EE	75 99 62	        mov     SBUF,#'b'
  379:

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 8



 Line  I  Addr  Code            Source

  380:				tb_mc   macro   reg,val
  381:				        local   tb_mc0
  382:				        local   tb_mc1
  383:				        mov     reg,val+1
  384:				        cjne    reg,val,tb_mc0
  385:				        putc    #'?'
  386:				        mov     fail,#001h
  387:				tb_mc1: mov     reg,val
  388:				tb_mc0: cjne    reg,val,tb_mc1
  389:				        endm
  390:
  391:				        tb_mc   r0,#091h            ; first test the jumps for all Rn regs
  392+ 1  00F1	78 92		        mov     r0,#091h+1
  393+ 1  00F3	B8 91 08	        cjne    r0,#091h,??0023
  394+ 1			        putc    #'?'
  395+ 2  00F6			??0025:
  396+ 2			        ;jnb     SCON.1,putc_loop
  397+ 2			        ;clr     SCON.1
  398+ 2  00F6	75 99 3F	        mov     SBUF,#'?'
  399+ 1  00F9	75 6E 01	        mov     fail,#001h
  400+ 1  00FC	78 91		??0024: mov     r0,#091h
  401+ 1  00FE	B8 91 FB	??0023: cjne    r0,#091h,??0024
  402:				        tb_mc   r1,#0a2h
  403+ 1  0101	79 A3		        mov     r1,#0a2h+1
  404+ 1  0103	B9 A2 08	        cjne    r1,#0a2h,??0026
  405+ 1			        putc    #'?'
  406+ 2  0106			??0028:
  407+ 2			        ;jnb     SCON.1,putc_loop
  408+ 2			        ;clr     SCON.1
  409+ 2  0106	75 99 3F	        mov     SBUF,#'?'
  410+ 1  0109	75 6E 01	        mov     fail,#001h
  411+ 1  010C	79 A2		??0027: mov     r1,#0a2h
  412+ 1  010E	B9 A2 FB	??0026: cjne    r1,#0a2h,??0027
  413:				        tb_mc   r2,#0b3h
  414+ 1  0111	7A B4		        mov     r2,#0b3h+1
  415+ 1  0113	BA B3 08	        cjne    r2,#0b3h,??0029
  416+ 1			        putc    #'?'
  417+ 2  0116			??0031:
  418+ 2			        ;jnb     SCON.1,putc_loop
  419+ 2			        ;clr     SCON.1
  420+ 2  0116	75 99 3F	        mov     SBUF,#'?'
  421+ 1  0119	75 6E 01	        mov     fail,#001h
  422+ 1  011C	7A B3		??0030: mov     r2,#0b3h
  423+ 1  011E	BA B3 FB	??0029: cjne    r2,#0b3h,??0030
  424:				        tb_mc   r3,#0c4h
  425+ 1  0121	7B C5		        mov     r3,#0c4h+1
  426+ 1  0123	BB C4 08	        cjne    r3,#0c4h,??0032
  427+ 1			        putc    #'?'
  428+ 2  0126			??0034:
  429+ 2			        ;jnb     SCON.1,putc_loop
  430+ 2			        ;clr     SCON.1
  431+ 2  0126	75 99 3F	        mov     SBUF,#'?'
  432+ 1  0129	75 6E 01	        mov     fail,#001h
  433+ 1  012C	7B C4		??0033: mov     r3,#0c4h
  434+ 1  012E	BB C4 FB	??0032: cjne    r3,#0c4h,??0033
  435:				        tb_mc   r4,#0d5h

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 9



 Line  I  Addr  Code            Source

  436+ 1  0131	7C D6		        mov     r4,#0d5h+1
  437+ 1  0133	BC D5 08	        cjne    r4,#0d5h,??0035
  438+ 1			        putc    #'?'
  439+ 2  0136			??0037:
  440+ 2			        ;jnb     SCON.1,putc_loop
  441+ 2			        ;clr     SCON.1
  442+ 2  0136	75 99 3F	        mov     SBUF,#'?'
  443+ 1  0139	75 6E 01	        mov     fail,#001h
  444+ 1  013C	7C D5		??0036: mov     r4,#0d5h
  445+ 1  013E	BC D5 FB	??0035: cjne    r4,#0d5h,??0036
  446:				        tb_mc   r5,#0e6h
  447+ 1  0141	7D E7		        mov     r5,#0e6h+1
  448+ 1  0143	BD E6 08	        cjne    r5,#0e6h,??0038
  449+ 1			        putc    #'?'
  450+ 2  0146			??0040:
  451+ 2			        ;jnb     SCON.1,putc_loop
  452+ 2			        ;clr     SCON.1
  453+ 2  0146	75 99 3F	        mov     SBUF,#'?'
  454+ 1  0149	75 6E 01	        mov     fail,#001h
  455+ 1  014C	7D E6		??0039: mov     r5,#0e6h
  456+ 1  014E	BD E6 FB	??0038: cjne    r5,#0e6h,??0039
  457:				        tb_mc   r6,#0f7h
  458+ 1  0151	7E F8		        mov     r6,#0f7h+1
  459+ 1  0153	BE F7 08	        cjne    r6,#0f7h,??0041
  460+ 1			        putc    #'?'
  461+ 2  0156			??0043:
  462+ 2			        ;jnb     SCON.1,putc_loop
  463+ 2			        ;clr     SCON.1
  464+ 2  0156	75 99 3F	        mov     SBUF,#'?'
  465+ 1  0159	75 6E 01	        mov     fail,#001h
  466+ 1  015C	7E F7		??0042: mov     r6,#0f7h
  467+ 1  015E	BE F7 FB	??0041: cjne    r6,#0f7h,??0042
  468:				        tb_mc   r7,#008h
  469+ 1  0161	7F 09		        mov     r7,#008h+1
  470+ 1  0163	BF 08 08	        cjne    r7,#008h,??0044
  471+ 1			        putc    #'?'
  472+ 2  0166			??0046:
  473+ 2			        ;jnb     SCON.1,putc_loop
  474+ 2			        ;clr     SCON.1
  475+ 2  0166	75 99 3F	        mov     SBUF,#'?'
  476+ 1  0169	75 6E 01	        mov     fail,#001h
  477+ 1  016C	7F 08		??0045: mov     r7,#008h
  478+ 1  016E	BF 08 FB	??0044: cjne    r7,#008h,??0045
  479:
  480:	  0171	75 D0 00	tb_c0:  mov     PSW,#00h            ; now test the C flag with a single Rn reg
  481:	  0174	78 34		        mov     r0,#034h
  482:	  0176	B8 35 00	        cjne    r0,#035h,tb_c1
  483:	  0179	50 0F		tb_c1:  jnc     tb_c2
  484:	  017B	B8 34 00	        cjne    r0,#034h,tb_c3
  485:	  017E	40 0A		tb_c3:  jc      tb_c2
  486:	  0180	B8 33 00	        cjne    r0,#033h,tb_c4
  487:	  0183	40 05		tb_c4:  jc      tb_c2
  488:
  489:				        eot     'c',tb_c2
  490+ 1			        putc    #'c'
  491+ 2  0185			??0048:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 10



 Line  I  Addr  Code            Source

  492+ 2			        ;jnb     SCON.1,putc_loop
  493+ 2			        ;clr     SCON.1
  494+ 2  0185	75 99 63	        mov     SBUF,#'c'
  495+ 1  0188	80 06		        sjmp    ??0047
  496+ 1  018A			tb_c2:  putc    #'?'
  497+ 2  018A			??0049:
  498+ 2			        ;jnb     SCON.1,putc_loop
  499+ 2			        ;clr     SCON.1
  500+ 2  018A	75 99 3F	        mov     SBUF,#'?'
  501+ 1  018D	75 6E 01	        mov     fail,#001h
  502+ 1  0190			??0047:
  503:
  504:	  0190	75 D0 80	        mov     PSW,#80h            ; test C set, reset and complement
  505:	  0193	C3		        clr     c
  506:	  0194	40 0B		        jc      tb_d0
  507:	  0196	D3		        setb    c
  508:	  0197	50 08		        jnc     tb_d0
  509:	  0199	B3		        cpl     c
  510:	  019A	40 05		        jc      tb_d0
  511:
  512:				        eot     'd',tb_d0
  513+ 1			        putc    #'d'
  514+ 2  019C			??0051:
  515+ 2			        ;jnb     SCON.1,putc_loop
  516+ 2			        ;clr     SCON.1
  517+ 2  019C	75 99 64	        mov     SBUF,#'d'
  518+ 1  019F	80 06		        sjmp    ??0050
  519+ 1  01A1			tb_d0:  putc    #'?'
  520+ 2  01A1			??0052:
  521+ 2			        ;jnb     SCON.1,putc_loop
  522+ 2			        ;clr     SCON.1
  523+ 2  01A1	75 99 3F	        mov     SBUF,#'?'
  524+ 1  01A4	75 6E 01	        mov     fail,#001h
  525+ 1  01A7			??0050:
  526:
  527:				tb_me   macro   reg
  528:				        mov     reg,#dir0
  529:				        mov     dir0,#12h
  530:				        mov     a,dir0
  531:				        cjne    a,#012h,tb_e0
  532:				        mov     @reg,#0f5h
  533:				        mov     a,dir0
  534:				        cjne    a,#0f5h,tb_e0
  535:				        endm
  536:
  537:				        tb_me   r0                  ; test <mov @ri, #imm> with both regs
  538+ 1  01A7	78 60		        mov     r0,#dir0
  539+ 1  01A9	75 60 12	        mov     dir0,#12h
  540+ 1  01AC	E5 60		        mov     a,dir0
  541+ 1  01AE	B4 12 1D	        cjne    a,#012h,tb_e0
  542+ 1  01B1	76 F5		        mov     @r0,#0f5h
  543+ 1  01B3	E5 60		        mov     a,dir0
  544+ 1  01B5	B4 F5 16	        cjne    a,#0f5h,tb_e0
  545:				        tb_me   r1
  546+ 1  01B8	79 60		        mov     r1,#dir0
  547+ 1  01BA	75 60 12	        mov     dir0,#12h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 11



 Line  I  Addr  Code            Source

  548+ 1  01BD	E5 60		        mov     a,dir0
  549+ 1  01BF	B4 12 0C	        cjne    a,#012h,tb_e0
  550+ 1  01C2	77 F5		        mov     @r1,#0f5h
  551+ 1  01C4	E5 60		        mov     a,dir0
  552+ 1  01C6	B4 F5 05	        cjne    a,#0f5h,tb_e0
  553:
  554:				        eot     'e',tb_e0
  555+ 1			        putc    #'e'
  556+ 2  01C9			??0054:
  557+ 2			        ;jnb     SCON.1,putc_loop
  558+ 2			        ;clr     SCON.1
  559+ 2  01C9	75 99 65	        mov     SBUF,#'e'
  560+ 1  01CC	80 06		        sjmp    ??0053
  561+ 1  01CE			tb_e0:  putc    #'?'
  562+ 2  01CE			??0055:
  563+ 2			        ;jnb     SCON.1,putc_loop
  564+ 2			        ;clr     SCON.1
  565+ 2  01CE	75 99 3F	        mov     SBUF,#'?'
  566+ 1  01D1	75 6E 01	        mov     fail,#001h
  567+ 1  01D4			??0053:
  568:
  569:				tb_mf   macro   reg,val
  570:				        local   tb_mf0
  571:				        local   tb_mf1
  572:				        mov     reg,#30h
  573:				        mov     @reg,val+1
  574:				        cjne    @reg,val,tb_mf0
  575:				        putc    #'?'
  576:				        mov     fail,#001h
  577:				tb_mf1: mov     @reg,val
  578:				tb_mf0: cjne    @reg,val,tb_mf1
  579:				        endm
  580:
  581:				        tb_mf   r0,#12h
  582+ 1  01D4	78 30		        mov     r0,#30h
  583+ 1  01D6	76 13		        mov     @r0,#12h+1
  584+ 1  01D8	B6 12 08	        cjne    @r0,#12h,??0056
  585+ 1			        putc    #'?'
  586+ 2  01DB			??0058:
  587+ 2			        ;jnb     SCON.1,putc_loop
  588+ 2			        ;clr     SCON.1
  589+ 2  01DB	75 99 3F	        mov     SBUF,#'?'
  590+ 1  01DE	75 6E 01	        mov     fail,#001h
  591+ 1  01E1	76 12		??0057: mov     @r0,#12h
  592+ 1  01E3	B6 12 FB	??0056: cjne    @r0,#12h,??0057
  593:				        tb_mf   r1,#34h
  594+ 1  01E6	79 30		        mov     r1,#30h
  595+ 1  01E8	77 35		        mov     @r1,#34h+1
  596+ 1  01EA	B7 34 08	        cjne    @r1,#34h,??0059
  597+ 1			        putc    #'?'
  598+ 2  01ED			??0061:
  599+ 2			        ;jnb     SCON.1,putc_loop
  600+ 2			        ;clr     SCON.1
  601+ 2  01ED	75 99 3F	        mov     SBUF,#'?'
  602+ 1  01F0	75 6E 01	        mov     fail,#001h
  603+ 1  01F3	77 34		??0060: mov     @r1,#34h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 12



 Line  I  Addr  Code            Source

  604+ 1  01F5	B7 34 FB	??0059: cjne    @r1,#34h,??0060
  605:
  606:	  01F8	78 30		tb_f0:  mov     r0,#30h             ; now test the C flag with a single Rn reg
  607:	  01FA	C3		        clr     c
  608:	  01FB	76 34		        mov     @r0,#034h
  609:	  01FD	B6 35 00	        cjne    @r0,#035h,tb_f1
  610:	  0200	50 0F		tb_f1:  jnc     tb_f2
  611:	  0202	B6 34 00	        cjne    @r0,#034h,tb_f3
  612:	  0205	40 0A		tb_f3:  jc      tb_f2
  613:	  0207	B6 33 00	        cjne    @r0,#033h,tb_f4
  614:	  020A	40 05		tb_f4:  jc      tb_f2
  615:
  616:				        eot     'f',tb_f2
  617+ 1			        putc    #'f'
  618+ 2  020C			??0063:
  619+ 2			        ;jnb     SCON.1,putc_loop
  620+ 2			        ;clr     SCON.1
  621+ 2  020C	75 99 66	        mov     SBUF,#'f'
  622+ 1  020F	80 06		        sjmp    ??0062
  623+ 1  0211			tb_f2:  putc    #'?'
  624+ 2  0211			??0064:
  625+ 2			        ;jnb     SCON.1,putc_loop
  626+ 2			        ;clr     SCON.1
  627+ 2  0211	75 99 3F	        mov     SBUF,#'?'
  628+ 1  0214	75 6E 01	        mov     fail,#001h
  629+ 1  0217			??0062:
  630:
  631:	  0217	75 60 C0	        mov     dir0,#0c0h
  632:	  021A	75 31 C1	        mov     031h,#0c1h
  633:	  021D	75 32 C2	        mov     032h,#0c2h
  634:	  0220	C3		        clr     c
  635:	  0221	74 C1		        mov     a,#0c1h
  636:	  0223	B5 31 1D	        cjne    a,031h,tb_g0
  637:	  0226	40 1B		        jc      tb_g0
  638:	  0228	B5 32 06	        cjne    a,032h,tb_g1
  639:				        putc    #'?'
  640+ 1  022B			??0065:
  641+ 1			        ;jnb     SCON.1,putc_loop
  642+ 1			        ;clr     SCON.1
  643+ 1  022B	75 99 3F	        mov     SBUF,#'?'
  644:	  022E	75 6E 01	        mov     fail,#001h
  645:	  0231	50 10		tb_g1:  jnc     tb_g0
  646:	  0233	B5 60 06	        cjne    a,dir0,tb_g2
  647:				        putc    #'$'
  648+ 1  0236			??0066:
  649+ 1			        ;jnb     SCON.1,putc_loop
  650+ 1			        ;clr     SCON.1
  651+ 1  0236	75 99 24	        mov     SBUF,#'$'
  652:	  0239	75 6E 01	        mov     fail,#001h
  653:	  023C	40 05		tb_g2:  jc      tb_g0
  654:
  655:				        eot     'g',tb_g0
  656+ 1			        putc    #'g'
  657+ 2  023E			??0068:
  658+ 2			        ;jnb     SCON.1,putc_loop
  659+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 13



 Line  I  Addr  Code            Source

  660+ 2  023E	75 99 67	        mov     SBUF,#'g'
  661+ 1  0241	80 06		        sjmp    ??0067
  662+ 1  0243			tb_g0:  putc    #'?'
  663+ 2  0243			??0069:
  664+ 2			        ;jnb     SCON.1,putc_loop
  665+ 2			        ;clr     SCON.1
  666+ 2  0243	75 99 3F	        mov     SBUF,#'?'
  667+ 1  0246	75 6E 01	        mov     fail,#001h
  668+ 1  0249			??0067:
  669:
  670:				        put_crlf                    ; end of test series
  671+ 1			        putc    #13
  672+ 2  0249			??0070:
  673+ 2			        ;jnb     SCON.1,putc_loop
  674+ 2			        ;clr     SCON.1
  675+ 2  0249	75 99 0D	        mov     SBUF,#13
  676+ 1			        putc    #10
  677+ 2  024C			??0071:
  678+ 2			        ;jnb     SCON.1,putc_loop
  679+ 2			        ;clr     SCON.1
  680+ 2  024C	75 99 0A	        mov     SBUF,#10
  681:
  682:
  683:				        ;-- Test series C ------------------------------------------------------
  684:				        ; Bit operations and the rest of the conditional rel jumps
  685:				        ; The following tests will use a bit address within the IRAM
  686:				        ; a.- <JB bit, rel>, <JNB bit, rel>
  687:				        ; b.- <MOV A, #imm>
  688:				        ; c.- <JZ rel>, <JNZ rel>
  689:				        ; d.- <CLR bit>, <CPL bit>
  690:				        ; e.- <ANL C, bit>, <ORL C, bit>
  691:				        ; e.- <ANL C, /bit>, <ORL C, /bit>
  692:				        ; f.- <MOV C,bit>, <MOV bit, C>
  693:				        ; g.- <SETB bit>
  694:				        ; h.- <JBC bit>
  695:				        ; The following tests are the same as above except a bit address within
  696:				        ; SFR B is used.
  697:				        ; i.- <JB bit, rel>, <JNB bit, rel>
  698:				        ; j.- <CLR bit>, <CPL bit>
  699:				        ; k.- <ANL C, bit>, <ORL C, bit>
  700:				        ; k.- <ANL C, /bit>, <ORL C, /bit>
  701:				        ; l.- <MOV C,bit>, <MOV bit, C>
  702:				        ; m.- <SETB bit>
  703:				        ; n.- <JBC bit>
  704:
  705:				        putc    #'C'                ; start of test series
  706+ 1  024F			??0072:
  707+ 1			        ;jnb     SCON.1,putc_loop
  708+ 1			        ;clr     SCON.1
  709+ 1  024F	75 99 43	        mov     SBUF,#'C'
  710:
  711:	  0252	75 2F 80	        mov     02fh,#80h           ; We'll be testing bits 2F.7 and 2F.6
  712:	  0255	80 0E		        sjmp    tc_a0
  713:	  0257	30 7F 1C	tc_a1:  jnb     07fh,tc_a3          ; JNB jumps not on bit set
  714:	  025A	30 7E 11	        jnb     07eh,tc_a2          ; JNB jumps on bit clear
  715:				        putc    #'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 14



 Line  I  Addr  Code            Source

  716+ 1  025D			??0073:
  717+ 1			        ;jnb     SCON.1,putc_loop
  718+ 1			        ;clr     SCON.1
  719+ 1  025D	75 99 3F	        mov     SBUF,#'?'
  720:	  0260	75 6E 01	        mov     fail,#001h
  721:	  0263	80 11		        sjmp    tc_a3
  722:	  0265	20 7F EF	tc_a0:  jb      07fh,tc_a1          ; JB jumps on bit set
  723:				        putc    #'!'
  724+ 1  0268			??0074:
  725+ 1			        ;jnb     SCON.1,putc_loop
  726+ 1			        ;clr     SCON.1
  727+ 1  0268	75 99 21	        mov     SBUF,#'!'
  728:	  026B	75 6E 01	        mov     fail,#001h
  729:	  026E	20 7E 05	tc_a2:  jb      07eh,tc_a3          ; JB jumps not on bit clear
  730:
  731:				        eot     'a',tc_a3
  732+ 1			        putc    #'a'
  733+ 2  0271			??0076:
  734+ 2			        ;jnb     SCON.1,putc_loop
  735+ 2			        ;clr     SCON.1
  736+ 2  0271	75 99 61	        mov     SBUF,#'a'
  737+ 1  0274	80 06		        sjmp    ??0075
  738+ 1  0276			tc_a3:  putc    #'?'
  739+ 2  0276			??0077:
  740+ 2			        ;jnb     SCON.1,putc_loop
  741+ 2			        ;clr     SCON.1
  742+ 2  0276	75 99 3F	        mov     SBUF,#'?'
  743+ 1  0279	75 6E 01	        mov     fail,#001h
  744+ 1  027C			??0075:
  745:
  746:	  027C	75 E0 79	        mov     0e0h,#079h          ; init acc (as sfr) with some data
  747:	  027F	B4 79 0A	        cjne    a,#079h,tc_b1
  748:	  0282	74 5A		        mov     a,#05ah             ; now load a with imm data...
  749:	  0284	B4 5A 05	        cjne    a,#05ah,tc_b1       ; ...and make sure a got the data
  750:
  751:				        eot     'b',tc_b1
  752+ 1			        putc    #'b'
  753+ 2  0287			??0079:
  754+ 2			        ;jnb     SCON.1,putc_loop
  755+ 2			        ;clr     SCON.1
  756+ 2  0287	75 99 62	        mov     SBUF,#'b'
  757+ 1  028A	80 06		        sjmp    ??0078
  758+ 1  028C			tc_b1:  putc    #'?'
  759+ 2  028C			??0080:
  760+ 2			        ;jnb     SCON.1,putc_loop
  761+ 2			        ;clr     SCON.1
  762+ 2  028C	75 99 3F	        mov     SBUF,#'?'
  763+ 1  028F	75 6E 01	        mov     fail,#001h
  764+ 1  0292			??0078:
  765:
  766:	  0292	74 80		        mov     a,#80h
  767:	  0294	80 0E		        sjmp    tc_c0
  768:	  0296	60 1B		tc_c1:  jz      tc_c3               ; JZ jumps not on acc!=0
  769:	  0298	74 00		        mov     a,#00h
  770:	  029A	60 10		        jz      tc_c2               ; JZ jumps on acc==0
  771:				        putc    #'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 15



 Line  I  Addr  Code            Source

  772+ 1  029C			??0081:
  773+ 1			        ;jnb     SCON.1,putc_loop
  774+ 1			        ;clr     SCON.1
  775+ 1  029C	75 99 3F	        mov     SBUF,#'?'
  776:	  029F	75 6E 01	        mov     fail,#001h
  777:	  02A2	80 0F		        sjmp    tc_c3
  778:	  02A4	70 F0		tc_c0:  jnz     tc_c1               ; JNZ jumps on acc!=0
  779:				        putc    #'!'
  780+ 1  02A6			??0082:
  781+ 1			        ;jnb     SCON.1,putc_loop
  782+ 1			        ;clr     SCON.1
  783+ 1  02A6	75 99 21	        mov     SBUF,#'!'
  784:	  02A9	75 6E 01	        mov     fail,#001h
  785:	  02AC	70 05		tc_c2:  jnz     tc_c3               ; JNZ jumps not on acc==0
  786:
  787:				        eot     'c',tc_c3
  788+ 1			        putc    #'c'
  789+ 2  02AE			??0084:
  790+ 2			        ;jnb     SCON.1,putc_loop
  791+ 2			        ;clr     SCON.1
  792+ 2  02AE	75 99 63	        mov     SBUF,#'c'
  793+ 1  02B1	80 06		        sjmp    ??0083
  794+ 1  02B3			tc_c3:  putc    #'?'
  795+ 2  02B3			??0085:
  796+ 2			        ;jnb     SCON.1,putc_loop
  797+ 2			        ;clr     SCON.1
  798+ 2  02B3	75 99 3F	        mov     SBUF,#'?'
  799+ 1  02B6	75 6E 01	        mov     fail,#001h
  800+ 1  02B9			??0083:
  801:
  802:
  803:	  02B9	75 2F 80	        mov     02fh,#80h           ; We'll be testing bit 2F.7
  804:	  02BC	20 7F 02	        jb      07fh,tc_d1
  805:	  02BF	80 0F		        sjmp    tc_d0
  806:	  02C1	C2 7F		tc_d1:  clr     07fh
  807:	  02C3	20 7F 0A	        jb      07fh,tc_d0
  808:	  02C6	B2 7F		        cpl     07fh
  809:	  02C8	30 7F 05	        jnb     07fh,tc_d0
  810:
  811:				        eot     'd',tc_d0
  812+ 1			        putc    #'d'
  813+ 2  02CB			??0087:
  814+ 2			        ;jnb     SCON.1,putc_loop
  815+ 2			        ;clr     SCON.1
  816+ 2  02CB	75 99 64	        mov     SBUF,#'d'
  817+ 1  02CE	80 06		        sjmp    ??0086
  818+ 1  02D0			tc_d0:  putc    #'?'
  819+ 2  02D0			??0088:
  820+ 2			        ;jnb     SCON.1,putc_loop
  821+ 2			        ;clr     SCON.1
  822+ 2  02D0	75 99 3F	        mov     SBUF,#'?'
  823+ 1  02D3	75 6E 01	        mov     fail,#001h
  824+ 1  02D6			??0086:
  825:
  826:	  02D6	75 2E 08	        mov     02eh,#08h           ; We'll be testing bits 2E.3 and 2E.2
  827:	  02D9	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 16



 Line  I  Addr  Code            Source

  828:	  02DA	82 73		        anl     c,073h              ; Test ANL in all 4 input combinations
  829:	  02DC	40 1F		        jc      tc_e0
  830:	  02DE	D3		        setb    c
  831:	  02DF	82 73		        anl     c,073h
  832:	  02E1	50 1A		        jnc     tc_e0
  833:	  02E3	B0 72		        anl     c,/072h
  834:	  02E5	50 16		        jnc     tc_e0
  835:				                                    ; CY == 1
  836:	  02E7	72 73		        orl     c,073h              ; ORL-ing with 1 should give 1
  837:	  02E9	50 12		        jnc     tc_e0
  838:	  02EB	72 72		        orl     c,072h
  839:	  02ED	50 0E		        jnc     tc_e0
  840:	  02EF	C3		        clr     c                   ; CY == 0
  841:	  02F0	72 73		        orl     c,073h              ; Now ORL c, 'bit' should give 'bit'
  842:	  02F2	50 09		        jnc     tc_e0
  843:	  02F4	A0 72		        orl     c,/072h
  844:	  02F6	50 05		        jnc     tc_e0
  845:
  846:				        eot     'e',tc_e0
  847+ 1			        putc    #'e'
  848+ 2  02F8			??0090:
  849+ 2			        ;jnb     SCON.1,putc_loop
  850+ 2			        ;clr     SCON.1
  851+ 2  02F8	75 99 65	        mov     SBUF,#'e'
  852+ 1  02FB	80 06		        sjmp    ??0089
  853+ 1  02FD			tc_e0:  putc    #'?'
  854+ 2  02FD			??0091:
  855+ 2			        ;jnb     SCON.1,putc_loop
  856+ 2			        ;clr     SCON.1
  857+ 2  02FD	75 99 3F	        mov     SBUF,#'?'
  858+ 1  0300	75 6E 01	        mov     fail,#001h
  859+ 1  0303			??0089:
  860:
  861:	  0303	75 2E 08	        mov     02eh,#08h           ; We'll be testing bits 2E.3 and 2E.2
  862:	  0306	C3		        clr     c
  863:	  0307	A2 73		        mov     c,073h
  864:	  0309	50 15		        jnc     tc_f0
  865:	  030B	A2 72		        mov     c,072h
  866:	  030D	40 11		        jc      tc_f0
  867:	  030F	C3		        clr     c
  868:	  0310	92 71		        mov     071h,c
  869:	  0312	20 71 0B	        jb      071h,tc_f0
  870:	  0315	D3		        setb    c
  871:	  0316	92 71		        mov     071h,c
  872:	  0318	30 71 05	        jnb     071h,tc_f0
  873:
  874:				        eot     'f',tc_f0
  875+ 1			        putc    #'f'
  876+ 2  031B			??0093:
  877+ 2			        ;jnb     SCON.1,putc_loop
  878+ 2			        ;clr     SCON.1
  879+ 2  031B	75 99 66	        mov     SBUF,#'f'
  880+ 1  031E	80 06		        sjmp    ??0092
  881+ 1  0320			tc_f0:  putc    #'?'
  882+ 2  0320			??0094:
  883+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 17



 Line  I  Addr  Code            Source

  884+ 2			        ;clr     SCON.1
  885+ 2  0320	75 99 3F	        mov     SBUF,#'?'
  886+ 1  0323	75 6E 01	        mov     fail,#001h
  887+ 1  0326			??0092:
  888:
  889:	  0326	75 2E 00	        mov     02eh,#00h           ; We'll be testing bits 2E.3 and 2E.2
  890:	  0329	D2 73		        setb    073h
  891:	  032B	A2 73		        mov     c,073h
  892:	  032D	50 0B		        jnc     tc_g0
  893:	  032F	D2 72		        setb    072h
  894:	  0331	A2 72		        mov     c,072h
  895:	  0333	50 05		        jnc     tc_g0
  896:
  897:				        eot     'g',tc_g0
  898+ 1			        putc    #'g'
  899+ 2  0335			??0096:
  900+ 2			        ;jnb     SCON.1,putc_loop
  901+ 2			        ;clr     SCON.1
  902+ 2  0335	75 99 67	        mov     SBUF,#'g'
  903+ 1  0338	80 06		        sjmp    ??0095
  904+ 1  033A			tc_g0:  putc    #'?'
  905+ 2  033A			??0097:
  906+ 2			        ;jnb     SCON.1,putc_loop
  907+ 2			        ;clr     SCON.1
  908+ 2  033A	75 99 3F	        mov     SBUF,#'?'
  909+ 1  033D	75 6E 01	        mov     fail,#001h
  910+ 1  0340			??0095:
  911:
  912:				        ; (better read the following code in execution order)
  913:	  0340	75 2E 08	        mov     02eh,#08h           ; We'll be testing bits 2E.3 and 2E.2
  914:	  0343	80 09		        sjmp    tc_h1               ; jump forward so we can test jump backwards
  915:	  0345	A2 73		tc_h2:  mov     c,073h              ; make sure the target bit is clear
  916:	  0347	40 0F		        jc      tc_h0
  917:	  0349	10 72 0C	        jbc     072h,tc_h0          ; JBC jumps not when target bit clear
  918:	  034C	80 05		        sjmp    tc_h3
  919:	  034E	10 73 F4	tc_h1:  jbc     073h,tc_h2          ; JBC jumps when target bit set
  920:	  0351	80 05		        sjmp    tc_h0
  921:	  0353			tc_h3:
  922:
  923:				        eot     'h',tc_h0
  924+ 1			        putc    #'h'
  925+ 2  0353			??0099:
  926+ 2			        ;jnb     SCON.1,putc_loop
  927+ 2			        ;clr     SCON.1
  928+ 2  0353	75 99 68	        mov     SBUF,#'h'
  929+ 1  0356	80 06		        sjmp    ??0098
  930+ 1  0358			tc_h0:  putc    #'?'
  931+ 2  0358			??0100:
  932+ 2			        ;jnb     SCON.1,putc_loop
  933+ 2			        ;clr     SCON.1
  934+ 2  0358	75 99 3F	        mov     SBUF,#'?'
  935+ 1  035B	75 6E 01	        mov     fail,#001h
  936+ 1  035E			??0098:
  937:
  938:	  035E	75 2F 00	        mov     02fh,#00h
  939:	  0361	75 F0 80	        mov     B,#80h              ; We'll be testing bits B.7 and B.6

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 18



 Line  I  Addr  Code            Source

  940:	  0364	80 0E		        sjmp    tc_i0
  941:	  0366	30 F7 1C	tc_i1:  jnb     B.7,tc_i3           ; JNB jumps not on bit set
  942:	  0369	30 F6 11	        jnb     B.6,tc_i2           ; JNB jumps on bit clear
  943:				        putc    #'?'
  944+ 1  036C			??0101:
  945+ 1			        ;jnb     SCON.1,putc_loop
  946+ 1			        ;clr     SCON.1
  947+ 1  036C	75 99 3F	        mov     SBUF,#'?'
  948:	  036F	75 6E 01	        mov     fail,#001h
  949:	  0372	80 11		        sjmp    tc_i3
  950:	  0374	20 F7 EF	tc_i0:  jb      B.7,tc_i1           ; JB jumps on bit set
  951:				        putc    #'!'
  952+ 1  0377			??0102:
  953+ 1			        ;jnb     SCON.1,putc_loop
  954+ 1			        ;clr     SCON.1
  955+ 1  0377	75 99 21	        mov     SBUF,#'!'
  956:	  037A	75 6E 01	        mov     fail,#001h
  957:	  037D	20 F6 05	tc_i2:  jb      B.6,tc_i3           ; JB jumps not on bit clear
  958:
  959:				        eot     'i',tc_i3
  960+ 1			        putc    #'i'
  961+ 2  0380			??0104:
  962+ 2			        ;jnb     SCON.1,putc_loop
  963+ 2			        ;clr     SCON.1
  964+ 2  0380	75 99 69	        mov     SBUF,#'i'
  965+ 1  0383	80 06		        sjmp    ??0103
  966+ 1  0385			tc_i3:  putc    #'?'
  967+ 2  0385			??0105:
  968+ 2			        ;jnb     SCON.1,putc_loop
  969+ 2			        ;clr     SCON.1
  970+ 2  0385	75 99 3F	        mov     SBUF,#'?'
  971+ 1  0388	75 6E 01	        mov     fail,#001h
  972+ 1  038B			??0103:
  973:
  974:	  038B	75 F0 80	        mov     B,#80h              ; We'll be testing bit B.7
  975:	  038E	20 F7 02	        jb      B.7,tc_j1
  976:	  0391	80 0F		        sjmp    tc_j0
  977:	  0393	C2 F7		tc_j1:  clr     B.7
  978:	  0395	20 F7 0A	        jb      B.7,tc_j0
  979:	  0398	B2 F7		        cpl     B.7
  980:	  039A	30 F7 05	        jnb     B.7,tc_j0
  981:
  982:				        eot     'j',tc_j0
  983+ 1			        putc    #'j'
  984+ 2  039D			??0107:
  985+ 2			        ;jnb     SCON.1,putc_loop
  986+ 2			        ;clr     SCON.1
  987+ 2  039D	75 99 6A	        mov     SBUF,#'j'
  988+ 1  03A0	80 06		        sjmp    ??0106
  989+ 1  03A2			tc_j0:  putc    #'?'
  990+ 2  03A2			??0108:
  991+ 2			        ;jnb     SCON.1,putc_loop
  992+ 2			        ;clr     SCON.1
  993+ 2  03A2	75 99 3F	        mov     SBUF,#'?'
  994+ 1  03A5	75 6E 01	        mov     fail,#001h
  995+ 1  03A8			??0106:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 19



 Line  I  Addr  Code            Source

  996:
  997:	  03A8	75 F0 08	        mov     B,#08h              ; We'll be testing bits B.3 and B.2
  998:	  03AB	C3		        clr     c
  999:	  03AC	82 F3		        anl     c,B.3               ; Test ANL in all 4 input combinations
 1000:	  03AE	40 1F		        jc      tc_k0
 1001:	  03B0	D3		        setb    c
 1002:	  03B1	82 F3		        anl     c,B.3
 1003:	  03B3	50 1A		        jnc     tc_k0
 1004:	  03B5	B0 F2		        anl     c,/B.2
 1005:	  03B7	50 16		        jnc     tc_k0
 1006:				                                    ; CY == 1
 1007:	  03B9	72 F3		        orl     c,B.3               ; ORL-ing with 1 should give 1
 1008:	  03BB	50 12		        jnc     tc_k0
 1009:	  03BD	72 F2		        orl     c,B.2
 1010:	  03BF	50 0E		        jnc     tc_k0
 1011:	  03C1	C3		        clr     c                   ; CY == 0
 1012:	  03C2	72 F3		        orl     c,B.3               ; Now ORL c, 'bit' should give 'bit'
 1013:	  03C4	50 09		        jnc     tc_k0
 1014:	  03C6	A0 F2		        orl     c,/B.2
 1015:	  03C8	50 05		        jnc     tc_k0
 1016:
 1017:				        eot     'k',tc_k0
 1018+ 1			        putc    #'k'
 1019+ 2  03CA			??0110:
 1020+ 2			        ;jnb     SCON.1,putc_loop
 1021+ 2			        ;clr     SCON.1
 1022+ 2  03CA	75 99 6B	        mov     SBUF,#'k'
 1023+ 1  03CD	80 06		        sjmp    ??0109
 1024+ 1  03CF			tc_k0:  putc    #'?'
 1025+ 2  03CF			??0111:
 1026+ 2			        ;jnb     SCON.1,putc_loop
 1027+ 2			        ;clr     SCON.1
 1028+ 2  03CF	75 99 3F	        mov     SBUF,#'?'
 1029+ 1  03D2	75 6E 01	        mov     fail,#001h
 1030+ 1  03D5			??0109:
 1031:
 1032:	  03D5	75 F0 08	        mov     B,#08h              ; We'll be testing bits B.3, B.2 and B.1
 1033:	  03D8	C3		        clr     c
 1034:	  03D9	A2 F3		        mov     c,B.3
 1035:	  03DB	50 15		        jnc     tc_L0
 1036:	  03DD	A2 F2		        mov     c,B.2
 1037:	  03DF	40 11		        jc      tc_L0
 1038:	  03E1	C3		        clr     c
 1039:	  03E2	92 F1		        mov     B.1,c
 1040:	  03E4	20 F1 0B	        jb      B.1,tc_L0
 1041:	  03E7	D3		        setb    c
 1042:	  03E8	92 F1		        mov     B.1,c
 1043:	  03EA	30 F1 05	        jnb     B.1,tc_L0
 1044:
 1045:				        eot     'l',tc_L0
 1046+ 1			        putc    #'l'
 1047+ 2  03ED			??0113:
 1048+ 2			        ;jnb     SCON.1,putc_loop
 1049+ 2			        ;clr     SCON.1
 1050+ 2  03ED	75 99 6C	        mov     SBUF,#'l'
 1051+ 1  03F0	80 06		        sjmp    ??0112

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 20



 Line  I  Addr  Code            Source

 1052+ 1  03F2			tc_L0:  putc    #'?'
 1053+ 2  03F2			??0114:
 1054+ 2			        ;jnb     SCON.1,putc_loop
 1055+ 2			        ;clr     SCON.1
 1056+ 2  03F2	75 99 3F	        mov     SBUF,#'?'
 1057+ 1  03F5	75 6E 01	        mov     fail,#001h
 1058+ 1  03F8			??0112:
 1059:
 1060:	  03F8	75 2E 00	        mov     02eh,#00h           ; We'll be testing bits B.3 and B.2
 1061:	  03FB	D2 F3		        setb    B.3
 1062:	  03FD	A2 F3		        mov     c,B.3
 1063:	  03FF	50 0B		        jnc     tc_m0
 1064:	  0401	D2 F2		        setb    B.2
 1065:	  0403	A2 F2		        mov     c,B.2
 1066:	  0405	50 05		        jnc     tc_m0
 1067:
 1068:				        eot     'm',tc_m0
 1069+ 1			        putc    #'m'
 1070+ 2  0407			??0116:
 1071+ 2			        ;jnb     SCON.1,putc_loop
 1072+ 2			        ;clr     SCON.1
 1073+ 2  0407	75 99 6D	        mov     SBUF,#'m'
 1074+ 1  040A	80 06		        sjmp    ??0115
 1075+ 1  040C			tc_m0:  putc    #'?'
 1076+ 2  040C			??0117:
 1077+ 2			        ;jnb     SCON.1,putc_loop
 1078+ 2			        ;clr     SCON.1
 1079+ 2  040C	75 99 3F	        mov     SBUF,#'?'
 1080+ 1  040F	75 6E 01	        mov     fail,#001h
 1081+ 1  0412			??0115:
 1082:
 1083:				        ; (better read the following code in execution order)
 1084:	  0412	75 F0 08	        mov     B,#08h              ; We'll be testing bits B.3 and B.2
 1085:	  0415	80 09		        sjmp    tc_n1               ; jump forward so we can test jump backwards
 1086:	  0417	A2 F3		tc_n2:  mov     c,B.3               ; make sure the target bit is clear
 1087:	  0419	40 0F		        jc      tc_n0
 1088:	  041B	10 F2 0C	        jbc     B.2,tc_n0           ; JBC jumps not when target bit clear
 1089:	  041E	80 05		        sjmp    tc_n3
 1090:	  0420	10 F3 F4	tc_n1:  jbc     B.3,tc_n2           ; JBC jumps when target bit set
 1091:	  0423	80 05		        sjmp    tc_n0
 1092:	  0425			tc_n3:
 1093:
 1094:				        eot     'n',tc_n0
 1095+ 1			        putc    #'n'
 1096+ 2  0425			??0119:
 1097+ 2			        ;jnb     SCON.1,putc_loop
 1098+ 2			        ;clr     SCON.1
 1099+ 2  0425	75 99 6E	        mov     SBUF,#'n'
 1100+ 1  0428	80 06		        sjmp    ??0118
 1101+ 1  042A			tc_n0:  putc    #'?'
 1102+ 2  042A			??0120:
 1103+ 2			        ;jnb     SCON.1,putc_loop
 1104+ 2			        ;clr     SCON.1
 1105+ 2  042A	75 99 3F	        mov     SBUF,#'?'
 1106+ 1  042D	75 6E 01	        mov     fail,#001h
 1107+ 1  0430			??0118:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 21



 Line  I  Addr  Code            Source

 1108:
 1109:
 1110:
 1111:				        put_crlf                    ; end of test series
 1112+ 1			        putc    #13
 1113+ 2  0430			??0121:
 1114+ 2			        ;jnb     SCON.1,putc_loop
 1115+ 2			        ;clr     SCON.1
 1116+ 2  0430	75 99 0D	        mov     SBUF,#13
 1117+ 1			        putc    #10
 1118+ 2  0433			??0122:
 1119+ 2			        ;jnb     SCON.1,putc_loop
 1120+ 2			        ;clr     SCON.1
 1121+ 2  0433	75 99 0A	        mov     SBUF,#10
 1122:
 1123:				        ;-- Test series D ------------------------------------------------------
 1124:				        ;
 1125:				        ; a.- <XRL A, #imm>
 1126:				        ; b.- <RLC A>
 1127:				        ; c.- <RRC A>
 1128:				        ; d.- <RL A>, <RR A>
 1129:				        ;
 1130:				        ; This test executes a few NOPs too but does NOT check for unintended
 1131:				        ; side effects; we intersperse the nops between the other tests to at
 1132:				        ; least have a chance to catch buggy behavior but that's all.
 1133:
 1134:
 1135:				        putc    #'D'                ; start of test series
 1136+ 1  0436			??0123:
 1137+ 1			        ;jnb     SCON.1,putc_loop
 1138+ 1			        ;clr     SCON.1
 1139+ 1  0436	75 99 44	        mov     SBUF,#'D'
 1140:
 1141:	  0439	74 85		        mov     a,#085h             ; test XRL A,#imm before using it in
 1142:	  043B	64 44		        xrl     a,#044h             ; subsequent tests
 1143:	  043D	60 09		        jz      td_a0
 1144:	  043F	64 C1		        xrl     a,#0c1h
 1145:	  0441	70 05		        jnz     td_a0
 1146:
 1147:				        eot     'a',td_a0
 1148+ 1			        putc    #'a'
 1149+ 2  0443			??0125:
 1150+ 2			        ;jnb     SCON.1,putc_loop
 1151+ 2			        ;clr     SCON.1
 1152+ 2  0443	75 99 61	        mov     SBUF,#'a'
 1153+ 1  0446	80 06		        sjmp    ??0124
 1154+ 1  0448			td_a0:  putc    #'?'
 1155+ 2  0448			??0126:
 1156+ 2			        ;jnb     SCON.1,putc_loop
 1157+ 2			        ;clr     SCON.1
 1158+ 2  0448	75 99 3F	        mov     SBUF,#'?'
 1159+ 1  044B	75 6E 01	        mov     fail,#001h
 1160+ 1  044E			??0124:
 1161:
 1162:	  044E	74 85		        mov     a,#085h             ; Test RLC effects on ACC, ignore CY for now
 1163:	  0450	00		        nop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 22



 Line  I  Addr  Code            Source

 1164:	  0451	C3		        clr     c
 1165:	  0452	33		        rlc     a                   ; a = (a << 1) | 0
 1166:	  0453	F5 60		        mov     dir0,a
 1167:	  0455	64 0A		        xrl     a,#00ah             ; We can't use CJNE because it modifies CY
 1168:	  0457	70 16		        jnz     td_b0               ; check shifted acc
 1169:	  0459	E5 60		        mov     a,dir0
 1170:	  045B	33		        rlc     a                   ; rotate again...
 1171:	  045C	64 15		        xrl     a,#015h             ; ...and check shifted acc with CY at bit 0
 1172:	  045E	70 0F		        jnz     td_b0
 1173:
 1174:	  0460	74 85		        mov     a,#085h             ; Now check RLC effects on CY
 1175:	  0462	00		        nop
 1176:	  0463	C3		        clr     c
 1177:	  0464	33		        rlc     a
 1178:	  0465	50 08		        jnc     td_b0
 1179:	  0467	33		        rlc     a
 1180:	  0468	40 05		        jc      td_b0               ; CY==1 moved into ACC.0
 1181:
 1182:				        eot     'b',td_b0
 1183+ 1			        putc    #'b'
 1184+ 2  046A			??0128:
 1185+ 2			        ;jnb     SCON.1,putc_loop
 1186+ 2			        ;clr     SCON.1
 1187+ 2  046A	75 99 62	        mov     SBUF,#'b'
 1188+ 1  046D	80 06		        sjmp    ??0127
 1189+ 1  046F			td_b0:  putc    #'?'
 1190+ 2  046F			??0129:
 1191+ 2			        ;jnb     SCON.1,putc_loop
 1192+ 2			        ;clr     SCON.1
 1193+ 2  046F	75 99 3F	        mov     SBUF,#'?'
 1194+ 1  0472	75 6E 01	        mov     fail,#001h
 1195+ 1  0475			??0127:
 1196:
 1197:	  0475	74 85		        mov     a,#085h             ; Test RRC effects on ACC, ignore CY for now
 1198:	  0477	C3		        clr     c
 1199:	  0478	13		        rrc     a                   ; will set CY
 1200:	  0479	F5 60		        mov     dir0,a
 1201:	  047B	00		        nop
 1202:	  047C	64 42		        xrl     a,#042h             ; We can't use CJNE because it modifies CY
 1203:	  047E	70 15		        jnz     td_c0               ; check shifted acc
 1204:	  0480	E5 60		        mov     a,dir0
 1205:	  0482	13		        rrc     a                   ; rotate again...
 1206:	  0483	64 A1		        xrl     a,#0a1h             ; ...and check shifted acc with CY at bit 7
 1207:	  0485	70 0E		        jnz     td_c0
 1208:
 1209:	  0487	74 85		        mov     a,#085h             ; Now check RRC effects on CY
 1210:	  0489	C3		        clr     c
 1211:	  048A	13		        rrc     a
 1212:	  048B	50 08		        jnc     td_c0
 1213:	  048D	13		        rrc     a
 1214:	  048E	40 05		        jc      td_c0               ; CY==1 moved into ACC.0
 1215:
 1216:				        eot     'c',td_c0
 1217+ 1			        putc    #'c'
 1218+ 2  0490			??0131:
 1219+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 23



 Line  I  Addr  Code            Source

 1220+ 2			        ;clr     SCON.1
 1221+ 2  0490	75 99 63	        mov     SBUF,#'c'
 1222+ 1  0493	80 06		        sjmp    ??0130
 1223+ 1  0495			td_c0:  putc    #'?'
 1224+ 2  0495			??0132:
 1225+ 2			        ;jnb     SCON.1,putc_loop
 1226+ 2			        ;clr     SCON.1
 1227+ 2  0495	75 99 3F	        mov     SBUF,#'?'
 1228+ 1  0498	75 6E 01	        mov     fail,#001h
 1229+ 1  049B			??0130:
 1230:
 1231:	  049B	74 85		        mov     a,#085h             ; Test RL effects on ACC, ignore CY for now
 1232:	  049D	C3		        clr     c
 1233:	  049E	23		        rl      a                   ; a = (a << 1) | 0
 1234:	  049F	F5 60		        mov     dir0,a
 1235:	  04A1	64 0B		        xrl     a,#00bh             ; We can't use CJNE because it modifies CY
 1236:	  04A3	70 28		        jnz     td_d0               ; check shifted acc
 1237:	  04A5	E5 60		        mov     a,dir0
 1238:	  04A7	D3		        setb    c
 1239:	  04A8	23		        rl      a                   ; rotate again...
 1240:	  04A9	64 16		        xrl     a,#016h             ; ...and check shifted acc with CY at bit 0
 1241:	  04AB	70 20		        jnz     td_d0
 1242:
 1243:	  04AD	74 85		        mov     a,#085h             ; Test RR effects on ACC, ignore CY for now
 1244:	  04AF	C3		        clr     c
 1245:	  04B0	03		        rr      a                   ; will set CY
 1246:	  04B1	F5 60		        mov     dir0,a
 1247:	  04B3	64 C2		        xrl     a,#0c2h             ; We can't use CJNE because it modifies CY
 1248:	  04B5	70 16		        jnz     td_d0               ; check shifted acc
 1249:	  04B7	E5 60		        mov     a,dir0
 1250:	  04B9	03		        rr      a                   ; rotate again...
 1251:	  04BA	64 61		        xrl     a,#061h             ; ...and check shifted acc with CY at bit 7
 1252:	  04BC	70 0F		        jnz     td_d0
 1253:
 1254:	  04BE	74 FF		        mov     a,#0ffh             ; Now make sure RL and RR don't touch CY
 1255:	  04C0	C3		        clr     c
 1256:	  04C1	23		        rl      a
 1257:	  04C2	40 09		        jc      td_d0
 1258:	  04C4	03		        rr      a
 1259:	  04C5	03		        rr      a
 1260:	  04C6	40 05		        jc      td_d0
 1261:
 1262:				        eot     'd',td_d0
 1263+ 1			        putc    #'d'
 1264+ 2  04C8			??0134:
 1265+ 2			        ;jnb     SCON.1,putc_loop
 1266+ 2			        ;clr     SCON.1
 1267+ 2  04C8	75 99 64	        mov     SBUF,#'d'
 1268+ 1  04CB	80 06		        sjmp    ??0133
 1269+ 1  04CD			td_d0:  putc    #'?'
 1270+ 2  04CD			??0135:
 1271+ 2			        ;jnb     SCON.1,putc_loop
 1272+ 2			        ;clr     SCON.1
 1273+ 2  04CD	75 99 3F	        mov     SBUF,#'?'
 1274+ 1  04D0	75 6E 01	        mov     fail,#001h
 1275+ 1  04D3			??0133:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 24



 Line  I  Addr  Code            Source

 1276:
 1277:				        put_crlf                    ; end of test series
 1278+ 1			        putc    #13
 1279+ 2  04D3			??0136:
 1280+ 2			        ;jnb     SCON.1,putc_loop
 1281+ 2			        ;clr     SCON.1
 1282+ 2  04D3	75 99 0D	        mov     SBUF,#13
 1283+ 1			        putc    #10
 1284+ 2  04D6			??0137:
 1285+ 2			        ;jnb     SCON.1,putc_loop
 1286+ 2			        ;clr     SCON.1
 1287+ 2  04D6	75 99 0A	        mov     SBUF,#10
 1288:
 1289:				        ;-- Test series E ------------------------------------------------------
 1290:				        ; Increment
 1291:				        ; a.- <INC A>
 1292:				        ; b.- <INC Rn>
 1293:				        ; c.- <INC @Ri>
 1294:				        ; d.- <MOV dir,#imm>
 1295:				        ; e.- <INC dir>
 1296:				        ; f.- <DEC A>
 1297:				        ; g.- <DEC Rn>
 1298:				        ; h.- <DEC @Ri>
 1299:				        ; i.- <DEC dir>
 1300:
 1301:				        putc    #'E'                ; start of test series
 1302+ 1  04D9			??0138:
 1303+ 1			        ;jnb     SCON.1,putc_loop
 1304+ 1			        ;clr     SCON.1
 1305+ 1  04D9	75 99 45	        mov     SBUF,#'E'
 1306:
 1307:				te_ma   macro   target, error_loc
 1308:				        mov     target,#080h
 1309:				        inc     target
 1310:				        cjne    target,#081h,error_loc
 1311:				        mov     target,#0ffh
 1312:				        clr     c
 1313:				        inc     target
 1314:				        jc      error_loc
 1315:				        cjne    target,#000h,error_loc
 1316:				        endm
 1317:
 1318:				        te_ma   a,te_a0             ; Test <INC A>
 1319+ 1  04DC	74 80		        mov     a,#080h
 1320+ 1  04DE	04		        inc     a
 1321+ 1  04DF	B4 81 0E	        cjne    a,#081h,te_a0
 1322+ 1  04E2	74 FF		        mov     a,#0ffh
 1323+ 1  04E4	C3		        clr     c
 1324+ 1  04E5	04		        inc     a
 1325+ 1  04E6	40 08		        jc      te_a0
 1326+ 1  04E8	B4 00 05	        cjne    a,#000h,te_a0
 1327:
 1328:				        eot     'a',te_a0
 1329+ 1			        putc    #'a'
 1330+ 2  04EB			??0140:
 1331+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 25



 Line  I  Addr  Code            Source

 1332+ 2			        ;clr     SCON.1
 1333+ 2  04EB	75 99 61	        mov     SBUF,#'a'
 1334+ 1  04EE	80 06		        sjmp    ??0139
 1335+ 1  04F0			te_a0:  putc    #'?'
 1336+ 2  04F0			??0141:
 1337+ 2			        ;jnb     SCON.1,putc_loop
 1338+ 2			        ;clr     SCON.1
 1339+ 2  04F0	75 99 3F	        mov     SBUF,#'?'
 1340+ 1  04F3	75 6E 01	        mov     fail,#001h
 1341+ 1  04F6			??0139:
 1342:
 1343:	  04F6	78 66		        mov     r0,#066h
 1344:
 1345:				        te_ma   r0,te_b0
 1346+ 1  04F8	78 80		        mov     r0,#080h
 1347+ 1  04FA	08		        inc     r0
 1348+ 1  04FB	B8 81 77	        cjne    r0,#081h,te_b0
 1349+ 1  04FE	78 FF		        mov     r0,#0ffh
 1350+ 1  0500	C3		        clr     c
 1351+ 1  0501	08		        inc     r0
 1352+ 1  0502	40 71		        jc      te_b0
 1353+ 1  0504	B8 00 6E	        cjne    r0,#000h,te_b0
 1354:				        te_ma   r1,te_b0
 1355+ 1  0507	79 80		        mov     r1,#080h
 1356+ 1  0509	09		        inc     r1
 1357+ 1  050A	B9 81 68	        cjne    r1,#081h,te_b0
 1358+ 1  050D	79 FF		        mov     r1,#0ffh
 1359+ 1  050F	C3		        clr     c
 1360+ 1  0510	09		        inc     r1
 1361+ 1  0511	40 62		        jc      te_b0
 1362+ 1  0513	B9 00 5F	        cjne    r1,#000h,te_b0
 1363:				        te_ma   r2,te_b0
 1364+ 1  0516	7A 80		        mov     r2,#080h
 1365+ 1  0518	0A		        inc     r2
 1366+ 1  0519	BA 81 59	        cjne    r2,#081h,te_b0
 1367+ 1  051C	7A FF		        mov     r2,#0ffh
 1368+ 1  051E	C3		        clr     c
 1369+ 1  051F	0A		        inc     r2
 1370+ 1  0520	40 53		        jc      te_b0
 1371+ 1  0522	BA 00 50	        cjne    r2,#000h,te_b0
 1372:				        te_ma   r3,te_b0
 1373+ 1  0525	7B 80		        mov     r3,#080h
 1374+ 1  0527	0B		        inc     r3
 1375+ 1  0528	BB 81 4A	        cjne    r3,#081h,te_b0
 1376+ 1  052B	7B FF		        mov     r3,#0ffh
 1377+ 1  052D	C3		        clr     c
 1378+ 1  052E	0B		        inc     r3
 1379+ 1  052F	40 44		        jc      te_b0
 1380+ 1  0531	BB 00 41	        cjne    r3,#000h,te_b0
 1381:				        te_ma   r4,te_b0
 1382+ 1  0534	7C 80		        mov     r4,#080h
 1383+ 1  0536	0C		        inc     r4
 1384+ 1  0537	BC 81 3B	        cjne    r4,#081h,te_b0
 1385+ 1  053A	7C FF		        mov     r4,#0ffh
 1386+ 1  053C	C3		        clr     c
 1387+ 1  053D	0C		        inc     r4

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 26



 Line  I  Addr  Code            Source

 1388+ 1  053E	40 35		        jc      te_b0
 1389+ 1  0540	BC 00 32	        cjne    r4,#000h,te_b0
 1390:				        te_ma   r5,te_b0
 1391+ 1  0543	7D 80		        mov     r5,#080h
 1392+ 1  0545	0D		        inc     r5
 1393+ 1  0546	BD 81 2C	        cjne    r5,#081h,te_b0
 1394+ 1  0549	7D FF		        mov     r5,#0ffh
 1395+ 1  054B	C3		        clr     c
 1396+ 1  054C	0D		        inc     r5
 1397+ 1  054D	40 26		        jc      te_b0
 1398+ 1  054F	BD 00 23	        cjne    r5,#000h,te_b0
 1399:				        te_ma   r6,te_b0
 1400+ 1  0552	7E 80		        mov     r6,#080h
 1401+ 1  0554	0E		        inc     r6
 1402+ 1  0555	BE 81 1D	        cjne    r6,#081h,te_b0
 1403+ 1  0558	7E FF		        mov     r6,#0ffh
 1404+ 1  055A	C3		        clr     c
 1405+ 1  055B	0E		        inc     r6
 1406+ 1  055C	40 17		        jc      te_b0
 1407+ 1  055E	BE 00 14	        cjne    r6,#000h,te_b0
 1408:				        te_ma   r7,te_b0
 1409+ 1  0561	7F 80		        mov     r7,#080h
 1410+ 1  0563	0F		        inc     r7
 1411+ 1  0564	BF 81 0E	        cjne    r7,#081h,te_b0
 1412+ 1  0567	7F FF		        mov     r7,#0ffh
 1413+ 1  0569	C3		        clr     c
 1414+ 1  056A	0F		        inc     r7
 1415+ 1  056B	40 08		        jc      te_b0
 1416+ 1  056D	BF 00 05	        cjne    r7,#000h,te_b0
 1417:
 1418:				        eot     'b',te_b0
 1419+ 1			        putc    #'b'
 1420+ 2  0570			??0143:
 1421+ 2			        ;jnb     SCON.1,putc_loop
 1422+ 2			        ;clr     SCON.1
 1423+ 2  0570	75 99 62	        mov     SBUF,#'b'
 1424+ 1  0573	80 06		        sjmp    ??0142
 1425+ 1  0575			te_b0:  putc    #'?'
 1426+ 2  0575			??0144:
 1427+ 2			        ;jnb     SCON.1,putc_loop
 1428+ 2			        ;clr     SCON.1
 1429+ 2  0575	75 99 3F	        mov     SBUF,#'?'
 1430+ 1  0578	75 6E 01	        mov     fail,#001h
 1431+ 1  057B			??0142:
 1432:
 1433:	  057B	78 60		        mov     r0,#dir0
 1434:	  057D	79 31		        mov     r1,#031h
 1435:
 1436:				        te_ma   @r0,te_c0
 1437+ 1  057F	76 80		        mov     @r0,#080h
 1438+ 1  0581	06		        inc     @r0
 1439+ 1  0582	B6 81 1D	        cjne    @r0,#081h,te_c0
 1440+ 1  0585	76 FF		        mov     @r0,#0ffh
 1441+ 1  0587	C3		        clr     c
 1442+ 1  0588	06		        inc     @r0
 1443+ 1  0589	40 17		        jc      te_c0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 27



 Line  I  Addr  Code            Source

 1444+ 1  058B	B6 00 14	        cjne    @r0,#000h,te_c0
 1445:				        te_ma   @r1,te_c0
 1446+ 1  058E	77 80		        mov     @r1,#080h
 1447+ 1  0590	07		        inc     @r1
 1448+ 1  0591	B7 81 0E	        cjne    @r1,#081h,te_c0
 1449+ 1  0594	77 FF		        mov     @r1,#0ffh
 1450+ 1  0596	C3		        clr     c
 1451+ 1  0597	07		        inc     @r1
 1452+ 1  0598	40 08		        jc      te_c0
 1453+ 1  059A	B7 00 05	        cjne    @r1,#000h,te_c0
 1454:
 1455:				        eot     'c',te_c0
 1456+ 1			        putc    #'c'
 1457+ 2  059D			??0146:
 1458+ 2			        ;jnb     SCON.1,putc_loop
 1459+ 2			        ;clr     SCON.1
 1460+ 2  059D	75 99 63	        mov     SBUF,#'c'
 1461+ 1  05A0	80 06		        sjmp    ??0145
 1462+ 1  05A2			te_c0:  putc    #'?'
 1463+ 2  05A2			??0147:
 1464+ 2			        ;jnb     SCON.1,putc_loop
 1465+ 2			        ;clr     SCON.1
 1466+ 2  05A2	75 99 3F	        mov     SBUF,#'?'
 1467+ 1  05A5	75 6E 01	        mov     fail,#001h
 1468+ 1  05A8			??0145:
 1469:
 1470:	  05A8	75 60 34	        mov     dir0,#034h          ; Test <MOV dir,#imm> before using it in
 1471:	  05AB	E5 60		        mov     a,dir0              ; subsequent tests
 1472:	  05AD	B4 34 05	        cjne    a,#034h,te_d0
 1473:
 1474:				        eot     'd',te_d0
 1475+ 1			        putc    #'d'
 1476+ 2  05B0			??0149:
 1477+ 2			        ;jnb     SCON.1,putc_loop
 1478+ 2			        ;clr     SCON.1
 1479+ 2  05B0	75 99 64	        mov     SBUF,#'d'
 1480+ 1  05B3	80 06		        sjmp    ??0148
 1481+ 1  05B5			te_d0:  putc    #'?'
 1482+ 2  05B5			??0150:
 1483+ 2			        ;jnb     SCON.1,putc_loop
 1484+ 2			        ;clr     SCON.1
 1485+ 2  05B5	75 99 3F	        mov     SBUF,#'?'
 1486+ 1  05B8	75 6E 01	        mov     fail,#001h
 1487+ 1  05BB			??0148:
 1488:
 1489:	  05BB	75 39 80	        mov     039h,#080h
 1490:	  05BE	05 39		        inc     039h
 1491:	  05C0	E5 39		        mov     a,039h
 1492:	  05C2	B4 81 12	        cjne    a,#081h,te_e0
 1493:	  05C5	75 39 FF	        mov     039h,#0ffh
 1494:	  05C8	C3		        clr     c
 1495:	  05C9	05 39		        inc     039h
 1496:	  05CB	40 0A		        jc      te_e0
 1497:	  05CD	E5 39		        mov     a,039h
 1498:	  05CF	B4 00 05	        cjne    a,#000h,te_e0
 1499:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 28



 Line  I  Addr  Code            Source

 1500:				        eot     'e',te_e0
 1501+ 1			        putc    #'e'
 1502+ 2  05D2			??0152:
 1503+ 2			        ;jnb     SCON.1,putc_loop
 1504+ 2			        ;clr     SCON.1
 1505+ 2  05D2	75 99 65	        mov     SBUF,#'e'
 1506+ 1  05D5	80 06		        sjmp    ??0151
 1507+ 1  05D7			te_e0:  putc    #'?'
 1508+ 2  05D7			??0153:
 1509+ 2			        ;jnb     SCON.1,putc_loop
 1510+ 2			        ;clr     SCON.1
 1511+ 2  05D7	75 99 3F	        mov     SBUF,#'?'
 1512+ 1  05DA	75 6E 01	        mov     fail,#001h
 1513+ 1  05DD			??0151:
 1514:
 1515:				te_mf   macro   target, error_loc
 1516:				        mov     target,#001h
 1517:				        dec     target
 1518:				        cjne    target,#000h,error_loc
 1519:				        clr     c
 1520:				        dec     target
 1521:				        jc      error_loc
 1522:				        cjne    target,#0ffh,error_loc
 1523:				        endm
 1524:
 1525:				        te_mf   a,te_f0             ; Test <DEC A>
 1526+ 1  05DD	74 01		        mov     a,#001h
 1527+ 1  05DF	14		        dec     a
 1528+ 1  05E0	B4 00 0C	        cjne    a,#000h,te_f0
 1529+ 1  05E3	C3		        clr     c
 1530+ 1  05E4	14		        dec     a
 1531+ 1  05E5	40 08		        jc      te_f0
 1532+ 1  05E7	B4 FF 05	        cjne    a,#0ffh,te_f0
 1533:
 1534:				        eot     'f',te_f0
 1535+ 1			        putc    #'f'
 1536+ 2  05EA			??0155:
 1537+ 2			        ;jnb     SCON.1,putc_loop
 1538+ 2			        ;clr     SCON.1
 1539+ 2  05EA	75 99 66	        mov     SBUF,#'f'
 1540+ 1  05ED	80 06		        sjmp    ??0154
 1541+ 1  05EF			te_f0:  putc    #'?'
 1542+ 2  05EF			??0156:
 1543+ 2			        ;jnb     SCON.1,putc_loop
 1544+ 2			        ;clr     SCON.1
 1545+ 2  05EF	75 99 3F	        mov     SBUF,#'?'
 1546+ 1  05F2	75 6E 01	        mov     fail,#001h
 1547+ 1  05F5			??0154:
 1548:
 1549:	  05F5	78 66		        mov     r0,#066h
 1550:
 1551:				        te_mf   r0,te_g0
 1552+ 1  05F7	78 01		        mov     r0,#001h
 1553+ 1  05F9	18		        dec     r0
 1554+ 1  05FA	B8 00 67	        cjne    r0,#000h,te_g0
 1555+ 1  05FD	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 29



 Line  I  Addr  Code            Source

 1556+ 1  05FE	18		        dec     r0
 1557+ 1  05FF	40 63		        jc      te_g0
 1558+ 1  0601	B8 FF 60	        cjne    r0,#0ffh,te_g0
 1559:				        te_mf   r1,te_g0
 1560+ 1  0604	79 01		        mov     r1,#001h
 1561+ 1  0606	19		        dec     r1
 1562+ 1  0607	B9 00 5A	        cjne    r1,#000h,te_g0
 1563+ 1  060A	C3		        clr     c
 1564+ 1  060B	19		        dec     r1
 1565+ 1  060C	40 56		        jc      te_g0
 1566+ 1  060E	B9 FF 53	        cjne    r1,#0ffh,te_g0
 1567:				        te_mf   r2,te_g0
 1568+ 1  0611	7A 01		        mov     r2,#001h
 1569+ 1  0613	1A		        dec     r2
 1570+ 1  0614	BA 00 4D	        cjne    r2,#000h,te_g0
 1571+ 1  0617	C3		        clr     c
 1572+ 1  0618	1A		        dec     r2
 1573+ 1  0619	40 49		        jc      te_g0
 1574+ 1  061B	BA FF 46	        cjne    r2,#0ffh,te_g0
 1575:				        te_mf   r3,te_g0
 1576+ 1  061E	7B 01		        mov     r3,#001h
 1577+ 1  0620	1B		        dec     r3
 1578+ 1  0621	BB 00 40	        cjne    r3,#000h,te_g0
 1579+ 1  0624	C3		        clr     c
 1580+ 1  0625	1B		        dec     r3
 1581+ 1  0626	40 3C		        jc      te_g0
 1582+ 1  0628	BB FF 39	        cjne    r3,#0ffh,te_g0
 1583:				        te_mf   r4,te_g0
 1584+ 1  062B	7C 01		        mov     r4,#001h
 1585+ 1  062D	1C		        dec     r4
 1586+ 1  062E	BC 00 33	        cjne    r4,#000h,te_g0
 1587+ 1  0631	C3		        clr     c
 1588+ 1  0632	1C		        dec     r4
 1589+ 1  0633	40 2F		        jc      te_g0
 1590+ 1  0635	BC FF 2C	        cjne    r4,#0ffh,te_g0
 1591:				        te_mf   r5,te_g0
 1592+ 1  0638	7D 01		        mov     r5,#001h
 1593+ 1  063A	1D		        dec     r5
 1594+ 1  063B	BD 00 26	        cjne    r5,#000h,te_g0
 1595+ 1  063E	C3		        clr     c
 1596+ 1  063F	1D		        dec     r5
 1597+ 1  0640	40 22		        jc      te_g0
 1598+ 1  0642	BD FF 1F	        cjne    r5,#0ffh,te_g0
 1599:				        te_mf   r6,te_g0
 1600+ 1  0645	7E 01		        mov     r6,#001h
 1601+ 1  0647	1E		        dec     r6
 1602+ 1  0648	BE 00 19	        cjne    r6,#000h,te_g0
 1603+ 1  064B	C3		        clr     c
 1604+ 1  064C	1E		        dec     r6
 1605+ 1  064D	40 15		        jc      te_g0
 1606+ 1  064F	BE FF 12	        cjne    r6,#0ffh,te_g0
 1607:				        te_mf   r7,te_g0
 1608+ 1  0652	7F 01		        mov     r7,#001h
 1609+ 1  0654	1F		        dec     r7
 1610+ 1  0655	BF 00 0C	        cjne    r7,#000h,te_g0
 1611+ 1  0658	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 30



 Line  I  Addr  Code            Source

 1612+ 1  0659	1F		        dec     r7
 1613+ 1  065A	40 08		        jc      te_g0
 1614+ 1  065C	BF FF 05	        cjne    r7,#0ffh,te_g0
 1615:
 1616:				        eot     'g',te_g0
 1617+ 1			        putc    #'g'
 1618+ 2  065F			??0158:
 1619+ 2			        ;jnb     SCON.1,putc_loop
 1620+ 2			        ;clr     SCON.1
 1621+ 2  065F	75 99 67	        mov     SBUF,#'g'
 1622+ 1  0662	80 06		        sjmp    ??0157
 1623+ 1  0664			te_g0:  putc    #'?'
 1624+ 2  0664			??0159:
 1625+ 2			        ;jnb     SCON.1,putc_loop
 1626+ 2			        ;clr     SCON.1
 1627+ 2  0664	75 99 3F	        mov     SBUF,#'?'
 1628+ 1  0667	75 6E 01	        mov     fail,#001h
 1629+ 1  066A			??0157:
 1630:
 1631:	  066A	78 60		        mov     r0,#dir0
 1632:	  066C	79 31		        mov     r1,#031h
 1633:
 1634:				        te_mf   @r0,te_h0
 1635+ 1  066E	76 01		        mov     @r0,#001h
 1636+ 1  0670	16		        dec     @r0
 1637+ 1  0671	B6 00 19	        cjne    @r0,#000h,te_h0
 1638+ 1  0674	C3		        clr     c
 1639+ 1  0675	16		        dec     @r0
 1640+ 1  0676	40 15		        jc      te_h0
 1641+ 1  0678	B6 FF 12	        cjne    @r0,#0ffh,te_h0
 1642:				        te_mf   @r1,te_h0
 1643+ 1  067B	77 01		        mov     @r1,#001h
 1644+ 1  067D	17		        dec     @r1
 1645+ 1  067E	B7 00 0C	        cjne    @r1,#000h,te_h0
 1646+ 1  0681	C3		        clr     c
 1647+ 1  0682	17		        dec     @r1
 1648+ 1  0683	40 08		        jc      te_h0
 1649+ 1  0685	B7 FF 05	        cjne    @r1,#0ffh,te_h0
 1650:
 1651:				        eot     'h',te_h0
 1652+ 1			        putc    #'h'
 1653+ 2  0688			??0161:
 1654+ 2			        ;jnb     SCON.1,putc_loop
 1655+ 2			        ;clr     SCON.1
 1656+ 2  0688	75 99 68	        mov     SBUF,#'h'
 1657+ 1  068B	80 06		        sjmp    ??0160
 1658+ 1  068D			te_h0:  putc    #'?'
 1659+ 2  068D			??0162:
 1660+ 2			        ;jnb     SCON.1,putc_loop
 1661+ 2			        ;clr     SCON.1
 1662+ 2  068D	75 99 3F	        mov     SBUF,#'?'
 1663+ 1  0690	75 6E 01	        mov     fail,#001h
 1664+ 1  0693			??0160:
 1665:
 1666:	  0693	75 39 01	        mov     039h,#001h
 1667:	  0696	15 39		        dec     039h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 31



 Line  I  Addr  Code            Source

 1668:	  0698	E5 39		        mov     a,039h
 1669:	  069A	B4 00 12	        cjne    a,#00h,te_i0
 1670:	  069D	75 39 00	        mov     039h,#000h
 1671:	  06A0	C3		        clr     c
 1672:	  06A1	15 39		        dec     039h
 1673:	  06A3	40 0A		        jc      te_i0
 1674:	  06A5	E5 39		        mov     a,039h
 1675:	  06A7	B4 FF 05	        cjne    a,#0ffh,te_i0
 1676:
 1677:				        eot     'i',te_i0
 1678+ 1			        putc    #'i'
 1679+ 2  06AA			??0164:
 1680+ 2			        ;jnb     SCON.1,putc_loop
 1681+ 2			        ;clr     SCON.1
 1682+ 2  06AA	75 99 69	        mov     SBUF,#'i'
 1683+ 1  06AD	80 06		        sjmp    ??0163
 1684+ 1  06AF			te_i0:  putc    #'?'
 1685+ 2  06AF			??0165:
 1686+ 2			        ;jnb     SCON.1,putc_loop
 1687+ 2			        ;clr     SCON.1
 1688+ 2  06AF	75 99 3F	        mov     SBUF,#'?'
 1689+ 1  06B2	75 6E 01	        mov     fail,#001h
 1690+ 1  06B5			??0163:
 1691:
 1692:				        put_crlf                    ; end of test series
 1693+ 1			        putc    #13
 1694+ 2  06B5			??0166:
 1695+ 2			        ;jnb     SCON.1,putc_loop
 1696+ 2			        ;clr     SCON.1
 1697+ 2  06B5	75 99 0D	        mov     SBUF,#13
 1698+ 1			        putc    #10
 1699+ 2  06B8			??0167:
 1700+ 2			        ;jnb     SCON.1,putc_loop
 1701+ 2			        ;clr     SCON.1
 1702+ 2  06B8	75 99 0A	        mov     SBUF,#10
 1703:
 1704:
 1705:				        ;-- Test series F ------------------------------------------------------
 1706:				        ;
 1707:				        ; a.- <MOV dir,Rn>
 1708:				        ; b.- <MOV dir,@Ri>
 1709:				        ; c.- <MOV dir,dir>
 1710:				        ; d.- <MOV Rn,dir>
 1711:				        ; e.- <MOV @Ri,dir>
 1712:				        ; f.- <MOV Rn,A>
 1713:				        ; g.- <MOV @Ri,A>
 1714:				        ; h.- <MOV dir,A>
 1715:
 1716:
 1717:				        putc    #'F'                ; start of test series
 1718+ 1  06BB			??0168:
 1719+ 1			        ;jnb     SCON.1,putc_loop
 1720+ 1			        ;clr     SCON.1
 1721+ 1  06BB	75 99 46	        mov     SBUF,#'F'
 1722:
 1723:				tf_ma   macro   rn, n, error_loc

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 32



 Line  I  Addr  Code            Source

 1724:				        mov     rn,#(091h+n)
 1725:				        mov     039h,rn
 1726:				        mov     a,039h
 1727:				        cjne    a,#(091h+n),error_loc
 1728:				        endm
 1729:
 1730:				        tf_ma   r0,0,tf_a0
 1731+ 1  06BE	78 91		        mov     r0,#(091h+0)
 1732+ 1  06C0	88 39		        mov     039h,r0
 1733+ 1  06C2	E5 39		        mov     a,039h
 1734+ 1  06C4	B4 91 44	        cjne    a,#(091h+0),tf_a0
 1735:				        tf_ma   r1,1,tf_a0
 1736+ 1  06C7	79 92		        mov     r1,#(091h+1)
 1737+ 1  06C9	89 39		        mov     039h,r1
 1738+ 1  06CB	E5 39		        mov     a,039h
 1739+ 1  06CD	B4 92 3B	        cjne    a,#(091h+1),tf_a0
 1740:				        tf_ma   r2,2,tf_a0
 1741+ 1  06D0	7A 93		        mov     r2,#(091h+2)
 1742+ 1  06D2	8A 39		        mov     039h,r2
 1743+ 1  06D4	E5 39		        mov     a,039h
 1744+ 1  06D6	B4 93 32	        cjne    a,#(091h+2),tf_a0
 1745:				        tf_ma   r3,3,tf_a0
 1746+ 1  06D9	7B 94		        mov     r3,#(091h+3)
 1747+ 1  06DB	8B 39		        mov     039h,r3
 1748+ 1  06DD	E5 39		        mov     a,039h
 1749+ 1  06DF	B4 94 29	        cjne    a,#(091h+3),tf_a0
 1750:				        tf_ma   r4,4,tf_a0
 1751+ 1  06E2	7C 95		        mov     r4,#(091h+4)
 1752+ 1  06E4	8C 39		        mov     039h,r4
 1753+ 1  06E6	E5 39		        mov     a,039h
 1754+ 1  06E8	B4 95 20	        cjne    a,#(091h+4),tf_a0
 1755:				        tf_ma   r5,5,tf_a0
 1756+ 1  06EB	7D 96		        mov     r5,#(091h+5)
 1757+ 1  06ED	8D 39		        mov     039h,r5
 1758+ 1  06EF	E5 39		        mov     a,039h
 1759+ 1  06F1	B4 96 17	        cjne    a,#(091h+5),tf_a0
 1760:				        tf_ma   r6,6,tf_a0
 1761+ 1  06F4	7E 97		        mov     r6,#(091h+6)
 1762+ 1  06F6	8E 39		        mov     039h,r6
 1763+ 1  06F8	E5 39		        mov     a,039h
 1764+ 1  06FA	B4 97 0E	        cjne    a,#(091h+6),tf_a0
 1765:				        tf_ma   r7,7,tf_a0
 1766+ 1  06FD	7F 98		        mov     r7,#(091h+7)
 1767+ 1  06FF	8F 39		        mov     039h,r7
 1768+ 1  0701	E5 39		        mov     a,039h
 1769+ 1  0703	B4 98 05	        cjne    a,#(091h+7),tf_a0
 1770:
 1771:				        eot     'a',tf_a0
 1772+ 1			        putc    #'a'
 1773+ 2  0706			??0170:
 1774+ 2			        ;jnb     SCON.1,putc_loop
 1775+ 2			        ;clr     SCON.1
 1776+ 2  0706	75 99 61	        mov     SBUF,#'a'
 1777+ 1  0709	80 06		        sjmp    ??0169
 1778+ 1  070B			tf_a0:  putc    #'?'
 1779+ 2  070B			??0171:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 33



 Line  I  Addr  Code            Source

 1780+ 2			        ;jnb     SCON.1,putc_loop
 1781+ 2			        ;clr     SCON.1
 1782+ 2  070B	75 99 3F	        mov     SBUF,#'?'
 1783+ 1  070E	75 6E 01	        mov     fail,#001h
 1784+ 1  0711			??0169:
 1785:
 1786:				        tf_ma   @r0,0,tf_b0
 1787+ 1  0711	76 91		        mov     @r0,#(091h+0)
 1788+ 1  0713	86 39		        mov     039h,@r0
 1789+ 1  0715	E5 39		        mov     a,039h
 1790+ 1  0717	B4 91 0E	        cjne    a,#(091h+0),tf_b0
 1791:				        tf_ma   @r1,1,tf_b0
 1792+ 1  071A	77 92		        mov     @r1,#(091h+1)
 1793+ 1  071C	87 39		        mov     039h,@r1
 1794+ 1  071E	E5 39		        mov     a,039h
 1795+ 1  0720	B4 92 05	        cjne    a,#(091h+1),tf_b0
 1796:
 1797:				        eot     'b',tf_b0
 1798+ 1			        putc    #'b'
 1799+ 2  0723			??0173:
 1800+ 2			        ;jnb     SCON.1,putc_loop
 1801+ 2			        ;clr     SCON.1
 1802+ 2  0723	75 99 62	        mov     SBUF,#'b'
 1803+ 1  0726	80 06		        sjmp    ??0172
 1804+ 1  0728			tf_b0:  putc    #'?'
 1805+ 2  0728			??0174:
 1806+ 2			        ;jnb     SCON.1,putc_loop
 1807+ 2			        ;clr     SCON.1
 1808+ 2  0728	75 99 3F	        mov     SBUF,#'?'
 1809+ 1  072B	75 6E 01	        mov     fail,#001h
 1810+ 1  072E			??0172:
 1811:
 1812:	  072E	75 31 91	        mov     031h,#091h
 1813:	  0731	85 31 39	        mov     039h,031h
 1814:	  0734	E5 39		        mov     a,039h
 1815:	  0736	B4 91 05	        cjne    a,#091h,tf_c0
 1816:
 1817:				        eot     'c',tf_c0
 1818+ 1			        putc    #'c'
 1819+ 2  0739			??0176:
 1820+ 2			        ;jnb     SCON.1,putc_loop
 1821+ 2			        ;clr     SCON.1
 1822+ 2  0739	75 99 63	        mov     SBUF,#'c'
 1823+ 1  073C	80 06		        sjmp    ??0175
 1824+ 1  073E			tf_c0:  putc    #'?'
 1825+ 2  073E			??0177:
 1826+ 2			        ;jnb     SCON.1,putc_loop
 1827+ 2			        ;clr     SCON.1
 1828+ 2  073E	75 99 3F	        mov     SBUF,#'?'
 1829+ 1  0741	75 6E 01	        mov     fail,#001h
 1830+ 1  0744			??0175:
 1831:
 1832:				tf_md   macro   rn, n, error_loc
 1833:				        mov     039h,#(091h+n)
 1834:				        mov     rn,039h
 1835:				        cjne    rn,#(091h+n),error_loc

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 34



 Line  I  Addr  Code            Source

 1836:				        endm
 1837:
 1838:				        tf_md   r0,0,tf_d0
 1839+ 1  0744	75 39 91	        mov     039h,#(091h+0)
 1840+ 1  0747	A8 39		        mov     r0,039h
 1841+ 1  0749	B8 91 3D	        cjne    r0,#(091h+0),tf_d0
 1842:				        tf_md   r1,1,tf_d0
 1843+ 1  074C	75 39 92	        mov     039h,#(091h+1)
 1844+ 1  074F	A9 39		        mov     r1,039h
 1845+ 1  0751	B9 92 35	        cjne    r1,#(091h+1),tf_d0
 1846:				        tf_md   r2,2,tf_d0
 1847+ 1  0754	75 39 93	        mov     039h,#(091h+2)
 1848+ 1  0757	AA 39		        mov     r2,039h
 1849+ 1  0759	BA 93 2D	        cjne    r2,#(091h+2),tf_d0
 1850:				        tf_md   r3,3,tf_d0
 1851+ 1  075C	75 39 94	        mov     039h,#(091h+3)
 1852+ 1  075F	AB 39		        mov     r3,039h
 1853+ 1  0761	BB 94 25	        cjne    r3,#(091h+3),tf_d0
 1854:				        tf_md   r4,4,tf_d0
 1855+ 1  0764	75 39 95	        mov     039h,#(091h+4)
 1856+ 1  0767	AC 39		        mov     r4,039h
 1857+ 1  0769	BC 95 1D	        cjne    r4,#(091h+4),tf_d0
 1858:				        tf_md   r5,5,tf_d0
 1859+ 1  076C	75 39 96	        mov     039h,#(091h+5)
 1860+ 1  076F	AD 39		        mov     r5,039h
 1861+ 1  0771	BD 96 15	        cjne    r5,#(091h+5),tf_d0
 1862:				        tf_md   r6,6,tf_d0
 1863+ 1  0774	75 39 97	        mov     039h,#(091h+6)
 1864+ 1  0777	AE 39		        mov     r6,039h
 1865+ 1  0779	BE 97 0D	        cjne    r6,#(091h+6),tf_d0
 1866:				        tf_md   r7,7,tf_d0
 1867+ 1  077C	75 39 98	        mov     039h,#(091h+7)
 1868+ 1  077F	AF 39		        mov     r7,039h
 1869+ 1  0781	BF 98 05	        cjne    r7,#(091h+7),tf_d0
 1870:
 1871:				        eot     'd',tf_d0
 1872+ 1			        putc    #'d'
 1873+ 2  0784			??0179:
 1874+ 2			        ;jnb     SCON.1,putc_loop
 1875+ 2			        ;clr     SCON.1
 1876+ 2  0784	75 99 64	        mov     SBUF,#'d'
 1877+ 1  0787	80 06		        sjmp    ??0178
 1878+ 1  0789			tf_d0:  putc    #'?'
 1879+ 2  0789			??0180:
 1880+ 2			        ;jnb     SCON.1,putc_loop
 1881+ 2			        ;clr     SCON.1
 1882+ 2  0789	75 99 3F	        mov     SBUF,#'?'
 1883+ 1  078C	75 6E 01	        mov     fail,#001h
 1884+ 1  078F			??0178:
 1885:
 1886:	  078F	78 60		        mov     r0,#dir0
 1887:	  0791	79 31		        mov     r1,#031h
 1888:				        tf_md   @r0,0,tf_e0
 1889+ 1  0793	75 39 91	        mov     039h,#(091h+0)
 1890+ 1  0796	A6 39		        mov     @r0,039h
 1891+ 1  0798	B6 91 0D	        cjne    @r0,#(091h+0),tf_e0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 35



 Line  I  Addr  Code            Source

 1892:				        tf_md   @r1,1,tf_e0
 1893+ 1  079B	75 39 92	        mov     039h,#(091h+1)
 1894+ 1  079E	A7 39		        mov     @r1,039h
 1895+ 1  07A0	B7 92 05	        cjne    @r1,#(091h+1),tf_e0
 1896:
 1897:				        eot     'e',tf_e0
 1898+ 1			        putc    #'e'
 1899+ 2  07A3			??0182:
 1900+ 2			        ;jnb     SCON.1,putc_loop
 1901+ 2			        ;clr     SCON.1
 1902+ 2  07A3	75 99 65	        mov     SBUF,#'e'
 1903+ 1  07A6	80 06		        sjmp    ??0181
 1904+ 1  07A8			tf_e0:  putc    #'?'
 1905+ 2  07A8			??0183:
 1906+ 2			        ;jnb     SCON.1,putc_loop
 1907+ 2			        ;clr     SCON.1
 1908+ 2  07A8	75 99 3F	        mov     SBUF,#'?'
 1909+ 1  07AB	75 6E 01	        mov     fail,#001h
 1910+ 1  07AE			??0181:
 1911:
 1912:				tf_mf   macro   rn, n, error_loc
 1913:				        mov     a,#(091h+n)
 1914:				        mov     rn,a
 1915:				        cjne    rn,#(091h+n),error_loc
 1916:				        endm
 1917:
 1918:				        tf_mf   r0,0,tf_f0
 1919+ 1  07AE	74 91		        mov     a,#(091h+0)
 1920+ 1  07B0	F8		        mov     r0,a
 1921+ 1  07B1	B8 91 2F	        cjne    r0,#(091h+0),tf_f0
 1922:				        tf_mf   r1,1,tf_f0
 1923+ 1  07B4	74 92		        mov     a,#(091h+1)
 1924+ 1  07B6	F9		        mov     r1,a
 1925+ 1  07B7	B9 92 29	        cjne    r1,#(091h+1),tf_f0
 1926:				        tf_mf   r2,2,tf_f0
 1927+ 1  07BA	74 93		        mov     a,#(091h+2)
 1928+ 1  07BC	FA		        mov     r2,a
 1929+ 1  07BD	BA 93 23	        cjne    r2,#(091h+2),tf_f0
 1930:				        tf_mf   r3,3,tf_f0
 1931+ 1  07C0	74 94		        mov     a,#(091h+3)
 1932+ 1  07C2	FB		        mov     r3,a
 1933+ 1  07C3	BB 94 1D	        cjne    r3,#(091h+3),tf_f0
 1934:				        tf_mf   r5,4,tf_f0
 1935+ 1  07C6	74 95		        mov     a,#(091h+4)
 1936+ 1  07C8	FD		        mov     r5,a
 1937+ 1  07C9	BD 95 17	        cjne    r5,#(091h+4),tf_f0
 1938:				        tf_mf   r5,5,tf_f0
 1939+ 1  07CC	74 96		        mov     a,#(091h+5)
 1940+ 1  07CE	FD		        mov     r5,a
 1941+ 1  07CF	BD 96 11	        cjne    r5,#(091h+5),tf_f0
 1942:				        tf_mf   r6,6,tf_f0
 1943+ 1  07D2	74 97		        mov     a,#(091h+6)
 1944+ 1  07D4	FE		        mov     r6,a
 1945+ 1  07D5	BE 97 0B	        cjne    r6,#(091h+6),tf_f0
 1946:				        tf_mf   r7,7,tf_f0
 1947+ 1  07D8	74 98		        mov     a,#(091h+7)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 36



 Line  I  Addr  Code            Source

 1948+ 1  07DA	FF		        mov     r7,a
 1949+ 1  07DB	BF 98 05	        cjne    r7,#(091h+7),tf_f0
 1950:
 1951:				        eot     'f',tf_f0
 1952+ 1			        putc    #'f'
 1953+ 2  07DE			??0185:
 1954+ 2			        ;jnb     SCON.1,putc_loop
 1955+ 2			        ;clr     SCON.1
 1956+ 2  07DE	75 99 66	        mov     SBUF,#'f'
 1957+ 1  07E1	80 06		        sjmp    ??0184
 1958+ 1  07E3			tf_f0:  putc    #'?'
 1959+ 2  07E3			??0186:
 1960+ 2			        ;jnb     SCON.1,putc_loop
 1961+ 2			        ;clr     SCON.1
 1962+ 2  07E3	75 99 3F	        mov     SBUF,#'?'
 1963+ 1  07E6	75 6E 01	        mov     fail,#001h
 1964+ 1  07E9			??0184:
 1965:
 1966:	  07E9	78 60		        mov     r0,#dir0
 1967:	  07EB	79 31		        mov     r1,#031h
 1968:				        tf_mf   @r0,0,tf_g0
 1969+ 1  07ED	74 91		        mov     a,#(091h+0)
 1970+ 1  07EF	F6		        mov     @r0,a
 1971+ 1  07F0	B6 91 0B	        cjne    @r0,#(091h+0),tf_g0
 1972:				        tf_mf   @r1,1,tf_g0
 1973+ 1  07F3	74 92		        mov     a,#(091h+1)
 1974+ 1  07F5	F7		        mov     @r1,a
 1975+ 1  07F6	B7 92 05	        cjne    @r1,#(091h+1),tf_g0
 1976:
 1977:				        eot     'g',tf_g0
 1978+ 1			        putc    #'g'
 1979+ 2  07F9			??0188:
 1980+ 2			        ;jnb     SCON.1,putc_loop
 1981+ 2			        ;clr     SCON.1
 1982+ 2  07F9	75 99 67	        mov     SBUF,#'g'
 1983+ 1  07FC	80 06		        sjmp    ??0187
 1984+ 1  07FE			tf_g0:  putc    #'?'
 1985+ 2  07FE			??0189:
 1986+ 2			        ;jnb     SCON.1,putc_loop
 1987+ 2			        ;clr     SCON.1
 1988+ 2  07FE	75 99 3F	        mov     SBUF,#'?'
 1989+ 1  0801	75 6E 01	        mov     fail,#001h
 1990+ 1  0804			??0187:
 1991:
 1992:	  0804	75 60 79	        mov     dir0,#079h
 1993:	  0807	78 00		        mov     r0,#000h
 1994:	  0809	74 34		        mov     a,#34h
 1995:	  080B	F5 60		        mov     dir0,a
 1996:	  080D	A8 60		        mov     r0,dir0
 1997:	  080F	B8 34 05	        cjne    r0,#034h,tf_h0
 1998:
 1999:				        eot     'h',tf_h0
 2000+ 1			        putc    #'h'
 2001+ 2  0812			??0191:
 2002+ 2			        ;jnb     SCON.1,putc_loop
 2003+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 37



 Line  I  Addr  Code            Source

 2004+ 2  0812	75 99 68	        mov     SBUF,#'h'
 2005+ 1  0815	80 06		        sjmp    ??0190
 2006+ 1  0817			tf_h0:  putc    #'?'
 2007+ 2  0817			??0192:
 2008+ 2			        ;jnb     SCON.1,putc_loop
 2009+ 2			        ;clr     SCON.1
 2010+ 2  0817	75 99 3F	        mov     SBUF,#'?'
 2011+ 1  081A	75 6E 01	        mov     fail,#001h
 2012+ 1  081D			??0190:
 2013:
 2014:	  081D	74 00		        mov     a,#000h
 2015:
 2016:	  081F	79 31		        mov     r1,#031h
 2017:	  0821	75 31 56	        mov     031h,#056h
 2018:	  0824	78 60		        mov     r0,#dir0
 2019:	  0826	75 60 34	        mov     dir0,#034h
 2020:	  0829	E6		        mov     a,@r0
 2021:	  082A	B4 34 09	        cjne    a,#034h,tf_i0
 2022:	  082D	E7		        mov     a,@r1
 2023:	  082E	B4 56 05	        cjne    a,#056h,tf_i0
 2024:
 2025:				        eot     'i',tf_i0
 2026+ 1			        putc    #'i'
 2027+ 2  0831			??0194:
 2028+ 2			        ;jnb     SCON.1,putc_loop
 2029+ 2			        ;clr     SCON.1
 2030+ 2  0831	75 99 69	        mov     SBUF,#'i'
 2031+ 1  0834	80 06		        sjmp    ??0193
 2032+ 1  0836			tf_i0:  putc    #'?'
 2033+ 2  0836			??0195:
 2034+ 2			        ;jnb     SCON.1,putc_loop
 2035+ 2			        ;clr     SCON.1
 2036+ 2  0836	75 99 3F	        mov     SBUF,#'?'
 2037+ 1  0839	75 6E 01	        mov     fail,#001h
 2038+ 1  083C			??0193:
 2039:
 2040:				        put_crlf                    ; end of test series
 2041+ 1			        putc    #13
 2042+ 2  083C			??0196:
 2043+ 2			        ;jnb     SCON.1,putc_loop
 2044+ 2			        ;clr     SCON.1
 2045+ 2  083C	75 99 0D	        mov     SBUF,#13
 2046+ 1			        putc    #10
 2047+ 2  083F			??0197:
 2048+ 2			        ;jnb     SCON.1,putc_loop
 2049+ 2			        ;clr     SCON.1
 2050+ 2  083F	75 99 0A	        mov     SBUF,#10
 2051:
 2052:
 2053:				        ;-- Test series G ------------------------------------------------------
 2054:				        ; Note the XCG tests are specially lame even within this context.
 2055:				        ; a.- <CLR A>, <CPL A>, <SWAP A>
 2056:				        ; b.- <INC DPTR>
 2057:				        ; c.- <XCH A,dir>
 2058:				        ; d.- <XCH A,@Ri>
 2059:				        ; e.- <XCH A,Rn>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 38



 Line  I  Addr  Code            Source

 2060:
 2061:				        putc    #'G'                ; start of test series
 2062+ 1  0842			??0198:
 2063+ 1			        ;jnb     SCON.1,putc_loop
 2064+ 1			        ;clr     SCON.1
 2065+ 1  0842	75 99 47	        mov     SBUF,#'G'
 2066:
 2067:	  0845	74 55		        mov     a,#055h
 2068:	  0847	E4		        clr     a
 2069:	  0848	70 11		        jnz     tg_a0
 2070:
 2071:	  084A	74 55		        mov     a,#055h
 2072:	  084C	F4		        cpl     a
 2073:	  084D	B4 AA 0B	        cjne    a,#0aah,tg_a0
 2074:
 2075:	  0850	74 97		        mov     a,#097h
 2076:	  0852	C4		        swap    a
 2077:	  0853	B4 79 05	        cjne    a,#079h,tg_a0
 2078:
 2079:				        eot     'a',tg_a0
 2080+ 1			        putc    #'a'
 2081+ 2  0856			??0200:
 2082+ 2			        ;jnb     SCON.1,putc_loop
 2083+ 2			        ;clr     SCON.1
 2084+ 2  0856	75 99 61	        mov     SBUF,#'a'
 2085+ 1  0859	80 06		        sjmp    ??0199
 2086+ 1  085B			tg_a0:  putc    #'?'
 2087+ 2  085B			??0201:
 2088+ 2			        ;jnb     SCON.1,putc_loop
 2089+ 2			        ;clr     SCON.1
 2090+ 2  085B	75 99 3F	        mov     SBUF,#'?'
 2091+ 1  085E	75 6E 01	        mov     fail,#001h
 2092+ 1  0861			??0199:
 2093:
 2094:	  0861	75 83 12	        mov     DPH,#012h
 2095:	  0864	75 82 FD	        mov     DPL,#0fdh
 2096:	  0867	A3		        inc     dptr
 2097:	  0868	E5 83		        mov     a,DPH
 2098:	  086A	B4 12 20	        cjne    a,#012h,tg_b0
 2099:	  086D	E5 82		        mov     a,DPL
 2100:	  086F	B4 FE 1B	        cjne    a,#0feh,tg_b0
 2101:	  0872	A3		        inc     dptr
 2102:	  0873	E5 83		        mov     a,DPH
 2103:	  0875	B4 12 15	        cjne    a,#012h,tg_b0
 2104:	  0878	E5 82		        mov     a,DPL
 2105:	  087A	B4 FF 10	        cjne    a,#0ffh,tg_b0
 2106:	  087D	A3		        inc     dptr
 2107:	  087E	E5 83		        mov     a,DPH
 2108:	  0880	B4 13 0A	        cjne    a,#013h,tg_b0
 2109:	  0883	E5 82		        mov     a,DPL
 2110:	  0885	B4 00 05	        cjne    a,#000h,tg_b0
 2111:
 2112:				        eot     'b',tg_b0
 2113+ 1			        putc    #'b'
 2114+ 2  0888			??0203:
 2115+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 39



 Line  I  Addr  Code            Source

 2116+ 2			        ;clr     SCON.1
 2117+ 2  0888	75 99 62	        mov     SBUF,#'b'
 2118+ 1  088B	80 06		        sjmp    ??0202
 2119+ 1  088D			tg_b0:  putc    #'?'
 2120+ 2  088D			??0204:
 2121+ 2			        ;jnb     SCON.1,putc_loop
 2122+ 2			        ;clr     SCON.1
 2123+ 2  088D	75 99 3F	        mov     SBUF,#'?'
 2124+ 1  0890	75 6E 01	        mov     fail,#001h
 2125+ 1  0893			??0202:
 2126:
 2127:				        ; c.- <XCH A,dir>
 2128:	  0893	74 34		        mov     a,#34h
 2129:	  0895	75 13 57	        mov     13h,#57h
 2130:	  0898	C5 13		        xch     a,13h
 2131:	  089A	B4 57 0A	        cjne    a,#57h,tg_c0
 2132:	  089D	E5 13		        mov     a,13h
 2133:	  089F	B4 34 05	        cjne    a,#34h,tg_c0
 2134:
 2135:				        eot     'c',tg_c0
 2136+ 1			        putc    #'c'
 2137+ 2  08A2			??0206:
 2138+ 2			        ;jnb     SCON.1,putc_loop
 2139+ 2			        ;clr     SCON.1
 2140+ 2  08A2	75 99 63	        mov     SBUF,#'c'
 2141+ 1  08A5	80 06		        sjmp    ??0205
 2142+ 1  08A7			tg_c0:  putc    #'?'
 2143+ 2  08A7			??0207:
 2144+ 2			        ;jnb     SCON.1,putc_loop
 2145+ 2			        ;clr     SCON.1
 2146+ 2  08A7	75 99 3F	        mov     SBUF,#'?'
 2147+ 1  08AA	75 6E 01	        mov     fail,#001h
 2148+ 1  08AD			??0205:
 2149:
 2150:				        ; d.- <XCH A,@Ri>
 2151:	  08AD	74 91		        mov     a,#91h
 2152:	  08AF	75 29 78	        mov     29h,#78h
 2153:	  08B2	79 29		        mov     r1,#29h
 2154:	  08B4	C7		        xch     a,@r1
 2155:	  08B5	B4 78 0A	        cjne    a,#78h,tg_d0
 2156:	  08B8	E5 29		        mov     a,29h
 2157:	  08BA	B4 91 05	        cjne    a,#91h,tg_d0
 2158:
 2159:				        eot     'd',tg_d0
 2160+ 1			        putc    #'d'
 2161+ 2  08BD			??0209:
 2162+ 2			        ;jnb     SCON.1,putc_loop
 2163+ 2			        ;clr     SCON.1
 2164+ 2  08BD	75 99 64	        mov     SBUF,#'d'
 2165+ 1  08C0	80 06		        sjmp    ??0208
 2166+ 1  08C2			tg_d0:  putc    #'?'
 2167+ 2  08C2			??0210:
 2168+ 2			        ;jnb     SCON.1,putc_loop
 2169+ 2			        ;clr     SCON.1
 2170+ 2  08C2	75 99 3F	        mov     SBUF,#'?'
 2171+ 1  08C5	75 6E 01	        mov     fail,#001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 40



 Line  I  Addr  Code            Source

 2172+ 1  08C8			??0208:
 2173:
 2174:				        ; e.- <XCHG A,Rn>
 2175:	  08C8	74 43		        mov     a,#43h
 2176:	  08CA	7E A2		        mov     r6,#0a2h
 2177:	  08CC	CE		        xch     a,r6
 2178:	  08CD	B4 A2 09	        cjne    a,#0a2h,tg_e0
 2179:	  08D0	EE		        mov     a,r6
 2180:	  08D1	B4 43 05	        cjne    a,#43h,tg_e0
 2181:
 2182:				        eot     'e',tg_e0
 2183+ 1			        putc    #'e'
 2184+ 2  08D4			??0212:
 2185+ 2			        ;jnb     SCON.1,putc_loop
 2186+ 2			        ;clr     SCON.1
 2187+ 2  08D4	75 99 65	        mov     SBUF,#'e'
 2188+ 1  08D7	80 06		        sjmp    ??0211
 2189+ 1  08D9			tg_e0:  putc    #'?'
 2190+ 2  08D9			??0213:
 2191+ 2			        ;jnb     SCON.1,putc_loop
 2192+ 2			        ;clr     SCON.1
 2193+ 2  08D9	75 99 3F	        mov     SBUF,#'?'
 2194+ 1  08DC	75 6E 01	        mov     fail,#001h
 2195+ 1  08DF			??0211:
 2196:
 2197:
 2198:				        put_crlf                    ; end of test series
 2199+ 1			        putc    #13
 2200+ 2  08DF			??0214:
 2201+ 2			        ;jnb     SCON.1,putc_loop
 2202+ 2			        ;clr     SCON.1
 2203+ 2  08DF	75 99 0D	        mov     SBUF,#13
 2204+ 1			        putc    #10
 2205+ 2  08E2			??0215:
 2206+ 2			        ;jnb     SCON.1,putc_loop
 2207+ 2			        ;clr     SCON.1
 2208+ 2  08E2	75 99 0A	        mov     SBUF,#10
 2209:
 2210:
 2211:				        ;-- ALU opcode block test ----------------------------------------------
 2212:				        ; This set of macros is used to test families of opcodes, such as ORL,
 2213:				        ; ANL, ADD, etc. with all their addressing modes.
 2214:				        ;
 2215:				        ; a.- <OP A,dir>, <OP A,@Ri>, <OP A, Rn> (n=0,1)
 2216:				        ; b.- <OP A, Rn> (n=2,3)
 2217:				        ; c.- <OP A, Rn> (n=4,5)
 2218:				        ; d.- <OP A, Rn> (n=6,7)
 2219:				        ; e.- <OP dir,#imm>
 2220:				        ; f.- <OP A,#imm>
 2221:				        ; g.- <OP dir,A>
 2222:
 2223:				        ;store psw away for later comparison
 2224:				save_psw macro
 2225:				        mov     saved_psw,PSW
 2226:				        endm
 2227:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 41



 Line  I  Addr  Code            Source

 2228:				        ; compare flags CY, AC and OV with expected values in <flags>
 2229:				tst_psw macro   flags,error_loc
 2230:				        mov     a,saved_psw
 2231:				        anl     a,#0c4h
 2232:				        xrl     a,#flags
 2233:				        anl     a,#0feh
 2234:				        jnz     error_loc
 2235:				        endm
 2236:
 2237:				        ; Set the CY flag to the value of the lsb of argument <flags>
 2238:				set_cy  macro   flags
 2239:				        local   cy_val
 2240:				cy_val  set     (flags and 1)
 2241:				        if      cy_val eq 1
 2242:				        setb    c
 2243:				        else
 2244:				        clr     c
 2245:				        endif
 2246:				        endm
 2247:
 2248:				        ; Test instruction <op> A, src
 2249:				        ;
 2250:				        ; flags = (<expected PSW> & 0xfe) | <input cy>
 2251:				        ; (P flag result is not tested)
 2252:				top_ma  macro   op,src,error_loc,flags
 2253:				        mov     src,#arg0
 2254:				        mov     a,#arg1
 2255:				        ifnb    <flags>
 2256:				        set_cy  flags
 2257:				        endif
 2258:				        op      a,src
 2259:				        ifnb    <flags>
 2260:				        save_psw
 2261:				        endif
 2262:				        cjne    a,#res,error_loc
 2263:				        ifnb    <flags>
 2264:				        tst_psw <flags>,error_loc
 2265:				        endif
 2266:				        endm
 2267:
 2268:				        ; Test instruction <op> dst, #arg0
 2269:				        ; (<flags> same as top_ma)
 2270:				top_mb  macro   op,dst,error_loc,flags
 2271:				        mov     dst,#arg1
 2272:				        ifnb    <flags>
 2273:				        set_cy  flags
 2274:				        endif
 2275:				        op      dst,#arg0
 2276:				        ifnb    <flags>
 2277:				        save_psw
 2278:				        endif
 2279:				        mov     ACC,dst
 2280:				        cjne    a,#res,error_loc
 2281:				        ifnb    <flags>
 2282:				        tst_psw <flags>,error_loc
 2283:				        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 42



 Line  I  Addr  Code            Source

 2284:				        endm
 2285:
 2286:				        ; Test instruction <op> dir, A
 2287:				        ; (<flags> same as top_ma)
 2288:				top_mc  macro   op,error_loc,flags
 2289:				        mov     dir0,#arg0
 2290:				        mov     a,#arg1
 2291:				        ifnb    <flags>
 2292:				        set_cy  flags
 2293:				        endif
 2294:				        op      dir0,a
 2295:				        ifnb    <flags>
 2296:				        save_psw
 2297:				        endif
 2298:				        mov     a,dir0
 2299:				        cjne    a,#res,error_loc
 2300:				        ifnb    <flags>
 2301:				        tst_psw <flags>,error_loc
 2302:				        endif
 2303:				        endm
 2304:
 2305:				        ; Test ALU instruction with all addressing modes.
 2306:				        ; FIXME <op> A, #imm not tested!
 2307:				        ; op : Opcode to be tested
 2308:				        ; a0, a1 : Values used as 1st and 2nd args in all addressing modes
 2309:				        ; r : Expected result
 2310:				        ; am :
 2311:				        ; flags : <Expected PSW value>&0xfe | <input cy>
 2312:				        ; (if the parameter is unused, the macro skips the flag check)
 2313:				tst_alu macro   op,a0,a1,r,am,flags
 2314:				        local   tall_0d
 2315:				        local   tall_0a
 2316:				        local   tall_0b
 2317:				        local   tall_0c
 2318:				        local   tall_1
 2319:				        local   tall_2
 2320:				        local   tall_3
 2321:				        ; Put the argument and result data into variables for easier access
 2322:				        arg0    set a0
 2323:				        arg1    set a1
 2324:				        res     set r
 2325:
 2326:				        ; Test <op> A, dir
 2327:				        top_ma  op,dir0,tall_0a,<flags>
 2328:				        ; Test <op> A, @R0
 2329:				        mov     r0,#dir0
 2330:				        top_ma  op,@r0,tall_0a,<flags>
 2331:				        ; Test <op> A, @R1
 2332:				        mov     r1,#031h
 2333:				        top_ma  op,@r1,tall_0a,<flags>
 2334:
 2335:				        ; Now test <op> A, Rn for n in 0..7
 2336:				        top_ma  op,r0,tall_0a,<flags>
 2337:				        top_ma  op,r1,tall_0a,<flags>
 2338:
 2339:				        eot     'a',tall_0a

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 43



 Line  I  Addr  Code            Source

 2340:
 2341:				        top_ma  op,r2,tall_0b,<flags>
 2342:				        top_ma  op,r3,tall_0b,<flags>
 2343:
 2344:				        eot     'b',tall_0b
 2345:
 2346:				        top_ma  op,r4,tall_0c,<flags>
 2347:				        top_ma  op,r5,tall_0c,<flags>
 2348:
 2349:				        eot     'c',tall_0c
 2350:
 2351:				        top_ma  op,r6,tall_0d,<flags>
 2352:				        top_ma  op,r7,tall_0d,<flags>
 2353:
 2354:				        eot     'd',tall_0d
 2355:				        ; Ok, <op> A, {dir | @Ri | Rn} done.
 2356:
 2357:				        ; Optionally test immediate addressing modes.
 2358:
 2359:				        if      (am and 1) ne 0
 2360:				        ; Test <op> A, #arg1...
 2361:				        top_mb  op,a,tall_1,<flags>
 2362:				        eot     'e',tall_1
 2363:				        endif
 2364:
 2365:				        if      (am and 2) ne 0
 2366:				        ; ...and <op> dir, #arg1
 2367:				        top_mb  op,dir0,tall_2,<flags>
 2368:				        eot     'f',tall_2
 2369:				        endif
 2370:
 2371:				        ; Optionally test <op> dir, A
 2372:				        if      (am and 4) ne 0
 2373:				        top_mc  op,tall_3,<flags>
 2374:				        eot     'g',tall_3
 2375:				        endif
 2376:
 2377:				        endm
 2378:
 2379:
 2380:				        ;-- Test series H ------------------------------------------------------
 2381:				        ; ANL
 2382:				        ; (See comments for 'ALU opcode block test')
 2383:
 2384:				        putc    #'H'                ; start of test series
 2385+ 1  08E5			??0216:
 2386+ 1			        ;jnb     SCON.1,putc_loop
 2387+ 1			        ;clr     SCON.1
 2388+ 1  08E5	75 99 48	        mov     SBUF,#'H'
 2389:
 2390:				        tst_alu anl,03ch,099h,018h,07h,
 2391+ 1			        ; Put the argument and result data into variables for easier access
 2392+ 1	N      003C	        arg0    set 03ch
 2393+ 1	N      0099	        arg1    set 099h
 2394+ 1	N      0018	        res     set 018h
 2395+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 44



 Line  I  Addr  Code            Source

 2396+ 1			        ; Test <op> A, dir
 2397+ 1			        top_ma  anl,dir0,??0218,<>
 2398+ 2  08E8	75 60 3C	        mov     dir0,#arg0
 2399+ 2  08EB	74 99		        mov     a,#arg1
 2400+ 2			        ifnb    <>
 2401+ 2			        set_cy
 2402+ 2			        endif
 2403+ 2  08ED	55 60		        anl      a,dir0
 2404+ 2			        ifnb    <>
 2405+ 2			        save_psw
 2406+ 2			        endif
 2407+ 2  08EF	B4 18 29	        cjne    a,#res,??0218
 2408+ 2			        ifnb    <>
 2409+ 2			        tst_psw <>,??0218
 2410+ 2			        endif
 2411+ 1			        ; Test <op> A, @R0
 2412+ 1  08F2	78 60		        mov     r0,#dir0
 2413+ 1			        top_ma  anl,@r0,??0218,<>
 2414+ 2  08F4	76 3C		        mov     @r0,#arg0
 2415+ 2  08F6	74 99		        mov     a,#arg1
 2416+ 2			        ifnb    <>
 2417+ 2			        set_cy
 2418+ 2			        endif
 2419+ 2  08F8	56		        anl      a,@r0
 2420+ 2			        ifnb    <>
 2421+ 2			        save_psw
 2422+ 2			        endif
 2423+ 2  08F9	B4 18 1F	        cjne    a,#res,??0218
 2424+ 2			        ifnb    <>
 2425+ 2			        tst_psw <>,??0218
 2426+ 2			        endif
 2427+ 1			        ; Test <op> A, @R1
 2428+ 1  08FC	79 31		        mov     r1,#031h
 2429+ 1			        top_ma  anl,@r1,??0218,<>
 2430+ 2  08FE	77 3C		        mov     @r1,#arg0
 2431+ 2  0900	74 99		        mov     a,#arg1
 2432+ 2			        ifnb    <>
 2433+ 2			        set_cy
 2434+ 2			        endif
 2435+ 2  0902	57		        anl      a,@r1
 2436+ 2			        ifnb    <>
 2437+ 2			        save_psw
 2438+ 2			        endif
 2439+ 2  0903	B4 18 15	        cjne    a,#res,??0218
 2440+ 2			        ifnb    <>
 2441+ 2			        tst_psw <>,??0218
 2442+ 2			        endif
 2443+ 1
 2444+ 1			        ; Now test <op> A, Rn for n in 0..7
 2445+ 1			        top_ma  anl,r0,??0218,<>
 2446+ 2  0906	78 3C		        mov     r0,#arg0
 2447+ 2  0908	74 99		        mov     a,#arg1
 2448+ 2			        ifnb    <>
 2449+ 2			        set_cy
 2450+ 2			        endif
 2451+ 2  090A	58		        anl      a,r0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 45



 Line  I  Addr  Code            Source

 2452+ 2			        ifnb    <>
 2453+ 2			        save_psw
 2454+ 2			        endif
 2455+ 2  090B	B4 18 0D	        cjne    a,#res,??0218
 2456+ 2			        ifnb    <>
 2457+ 2			        tst_psw <>,??0218
 2458+ 2			        endif
 2459+ 1			        top_ma  anl,r1,??0218,<>
 2460+ 2  090E	79 3C		        mov     r1,#arg0
 2461+ 2  0910	74 99		        mov     a,#arg1
 2462+ 2			        ifnb    <>
 2463+ 2			        set_cy
 2464+ 2			        endif
 2465+ 2  0912	59		        anl      a,r1
 2466+ 2			        ifnb    <>
 2467+ 2			        save_psw
 2468+ 2			        endif
 2469+ 2  0913	B4 18 05	        cjne    a,#res,??0218
 2470+ 2			        ifnb    <>
 2471+ 2			        tst_psw <>,??0218
 2472+ 2			        endif
 2473+ 1
 2474+ 1			        eot     'a',??0218
 2475+ 2			        putc    #'a'
 2476+ 3  0916			??0225:
 2477+ 3			        ;jnb     SCON.1,putc_loop
 2478+ 3			        ;clr     SCON.1
 2479+ 3  0916	75 99 61	        mov     SBUF,#'a'
 2480+ 2  0919	80 06		        sjmp    ??0224
 2481+ 2  091B			??0218:  putc    #'?'
 2482+ 3  091B			??0226:
 2483+ 3			        ;jnb     SCON.1,putc_loop
 2484+ 3			        ;clr     SCON.1
 2485+ 3  091B	75 99 3F	        mov     SBUF,#'?'
 2486+ 2  091E	75 6E 01	        mov     fail,#001h
 2487+ 2  0921			??0224:
 2488+ 1
 2489+ 1			        top_ma  anl,r2,??0219,<>
 2490+ 2  0921	7A 3C		        mov     r2,#arg0
 2491+ 2  0923	74 99		        mov     a,#arg1
 2492+ 2			        ifnb    <>
 2493+ 2			        set_cy
 2494+ 2			        endif
 2495+ 2  0925	5A		        anl      a,r2
 2496+ 2			        ifnb    <>
 2497+ 2			        save_psw
 2498+ 2			        endif
 2499+ 2  0926	B4 18 0D	        cjne    a,#res,??0219
 2500+ 2			        ifnb    <>
 2501+ 2			        tst_psw <>,??0219
 2502+ 2			        endif
 2503+ 1			        top_ma  anl,r3,??0219,<>
 2504+ 2  0929	7B 3C		        mov     r3,#arg0
 2505+ 2  092B	74 99		        mov     a,#arg1
 2506+ 2			        ifnb    <>
 2507+ 2			        set_cy

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 46



 Line  I  Addr  Code            Source

 2508+ 2			        endif
 2509+ 2  092D	5B		        anl      a,r3
 2510+ 2			        ifnb    <>
 2511+ 2			        save_psw
 2512+ 2			        endif
 2513+ 2  092E	B4 18 05	        cjne    a,#res,??0219
 2514+ 2			        ifnb    <>
 2515+ 2			        tst_psw <>,??0219
 2516+ 2			        endif
 2517+ 1
 2518+ 1			        eot     'b',??0219
 2519+ 2			        putc    #'b'
 2520+ 3  0931			??0228:
 2521+ 3			        ;jnb     SCON.1,putc_loop
 2522+ 3			        ;clr     SCON.1
 2523+ 3  0931	75 99 62	        mov     SBUF,#'b'
 2524+ 2  0934	80 06		        sjmp    ??0227
 2525+ 2  0936			??0219:  putc    #'?'
 2526+ 3  0936			??0229:
 2527+ 3			        ;jnb     SCON.1,putc_loop
 2528+ 3			        ;clr     SCON.1
 2529+ 3  0936	75 99 3F	        mov     SBUF,#'?'
 2530+ 2  0939	75 6E 01	        mov     fail,#001h
 2531+ 2  093C			??0227:
 2532+ 1
 2533+ 1			        top_ma  anl,r4,??0220,<>
 2534+ 2  093C	7C 3C		        mov     r4,#arg0
 2535+ 2  093E	74 99		        mov     a,#arg1
 2536+ 2			        ifnb    <>
 2537+ 2			        set_cy
 2538+ 2			        endif
 2539+ 2  0940	5C		        anl      a,r4
 2540+ 2			        ifnb    <>
 2541+ 2			        save_psw
 2542+ 2			        endif
 2543+ 2  0941	B4 18 0D	        cjne    a,#res,??0220
 2544+ 2			        ifnb    <>
 2545+ 2			        tst_psw <>,??0220
 2546+ 2			        endif
 2547+ 1			        top_ma  anl,r5,??0220,<>
 2548+ 2  0944	7D 3C		        mov     r5,#arg0
 2549+ 2  0946	74 99		        mov     a,#arg1
 2550+ 2			        ifnb    <>
 2551+ 2			        set_cy
 2552+ 2			        endif
 2553+ 2  0948	5D		        anl      a,r5
 2554+ 2			        ifnb    <>
 2555+ 2			        save_psw
 2556+ 2			        endif
 2557+ 2  0949	B4 18 05	        cjne    a,#res,??0220
 2558+ 2			        ifnb    <>
 2559+ 2			        tst_psw <>,??0220
 2560+ 2			        endif
 2561+ 1
 2562+ 1			        eot     'c',??0220
 2563+ 2			        putc    #'c'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 47



 Line  I  Addr  Code            Source

 2564+ 3  094C			??0231:
 2565+ 3			        ;jnb     SCON.1,putc_loop
 2566+ 3			        ;clr     SCON.1
 2567+ 3  094C	75 99 63	        mov     SBUF,#'c'
 2568+ 2  094F	80 06		        sjmp    ??0230
 2569+ 2  0951			??0220:  putc    #'?'
 2570+ 3  0951			??0232:
 2571+ 3			        ;jnb     SCON.1,putc_loop
 2572+ 3			        ;clr     SCON.1
 2573+ 3  0951	75 99 3F	        mov     SBUF,#'?'
 2574+ 2  0954	75 6E 01	        mov     fail,#001h
 2575+ 2  0957			??0230:
 2576+ 1
 2577+ 1			        top_ma  anl,r6,??0217,<>
 2578+ 2  0957	7E 3C		        mov     r6,#arg0
 2579+ 2  0959	74 99		        mov     a,#arg1
 2580+ 2			        ifnb    <>
 2581+ 2			        set_cy
 2582+ 2			        endif
 2583+ 2  095B	5E		        anl      a,r6
 2584+ 2			        ifnb    <>
 2585+ 2			        save_psw
 2586+ 2			        endif
 2587+ 2  095C	B4 18 0D	        cjne    a,#res,??0217
 2588+ 2			        ifnb    <>
 2589+ 2			        tst_psw <>,??0217
 2590+ 2			        endif
 2591+ 1			        top_ma  anl,r7,??0217,<>
 2592+ 2  095F	7F 3C		        mov     r7,#arg0
 2593+ 2  0961	74 99		        mov     a,#arg1
 2594+ 2			        ifnb    <>
 2595+ 2			        set_cy
 2596+ 2			        endif
 2597+ 2  0963	5F		        anl      a,r7
 2598+ 2			        ifnb    <>
 2599+ 2			        save_psw
 2600+ 2			        endif
 2601+ 2  0964	B4 18 05	        cjne    a,#res,??0217
 2602+ 2			        ifnb    <>
 2603+ 2			        tst_psw <>,??0217
 2604+ 2			        endif
 2605+ 1
 2606+ 1			        eot     'd',??0217
 2607+ 2			        putc    #'d'
 2608+ 3  0967			??0234:
 2609+ 3			        ;jnb     SCON.1,putc_loop
 2610+ 3			        ;clr     SCON.1
 2611+ 3  0967	75 99 64	        mov     SBUF,#'d'
 2612+ 2  096A	80 06		        sjmp    ??0233
 2613+ 2  096C			??0217:  putc    #'?'
 2614+ 3  096C			??0235:
 2615+ 3			        ;jnb     SCON.1,putc_loop
 2616+ 3			        ;clr     SCON.1
 2617+ 3  096C	75 99 3F	        mov     SBUF,#'?'
 2618+ 2  096F	75 6E 01	        mov     fail,#001h
 2619+ 2  0972			??0233:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 48



 Line  I  Addr  Code            Source

 2620+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 2621+ 1
 2622+ 1			        ; Optionally test immediate addressing modes.
 2623+ 1
 2624+ 1	N      FFFF	        if      (07h and 1) ne 0
 2625+ 1			        ; Test <op> A, #arg1...
 2626+ 1			        top_mb  anl,a,??0221,<>
 2627+ 2  0972	74 99		        mov     a,#arg1
 2628+ 2			        ifnb    <>
 2629+ 2			        set_cy
 2630+ 2			        endif
 2631+ 2  0974	54 3C		        anl      a,#arg0
 2632+ 2			        ifnb    <>
 2633+ 2			        save_psw
 2634+ 2			        endif
 2635+ 2  0976	F5 E0		        mov     ACC,a
 2636+ 2  0978	B4 18 05	        cjne    a,#res,??0221
 2637+ 2			        ifnb    <>
 2638+ 2			        tst_psw <>,??0221
 2639+ 2			        endif
 2640+ 1			        eot     'e',??0221
 2641+ 2			        putc    #'e'
 2642+ 3  097B			??0237:
 2643+ 3			        ;jnb     SCON.1,putc_loop
 2644+ 3			        ;clr     SCON.1
 2645+ 3  097B	75 99 65	        mov     SBUF,#'e'
 2646+ 2  097E	80 06		        sjmp    ??0236
 2647+ 2  0980			??0221:  putc    #'?'
 2648+ 3  0980			??0238:
 2649+ 3			        ;jnb     SCON.1,putc_loop
 2650+ 3			        ;clr     SCON.1
 2651+ 3  0980	75 99 3F	        mov     SBUF,#'?'
 2652+ 2  0983	75 6E 01	        mov     fail,#001h
 2653+ 2  0986			??0236:
 2654+ 1			        endif
 2655+ 1
 2656+ 1	N      FFFF	        if      (07h and 2) ne 0
 2657+ 1			        ; ...and <op> dir, #arg1
 2658+ 1			        top_mb  anl,dir0,??0222,<>
 2659+ 2  0986	75 60 99	        mov     dir0,#arg1
 2660+ 2			        ifnb    <>
 2661+ 2			        set_cy
 2662+ 2			        endif
 2663+ 2  0989	53 60 3C	        anl      dir0,#arg0
 2664+ 2			        ifnb    <>
 2665+ 2			        save_psw
 2666+ 2			        endif
 2667+ 2  098C	85 60 E0	        mov     ACC,dir0
 2668+ 2  098F	B4 18 05	        cjne    a,#res,??0222
 2669+ 2			        ifnb    <>
 2670+ 2			        tst_psw <>,??0222
 2671+ 2			        endif
 2672+ 1			        eot     'f',??0222
 2673+ 2			        putc    #'f'
 2674+ 3  0992			??0240:
 2675+ 3			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 49



 Line  I  Addr  Code            Source

 2676+ 3			        ;clr     SCON.1
 2677+ 3  0992	75 99 66	        mov     SBUF,#'f'
 2678+ 2  0995	80 06		        sjmp    ??0239
 2679+ 2  0997			??0222:  putc    #'?'
 2680+ 3  0997			??0241:
 2681+ 3			        ;jnb     SCON.1,putc_loop
 2682+ 3			        ;clr     SCON.1
 2683+ 3  0997	75 99 3F	        mov     SBUF,#'?'
 2684+ 2  099A	75 6E 01	        mov     fail,#001h
 2685+ 2  099D			??0239:
 2686+ 1			        endif
 2687+ 1
 2688+ 1			        ; Optionally test <op> dir, A
 2689+ 1	N      FFFF	        if      (07h and 4) ne 0
 2690+ 1			        top_mc  anl,??0223,<>
 2691+ 2  099D	75 60 3C	        mov     dir0,#arg0
 2692+ 2  09A0	74 99		        mov     a,#arg1
 2693+ 2			        ifnb    <>
 2694+ 2			        set_cy
 2695+ 2			        endif
 2696+ 2  09A2	52 60		        anl      dir0,a
 2697+ 2			        ifnb    <>
 2698+ 2			        save_psw
 2699+ 2			        endif
 2700+ 2  09A4	E5 60		        mov     a,dir0
 2701+ 2  09A6	B4 18 05	        cjne    a,#res,??0223
 2702+ 2			        ifnb    <>
 2703+ 2			        tst_psw <>,??0223
 2704+ 2			        endif
 2705+ 1			        eot     'g',??0223
 2706+ 2			        putc    #'g'
 2707+ 3  09A9			??0243:
 2708+ 3			        ;jnb     SCON.1,putc_loop
 2709+ 3			        ;clr     SCON.1
 2710+ 3  09A9	75 99 67	        mov     SBUF,#'g'
 2711+ 2  09AC	80 06		        sjmp    ??0242
 2712+ 2  09AE			??0223:  putc    #'?'
 2713+ 3  09AE			??0244:
 2714+ 3			        ;jnb     SCON.1,putc_loop
 2715+ 3			        ;clr     SCON.1
 2716+ 3  09AE	75 99 3F	        mov     SBUF,#'?'
 2717+ 2  09B1	75 6E 01	        mov     fail,#001h
 2718+ 2  09B4			??0242:
 2719+ 1			        endif
 2720+ 1
 2721:
 2722:				        put_crlf                    ; end of test series
 2723+ 1			        putc    #13
 2724+ 2  09B4			??0245:
 2725+ 2			        ;jnb     SCON.1,putc_loop
 2726+ 2			        ;clr     SCON.1
 2727+ 2  09B4	75 99 0D	        mov     SBUF,#13
 2728+ 1			        putc    #10
 2729+ 2  09B7			??0246:
 2730+ 2			        ;jnb     SCON.1,putc_loop
 2731+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 50



 Line  I  Addr  Code            Source

 2732+ 2  09B7	75 99 0A	        mov     SBUF,#10
 2733:
 2734:
 2735:				        ;-- Test series I ------------------------------------------------------
 2736:				        ; ORL
 2737:				        ; (See comments for 'ALU opcode block test')
 2738:
 2739:				        putc    #'I'                ; start of test series
 2740+ 1  09BA			??0247:
 2741+ 1			        ;jnb     SCON.1,putc_loop
 2742+ 1			        ;clr     SCON.1
 2743+ 1  09BA	75 99 49	        mov     SBUF,#'I'
 2744:
 2745:				        tst_alu orl,051h,092h,0d3h,07h,
 2746+ 1			        ; Put the argument and result data into variables for easier access
 2747+ 1	N      0051	        arg0    set 051h
 2748+ 1	N      0092	        arg1    set 092h
 2749+ 1	N      00D3	        res     set 0d3h
 2750+ 1
 2751+ 1			        ; Test <op> A, dir
 2752+ 1			        top_ma  orl,dir0,??0249,<>
 2753+ 2  09BD	75 60 51	        mov     dir0,#arg0
 2754+ 2  09C0	74 92		        mov     a,#arg1
 2755+ 2			        ifnb    <>
 2756+ 2			        set_cy
 2757+ 2			        endif
 2758+ 2  09C2	45 60		        orl      a,dir0
 2759+ 2			        ifnb    <>
 2760+ 2			        save_psw
 2761+ 2			        endif
 2762+ 2  09C4	B4 D3 29	        cjne    a,#res,??0249
 2763+ 2			        ifnb    <>
 2764+ 2			        tst_psw <>,??0249
 2765+ 2			        endif
 2766+ 1			        ; Test <op> A, @R0
 2767+ 1  09C7	78 60		        mov     r0,#dir0
 2768+ 1			        top_ma  orl,@r0,??0249,<>
 2769+ 2  09C9	76 51		        mov     @r0,#arg0
 2770+ 2  09CB	74 92		        mov     a,#arg1
 2771+ 2			        ifnb    <>
 2772+ 2			        set_cy
 2773+ 2			        endif
 2774+ 2  09CD	46		        orl      a,@r0
 2775+ 2			        ifnb    <>
 2776+ 2			        save_psw
 2777+ 2			        endif
 2778+ 2  09CE	B4 D3 1F	        cjne    a,#res,??0249
 2779+ 2			        ifnb    <>
 2780+ 2			        tst_psw <>,??0249
 2781+ 2			        endif
 2782+ 1			        ; Test <op> A, @R1
 2783+ 1  09D1	79 31		        mov     r1,#031h
 2784+ 1			        top_ma  orl,@r1,??0249,<>
 2785+ 2  09D3	77 51		        mov     @r1,#arg0
 2786+ 2  09D5	74 92		        mov     a,#arg1
 2787+ 2			        ifnb    <>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 51



 Line  I  Addr  Code            Source

 2788+ 2			        set_cy
 2789+ 2			        endif
 2790+ 2  09D7	47		        orl      a,@r1
 2791+ 2			        ifnb    <>
 2792+ 2			        save_psw
 2793+ 2			        endif
 2794+ 2  09D8	B4 D3 15	        cjne    a,#res,??0249
 2795+ 2			        ifnb    <>
 2796+ 2			        tst_psw <>,??0249
 2797+ 2			        endif
 2798+ 1
 2799+ 1			        ; Now test <op> A, Rn for n in 0..7
 2800+ 1			        top_ma  orl,r0,??0249,<>
 2801+ 2  09DB	78 51		        mov     r0,#arg0
 2802+ 2  09DD	74 92		        mov     a,#arg1
 2803+ 2			        ifnb    <>
 2804+ 2			        set_cy
 2805+ 2			        endif
 2806+ 2  09DF	48		        orl      a,r0
 2807+ 2			        ifnb    <>
 2808+ 2			        save_psw
 2809+ 2			        endif
 2810+ 2  09E0	B4 D3 0D	        cjne    a,#res,??0249
 2811+ 2			        ifnb    <>
 2812+ 2			        tst_psw <>,??0249
 2813+ 2			        endif
 2814+ 1			        top_ma  orl,r1,??0249,<>
 2815+ 2  09E3	79 51		        mov     r1,#arg0
 2816+ 2  09E5	74 92		        mov     a,#arg1
 2817+ 2			        ifnb    <>
 2818+ 2			        set_cy
 2819+ 2			        endif
 2820+ 2  09E7	49		        orl      a,r1
 2821+ 2			        ifnb    <>
 2822+ 2			        save_psw
 2823+ 2			        endif
 2824+ 2  09E8	B4 D3 05	        cjne    a,#res,??0249
 2825+ 2			        ifnb    <>
 2826+ 2			        tst_psw <>,??0249
 2827+ 2			        endif
 2828+ 1
 2829+ 1			        eot     'a',??0249
 2830+ 2			        putc    #'a'
 2831+ 3  09EB			??0256:
 2832+ 3			        ;jnb     SCON.1,putc_loop
 2833+ 3			        ;clr     SCON.1
 2834+ 3  09EB	75 99 61	        mov     SBUF,#'a'
 2835+ 2  09EE	80 06		        sjmp    ??0255
 2836+ 2  09F0			??0249:  putc    #'?'
 2837+ 3  09F0			??0257:
 2838+ 3			        ;jnb     SCON.1,putc_loop
 2839+ 3			        ;clr     SCON.1
 2840+ 3  09F0	75 99 3F	        mov     SBUF,#'?'
 2841+ 2  09F3	75 6E 01	        mov     fail,#001h
 2842+ 2  09F6			??0255:
 2843+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 52



 Line  I  Addr  Code            Source

 2844+ 1			        top_ma  orl,r2,??0250,<>
 2845+ 2  09F6	7A 51		        mov     r2,#arg0
 2846+ 2  09F8	74 92		        mov     a,#arg1
 2847+ 2			        ifnb    <>
 2848+ 2			        set_cy
 2849+ 2			        endif
 2850+ 2  09FA	4A		        orl      a,r2
 2851+ 2			        ifnb    <>
 2852+ 2			        save_psw
 2853+ 2			        endif
 2854+ 2  09FB	B4 D3 0D	        cjne    a,#res,??0250
 2855+ 2			        ifnb    <>
 2856+ 2			        tst_psw <>,??0250
 2857+ 2			        endif
 2858+ 1			        top_ma  orl,r3,??0250,<>
 2859+ 2  09FE	7B 51		        mov     r3,#arg0
 2860+ 2  0A00	74 92		        mov     a,#arg1
 2861+ 2			        ifnb    <>
 2862+ 2			        set_cy
 2863+ 2			        endif
 2864+ 2  0A02	4B		        orl      a,r3
 2865+ 2			        ifnb    <>
 2866+ 2			        save_psw
 2867+ 2			        endif
 2868+ 2  0A03	B4 D3 05	        cjne    a,#res,??0250
 2869+ 2			        ifnb    <>
 2870+ 2			        tst_psw <>,??0250
 2871+ 2			        endif
 2872+ 1
 2873+ 1			        eot     'b',??0250
 2874+ 2			        putc    #'b'
 2875+ 3  0A06			??0259:
 2876+ 3			        ;jnb     SCON.1,putc_loop
 2877+ 3			        ;clr     SCON.1
 2878+ 3  0A06	75 99 62	        mov     SBUF,#'b'
 2879+ 2  0A09	80 06		        sjmp    ??0258
 2880+ 2  0A0B			??0250:  putc    #'?'
 2881+ 3  0A0B			??0260:
 2882+ 3			        ;jnb     SCON.1,putc_loop
 2883+ 3			        ;clr     SCON.1
 2884+ 3  0A0B	75 99 3F	        mov     SBUF,#'?'
 2885+ 2  0A0E	75 6E 01	        mov     fail,#001h
 2886+ 2  0A11			??0258:
 2887+ 1
 2888+ 1			        top_ma  orl,r4,??0251,<>
 2889+ 2  0A11	7C 51		        mov     r4,#arg0
 2890+ 2  0A13	74 92		        mov     a,#arg1
 2891+ 2			        ifnb    <>
 2892+ 2			        set_cy
 2893+ 2			        endif
 2894+ 2  0A15	4C		        orl      a,r4
 2895+ 2			        ifnb    <>
 2896+ 2			        save_psw
 2897+ 2			        endif
 2898+ 2  0A16	B4 D3 0D	        cjne    a,#res,??0251
 2899+ 2			        ifnb    <>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 53



 Line  I  Addr  Code            Source

 2900+ 2			        tst_psw <>,??0251
 2901+ 2			        endif
 2902+ 1			        top_ma  orl,r5,??0251,<>
 2903+ 2  0A19	7D 51		        mov     r5,#arg0
 2904+ 2  0A1B	74 92		        mov     a,#arg1
 2905+ 2			        ifnb    <>
 2906+ 2			        set_cy
 2907+ 2			        endif
 2908+ 2  0A1D	4D		        orl      a,r5
 2909+ 2			        ifnb    <>
 2910+ 2			        save_psw
 2911+ 2			        endif
 2912+ 2  0A1E	B4 D3 05	        cjne    a,#res,??0251
 2913+ 2			        ifnb    <>
 2914+ 2			        tst_psw <>,??0251
 2915+ 2			        endif
 2916+ 1
 2917+ 1			        eot     'c',??0251
 2918+ 2			        putc    #'c'
 2919+ 3  0A21			??0262:
 2920+ 3			        ;jnb     SCON.1,putc_loop
 2921+ 3			        ;clr     SCON.1
 2922+ 3  0A21	75 99 63	        mov     SBUF,#'c'
 2923+ 2  0A24	80 06		        sjmp    ??0261
 2924+ 2  0A26			??0251:  putc    #'?'
 2925+ 3  0A26			??0263:
 2926+ 3			        ;jnb     SCON.1,putc_loop
 2927+ 3			        ;clr     SCON.1
 2928+ 3  0A26	75 99 3F	        mov     SBUF,#'?'
 2929+ 2  0A29	75 6E 01	        mov     fail,#001h
 2930+ 2  0A2C			??0261:
 2931+ 1
 2932+ 1			        top_ma  orl,r6,??0248,<>
 2933+ 2  0A2C	7E 51		        mov     r6,#arg0
 2934+ 2  0A2E	74 92		        mov     a,#arg1
 2935+ 2			        ifnb    <>
 2936+ 2			        set_cy
 2937+ 2			        endif
 2938+ 2  0A30	4E		        orl      a,r6
 2939+ 2			        ifnb    <>
 2940+ 2			        save_psw
 2941+ 2			        endif
 2942+ 2  0A31	B4 D3 0D	        cjne    a,#res,??0248
 2943+ 2			        ifnb    <>
 2944+ 2			        tst_psw <>,??0248
 2945+ 2			        endif
 2946+ 1			        top_ma  orl,r7,??0248,<>
 2947+ 2  0A34	7F 51		        mov     r7,#arg0
 2948+ 2  0A36	74 92		        mov     a,#arg1
 2949+ 2			        ifnb    <>
 2950+ 2			        set_cy
 2951+ 2			        endif
 2952+ 2  0A38	4F		        orl      a,r7
 2953+ 2			        ifnb    <>
 2954+ 2			        save_psw
 2955+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 54



 Line  I  Addr  Code            Source

 2956+ 2  0A39	B4 D3 05	        cjne    a,#res,??0248
 2957+ 2			        ifnb    <>
 2958+ 2			        tst_psw <>,??0248
 2959+ 2			        endif
 2960+ 1
 2961+ 1			        eot     'd',??0248
 2962+ 2			        putc    #'d'
 2963+ 3  0A3C			??0265:
 2964+ 3			        ;jnb     SCON.1,putc_loop
 2965+ 3			        ;clr     SCON.1
 2966+ 3  0A3C	75 99 64	        mov     SBUF,#'d'
 2967+ 2  0A3F	80 06		        sjmp    ??0264
 2968+ 2  0A41			??0248:  putc    #'?'
 2969+ 3  0A41			??0266:
 2970+ 3			        ;jnb     SCON.1,putc_loop
 2971+ 3			        ;clr     SCON.1
 2972+ 3  0A41	75 99 3F	        mov     SBUF,#'?'
 2973+ 2  0A44	75 6E 01	        mov     fail,#001h
 2974+ 2  0A47			??0264:
 2975+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 2976+ 1
 2977+ 1			        ; Optionally test immediate addressing modes.
 2978+ 1
 2979+ 1	N      FFFF	        if      (07h and 1) ne 0
 2980+ 1			        ; Test <op> A, #arg1...
 2981+ 1			        top_mb  orl,a,??0252,<>
 2982+ 2  0A47	74 92		        mov     a,#arg1
 2983+ 2			        ifnb    <>
 2984+ 2			        set_cy
 2985+ 2			        endif
 2986+ 2  0A49	44 51		        orl      a,#arg0
 2987+ 2			        ifnb    <>
 2988+ 2			        save_psw
 2989+ 2			        endif
 2990+ 2  0A4B	F5 E0		        mov     ACC,a
 2991+ 2  0A4D	B4 D3 05	        cjne    a,#res,??0252
 2992+ 2			        ifnb    <>
 2993+ 2			        tst_psw <>,??0252
 2994+ 2			        endif
 2995+ 1			        eot     'e',??0252
 2996+ 2			        putc    #'e'
 2997+ 3  0A50			??0268:
 2998+ 3			        ;jnb     SCON.1,putc_loop
 2999+ 3			        ;clr     SCON.1
 3000+ 3  0A50	75 99 65	        mov     SBUF,#'e'
 3001+ 2  0A53	80 06		        sjmp    ??0267
 3002+ 2  0A55			??0252:  putc    #'?'
 3003+ 3  0A55			??0269:
 3004+ 3			        ;jnb     SCON.1,putc_loop
 3005+ 3			        ;clr     SCON.1
 3006+ 3  0A55	75 99 3F	        mov     SBUF,#'?'
 3007+ 2  0A58	75 6E 01	        mov     fail,#001h
 3008+ 2  0A5B			??0267:
 3009+ 1			        endif
 3010+ 1
 3011+ 1	N      FFFF	        if      (07h and 2) ne 0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 55



 Line  I  Addr  Code            Source

 3012+ 1			        ; ...and <op> dir, #arg1
 3013+ 1			        top_mb  orl,dir0,??0253,<>
 3014+ 2  0A5B	75 60 92	        mov     dir0,#arg1
 3015+ 2			        ifnb    <>
 3016+ 2			        set_cy
 3017+ 2			        endif
 3018+ 2  0A5E	43 60 51	        orl      dir0,#arg0
 3019+ 2			        ifnb    <>
 3020+ 2			        save_psw
 3021+ 2			        endif
 3022+ 2  0A61	85 60 E0	        mov     ACC,dir0
 3023+ 2  0A64	B4 D3 05	        cjne    a,#res,??0253
 3024+ 2			        ifnb    <>
 3025+ 2			        tst_psw <>,??0253
 3026+ 2			        endif
 3027+ 1			        eot     'f',??0253
 3028+ 2			        putc    #'f'
 3029+ 3  0A67			??0271:
 3030+ 3			        ;jnb     SCON.1,putc_loop
 3031+ 3			        ;clr     SCON.1
 3032+ 3  0A67	75 99 66	        mov     SBUF,#'f'
 3033+ 2  0A6A	80 06		        sjmp    ??0270
 3034+ 2  0A6C			??0253:  putc    #'?'
 3035+ 3  0A6C			??0272:
 3036+ 3			        ;jnb     SCON.1,putc_loop
 3037+ 3			        ;clr     SCON.1
 3038+ 3  0A6C	75 99 3F	        mov     SBUF,#'?'
 3039+ 2  0A6F	75 6E 01	        mov     fail,#001h
 3040+ 2  0A72			??0270:
 3041+ 1			        endif
 3042+ 1
 3043+ 1			        ; Optionally test <op> dir, A
 3044+ 1	N      FFFF	        if      (07h and 4) ne 0
 3045+ 1			        top_mc  orl,??0254,<>
 3046+ 2  0A72	75 60 51	        mov     dir0,#arg0
 3047+ 2  0A75	74 92		        mov     a,#arg1
 3048+ 2			        ifnb    <>
 3049+ 2			        set_cy
 3050+ 2			        endif
 3051+ 2  0A77	42 60		        orl      dir0,a
 3052+ 2			        ifnb    <>
 3053+ 2			        save_psw
 3054+ 2			        endif
 3055+ 2  0A79	E5 60		        mov     a,dir0
 3056+ 2  0A7B	B4 D3 05	        cjne    a,#res,??0254
 3057+ 2			        ifnb    <>
 3058+ 2			        tst_psw <>,??0254
 3059+ 2			        endif
 3060+ 1			        eot     'g',??0254
 3061+ 2			        putc    #'g'
 3062+ 3  0A7E			??0274:
 3063+ 3			        ;jnb     SCON.1,putc_loop
 3064+ 3			        ;clr     SCON.1
 3065+ 3  0A7E	75 99 67	        mov     SBUF,#'g'
 3066+ 2  0A81	80 06		        sjmp    ??0273
 3067+ 2  0A83			??0254:  putc    #'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 56



 Line  I  Addr  Code            Source

 3068+ 3  0A83			??0275:
 3069+ 3			        ;jnb     SCON.1,putc_loop
 3070+ 3			        ;clr     SCON.1
 3071+ 3  0A83	75 99 3F	        mov     SBUF,#'?'
 3072+ 2  0A86	75 6E 01	        mov     fail,#001h
 3073+ 2  0A89			??0273:
 3074+ 1			        endif
 3075+ 1
 3076:
 3077:				        put_crlf                    ; end of test series
 3078+ 1			        putc    #13
 3079+ 2  0A89			??0276:
 3080+ 2			        ;jnb     SCON.1,putc_loop
 3081+ 2			        ;clr     SCON.1
 3082+ 2  0A89	75 99 0D	        mov     SBUF,#13
 3083+ 1			        putc    #10
 3084+ 2  0A8C			??0277:
 3085+ 2			        ;jnb     SCON.1,putc_loop
 3086+ 2			        ;clr     SCON.1
 3087+ 2  0A8C	75 99 0A	        mov     SBUF,#10
 3088:
 3089:				        ;-- Test series J ------------------------------------------------------
 3090:				        ; XRL
 3091:				        ; (See comments for 'ALU opcode block test')
 3092:
 3093:
 3094:				        putc    #'J'                ; start of test series
 3095+ 1  0A8F			??0278:
 3096+ 1			        ;jnb     SCON.1,putc_loop
 3097+ 1			        ;clr     SCON.1
 3098+ 1  0A8F	75 99 4A	        mov     SBUF,#'J'
 3099:
 3100:				        tst_alu xrl,051h,033h,062h,07h,
 3101+ 1			        ; Put the argument and result data into variables for easier access
 3102+ 1	N      0051	        arg0    set 051h
 3103+ 1	N      0033	        arg1    set 033h
 3104+ 1	N      0062	        res     set 062h
 3105+ 1
 3106+ 1			        ; Test <op> A, dir
 3107+ 1			        top_ma  xrl,dir0,??0280,<>
 3108+ 2  0A92	75 60 51	        mov     dir0,#arg0
 3109+ 2  0A95	74 33		        mov     a,#arg1
 3110+ 2			        ifnb    <>
 3111+ 2			        set_cy
 3112+ 2			        endif
 3113+ 2  0A97	65 60		        xrl      a,dir0
 3114+ 2			        ifnb    <>
 3115+ 2			        save_psw
 3116+ 2			        endif
 3117+ 2  0A99	B4 62 29	        cjne    a,#res,??0280
 3118+ 2			        ifnb    <>
 3119+ 2			        tst_psw <>,??0280
 3120+ 2			        endif
 3121+ 1			        ; Test <op> A, @R0
 3122+ 1  0A9C	78 60		        mov     r0,#dir0
 3123+ 1			        top_ma  xrl,@r0,??0280,<>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 57



 Line  I  Addr  Code            Source

 3124+ 2  0A9E	76 51		        mov     @r0,#arg0
 3125+ 2  0AA0	74 33		        mov     a,#arg1
 3126+ 2			        ifnb    <>
 3127+ 2			        set_cy
 3128+ 2			        endif
 3129+ 2  0AA2	66		        xrl      a,@r0
 3130+ 2			        ifnb    <>
 3131+ 2			        save_psw
 3132+ 2			        endif
 3133+ 2  0AA3	B4 62 1F	        cjne    a,#res,??0280
 3134+ 2			        ifnb    <>
 3135+ 2			        tst_psw <>,??0280
 3136+ 2			        endif
 3137+ 1			        ; Test <op> A, @R1
 3138+ 1  0AA6	79 31		        mov     r1,#031h
 3139+ 1			        top_ma  xrl,@r1,??0280,<>
 3140+ 2  0AA8	77 51		        mov     @r1,#arg0
 3141+ 2  0AAA	74 33		        mov     a,#arg1
 3142+ 2			        ifnb    <>
 3143+ 2			        set_cy
 3144+ 2			        endif
 3145+ 2  0AAC	67		        xrl      a,@r1
 3146+ 2			        ifnb    <>
 3147+ 2			        save_psw
 3148+ 2			        endif
 3149+ 2  0AAD	B4 62 15	        cjne    a,#res,??0280
 3150+ 2			        ifnb    <>
 3151+ 2			        tst_psw <>,??0280
 3152+ 2			        endif
 3153+ 1
 3154+ 1			        ; Now test <op> A, Rn for n in 0..7
 3155+ 1			        top_ma  xrl,r0,??0280,<>
 3156+ 2  0AB0	78 51		        mov     r0,#arg0
 3157+ 2  0AB2	74 33		        mov     a,#arg1
 3158+ 2			        ifnb    <>
 3159+ 2			        set_cy
 3160+ 2			        endif
 3161+ 2  0AB4	68		        xrl      a,r0
 3162+ 2			        ifnb    <>
 3163+ 2			        save_psw
 3164+ 2			        endif
 3165+ 2  0AB5	B4 62 0D	        cjne    a,#res,??0280
 3166+ 2			        ifnb    <>
 3167+ 2			        tst_psw <>,??0280
 3168+ 2			        endif
 3169+ 1			        top_ma  xrl,r1,??0280,<>
 3170+ 2  0AB8	79 51		        mov     r1,#arg0
 3171+ 2  0ABA	74 33		        mov     a,#arg1
 3172+ 2			        ifnb    <>
 3173+ 2			        set_cy
 3174+ 2			        endif
 3175+ 2  0ABC	69		        xrl      a,r1
 3176+ 2			        ifnb    <>
 3177+ 2			        save_psw
 3178+ 2			        endif
 3179+ 2  0ABD	B4 62 05	        cjne    a,#res,??0280

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 58



 Line  I  Addr  Code            Source

 3180+ 2			        ifnb    <>
 3181+ 2			        tst_psw <>,??0280
 3182+ 2			        endif
 3183+ 1
 3184+ 1			        eot     'a',??0280
 3185+ 2			        putc    #'a'
 3186+ 3  0AC0			??0287:
 3187+ 3			        ;jnb     SCON.1,putc_loop
 3188+ 3			        ;clr     SCON.1
 3189+ 3  0AC0	75 99 61	        mov     SBUF,#'a'
 3190+ 2  0AC3	80 06		        sjmp    ??0286
 3191+ 2  0AC5			??0280:  putc    #'?'
 3192+ 3  0AC5			??0288:
 3193+ 3			        ;jnb     SCON.1,putc_loop
 3194+ 3			        ;clr     SCON.1
 3195+ 3  0AC5	75 99 3F	        mov     SBUF,#'?'
 3196+ 2  0AC8	75 6E 01	        mov     fail,#001h
 3197+ 2  0ACB			??0286:
 3198+ 1
 3199+ 1			        top_ma  xrl,r2,??0281,<>
 3200+ 2  0ACB	7A 51		        mov     r2,#arg0
 3201+ 2  0ACD	74 33		        mov     a,#arg1
 3202+ 2			        ifnb    <>
 3203+ 2			        set_cy
 3204+ 2			        endif
 3205+ 2  0ACF	6A		        xrl      a,r2
 3206+ 2			        ifnb    <>
 3207+ 2			        save_psw
 3208+ 2			        endif
 3209+ 2  0AD0	B4 62 0D	        cjne    a,#res,??0281
 3210+ 2			        ifnb    <>
 3211+ 2			        tst_psw <>,??0281
 3212+ 2			        endif
 3213+ 1			        top_ma  xrl,r3,??0281,<>
 3214+ 2  0AD3	7B 51		        mov     r3,#arg0
 3215+ 2  0AD5	74 33		        mov     a,#arg1
 3216+ 2			        ifnb    <>
 3217+ 2			        set_cy
 3218+ 2			        endif
 3219+ 2  0AD7	6B		        xrl      a,r3
 3220+ 2			        ifnb    <>
 3221+ 2			        save_psw
 3222+ 2			        endif
 3223+ 2  0AD8	B4 62 05	        cjne    a,#res,??0281
 3224+ 2			        ifnb    <>
 3225+ 2			        tst_psw <>,??0281
 3226+ 2			        endif
 3227+ 1
 3228+ 1			        eot     'b',??0281
 3229+ 2			        putc    #'b'
 3230+ 3  0ADB			??0290:
 3231+ 3			        ;jnb     SCON.1,putc_loop
 3232+ 3			        ;clr     SCON.1
 3233+ 3  0ADB	75 99 62	        mov     SBUF,#'b'
 3234+ 2  0ADE	80 06		        sjmp    ??0289
 3235+ 2  0AE0			??0281:  putc    #'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 59



 Line  I  Addr  Code            Source

 3236+ 3  0AE0			??0291:
 3237+ 3			        ;jnb     SCON.1,putc_loop
 3238+ 3			        ;clr     SCON.1
 3239+ 3  0AE0	75 99 3F	        mov     SBUF,#'?'
 3240+ 2  0AE3	75 6E 01	        mov     fail,#001h
 3241+ 2  0AE6			??0289:
 3242+ 1
 3243+ 1			        top_ma  xrl,r4,??0282,<>
 3244+ 2  0AE6	7C 51		        mov     r4,#arg0
 3245+ 2  0AE8	74 33		        mov     a,#arg1
 3246+ 2			        ifnb    <>
 3247+ 2			        set_cy
 3248+ 2			        endif
 3249+ 2  0AEA	6C		        xrl      a,r4
 3250+ 2			        ifnb    <>
 3251+ 2			        save_psw
 3252+ 2			        endif
 3253+ 2  0AEB	B4 62 0D	        cjne    a,#res,??0282
 3254+ 2			        ifnb    <>
 3255+ 2			        tst_psw <>,??0282
 3256+ 2			        endif
 3257+ 1			        top_ma  xrl,r5,??0282,<>
 3258+ 2  0AEE	7D 51		        mov     r5,#arg0
 3259+ 2  0AF0	74 33		        mov     a,#arg1
 3260+ 2			        ifnb    <>
 3261+ 2			        set_cy
 3262+ 2			        endif
 3263+ 2  0AF2	6D		        xrl      a,r5
 3264+ 2			        ifnb    <>
 3265+ 2			        save_psw
 3266+ 2			        endif
 3267+ 2  0AF3	B4 62 05	        cjne    a,#res,??0282
 3268+ 2			        ifnb    <>
 3269+ 2			        tst_psw <>,??0282
 3270+ 2			        endif
 3271+ 1
 3272+ 1			        eot     'c',??0282
 3273+ 2			        putc    #'c'
 3274+ 3  0AF6			??0293:
 3275+ 3			        ;jnb     SCON.1,putc_loop
 3276+ 3			        ;clr     SCON.1
 3277+ 3  0AF6	75 99 63	        mov     SBUF,#'c'
 3278+ 2  0AF9	80 06		        sjmp    ??0292
 3279+ 2  0AFB			??0282:  putc    #'?'
 3280+ 3  0AFB			??0294:
 3281+ 3			        ;jnb     SCON.1,putc_loop
 3282+ 3			        ;clr     SCON.1
 3283+ 3  0AFB	75 99 3F	        mov     SBUF,#'?'
 3284+ 2  0AFE	75 6E 01	        mov     fail,#001h
 3285+ 2  0B01			??0292:
 3286+ 1
 3287+ 1			        top_ma  xrl,r6,??0279,<>
 3288+ 2  0B01	7E 51		        mov     r6,#arg0
 3289+ 2  0B03	74 33		        mov     a,#arg1
 3290+ 2			        ifnb    <>
 3291+ 2			        set_cy

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 60



 Line  I  Addr  Code            Source

 3292+ 2			        endif
 3293+ 2  0B05	6E		        xrl      a,r6
 3294+ 2			        ifnb    <>
 3295+ 2			        save_psw
 3296+ 2			        endif
 3297+ 2  0B06	B4 62 0D	        cjne    a,#res,??0279
 3298+ 2			        ifnb    <>
 3299+ 2			        tst_psw <>,??0279
 3300+ 2			        endif
 3301+ 1			        top_ma  xrl,r7,??0279,<>
 3302+ 2  0B09	7F 51		        mov     r7,#arg0
 3303+ 2  0B0B	74 33		        mov     a,#arg1
 3304+ 2			        ifnb    <>
 3305+ 2			        set_cy
 3306+ 2			        endif
 3307+ 2  0B0D	6F		        xrl      a,r7
 3308+ 2			        ifnb    <>
 3309+ 2			        save_psw
 3310+ 2			        endif
 3311+ 2  0B0E	B4 62 05	        cjne    a,#res,??0279
 3312+ 2			        ifnb    <>
 3313+ 2			        tst_psw <>,??0279
 3314+ 2			        endif
 3315+ 1
 3316+ 1			        eot     'd',??0279
 3317+ 2			        putc    #'d'
 3318+ 3  0B11			??0296:
 3319+ 3			        ;jnb     SCON.1,putc_loop
 3320+ 3			        ;clr     SCON.1
 3321+ 3  0B11	75 99 64	        mov     SBUF,#'d'
 3322+ 2  0B14	80 06		        sjmp    ??0295
 3323+ 2  0B16			??0279:  putc    #'?'
 3324+ 3  0B16			??0297:
 3325+ 3			        ;jnb     SCON.1,putc_loop
 3326+ 3			        ;clr     SCON.1
 3327+ 3  0B16	75 99 3F	        mov     SBUF,#'?'
 3328+ 2  0B19	75 6E 01	        mov     fail,#001h
 3329+ 2  0B1C			??0295:
 3330+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 3331+ 1
 3332+ 1			        ; Optionally test immediate addressing modes.
 3333+ 1
 3334+ 1	N      FFFF	        if      (07h and 1) ne 0
 3335+ 1			        ; Test <op> A, #arg1...
 3336+ 1			        top_mb  xrl,a,??0283,<>
 3337+ 2  0B1C	74 33		        mov     a,#arg1
 3338+ 2			        ifnb    <>
 3339+ 2			        set_cy
 3340+ 2			        endif
 3341+ 2  0B1E	64 51		        xrl      a,#arg0
 3342+ 2			        ifnb    <>
 3343+ 2			        save_psw
 3344+ 2			        endif
 3345+ 2  0B20	F5 E0		        mov     ACC,a
 3346+ 2  0B22	B4 62 05	        cjne    a,#res,??0283
 3347+ 2			        ifnb    <>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 61



 Line  I  Addr  Code            Source

 3348+ 2			        tst_psw <>,??0283
 3349+ 2			        endif
 3350+ 1			        eot     'e',??0283
 3351+ 2			        putc    #'e'
 3352+ 3  0B25			??0299:
 3353+ 3			        ;jnb     SCON.1,putc_loop
 3354+ 3			        ;clr     SCON.1
 3355+ 3  0B25	75 99 65	        mov     SBUF,#'e'
 3356+ 2  0B28	80 06		        sjmp    ??0298
 3357+ 2  0B2A			??0283:  putc    #'?'
 3358+ 3  0B2A			??0300:
 3359+ 3			        ;jnb     SCON.1,putc_loop
 3360+ 3			        ;clr     SCON.1
 3361+ 3  0B2A	75 99 3F	        mov     SBUF,#'?'
 3362+ 2  0B2D	75 6E 01	        mov     fail,#001h
 3363+ 2  0B30			??0298:
 3364+ 1			        endif
 3365+ 1
 3366+ 1	N      FFFF	        if      (07h and 2) ne 0
 3367+ 1			        ; ...and <op> dir, #arg1
 3368+ 1			        top_mb  xrl,dir0,??0284,<>
 3369+ 2  0B30	75 60 33	        mov     dir0,#arg1
 3370+ 2			        ifnb    <>
 3371+ 2			        set_cy
 3372+ 2			        endif
 3373+ 2  0B33	63 60 51	        xrl      dir0,#arg0
 3374+ 2			        ifnb    <>
 3375+ 2			        save_psw
 3376+ 2			        endif
 3377+ 2  0B36	85 60 E0	        mov     ACC,dir0
 3378+ 2  0B39	B4 62 05	        cjne    a,#res,??0284
 3379+ 2			        ifnb    <>
 3380+ 2			        tst_psw <>,??0284
 3381+ 2			        endif
 3382+ 1			        eot     'f',??0284
 3383+ 2			        putc    #'f'
 3384+ 3  0B3C			??0302:
 3385+ 3			        ;jnb     SCON.1,putc_loop
 3386+ 3			        ;clr     SCON.1
 3387+ 3  0B3C	75 99 66	        mov     SBUF,#'f'
 3388+ 2  0B3F	80 06		        sjmp    ??0301
 3389+ 2  0B41			??0284:  putc    #'?'
 3390+ 3  0B41			??0303:
 3391+ 3			        ;jnb     SCON.1,putc_loop
 3392+ 3			        ;clr     SCON.1
 3393+ 3  0B41	75 99 3F	        mov     SBUF,#'?'
 3394+ 2  0B44	75 6E 01	        mov     fail,#001h
 3395+ 2  0B47			??0301:
 3396+ 1			        endif
 3397+ 1
 3398+ 1			        ; Optionally test <op> dir, A
 3399+ 1	N      FFFF	        if      (07h and 4) ne 0
 3400+ 1			        top_mc  xrl,??0285,<>
 3401+ 2  0B47	75 60 51	        mov     dir0,#arg0
 3402+ 2  0B4A	74 33		        mov     a,#arg1
 3403+ 2			        ifnb    <>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 62



 Line  I  Addr  Code            Source

 3404+ 2			        set_cy
 3405+ 2			        endif
 3406+ 2  0B4C	62 60		        xrl      dir0,a
 3407+ 2			        ifnb    <>
 3408+ 2			        save_psw
 3409+ 2			        endif
 3410+ 2  0B4E	E5 60		        mov     a,dir0
 3411+ 2  0B50	B4 62 05	        cjne    a,#res,??0285
 3412+ 2			        ifnb    <>
 3413+ 2			        tst_psw <>,??0285
 3414+ 2			        endif
 3415+ 1			        eot     'g',??0285
 3416+ 2			        putc    #'g'
 3417+ 3  0B53			??0305:
 3418+ 3			        ;jnb     SCON.1,putc_loop
 3419+ 3			        ;clr     SCON.1
 3420+ 3  0B53	75 99 67	        mov     SBUF,#'g'
 3421+ 2  0B56	80 06		        sjmp    ??0304
 3422+ 2  0B58			??0285:  putc    #'?'
 3423+ 3  0B58			??0306:
 3424+ 3			        ;jnb     SCON.1,putc_loop
 3425+ 3			        ;clr     SCON.1
 3426+ 3  0B58	75 99 3F	        mov     SBUF,#'?'
 3427+ 2  0B5B	75 6E 01	        mov     fail,#001h
 3428+ 2  0B5E			??0304:
 3429+ 1			        endif
 3430+ 1
 3431:
 3432:				        put_crlf                    ; end of test series
 3433+ 1			        putc    #13
 3434+ 2  0B5E			??0307:
 3435+ 2			        ;jnb     SCON.1,putc_loop
 3436+ 2			        ;clr     SCON.1
 3437+ 2  0B5E	75 99 0D	        mov     SBUF,#13
 3438+ 1			        putc    #10
 3439+ 2  0B61			??0308:
 3440+ 2			        ;jnb     SCON.1,putc_loop
 3441+ 2			        ;clr     SCON.1
 3442+ 2  0B61	75 99 0A	        mov     SBUF,#10
 3443:
 3444:				        ;-- Test series K ------------------------------------------------------
 3445:				        ; DJNZ
 3446:				        ; a.- <DJNZ dir,rel>, <DJNZ Rn,rel> tested only with small negative rels
 3447:
 3448:				        putc    #'K'                ; start of test series
 3449+ 1  0B64			??0309:
 3450+ 1			        ;jnb     SCON.1,putc_loop
 3451+ 1			        ;clr     SCON.1
 3452+ 1  0B64	75 99 4B	        mov     SBUF,#'K'
 3453:
 3454:				        ;tk_ma: test DJNZ with parametrizable addressing mode
 3455:				tk_ma   macro   dst,error_loc
 3456:				        local   tk_ma0
 3457:				nloops  set     3
 3458:				        mov     dst,#nloops         ; We'll perform a fixed no. of iterations
 3459:				        mov     a,#(nloops+1)       ; A will or our control counter

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 63



 Line  I  Addr  Code            Source

 3460:				tk_ma0: dec     a
 3461:				        jz      error_loc           ; Break loop after nloops iterations
 3462:				        djnz    dst,tk_ma0          ; Test DJNZ instruction
 3463:				        cjne    a,#001,error_loc    ; Verify number of iterations is ok
 3464:				        endm
 3465:
 3466:				        tk_ma   dir0,tk_a0          ; <DJNZ dir,rel>
 3467+ 1	N      0003	nloops  set     3
 3468+ 1  0B67	75 60 03	        mov     dir0,#nloops         ; We'll perform a fixed no. of iterations
 3469+ 1  0B6A	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3470+ 1  0B6C	14		??0310: dec     a
 3471+ 1  0B6D	60 0B		        jz      tk_a0           ; Break loop after nloops iterations
 3472+ 1  0B6F	D5 60 FA	        djnz    dir0,??0310          ; Test DJNZ instruction
 3473+ 1  0B72	B4 01 05	        cjne    a,#001,tk_a0    ; Verify number of iterations is ok
 3474:
 3475:				        eot     'a',tk_a0
 3476+ 1			        putc    #'a'
 3477+ 2  0B75			??0312:
 3478+ 2			        ;jnb     SCON.1,putc_loop
 3479+ 2			        ;clr     SCON.1
 3480+ 2  0B75	75 99 61	        mov     SBUF,#'a'
 3481+ 1  0B78	80 06		        sjmp    ??0311
 3482+ 1  0B7A			tk_a0:  putc    #'?'
 3483+ 2  0B7A			??0313:
 3484+ 2			        ;jnb     SCON.1,putc_loop
 3485+ 2			        ;clr     SCON.1
 3486+ 2  0B7A	75 99 3F	        mov     SBUF,#'?'
 3487+ 1  0B7D	75 6E 01	        mov     fail,#001h
 3488+ 1  0B80			??0311:
 3489:
 3490:				        tk_ma   r0,tk_b0            ; <DJNZ Rn,rel>
 3491+ 1	N      0003	nloops  set     3
 3492+ 1  0B80	78 03		        mov     r0,#nloops         ; We'll perform a fixed no. of iterations
 3493+ 1  0B82	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3494+ 1  0B84	14		??0314: dec     a
 3495+ 1  0B85	60 5E		        jz      tk_b0           ; Break loop after nloops iterations
 3496+ 1  0B87	D8 FB		        djnz    r0,??0314          ; Test DJNZ instruction
 3497+ 1  0B89	B4 01 59	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3498:				        tk_ma   r1,tk_b0
 3499+ 1	N      0003	nloops  set     3
 3500+ 1  0B8C	79 03		        mov     r1,#nloops         ; We'll perform a fixed no. of iterations
 3501+ 1  0B8E	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3502+ 1  0B90	14		??0315: dec     a
 3503+ 1  0B91	60 52		        jz      tk_b0           ; Break loop after nloops iterations
 3504+ 1  0B93	D9 FB		        djnz    r1,??0315          ; Test DJNZ instruction
 3505+ 1  0B95	B4 01 4D	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3506:				        tk_ma   r2,tk_b0
 3507+ 1	N      0003	nloops  set     3
 3508+ 1  0B98	7A 03		        mov     r2,#nloops         ; We'll perform a fixed no. of iterations
 3509+ 1  0B9A	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3510+ 1  0B9C	14		??0316: dec     a
 3511+ 1  0B9D	60 46		        jz      tk_b0           ; Break loop after nloops iterations
 3512+ 1  0B9F	DA FB		        djnz    r2,??0316          ; Test DJNZ instruction
 3513+ 1  0BA1	B4 01 41	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3514:				        tk_ma   r3,tk_b0
 3515+ 1	N      0003	nloops  set     3

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 64



 Line  I  Addr  Code            Source

 3516+ 1  0BA4	7B 03		        mov     r3,#nloops         ; We'll perform a fixed no. of iterations
 3517+ 1  0BA6	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3518+ 1  0BA8	14		??0317: dec     a
 3519+ 1  0BA9	60 3A		        jz      tk_b0           ; Break loop after nloops iterations
 3520+ 1  0BAB	DB FB		        djnz    r3,??0317          ; Test DJNZ instruction
 3521+ 1  0BAD	B4 01 35	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3522:				        tk_ma   r4,tk_b0
 3523+ 1	N      0003	nloops  set     3
 3524+ 1  0BB0	7C 03		        mov     r4,#nloops         ; We'll perform a fixed no. of iterations
 3525+ 1  0BB2	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3526+ 1  0BB4	14		??0318: dec     a
 3527+ 1  0BB5	60 2E		        jz      tk_b0           ; Break loop after nloops iterations
 3528+ 1  0BB7	DC FB		        djnz    r4,??0318          ; Test DJNZ instruction
 3529+ 1  0BB9	B4 01 29	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3530:				        tk_ma   r5,tk_b0
 3531+ 1	N      0003	nloops  set     3
 3532+ 1  0BBC	7D 03		        mov     r5,#nloops         ; We'll perform a fixed no. of iterations
 3533+ 1  0BBE	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3534+ 1  0BC0	14		??0319: dec     a
 3535+ 1  0BC1	60 22		        jz      tk_b0           ; Break loop after nloops iterations
 3536+ 1  0BC3	DD FB		        djnz    r5,??0319          ; Test DJNZ instruction
 3537+ 1  0BC5	B4 01 1D	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3538:				        tk_ma   r6,tk_b0
 3539+ 1	N      0003	nloops  set     3
 3540+ 1  0BC8	7E 03		        mov     r6,#nloops         ; We'll perform a fixed no. of iterations
 3541+ 1  0BCA	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3542+ 1  0BCC	14		??0320: dec     a
 3543+ 1  0BCD	60 16		        jz      tk_b0           ; Break loop after nloops iterations
 3544+ 1  0BCF	DE FB		        djnz    r6,??0320          ; Test DJNZ instruction
 3545+ 1  0BD1	B4 01 11	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3546:				        tk_ma   r7,tk_b0
 3547+ 1	N      0003	nloops  set     3
 3548+ 1  0BD4	7F 03		        mov     r7,#nloops         ; We'll perform a fixed no. of iterations
 3549+ 1  0BD6	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3550+ 1  0BD8	14		??0321: dec     a
 3551+ 1  0BD9	60 0A		        jz      tk_b0           ; Break loop after nloops iterations
 3552+ 1  0BDB	DF FB		        djnz    r7,??0321          ; Test DJNZ instruction
 3553+ 1  0BDD	B4 01 05	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3554:
 3555:				        eot     'b',tk_b0
 3556+ 1			        putc    #'b'
 3557+ 2  0BE0			??0323:
 3558+ 2			        ;jnb     SCON.1,putc_loop
 3559+ 2			        ;clr     SCON.1
 3560+ 2  0BE0	75 99 62	        mov     SBUF,#'b'
 3561+ 1  0BE3	80 06		        sjmp    ??0322
 3562+ 1  0BE5			tk_b0:  putc    #'?'
 3563+ 2  0BE5			??0324:
 3564+ 2			        ;jnb     SCON.1,putc_loop
 3565+ 2			        ;clr     SCON.1
 3566+ 2  0BE5	75 99 3F	        mov     SBUF,#'?'
 3567+ 1  0BE8	75 6E 01	        mov     fail,#001h
 3568+ 1  0BEB			??0322:
 3569:
 3570:				        put_crlf                    ; end of test series
 3571+ 1			        putc    #13

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 65



 Line  I  Addr  Code            Source

 3572+ 2  0BEB			??0325:
 3573+ 2			        ;jnb     SCON.1,putc_loop
 3574+ 2			        ;clr     SCON.1
 3575+ 2  0BEB	75 99 0D	        mov     SBUF,#13
 3576+ 1			        putc    #10
 3577+ 2  0BEE			??0326:
 3578+ 2			        ;jnb     SCON.1,putc_loop
 3579+ 2			        ;clr     SCON.1
 3580+ 2  0BEE	75 99 0A	        mov     SBUF,#10
 3581:
 3582:
 3583:				        ;-- Test series L ------------------------------------------------------
 3584:				        ; ADD
 3585:				        ; (See comments for 'ALU opcode block test')
 3586:
 3587:
 3588:				        putc    #'L'                ; start of test series
 3589+ 1  0BF1			??0327:
 3590+ 1			        ;jnb     SCON.1,putc_loop
 3591+ 1			        ;clr     SCON.1
 3592+ 1  0BF1	75 99 4C	        mov     SBUF,#'L'
 3593:
 3594:				        putc    #'0'
 3595+ 1  0BF4			??0328:
 3596+ 1			        ;jnb     SCON.1,putc_loop
 3597+ 1			        ;clr     SCON.1
 3598+ 1  0BF4	75 99 30	        mov     SBUF,#'0'
 3599:				        tst_alu add,051h,033h,084h,01h,004h     ; /CY /AC  OV
 3600+ 1			        ; Put the argument and result data into variables for easier access
 3601+ 1	N      0051	        arg0    set 051h
 3602+ 1	N      0033	        arg1    set 033h
 3603+ 1	N      0084	        res     set 084h
 3604+ 1
 3605+ 1			        ; Test <op> A, dir
 3606+ 1			        top_ma  add,dir0,??0330,<004h>
 3607+ 2  0BF7	75 60 51	        mov     dir0,#arg0
 3608+ 2  0BFA	74 33		        mov     a,#arg1
 3609+ 2			        ifnb    <004h>
 3610+ 2			        set_cy  004h
 3611+ 3	N      0000	??0336  set     (004h and 1)
 3612+ 3	N      0000	        if      ??0336 eq 1
 3613+ 3			        setb    c
 3614+ 3			        else
 3615+ 3  0BFC	C3		        clr     c
 3616+ 3			        endif
 3617+ 2			        endif
 3618+ 2  0BFD	25 60		        add      a,dir0
 3619+ 2			        ifnb    <004h>
 3620+ 2			        save_psw
 3621+ 3  0BFF	85 D0 70	        mov     saved_psw,PSW
 3622+ 2			        endif
 3623+ 2  0C02	B4 84 6B	        cjne    a,#res,??0330
 3624+ 2			        ifnb    <004h>
 3625+ 2			        tst_psw <004h>,??0330
 3626+ 3  0C05	E5 70		        mov     a,saved_psw
 3627+ 3  0C07	54 C4		        anl     a,#0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 66



 Line  I  Addr  Code            Source

 3628+ 3  0C09	64 04		        xrl     a,#004h
 3629+ 3  0C0B	54 FE		        anl     a,#0feh
 3630+ 3  0C0D	70 61		        jnz     ??0330
 3631+ 2			        endif
 3632+ 1			        ; Test <op> A, @R0
 3633+ 1  0C0F	78 60		        mov     r0,#dir0
 3634+ 1			        top_ma  add,@r0,??0330,<004h>
 3635+ 2  0C11	76 51		        mov     @r0,#arg0
 3636+ 2  0C13	74 33		        mov     a,#arg1
 3637+ 2			        ifnb    <004h>
 3638+ 2			        set_cy  004h
 3639+ 3	N      0000	??0337  set     (004h and 1)
 3640+ 3	N      0000	        if      ??0337 eq 1
 3641+ 3			        setb    c
 3642+ 3			        else
 3643+ 3  0C15	C3		        clr     c
 3644+ 3			        endif
 3645+ 2			        endif
 3646+ 2  0C16	26		        add      a,@r0
 3647+ 2			        ifnb    <004h>
 3648+ 2			        save_psw
 3649+ 3  0C17	85 D0 70	        mov     saved_psw,PSW
 3650+ 2			        endif
 3651+ 2  0C1A	B4 84 53	        cjne    a,#res,??0330
 3652+ 2			        ifnb    <004h>
 3653+ 2			        tst_psw <004h>,??0330
 3654+ 3  0C1D	E5 70		        mov     a,saved_psw
 3655+ 3  0C1F	54 C4		        anl     a,#0c4h
 3656+ 3  0C21	64 04		        xrl     a,#004h
 3657+ 3  0C23	54 FE		        anl     a,#0feh
 3658+ 3  0C25	70 49		        jnz     ??0330
 3659+ 2			        endif
 3660+ 1			        ; Test <op> A, @R1
 3661+ 1  0C27	79 31		        mov     r1,#031h
 3662+ 1			        top_ma  add,@r1,??0330,<004h>
 3663+ 2  0C29	77 51		        mov     @r1,#arg0
 3664+ 2  0C2B	74 33		        mov     a,#arg1
 3665+ 2			        ifnb    <004h>
 3666+ 2			        set_cy  004h
 3667+ 3	N      0000	??0338  set     (004h and 1)
 3668+ 3	N      0000	        if      ??0338 eq 1
 3669+ 3			        setb    c
 3670+ 3			        else
 3671+ 3  0C2D	C3		        clr     c
 3672+ 3			        endif
 3673+ 2			        endif
 3674+ 2  0C2E	27		        add      a,@r1
 3675+ 2			        ifnb    <004h>
 3676+ 2			        save_psw
 3677+ 3  0C2F	85 D0 70	        mov     saved_psw,PSW
 3678+ 2			        endif
 3679+ 2  0C32	B4 84 3B	        cjne    a,#res,??0330
 3680+ 2			        ifnb    <004h>
 3681+ 2			        tst_psw <004h>,??0330
 3682+ 3  0C35	E5 70		        mov     a,saved_psw
 3683+ 3  0C37	54 C4		        anl     a,#0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 67



 Line  I  Addr  Code            Source

 3684+ 3  0C39	64 04		        xrl     a,#004h
 3685+ 3  0C3B	54 FE		        anl     a,#0feh
 3686+ 3  0C3D	70 31		        jnz     ??0330
 3687+ 2			        endif
 3688+ 1
 3689+ 1			        ; Now test <op> A, Rn for n in 0..7
 3690+ 1			        top_ma  add,r0,??0330,<004h>
 3691+ 2  0C3F	78 51		        mov     r0,#arg0
 3692+ 2  0C41	74 33		        mov     a,#arg1
 3693+ 2			        ifnb    <004h>
 3694+ 2			        set_cy  004h
 3695+ 3	N      0000	??0339  set     (004h and 1)
 3696+ 3	N      0000	        if      ??0339 eq 1
 3697+ 3			        setb    c
 3698+ 3			        else
 3699+ 3  0C43	C3		        clr     c
 3700+ 3			        endif
 3701+ 2			        endif
 3702+ 2  0C44	28		        add      a,r0
 3703+ 2			        ifnb    <004h>
 3704+ 2			        save_psw
 3705+ 3  0C45	85 D0 70	        mov     saved_psw,PSW
 3706+ 2			        endif
 3707+ 2  0C48	B4 84 25	        cjne    a,#res,??0330
 3708+ 2			        ifnb    <004h>
 3709+ 2			        tst_psw <004h>,??0330
 3710+ 3  0C4B	E5 70		        mov     a,saved_psw
 3711+ 3  0C4D	54 C4		        anl     a,#0c4h
 3712+ 3  0C4F	64 04		        xrl     a,#004h
 3713+ 3  0C51	54 FE		        anl     a,#0feh
 3714+ 3  0C53	70 1B		        jnz     ??0330
 3715+ 2			        endif
 3716+ 1			        top_ma  add,r1,??0330,<004h>
 3717+ 2  0C55	79 51		        mov     r1,#arg0
 3718+ 2  0C57	74 33		        mov     a,#arg1
 3719+ 2			        ifnb    <004h>
 3720+ 2			        set_cy  004h
 3721+ 3	N      0000	??0340  set     (004h and 1)
 3722+ 3	N      0000	        if      ??0340 eq 1
 3723+ 3			        setb    c
 3724+ 3			        else
 3725+ 3  0C59	C3		        clr     c
 3726+ 3			        endif
 3727+ 2			        endif
 3728+ 2  0C5A	29		        add      a,r1
 3729+ 2			        ifnb    <004h>
 3730+ 2			        save_psw
 3731+ 3  0C5B	85 D0 70	        mov     saved_psw,PSW
 3732+ 2			        endif
 3733+ 2  0C5E	B4 84 0F	        cjne    a,#res,??0330
 3734+ 2			        ifnb    <004h>
 3735+ 2			        tst_psw <004h>,??0330
 3736+ 3  0C61	E5 70		        mov     a,saved_psw
 3737+ 3  0C63	54 C4		        anl     a,#0c4h
 3738+ 3  0C65	64 04		        xrl     a,#004h
 3739+ 3  0C67	54 FE		        anl     a,#0feh

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 68



 Line  I  Addr  Code            Source

 3740+ 3  0C69	70 05		        jnz     ??0330
 3741+ 2			        endif
 3742+ 1
 3743+ 1			        eot     'a',??0330
 3744+ 2			        putc    #'a'
 3745+ 3  0C6B			??0342:
 3746+ 3			        ;jnb     SCON.1,putc_loop
 3747+ 3			        ;clr     SCON.1
 3748+ 3  0C6B	75 99 61	        mov     SBUF,#'a'
 3749+ 2  0C6E	80 06		        sjmp    ??0341
 3750+ 2  0C70			??0330:  putc    #'?'
 3751+ 3  0C70			??0343:
 3752+ 3			        ;jnb     SCON.1,putc_loop
 3753+ 3			        ;clr     SCON.1
 3754+ 3  0C70	75 99 3F	        mov     SBUF,#'?'
 3755+ 2  0C73	75 6E 01	        mov     fail,#001h
 3756+ 2  0C76			??0341:
 3757+ 1
 3758+ 1			        top_ma  add,r2,??0331,<004h>
 3759+ 2  0C76	7A 51		        mov     r2,#arg0
 3760+ 2  0C78	74 33		        mov     a,#arg1
 3761+ 2			        ifnb    <004h>
 3762+ 2			        set_cy  004h
 3763+ 3	N      0000	??0344  set     (004h and 1)
 3764+ 3	N      0000	        if      ??0344 eq 1
 3765+ 3			        setb    c
 3766+ 3			        else
 3767+ 3  0C7A	C3		        clr     c
 3768+ 3			        endif
 3769+ 2			        endif
 3770+ 2  0C7B	2A		        add      a,r2
 3771+ 2			        ifnb    <004h>
 3772+ 2			        save_psw
 3773+ 3  0C7C	85 D0 70	        mov     saved_psw,PSW
 3774+ 2			        endif
 3775+ 2  0C7F	B4 84 25	        cjne    a,#res,??0331
 3776+ 2			        ifnb    <004h>
 3777+ 2			        tst_psw <004h>,??0331
 3778+ 3  0C82	E5 70		        mov     a,saved_psw
 3779+ 3  0C84	54 C4		        anl     a,#0c4h
 3780+ 3  0C86	64 04		        xrl     a,#004h
 3781+ 3  0C88	54 FE		        anl     a,#0feh
 3782+ 3  0C8A	70 1B		        jnz     ??0331
 3783+ 2			        endif
 3784+ 1			        top_ma  add,r3,??0331,<004h>
 3785+ 2  0C8C	7B 51		        mov     r3,#arg0
 3786+ 2  0C8E	74 33		        mov     a,#arg1
 3787+ 2			        ifnb    <004h>
 3788+ 2			        set_cy  004h
 3789+ 3	N      0000	??0345  set     (004h and 1)
 3790+ 3	N      0000	        if      ??0345 eq 1
 3791+ 3			        setb    c
 3792+ 3			        else
 3793+ 3  0C90	C3		        clr     c
 3794+ 3			        endif
 3795+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 69



 Line  I  Addr  Code            Source

 3796+ 2  0C91	2B		        add      a,r3
 3797+ 2			        ifnb    <004h>
 3798+ 2			        save_psw
 3799+ 3  0C92	85 D0 70	        mov     saved_psw,PSW
 3800+ 2			        endif
 3801+ 2  0C95	B4 84 0F	        cjne    a,#res,??0331
 3802+ 2			        ifnb    <004h>
 3803+ 2			        tst_psw <004h>,??0331
 3804+ 3  0C98	E5 70		        mov     a,saved_psw
 3805+ 3  0C9A	54 C4		        anl     a,#0c4h
 3806+ 3  0C9C	64 04		        xrl     a,#004h
 3807+ 3  0C9E	54 FE		        anl     a,#0feh
 3808+ 3  0CA0	70 05		        jnz     ??0331
 3809+ 2			        endif
 3810+ 1
 3811+ 1			        eot     'b',??0331
 3812+ 2			        putc    #'b'
 3813+ 3  0CA2			??0347:
 3814+ 3			        ;jnb     SCON.1,putc_loop
 3815+ 3			        ;clr     SCON.1
 3816+ 3  0CA2	75 99 62	        mov     SBUF,#'b'
 3817+ 2  0CA5	80 06		        sjmp    ??0346
 3818+ 2  0CA7			??0331:  putc    #'?'
 3819+ 3  0CA7			??0348:
 3820+ 3			        ;jnb     SCON.1,putc_loop
 3821+ 3			        ;clr     SCON.1
 3822+ 3  0CA7	75 99 3F	        mov     SBUF,#'?'
 3823+ 2  0CAA	75 6E 01	        mov     fail,#001h
 3824+ 2  0CAD			??0346:
 3825+ 1
 3826+ 1			        top_ma  add,r4,??0332,<004h>
 3827+ 2  0CAD	7C 51		        mov     r4,#arg0
 3828+ 2  0CAF	74 33		        mov     a,#arg1
 3829+ 2			        ifnb    <004h>
 3830+ 2			        set_cy  004h
 3831+ 3	N      0000	??0349  set     (004h and 1)
 3832+ 3	N      0000	        if      ??0349 eq 1
 3833+ 3			        setb    c
 3834+ 3			        else
 3835+ 3  0CB1	C3		        clr     c
 3836+ 3			        endif
 3837+ 2			        endif
 3838+ 2  0CB2	2C		        add      a,r4
 3839+ 2			        ifnb    <004h>
 3840+ 2			        save_psw
 3841+ 3  0CB3	85 D0 70	        mov     saved_psw,PSW
 3842+ 2			        endif
 3843+ 2  0CB6	B4 84 25	        cjne    a,#res,??0332
 3844+ 2			        ifnb    <004h>
 3845+ 2			        tst_psw <004h>,??0332
 3846+ 3  0CB9	E5 70		        mov     a,saved_psw
 3847+ 3  0CBB	54 C4		        anl     a,#0c4h
 3848+ 3  0CBD	64 04		        xrl     a,#004h
 3849+ 3  0CBF	54 FE		        anl     a,#0feh
 3850+ 3  0CC1	70 1B		        jnz     ??0332
 3851+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 70



 Line  I  Addr  Code            Source

 3852+ 1			        top_ma  add,r5,??0332,<004h>
 3853+ 2  0CC3	7D 51		        mov     r5,#arg0
 3854+ 2  0CC5	74 33		        mov     a,#arg1
 3855+ 2			        ifnb    <004h>
 3856+ 2			        set_cy  004h
 3857+ 3	N      0000	??0350  set     (004h and 1)
 3858+ 3	N      0000	        if      ??0350 eq 1
 3859+ 3			        setb    c
 3860+ 3			        else
 3861+ 3  0CC7	C3		        clr     c
 3862+ 3			        endif
 3863+ 2			        endif
 3864+ 2  0CC8	2D		        add      a,r5
 3865+ 2			        ifnb    <004h>
 3866+ 2			        save_psw
 3867+ 3  0CC9	85 D0 70	        mov     saved_psw,PSW
 3868+ 2			        endif
 3869+ 2  0CCC	B4 84 0F	        cjne    a,#res,??0332
 3870+ 2			        ifnb    <004h>
 3871+ 2			        tst_psw <004h>,??0332
 3872+ 3  0CCF	E5 70		        mov     a,saved_psw
 3873+ 3  0CD1	54 C4		        anl     a,#0c4h
 3874+ 3  0CD3	64 04		        xrl     a,#004h
 3875+ 3  0CD5	54 FE		        anl     a,#0feh
 3876+ 3  0CD7	70 05		        jnz     ??0332
 3877+ 2			        endif
 3878+ 1
 3879+ 1			        eot     'c',??0332
 3880+ 2			        putc    #'c'
 3881+ 3  0CD9			??0352:
 3882+ 3			        ;jnb     SCON.1,putc_loop
 3883+ 3			        ;clr     SCON.1
 3884+ 3  0CD9	75 99 63	        mov     SBUF,#'c'
 3885+ 2  0CDC	80 06		        sjmp    ??0351
 3886+ 2  0CDE			??0332:  putc    #'?'
 3887+ 3  0CDE			??0353:
 3888+ 3			        ;jnb     SCON.1,putc_loop
 3889+ 3			        ;clr     SCON.1
 3890+ 3  0CDE	75 99 3F	        mov     SBUF,#'?'
 3891+ 2  0CE1	75 6E 01	        mov     fail,#001h
 3892+ 2  0CE4			??0351:
 3893+ 1
 3894+ 1			        top_ma  add,r6,??0329,<004h>
 3895+ 2  0CE4	7E 51		        mov     r6,#arg0
 3896+ 2  0CE6	74 33		        mov     a,#arg1
 3897+ 2			        ifnb    <004h>
 3898+ 2			        set_cy  004h
 3899+ 3	N      0000	??0354  set     (004h and 1)
 3900+ 3	N      0000	        if      ??0354 eq 1
 3901+ 3			        setb    c
 3902+ 3			        else
 3903+ 3  0CE8	C3		        clr     c
 3904+ 3			        endif
 3905+ 2			        endif
 3906+ 2  0CE9	2E		        add      a,r6
 3907+ 2			        ifnb    <004h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 71



 Line  I  Addr  Code            Source

 3908+ 2			        save_psw
 3909+ 3  0CEA	85 D0 70	        mov     saved_psw,PSW
 3910+ 2			        endif
 3911+ 2  0CED	B4 84 25	        cjne    a,#res,??0329
 3912+ 2			        ifnb    <004h>
 3913+ 2			        tst_psw <004h>,??0329
 3914+ 3  0CF0	E5 70		        mov     a,saved_psw
 3915+ 3  0CF2	54 C4		        anl     a,#0c4h
 3916+ 3  0CF4	64 04		        xrl     a,#004h
 3917+ 3  0CF6	54 FE		        anl     a,#0feh
 3918+ 3  0CF8	70 1B		        jnz     ??0329
 3919+ 2			        endif
 3920+ 1			        top_ma  add,r7,??0329,<004h>
 3921+ 2  0CFA	7F 51		        mov     r7,#arg0
 3922+ 2  0CFC	74 33		        mov     a,#arg1
 3923+ 2			        ifnb    <004h>
 3924+ 2			        set_cy  004h
 3925+ 3	N      0000	??0355  set     (004h and 1)
 3926+ 3	N      0000	        if      ??0355 eq 1
 3927+ 3			        setb    c
 3928+ 3			        else
 3929+ 3  0CFE	C3		        clr     c
 3930+ 3			        endif
 3931+ 2			        endif
 3932+ 2  0CFF	2F		        add      a,r7
 3933+ 2			        ifnb    <004h>
 3934+ 2			        save_psw
 3935+ 3  0D00	85 D0 70	        mov     saved_psw,PSW
 3936+ 2			        endif
 3937+ 2  0D03	B4 84 0F	        cjne    a,#res,??0329
 3938+ 2			        ifnb    <004h>
 3939+ 2			        tst_psw <004h>,??0329
 3940+ 3  0D06	E5 70		        mov     a,saved_psw
 3941+ 3  0D08	54 C4		        anl     a,#0c4h
 3942+ 3  0D0A	64 04		        xrl     a,#004h
 3943+ 3  0D0C	54 FE		        anl     a,#0feh
 3944+ 3  0D0E	70 05		        jnz     ??0329
 3945+ 2			        endif
 3946+ 1
 3947+ 1			        eot     'd',??0329
 3948+ 2			        putc    #'d'
 3949+ 3  0D10			??0357:
 3950+ 3			        ;jnb     SCON.1,putc_loop
 3951+ 3			        ;clr     SCON.1
 3952+ 3  0D10	75 99 64	        mov     SBUF,#'d'
 3953+ 2  0D13	80 06		        sjmp    ??0356
 3954+ 2  0D15			??0329:  putc    #'?'
 3955+ 3  0D15			??0358:
 3956+ 3			        ;jnb     SCON.1,putc_loop
 3957+ 3			        ;clr     SCON.1
 3958+ 3  0D15	75 99 3F	        mov     SBUF,#'?'
 3959+ 2  0D18	75 6E 01	        mov     fail,#001h
 3960+ 2  0D1B			??0356:
 3961+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 3962+ 1
 3963+ 1			        ; Optionally test immediate addressing modes.

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 72



 Line  I  Addr  Code            Source

 3964+ 1
 3965+ 1	N      FFFF	        if      (01h and 1) ne 0
 3966+ 1			        ; Test <op> A, #arg1...
 3967+ 1			        top_mb  add,a,??0333,<004h>
 3968+ 2  0D1B	74 33		        mov     a,#arg1
 3969+ 2			        ifnb    <004h>
 3970+ 2			        set_cy  004h
 3971+ 3	N      0000	??0359  set     (004h and 1)
 3972+ 3	N      0000	        if      ??0359 eq 1
 3973+ 3			        setb    c
 3974+ 3			        else
 3975+ 3  0D1D	C3		        clr     c
 3976+ 3			        endif
 3977+ 2			        endif
 3978+ 2  0D1E	24 51		        add      a,#arg0
 3979+ 2			        ifnb    <004h>
 3980+ 2			        save_psw
 3981+ 3  0D20	85 D0 70	        mov     saved_psw,PSW
 3982+ 2			        endif
 3983+ 2  0D23	F5 E0		        mov     ACC,a
 3984+ 2  0D25	B4 84 0F	        cjne    a,#res,??0333
 3985+ 2			        ifnb    <004h>
 3986+ 2			        tst_psw <004h>,??0333
 3987+ 3  0D28	E5 70		        mov     a,saved_psw
 3988+ 3  0D2A	54 C4		        anl     a,#0c4h
 3989+ 3  0D2C	64 04		        xrl     a,#004h
 3990+ 3  0D2E	54 FE		        anl     a,#0feh
 3991+ 3  0D30	70 05		        jnz     ??0333
 3992+ 2			        endif
 3993+ 1			        eot     'e',??0333
 3994+ 2			        putc    #'e'
 3995+ 3  0D32			??0361:
 3996+ 3			        ;jnb     SCON.1,putc_loop
 3997+ 3			        ;clr     SCON.1
 3998+ 3  0D32	75 99 65	        mov     SBUF,#'e'
 3999+ 2  0D35	80 06		        sjmp    ??0360
 4000+ 2  0D37			??0333:  putc    #'?'
 4001+ 3  0D37			??0362:
 4002+ 3			        ;jnb     SCON.1,putc_loop
 4003+ 3			        ;clr     SCON.1
 4004+ 3  0D37	75 99 3F	        mov     SBUF,#'?'
 4005+ 2  0D3A	75 6E 01	        mov     fail,#001h
 4006+ 2  0D3D			??0360:
 4007+ 1			        endif
 4008+ 1
 4009+ 1	N      0000	        if      (01h and 2) ne 0
 4010+ 1			        ; ...and <op> dir, #arg1
 4011+ 1			        top_mb  add,dir0,??0334,<004h>
 4012+ 1			        eot     'f',??0334
 4013+ 1			        endif
 4014+ 1
 4015+ 1			        ; Optionally test <op> dir, A
 4016+ 1	N      0000	        if      (01h and 4) ne 0
 4017+ 1			        top_mc  add,??0335,<004h>
 4018+ 1			        eot     'g',??0335
 4019+ 1			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 73



 Line  I  Addr  Code            Source

 4020+ 1
 4021:				        putc    #'1'
 4022+ 1  0D3D			??0363:
 4023+ 1			        ;jnb     SCON.1,putc_loop
 4024+ 1			        ;clr     SCON.1
 4025+ 1  0D3D	75 99 31	        mov     SBUF,#'1'
 4026:				        tst_alu add,081h,093h,014h,01h,084h     ;  CY /AC  OV
 4027+ 1			        ; Put the argument and result data into variables for easier access
 4028+ 1	N      0081	        arg0    set 081h
 4029+ 1	N      0093	        arg1    set 093h
 4030+ 1	N      0014	        res     set 014h
 4031+ 1
 4032+ 1			        ; Test <op> A, dir
 4033+ 1			        top_ma  add,dir0,??0365,<084h>
 4034+ 2  0D40	75 60 81	        mov     dir0,#arg0
 4035+ 2  0D43	74 93		        mov     a,#arg1
 4036+ 2			        ifnb    <084h>
 4037+ 2			        set_cy  084h
 4038+ 3	N      0000	??0371  set     (084h and 1)
 4039+ 3	N      0000	        if      ??0371 eq 1
 4040+ 3			        setb    c
 4041+ 3			        else
 4042+ 3  0D45	C3		        clr     c
 4043+ 3			        endif
 4044+ 2			        endif
 4045+ 2  0D46	25 60		        add      a,dir0
 4046+ 2			        ifnb    <084h>
 4047+ 2			        save_psw
 4048+ 3  0D48	85 D0 70	        mov     saved_psw,PSW
 4049+ 2			        endif
 4050+ 2  0D4B	B4 14 6B	        cjne    a,#res,??0365
 4051+ 2			        ifnb    <084h>
 4052+ 2			        tst_psw <084h>,??0365
 4053+ 3  0D4E	E5 70		        mov     a,saved_psw
 4054+ 3  0D50	54 C4		        anl     a,#0c4h
 4055+ 3  0D52	64 84		        xrl     a,#084h
 4056+ 3  0D54	54 FE		        anl     a,#0feh
 4057+ 3  0D56	70 61		        jnz     ??0365
 4058+ 2			        endif
 4059+ 1			        ; Test <op> A, @R0
 4060+ 1  0D58	78 60		        mov     r0,#dir0
 4061+ 1			        top_ma  add,@r0,??0365,<084h>
 4062+ 2  0D5A	76 81		        mov     @r0,#arg0
 4063+ 2  0D5C	74 93		        mov     a,#arg1
 4064+ 2			        ifnb    <084h>
 4065+ 2			        set_cy  084h
 4066+ 3	N      0000	??0372  set     (084h and 1)
 4067+ 3	N      0000	        if      ??0372 eq 1
 4068+ 3			        setb    c
 4069+ 3			        else
 4070+ 3  0D5E	C3		        clr     c
 4071+ 3			        endif
 4072+ 2			        endif
 4073+ 2  0D5F	26		        add      a,@r0
 4074+ 2			        ifnb    <084h>
 4075+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 74



 Line  I  Addr  Code            Source

 4076+ 3  0D60	85 D0 70	        mov     saved_psw,PSW
 4077+ 2			        endif
 4078+ 2  0D63	B4 14 53	        cjne    a,#res,??0365
 4079+ 2			        ifnb    <084h>
 4080+ 2			        tst_psw <084h>,??0365
 4081+ 3  0D66	E5 70		        mov     a,saved_psw
 4082+ 3  0D68	54 C4		        anl     a,#0c4h
 4083+ 3  0D6A	64 84		        xrl     a,#084h
 4084+ 3  0D6C	54 FE		        anl     a,#0feh
 4085+ 3  0D6E	70 49		        jnz     ??0365
 4086+ 2			        endif
 4087+ 1			        ; Test <op> A, @R1
 4088+ 1  0D70	79 31		        mov     r1,#031h
 4089+ 1			        top_ma  add,@r1,??0365,<084h>
 4090+ 2  0D72	77 81		        mov     @r1,#arg0
 4091+ 2  0D74	74 93		        mov     a,#arg1
 4092+ 2			        ifnb    <084h>
 4093+ 2			        set_cy  084h
 4094+ 3	N      0000	??0373  set     (084h and 1)
 4095+ 3	N      0000	        if      ??0373 eq 1
 4096+ 3			        setb    c
 4097+ 3			        else
 4098+ 3  0D76	C3		        clr     c
 4099+ 3			        endif
 4100+ 2			        endif
 4101+ 2  0D77	27		        add      a,@r1
 4102+ 2			        ifnb    <084h>
 4103+ 2			        save_psw
 4104+ 3  0D78	85 D0 70	        mov     saved_psw,PSW
 4105+ 2			        endif
 4106+ 2  0D7B	B4 14 3B	        cjne    a,#res,??0365
 4107+ 2			        ifnb    <084h>
 4108+ 2			        tst_psw <084h>,??0365
 4109+ 3  0D7E	E5 70		        mov     a,saved_psw
 4110+ 3  0D80	54 C4		        anl     a,#0c4h
 4111+ 3  0D82	64 84		        xrl     a,#084h
 4112+ 3  0D84	54 FE		        anl     a,#0feh
 4113+ 3  0D86	70 31		        jnz     ??0365
 4114+ 2			        endif
 4115+ 1
 4116+ 1			        ; Now test <op> A, Rn for n in 0..7
 4117+ 1			        top_ma  add,r0,??0365,<084h>
 4118+ 2  0D88	78 81		        mov     r0,#arg0
 4119+ 2  0D8A	74 93		        mov     a,#arg1
 4120+ 2			        ifnb    <084h>
 4121+ 2			        set_cy  084h
 4122+ 3	N      0000	??0374  set     (084h and 1)
 4123+ 3	N      0000	        if      ??0374 eq 1
 4124+ 3			        setb    c
 4125+ 3			        else
 4126+ 3  0D8C	C3		        clr     c
 4127+ 3			        endif
 4128+ 2			        endif
 4129+ 2  0D8D	28		        add      a,r0
 4130+ 2			        ifnb    <084h>
 4131+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 75



 Line  I  Addr  Code            Source

 4132+ 3  0D8E	85 D0 70	        mov     saved_psw,PSW
 4133+ 2			        endif
 4134+ 2  0D91	B4 14 25	        cjne    a,#res,??0365
 4135+ 2			        ifnb    <084h>
 4136+ 2			        tst_psw <084h>,??0365
 4137+ 3  0D94	E5 70		        mov     a,saved_psw
 4138+ 3  0D96	54 C4		        anl     a,#0c4h
 4139+ 3  0D98	64 84		        xrl     a,#084h
 4140+ 3  0D9A	54 FE		        anl     a,#0feh
 4141+ 3  0D9C	70 1B		        jnz     ??0365
 4142+ 2			        endif
 4143+ 1			        top_ma  add,r1,??0365,<084h>
 4144+ 2  0D9E	79 81		        mov     r1,#arg0
 4145+ 2  0DA0	74 93		        mov     a,#arg1
 4146+ 2			        ifnb    <084h>
 4147+ 2			        set_cy  084h
 4148+ 3	N      0000	??0375  set     (084h and 1)
 4149+ 3	N      0000	        if      ??0375 eq 1
 4150+ 3			        setb    c
 4151+ 3			        else
 4152+ 3  0DA2	C3		        clr     c
 4153+ 3			        endif
 4154+ 2			        endif
 4155+ 2  0DA3	29		        add      a,r1
 4156+ 2			        ifnb    <084h>
 4157+ 2			        save_psw
 4158+ 3  0DA4	85 D0 70	        mov     saved_psw,PSW
 4159+ 2			        endif
 4160+ 2  0DA7	B4 14 0F	        cjne    a,#res,??0365
 4161+ 2			        ifnb    <084h>
 4162+ 2			        tst_psw <084h>,??0365
 4163+ 3  0DAA	E5 70		        mov     a,saved_psw
 4164+ 3  0DAC	54 C4		        anl     a,#0c4h
 4165+ 3  0DAE	64 84		        xrl     a,#084h
 4166+ 3  0DB0	54 FE		        anl     a,#0feh
 4167+ 3  0DB2	70 05		        jnz     ??0365
 4168+ 2			        endif
 4169+ 1
 4170+ 1			        eot     'a',??0365
 4171+ 2			        putc    #'a'
 4172+ 3  0DB4			??0377:
 4173+ 3			        ;jnb     SCON.1,putc_loop
 4174+ 3			        ;clr     SCON.1
 4175+ 3  0DB4	75 99 61	        mov     SBUF,#'a'
 4176+ 2  0DB7	80 06		        sjmp    ??0376
 4177+ 2  0DB9			??0365:  putc    #'?'
 4178+ 3  0DB9			??0378:
 4179+ 3			        ;jnb     SCON.1,putc_loop
 4180+ 3			        ;clr     SCON.1
 4181+ 3  0DB9	75 99 3F	        mov     SBUF,#'?'
 4182+ 2  0DBC	75 6E 01	        mov     fail,#001h
 4183+ 2  0DBF			??0376:
 4184+ 1
 4185+ 1			        top_ma  add,r2,??0366,<084h>
 4186+ 2  0DBF	7A 81		        mov     r2,#arg0
 4187+ 2  0DC1	74 93		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 76



 Line  I  Addr  Code            Source

 4188+ 2			        ifnb    <084h>
 4189+ 2			        set_cy  084h
 4190+ 3	N      0000	??0379  set     (084h and 1)
 4191+ 3	N      0000	        if      ??0379 eq 1
 4192+ 3			        setb    c
 4193+ 3			        else
 4194+ 3  0DC3	C3		        clr     c
 4195+ 3			        endif
 4196+ 2			        endif
 4197+ 2  0DC4	2A		        add      a,r2
 4198+ 2			        ifnb    <084h>
 4199+ 2			        save_psw
 4200+ 3  0DC5	85 D0 70	        mov     saved_psw,PSW
 4201+ 2			        endif
 4202+ 2  0DC8	B4 14 25	        cjne    a,#res,??0366
 4203+ 2			        ifnb    <084h>
 4204+ 2			        tst_psw <084h>,??0366
 4205+ 3  0DCB	E5 70		        mov     a,saved_psw
 4206+ 3  0DCD	54 C4		        anl     a,#0c4h
 4207+ 3  0DCF	64 84		        xrl     a,#084h
 4208+ 3  0DD1	54 FE		        anl     a,#0feh
 4209+ 3  0DD3	70 1B		        jnz     ??0366
 4210+ 2			        endif
 4211+ 1			        top_ma  add,r3,??0366,<084h>
 4212+ 2  0DD5	7B 81		        mov     r3,#arg0
 4213+ 2  0DD7	74 93		        mov     a,#arg1
 4214+ 2			        ifnb    <084h>
 4215+ 2			        set_cy  084h
 4216+ 3	N      0000	??0380  set     (084h and 1)
 4217+ 3	N      0000	        if      ??0380 eq 1
 4218+ 3			        setb    c
 4219+ 3			        else
 4220+ 3  0DD9	C3		        clr     c
 4221+ 3			        endif
 4222+ 2			        endif
 4223+ 2  0DDA	2B		        add      a,r3
 4224+ 2			        ifnb    <084h>
 4225+ 2			        save_psw
 4226+ 3  0DDB	85 D0 70	        mov     saved_psw,PSW
 4227+ 2			        endif
 4228+ 2  0DDE	B4 14 0F	        cjne    a,#res,??0366
 4229+ 2			        ifnb    <084h>
 4230+ 2			        tst_psw <084h>,??0366
 4231+ 3  0DE1	E5 70		        mov     a,saved_psw
 4232+ 3  0DE3	54 C4		        anl     a,#0c4h
 4233+ 3  0DE5	64 84		        xrl     a,#084h
 4234+ 3  0DE7	54 FE		        anl     a,#0feh
 4235+ 3  0DE9	70 05		        jnz     ??0366
 4236+ 2			        endif
 4237+ 1
 4238+ 1			        eot     'b',??0366
 4239+ 2			        putc    #'b'
 4240+ 3  0DEB			??0382:
 4241+ 3			        ;jnb     SCON.1,putc_loop
 4242+ 3			        ;clr     SCON.1
 4243+ 3  0DEB	75 99 62	        mov     SBUF,#'b'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 77



 Line  I  Addr  Code            Source

 4244+ 2  0DEE	80 06		        sjmp    ??0381
 4245+ 2  0DF0			??0366:  putc    #'?'
 4246+ 3  0DF0			??0383:
 4247+ 3			        ;jnb     SCON.1,putc_loop
 4248+ 3			        ;clr     SCON.1
 4249+ 3  0DF0	75 99 3F	        mov     SBUF,#'?'
 4250+ 2  0DF3	75 6E 01	        mov     fail,#001h
 4251+ 2  0DF6			??0381:
 4252+ 1
 4253+ 1			        top_ma  add,r4,??0367,<084h>
 4254+ 2  0DF6	7C 81		        mov     r4,#arg0
 4255+ 2  0DF8	74 93		        mov     a,#arg1
 4256+ 2			        ifnb    <084h>
 4257+ 2			        set_cy  084h
 4258+ 3	N      0000	??0384  set     (084h and 1)
 4259+ 3	N      0000	        if      ??0384 eq 1
 4260+ 3			        setb    c
 4261+ 3			        else
 4262+ 3  0DFA	C3		        clr     c
 4263+ 3			        endif
 4264+ 2			        endif
 4265+ 2  0DFB	2C		        add      a,r4
 4266+ 2			        ifnb    <084h>
 4267+ 2			        save_psw
 4268+ 3  0DFC	85 D0 70	        mov     saved_psw,PSW
 4269+ 2			        endif
 4270+ 2  0DFF	B4 14 25	        cjne    a,#res,??0367
 4271+ 2			        ifnb    <084h>
 4272+ 2			        tst_psw <084h>,??0367
 4273+ 3  0E02	E5 70		        mov     a,saved_psw
 4274+ 3  0E04	54 C4		        anl     a,#0c4h
 4275+ 3  0E06	64 84		        xrl     a,#084h
 4276+ 3  0E08	54 FE		        anl     a,#0feh
 4277+ 3  0E0A	70 1B		        jnz     ??0367
 4278+ 2			        endif
 4279+ 1			        top_ma  add,r5,??0367,<084h>
 4280+ 2  0E0C	7D 81		        mov     r5,#arg0
 4281+ 2  0E0E	74 93		        mov     a,#arg1
 4282+ 2			        ifnb    <084h>
 4283+ 2			        set_cy  084h
 4284+ 3	N      0000	??0385  set     (084h and 1)
 4285+ 3	N      0000	        if      ??0385 eq 1
 4286+ 3			        setb    c
 4287+ 3			        else
 4288+ 3  0E10	C3		        clr     c
 4289+ 3			        endif
 4290+ 2			        endif
 4291+ 2  0E11	2D		        add      a,r5
 4292+ 2			        ifnb    <084h>
 4293+ 2			        save_psw
 4294+ 3  0E12	85 D0 70	        mov     saved_psw,PSW
 4295+ 2			        endif
 4296+ 2  0E15	B4 14 0F	        cjne    a,#res,??0367
 4297+ 2			        ifnb    <084h>
 4298+ 2			        tst_psw <084h>,??0367
 4299+ 3  0E18	E5 70		        mov     a,saved_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 78



 Line  I  Addr  Code            Source

 4300+ 3  0E1A	54 C4		        anl     a,#0c4h
 4301+ 3  0E1C	64 84		        xrl     a,#084h
 4302+ 3  0E1E	54 FE		        anl     a,#0feh
 4303+ 3  0E20	70 05		        jnz     ??0367
 4304+ 2			        endif
 4305+ 1
 4306+ 1			        eot     'c',??0367
 4307+ 2			        putc    #'c'
 4308+ 3  0E22			??0387:
 4309+ 3			        ;jnb     SCON.1,putc_loop
 4310+ 3			        ;clr     SCON.1
 4311+ 3  0E22	75 99 63	        mov     SBUF,#'c'
 4312+ 2  0E25	80 06		        sjmp    ??0386
 4313+ 2  0E27			??0367:  putc    #'?'
 4314+ 3  0E27			??0388:
 4315+ 3			        ;jnb     SCON.1,putc_loop
 4316+ 3			        ;clr     SCON.1
 4317+ 3  0E27	75 99 3F	        mov     SBUF,#'?'
 4318+ 2  0E2A	75 6E 01	        mov     fail,#001h
 4319+ 2  0E2D			??0386:
 4320+ 1
 4321+ 1			        top_ma  add,r6,??0364,<084h>
 4322+ 2  0E2D	7E 81		        mov     r6,#arg0
 4323+ 2  0E2F	74 93		        mov     a,#arg1
 4324+ 2			        ifnb    <084h>
 4325+ 2			        set_cy  084h
 4326+ 3	N      0000	??0389  set     (084h and 1)
 4327+ 3	N      0000	        if      ??0389 eq 1
 4328+ 3			        setb    c
 4329+ 3			        else
 4330+ 3  0E31	C3		        clr     c
 4331+ 3			        endif
 4332+ 2			        endif
 4333+ 2  0E32	2E		        add      a,r6
 4334+ 2			        ifnb    <084h>
 4335+ 2			        save_psw
 4336+ 3  0E33	85 D0 70	        mov     saved_psw,PSW
 4337+ 2			        endif
 4338+ 2  0E36	B4 14 25	        cjne    a,#res,??0364
 4339+ 2			        ifnb    <084h>
 4340+ 2			        tst_psw <084h>,??0364
 4341+ 3  0E39	E5 70		        mov     a,saved_psw
 4342+ 3  0E3B	54 C4		        anl     a,#0c4h
 4343+ 3  0E3D	64 84		        xrl     a,#084h
 4344+ 3  0E3F	54 FE		        anl     a,#0feh
 4345+ 3  0E41	70 1B		        jnz     ??0364
 4346+ 2			        endif
 4347+ 1			        top_ma  add,r7,??0364,<084h>
 4348+ 2  0E43	7F 81		        mov     r7,#arg0
 4349+ 2  0E45	74 93		        mov     a,#arg1
 4350+ 2			        ifnb    <084h>
 4351+ 2			        set_cy  084h
 4352+ 3	N      0000	??0390  set     (084h and 1)
 4353+ 3	N      0000	        if      ??0390 eq 1
 4354+ 3			        setb    c
 4355+ 3			        else

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 79



 Line  I  Addr  Code            Source

 4356+ 3  0E47	C3		        clr     c
 4357+ 3			        endif
 4358+ 2			        endif
 4359+ 2  0E48	2F		        add      a,r7
 4360+ 2			        ifnb    <084h>
 4361+ 2			        save_psw
 4362+ 3  0E49	85 D0 70	        mov     saved_psw,PSW
 4363+ 2			        endif
 4364+ 2  0E4C	B4 14 0F	        cjne    a,#res,??0364
 4365+ 2			        ifnb    <084h>
 4366+ 2			        tst_psw <084h>,??0364
 4367+ 3  0E4F	E5 70		        mov     a,saved_psw
 4368+ 3  0E51	54 C4		        anl     a,#0c4h
 4369+ 3  0E53	64 84		        xrl     a,#084h
 4370+ 3  0E55	54 FE		        anl     a,#0feh
 4371+ 3  0E57	70 05		        jnz     ??0364
 4372+ 2			        endif
 4373+ 1
 4374+ 1			        eot     'd',??0364
 4375+ 2			        putc    #'d'
 4376+ 3  0E59			??0392:
 4377+ 3			        ;jnb     SCON.1,putc_loop
 4378+ 3			        ;clr     SCON.1
 4379+ 3  0E59	75 99 64	        mov     SBUF,#'d'
 4380+ 2  0E5C	80 06		        sjmp    ??0391
 4381+ 2  0E5E			??0364:  putc    #'?'
 4382+ 3  0E5E			??0393:
 4383+ 3			        ;jnb     SCON.1,putc_loop
 4384+ 3			        ;clr     SCON.1
 4385+ 3  0E5E	75 99 3F	        mov     SBUF,#'?'
 4386+ 2  0E61	75 6E 01	        mov     fail,#001h
 4387+ 2  0E64			??0391:
 4388+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 4389+ 1
 4390+ 1			        ; Optionally test immediate addressing modes.
 4391+ 1
 4392+ 1	N      FFFF	        if      (01h and 1) ne 0
 4393+ 1			        ; Test <op> A, #arg1...
 4394+ 1			        top_mb  add,a,??0368,<084h>
 4395+ 2  0E64	74 93		        mov     a,#arg1
 4396+ 2			        ifnb    <084h>
 4397+ 2			        set_cy  084h
 4398+ 3	N      0000	??0394  set     (084h and 1)
 4399+ 3	N      0000	        if      ??0394 eq 1
 4400+ 3			        setb    c
 4401+ 3			        else
 4402+ 3  0E66	C3		        clr     c
 4403+ 3			        endif
 4404+ 2			        endif
 4405+ 2  0E67	24 81		        add      a,#arg0
 4406+ 2			        ifnb    <084h>
 4407+ 2			        save_psw
 4408+ 3  0E69	85 D0 70	        mov     saved_psw,PSW
 4409+ 2			        endif
 4410+ 2  0E6C	F5 E0		        mov     ACC,a
 4411+ 2  0E6E	B4 14 0F	        cjne    a,#res,??0368

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 80



 Line  I  Addr  Code            Source

 4412+ 2			        ifnb    <084h>
 4413+ 2			        tst_psw <084h>,??0368
 4414+ 3  0E71	E5 70		        mov     a,saved_psw
 4415+ 3  0E73	54 C4		        anl     a,#0c4h
 4416+ 3  0E75	64 84		        xrl     a,#084h
 4417+ 3  0E77	54 FE		        anl     a,#0feh
 4418+ 3  0E79	70 05		        jnz     ??0368
 4419+ 2			        endif
 4420+ 1			        eot     'e',??0368
 4421+ 2			        putc    #'e'
 4422+ 3  0E7B			??0396:
 4423+ 3			        ;jnb     SCON.1,putc_loop
 4424+ 3			        ;clr     SCON.1
 4425+ 3  0E7B	75 99 65	        mov     SBUF,#'e'
 4426+ 2  0E7E	80 06		        sjmp    ??0395
 4427+ 2  0E80			??0368:  putc    #'?'
 4428+ 3  0E80			??0397:
 4429+ 3			        ;jnb     SCON.1,putc_loop
 4430+ 3			        ;clr     SCON.1
 4431+ 3  0E80	75 99 3F	        mov     SBUF,#'?'
 4432+ 2  0E83	75 6E 01	        mov     fail,#001h
 4433+ 2  0E86			??0395:
 4434+ 1			        endif
 4435+ 1
 4436+ 1	N      0000	        if      (01h and 2) ne 0
 4437+ 1			        ; ...and <op> dir, #arg1
 4438+ 1			        top_mb  add,dir0,??0369,<084h>
 4439+ 1			        eot     'f',??0369
 4440+ 1			        endif
 4441+ 1
 4442+ 1			        ; Optionally test <op> dir, A
 4443+ 1	N      0000	        if      (01h and 4) ne 0
 4444+ 1			        top_mc  add,??0370,<084h>
 4445+ 1			        eot     'g',??0370
 4446+ 1			        endif
 4447+ 1
 4448:				        putc    #'2'
 4449+ 1  0E86			??0398:
 4450+ 1			        ;jnb     SCON.1,putc_loop
 4451+ 1			        ;clr     SCON.1
 4452+ 1  0E86	75 99 32	        mov     SBUF,#'2'
 4453:				        tst_alu add,088h,098h,020h,01h,0c4h     ;  CY  AC  OV
 4454+ 1			        ; Put the argument and result data into variables for easier access
 4455+ 1	N      0088	        arg0    set 088h
 4456+ 1	N      0098	        arg1    set 098h
 4457+ 1	N      0020	        res     set 020h
 4458+ 1
 4459+ 1			        ; Test <op> A, dir
 4460+ 1			        top_ma  add,dir0,??0400,<0c4h>
 4461+ 2  0E89	75 60 88	        mov     dir0,#arg0
 4462+ 2  0E8C	74 98		        mov     a,#arg1
 4463+ 2			        ifnb    <0c4h>
 4464+ 2			        set_cy  0c4h
 4465+ 3	N      0000	??0406  set     (0c4h and 1)
 4466+ 3	N      0000	        if      ??0406 eq 1
 4467+ 3			        setb    c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 81



 Line  I  Addr  Code            Source

 4468+ 3			        else
 4469+ 3  0E8E	C3		        clr     c
 4470+ 3			        endif
 4471+ 2			        endif
 4472+ 2  0E8F	25 60		        add      a,dir0
 4473+ 2			        ifnb    <0c4h>
 4474+ 2			        save_psw
 4475+ 3  0E91	85 D0 70	        mov     saved_psw,PSW
 4476+ 2			        endif
 4477+ 2  0E94	B4 20 6B	        cjne    a,#res,??0400
 4478+ 2			        ifnb    <0c4h>
 4479+ 2			        tst_psw <0c4h>,??0400
 4480+ 3  0E97	E5 70		        mov     a,saved_psw
 4481+ 3  0E99	54 C4		        anl     a,#0c4h
 4482+ 3  0E9B	64 C4		        xrl     a,#0c4h
 4483+ 3  0E9D	54 FE		        anl     a,#0feh
 4484+ 3  0E9F	70 61		        jnz     ??0400
 4485+ 2			        endif
 4486+ 1			        ; Test <op> A, @R0
 4487+ 1  0EA1	78 60		        mov     r0,#dir0
 4488+ 1			        top_ma  add,@r0,??0400,<0c4h>
 4489+ 2  0EA3	76 88		        mov     @r0,#arg0
 4490+ 2  0EA5	74 98		        mov     a,#arg1
 4491+ 2			        ifnb    <0c4h>
 4492+ 2			        set_cy  0c4h
 4493+ 3	N      0000	??0407  set     (0c4h and 1)
 4494+ 3	N      0000	        if      ??0407 eq 1
 4495+ 3			        setb    c
 4496+ 3			        else
 4497+ 3  0EA7	C3		        clr     c
 4498+ 3			        endif
 4499+ 2			        endif
 4500+ 2  0EA8	26		        add      a,@r0
 4501+ 2			        ifnb    <0c4h>
 4502+ 2			        save_psw
 4503+ 3  0EA9	85 D0 70	        mov     saved_psw,PSW
 4504+ 2			        endif
 4505+ 2  0EAC	B4 20 53	        cjne    a,#res,??0400
 4506+ 2			        ifnb    <0c4h>
 4507+ 2			        tst_psw <0c4h>,??0400
 4508+ 3  0EAF	E5 70		        mov     a,saved_psw
 4509+ 3  0EB1	54 C4		        anl     a,#0c4h
 4510+ 3  0EB3	64 C4		        xrl     a,#0c4h
 4511+ 3  0EB5	54 FE		        anl     a,#0feh
 4512+ 3  0EB7	70 49		        jnz     ??0400
 4513+ 2			        endif
 4514+ 1			        ; Test <op> A, @R1
 4515+ 1  0EB9	79 31		        mov     r1,#031h
 4516+ 1			        top_ma  add,@r1,??0400,<0c4h>
 4517+ 2  0EBB	77 88		        mov     @r1,#arg0
 4518+ 2  0EBD	74 98		        mov     a,#arg1
 4519+ 2			        ifnb    <0c4h>
 4520+ 2			        set_cy  0c4h
 4521+ 3	N      0000	??0408  set     (0c4h and 1)
 4522+ 3	N      0000	        if      ??0408 eq 1
 4523+ 3			        setb    c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 82



 Line  I  Addr  Code            Source

 4524+ 3			        else
 4525+ 3  0EBF	C3		        clr     c
 4526+ 3			        endif
 4527+ 2			        endif
 4528+ 2  0EC0	27		        add      a,@r1
 4529+ 2			        ifnb    <0c4h>
 4530+ 2			        save_psw
 4531+ 3  0EC1	85 D0 70	        mov     saved_psw,PSW
 4532+ 2			        endif
 4533+ 2  0EC4	B4 20 3B	        cjne    a,#res,??0400
 4534+ 2			        ifnb    <0c4h>
 4535+ 2			        tst_psw <0c4h>,??0400
 4536+ 3  0EC7	E5 70		        mov     a,saved_psw
 4537+ 3  0EC9	54 C4		        anl     a,#0c4h
 4538+ 3  0ECB	64 C4		        xrl     a,#0c4h
 4539+ 3  0ECD	54 FE		        anl     a,#0feh
 4540+ 3  0ECF	70 31		        jnz     ??0400
 4541+ 2			        endif
 4542+ 1
 4543+ 1			        ; Now test <op> A, Rn for n in 0..7
 4544+ 1			        top_ma  add,r0,??0400,<0c4h>
 4545+ 2  0ED1	78 88		        mov     r0,#arg0
 4546+ 2  0ED3	74 98		        mov     a,#arg1
 4547+ 2			        ifnb    <0c4h>
 4548+ 2			        set_cy  0c4h
 4549+ 3	N      0000	??0409  set     (0c4h and 1)
 4550+ 3	N      0000	        if      ??0409 eq 1
 4551+ 3			        setb    c
 4552+ 3			        else
 4553+ 3  0ED5	C3		        clr     c
 4554+ 3			        endif
 4555+ 2			        endif
 4556+ 2  0ED6	28		        add      a,r0
 4557+ 2			        ifnb    <0c4h>
 4558+ 2			        save_psw
 4559+ 3  0ED7	85 D0 70	        mov     saved_psw,PSW
 4560+ 2			        endif
 4561+ 2  0EDA	B4 20 25	        cjne    a,#res,??0400
 4562+ 2			        ifnb    <0c4h>
 4563+ 2			        tst_psw <0c4h>,??0400
 4564+ 3  0EDD	E5 70		        mov     a,saved_psw
 4565+ 3  0EDF	54 C4		        anl     a,#0c4h
 4566+ 3  0EE1	64 C4		        xrl     a,#0c4h
 4567+ 3  0EE3	54 FE		        anl     a,#0feh
 4568+ 3  0EE5	70 1B		        jnz     ??0400
 4569+ 2			        endif
 4570+ 1			        top_ma  add,r1,??0400,<0c4h>
 4571+ 2  0EE7	79 88		        mov     r1,#arg0
 4572+ 2  0EE9	74 98		        mov     a,#arg1
 4573+ 2			        ifnb    <0c4h>
 4574+ 2			        set_cy  0c4h
 4575+ 3	N      0000	??0410  set     (0c4h and 1)
 4576+ 3	N      0000	        if      ??0410 eq 1
 4577+ 3			        setb    c
 4578+ 3			        else
 4579+ 3  0EEB	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 83



 Line  I  Addr  Code            Source

 4580+ 3			        endif
 4581+ 2			        endif
 4582+ 2  0EEC	29		        add      a,r1
 4583+ 2			        ifnb    <0c4h>
 4584+ 2			        save_psw
 4585+ 3  0EED	85 D0 70	        mov     saved_psw,PSW
 4586+ 2			        endif
 4587+ 2  0EF0	B4 20 0F	        cjne    a,#res,??0400
 4588+ 2			        ifnb    <0c4h>
 4589+ 2			        tst_psw <0c4h>,??0400
 4590+ 3  0EF3	E5 70		        mov     a,saved_psw
 4591+ 3  0EF5	54 C4		        anl     a,#0c4h
 4592+ 3  0EF7	64 C4		        xrl     a,#0c4h
 4593+ 3  0EF9	54 FE		        anl     a,#0feh
 4594+ 3  0EFB	70 05		        jnz     ??0400
 4595+ 2			        endif
 4596+ 1
 4597+ 1			        eot     'a',??0400
 4598+ 2			        putc    #'a'
 4599+ 3  0EFD			??0412:
 4600+ 3			        ;jnb     SCON.1,putc_loop
 4601+ 3			        ;clr     SCON.1
 4602+ 3  0EFD	75 99 61	        mov     SBUF,#'a'
 4603+ 2  0F00	80 06		        sjmp    ??0411
 4604+ 2  0F02			??0400:  putc    #'?'
 4605+ 3  0F02			??0413:
 4606+ 3			        ;jnb     SCON.1,putc_loop
 4607+ 3			        ;clr     SCON.1
 4608+ 3  0F02	75 99 3F	        mov     SBUF,#'?'
 4609+ 2  0F05	75 6E 01	        mov     fail,#001h
 4610+ 2  0F08			??0411:
 4611+ 1
 4612+ 1			        top_ma  add,r2,??0401,<0c4h>
 4613+ 2  0F08	7A 88		        mov     r2,#arg0
 4614+ 2  0F0A	74 98		        mov     a,#arg1
 4615+ 2			        ifnb    <0c4h>
 4616+ 2			        set_cy  0c4h
 4617+ 3	N      0000	??0414  set     (0c4h and 1)
 4618+ 3	N      0000	        if      ??0414 eq 1
 4619+ 3			        setb    c
 4620+ 3			        else
 4621+ 3  0F0C	C3		        clr     c
 4622+ 3			        endif
 4623+ 2			        endif
 4624+ 2  0F0D	2A		        add      a,r2
 4625+ 2			        ifnb    <0c4h>
 4626+ 2			        save_psw
 4627+ 3  0F0E	85 D0 70	        mov     saved_psw,PSW
 4628+ 2			        endif
 4629+ 2  0F11	B4 20 25	        cjne    a,#res,??0401
 4630+ 2			        ifnb    <0c4h>
 4631+ 2			        tst_psw <0c4h>,??0401
 4632+ 3  0F14	E5 70		        mov     a,saved_psw
 4633+ 3  0F16	54 C4		        anl     a,#0c4h
 4634+ 3  0F18	64 C4		        xrl     a,#0c4h
 4635+ 3  0F1A	54 FE		        anl     a,#0feh

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 84



 Line  I  Addr  Code            Source

 4636+ 3  0F1C	70 1B		        jnz     ??0401
 4637+ 2			        endif
 4638+ 1			        top_ma  add,r3,??0401,<0c4h>
 4639+ 2  0F1E	7B 88		        mov     r3,#arg0
 4640+ 2  0F20	74 98		        mov     a,#arg1
 4641+ 2			        ifnb    <0c4h>
 4642+ 2			        set_cy  0c4h
 4643+ 3	N      0000	??0415  set     (0c4h and 1)
 4644+ 3	N      0000	        if      ??0415 eq 1
 4645+ 3			        setb    c
 4646+ 3			        else
 4647+ 3  0F22	C3		        clr     c
 4648+ 3			        endif
 4649+ 2			        endif
 4650+ 2  0F23	2B		        add      a,r3
 4651+ 2			        ifnb    <0c4h>
 4652+ 2			        save_psw
 4653+ 3  0F24	85 D0 70	        mov     saved_psw,PSW
 4654+ 2			        endif
 4655+ 2  0F27	B4 20 0F	        cjne    a,#res,??0401
 4656+ 2			        ifnb    <0c4h>
 4657+ 2			        tst_psw <0c4h>,??0401
 4658+ 3  0F2A	E5 70		        mov     a,saved_psw
 4659+ 3  0F2C	54 C4		        anl     a,#0c4h
 4660+ 3  0F2E	64 C4		        xrl     a,#0c4h
 4661+ 3  0F30	54 FE		        anl     a,#0feh
 4662+ 3  0F32	70 05		        jnz     ??0401
 4663+ 2			        endif
 4664+ 1
 4665+ 1			        eot     'b',??0401
 4666+ 2			        putc    #'b'
 4667+ 3  0F34			??0417:
 4668+ 3			        ;jnb     SCON.1,putc_loop
 4669+ 3			        ;clr     SCON.1
 4670+ 3  0F34	75 99 62	        mov     SBUF,#'b'
 4671+ 2  0F37	80 06		        sjmp    ??0416
 4672+ 2  0F39			??0401:  putc    #'?'
 4673+ 3  0F39			??0418:
 4674+ 3			        ;jnb     SCON.1,putc_loop
 4675+ 3			        ;clr     SCON.1
 4676+ 3  0F39	75 99 3F	        mov     SBUF,#'?'
 4677+ 2  0F3C	75 6E 01	        mov     fail,#001h
 4678+ 2  0F3F			??0416:
 4679+ 1
 4680+ 1			        top_ma  add,r4,??0402,<0c4h>
 4681+ 2  0F3F	7C 88		        mov     r4,#arg0
 4682+ 2  0F41	74 98		        mov     a,#arg1
 4683+ 2			        ifnb    <0c4h>
 4684+ 2			        set_cy  0c4h
 4685+ 3	N      0000	??0419  set     (0c4h and 1)
 4686+ 3	N      0000	        if      ??0419 eq 1
 4687+ 3			        setb    c
 4688+ 3			        else
 4689+ 3  0F43	C3		        clr     c
 4690+ 3			        endif
 4691+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 85



 Line  I  Addr  Code            Source

 4692+ 2  0F44	2C		        add      a,r4
 4693+ 2			        ifnb    <0c4h>
 4694+ 2			        save_psw
 4695+ 3  0F45	85 D0 70	        mov     saved_psw,PSW
 4696+ 2			        endif
 4697+ 2  0F48	B4 20 25	        cjne    a,#res,??0402
 4698+ 2			        ifnb    <0c4h>
 4699+ 2			        tst_psw <0c4h>,??0402
 4700+ 3  0F4B	E5 70		        mov     a,saved_psw
 4701+ 3  0F4D	54 C4		        anl     a,#0c4h
 4702+ 3  0F4F	64 C4		        xrl     a,#0c4h
 4703+ 3  0F51	54 FE		        anl     a,#0feh
 4704+ 3  0F53	70 1B		        jnz     ??0402
 4705+ 2			        endif
 4706+ 1			        top_ma  add,r5,??0402,<0c4h>
 4707+ 2  0F55	7D 88		        mov     r5,#arg0
 4708+ 2  0F57	74 98		        mov     a,#arg1
 4709+ 2			        ifnb    <0c4h>
 4710+ 2			        set_cy  0c4h
 4711+ 3	N      0000	??0420  set     (0c4h and 1)
 4712+ 3	N      0000	        if      ??0420 eq 1
 4713+ 3			        setb    c
 4714+ 3			        else
 4715+ 3  0F59	C3		        clr     c
 4716+ 3			        endif
 4717+ 2			        endif
 4718+ 2  0F5A	2D		        add      a,r5
 4719+ 2			        ifnb    <0c4h>
 4720+ 2			        save_psw
 4721+ 3  0F5B	85 D0 70	        mov     saved_psw,PSW
 4722+ 2			        endif
 4723+ 2  0F5E	B4 20 0F	        cjne    a,#res,??0402
 4724+ 2			        ifnb    <0c4h>
 4725+ 2			        tst_psw <0c4h>,??0402
 4726+ 3  0F61	E5 70		        mov     a,saved_psw
 4727+ 3  0F63	54 C4		        anl     a,#0c4h
 4728+ 3  0F65	64 C4		        xrl     a,#0c4h
 4729+ 3  0F67	54 FE		        anl     a,#0feh
 4730+ 3  0F69	70 05		        jnz     ??0402
 4731+ 2			        endif
 4732+ 1
 4733+ 1			        eot     'c',??0402
 4734+ 2			        putc    #'c'
 4735+ 3  0F6B			??0422:
 4736+ 3			        ;jnb     SCON.1,putc_loop
 4737+ 3			        ;clr     SCON.1
 4738+ 3  0F6B	75 99 63	        mov     SBUF,#'c'
 4739+ 2  0F6E	80 06		        sjmp    ??0421
 4740+ 2  0F70			??0402:  putc    #'?'
 4741+ 3  0F70			??0423:
 4742+ 3			        ;jnb     SCON.1,putc_loop
 4743+ 3			        ;clr     SCON.1
 4744+ 3  0F70	75 99 3F	        mov     SBUF,#'?'
 4745+ 2  0F73	75 6E 01	        mov     fail,#001h
 4746+ 2  0F76			??0421:
 4747+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 86



 Line  I  Addr  Code            Source

 4748+ 1			        top_ma  add,r6,??0399,<0c4h>
 4749+ 2  0F76	7E 88		        mov     r6,#arg0
 4750+ 2  0F78	74 98		        mov     a,#arg1
 4751+ 2			        ifnb    <0c4h>
 4752+ 2			        set_cy  0c4h
 4753+ 3	N      0000	??0424  set     (0c4h and 1)
 4754+ 3	N      0000	        if      ??0424 eq 1
 4755+ 3			        setb    c
 4756+ 3			        else
 4757+ 3  0F7A	C3		        clr     c
 4758+ 3			        endif
 4759+ 2			        endif
 4760+ 2  0F7B	2E		        add      a,r6
 4761+ 2			        ifnb    <0c4h>
 4762+ 2			        save_psw
 4763+ 3  0F7C	85 D0 70	        mov     saved_psw,PSW
 4764+ 2			        endif
 4765+ 2  0F7F	B4 20 25	        cjne    a,#res,??0399
 4766+ 2			        ifnb    <0c4h>
 4767+ 2			        tst_psw <0c4h>,??0399
 4768+ 3  0F82	E5 70		        mov     a,saved_psw
 4769+ 3  0F84	54 C4		        anl     a,#0c4h
 4770+ 3  0F86	64 C4		        xrl     a,#0c4h
 4771+ 3  0F88	54 FE		        anl     a,#0feh
 4772+ 3  0F8A	70 1B		        jnz     ??0399
 4773+ 2			        endif
 4774+ 1			        top_ma  add,r7,??0399,<0c4h>
 4775+ 2  0F8C	7F 88		        mov     r7,#arg0
 4776+ 2  0F8E	74 98		        mov     a,#arg1
 4777+ 2			        ifnb    <0c4h>
 4778+ 2			        set_cy  0c4h
 4779+ 3	N      0000	??0425  set     (0c4h and 1)
 4780+ 3	N      0000	        if      ??0425 eq 1
 4781+ 3			        setb    c
 4782+ 3			        else
 4783+ 3  0F90	C3		        clr     c
 4784+ 3			        endif
 4785+ 2			        endif
 4786+ 2  0F91	2F		        add      a,r7
 4787+ 2			        ifnb    <0c4h>
 4788+ 2			        save_psw
 4789+ 3  0F92	85 D0 70	        mov     saved_psw,PSW
 4790+ 2			        endif
 4791+ 2  0F95	B4 20 0F	        cjne    a,#res,??0399
 4792+ 2			        ifnb    <0c4h>
 4793+ 2			        tst_psw <0c4h>,??0399
 4794+ 3  0F98	E5 70		        mov     a,saved_psw
 4795+ 3  0F9A	54 C4		        anl     a,#0c4h
 4796+ 3  0F9C	64 C4		        xrl     a,#0c4h
 4797+ 3  0F9E	54 FE		        anl     a,#0feh
 4798+ 3  0FA0	70 05		        jnz     ??0399
 4799+ 2			        endif
 4800+ 1
 4801+ 1			        eot     'd',??0399
 4802+ 2			        putc    #'d'
 4803+ 3  0FA2			??0427:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 87



 Line  I  Addr  Code            Source

 4804+ 3			        ;jnb     SCON.1,putc_loop
 4805+ 3			        ;clr     SCON.1
 4806+ 3  0FA2	75 99 64	        mov     SBUF,#'d'
 4807+ 2  0FA5	80 06		        sjmp    ??0426
 4808+ 2  0FA7			??0399:  putc    #'?'
 4809+ 3  0FA7			??0428:
 4810+ 3			        ;jnb     SCON.1,putc_loop
 4811+ 3			        ;clr     SCON.1
 4812+ 3  0FA7	75 99 3F	        mov     SBUF,#'?'
 4813+ 2  0FAA	75 6E 01	        mov     fail,#001h
 4814+ 2  0FAD			??0426:
 4815+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 4816+ 1
 4817+ 1			        ; Optionally test immediate addressing modes.
 4818+ 1
 4819+ 1	N      FFFF	        if      (01h and 1) ne 0
 4820+ 1			        ; Test <op> A, #arg1...
 4821+ 1			        top_mb  add,a,??0403,<0c4h>
 4822+ 2  0FAD	74 98		        mov     a,#arg1
 4823+ 2			        ifnb    <0c4h>
 4824+ 2			        set_cy  0c4h
 4825+ 3	N      0000	??0429  set     (0c4h and 1)
 4826+ 3	N      0000	        if      ??0429 eq 1
 4827+ 3			        setb    c
 4828+ 3			        else
 4829+ 3  0FAF	C3		        clr     c
 4830+ 3			        endif
 4831+ 2			        endif
 4832+ 2  0FB0	24 88		        add      a,#arg0
 4833+ 2			        ifnb    <0c4h>
 4834+ 2			        save_psw
 4835+ 3  0FB2	85 D0 70	        mov     saved_psw,PSW
 4836+ 2			        endif
 4837+ 2  0FB5	F5 E0		        mov     ACC,a
 4838+ 2  0FB7	B4 20 0F	        cjne    a,#res,??0403
 4839+ 2			        ifnb    <0c4h>
 4840+ 2			        tst_psw <0c4h>,??0403
 4841+ 3  0FBA	E5 70		        mov     a,saved_psw
 4842+ 3  0FBC	54 C4		        anl     a,#0c4h
 4843+ 3  0FBE	64 C4		        xrl     a,#0c4h
 4844+ 3  0FC0	54 FE		        anl     a,#0feh
 4845+ 3  0FC2	70 05		        jnz     ??0403
 4846+ 2			        endif
 4847+ 1			        eot     'e',??0403
 4848+ 2			        putc    #'e'
 4849+ 3  0FC4			??0431:
 4850+ 3			        ;jnb     SCON.1,putc_loop
 4851+ 3			        ;clr     SCON.1
 4852+ 3  0FC4	75 99 65	        mov     SBUF,#'e'
 4853+ 2  0FC7	80 06		        sjmp    ??0430
 4854+ 2  0FC9			??0403:  putc    #'?'
 4855+ 3  0FC9			??0432:
 4856+ 3			        ;jnb     SCON.1,putc_loop
 4857+ 3			        ;clr     SCON.1
 4858+ 3  0FC9	75 99 3F	        mov     SBUF,#'?'
 4859+ 2  0FCC	75 6E 01	        mov     fail,#001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 88



 Line  I  Addr  Code            Source

 4860+ 2  0FCF			??0430:
 4861+ 1			        endif
 4862+ 1
 4863+ 1	N      0000	        if      (01h and 2) ne 0
 4864+ 1			        ; ...and <op> dir, #arg1
 4865+ 1			        top_mb  add,dir0,??0404,<0c4h>
 4866+ 1			        eot     'f',??0404
 4867+ 1			        endif
 4868+ 1
 4869+ 1			        ; Optionally test <op> dir, A
 4870+ 1	N      0000	        if      (01h and 4) ne 0
 4871+ 1			        top_mc  add,??0405,<0c4h>
 4872+ 1			        eot     'g',??0405
 4873+ 1			        endif
 4874+ 1
 4875:				        putc    #'3'
 4876+ 1  0FCF			??0433:
 4877+ 1			        ;jnb     SCON.1,putc_loop
 4878+ 1			        ;clr     SCON.1
 4879+ 1  0FCF	75 99 33	        mov     SBUF,#'3'
 4880:				        tst_alu add,043h,0fbh,03eh,01h,080h     ;  CY /AC /OV
 4881+ 1			        ; Put the argument and result data into variables for easier access
 4882+ 1	N      0043	        arg0    set 043h
 4883+ 1	N      00FB	        arg1    set 0fbh
 4884+ 1	N      003E	        res     set 03eh
 4885+ 1
 4886+ 1			        ; Test <op> A, dir
 4887+ 1			        top_ma  add,dir0,??0435,<080h>
 4888+ 2  0FD2	75 60 43	        mov     dir0,#arg0
 4889+ 2  0FD5	74 FB		        mov     a,#arg1
 4890+ 2			        ifnb    <080h>
 4891+ 2			        set_cy  080h
 4892+ 3	N      0000	??0441  set     (080h and 1)
 4893+ 3	N      0000	        if      ??0441 eq 1
 4894+ 3			        setb    c
 4895+ 3			        else
 4896+ 3  0FD7	C3		        clr     c
 4897+ 3			        endif
 4898+ 2			        endif
 4899+ 2  0FD8	25 60		        add      a,dir0
 4900+ 2			        ifnb    <080h>
 4901+ 2			        save_psw
 4902+ 3  0FDA	85 D0 70	        mov     saved_psw,PSW
 4903+ 2			        endif
 4904+ 2  0FDD	B4 3E 6B	        cjne    a,#res,??0435
 4905+ 2			        ifnb    <080h>
 4906+ 2			        tst_psw <080h>,??0435
 4907+ 3  0FE0	E5 70		        mov     a,saved_psw
 4908+ 3  0FE2	54 C4		        anl     a,#0c4h
 4909+ 3  0FE4	64 80		        xrl     a,#080h
 4910+ 3  0FE6	54 FE		        anl     a,#0feh
 4911+ 3  0FE8	70 61		        jnz     ??0435
 4912+ 2			        endif
 4913+ 1			        ; Test <op> A, @R0
 4914+ 1  0FEA	78 60		        mov     r0,#dir0
 4915+ 1			        top_ma  add,@r0,??0435,<080h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 89



 Line  I  Addr  Code            Source

 4916+ 2  0FEC	76 43		        mov     @r0,#arg0
 4917+ 2  0FEE	74 FB		        mov     a,#arg1
 4918+ 2			        ifnb    <080h>
 4919+ 2			        set_cy  080h
 4920+ 3	N      0000	??0442  set     (080h and 1)
 4921+ 3	N      0000	        if      ??0442 eq 1
 4922+ 3			        setb    c
 4923+ 3			        else
 4924+ 3  0FF0	C3		        clr     c
 4925+ 3			        endif
 4926+ 2			        endif
 4927+ 2  0FF1	26		        add      a,@r0
 4928+ 2			        ifnb    <080h>
 4929+ 2			        save_psw
 4930+ 3  0FF2	85 D0 70	        mov     saved_psw,PSW
 4931+ 2			        endif
 4932+ 2  0FF5	B4 3E 53	        cjne    a,#res,??0435
 4933+ 2			        ifnb    <080h>
 4934+ 2			        tst_psw <080h>,??0435
 4935+ 3  0FF8	E5 70		        mov     a,saved_psw
 4936+ 3  0FFA	54 C4		        anl     a,#0c4h
 4937+ 3  0FFC	64 80		        xrl     a,#080h
 4938+ 3  0FFE	54 FE		        anl     a,#0feh
 4939+ 3  1000	70 49		        jnz     ??0435
 4940+ 2			        endif
 4941+ 1			        ; Test <op> A, @R1
 4942+ 1  1002	79 31		        mov     r1,#031h
 4943+ 1			        top_ma  add,@r1,??0435,<080h>
 4944+ 2  1004	77 43		        mov     @r1,#arg0
 4945+ 2  1006	74 FB		        mov     a,#arg1
 4946+ 2			        ifnb    <080h>
 4947+ 2			        set_cy  080h
 4948+ 3	N      0000	??0443  set     (080h and 1)
 4949+ 3	N      0000	        if      ??0443 eq 1
 4950+ 3			        setb    c
 4951+ 3			        else
 4952+ 3  1008	C3		        clr     c
 4953+ 3			        endif
 4954+ 2			        endif
 4955+ 2  1009	27		        add      a,@r1
 4956+ 2			        ifnb    <080h>
 4957+ 2			        save_psw
 4958+ 3  100A	85 D0 70	        mov     saved_psw,PSW
 4959+ 2			        endif
 4960+ 2  100D	B4 3E 3B	        cjne    a,#res,??0435
 4961+ 2			        ifnb    <080h>
 4962+ 2			        tst_psw <080h>,??0435
 4963+ 3  1010	E5 70		        mov     a,saved_psw
 4964+ 3  1012	54 C4		        anl     a,#0c4h
 4965+ 3  1014	64 80		        xrl     a,#080h
 4966+ 3  1016	54 FE		        anl     a,#0feh
 4967+ 3  1018	70 31		        jnz     ??0435
 4968+ 2			        endif
 4969+ 1
 4970+ 1			        ; Now test <op> A, Rn for n in 0..7
 4971+ 1			        top_ma  add,r0,??0435,<080h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 90



 Line  I  Addr  Code            Source

 4972+ 2  101A	78 43		        mov     r0,#arg0
 4973+ 2  101C	74 FB		        mov     a,#arg1
 4974+ 2			        ifnb    <080h>
 4975+ 2			        set_cy  080h
 4976+ 3	N      0000	??0444  set     (080h and 1)
 4977+ 3	N      0000	        if      ??0444 eq 1
 4978+ 3			        setb    c
 4979+ 3			        else
 4980+ 3  101E	C3		        clr     c
 4981+ 3			        endif
 4982+ 2			        endif
 4983+ 2  101F	28		        add      a,r0
 4984+ 2			        ifnb    <080h>
 4985+ 2			        save_psw
 4986+ 3  1020	85 D0 70	        mov     saved_psw,PSW
 4987+ 2			        endif
 4988+ 2  1023	B4 3E 25	        cjne    a,#res,??0435
 4989+ 2			        ifnb    <080h>
 4990+ 2			        tst_psw <080h>,??0435
 4991+ 3  1026	E5 70		        mov     a,saved_psw
 4992+ 3  1028	54 C4		        anl     a,#0c4h
 4993+ 3  102A	64 80		        xrl     a,#080h
 4994+ 3  102C	54 FE		        anl     a,#0feh
 4995+ 3  102E	70 1B		        jnz     ??0435
 4996+ 2			        endif
 4997+ 1			        top_ma  add,r1,??0435,<080h>
 4998+ 2  1030	79 43		        mov     r1,#arg0
 4999+ 2  1032	74 FB		        mov     a,#arg1
 5000+ 2			        ifnb    <080h>
 5001+ 2			        set_cy  080h
 5002+ 3	N      0000	??0445  set     (080h and 1)
 5003+ 3	N      0000	        if      ??0445 eq 1
 5004+ 3			        setb    c
 5005+ 3			        else
 5006+ 3  1034	C3		        clr     c
 5007+ 3			        endif
 5008+ 2			        endif
 5009+ 2  1035	29		        add      a,r1
 5010+ 2			        ifnb    <080h>
 5011+ 2			        save_psw
 5012+ 3  1036	85 D0 70	        mov     saved_psw,PSW
 5013+ 2			        endif
 5014+ 2  1039	B4 3E 0F	        cjne    a,#res,??0435
 5015+ 2			        ifnb    <080h>
 5016+ 2			        tst_psw <080h>,??0435
 5017+ 3  103C	E5 70		        mov     a,saved_psw
 5018+ 3  103E	54 C4		        anl     a,#0c4h
 5019+ 3  1040	64 80		        xrl     a,#080h
 5020+ 3  1042	54 FE		        anl     a,#0feh
 5021+ 3  1044	70 05		        jnz     ??0435
 5022+ 2			        endif
 5023+ 1
 5024+ 1			        eot     'a',??0435
 5025+ 2			        putc    #'a'
 5026+ 3  1046			??0447:
 5027+ 3			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 91



 Line  I  Addr  Code            Source

 5028+ 3			        ;clr     SCON.1
 5029+ 3  1046	75 99 61	        mov     SBUF,#'a'
 5030+ 2  1049	80 06		        sjmp    ??0446
 5031+ 2  104B			??0435:  putc    #'?'
 5032+ 3  104B			??0448:
 5033+ 3			        ;jnb     SCON.1,putc_loop
 5034+ 3			        ;clr     SCON.1
 5035+ 3  104B	75 99 3F	        mov     SBUF,#'?'
 5036+ 2  104E	75 6E 01	        mov     fail,#001h
 5037+ 2  1051			??0446:
 5038+ 1
 5039+ 1			        top_ma  add,r2,??0436,<080h>
 5040+ 2  1051	7A 43		        mov     r2,#arg0
 5041+ 2  1053	74 FB		        mov     a,#arg1
 5042+ 2			        ifnb    <080h>
 5043+ 2			        set_cy  080h
 5044+ 3	N      0000	??0449  set     (080h and 1)
 5045+ 3	N      0000	        if      ??0449 eq 1
 5046+ 3			        setb    c
 5047+ 3			        else
 5048+ 3  1055	C3		        clr     c
 5049+ 3			        endif
 5050+ 2			        endif
 5051+ 2  1056	2A		        add      a,r2
 5052+ 2			        ifnb    <080h>
 5053+ 2			        save_psw
 5054+ 3  1057	85 D0 70	        mov     saved_psw,PSW
 5055+ 2			        endif
 5056+ 2  105A	B4 3E 25	        cjne    a,#res,??0436
 5057+ 2			        ifnb    <080h>
 5058+ 2			        tst_psw <080h>,??0436
 5059+ 3  105D	E5 70		        mov     a,saved_psw
 5060+ 3  105F	54 C4		        anl     a,#0c4h
 5061+ 3  1061	64 80		        xrl     a,#080h
 5062+ 3  1063	54 FE		        anl     a,#0feh
 5063+ 3  1065	70 1B		        jnz     ??0436
 5064+ 2			        endif
 5065+ 1			        top_ma  add,r3,??0436,<080h>
 5066+ 2  1067	7B 43		        mov     r3,#arg0
 5067+ 2  1069	74 FB		        mov     a,#arg1
 5068+ 2			        ifnb    <080h>
 5069+ 2			        set_cy  080h
 5070+ 3	N      0000	??0450  set     (080h and 1)
 5071+ 3	N      0000	        if      ??0450 eq 1
 5072+ 3			        setb    c
 5073+ 3			        else
 5074+ 3  106B	C3		        clr     c
 5075+ 3			        endif
 5076+ 2			        endif
 5077+ 2  106C	2B		        add      a,r3
 5078+ 2			        ifnb    <080h>
 5079+ 2			        save_psw
 5080+ 3  106D	85 D0 70	        mov     saved_psw,PSW
 5081+ 2			        endif
 5082+ 2  1070	B4 3E 0F	        cjne    a,#res,??0436
 5083+ 2			        ifnb    <080h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 92



 Line  I  Addr  Code            Source

 5084+ 2			        tst_psw <080h>,??0436
 5085+ 3  1073	E5 70		        mov     a,saved_psw
 5086+ 3  1075	54 C4		        anl     a,#0c4h
 5087+ 3  1077	64 80		        xrl     a,#080h
 5088+ 3  1079	54 FE		        anl     a,#0feh
 5089+ 3  107B	70 05		        jnz     ??0436
 5090+ 2			        endif
 5091+ 1
 5092+ 1			        eot     'b',??0436
 5093+ 2			        putc    #'b'
 5094+ 3  107D			??0452:
 5095+ 3			        ;jnb     SCON.1,putc_loop
 5096+ 3			        ;clr     SCON.1
 5097+ 3  107D	75 99 62	        mov     SBUF,#'b'
 5098+ 2  1080	80 06		        sjmp    ??0451
 5099+ 2  1082			??0436:  putc    #'?'
 5100+ 3  1082			??0453:
 5101+ 3			        ;jnb     SCON.1,putc_loop
 5102+ 3			        ;clr     SCON.1
 5103+ 3  1082	75 99 3F	        mov     SBUF,#'?'
 5104+ 2  1085	75 6E 01	        mov     fail,#001h
 5105+ 2  1088			??0451:
 5106+ 1
 5107+ 1			        top_ma  add,r4,??0437,<080h>
 5108+ 2  1088	7C 43		        mov     r4,#arg0
 5109+ 2  108A	74 FB		        mov     a,#arg1
 5110+ 2			        ifnb    <080h>
 5111+ 2			        set_cy  080h
 5112+ 3	N      0000	??0454  set     (080h and 1)
 5113+ 3	N      0000	        if      ??0454 eq 1
 5114+ 3			        setb    c
 5115+ 3			        else
 5116+ 3  108C	C3		        clr     c
 5117+ 3			        endif
 5118+ 2			        endif
 5119+ 2  108D	2C		        add      a,r4
 5120+ 2			        ifnb    <080h>
 5121+ 2			        save_psw
 5122+ 3  108E	85 D0 70	        mov     saved_psw,PSW
 5123+ 2			        endif
 5124+ 2  1091	B4 3E 25	        cjne    a,#res,??0437
 5125+ 2			        ifnb    <080h>
 5126+ 2			        tst_psw <080h>,??0437
 5127+ 3  1094	E5 70		        mov     a,saved_psw
 5128+ 3  1096	54 C4		        anl     a,#0c4h
 5129+ 3  1098	64 80		        xrl     a,#080h
 5130+ 3  109A	54 FE		        anl     a,#0feh
 5131+ 3  109C	70 1B		        jnz     ??0437
 5132+ 2			        endif
 5133+ 1			        top_ma  add,r5,??0437,<080h>
 5134+ 2  109E	7D 43		        mov     r5,#arg0
 5135+ 2  10A0	74 FB		        mov     a,#arg1
 5136+ 2			        ifnb    <080h>
 5137+ 2			        set_cy  080h
 5138+ 3	N      0000	??0455  set     (080h and 1)
 5139+ 3	N      0000	        if      ??0455 eq 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 93



 Line  I  Addr  Code            Source

 5140+ 3			        setb    c
 5141+ 3			        else
 5142+ 3  10A2	C3		        clr     c
 5143+ 3			        endif
 5144+ 2			        endif
 5145+ 2  10A3	2D		        add      a,r5
 5146+ 2			        ifnb    <080h>
 5147+ 2			        save_psw
 5148+ 3  10A4	85 D0 70	        mov     saved_psw,PSW
 5149+ 2			        endif
 5150+ 2  10A7	B4 3E 0F	        cjne    a,#res,??0437
 5151+ 2			        ifnb    <080h>
 5152+ 2			        tst_psw <080h>,??0437
 5153+ 3  10AA	E5 70		        mov     a,saved_psw
 5154+ 3  10AC	54 C4		        anl     a,#0c4h
 5155+ 3  10AE	64 80		        xrl     a,#080h
 5156+ 3  10B0	54 FE		        anl     a,#0feh
 5157+ 3  10B2	70 05		        jnz     ??0437
 5158+ 2			        endif
 5159+ 1
 5160+ 1			        eot     'c',??0437
 5161+ 2			        putc    #'c'
 5162+ 3  10B4			??0457:
 5163+ 3			        ;jnb     SCON.1,putc_loop
 5164+ 3			        ;clr     SCON.1
 5165+ 3  10B4	75 99 63	        mov     SBUF,#'c'
 5166+ 2  10B7	80 06		        sjmp    ??0456
 5167+ 2  10B9			??0437:  putc    #'?'
 5168+ 3  10B9			??0458:
 5169+ 3			        ;jnb     SCON.1,putc_loop
 5170+ 3			        ;clr     SCON.1
 5171+ 3  10B9	75 99 3F	        mov     SBUF,#'?'
 5172+ 2  10BC	75 6E 01	        mov     fail,#001h
 5173+ 2  10BF			??0456:
 5174+ 1
 5175+ 1			        top_ma  add,r6,??0434,<080h>
 5176+ 2  10BF	7E 43		        mov     r6,#arg0
 5177+ 2  10C1	74 FB		        mov     a,#arg1
 5178+ 2			        ifnb    <080h>
 5179+ 2			        set_cy  080h
 5180+ 3	N      0000	??0459  set     (080h and 1)
 5181+ 3	N      0000	        if      ??0459 eq 1
 5182+ 3			        setb    c
 5183+ 3			        else
 5184+ 3  10C3	C3		        clr     c
 5185+ 3			        endif
 5186+ 2			        endif
 5187+ 2  10C4	2E		        add      a,r6
 5188+ 2			        ifnb    <080h>
 5189+ 2			        save_psw
 5190+ 3  10C5	85 D0 70	        mov     saved_psw,PSW
 5191+ 2			        endif
 5192+ 2  10C8	B4 3E 25	        cjne    a,#res,??0434
 5193+ 2			        ifnb    <080h>
 5194+ 2			        tst_psw <080h>,??0434
 5195+ 3  10CB	E5 70		        mov     a,saved_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 94



 Line  I  Addr  Code            Source

 5196+ 3  10CD	54 C4		        anl     a,#0c4h
 5197+ 3  10CF	64 80		        xrl     a,#080h
 5198+ 3  10D1	54 FE		        anl     a,#0feh
 5199+ 3  10D3	70 1B		        jnz     ??0434
 5200+ 2			        endif
 5201+ 1			        top_ma  add,r7,??0434,<080h>
 5202+ 2  10D5	7F 43		        mov     r7,#arg0
 5203+ 2  10D7	74 FB		        mov     a,#arg1
 5204+ 2			        ifnb    <080h>
 5205+ 2			        set_cy  080h
 5206+ 3	N      0000	??0460  set     (080h and 1)
 5207+ 3	N      0000	        if      ??0460 eq 1
 5208+ 3			        setb    c
 5209+ 3			        else
 5210+ 3  10D9	C3		        clr     c
 5211+ 3			        endif
 5212+ 2			        endif
 5213+ 2  10DA	2F		        add      a,r7
 5214+ 2			        ifnb    <080h>
 5215+ 2			        save_psw
 5216+ 3  10DB	85 D0 70	        mov     saved_psw,PSW
 5217+ 2			        endif
 5218+ 2  10DE	B4 3E 0F	        cjne    a,#res,??0434
 5219+ 2			        ifnb    <080h>
 5220+ 2			        tst_psw <080h>,??0434
 5221+ 3  10E1	E5 70		        mov     a,saved_psw
 5222+ 3  10E3	54 C4		        anl     a,#0c4h
 5223+ 3  10E5	64 80		        xrl     a,#080h
 5224+ 3  10E7	54 FE		        anl     a,#0feh
 5225+ 3  10E9	70 05		        jnz     ??0434
 5226+ 2			        endif
 5227+ 1
 5228+ 1			        eot     'd',??0434
 5229+ 2			        putc    #'d'
 5230+ 3  10EB			??0462:
 5231+ 3			        ;jnb     SCON.1,putc_loop
 5232+ 3			        ;clr     SCON.1
 5233+ 3  10EB	75 99 64	        mov     SBUF,#'d'
 5234+ 2  10EE	80 06		        sjmp    ??0461
 5235+ 2  10F0			??0434:  putc    #'?'
 5236+ 3  10F0			??0463:
 5237+ 3			        ;jnb     SCON.1,putc_loop
 5238+ 3			        ;clr     SCON.1
 5239+ 3  10F0	75 99 3F	        mov     SBUF,#'?'
 5240+ 2  10F3	75 6E 01	        mov     fail,#001h
 5241+ 2  10F6			??0461:
 5242+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 5243+ 1
 5244+ 1			        ; Optionally test immediate addressing modes.
 5245+ 1
 5246+ 1	N      FFFF	        if      (01h and 1) ne 0
 5247+ 1			        ; Test <op> A, #arg1...
 5248+ 1			        top_mb  add,a,??0438,<080h>
 5249+ 2  10F6	74 FB		        mov     a,#arg1
 5250+ 2			        ifnb    <080h>
 5251+ 2			        set_cy  080h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 95



 Line  I  Addr  Code            Source

 5252+ 3	N      0000	??0464  set     (080h and 1)
 5253+ 3	N      0000	        if      ??0464 eq 1
 5254+ 3			        setb    c
 5255+ 3			        else
 5256+ 3  10F8	C3		        clr     c
 5257+ 3			        endif
 5258+ 2			        endif
 5259+ 2  10F9	24 43		        add      a,#arg0
 5260+ 2			        ifnb    <080h>
 5261+ 2			        save_psw
 5262+ 3  10FB	85 D0 70	        mov     saved_psw,PSW
 5263+ 2			        endif
 5264+ 2  10FE	F5 E0		        mov     ACC,a
 5265+ 2  1100	B4 3E 0F	        cjne    a,#res,??0438
 5266+ 2			        ifnb    <080h>
 5267+ 2			        tst_psw <080h>,??0438
 5268+ 3  1103	E5 70		        mov     a,saved_psw
 5269+ 3  1105	54 C4		        anl     a,#0c4h
 5270+ 3  1107	64 80		        xrl     a,#080h
 5271+ 3  1109	54 FE		        anl     a,#0feh
 5272+ 3  110B	70 05		        jnz     ??0438
 5273+ 2			        endif
 5274+ 1			        eot     'e',??0438
 5275+ 2			        putc    #'e'
 5276+ 3  110D			??0466:
 5277+ 3			        ;jnb     SCON.1,putc_loop
 5278+ 3			        ;clr     SCON.1
 5279+ 3  110D	75 99 65	        mov     SBUF,#'e'
 5280+ 2  1110	80 06		        sjmp    ??0465
 5281+ 2  1112			??0438:  putc    #'?'
 5282+ 3  1112			??0467:
 5283+ 3			        ;jnb     SCON.1,putc_loop
 5284+ 3			        ;clr     SCON.1
 5285+ 3  1112	75 99 3F	        mov     SBUF,#'?'
 5286+ 2  1115	75 6E 01	        mov     fail,#001h
 5287+ 2  1118			??0465:
 5288+ 1			        endif
 5289+ 1
 5290+ 1	N      0000	        if      (01h and 2) ne 0
 5291+ 1			        ; ...and <op> dir, #arg1
 5292+ 1			        top_mb  add,dir0,??0439,<080h>
 5293+ 1			        eot     'f',??0439
 5294+ 1			        endif
 5295+ 1
 5296+ 1			        ; Optionally test <op> dir, A
 5297+ 1	N      0000	        if      (01h and 4) ne 0
 5298+ 1			        top_mc  add,??0440,<080h>
 5299+ 1			        eot     'g',??0440
 5300+ 1			        endif
 5301+ 1
 5302:
 5303:				        put_crlf                    ; end of test series
 5304+ 1			        putc    #13
 5305+ 2  1118			??0468:
 5306+ 2			        ;jnb     SCON.1,putc_loop
 5307+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 96



 Line  I  Addr  Code            Source

 5308+ 2  1118	75 99 0D	        mov     SBUF,#13
 5309+ 1			        putc    #10
 5310+ 2  111B			??0469:
 5311+ 2			        ;jnb     SCON.1,putc_loop
 5312+ 2			        ;clr     SCON.1
 5313+ 2  111B	75 99 0A	        mov     SBUF,#10
 5314:
 5315:
 5316:				        ;-- Test series M ------------------------------------------------------
 5317:				        ; ADDC
 5318:				        ; (See comments for 'ALU opcode block test')
 5319:				        ; Note the test runs 4 times for different values of operands
 5320:
 5321:				        putc    #'M'                ; start of test series
 5322+ 1  111E			??0470:
 5323+ 1			        ;jnb     SCON.1,putc_loop
 5324+ 1			        ;clr     SCON.1
 5325+ 1  111E	75 99 4D	        mov     SBUF,#'M'
 5326:
 5327:				        putc    #'0'
 5328+ 1  1121			??0471:
 5329+ 1			        ;jnb     SCON.1,putc_loop
 5330+ 1			        ;clr     SCON.1
 5331+ 1  1121	75 99 30	        mov     SBUF,#'0'
 5332:				        tst_alu addc,051h,033h,084h,01h,004h     ; /CY /AC  OV
 5333+ 1			        ; Put the argument and result data into variables for easier access
 5334+ 1	N      0051	        arg0    set 051h
 5335+ 1	N      0033	        arg1    set 033h
 5336+ 1	N      0084	        res     set 084h
 5337+ 1
 5338+ 1			        ; Test <op> A, dir
 5339+ 1			        top_ma  addc,dir0,??0473,<004h>
 5340+ 2  1124	75 60 51	        mov     dir0,#arg0
 5341+ 2  1127	74 33		        mov     a,#arg1
 5342+ 2			        ifnb    <004h>
 5343+ 2			        set_cy  004h
 5344+ 3	N      0000	??0479  set     (004h and 1)
 5345+ 3	N      0000	        if      ??0479 eq 1
 5346+ 3			        setb    c
 5347+ 3			        else
 5348+ 3  1129	C3		        clr     c
 5349+ 3			        endif
 5350+ 2			        endif
 5351+ 2  112A	35 60		        addc      a,dir0
 5352+ 2			        ifnb    <004h>
 5353+ 2			        save_psw
 5354+ 3  112C	85 D0 70	        mov     saved_psw,PSW
 5355+ 2			        endif
 5356+ 2  112F	B4 84 6B	        cjne    a,#res,??0473
 5357+ 2			        ifnb    <004h>
 5358+ 2			        tst_psw <004h>,??0473
 5359+ 3  1132	E5 70		        mov     a,saved_psw
 5360+ 3  1134	54 C4		        anl     a,#0c4h
 5361+ 3  1136	64 04		        xrl     a,#004h
 5362+ 3  1138	54 FE		        anl     a,#0feh
 5363+ 3  113A	70 61		        jnz     ??0473

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 97



 Line  I  Addr  Code            Source

 5364+ 2			        endif
 5365+ 1			        ; Test <op> A, @R0
 5366+ 1  113C	78 60		        mov     r0,#dir0
 5367+ 1			        top_ma  addc,@r0,??0473,<004h>
 5368+ 2  113E	76 51		        mov     @r0,#arg0
 5369+ 2  1140	74 33		        mov     a,#arg1
 5370+ 2			        ifnb    <004h>
 5371+ 2			        set_cy  004h
 5372+ 3	N      0000	??0480  set     (004h and 1)
 5373+ 3	N      0000	        if      ??0480 eq 1
 5374+ 3			        setb    c
 5375+ 3			        else
 5376+ 3  1142	C3		        clr     c
 5377+ 3			        endif
 5378+ 2			        endif
 5379+ 2  1143	36		        addc      a,@r0
 5380+ 2			        ifnb    <004h>
 5381+ 2			        save_psw
 5382+ 3  1144	85 D0 70	        mov     saved_psw,PSW
 5383+ 2			        endif
 5384+ 2  1147	B4 84 53	        cjne    a,#res,??0473
 5385+ 2			        ifnb    <004h>
 5386+ 2			        tst_psw <004h>,??0473
 5387+ 3  114A	E5 70		        mov     a,saved_psw
 5388+ 3  114C	54 C4		        anl     a,#0c4h
 5389+ 3  114E	64 04		        xrl     a,#004h
 5390+ 3  1150	54 FE		        anl     a,#0feh
 5391+ 3  1152	70 49		        jnz     ??0473
 5392+ 2			        endif
 5393+ 1			        ; Test <op> A, @R1
 5394+ 1  1154	79 31		        mov     r1,#031h
 5395+ 1			        top_ma  addc,@r1,??0473,<004h>
 5396+ 2  1156	77 51		        mov     @r1,#arg0
 5397+ 2  1158	74 33		        mov     a,#arg1
 5398+ 2			        ifnb    <004h>
 5399+ 2			        set_cy  004h
 5400+ 3	N      0000	??0481  set     (004h and 1)
 5401+ 3	N      0000	        if      ??0481 eq 1
 5402+ 3			        setb    c
 5403+ 3			        else
 5404+ 3  115A	C3		        clr     c
 5405+ 3			        endif
 5406+ 2			        endif
 5407+ 2  115B	37		        addc      a,@r1
 5408+ 2			        ifnb    <004h>
 5409+ 2			        save_psw
 5410+ 3  115C	85 D0 70	        mov     saved_psw,PSW
 5411+ 2			        endif
 5412+ 2  115F	B4 84 3B	        cjne    a,#res,??0473
 5413+ 2			        ifnb    <004h>
 5414+ 2			        tst_psw <004h>,??0473
 5415+ 3  1162	E5 70		        mov     a,saved_psw
 5416+ 3  1164	54 C4		        anl     a,#0c4h
 5417+ 3  1166	64 04		        xrl     a,#004h
 5418+ 3  1168	54 FE		        anl     a,#0feh
 5419+ 3  116A	70 31		        jnz     ??0473

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 98



 Line  I  Addr  Code            Source

 5420+ 2			        endif
 5421+ 1
 5422+ 1			        ; Now test <op> A, Rn for n in 0..7
 5423+ 1			        top_ma  addc,r0,??0473,<004h>
 5424+ 2  116C	78 51		        mov     r0,#arg0
 5425+ 2  116E	74 33		        mov     a,#arg1
 5426+ 2			        ifnb    <004h>
 5427+ 2			        set_cy  004h
 5428+ 3	N      0000	??0482  set     (004h and 1)
 5429+ 3	N      0000	        if      ??0482 eq 1
 5430+ 3			        setb    c
 5431+ 3			        else
 5432+ 3  1170	C3		        clr     c
 5433+ 3			        endif
 5434+ 2			        endif
 5435+ 2  1171	38		        addc      a,r0
 5436+ 2			        ifnb    <004h>
 5437+ 2			        save_psw
 5438+ 3  1172	85 D0 70	        mov     saved_psw,PSW
 5439+ 2			        endif
 5440+ 2  1175	B4 84 25	        cjne    a,#res,??0473
 5441+ 2			        ifnb    <004h>
 5442+ 2			        tst_psw <004h>,??0473
 5443+ 3  1178	E5 70		        mov     a,saved_psw
 5444+ 3  117A	54 C4		        anl     a,#0c4h
 5445+ 3  117C	64 04		        xrl     a,#004h
 5446+ 3  117E	54 FE		        anl     a,#0feh
 5447+ 3  1180	70 1B		        jnz     ??0473
 5448+ 2			        endif
 5449+ 1			        top_ma  addc,r1,??0473,<004h>
 5450+ 2  1182	79 51		        mov     r1,#arg0
 5451+ 2  1184	74 33		        mov     a,#arg1
 5452+ 2			        ifnb    <004h>
 5453+ 2			        set_cy  004h
 5454+ 3	N      0000	??0483  set     (004h and 1)
 5455+ 3	N      0000	        if      ??0483 eq 1
 5456+ 3			        setb    c
 5457+ 3			        else
 5458+ 3  1186	C3		        clr     c
 5459+ 3			        endif
 5460+ 2			        endif
 5461+ 2  1187	39		        addc      a,r1
 5462+ 2			        ifnb    <004h>
 5463+ 2			        save_psw
 5464+ 3  1188	85 D0 70	        mov     saved_psw,PSW
 5465+ 2			        endif
 5466+ 2  118B	B4 84 0F	        cjne    a,#res,??0473
 5467+ 2			        ifnb    <004h>
 5468+ 2			        tst_psw <004h>,??0473
 5469+ 3  118E	E5 70		        mov     a,saved_psw
 5470+ 3  1190	54 C4		        anl     a,#0c4h
 5471+ 3  1192	64 04		        xrl     a,#004h
 5472+ 3  1194	54 FE		        anl     a,#0feh
 5473+ 3  1196	70 05		        jnz     ??0473
 5474+ 2			        endif
 5475+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 99



 Line  I  Addr  Code            Source

 5476+ 1			        eot     'a',??0473
 5477+ 2			        putc    #'a'
 5478+ 3  1198			??0485:
 5479+ 3			        ;jnb     SCON.1,putc_loop
 5480+ 3			        ;clr     SCON.1
 5481+ 3  1198	75 99 61	        mov     SBUF,#'a'
 5482+ 2  119B	80 06		        sjmp    ??0484
 5483+ 2  119D			??0473:  putc    #'?'
 5484+ 3  119D			??0486:
 5485+ 3			        ;jnb     SCON.1,putc_loop
 5486+ 3			        ;clr     SCON.1
 5487+ 3  119D	75 99 3F	        mov     SBUF,#'?'
 5488+ 2  11A0	75 6E 01	        mov     fail,#001h
 5489+ 2  11A3			??0484:
 5490+ 1
 5491+ 1			        top_ma  addc,r2,??0474,<004h>
 5492+ 2  11A3	7A 51		        mov     r2,#arg0
 5493+ 2  11A5	74 33		        mov     a,#arg1
 5494+ 2			        ifnb    <004h>
 5495+ 2			        set_cy  004h
 5496+ 3	N      0000	??0487  set     (004h and 1)
 5497+ 3	N      0000	        if      ??0487 eq 1
 5498+ 3			        setb    c
 5499+ 3			        else
 5500+ 3  11A7	C3		        clr     c
 5501+ 3			        endif
 5502+ 2			        endif
 5503+ 2  11A8	3A		        addc      a,r2
 5504+ 2			        ifnb    <004h>
 5505+ 2			        save_psw
 5506+ 3  11A9	85 D0 70	        mov     saved_psw,PSW
 5507+ 2			        endif
 5508+ 2  11AC	B4 84 25	        cjne    a,#res,??0474
 5509+ 2			        ifnb    <004h>
 5510+ 2			        tst_psw <004h>,??0474
 5511+ 3  11AF	E5 70		        mov     a,saved_psw
 5512+ 3  11B1	54 C4		        anl     a,#0c4h
 5513+ 3  11B3	64 04		        xrl     a,#004h
 5514+ 3  11B5	54 FE		        anl     a,#0feh
 5515+ 3  11B7	70 1B		        jnz     ??0474
 5516+ 2			        endif
 5517+ 1			        top_ma  addc,r3,??0474,<004h>
 5518+ 2  11B9	7B 51		        mov     r3,#arg0
 5519+ 2  11BB	74 33		        mov     a,#arg1
 5520+ 2			        ifnb    <004h>
 5521+ 2			        set_cy  004h
 5522+ 3	N      0000	??0488  set     (004h and 1)
 5523+ 3	N      0000	        if      ??0488 eq 1
 5524+ 3			        setb    c
 5525+ 3			        else
 5526+ 3  11BD	C3		        clr     c
 5527+ 3			        endif
 5528+ 2			        endif
 5529+ 2  11BE	3B		        addc      a,r3
 5530+ 2			        ifnb    <004h>
 5531+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 100



 Line  I  Addr  Code            Source

 5532+ 3  11BF	85 D0 70	        mov     saved_psw,PSW
 5533+ 2			        endif
 5534+ 2  11C2	B4 84 0F	        cjne    a,#res,??0474
 5535+ 2			        ifnb    <004h>
 5536+ 2			        tst_psw <004h>,??0474
 5537+ 3  11C5	E5 70		        mov     a,saved_psw
 5538+ 3  11C7	54 C4		        anl     a,#0c4h
 5539+ 3  11C9	64 04		        xrl     a,#004h
 5540+ 3  11CB	54 FE		        anl     a,#0feh
 5541+ 3  11CD	70 05		        jnz     ??0474
 5542+ 2			        endif
 5543+ 1
 5544+ 1			        eot     'b',??0474
 5545+ 2			        putc    #'b'
 5546+ 3  11CF			??0490:
 5547+ 3			        ;jnb     SCON.1,putc_loop
 5548+ 3			        ;clr     SCON.1
 5549+ 3  11CF	75 99 62	        mov     SBUF,#'b'
 5550+ 2  11D2	80 06		        sjmp    ??0489
 5551+ 2  11D4			??0474:  putc    #'?'
 5552+ 3  11D4			??0491:
 5553+ 3			        ;jnb     SCON.1,putc_loop
 5554+ 3			        ;clr     SCON.1
 5555+ 3  11D4	75 99 3F	        mov     SBUF,#'?'
 5556+ 2  11D7	75 6E 01	        mov     fail,#001h
 5557+ 2  11DA			??0489:
 5558+ 1
 5559+ 1			        top_ma  addc,r4,??0475,<004h>
 5560+ 2  11DA	7C 51		        mov     r4,#arg0
 5561+ 2  11DC	74 33		        mov     a,#arg1
 5562+ 2			        ifnb    <004h>
 5563+ 2			        set_cy  004h
 5564+ 3	N      0000	??0492  set     (004h and 1)
 5565+ 3	N      0000	        if      ??0492 eq 1
 5566+ 3			        setb    c
 5567+ 3			        else
 5568+ 3  11DE	C3		        clr     c
 5569+ 3			        endif
 5570+ 2			        endif
 5571+ 2  11DF	3C		        addc      a,r4
 5572+ 2			        ifnb    <004h>
 5573+ 2			        save_psw
 5574+ 3  11E0	85 D0 70	        mov     saved_psw,PSW
 5575+ 2			        endif
 5576+ 2  11E3	B4 84 25	        cjne    a,#res,??0475
 5577+ 2			        ifnb    <004h>
 5578+ 2			        tst_psw <004h>,??0475
 5579+ 3  11E6	E5 70		        mov     a,saved_psw
 5580+ 3  11E8	54 C4		        anl     a,#0c4h
 5581+ 3  11EA	64 04		        xrl     a,#004h
 5582+ 3  11EC	54 FE		        anl     a,#0feh
 5583+ 3  11EE	70 1B		        jnz     ??0475
 5584+ 2			        endif
 5585+ 1			        top_ma  addc,r5,??0475,<004h>
 5586+ 2  11F0	7D 51		        mov     r5,#arg0
 5587+ 2  11F2	74 33		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 101



 Line  I  Addr  Code            Source

 5588+ 2			        ifnb    <004h>
 5589+ 2			        set_cy  004h
 5590+ 3	N      0000	??0493  set     (004h and 1)
 5591+ 3	N      0000	        if      ??0493 eq 1
 5592+ 3			        setb    c
 5593+ 3			        else
 5594+ 3  11F4	C3		        clr     c
 5595+ 3			        endif
 5596+ 2			        endif
 5597+ 2  11F5	3D		        addc      a,r5
 5598+ 2			        ifnb    <004h>
 5599+ 2			        save_psw
 5600+ 3  11F6	85 D0 70	        mov     saved_psw,PSW
 5601+ 2			        endif
 5602+ 2  11F9	B4 84 0F	        cjne    a,#res,??0475
 5603+ 2			        ifnb    <004h>
 5604+ 2			        tst_psw <004h>,??0475
 5605+ 3  11FC	E5 70		        mov     a,saved_psw
 5606+ 3  11FE	54 C4		        anl     a,#0c4h
 5607+ 3  1200	64 04		        xrl     a,#004h
 5608+ 3  1202	54 FE		        anl     a,#0feh
 5609+ 3  1204	70 05		        jnz     ??0475
 5610+ 2			        endif
 5611+ 1
 5612+ 1			        eot     'c',??0475
 5613+ 2			        putc    #'c'
 5614+ 3  1206			??0495:
 5615+ 3			        ;jnb     SCON.1,putc_loop
 5616+ 3			        ;clr     SCON.1
 5617+ 3  1206	75 99 63	        mov     SBUF,#'c'
 5618+ 2  1209	80 06		        sjmp    ??0494
 5619+ 2  120B			??0475:  putc    #'?'
 5620+ 3  120B			??0496:
 5621+ 3			        ;jnb     SCON.1,putc_loop
 5622+ 3			        ;clr     SCON.1
 5623+ 3  120B	75 99 3F	        mov     SBUF,#'?'
 5624+ 2  120E	75 6E 01	        mov     fail,#001h
 5625+ 2  1211			??0494:
 5626+ 1
 5627+ 1			        top_ma  addc,r6,??0472,<004h>
 5628+ 2  1211	7E 51		        mov     r6,#arg0
 5629+ 2  1213	74 33		        mov     a,#arg1
 5630+ 2			        ifnb    <004h>
 5631+ 2			        set_cy  004h
 5632+ 3	N      0000	??0497  set     (004h and 1)
 5633+ 3	N      0000	        if      ??0497 eq 1
 5634+ 3			        setb    c
 5635+ 3			        else
 5636+ 3  1215	C3		        clr     c
 5637+ 3			        endif
 5638+ 2			        endif
 5639+ 2  1216	3E		        addc      a,r6
 5640+ 2			        ifnb    <004h>
 5641+ 2			        save_psw
 5642+ 3  1217	85 D0 70	        mov     saved_psw,PSW
 5643+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 102



 Line  I  Addr  Code            Source

 5644+ 2  121A	B4 84 25	        cjne    a,#res,??0472
 5645+ 2			        ifnb    <004h>
 5646+ 2			        tst_psw <004h>,??0472
 5647+ 3  121D	E5 70		        mov     a,saved_psw
 5648+ 3  121F	54 C4		        anl     a,#0c4h
 5649+ 3  1221	64 04		        xrl     a,#004h
 5650+ 3  1223	54 FE		        anl     a,#0feh
 5651+ 3  1225	70 1B		        jnz     ??0472
 5652+ 2			        endif
 5653+ 1			        top_ma  addc,r7,??0472,<004h>
 5654+ 2  1227	7F 51		        mov     r7,#arg0
 5655+ 2  1229	74 33		        mov     a,#arg1
 5656+ 2			        ifnb    <004h>
 5657+ 2			        set_cy  004h
 5658+ 3	N      0000	??0498  set     (004h and 1)
 5659+ 3	N      0000	        if      ??0498 eq 1
 5660+ 3			        setb    c
 5661+ 3			        else
 5662+ 3  122B	C3		        clr     c
 5663+ 3			        endif
 5664+ 2			        endif
 5665+ 2  122C	3F		        addc      a,r7
 5666+ 2			        ifnb    <004h>
 5667+ 2			        save_psw
 5668+ 3  122D	85 D0 70	        mov     saved_psw,PSW
 5669+ 2			        endif
 5670+ 2  1230	B4 84 0F	        cjne    a,#res,??0472
 5671+ 2			        ifnb    <004h>
 5672+ 2			        tst_psw <004h>,??0472
 5673+ 3  1233	E5 70		        mov     a,saved_psw
 5674+ 3  1235	54 C4		        anl     a,#0c4h
 5675+ 3  1237	64 04		        xrl     a,#004h
 5676+ 3  1239	54 FE		        anl     a,#0feh
 5677+ 3  123B	70 05		        jnz     ??0472
 5678+ 2			        endif
 5679+ 1
 5680+ 1			        eot     'd',??0472
 5681+ 2			        putc    #'d'
 5682+ 3  123D			??0500:
 5683+ 3			        ;jnb     SCON.1,putc_loop
 5684+ 3			        ;clr     SCON.1
 5685+ 3  123D	75 99 64	        mov     SBUF,#'d'
 5686+ 2  1240	80 06		        sjmp    ??0499
 5687+ 2  1242			??0472:  putc    #'?'
 5688+ 3  1242			??0501:
 5689+ 3			        ;jnb     SCON.1,putc_loop
 5690+ 3			        ;clr     SCON.1
 5691+ 3  1242	75 99 3F	        mov     SBUF,#'?'
 5692+ 2  1245	75 6E 01	        mov     fail,#001h
 5693+ 2  1248			??0499:
 5694+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 5695+ 1
 5696+ 1			        ; Optionally test immediate addressing modes.
 5697+ 1
 5698+ 1	N      FFFF	        if      (01h and 1) ne 0
 5699+ 1			        ; Test <op> A, #arg1...

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 103



 Line  I  Addr  Code            Source

 5700+ 1			        top_mb  addc,a,??0476,<004h>
 5701+ 2  1248	74 33		        mov     a,#arg1
 5702+ 2			        ifnb    <004h>
 5703+ 2			        set_cy  004h
 5704+ 3	N      0000	??0502  set     (004h and 1)
 5705+ 3	N      0000	        if      ??0502 eq 1
 5706+ 3			        setb    c
 5707+ 3			        else
 5708+ 3  124A	C3		        clr     c
 5709+ 3			        endif
 5710+ 2			        endif
 5711+ 2  124B	34 51		        addc      a,#arg0
 5712+ 2			        ifnb    <004h>
 5713+ 2			        save_psw
 5714+ 3  124D	85 D0 70	        mov     saved_psw,PSW
 5715+ 2			        endif
 5716+ 2  1250	F5 E0		        mov     ACC,a
 5717+ 2  1252	B4 84 0F	        cjne    a,#res,??0476
 5718+ 2			        ifnb    <004h>
 5719+ 2			        tst_psw <004h>,??0476
 5720+ 3  1255	E5 70		        mov     a,saved_psw
 5721+ 3  1257	54 C4		        anl     a,#0c4h
 5722+ 3  1259	64 04		        xrl     a,#004h
 5723+ 3  125B	54 FE		        anl     a,#0feh
 5724+ 3  125D	70 05		        jnz     ??0476
 5725+ 2			        endif
 5726+ 1			        eot     'e',??0476
 5727+ 2			        putc    #'e'
 5728+ 3  125F			??0504:
 5729+ 3			        ;jnb     SCON.1,putc_loop
 5730+ 3			        ;clr     SCON.1
 5731+ 3  125F	75 99 65	        mov     SBUF,#'e'
 5732+ 2  1262	80 06		        sjmp    ??0503
 5733+ 2  1264			??0476:  putc    #'?'
 5734+ 3  1264			??0505:
 5735+ 3			        ;jnb     SCON.1,putc_loop
 5736+ 3			        ;clr     SCON.1
 5737+ 3  1264	75 99 3F	        mov     SBUF,#'?'
 5738+ 2  1267	75 6E 01	        mov     fail,#001h
 5739+ 2  126A			??0503:
 5740+ 1			        endif
 5741+ 1
 5742+ 1	N      0000	        if      (01h and 2) ne 0
 5743+ 1			        ; ...and <op> dir, #arg1
 5744+ 1			        top_mb  addc,dir0,??0477,<004h>
 5745+ 1			        eot     'f',??0477
 5746+ 1			        endif
 5747+ 1
 5748+ 1			        ; Optionally test <op> dir, A
 5749+ 1	N      0000	        if      (01h and 4) ne 0
 5750+ 1			        top_mc  addc,??0478,<004h>
 5751+ 1			        eot     'g',??0478
 5752+ 1			        endif
 5753+ 1
 5754:				        putc    #'1'
 5755+ 1  126A			??0506:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 104



 Line  I  Addr  Code            Source

 5756+ 1			        ;jnb     SCON.1,putc_loop
 5757+ 1			        ;clr     SCON.1
 5758+ 1  126A	75 99 31	        mov     SBUF,#'1'
 5759:				        tst_alu addc,081h,093h,014h,01h,084h     ;  CY /AC  OV
 5760+ 1			        ; Put the argument and result data into variables for easier access
 5761+ 1	N      0081	        arg0    set 081h
 5762+ 1	N      0093	        arg1    set 093h
 5763+ 1	N      0014	        res     set 014h
 5764+ 1
 5765+ 1			        ; Test <op> A, dir
 5766+ 1			        top_ma  addc,dir0,??0508,<084h>
 5767+ 2  126D	75 60 81	        mov     dir0,#arg0
 5768+ 2  1270	74 93		        mov     a,#arg1
 5769+ 2			        ifnb    <084h>
 5770+ 2			        set_cy  084h
 5771+ 3	N      0000	??0514  set     (084h and 1)
 5772+ 3	N      0000	        if      ??0514 eq 1
 5773+ 3			        setb    c
 5774+ 3			        else
 5775+ 3  1272	C3		        clr     c
 5776+ 3			        endif
 5777+ 2			        endif
 5778+ 2  1273	35 60		        addc      a,dir0
 5779+ 2			        ifnb    <084h>
 5780+ 2			        save_psw
 5781+ 3  1275	85 D0 70	        mov     saved_psw,PSW
 5782+ 2			        endif
 5783+ 2  1278	B4 14 6B	        cjne    a,#res,??0508
 5784+ 2			        ifnb    <084h>
 5785+ 2			        tst_psw <084h>,??0508
 5786+ 3  127B	E5 70		        mov     a,saved_psw
 5787+ 3  127D	54 C4		        anl     a,#0c4h
 5788+ 3  127F	64 84		        xrl     a,#084h
 5789+ 3  1281	54 FE		        anl     a,#0feh
 5790+ 3  1283	70 61		        jnz     ??0508
 5791+ 2			        endif
 5792+ 1			        ; Test <op> A, @R0
 5793+ 1  1285	78 60		        mov     r0,#dir0
 5794+ 1			        top_ma  addc,@r0,??0508,<084h>
 5795+ 2  1287	76 81		        mov     @r0,#arg0
 5796+ 2  1289	74 93		        mov     a,#arg1
 5797+ 2			        ifnb    <084h>
 5798+ 2			        set_cy  084h
 5799+ 3	N      0000	??0515  set     (084h and 1)
 5800+ 3	N      0000	        if      ??0515 eq 1
 5801+ 3			        setb    c
 5802+ 3			        else
 5803+ 3  128B	C3		        clr     c
 5804+ 3			        endif
 5805+ 2			        endif
 5806+ 2  128C	36		        addc      a,@r0
 5807+ 2			        ifnb    <084h>
 5808+ 2			        save_psw
 5809+ 3  128D	85 D0 70	        mov     saved_psw,PSW
 5810+ 2			        endif
 5811+ 2  1290	B4 14 53	        cjne    a,#res,??0508

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 105



 Line  I  Addr  Code            Source

 5812+ 2			        ifnb    <084h>
 5813+ 2			        tst_psw <084h>,??0508
 5814+ 3  1293	E5 70		        mov     a,saved_psw
 5815+ 3  1295	54 C4		        anl     a,#0c4h
 5816+ 3  1297	64 84		        xrl     a,#084h
 5817+ 3  1299	54 FE		        anl     a,#0feh
 5818+ 3  129B	70 49		        jnz     ??0508
 5819+ 2			        endif
 5820+ 1			        ; Test <op> A, @R1
 5821+ 1  129D	79 31		        mov     r1,#031h
 5822+ 1			        top_ma  addc,@r1,??0508,<084h>
 5823+ 2  129F	77 81		        mov     @r1,#arg0
 5824+ 2  12A1	74 93		        mov     a,#arg1
 5825+ 2			        ifnb    <084h>
 5826+ 2			        set_cy  084h
 5827+ 3	N      0000	??0516  set     (084h and 1)
 5828+ 3	N      0000	        if      ??0516 eq 1
 5829+ 3			        setb    c
 5830+ 3			        else
 5831+ 3  12A3	C3		        clr     c
 5832+ 3			        endif
 5833+ 2			        endif
 5834+ 2  12A4	37		        addc      a,@r1
 5835+ 2			        ifnb    <084h>
 5836+ 2			        save_psw
 5837+ 3  12A5	85 D0 70	        mov     saved_psw,PSW
 5838+ 2			        endif
 5839+ 2  12A8	B4 14 3B	        cjne    a,#res,??0508
 5840+ 2			        ifnb    <084h>
 5841+ 2			        tst_psw <084h>,??0508
 5842+ 3  12AB	E5 70		        mov     a,saved_psw
 5843+ 3  12AD	54 C4		        anl     a,#0c4h
 5844+ 3  12AF	64 84		        xrl     a,#084h
 5845+ 3  12B1	54 FE		        anl     a,#0feh
 5846+ 3  12B3	70 31		        jnz     ??0508
 5847+ 2			        endif
 5848+ 1
 5849+ 1			        ; Now test <op> A, Rn for n in 0..7
 5850+ 1			        top_ma  addc,r0,??0508,<084h>
 5851+ 2  12B5	78 81		        mov     r0,#arg0
 5852+ 2  12B7	74 93		        mov     a,#arg1
 5853+ 2			        ifnb    <084h>
 5854+ 2			        set_cy  084h
 5855+ 3	N      0000	??0517  set     (084h and 1)
 5856+ 3	N      0000	        if      ??0517 eq 1
 5857+ 3			        setb    c
 5858+ 3			        else
 5859+ 3  12B9	C3		        clr     c
 5860+ 3			        endif
 5861+ 2			        endif
 5862+ 2  12BA	38		        addc      a,r0
 5863+ 2			        ifnb    <084h>
 5864+ 2			        save_psw
 5865+ 3  12BB	85 D0 70	        mov     saved_psw,PSW
 5866+ 2			        endif
 5867+ 2  12BE	B4 14 25	        cjne    a,#res,??0508

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 106



 Line  I  Addr  Code            Source

 5868+ 2			        ifnb    <084h>
 5869+ 2			        tst_psw <084h>,??0508
 5870+ 3  12C1	E5 70		        mov     a,saved_psw
 5871+ 3  12C3	54 C4		        anl     a,#0c4h
 5872+ 3  12C5	64 84		        xrl     a,#084h
 5873+ 3  12C7	54 FE		        anl     a,#0feh
 5874+ 3  12C9	70 1B		        jnz     ??0508
 5875+ 2			        endif
 5876+ 1			        top_ma  addc,r1,??0508,<084h>
 5877+ 2  12CB	79 81		        mov     r1,#arg0
 5878+ 2  12CD	74 93		        mov     a,#arg1
 5879+ 2			        ifnb    <084h>
 5880+ 2			        set_cy  084h
 5881+ 3	N      0000	??0518  set     (084h and 1)
 5882+ 3	N      0000	        if      ??0518 eq 1
 5883+ 3			        setb    c
 5884+ 3			        else
 5885+ 3  12CF	C3		        clr     c
 5886+ 3			        endif
 5887+ 2			        endif
 5888+ 2  12D0	39		        addc      a,r1
 5889+ 2			        ifnb    <084h>
 5890+ 2			        save_psw
 5891+ 3  12D1	85 D0 70	        mov     saved_psw,PSW
 5892+ 2			        endif
 5893+ 2  12D4	B4 14 0F	        cjne    a,#res,??0508
 5894+ 2			        ifnb    <084h>
 5895+ 2			        tst_psw <084h>,??0508
 5896+ 3  12D7	E5 70		        mov     a,saved_psw
 5897+ 3  12D9	54 C4		        anl     a,#0c4h
 5898+ 3  12DB	64 84		        xrl     a,#084h
 5899+ 3  12DD	54 FE		        anl     a,#0feh
 5900+ 3  12DF	70 05		        jnz     ??0508
 5901+ 2			        endif
 5902+ 1
 5903+ 1			        eot     'a',??0508
 5904+ 2			        putc    #'a'
 5905+ 3  12E1			??0520:
 5906+ 3			        ;jnb     SCON.1,putc_loop
 5907+ 3			        ;clr     SCON.1
 5908+ 3  12E1	75 99 61	        mov     SBUF,#'a'
 5909+ 2  12E4	80 06		        sjmp    ??0519
 5910+ 2  12E6			??0508:  putc    #'?'
 5911+ 3  12E6			??0521:
 5912+ 3			        ;jnb     SCON.1,putc_loop
 5913+ 3			        ;clr     SCON.1
 5914+ 3  12E6	75 99 3F	        mov     SBUF,#'?'
 5915+ 2  12E9	75 6E 01	        mov     fail,#001h
 5916+ 2  12EC			??0519:
 5917+ 1
 5918+ 1			        top_ma  addc,r2,??0509,<084h>
 5919+ 2  12EC	7A 81		        mov     r2,#arg0
 5920+ 2  12EE	74 93		        mov     a,#arg1
 5921+ 2			        ifnb    <084h>
 5922+ 2			        set_cy  084h
 5923+ 3	N      0000	??0522  set     (084h and 1)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 107



 Line  I  Addr  Code            Source

 5924+ 3	N      0000	        if      ??0522 eq 1
 5925+ 3			        setb    c
 5926+ 3			        else
 5927+ 3  12F0	C3		        clr     c
 5928+ 3			        endif
 5929+ 2			        endif
 5930+ 2  12F1	3A		        addc      a,r2
 5931+ 2			        ifnb    <084h>
 5932+ 2			        save_psw
 5933+ 3  12F2	85 D0 70	        mov     saved_psw,PSW
 5934+ 2			        endif
 5935+ 2  12F5	B4 14 25	        cjne    a,#res,??0509
 5936+ 2			        ifnb    <084h>
 5937+ 2			        tst_psw <084h>,??0509
 5938+ 3  12F8	E5 70		        mov     a,saved_psw
 5939+ 3  12FA	54 C4		        anl     a,#0c4h
 5940+ 3  12FC	64 84		        xrl     a,#084h
 5941+ 3  12FE	54 FE		        anl     a,#0feh
 5942+ 3  1300	70 1B		        jnz     ??0509
 5943+ 2			        endif
 5944+ 1			        top_ma  addc,r3,??0509,<084h>
 5945+ 2  1302	7B 81		        mov     r3,#arg0
 5946+ 2  1304	74 93		        mov     a,#arg1
 5947+ 2			        ifnb    <084h>
 5948+ 2			        set_cy  084h
 5949+ 3	N      0000	??0523  set     (084h and 1)
 5950+ 3	N      0000	        if      ??0523 eq 1
 5951+ 3			        setb    c
 5952+ 3			        else
 5953+ 3  1306	C3		        clr     c
 5954+ 3			        endif
 5955+ 2			        endif
 5956+ 2  1307	3B		        addc      a,r3
 5957+ 2			        ifnb    <084h>
 5958+ 2			        save_psw
 5959+ 3  1308	85 D0 70	        mov     saved_psw,PSW
 5960+ 2			        endif
 5961+ 2  130B	B4 14 0F	        cjne    a,#res,??0509
 5962+ 2			        ifnb    <084h>
 5963+ 2			        tst_psw <084h>,??0509
 5964+ 3  130E	E5 70		        mov     a,saved_psw
 5965+ 3  1310	54 C4		        anl     a,#0c4h
 5966+ 3  1312	64 84		        xrl     a,#084h
 5967+ 3  1314	54 FE		        anl     a,#0feh
 5968+ 3  1316	70 05		        jnz     ??0509
 5969+ 2			        endif
 5970+ 1
 5971+ 1			        eot     'b',??0509
 5972+ 2			        putc    #'b'
 5973+ 3  1318			??0525:
 5974+ 3			        ;jnb     SCON.1,putc_loop
 5975+ 3			        ;clr     SCON.1
 5976+ 3  1318	75 99 62	        mov     SBUF,#'b'
 5977+ 2  131B	80 06		        sjmp    ??0524
 5978+ 2  131D			??0509:  putc    #'?'
 5979+ 3  131D			??0526:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 108



 Line  I  Addr  Code            Source

 5980+ 3			        ;jnb     SCON.1,putc_loop
 5981+ 3			        ;clr     SCON.1
 5982+ 3  131D	75 99 3F	        mov     SBUF,#'?'
 5983+ 2  1320	75 6E 01	        mov     fail,#001h
 5984+ 2  1323			??0524:
 5985+ 1
 5986+ 1			        top_ma  addc,r4,??0510,<084h>
 5987+ 2  1323	7C 81		        mov     r4,#arg0
 5988+ 2  1325	74 93		        mov     a,#arg1
 5989+ 2			        ifnb    <084h>
 5990+ 2			        set_cy  084h
 5991+ 3	N      0000	??0527  set     (084h and 1)
 5992+ 3	N      0000	        if      ??0527 eq 1
 5993+ 3			        setb    c
 5994+ 3			        else
 5995+ 3  1327	C3		        clr     c
 5996+ 3			        endif
 5997+ 2			        endif
 5998+ 2  1328	3C		        addc      a,r4
 5999+ 2			        ifnb    <084h>
 6000+ 2			        save_psw
 6001+ 3  1329	85 D0 70	        mov     saved_psw,PSW
 6002+ 2			        endif
 6003+ 2  132C	B4 14 25	        cjne    a,#res,??0510
 6004+ 2			        ifnb    <084h>
 6005+ 2			        tst_psw <084h>,??0510
 6006+ 3  132F	E5 70		        mov     a,saved_psw
 6007+ 3  1331	54 C4		        anl     a,#0c4h
 6008+ 3  1333	64 84		        xrl     a,#084h
 6009+ 3  1335	54 FE		        anl     a,#0feh
 6010+ 3  1337	70 1B		        jnz     ??0510
 6011+ 2			        endif
 6012+ 1			        top_ma  addc,r5,??0510,<084h>
 6013+ 2  1339	7D 81		        mov     r5,#arg0
 6014+ 2  133B	74 93		        mov     a,#arg1
 6015+ 2			        ifnb    <084h>
 6016+ 2			        set_cy  084h
 6017+ 3	N      0000	??0528  set     (084h and 1)
 6018+ 3	N      0000	        if      ??0528 eq 1
 6019+ 3			        setb    c
 6020+ 3			        else
 6021+ 3  133D	C3		        clr     c
 6022+ 3			        endif
 6023+ 2			        endif
 6024+ 2  133E	3D		        addc      a,r5
 6025+ 2			        ifnb    <084h>
 6026+ 2			        save_psw
 6027+ 3  133F	85 D0 70	        mov     saved_psw,PSW
 6028+ 2			        endif
 6029+ 2  1342	B4 14 0F	        cjne    a,#res,??0510
 6030+ 2			        ifnb    <084h>
 6031+ 2			        tst_psw <084h>,??0510
 6032+ 3  1345	E5 70		        mov     a,saved_psw
 6033+ 3  1347	54 C4		        anl     a,#0c4h
 6034+ 3  1349	64 84		        xrl     a,#084h
 6035+ 3  134B	54 FE		        anl     a,#0feh

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 109



 Line  I  Addr  Code            Source

 6036+ 3  134D	70 05		        jnz     ??0510
 6037+ 2			        endif
 6038+ 1
 6039+ 1			        eot     'c',??0510
 6040+ 2			        putc    #'c'
 6041+ 3  134F			??0530:
 6042+ 3			        ;jnb     SCON.1,putc_loop
 6043+ 3			        ;clr     SCON.1
 6044+ 3  134F	75 99 63	        mov     SBUF,#'c'
 6045+ 2  1352	80 06		        sjmp    ??0529
 6046+ 2  1354			??0510:  putc    #'?'
 6047+ 3  1354			??0531:
 6048+ 3			        ;jnb     SCON.1,putc_loop
 6049+ 3			        ;clr     SCON.1
 6050+ 3  1354	75 99 3F	        mov     SBUF,#'?'
 6051+ 2  1357	75 6E 01	        mov     fail,#001h
 6052+ 2  135A			??0529:
 6053+ 1
 6054+ 1			        top_ma  addc,r6,??0507,<084h>
 6055+ 2  135A	7E 81		        mov     r6,#arg0
 6056+ 2  135C	74 93		        mov     a,#arg1
 6057+ 2			        ifnb    <084h>
 6058+ 2			        set_cy  084h
 6059+ 3	N      0000	??0532  set     (084h and 1)
 6060+ 3	N      0000	        if      ??0532 eq 1
 6061+ 3			        setb    c
 6062+ 3			        else
 6063+ 3  135E	C3		        clr     c
 6064+ 3			        endif
 6065+ 2			        endif
 6066+ 2  135F	3E		        addc      a,r6
 6067+ 2			        ifnb    <084h>
 6068+ 2			        save_psw
 6069+ 3  1360	85 D0 70	        mov     saved_psw,PSW
 6070+ 2			        endif
 6071+ 2  1363	B4 14 25	        cjne    a,#res,??0507
 6072+ 2			        ifnb    <084h>
 6073+ 2			        tst_psw <084h>,??0507
 6074+ 3  1366	E5 70		        mov     a,saved_psw
 6075+ 3  1368	54 C4		        anl     a,#0c4h
 6076+ 3  136A	64 84		        xrl     a,#084h
 6077+ 3  136C	54 FE		        anl     a,#0feh
 6078+ 3  136E	70 1B		        jnz     ??0507
 6079+ 2			        endif
 6080+ 1			        top_ma  addc,r7,??0507,<084h>
 6081+ 2  1370	7F 81		        mov     r7,#arg0
 6082+ 2  1372	74 93		        mov     a,#arg1
 6083+ 2			        ifnb    <084h>
 6084+ 2			        set_cy  084h
 6085+ 3	N      0000	??0533  set     (084h and 1)
 6086+ 3	N      0000	        if      ??0533 eq 1
 6087+ 3			        setb    c
 6088+ 3			        else
 6089+ 3  1374	C3		        clr     c
 6090+ 3			        endif
 6091+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 110



 Line  I  Addr  Code            Source

 6092+ 2  1375	3F		        addc      a,r7
 6093+ 2			        ifnb    <084h>
 6094+ 2			        save_psw
 6095+ 3  1376	85 D0 70	        mov     saved_psw,PSW
 6096+ 2			        endif
 6097+ 2  1379	B4 14 0F	        cjne    a,#res,??0507
 6098+ 2			        ifnb    <084h>
 6099+ 2			        tst_psw <084h>,??0507
 6100+ 3  137C	E5 70		        mov     a,saved_psw
 6101+ 3  137E	54 C4		        anl     a,#0c4h
 6102+ 3  1380	64 84		        xrl     a,#084h
 6103+ 3  1382	54 FE		        anl     a,#0feh
 6104+ 3  1384	70 05		        jnz     ??0507
 6105+ 2			        endif
 6106+ 1
 6107+ 1			        eot     'd',??0507
 6108+ 2			        putc    #'d'
 6109+ 3  1386			??0535:
 6110+ 3			        ;jnb     SCON.1,putc_loop
 6111+ 3			        ;clr     SCON.1
 6112+ 3  1386	75 99 64	        mov     SBUF,#'d'
 6113+ 2  1389	80 06		        sjmp    ??0534
 6114+ 2  138B			??0507:  putc    #'?'
 6115+ 3  138B			??0536:
 6116+ 3			        ;jnb     SCON.1,putc_loop
 6117+ 3			        ;clr     SCON.1
 6118+ 3  138B	75 99 3F	        mov     SBUF,#'?'
 6119+ 2  138E	75 6E 01	        mov     fail,#001h
 6120+ 2  1391			??0534:
 6121+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 6122+ 1
 6123+ 1			        ; Optionally test immediate addressing modes.
 6124+ 1
 6125+ 1	N      FFFF	        if      (01h and 1) ne 0
 6126+ 1			        ; Test <op> A, #arg1...
 6127+ 1			        top_mb  addc,a,??0511,<084h>
 6128+ 2  1391	74 93		        mov     a,#arg1
 6129+ 2			        ifnb    <084h>
 6130+ 2			        set_cy  084h
 6131+ 3	N      0000	??0537  set     (084h and 1)
 6132+ 3	N      0000	        if      ??0537 eq 1
 6133+ 3			        setb    c
 6134+ 3			        else
 6135+ 3  1393	C3		        clr     c
 6136+ 3			        endif
 6137+ 2			        endif
 6138+ 2  1394	34 81		        addc      a,#arg0
 6139+ 2			        ifnb    <084h>
 6140+ 2			        save_psw
 6141+ 3  1396	85 D0 70	        mov     saved_psw,PSW
 6142+ 2			        endif
 6143+ 2  1399	F5 E0		        mov     ACC,a
 6144+ 2  139B	B4 14 0F	        cjne    a,#res,??0511
 6145+ 2			        ifnb    <084h>
 6146+ 2			        tst_psw <084h>,??0511
 6147+ 3  139E	E5 70		        mov     a,saved_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 111



 Line  I  Addr  Code            Source

 6148+ 3  13A0	54 C4		        anl     a,#0c4h
 6149+ 3  13A2	64 84		        xrl     a,#084h
 6150+ 3  13A4	54 FE		        anl     a,#0feh
 6151+ 3  13A6	70 05		        jnz     ??0511
 6152+ 2			        endif
 6153+ 1			        eot     'e',??0511
 6154+ 2			        putc    #'e'
 6155+ 3  13A8			??0539:
 6156+ 3			        ;jnb     SCON.1,putc_loop
 6157+ 3			        ;clr     SCON.1
 6158+ 3  13A8	75 99 65	        mov     SBUF,#'e'
 6159+ 2  13AB	80 06		        sjmp    ??0538
 6160+ 2  13AD			??0511:  putc    #'?'
 6161+ 3  13AD			??0540:
 6162+ 3			        ;jnb     SCON.1,putc_loop
 6163+ 3			        ;clr     SCON.1
 6164+ 3  13AD	75 99 3F	        mov     SBUF,#'?'
 6165+ 2  13B0	75 6E 01	        mov     fail,#001h
 6166+ 2  13B3			??0538:
 6167+ 1			        endif
 6168+ 1
 6169+ 1	N      0000	        if      (01h and 2) ne 0
 6170+ 1			        ; ...and <op> dir, #arg1
 6171+ 1			        top_mb  addc,dir0,??0512,<084h>
 6172+ 1			        eot     'f',??0512
 6173+ 1			        endif
 6174+ 1
 6175+ 1			        ; Optionally test <op> dir, A
 6176+ 1	N      0000	        if      (01h and 4) ne 0
 6177+ 1			        top_mc  addc,??0513,<084h>
 6178+ 1			        eot     'g',??0513
 6179+ 1			        endif
 6180+ 1
 6181:				        putc    #'2'
 6182+ 1  13B3			??0541:
 6183+ 1			        ;jnb     SCON.1,putc_loop
 6184+ 1			        ;clr     SCON.1
 6185+ 1  13B3	75 99 32	        mov     SBUF,#'2'
 6186:				        tst_alu addc,088h,098h,020h,01h,0c4h     ;  CY  AC  OV
 6187+ 1			        ; Put the argument and result data into variables for easier access
 6188+ 1	N      0088	        arg0    set 088h
 6189+ 1	N      0098	        arg1    set 098h
 6190+ 1	N      0020	        res     set 020h
 6191+ 1
 6192+ 1			        ; Test <op> A, dir
 6193+ 1			        top_ma  addc,dir0,??0543,<0c4h>
 6194+ 2  13B6	75 60 88	        mov     dir0,#arg0
 6195+ 2  13B9	74 98		        mov     a,#arg1
 6196+ 2			        ifnb    <0c4h>
 6197+ 2			        set_cy  0c4h
 6198+ 3	N      0000	??0549  set     (0c4h and 1)
 6199+ 3	N      0000	        if      ??0549 eq 1
 6200+ 3			        setb    c
 6201+ 3			        else
 6202+ 3  13BB	C3		        clr     c
 6203+ 3			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 112



 Line  I  Addr  Code            Source

 6204+ 2			        endif
 6205+ 2  13BC	35 60		        addc      a,dir0
 6206+ 2			        ifnb    <0c4h>
 6207+ 2			        save_psw
 6208+ 3  13BE	85 D0 70	        mov     saved_psw,PSW
 6209+ 2			        endif
 6210+ 2  13C1	B4 20 6B	        cjne    a,#res,??0543
 6211+ 2			        ifnb    <0c4h>
 6212+ 2			        tst_psw <0c4h>,??0543
 6213+ 3  13C4	E5 70		        mov     a,saved_psw
 6214+ 3  13C6	54 C4		        anl     a,#0c4h
 6215+ 3  13C8	64 C4		        xrl     a,#0c4h
 6216+ 3  13CA	54 FE		        anl     a,#0feh
 6217+ 3  13CC	70 61		        jnz     ??0543
 6218+ 2			        endif
 6219+ 1			        ; Test <op> A, @R0
 6220+ 1  13CE	78 60		        mov     r0,#dir0
 6221+ 1			        top_ma  addc,@r0,??0543,<0c4h>
 6222+ 2  13D0	76 88		        mov     @r0,#arg0
 6223+ 2  13D2	74 98		        mov     a,#arg1
 6224+ 2			        ifnb    <0c4h>
 6225+ 2			        set_cy  0c4h
 6226+ 3	N      0000	??0550  set     (0c4h and 1)
 6227+ 3	N      0000	        if      ??0550 eq 1
 6228+ 3			        setb    c
 6229+ 3			        else
 6230+ 3  13D4	C3		        clr     c
 6231+ 3			        endif
 6232+ 2			        endif
 6233+ 2  13D5	36		        addc      a,@r0
 6234+ 2			        ifnb    <0c4h>
 6235+ 2			        save_psw
 6236+ 3  13D6	85 D0 70	        mov     saved_psw,PSW
 6237+ 2			        endif
 6238+ 2  13D9	B4 20 53	        cjne    a,#res,??0543
 6239+ 2			        ifnb    <0c4h>
 6240+ 2			        tst_psw <0c4h>,??0543
 6241+ 3  13DC	E5 70		        mov     a,saved_psw
 6242+ 3  13DE	54 C4		        anl     a,#0c4h
 6243+ 3  13E0	64 C4		        xrl     a,#0c4h
 6244+ 3  13E2	54 FE		        anl     a,#0feh
 6245+ 3  13E4	70 49		        jnz     ??0543
 6246+ 2			        endif
 6247+ 1			        ; Test <op> A, @R1
 6248+ 1  13E6	79 31		        mov     r1,#031h
 6249+ 1			        top_ma  addc,@r1,??0543,<0c4h>
 6250+ 2  13E8	77 88		        mov     @r1,#arg0
 6251+ 2  13EA	74 98		        mov     a,#arg1
 6252+ 2			        ifnb    <0c4h>
 6253+ 2			        set_cy  0c4h
 6254+ 3	N      0000	??0551  set     (0c4h and 1)
 6255+ 3	N      0000	        if      ??0551 eq 1
 6256+ 3			        setb    c
 6257+ 3			        else
 6258+ 3  13EC	C3		        clr     c
 6259+ 3			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 113



 Line  I  Addr  Code            Source

 6260+ 2			        endif
 6261+ 2  13ED	37		        addc      a,@r1
 6262+ 2			        ifnb    <0c4h>
 6263+ 2			        save_psw
 6264+ 3  13EE	85 D0 70	        mov     saved_psw,PSW
 6265+ 2			        endif
 6266+ 2  13F1	B4 20 3B	        cjne    a,#res,??0543
 6267+ 2			        ifnb    <0c4h>
 6268+ 2			        tst_psw <0c4h>,??0543
 6269+ 3  13F4	E5 70		        mov     a,saved_psw
 6270+ 3  13F6	54 C4		        anl     a,#0c4h
 6271+ 3  13F8	64 C4		        xrl     a,#0c4h
 6272+ 3  13FA	54 FE		        anl     a,#0feh
 6273+ 3  13FC	70 31		        jnz     ??0543
 6274+ 2			        endif
 6275+ 1
 6276+ 1			        ; Now test <op> A, Rn for n in 0..7
 6277+ 1			        top_ma  addc,r0,??0543,<0c4h>
 6278+ 2  13FE	78 88		        mov     r0,#arg0
 6279+ 2  1400	74 98		        mov     a,#arg1
 6280+ 2			        ifnb    <0c4h>
 6281+ 2			        set_cy  0c4h
 6282+ 3	N      0000	??0552  set     (0c4h and 1)
 6283+ 3	N      0000	        if      ??0552 eq 1
 6284+ 3			        setb    c
 6285+ 3			        else
 6286+ 3  1402	C3		        clr     c
 6287+ 3			        endif
 6288+ 2			        endif
 6289+ 2  1403	38		        addc      a,r0
 6290+ 2			        ifnb    <0c4h>
 6291+ 2			        save_psw
 6292+ 3  1404	85 D0 70	        mov     saved_psw,PSW
 6293+ 2			        endif
 6294+ 2  1407	B4 20 25	        cjne    a,#res,??0543
 6295+ 2			        ifnb    <0c4h>
 6296+ 2			        tst_psw <0c4h>,??0543
 6297+ 3  140A	E5 70		        mov     a,saved_psw
 6298+ 3  140C	54 C4		        anl     a,#0c4h
 6299+ 3  140E	64 C4		        xrl     a,#0c4h
 6300+ 3  1410	54 FE		        anl     a,#0feh
 6301+ 3  1412	70 1B		        jnz     ??0543
 6302+ 2			        endif
 6303+ 1			        top_ma  addc,r1,??0543,<0c4h>
 6304+ 2  1414	79 88		        mov     r1,#arg0
 6305+ 2  1416	74 98		        mov     a,#arg1
 6306+ 2			        ifnb    <0c4h>
 6307+ 2			        set_cy  0c4h
 6308+ 3	N      0000	??0553  set     (0c4h and 1)
 6309+ 3	N      0000	        if      ??0553 eq 1
 6310+ 3			        setb    c
 6311+ 3			        else
 6312+ 3  1418	C3		        clr     c
 6313+ 3			        endif
 6314+ 2			        endif
 6315+ 2  1419	39		        addc      a,r1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 114



 Line  I  Addr  Code            Source

 6316+ 2			        ifnb    <0c4h>
 6317+ 2			        save_psw
 6318+ 3  141A	85 D0 70	        mov     saved_psw,PSW
 6319+ 2			        endif
 6320+ 2  141D	B4 20 0F	        cjne    a,#res,??0543
 6321+ 2			        ifnb    <0c4h>
 6322+ 2			        tst_psw <0c4h>,??0543
 6323+ 3  1420	E5 70		        mov     a,saved_psw
 6324+ 3  1422	54 C4		        anl     a,#0c4h
 6325+ 3  1424	64 C4		        xrl     a,#0c4h
 6326+ 3  1426	54 FE		        anl     a,#0feh
 6327+ 3  1428	70 05		        jnz     ??0543
 6328+ 2			        endif
 6329+ 1
 6330+ 1			        eot     'a',??0543
 6331+ 2			        putc    #'a'
 6332+ 3  142A			??0555:
 6333+ 3			        ;jnb     SCON.1,putc_loop
 6334+ 3			        ;clr     SCON.1
 6335+ 3  142A	75 99 61	        mov     SBUF,#'a'
 6336+ 2  142D	80 06		        sjmp    ??0554
 6337+ 2  142F			??0543:  putc    #'?'
 6338+ 3  142F			??0556:
 6339+ 3			        ;jnb     SCON.1,putc_loop
 6340+ 3			        ;clr     SCON.1
 6341+ 3  142F	75 99 3F	        mov     SBUF,#'?'
 6342+ 2  1432	75 6E 01	        mov     fail,#001h
 6343+ 2  1435			??0554:
 6344+ 1
 6345+ 1			        top_ma  addc,r2,??0544,<0c4h>
 6346+ 2  1435	7A 88		        mov     r2,#arg0
 6347+ 2  1437	74 98		        mov     a,#arg1
 6348+ 2			        ifnb    <0c4h>
 6349+ 2			        set_cy  0c4h
 6350+ 3	N      0000	??0557  set     (0c4h and 1)
 6351+ 3	N      0000	        if      ??0557 eq 1
 6352+ 3			        setb    c
 6353+ 3			        else
 6354+ 3  1439	C3		        clr     c
 6355+ 3			        endif
 6356+ 2			        endif
 6357+ 2  143A	3A		        addc      a,r2
 6358+ 2			        ifnb    <0c4h>
 6359+ 2			        save_psw
 6360+ 3  143B	85 D0 70	        mov     saved_psw,PSW
 6361+ 2			        endif
 6362+ 2  143E	B4 20 25	        cjne    a,#res,??0544
 6363+ 2			        ifnb    <0c4h>
 6364+ 2			        tst_psw <0c4h>,??0544
 6365+ 3  1441	E5 70		        mov     a,saved_psw
 6366+ 3  1443	54 C4		        anl     a,#0c4h
 6367+ 3  1445	64 C4		        xrl     a,#0c4h
 6368+ 3  1447	54 FE		        anl     a,#0feh
 6369+ 3  1449	70 1B		        jnz     ??0544
 6370+ 2			        endif
 6371+ 1			        top_ma  addc,r3,??0544,<0c4h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 115



 Line  I  Addr  Code            Source

 6372+ 2  144B	7B 88		        mov     r3,#arg0
 6373+ 2  144D	74 98		        mov     a,#arg1
 6374+ 2			        ifnb    <0c4h>
 6375+ 2			        set_cy  0c4h
 6376+ 3	N      0000	??0558  set     (0c4h and 1)
 6377+ 3	N      0000	        if      ??0558 eq 1
 6378+ 3			        setb    c
 6379+ 3			        else
 6380+ 3  144F	C3		        clr     c
 6381+ 3			        endif
 6382+ 2			        endif
 6383+ 2  1450	3B		        addc      a,r3
 6384+ 2			        ifnb    <0c4h>
 6385+ 2			        save_psw
 6386+ 3  1451	85 D0 70	        mov     saved_psw,PSW
 6387+ 2			        endif
 6388+ 2  1454	B4 20 0F	        cjne    a,#res,??0544
 6389+ 2			        ifnb    <0c4h>
 6390+ 2			        tst_psw <0c4h>,??0544
 6391+ 3  1457	E5 70		        mov     a,saved_psw
 6392+ 3  1459	54 C4		        anl     a,#0c4h
 6393+ 3  145B	64 C4		        xrl     a,#0c4h
 6394+ 3  145D	54 FE		        anl     a,#0feh
 6395+ 3  145F	70 05		        jnz     ??0544
 6396+ 2			        endif
 6397+ 1
 6398+ 1			        eot     'b',??0544
 6399+ 2			        putc    #'b'
 6400+ 3  1461			??0560:
 6401+ 3			        ;jnb     SCON.1,putc_loop
 6402+ 3			        ;clr     SCON.1
 6403+ 3  1461	75 99 62	        mov     SBUF,#'b'
 6404+ 2  1464	80 06		        sjmp    ??0559
 6405+ 2  1466			??0544:  putc    #'?'
 6406+ 3  1466			??0561:
 6407+ 3			        ;jnb     SCON.1,putc_loop
 6408+ 3			        ;clr     SCON.1
 6409+ 3  1466	75 99 3F	        mov     SBUF,#'?'
 6410+ 2  1469	75 6E 01	        mov     fail,#001h
 6411+ 2  146C			??0559:
 6412+ 1
 6413+ 1			        top_ma  addc,r4,??0545,<0c4h>
 6414+ 2  146C	7C 88		        mov     r4,#arg0
 6415+ 2  146E	74 98		        mov     a,#arg1
 6416+ 2			        ifnb    <0c4h>
 6417+ 2			        set_cy  0c4h
 6418+ 3	N      0000	??0562  set     (0c4h and 1)
 6419+ 3	N      0000	        if      ??0562 eq 1
 6420+ 3			        setb    c
 6421+ 3			        else
 6422+ 3  1470	C3		        clr     c
 6423+ 3			        endif
 6424+ 2			        endif
 6425+ 2  1471	3C		        addc      a,r4
 6426+ 2			        ifnb    <0c4h>
 6427+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 116



 Line  I  Addr  Code            Source

 6428+ 3  1472	85 D0 70	        mov     saved_psw,PSW
 6429+ 2			        endif
 6430+ 2  1475	B4 20 25	        cjne    a,#res,??0545
 6431+ 2			        ifnb    <0c4h>
 6432+ 2			        tst_psw <0c4h>,??0545
 6433+ 3  1478	E5 70		        mov     a,saved_psw
 6434+ 3  147A	54 C4		        anl     a,#0c4h
 6435+ 3  147C	64 C4		        xrl     a,#0c4h
 6436+ 3  147E	54 FE		        anl     a,#0feh
 6437+ 3  1480	70 1B		        jnz     ??0545
 6438+ 2			        endif
 6439+ 1			        top_ma  addc,r5,??0545,<0c4h>
 6440+ 2  1482	7D 88		        mov     r5,#arg0
 6441+ 2  1484	74 98		        mov     a,#arg1
 6442+ 2			        ifnb    <0c4h>
 6443+ 2			        set_cy  0c4h
 6444+ 3	N      0000	??0563  set     (0c4h and 1)
 6445+ 3	N      0000	        if      ??0563 eq 1
 6446+ 3			        setb    c
 6447+ 3			        else
 6448+ 3  1486	C3		        clr     c
 6449+ 3			        endif
 6450+ 2			        endif
 6451+ 2  1487	3D		        addc      a,r5
 6452+ 2			        ifnb    <0c4h>
 6453+ 2			        save_psw
 6454+ 3  1488	85 D0 70	        mov     saved_psw,PSW
 6455+ 2			        endif
 6456+ 2  148B	B4 20 0F	        cjne    a,#res,??0545
 6457+ 2			        ifnb    <0c4h>
 6458+ 2			        tst_psw <0c4h>,??0545
 6459+ 3  148E	E5 70		        mov     a,saved_psw
 6460+ 3  1490	54 C4		        anl     a,#0c4h
 6461+ 3  1492	64 C4		        xrl     a,#0c4h
 6462+ 3  1494	54 FE		        anl     a,#0feh
 6463+ 3  1496	70 05		        jnz     ??0545
 6464+ 2			        endif
 6465+ 1
 6466+ 1			        eot     'c',??0545
 6467+ 2			        putc    #'c'
 6468+ 3  1498			??0565:
 6469+ 3			        ;jnb     SCON.1,putc_loop
 6470+ 3			        ;clr     SCON.1
 6471+ 3  1498	75 99 63	        mov     SBUF,#'c'
 6472+ 2  149B	80 06		        sjmp    ??0564
 6473+ 2  149D			??0545:  putc    #'?'
 6474+ 3  149D			??0566:
 6475+ 3			        ;jnb     SCON.1,putc_loop
 6476+ 3			        ;clr     SCON.1
 6477+ 3  149D	75 99 3F	        mov     SBUF,#'?'
 6478+ 2  14A0	75 6E 01	        mov     fail,#001h
 6479+ 2  14A3			??0564:
 6480+ 1
 6481+ 1			        top_ma  addc,r6,??0542,<0c4h>
 6482+ 2  14A3	7E 88		        mov     r6,#arg0
 6483+ 2  14A5	74 98		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 117



 Line  I  Addr  Code            Source

 6484+ 2			        ifnb    <0c4h>
 6485+ 2			        set_cy  0c4h
 6486+ 3	N      0000	??0567  set     (0c4h and 1)
 6487+ 3	N      0000	        if      ??0567 eq 1
 6488+ 3			        setb    c
 6489+ 3			        else
 6490+ 3  14A7	C3		        clr     c
 6491+ 3			        endif
 6492+ 2			        endif
 6493+ 2  14A8	3E		        addc      a,r6
 6494+ 2			        ifnb    <0c4h>
 6495+ 2			        save_psw
 6496+ 3  14A9	85 D0 70	        mov     saved_psw,PSW
 6497+ 2			        endif
 6498+ 2  14AC	B4 20 25	        cjne    a,#res,??0542
 6499+ 2			        ifnb    <0c4h>
 6500+ 2			        tst_psw <0c4h>,??0542
 6501+ 3  14AF	E5 70		        mov     a,saved_psw
 6502+ 3  14B1	54 C4		        anl     a,#0c4h
 6503+ 3  14B3	64 C4		        xrl     a,#0c4h
 6504+ 3  14B5	54 FE		        anl     a,#0feh
 6505+ 3  14B7	70 1B		        jnz     ??0542
 6506+ 2			        endif
 6507+ 1			        top_ma  addc,r7,??0542,<0c4h>
 6508+ 2  14B9	7F 88		        mov     r7,#arg0
 6509+ 2  14BB	74 98		        mov     a,#arg1
 6510+ 2			        ifnb    <0c4h>
 6511+ 2			        set_cy  0c4h
 6512+ 3	N      0000	??0568  set     (0c4h and 1)
 6513+ 3	N      0000	        if      ??0568 eq 1
 6514+ 3			        setb    c
 6515+ 3			        else
 6516+ 3  14BD	C3		        clr     c
 6517+ 3			        endif
 6518+ 2			        endif
 6519+ 2  14BE	3F		        addc      a,r7
 6520+ 2			        ifnb    <0c4h>
 6521+ 2			        save_psw
 6522+ 3  14BF	85 D0 70	        mov     saved_psw,PSW
 6523+ 2			        endif
 6524+ 2  14C2	B4 20 0F	        cjne    a,#res,??0542
 6525+ 2			        ifnb    <0c4h>
 6526+ 2			        tst_psw <0c4h>,??0542
 6527+ 3  14C5	E5 70		        mov     a,saved_psw
 6528+ 3  14C7	54 C4		        anl     a,#0c4h
 6529+ 3  14C9	64 C4		        xrl     a,#0c4h
 6530+ 3  14CB	54 FE		        anl     a,#0feh
 6531+ 3  14CD	70 05		        jnz     ??0542
 6532+ 2			        endif
 6533+ 1
 6534+ 1			        eot     'd',??0542
 6535+ 2			        putc    #'d'
 6536+ 3  14CF			??0570:
 6537+ 3			        ;jnb     SCON.1,putc_loop
 6538+ 3			        ;clr     SCON.1
 6539+ 3  14CF	75 99 64	        mov     SBUF,#'d'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 118



 Line  I  Addr  Code            Source

 6540+ 2  14D2	80 06		        sjmp    ??0569
 6541+ 2  14D4			??0542:  putc    #'?'
 6542+ 3  14D4			??0571:
 6543+ 3			        ;jnb     SCON.1,putc_loop
 6544+ 3			        ;clr     SCON.1
 6545+ 3  14D4	75 99 3F	        mov     SBUF,#'?'
 6546+ 2  14D7	75 6E 01	        mov     fail,#001h
 6547+ 2  14DA			??0569:
 6548+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 6549+ 1
 6550+ 1			        ; Optionally test immediate addressing modes.
 6551+ 1
 6552+ 1	N      FFFF	        if      (01h and 1) ne 0
 6553+ 1			        ; Test <op> A, #arg1...
 6554+ 1			        top_mb  addc,a,??0546,<0c4h>
 6555+ 2  14DA	74 98		        mov     a,#arg1
 6556+ 2			        ifnb    <0c4h>
 6557+ 2			        set_cy  0c4h
 6558+ 3	N      0000	??0572  set     (0c4h and 1)
 6559+ 3	N      0000	        if      ??0572 eq 1
 6560+ 3			        setb    c
 6561+ 3			        else
 6562+ 3  14DC	C3		        clr     c
 6563+ 3			        endif
 6564+ 2			        endif
 6565+ 2  14DD	34 88		        addc      a,#arg0
 6566+ 2			        ifnb    <0c4h>
 6567+ 2			        save_psw
 6568+ 3  14DF	85 D0 70	        mov     saved_psw,PSW
 6569+ 2			        endif
 6570+ 2  14E2	F5 E0		        mov     ACC,a
 6571+ 2  14E4	B4 20 0F	        cjne    a,#res,??0546
 6572+ 2			        ifnb    <0c4h>
 6573+ 2			        tst_psw <0c4h>,??0546
 6574+ 3  14E7	E5 70		        mov     a,saved_psw
 6575+ 3  14E9	54 C4		        anl     a,#0c4h
 6576+ 3  14EB	64 C4		        xrl     a,#0c4h
 6577+ 3  14ED	54 FE		        anl     a,#0feh
 6578+ 3  14EF	70 05		        jnz     ??0546
 6579+ 2			        endif
 6580+ 1			        eot     'e',??0546
 6581+ 2			        putc    #'e'
 6582+ 3  14F1			??0574:
 6583+ 3			        ;jnb     SCON.1,putc_loop
 6584+ 3			        ;clr     SCON.1
 6585+ 3  14F1	75 99 65	        mov     SBUF,#'e'
 6586+ 2  14F4	80 06		        sjmp    ??0573
 6587+ 2  14F6			??0546:  putc    #'?'
 6588+ 3  14F6			??0575:
 6589+ 3			        ;jnb     SCON.1,putc_loop
 6590+ 3			        ;clr     SCON.1
 6591+ 3  14F6	75 99 3F	        mov     SBUF,#'?'
 6592+ 2  14F9	75 6E 01	        mov     fail,#001h
 6593+ 2  14FC			??0573:
 6594+ 1			        endif
 6595+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 119



 Line  I  Addr  Code            Source

 6596+ 1	N      0000	        if      (01h and 2) ne 0
 6597+ 1			        ; ...and <op> dir, #arg1
 6598+ 1			        top_mb  addc,dir0,??0547,<0c4h>
 6599+ 1			        eot     'f',??0547
 6600+ 1			        endif
 6601+ 1
 6602+ 1			        ; Optionally test <op> dir, A
 6603+ 1	N      0000	        if      (01h and 4) ne 0
 6604+ 1			        top_mc  addc,??0548,<0c4h>
 6605+ 1			        eot     'g',??0548
 6606+ 1			        endif
 6607+ 1
 6608:				        putc    #'3'
 6609+ 1  14FC			??0576:
 6610+ 1			        ;jnb     SCON.1,putc_loop
 6611+ 1			        ;clr     SCON.1
 6612+ 1  14FC	75 99 33	        mov     SBUF,#'3'
 6613:				        tst_alu addc,088h,098h,021h,01h,0c5h     ;  CY  AC  OV (CY input)
 6614+ 1			        ; Put the argument and result data into variables for easier access
 6615+ 1	N      0088	        arg0    set 088h
 6616+ 1	N      0098	        arg1    set 098h
 6617+ 1	N      0021	        res     set 021h
 6618+ 1
 6619+ 1			        ; Test <op> A, dir
 6620+ 1			        top_ma  addc,dir0,??0578,<0c5h>
 6621+ 2  14FF	75 60 88	        mov     dir0,#arg0
 6622+ 2  1502	74 98		        mov     a,#arg1
 6623+ 2			        ifnb    <0c5h>
 6624+ 2			        set_cy  0c5h
 6625+ 3	N      0001	??0584  set     (0c5h and 1)
 6626+ 3	N      FFFF	        if      ??0584 eq 1
 6627+ 3  1504	D3		        setb    c
 6628+ 3			        else
 6629+ 3			        clr     c
 6630+ 3			        endif
 6631+ 2			        endif
 6632+ 2  1505	35 60		        addc      a,dir0
 6633+ 2			        ifnb    <0c5h>
 6634+ 2			        save_psw
 6635+ 3  1507	85 D0 70	        mov     saved_psw,PSW
 6636+ 2			        endif
 6637+ 2  150A	B4 21 6B	        cjne    a,#res,??0578
 6638+ 2			        ifnb    <0c5h>
 6639+ 2			        tst_psw <0c5h>,??0578
 6640+ 3  150D	E5 70		        mov     a,saved_psw
 6641+ 3  150F	54 C4		        anl     a,#0c4h
 6642+ 3  1511	64 C5		        xrl     a,#0c5h
 6643+ 3  1513	54 FE		        anl     a,#0feh
 6644+ 3  1515	70 61		        jnz     ??0578
 6645+ 2			        endif
 6646+ 1			        ; Test <op> A, @R0
 6647+ 1  1517	78 60		        mov     r0,#dir0
 6648+ 1			        top_ma  addc,@r0,??0578,<0c5h>
 6649+ 2  1519	76 88		        mov     @r0,#arg0
 6650+ 2  151B	74 98		        mov     a,#arg1
 6651+ 2			        ifnb    <0c5h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 120



 Line  I  Addr  Code            Source

 6652+ 2			        set_cy  0c5h
 6653+ 3	N      0001	??0585  set     (0c5h and 1)
 6654+ 3	N      FFFF	        if      ??0585 eq 1
 6655+ 3  151D	D3		        setb    c
 6656+ 3			        else
 6657+ 3			        clr     c
 6658+ 3			        endif
 6659+ 2			        endif
 6660+ 2  151E	36		        addc      a,@r0
 6661+ 2			        ifnb    <0c5h>
 6662+ 2			        save_psw
 6663+ 3  151F	85 D0 70	        mov     saved_psw,PSW
 6664+ 2			        endif
 6665+ 2  1522	B4 21 53	        cjne    a,#res,??0578
 6666+ 2			        ifnb    <0c5h>
 6667+ 2			        tst_psw <0c5h>,??0578
 6668+ 3  1525	E5 70		        mov     a,saved_psw
 6669+ 3  1527	54 C4		        anl     a,#0c4h
 6670+ 3  1529	64 C5		        xrl     a,#0c5h
 6671+ 3  152B	54 FE		        anl     a,#0feh
 6672+ 3  152D	70 49		        jnz     ??0578
 6673+ 2			        endif
 6674+ 1			        ; Test <op> A, @R1
 6675+ 1  152F	79 31		        mov     r1,#031h
 6676+ 1			        top_ma  addc,@r1,??0578,<0c5h>
 6677+ 2  1531	77 88		        mov     @r1,#arg0
 6678+ 2  1533	74 98		        mov     a,#arg1
 6679+ 2			        ifnb    <0c5h>
 6680+ 2			        set_cy  0c5h
 6681+ 3	N      0001	??0586  set     (0c5h and 1)
 6682+ 3	N      FFFF	        if      ??0586 eq 1
 6683+ 3  1535	D3		        setb    c
 6684+ 3			        else
 6685+ 3			        clr     c
 6686+ 3			        endif
 6687+ 2			        endif
 6688+ 2  1536	37		        addc      a,@r1
 6689+ 2			        ifnb    <0c5h>
 6690+ 2			        save_psw
 6691+ 3  1537	85 D0 70	        mov     saved_psw,PSW
 6692+ 2			        endif
 6693+ 2  153A	B4 21 3B	        cjne    a,#res,??0578
 6694+ 2			        ifnb    <0c5h>
 6695+ 2			        tst_psw <0c5h>,??0578
 6696+ 3  153D	E5 70		        mov     a,saved_psw
 6697+ 3  153F	54 C4		        anl     a,#0c4h
 6698+ 3  1541	64 C5		        xrl     a,#0c5h
 6699+ 3  1543	54 FE		        anl     a,#0feh
 6700+ 3  1545	70 31		        jnz     ??0578
 6701+ 2			        endif
 6702+ 1
 6703+ 1			        ; Now test <op> A, Rn for n in 0..7
 6704+ 1			        top_ma  addc,r0,??0578,<0c5h>
 6705+ 2  1547	78 88		        mov     r0,#arg0
 6706+ 2  1549	74 98		        mov     a,#arg1
 6707+ 2			        ifnb    <0c5h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 121



 Line  I  Addr  Code            Source

 6708+ 2			        set_cy  0c5h
 6709+ 3	N      0001	??0587  set     (0c5h and 1)
 6710+ 3	N      FFFF	        if      ??0587 eq 1
 6711+ 3  154B	D3		        setb    c
 6712+ 3			        else
 6713+ 3			        clr     c
 6714+ 3			        endif
 6715+ 2			        endif
 6716+ 2  154C	38		        addc      a,r0
 6717+ 2			        ifnb    <0c5h>
 6718+ 2			        save_psw
 6719+ 3  154D	85 D0 70	        mov     saved_psw,PSW
 6720+ 2			        endif
 6721+ 2  1550	B4 21 25	        cjne    a,#res,??0578
 6722+ 2			        ifnb    <0c5h>
 6723+ 2			        tst_psw <0c5h>,??0578
 6724+ 3  1553	E5 70		        mov     a,saved_psw
 6725+ 3  1555	54 C4		        anl     a,#0c4h
 6726+ 3  1557	64 C5		        xrl     a,#0c5h
 6727+ 3  1559	54 FE		        anl     a,#0feh
 6728+ 3  155B	70 1B		        jnz     ??0578
 6729+ 2			        endif
 6730+ 1			        top_ma  addc,r1,??0578,<0c5h>
 6731+ 2  155D	79 88		        mov     r1,#arg0
 6732+ 2  155F	74 98		        mov     a,#arg1
 6733+ 2			        ifnb    <0c5h>
 6734+ 2			        set_cy  0c5h
 6735+ 3	N      0001	??0588  set     (0c5h and 1)
 6736+ 3	N      FFFF	        if      ??0588 eq 1
 6737+ 3  1561	D3		        setb    c
 6738+ 3			        else
 6739+ 3			        clr     c
 6740+ 3			        endif
 6741+ 2			        endif
 6742+ 2  1562	39		        addc      a,r1
 6743+ 2			        ifnb    <0c5h>
 6744+ 2			        save_psw
 6745+ 3  1563	85 D0 70	        mov     saved_psw,PSW
 6746+ 2			        endif
 6747+ 2  1566	B4 21 0F	        cjne    a,#res,??0578
 6748+ 2			        ifnb    <0c5h>
 6749+ 2			        tst_psw <0c5h>,??0578
 6750+ 3  1569	E5 70		        mov     a,saved_psw
 6751+ 3  156B	54 C4		        anl     a,#0c4h
 6752+ 3  156D	64 C5		        xrl     a,#0c5h
 6753+ 3  156F	54 FE		        anl     a,#0feh
 6754+ 3  1571	70 05		        jnz     ??0578
 6755+ 2			        endif
 6756+ 1
 6757+ 1			        eot     'a',??0578
 6758+ 2			        putc    #'a'
 6759+ 3  1573			??0590:
 6760+ 3			        ;jnb     SCON.1,putc_loop
 6761+ 3			        ;clr     SCON.1
 6762+ 3  1573	75 99 61	        mov     SBUF,#'a'
 6763+ 2  1576	80 06		        sjmp    ??0589

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 122



 Line  I  Addr  Code            Source

 6764+ 2  1578			??0578:  putc    #'?'
 6765+ 3  1578			??0591:
 6766+ 3			        ;jnb     SCON.1,putc_loop
 6767+ 3			        ;clr     SCON.1
 6768+ 3  1578	75 99 3F	        mov     SBUF,#'?'
 6769+ 2  157B	75 6E 01	        mov     fail,#001h
 6770+ 2  157E			??0589:
 6771+ 1
 6772+ 1			        top_ma  addc,r2,??0579,<0c5h>
 6773+ 2  157E	7A 88		        mov     r2,#arg0
 6774+ 2  1580	74 98		        mov     a,#arg1
 6775+ 2			        ifnb    <0c5h>
 6776+ 2			        set_cy  0c5h
 6777+ 3	N      0001	??0592  set     (0c5h and 1)
 6778+ 3	N      FFFF	        if      ??0592 eq 1
 6779+ 3  1582	D3		        setb    c
 6780+ 3			        else
 6781+ 3			        clr     c
 6782+ 3			        endif
 6783+ 2			        endif
 6784+ 2  1583	3A		        addc      a,r2
 6785+ 2			        ifnb    <0c5h>
 6786+ 2			        save_psw
 6787+ 3  1584	85 D0 70	        mov     saved_psw,PSW
 6788+ 2			        endif
 6789+ 2  1587	B4 21 25	        cjne    a,#res,??0579
 6790+ 2			        ifnb    <0c5h>
 6791+ 2			        tst_psw <0c5h>,??0579
 6792+ 3  158A	E5 70		        mov     a,saved_psw
 6793+ 3  158C	54 C4		        anl     a,#0c4h
 6794+ 3  158E	64 C5		        xrl     a,#0c5h
 6795+ 3  1590	54 FE		        anl     a,#0feh
 6796+ 3  1592	70 1B		        jnz     ??0579
 6797+ 2			        endif
 6798+ 1			        top_ma  addc,r3,??0579,<0c5h>
 6799+ 2  1594	7B 88		        mov     r3,#arg0
 6800+ 2  1596	74 98		        mov     a,#arg1
 6801+ 2			        ifnb    <0c5h>
 6802+ 2			        set_cy  0c5h
 6803+ 3	N      0001	??0593  set     (0c5h and 1)
 6804+ 3	N      FFFF	        if      ??0593 eq 1
 6805+ 3  1598	D3		        setb    c
 6806+ 3			        else
 6807+ 3			        clr     c
 6808+ 3			        endif
 6809+ 2			        endif
 6810+ 2  1599	3B		        addc      a,r3
 6811+ 2			        ifnb    <0c5h>
 6812+ 2			        save_psw
 6813+ 3  159A	85 D0 70	        mov     saved_psw,PSW
 6814+ 2			        endif
 6815+ 2  159D	B4 21 0F	        cjne    a,#res,??0579
 6816+ 2			        ifnb    <0c5h>
 6817+ 2			        tst_psw <0c5h>,??0579
 6818+ 3  15A0	E5 70		        mov     a,saved_psw
 6819+ 3  15A2	54 C4		        anl     a,#0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 123



 Line  I  Addr  Code            Source

 6820+ 3  15A4	64 C5		        xrl     a,#0c5h
 6821+ 3  15A6	54 FE		        anl     a,#0feh
 6822+ 3  15A8	70 05		        jnz     ??0579
 6823+ 2			        endif
 6824+ 1
 6825+ 1			        eot     'b',??0579
 6826+ 2			        putc    #'b'
 6827+ 3  15AA			??0595:
 6828+ 3			        ;jnb     SCON.1,putc_loop
 6829+ 3			        ;clr     SCON.1
 6830+ 3  15AA	75 99 62	        mov     SBUF,#'b'
 6831+ 2  15AD	80 06		        sjmp    ??0594
 6832+ 2  15AF			??0579:  putc    #'?'
 6833+ 3  15AF			??0596:
 6834+ 3			        ;jnb     SCON.1,putc_loop
 6835+ 3			        ;clr     SCON.1
 6836+ 3  15AF	75 99 3F	        mov     SBUF,#'?'
 6837+ 2  15B2	75 6E 01	        mov     fail,#001h
 6838+ 2  15B5			??0594:
 6839+ 1
 6840+ 1			        top_ma  addc,r4,??0580,<0c5h>
 6841+ 2  15B5	7C 88		        mov     r4,#arg0
 6842+ 2  15B7	74 98		        mov     a,#arg1
 6843+ 2			        ifnb    <0c5h>
 6844+ 2			        set_cy  0c5h
 6845+ 3	N      0001	??0597  set     (0c5h and 1)
 6846+ 3	N      FFFF	        if      ??0597 eq 1
 6847+ 3  15B9	D3		        setb    c
 6848+ 3			        else
 6849+ 3			        clr     c
 6850+ 3			        endif
 6851+ 2			        endif
 6852+ 2  15BA	3C		        addc      a,r4
 6853+ 2			        ifnb    <0c5h>
 6854+ 2			        save_psw
 6855+ 3  15BB	85 D0 70	        mov     saved_psw,PSW
 6856+ 2			        endif
 6857+ 2  15BE	B4 21 25	        cjne    a,#res,??0580
 6858+ 2			        ifnb    <0c5h>
 6859+ 2			        tst_psw <0c5h>,??0580
 6860+ 3  15C1	E5 70		        mov     a,saved_psw
 6861+ 3  15C3	54 C4		        anl     a,#0c4h
 6862+ 3  15C5	64 C5		        xrl     a,#0c5h
 6863+ 3  15C7	54 FE		        anl     a,#0feh
 6864+ 3  15C9	70 1B		        jnz     ??0580
 6865+ 2			        endif
 6866+ 1			        top_ma  addc,r5,??0580,<0c5h>
 6867+ 2  15CB	7D 88		        mov     r5,#arg0
 6868+ 2  15CD	74 98		        mov     a,#arg1
 6869+ 2			        ifnb    <0c5h>
 6870+ 2			        set_cy  0c5h
 6871+ 3	N      0001	??0598  set     (0c5h and 1)
 6872+ 3	N      FFFF	        if      ??0598 eq 1
 6873+ 3  15CF	D3		        setb    c
 6874+ 3			        else
 6875+ 3			        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 124



 Line  I  Addr  Code            Source

 6876+ 3			        endif
 6877+ 2			        endif
 6878+ 2  15D0	3D		        addc      a,r5
 6879+ 2			        ifnb    <0c5h>
 6880+ 2			        save_psw
 6881+ 3  15D1	85 D0 70	        mov     saved_psw,PSW
 6882+ 2			        endif
 6883+ 2  15D4	B4 21 0F	        cjne    a,#res,??0580
 6884+ 2			        ifnb    <0c5h>
 6885+ 2			        tst_psw <0c5h>,??0580
 6886+ 3  15D7	E5 70		        mov     a,saved_psw
 6887+ 3  15D9	54 C4		        anl     a,#0c4h
 6888+ 3  15DB	64 C5		        xrl     a,#0c5h
 6889+ 3  15DD	54 FE		        anl     a,#0feh
 6890+ 3  15DF	70 05		        jnz     ??0580
 6891+ 2			        endif
 6892+ 1
 6893+ 1			        eot     'c',??0580
 6894+ 2			        putc    #'c'
 6895+ 3  15E1			??0600:
 6896+ 3			        ;jnb     SCON.1,putc_loop
 6897+ 3			        ;clr     SCON.1
 6898+ 3  15E1	75 99 63	        mov     SBUF,#'c'
 6899+ 2  15E4	80 06		        sjmp    ??0599
 6900+ 2  15E6			??0580:  putc    #'?'
 6901+ 3  15E6			??0601:
 6902+ 3			        ;jnb     SCON.1,putc_loop
 6903+ 3			        ;clr     SCON.1
 6904+ 3  15E6	75 99 3F	        mov     SBUF,#'?'
 6905+ 2  15E9	75 6E 01	        mov     fail,#001h
 6906+ 2  15EC			??0599:
 6907+ 1
 6908+ 1			        top_ma  addc,r6,??0577,<0c5h>
 6909+ 2  15EC	7E 88		        mov     r6,#arg0
 6910+ 2  15EE	74 98		        mov     a,#arg1
 6911+ 2			        ifnb    <0c5h>
 6912+ 2			        set_cy  0c5h
 6913+ 3	N      0001	??0602  set     (0c5h and 1)
 6914+ 3	N      FFFF	        if      ??0602 eq 1
 6915+ 3  15F0	D3		        setb    c
 6916+ 3			        else
 6917+ 3			        clr     c
 6918+ 3			        endif
 6919+ 2			        endif
 6920+ 2  15F1	3E		        addc      a,r6
 6921+ 2			        ifnb    <0c5h>
 6922+ 2			        save_psw
 6923+ 3  15F2	85 D0 70	        mov     saved_psw,PSW
 6924+ 2			        endif
 6925+ 2  15F5	B4 21 25	        cjne    a,#res,??0577
 6926+ 2			        ifnb    <0c5h>
 6927+ 2			        tst_psw <0c5h>,??0577
 6928+ 3  15F8	E5 70		        mov     a,saved_psw
 6929+ 3  15FA	54 C4		        anl     a,#0c4h
 6930+ 3  15FC	64 C5		        xrl     a,#0c5h
 6931+ 3  15FE	54 FE		        anl     a,#0feh

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 125



 Line  I  Addr  Code            Source

 6932+ 3  1600	70 1B		        jnz     ??0577
 6933+ 2			        endif
 6934+ 1			        top_ma  addc,r7,??0577,<0c5h>
 6935+ 2  1602	7F 88		        mov     r7,#arg0
 6936+ 2  1604	74 98		        mov     a,#arg1
 6937+ 2			        ifnb    <0c5h>
 6938+ 2			        set_cy  0c5h
 6939+ 3	N      0001	??0603  set     (0c5h and 1)
 6940+ 3	N      FFFF	        if      ??0603 eq 1
 6941+ 3  1606	D3		        setb    c
 6942+ 3			        else
 6943+ 3			        clr     c
 6944+ 3			        endif
 6945+ 2			        endif
 6946+ 2  1607	3F		        addc      a,r7
 6947+ 2			        ifnb    <0c5h>
 6948+ 2			        save_psw
 6949+ 3  1608	85 D0 70	        mov     saved_psw,PSW
 6950+ 2			        endif
 6951+ 2  160B	B4 21 0F	        cjne    a,#res,??0577
 6952+ 2			        ifnb    <0c5h>
 6953+ 2			        tst_psw <0c5h>,??0577
 6954+ 3  160E	E5 70		        mov     a,saved_psw
 6955+ 3  1610	54 C4		        anl     a,#0c4h
 6956+ 3  1612	64 C5		        xrl     a,#0c5h
 6957+ 3  1614	54 FE		        anl     a,#0feh
 6958+ 3  1616	70 05		        jnz     ??0577
 6959+ 2			        endif
 6960+ 1
 6961+ 1			        eot     'd',??0577
 6962+ 2			        putc    #'d'
 6963+ 3  1618			??0605:
 6964+ 3			        ;jnb     SCON.1,putc_loop
 6965+ 3			        ;clr     SCON.1
 6966+ 3  1618	75 99 64	        mov     SBUF,#'d'
 6967+ 2  161B	80 06		        sjmp    ??0604
 6968+ 2  161D			??0577:  putc    #'?'
 6969+ 3  161D			??0606:
 6970+ 3			        ;jnb     SCON.1,putc_loop
 6971+ 3			        ;clr     SCON.1
 6972+ 3  161D	75 99 3F	        mov     SBUF,#'?'
 6973+ 2  1620	75 6E 01	        mov     fail,#001h
 6974+ 2  1623			??0604:
 6975+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 6976+ 1
 6977+ 1			        ; Optionally test immediate addressing modes.
 6978+ 1
 6979+ 1	N      FFFF	        if      (01h and 1) ne 0
 6980+ 1			        ; Test <op> A, #arg1...
 6981+ 1			        top_mb  addc,a,??0581,<0c5h>
 6982+ 2  1623	74 98		        mov     a,#arg1
 6983+ 2			        ifnb    <0c5h>
 6984+ 2			        set_cy  0c5h
 6985+ 3	N      0001	??0607  set     (0c5h and 1)
 6986+ 3	N      FFFF	        if      ??0607 eq 1
 6987+ 3  1625	D3		        setb    c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 126



 Line  I  Addr  Code            Source

 6988+ 3			        else
 6989+ 3			        clr     c
 6990+ 3			        endif
 6991+ 2			        endif
 6992+ 2  1626	34 88		        addc      a,#arg0
 6993+ 2			        ifnb    <0c5h>
 6994+ 2			        save_psw
 6995+ 3  1628	85 D0 70	        mov     saved_psw,PSW
 6996+ 2			        endif
 6997+ 2  162B	F5 E0		        mov     ACC,a
 6998+ 2  162D	B4 21 0F	        cjne    a,#res,??0581
 6999+ 2			        ifnb    <0c5h>
 7000+ 2			        tst_psw <0c5h>,??0581
 7001+ 3  1630	E5 70		        mov     a,saved_psw
 7002+ 3  1632	54 C4		        anl     a,#0c4h
 7003+ 3  1634	64 C5		        xrl     a,#0c5h
 7004+ 3  1636	54 FE		        anl     a,#0feh
 7005+ 3  1638	70 05		        jnz     ??0581
 7006+ 2			        endif
 7007+ 1			        eot     'e',??0581
 7008+ 2			        putc    #'e'
 7009+ 3  163A			??0609:
 7010+ 3			        ;jnb     SCON.1,putc_loop
 7011+ 3			        ;clr     SCON.1
 7012+ 3  163A	75 99 65	        mov     SBUF,#'e'
 7013+ 2  163D	80 06		        sjmp    ??0608
 7014+ 2  163F			??0581:  putc    #'?'
 7015+ 3  163F			??0610:
 7016+ 3			        ;jnb     SCON.1,putc_loop
 7017+ 3			        ;clr     SCON.1
 7018+ 3  163F	75 99 3F	        mov     SBUF,#'?'
 7019+ 2  1642	75 6E 01	        mov     fail,#001h
 7020+ 2  1645			??0608:
 7021+ 1			        endif
 7022+ 1
 7023+ 1	N      0000	        if      (01h and 2) ne 0
 7024+ 1			        ; ...and <op> dir, #arg1
 7025+ 1			        top_mb  addc,dir0,??0582,<0c5h>
 7026+ 1			        eot     'f',??0582
 7027+ 1			        endif
 7028+ 1
 7029+ 1			        ; Optionally test <op> dir, A
 7030+ 1	N      0000	        if      (01h and 4) ne 0
 7031+ 1			        top_mc  addc,??0583,<0c5h>
 7032+ 1			        eot     'g',??0583
 7033+ 1			        endif
 7034+ 1
 7035:				        putc    #'4'
 7036+ 1  1645			??0611:
 7037+ 1			        ;jnb     SCON.1,putc_loop
 7038+ 1			        ;clr     SCON.1
 7039+ 1  1645	75 99 34	        mov     SBUF,#'4'
 7040:				        tst_alu addc,043h,0fbh,03fh,01h,081h     ;  CY /AC /OV (CY input)
 7041+ 1			        ; Put the argument and result data into variables for easier access
 7042+ 1	N      0043	        arg0    set 043h
 7043+ 1	N      00FB	        arg1    set 0fbh

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 127



 Line  I  Addr  Code            Source

 7044+ 1	N      003F	        res     set 03fh
 7045+ 1
 7046+ 1			        ; Test <op> A, dir
 7047+ 1			        top_ma  addc,dir0,??0613,<081h>
 7048+ 2  1648	75 60 43	        mov     dir0,#arg0
 7049+ 2  164B	74 FB		        mov     a,#arg1
 7050+ 2			        ifnb    <081h>
 7051+ 2			        set_cy  081h
 7052+ 3	N      0001	??0619  set     (081h and 1)
 7053+ 3	N      FFFF	        if      ??0619 eq 1
 7054+ 3  164D	D3		        setb    c
 7055+ 3			        else
 7056+ 3			        clr     c
 7057+ 3			        endif
 7058+ 2			        endif
 7059+ 2  164E	35 60		        addc      a,dir0
 7060+ 2			        ifnb    <081h>
 7061+ 2			        save_psw
 7062+ 3  1650	85 D0 70	        mov     saved_psw,PSW
 7063+ 2			        endif
 7064+ 2  1653	B4 3F 6B	        cjne    a,#res,??0613
 7065+ 2			        ifnb    <081h>
 7066+ 2			        tst_psw <081h>,??0613
 7067+ 3  1656	E5 70		        mov     a,saved_psw
 7068+ 3  1658	54 C4		        anl     a,#0c4h
 7069+ 3  165A	64 81		        xrl     a,#081h
 7070+ 3  165C	54 FE		        anl     a,#0feh
 7071+ 3  165E	70 61		        jnz     ??0613
 7072+ 2			        endif
 7073+ 1			        ; Test <op> A, @R0
 7074+ 1  1660	78 60		        mov     r0,#dir0
 7075+ 1			        top_ma  addc,@r0,??0613,<081h>
 7076+ 2  1662	76 43		        mov     @r0,#arg0
 7077+ 2  1664	74 FB		        mov     a,#arg1
 7078+ 2			        ifnb    <081h>
 7079+ 2			        set_cy  081h
 7080+ 3	N      0001	??0620  set     (081h and 1)
 7081+ 3	N      FFFF	        if      ??0620 eq 1
 7082+ 3  1666	D3		        setb    c
 7083+ 3			        else
 7084+ 3			        clr     c
 7085+ 3			        endif
 7086+ 2			        endif
 7087+ 2  1667	36		        addc      a,@r0
 7088+ 2			        ifnb    <081h>
 7089+ 2			        save_psw
 7090+ 3  1668	85 D0 70	        mov     saved_psw,PSW
 7091+ 2			        endif
 7092+ 2  166B	B4 3F 53	        cjne    a,#res,??0613
 7093+ 2			        ifnb    <081h>
 7094+ 2			        tst_psw <081h>,??0613
 7095+ 3  166E	E5 70		        mov     a,saved_psw
 7096+ 3  1670	54 C4		        anl     a,#0c4h
 7097+ 3  1672	64 81		        xrl     a,#081h
 7098+ 3  1674	54 FE		        anl     a,#0feh
 7099+ 3  1676	70 49		        jnz     ??0613

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 128



 Line  I  Addr  Code            Source

 7100+ 2			        endif
 7101+ 1			        ; Test <op> A, @R1
 7102+ 1  1678	79 31		        mov     r1,#031h
 7103+ 1			        top_ma  addc,@r1,??0613,<081h>
 7104+ 2  167A	77 43		        mov     @r1,#arg0
 7105+ 2  167C	74 FB		        mov     a,#arg1
 7106+ 2			        ifnb    <081h>
 7107+ 2			        set_cy  081h
 7108+ 3	N      0001	??0621  set     (081h and 1)
 7109+ 3	N      FFFF	        if      ??0621 eq 1
 7110+ 3  167E	D3		        setb    c
 7111+ 3			        else
 7112+ 3			        clr     c
 7113+ 3			        endif
 7114+ 2			        endif
 7115+ 2  167F	37		        addc      a,@r1
 7116+ 2			        ifnb    <081h>
 7117+ 2			        save_psw
 7118+ 3  1680	85 D0 70	        mov     saved_psw,PSW
 7119+ 2			        endif
 7120+ 2  1683	B4 3F 3B	        cjne    a,#res,??0613
 7121+ 2			        ifnb    <081h>
 7122+ 2			        tst_psw <081h>,??0613
 7123+ 3  1686	E5 70		        mov     a,saved_psw
 7124+ 3  1688	54 C4		        anl     a,#0c4h
 7125+ 3  168A	64 81		        xrl     a,#081h
 7126+ 3  168C	54 FE		        anl     a,#0feh
 7127+ 3  168E	70 31		        jnz     ??0613
 7128+ 2			        endif
 7129+ 1
 7130+ 1			        ; Now test <op> A, Rn for n in 0..7
 7131+ 1			        top_ma  addc,r0,??0613,<081h>
 7132+ 2  1690	78 43		        mov     r0,#arg0
 7133+ 2  1692	74 FB		        mov     a,#arg1
 7134+ 2			        ifnb    <081h>
 7135+ 2			        set_cy  081h
 7136+ 3	N      0001	??0622  set     (081h and 1)
 7137+ 3	N      FFFF	        if      ??0622 eq 1
 7138+ 3  1694	D3		        setb    c
 7139+ 3			        else
 7140+ 3			        clr     c
 7141+ 3			        endif
 7142+ 2			        endif
 7143+ 2  1695	38		        addc      a,r0
 7144+ 2			        ifnb    <081h>
 7145+ 2			        save_psw
 7146+ 3  1696	85 D0 70	        mov     saved_psw,PSW
 7147+ 2			        endif
 7148+ 2  1699	B4 3F 25	        cjne    a,#res,??0613
 7149+ 2			        ifnb    <081h>
 7150+ 2			        tst_psw <081h>,??0613
 7151+ 3  169C	E5 70		        mov     a,saved_psw
 7152+ 3  169E	54 C4		        anl     a,#0c4h
 7153+ 3  16A0	64 81		        xrl     a,#081h
 7154+ 3  16A2	54 FE		        anl     a,#0feh
 7155+ 3  16A4	70 1B		        jnz     ??0613

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 129



 Line  I  Addr  Code            Source

 7156+ 2			        endif
 7157+ 1			        top_ma  addc,r1,??0613,<081h>
 7158+ 2  16A6	79 43		        mov     r1,#arg0
 7159+ 2  16A8	74 FB		        mov     a,#arg1
 7160+ 2			        ifnb    <081h>
 7161+ 2			        set_cy  081h
 7162+ 3	N      0001	??0623  set     (081h and 1)
 7163+ 3	N      FFFF	        if      ??0623 eq 1
 7164+ 3  16AA	D3		        setb    c
 7165+ 3			        else
 7166+ 3			        clr     c
 7167+ 3			        endif
 7168+ 2			        endif
 7169+ 2  16AB	39		        addc      a,r1
 7170+ 2			        ifnb    <081h>
 7171+ 2			        save_psw
 7172+ 3  16AC	85 D0 70	        mov     saved_psw,PSW
 7173+ 2			        endif
 7174+ 2  16AF	B4 3F 0F	        cjne    a,#res,??0613
 7175+ 2			        ifnb    <081h>
 7176+ 2			        tst_psw <081h>,??0613
 7177+ 3  16B2	E5 70		        mov     a,saved_psw
 7178+ 3  16B4	54 C4		        anl     a,#0c4h
 7179+ 3  16B6	64 81		        xrl     a,#081h
 7180+ 3  16B8	54 FE		        anl     a,#0feh
 7181+ 3  16BA	70 05		        jnz     ??0613
 7182+ 2			        endif
 7183+ 1
 7184+ 1			        eot     'a',??0613
 7185+ 2			        putc    #'a'
 7186+ 3  16BC			??0625:
 7187+ 3			        ;jnb     SCON.1,putc_loop
 7188+ 3			        ;clr     SCON.1
 7189+ 3  16BC	75 99 61	        mov     SBUF,#'a'
 7190+ 2  16BF	80 06		        sjmp    ??0624
 7191+ 2  16C1			??0613:  putc    #'?'
 7192+ 3  16C1			??0626:
 7193+ 3			        ;jnb     SCON.1,putc_loop
 7194+ 3			        ;clr     SCON.1
 7195+ 3  16C1	75 99 3F	        mov     SBUF,#'?'
 7196+ 2  16C4	75 6E 01	        mov     fail,#001h
 7197+ 2  16C7			??0624:
 7198+ 1
 7199+ 1			        top_ma  addc,r2,??0614,<081h>
 7200+ 2  16C7	7A 43		        mov     r2,#arg0
 7201+ 2  16C9	74 FB		        mov     a,#arg1
 7202+ 2			        ifnb    <081h>
 7203+ 2			        set_cy  081h
 7204+ 3	N      0001	??0627  set     (081h and 1)
 7205+ 3	N      FFFF	        if      ??0627 eq 1
 7206+ 3  16CB	D3		        setb    c
 7207+ 3			        else
 7208+ 3			        clr     c
 7209+ 3			        endif
 7210+ 2			        endif
 7211+ 2  16CC	3A		        addc      a,r2

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 130



 Line  I  Addr  Code            Source

 7212+ 2			        ifnb    <081h>
 7213+ 2			        save_psw
 7214+ 3  16CD	85 D0 70	        mov     saved_psw,PSW
 7215+ 2			        endif
 7216+ 2  16D0	B4 3F 25	        cjne    a,#res,??0614
 7217+ 2			        ifnb    <081h>
 7218+ 2			        tst_psw <081h>,??0614
 7219+ 3  16D3	E5 70		        mov     a,saved_psw
 7220+ 3  16D5	54 C4		        anl     a,#0c4h
 7221+ 3  16D7	64 81		        xrl     a,#081h
 7222+ 3  16D9	54 FE		        anl     a,#0feh
 7223+ 3  16DB	70 1B		        jnz     ??0614
 7224+ 2			        endif
 7225+ 1			        top_ma  addc,r3,??0614,<081h>
 7226+ 2  16DD	7B 43		        mov     r3,#arg0
 7227+ 2  16DF	74 FB		        mov     a,#arg1
 7228+ 2			        ifnb    <081h>
 7229+ 2			        set_cy  081h
 7230+ 3	N      0001	??0628  set     (081h and 1)
 7231+ 3	N      FFFF	        if      ??0628 eq 1
 7232+ 3  16E1	D3		        setb    c
 7233+ 3			        else
 7234+ 3			        clr     c
 7235+ 3			        endif
 7236+ 2			        endif
 7237+ 2  16E2	3B		        addc      a,r3
 7238+ 2			        ifnb    <081h>
 7239+ 2			        save_psw
 7240+ 3  16E3	85 D0 70	        mov     saved_psw,PSW
 7241+ 2			        endif
 7242+ 2  16E6	B4 3F 0F	        cjne    a,#res,??0614
 7243+ 2			        ifnb    <081h>
 7244+ 2			        tst_psw <081h>,??0614
 7245+ 3  16E9	E5 70		        mov     a,saved_psw
 7246+ 3  16EB	54 C4		        anl     a,#0c4h
 7247+ 3  16ED	64 81		        xrl     a,#081h
 7248+ 3  16EF	54 FE		        anl     a,#0feh
 7249+ 3  16F1	70 05		        jnz     ??0614
 7250+ 2			        endif
 7251+ 1
 7252+ 1			        eot     'b',??0614
 7253+ 2			        putc    #'b'
 7254+ 3  16F3			??0630:
 7255+ 3			        ;jnb     SCON.1,putc_loop
 7256+ 3			        ;clr     SCON.1
 7257+ 3  16F3	75 99 62	        mov     SBUF,#'b'
 7258+ 2  16F6	80 06		        sjmp    ??0629
 7259+ 2  16F8			??0614:  putc    #'?'
 7260+ 3  16F8			??0631:
 7261+ 3			        ;jnb     SCON.1,putc_loop
 7262+ 3			        ;clr     SCON.1
 7263+ 3  16F8	75 99 3F	        mov     SBUF,#'?'
 7264+ 2  16FB	75 6E 01	        mov     fail,#001h
 7265+ 2  16FE			??0629:
 7266+ 1
 7267+ 1			        top_ma  addc,r4,??0615,<081h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 131



 Line  I  Addr  Code            Source

 7268+ 2  16FE	7C 43		        mov     r4,#arg0
 7269+ 2  1700	74 FB		        mov     a,#arg1
 7270+ 2			        ifnb    <081h>
 7271+ 2			        set_cy  081h
 7272+ 3	N      0001	??0632  set     (081h and 1)
 7273+ 3	N      FFFF	        if      ??0632 eq 1
 7274+ 3  1702	D3		        setb    c
 7275+ 3			        else
 7276+ 3			        clr     c
 7277+ 3			        endif
 7278+ 2			        endif
 7279+ 2  1703	3C		        addc      a,r4
 7280+ 2			        ifnb    <081h>
 7281+ 2			        save_psw
 7282+ 3  1704	85 D0 70	        mov     saved_psw,PSW
 7283+ 2			        endif
 7284+ 2  1707	B4 3F 25	        cjne    a,#res,??0615
 7285+ 2			        ifnb    <081h>
 7286+ 2			        tst_psw <081h>,??0615
 7287+ 3  170A	E5 70		        mov     a,saved_psw
 7288+ 3  170C	54 C4		        anl     a,#0c4h
 7289+ 3  170E	64 81		        xrl     a,#081h
 7290+ 3  1710	54 FE		        anl     a,#0feh
 7291+ 3  1712	70 1B		        jnz     ??0615
 7292+ 2			        endif
 7293+ 1			        top_ma  addc,r5,??0615,<081h>
 7294+ 2  1714	7D 43		        mov     r5,#arg0
 7295+ 2  1716	74 FB		        mov     a,#arg1
 7296+ 2			        ifnb    <081h>
 7297+ 2			        set_cy  081h
 7298+ 3	N      0001	??0633  set     (081h and 1)
 7299+ 3	N      FFFF	        if      ??0633 eq 1
 7300+ 3  1718	D3		        setb    c
 7301+ 3			        else
 7302+ 3			        clr     c
 7303+ 3			        endif
 7304+ 2			        endif
 7305+ 2  1719	3D		        addc      a,r5
 7306+ 2			        ifnb    <081h>
 7307+ 2			        save_psw
 7308+ 3  171A	85 D0 70	        mov     saved_psw,PSW
 7309+ 2			        endif
 7310+ 2  171D	B4 3F 0F	        cjne    a,#res,??0615
 7311+ 2			        ifnb    <081h>
 7312+ 2			        tst_psw <081h>,??0615
 7313+ 3  1720	E5 70		        mov     a,saved_psw
 7314+ 3  1722	54 C4		        anl     a,#0c4h
 7315+ 3  1724	64 81		        xrl     a,#081h
 7316+ 3  1726	54 FE		        anl     a,#0feh
 7317+ 3  1728	70 05		        jnz     ??0615
 7318+ 2			        endif
 7319+ 1
 7320+ 1			        eot     'c',??0615
 7321+ 2			        putc    #'c'
 7322+ 3  172A			??0635:
 7323+ 3			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 132



 Line  I  Addr  Code            Source

 7324+ 3			        ;clr     SCON.1
 7325+ 3  172A	75 99 63	        mov     SBUF,#'c'
 7326+ 2  172D	80 06		        sjmp    ??0634
 7327+ 2  172F			??0615:  putc    #'?'
 7328+ 3  172F			??0636:
 7329+ 3			        ;jnb     SCON.1,putc_loop
 7330+ 3			        ;clr     SCON.1
 7331+ 3  172F	75 99 3F	        mov     SBUF,#'?'
 7332+ 2  1732	75 6E 01	        mov     fail,#001h
 7333+ 2  1735			??0634:
 7334+ 1
 7335+ 1			        top_ma  addc,r6,??0612,<081h>
 7336+ 2  1735	7E 43		        mov     r6,#arg0
 7337+ 2  1737	74 FB		        mov     a,#arg1
 7338+ 2			        ifnb    <081h>
 7339+ 2			        set_cy  081h
 7340+ 3	N      0001	??0637  set     (081h and 1)
 7341+ 3	N      FFFF	        if      ??0637 eq 1
 7342+ 3  1739	D3		        setb    c
 7343+ 3			        else
 7344+ 3			        clr     c
 7345+ 3			        endif
 7346+ 2			        endif
 7347+ 2  173A	3E		        addc      a,r6
 7348+ 2			        ifnb    <081h>
 7349+ 2			        save_psw
 7350+ 3  173B	85 D0 70	        mov     saved_psw,PSW
 7351+ 2			        endif
 7352+ 2  173E	B4 3F 25	        cjne    a,#res,??0612
 7353+ 2			        ifnb    <081h>
 7354+ 2			        tst_psw <081h>,??0612
 7355+ 3  1741	E5 70		        mov     a,saved_psw
 7356+ 3  1743	54 C4		        anl     a,#0c4h
 7357+ 3  1745	64 81		        xrl     a,#081h
 7358+ 3  1747	54 FE		        anl     a,#0feh
 7359+ 3  1749	70 1B		        jnz     ??0612
 7360+ 2			        endif
 7361+ 1			        top_ma  addc,r7,??0612,<081h>
 7362+ 2  174B	7F 43		        mov     r7,#arg0
 7363+ 2  174D	74 FB		        mov     a,#arg1
 7364+ 2			        ifnb    <081h>
 7365+ 2			        set_cy  081h
 7366+ 3	N      0001	??0638  set     (081h and 1)
 7367+ 3	N      FFFF	        if      ??0638 eq 1
 7368+ 3  174F	D3		        setb    c
 7369+ 3			        else
 7370+ 3			        clr     c
 7371+ 3			        endif
 7372+ 2			        endif
 7373+ 2  1750	3F		        addc      a,r7
 7374+ 2			        ifnb    <081h>
 7375+ 2			        save_psw
 7376+ 3  1751	85 D0 70	        mov     saved_psw,PSW
 7377+ 2			        endif
 7378+ 2  1754	B4 3F 0F	        cjne    a,#res,??0612
 7379+ 2			        ifnb    <081h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 133



 Line  I  Addr  Code            Source

 7380+ 2			        tst_psw <081h>,??0612
 7381+ 3  1757	E5 70		        mov     a,saved_psw
 7382+ 3  1759	54 C4		        anl     a,#0c4h
 7383+ 3  175B	64 81		        xrl     a,#081h
 7384+ 3  175D	54 FE		        anl     a,#0feh
 7385+ 3  175F	70 05		        jnz     ??0612
 7386+ 2			        endif
 7387+ 1
 7388+ 1			        eot     'd',??0612
 7389+ 2			        putc    #'d'
 7390+ 3  1761			??0640:
 7391+ 3			        ;jnb     SCON.1,putc_loop
 7392+ 3			        ;clr     SCON.1
 7393+ 3  1761	75 99 64	        mov     SBUF,#'d'
 7394+ 2  1764	80 06		        sjmp    ??0639
 7395+ 2  1766			??0612:  putc    #'?'
 7396+ 3  1766			??0641:
 7397+ 3			        ;jnb     SCON.1,putc_loop
 7398+ 3			        ;clr     SCON.1
 7399+ 3  1766	75 99 3F	        mov     SBUF,#'?'
 7400+ 2  1769	75 6E 01	        mov     fail,#001h
 7401+ 2  176C			??0639:
 7402+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 7403+ 1
 7404+ 1			        ; Optionally test immediate addressing modes.
 7405+ 1
 7406+ 1	N      FFFF	        if      (01h and 1) ne 0
 7407+ 1			        ; Test <op> A, #arg1...
 7408+ 1			        top_mb  addc,a,??0616,<081h>
 7409+ 2  176C	74 FB		        mov     a,#arg1
 7410+ 2			        ifnb    <081h>
 7411+ 2			        set_cy  081h
 7412+ 3	N      0001	??0642  set     (081h and 1)
 7413+ 3	N      FFFF	        if      ??0642 eq 1
 7414+ 3  176E	D3		        setb    c
 7415+ 3			        else
 7416+ 3			        clr     c
 7417+ 3			        endif
 7418+ 2			        endif
 7419+ 2  176F	34 43		        addc      a,#arg0
 7420+ 2			        ifnb    <081h>
 7421+ 2			        save_psw
 7422+ 3  1771	85 D0 70	        mov     saved_psw,PSW
 7423+ 2			        endif
 7424+ 2  1774	F5 E0		        mov     ACC,a
 7425+ 2  1776	B4 3F 0F	        cjne    a,#res,??0616
 7426+ 2			        ifnb    <081h>
 7427+ 2			        tst_psw <081h>,??0616
 7428+ 3  1779	E5 70		        mov     a,saved_psw
 7429+ 3  177B	54 C4		        anl     a,#0c4h
 7430+ 3  177D	64 81		        xrl     a,#081h
 7431+ 3  177F	54 FE		        anl     a,#0feh
 7432+ 3  1781	70 05		        jnz     ??0616
 7433+ 2			        endif
 7434+ 1			        eot     'e',??0616
 7435+ 2			        putc    #'e'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 134



 Line  I  Addr  Code            Source

 7436+ 3  1783			??0644:
 7437+ 3			        ;jnb     SCON.1,putc_loop
 7438+ 3			        ;clr     SCON.1
 7439+ 3  1783	75 99 65	        mov     SBUF,#'e'
 7440+ 2  1786	80 06		        sjmp    ??0643
 7441+ 2  1788			??0616:  putc    #'?'
 7442+ 3  1788			??0645:
 7443+ 3			        ;jnb     SCON.1,putc_loop
 7444+ 3			        ;clr     SCON.1
 7445+ 3  1788	75 99 3F	        mov     SBUF,#'?'
 7446+ 2  178B	75 6E 01	        mov     fail,#001h
 7447+ 2  178E			??0643:
 7448+ 1			        endif
 7449+ 1
 7450+ 1	N      0000	        if      (01h and 2) ne 0
 7451+ 1			        ; ...and <op> dir, #arg1
 7452+ 1			        top_mb  addc,dir0,??0617,<081h>
 7453+ 1			        eot     'f',??0617
 7454+ 1			        endif
 7455+ 1
 7456+ 1			        ; Optionally test <op> dir, A
 7457+ 1	N      0000	        if      (01h and 4) ne 0
 7458+ 1			        top_mc  addc,??0618,<081h>
 7459+ 1			        eot     'g',??0618
 7460+ 1			        endif
 7461+ 1
 7462:
 7463:
 7464:				        put_crlf                    ; end of test series
 7465+ 1			        putc    #13
 7466+ 2  178E			??0646:
 7467+ 2			        ;jnb     SCON.1,putc_loop
 7468+ 2			        ;clr     SCON.1
 7469+ 2  178E	75 99 0D	        mov     SBUF,#13
 7470+ 1			        putc    #10
 7471+ 2  1791			??0647:
 7472+ 2			        ;jnb     SCON.1,putc_loop
 7473+ 2			        ;clr     SCON.1
 7474+ 2  1791	75 99 0A	        mov     SBUF,#10
 7475:
 7476:
 7477:				        ;-- Test series N ------------------------------------------------------
 7478:				        ; SUBB
 7479:				        ; (See comments for 'ALU opcode block test')
 7480:				        ; Note the test runs 4 times for different values of operands
 7481:
 7482:				        putc    #'N'                ; start of test series
 7483+ 1  1794			??0648:
 7484+ 1			        ;jnb     SCON.1,putc_loop
 7485+ 1			        ;clr     SCON.1
 7486+ 1  1794	75 99 4E	        mov     SBUF,#'N'
 7487:
 7488:				        putc    #'0'
 7489+ 1  1797			??0649:
 7490+ 1			        ;jnb     SCON.1,putc_loop
 7491+ 1			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 135



 Line  I  Addr  Code            Source

 7492+ 1  1797	75 99 30	        mov     SBUF,#'0'
 7493:				        tst_alu subb,070h,073h,003h,01h,000h     ; /CY /AC /OV
 7494+ 1			        ; Put the argument and result data into variables for easier access
 7495+ 1	N      0070	        arg0    set 070h
 7496+ 1	N      0073	        arg1    set 073h
 7497+ 1	N      0003	        res     set 003h
 7498+ 1
 7499+ 1			        ; Test <op> A, dir
 7500+ 1			        top_ma  subb,dir0,??0651,<000h>
 7501+ 2  179A	75 60 70	        mov     dir0,#arg0
 7502+ 2  179D	74 73		        mov     a,#arg1
 7503+ 2			        ifnb    <000h>
 7504+ 2			        set_cy  000h
 7505+ 3	N      0000	??0657  set     (000h and 1)
 7506+ 3	N      0000	        if      ??0657 eq 1
 7507+ 3			        setb    c
 7508+ 3			        else
 7509+ 3  179F	C3		        clr     c
 7510+ 3			        endif
 7511+ 2			        endif
 7512+ 2  17A0	95 60		        subb      a,dir0
 7513+ 2			        ifnb    <000h>
 7514+ 2			        save_psw
 7515+ 3  17A2	85 D0 70	        mov     saved_psw,PSW
 7516+ 2			        endif
 7517+ 2  17A5	B4 03 6B	        cjne    a,#res,??0651
 7518+ 2			        ifnb    <000h>
 7519+ 2			        tst_psw <000h>,??0651
 7520+ 3  17A8	E5 70		        mov     a,saved_psw
 7521+ 3  17AA	54 C4		        anl     a,#0c4h
 7522+ 3  17AC	64 00		        xrl     a,#000h
 7523+ 3  17AE	54 FE		        anl     a,#0feh
 7524+ 3  17B0	70 61		        jnz     ??0651
 7525+ 2			        endif
 7526+ 1			        ; Test <op> A, @R0
 7527+ 1  17B2	78 60		        mov     r0,#dir0
 7528+ 1			        top_ma  subb,@r0,??0651,<000h>
 7529+ 2  17B4	76 70		        mov     @r0,#arg0
 7530+ 2  17B6	74 73		        mov     a,#arg1
 7531+ 2			        ifnb    <000h>
 7532+ 2			        set_cy  000h
 7533+ 3	N      0000	??0658  set     (000h and 1)
 7534+ 3	N      0000	        if      ??0658 eq 1
 7535+ 3			        setb    c
 7536+ 3			        else
 7537+ 3  17B8	C3		        clr     c
 7538+ 3			        endif
 7539+ 2			        endif
 7540+ 2  17B9	96		        subb      a,@r0
 7541+ 2			        ifnb    <000h>
 7542+ 2			        save_psw
 7543+ 3  17BA	85 D0 70	        mov     saved_psw,PSW
 7544+ 2			        endif
 7545+ 2  17BD	B4 03 53	        cjne    a,#res,??0651
 7546+ 2			        ifnb    <000h>
 7547+ 2			        tst_psw <000h>,??0651

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 136



 Line  I  Addr  Code            Source

 7548+ 3  17C0	E5 70		        mov     a,saved_psw
 7549+ 3  17C2	54 C4		        anl     a,#0c4h
 7550+ 3  17C4	64 00		        xrl     a,#000h
 7551+ 3  17C6	54 FE		        anl     a,#0feh
 7552+ 3  17C8	70 49		        jnz     ??0651
 7553+ 2			        endif
 7554+ 1			        ; Test <op> A, @R1
 7555+ 1  17CA	79 31		        mov     r1,#031h
 7556+ 1			        top_ma  subb,@r1,??0651,<000h>
 7557+ 2  17CC	77 70		        mov     @r1,#arg0
 7558+ 2  17CE	74 73		        mov     a,#arg1
 7559+ 2			        ifnb    <000h>
 7560+ 2			        set_cy  000h
 7561+ 3	N      0000	??0659  set     (000h and 1)
 7562+ 3	N      0000	        if      ??0659 eq 1
 7563+ 3			        setb    c
 7564+ 3			        else
 7565+ 3  17D0	C3		        clr     c
 7566+ 3			        endif
 7567+ 2			        endif
 7568+ 2  17D1	97		        subb      a,@r1
 7569+ 2			        ifnb    <000h>
 7570+ 2			        save_psw
 7571+ 3  17D2	85 D0 70	        mov     saved_psw,PSW
 7572+ 2			        endif
 7573+ 2  17D5	B4 03 3B	        cjne    a,#res,??0651
 7574+ 2			        ifnb    <000h>
 7575+ 2			        tst_psw <000h>,??0651
 7576+ 3  17D8	E5 70		        mov     a,saved_psw
 7577+ 3  17DA	54 C4		        anl     a,#0c4h
 7578+ 3  17DC	64 00		        xrl     a,#000h
 7579+ 3  17DE	54 FE		        anl     a,#0feh
 7580+ 3  17E0	70 31		        jnz     ??0651
 7581+ 2			        endif
 7582+ 1
 7583+ 1			        ; Now test <op> A, Rn for n in 0..7
 7584+ 1			        top_ma  subb,r0,??0651,<000h>
 7585+ 2  17E2	78 70		        mov     r0,#arg0
 7586+ 2  17E4	74 73		        mov     a,#arg1
 7587+ 2			        ifnb    <000h>
 7588+ 2			        set_cy  000h
 7589+ 3	N      0000	??0660  set     (000h and 1)
 7590+ 3	N      0000	        if      ??0660 eq 1
 7591+ 3			        setb    c
 7592+ 3			        else
 7593+ 3  17E6	C3		        clr     c
 7594+ 3			        endif
 7595+ 2			        endif
 7596+ 2  17E7	98		        subb      a,r0
 7597+ 2			        ifnb    <000h>
 7598+ 2			        save_psw
 7599+ 3  17E8	85 D0 70	        mov     saved_psw,PSW
 7600+ 2			        endif
 7601+ 2  17EB	B4 03 25	        cjne    a,#res,??0651
 7602+ 2			        ifnb    <000h>
 7603+ 2			        tst_psw <000h>,??0651

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 137



 Line  I  Addr  Code            Source

 7604+ 3  17EE	E5 70		        mov     a,saved_psw
 7605+ 3  17F0	54 C4		        anl     a,#0c4h
 7606+ 3  17F2	64 00		        xrl     a,#000h
 7607+ 3  17F4	54 FE		        anl     a,#0feh
 7608+ 3  17F6	70 1B		        jnz     ??0651
 7609+ 2			        endif
 7610+ 1			        top_ma  subb,r1,??0651,<000h>
 7611+ 2  17F8	79 70		        mov     r1,#arg0
 7612+ 2  17FA	74 73		        mov     a,#arg1
 7613+ 2			        ifnb    <000h>
 7614+ 2			        set_cy  000h
 7615+ 3	N      0000	??0661  set     (000h and 1)
 7616+ 3	N      0000	        if      ??0661 eq 1
 7617+ 3			        setb    c
 7618+ 3			        else
 7619+ 3  17FC	C3		        clr     c
 7620+ 3			        endif
 7621+ 2			        endif
 7622+ 2  17FD	99		        subb      a,r1
 7623+ 2			        ifnb    <000h>
 7624+ 2			        save_psw
 7625+ 3  17FE	85 D0 70	        mov     saved_psw,PSW
 7626+ 2			        endif
 7627+ 2  1801	B4 03 0F	        cjne    a,#res,??0651
 7628+ 2			        ifnb    <000h>
 7629+ 2			        tst_psw <000h>,??0651
 7630+ 3  1804	E5 70		        mov     a,saved_psw
 7631+ 3  1806	54 C4		        anl     a,#0c4h
 7632+ 3  1808	64 00		        xrl     a,#000h
 7633+ 3  180A	54 FE		        anl     a,#0feh
 7634+ 3  180C	70 05		        jnz     ??0651
 7635+ 2			        endif
 7636+ 1
 7637+ 1			        eot     'a',??0651
 7638+ 2			        putc    #'a'
 7639+ 3  180E			??0663:
 7640+ 3			        ;jnb     SCON.1,putc_loop
 7641+ 3			        ;clr     SCON.1
 7642+ 3  180E	75 99 61	        mov     SBUF,#'a'
 7643+ 2  1811	80 06		        sjmp    ??0662
 7644+ 2  1813			??0651:  putc    #'?'
 7645+ 3  1813			??0664:
 7646+ 3			        ;jnb     SCON.1,putc_loop
 7647+ 3			        ;clr     SCON.1
 7648+ 3  1813	75 99 3F	        mov     SBUF,#'?'
 7649+ 2  1816	75 6E 01	        mov     fail,#001h
 7650+ 2  1819			??0662:
 7651+ 1
 7652+ 1			        top_ma  subb,r2,??0652,<000h>
 7653+ 2  1819	7A 70		        mov     r2,#arg0
 7654+ 2  181B	74 73		        mov     a,#arg1
 7655+ 2			        ifnb    <000h>
 7656+ 2			        set_cy  000h
 7657+ 3	N      0000	??0665  set     (000h and 1)
 7658+ 3	N      0000	        if      ??0665 eq 1
 7659+ 3			        setb    c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 138



 Line  I  Addr  Code            Source

 7660+ 3			        else
 7661+ 3  181D	C3		        clr     c
 7662+ 3			        endif
 7663+ 2			        endif
 7664+ 2  181E	9A		        subb      a,r2
 7665+ 2			        ifnb    <000h>
 7666+ 2			        save_psw
 7667+ 3  181F	85 D0 70	        mov     saved_psw,PSW
 7668+ 2			        endif
 7669+ 2  1822	B4 03 25	        cjne    a,#res,??0652
 7670+ 2			        ifnb    <000h>
 7671+ 2			        tst_psw <000h>,??0652
 7672+ 3  1825	E5 70		        mov     a,saved_psw
 7673+ 3  1827	54 C4		        anl     a,#0c4h
 7674+ 3  1829	64 00		        xrl     a,#000h
 7675+ 3  182B	54 FE		        anl     a,#0feh
 7676+ 3  182D	70 1B		        jnz     ??0652
 7677+ 2			        endif
 7678+ 1			        top_ma  subb,r3,??0652,<000h>
 7679+ 2  182F	7B 70		        mov     r3,#arg0
 7680+ 2  1831	74 73		        mov     a,#arg1
 7681+ 2			        ifnb    <000h>
 7682+ 2			        set_cy  000h
 7683+ 3	N      0000	??0666  set     (000h and 1)
 7684+ 3	N      0000	        if      ??0666 eq 1
 7685+ 3			        setb    c
 7686+ 3			        else
 7687+ 3  1833	C3		        clr     c
 7688+ 3			        endif
 7689+ 2			        endif
 7690+ 2  1834	9B		        subb      a,r3
 7691+ 2			        ifnb    <000h>
 7692+ 2			        save_psw
 7693+ 3  1835	85 D0 70	        mov     saved_psw,PSW
 7694+ 2			        endif
 7695+ 2  1838	B4 03 0F	        cjne    a,#res,??0652
 7696+ 2			        ifnb    <000h>
 7697+ 2			        tst_psw <000h>,??0652
 7698+ 3  183B	E5 70		        mov     a,saved_psw
 7699+ 3  183D	54 C4		        anl     a,#0c4h
 7700+ 3  183F	64 00		        xrl     a,#000h
 7701+ 3  1841	54 FE		        anl     a,#0feh
 7702+ 3  1843	70 05		        jnz     ??0652
 7703+ 2			        endif
 7704+ 1
 7705+ 1			        eot     'b',??0652
 7706+ 2			        putc    #'b'
 7707+ 3  1845			??0668:
 7708+ 3			        ;jnb     SCON.1,putc_loop
 7709+ 3			        ;clr     SCON.1
 7710+ 3  1845	75 99 62	        mov     SBUF,#'b'
 7711+ 2  1848	80 06		        sjmp    ??0667
 7712+ 2  184A			??0652:  putc    #'?'
 7713+ 3  184A			??0669:
 7714+ 3			        ;jnb     SCON.1,putc_loop
 7715+ 3			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 139



 Line  I  Addr  Code            Source

 7716+ 3  184A	75 99 3F	        mov     SBUF,#'?'
 7717+ 2  184D	75 6E 01	        mov     fail,#001h
 7718+ 2  1850			??0667:
 7719+ 1
 7720+ 1			        top_ma  subb,r4,??0653,<000h>
 7721+ 2  1850	7C 70		        mov     r4,#arg0
 7722+ 2  1852	74 73		        mov     a,#arg1
 7723+ 2			        ifnb    <000h>
 7724+ 2			        set_cy  000h
 7725+ 3	N      0000	??0670  set     (000h and 1)
 7726+ 3	N      0000	        if      ??0670 eq 1
 7727+ 3			        setb    c
 7728+ 3			        else
 7729+ 3  1854	C3		        clr     c
 7730+ 3			        endif
 7731+ 2			        endif
 7732+ 2  1855	9C		        subb      a,r4
 7733+ 2			        ifnb    <000h>
 7734+ 2			        save_psw
 7735+ 3  1856	85 D0 70	        mov     saved_psw,PSW
 7736+ 2			        endif
 7737+ 2  1859	B4 03 25	        cjne    a,#res,??0653
 7738+ 2			        ifnb    <000h>
 7739+ 2			        tst_psw <000h>,??0653
 7740+ 3  185C	E5 70		        mov     a,saved_psw
 7741+ 3  185E	54 C4		        anl     a,#0c4h
 7742+ 3  1860	64 00		        xrl     a,#000h
 7743+ 3  1862	54 FE		        anl     a,#0feh
 7744+ 3  1864	70 1B		        jnz     ??0653
 7745+ 2			        endif
 7746+ 1			        top_ma  subb,r5,??0653,<000h>
 7747+ 2  1866	7D 70		        mov     r5,#arg0
 7748+ 2  1868	74 73		        mov     a,#arg1
 7749+ 2			        ifnb    <000h>
 7750+ 2			        set_cy  000h
 7751+ 3	N      0000	??0671  set     (000h and 1)
 7752+ 3	N      0000	        if      ??0671 eq 1
 7753+ 3			        setb    c
 7754+ 3			        else
 7755+ 3  186A	C3		        clr     c
 7756+ 3			        endif
 7757+ 2			        endif
 7758+ 2  186B	9D		        subb      a,r5
 7759+ 2			        ifnb    <000h>
 7760+ 2			        save_psw
 7761+ 3  186C	85 D0 70	        mov     saved_psw,PSW
 7762+ 2			        endif
 7763+ 2  186F	B4 03 0F	        cjne    a,#res,??0653
 7764+ 2			        ifnb    <000h>
 7765+ 2			        tst_psw <000h>,??0653
 7766+ 3  1872	E5 70		        mov     a,saved_psw
 7767+ 3  1874	54 C4		        anl     a,#0c4h
 7768+ 3  1876	64 00		        xrl     a,#000h
 7769+ 3  1878	54 FE		        anl     a,#0feh
 7770+ 3  187A	70 05		        jnz     ??0653
 7771+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 140



 Line  I  Addr  Code            Source

 7772+ 1
 7773+ 1			        eot     'c',??0653
 7774+ 2			        putc    #'c'
 7775+ 3  187C			??0673:
 7776+ 3			        ;jnb     SCON.1,putc_loop
 7777+ 3			        ;clr     SCON.1
 7778+ 3  187C	75 99 63	        mov     SBUF,#'c'
 7779+ 2  187F	80 06		        sjmp    ??0672
 7780+ 2  1881			??0653:  putc    #'?'
 7781+ 3  1881			??0674:
 7782+ 3			        ;jnb     SCON.1,putc_loop
 7783+ 3			        ;clr     SCON.1
 7784+ 3  1881	75 99 3F	        mov     SBUF,#'?'
 7785+ 2  1884	75 6E 01	        mov     fail,#001h
 7786+ 2  1887			??0672:
 7787+ 1
 7788+ 1			        top_ma  subb,r6,??0650,<000h>
 7789+ 2  1887	7E 70		        mov     r6,#arg0
 7790+ 2  1889	74 73		        mov     a,#arg1
 7791+ 2			        ifnb    <000h>
 7792+ 2			        set_cy  000h
 7793+ 3	N      0000	??0675  set     (000h and 1)
 7794+ 3	N      0000	        if      ??0675 eq 1
 7795+ 3			        setb    c
 7796+ 3			        else
 7797+ 3  188B	C3		        clr     c
 7798+ 3			        endif
 7799+ 2			        endif
 7800+ 2  188C	9E		        subb      a,r6
 7801+ 2			        ifnb    <000h>
 7802+ 2			        save_psw
 7803+ 3  188D	85 D0 70	        mov     saved_psw,PSW
 7804+ 2			        endif
 7805+ 2  1890	B4 03 25	        cjne    a,#res,??0650
 7806+ 2			        ifnb    <000h>
 7807+ 2			        tst_psw <000h>,??0650
 7808+ 3  1893	E5 70		        mov     a,saved_psw
 7809+ 3  1895	54 C4		        anl     a,#0c4h
 7810+ 3  1897	64 00		        xrl     a,#000h
 7811+ 3  1899	54 FE		        anl     a,#0feh
 7812+ 3  189B	70 1B		        jnz     ??0650
 7813+ 2			        endif
 7814+ 1			        top_ma  subb,r7,??0650,<000h>
 7815+ 2  189D	7F 70		        mov     r7,#arg0
 7816+ 2  189F	74 73		        mov     a,#arg1
 7817+ 2			        ifnb    <000h>
 7818+ 2			        set_cy  000h
 7819+ 3	N      0000	??0676  set     (000h and 1)
 7820+ 3	N      0000	        if      ??0676 eq 1
 7821+ 3			        setb    c
 7822+ 3			        else
 7823+ 3  18A1	C3		        clr     c
 7824+ 3			        endif
 7825+ 2			        endif
 7826+ 2  18A2	9F		        subb      a,r7
 7827+ 2			        ifnb    <000h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 141



 Line  I  Addr  Code            Source

 7828+ 2			        save_psw
 7829+ 3  18A3	85 D0 70	        mov     saved_psw,PSW
 7830+ 2			        endif
 7831+ 2  18A6	B4 03 0F	        cjne    a,#res,??0650
 7832+ 2			        ifnb    <000h>
 7833+ 2			        tst_psw <000h>,??0650
 7834+ 3  18A9	E5 70		        mov     a,saved_psw
 7835+ 3  18AB	54 C4		        anl     a,#0c4h
 7836+ 3  18AD	64 00		        xrl     a,#000h
 7837+ 3  18AF	54 FE		        anl     a,#0feh
 7838+ 3  18B1	70 05		        jnz     ??0650
 7839+ 2			        endif
 7840+ 1
 7841+ 1			        eot     'd',??0650
 7842+ 2			        putc    #'d'
 7843+ 3  18B3			??0678:
 7844+ 3			        ;jnb     SCON.1,putc_loop
 7845+ 3			        ;clr     SCON.1
 7846+ 3  18B3	75 99 64	        mov     SBUF,#'d'
 7847+ 2  18B6	80 06		        sjmp    ??0677
 7848+ 2  18B8			??0650:  putc    #'?'
 7849+ 3  18B8			??0679:
 7850+ 3			        ;jnb     SCON.1,putc_loop
 7851+ 3			        ;clr     SCON.1
 7852+ 3  18B8	75 99 3F	        mov     SBUF,#'?'
 7853+ 2  18BB	75 6E 01	        mov     fail,#001h
 7854+ 2  18BE			??0677:
 7855+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 7856+ 1
 7857+ 1			        ; Optionally test immediate addressing modes.
 7858+ 1
 7859+ 1	N      FFFF	        if      (01h and 1) ne 0
 7860+ 1			        ; Test <op> A, #arg1...
 7861+ 1			        top_mb  subb,a,??0654,<000h>
 7862+ 2  18BE	74 73		        mov     a,#arg1
 7863+ 2			        ifnb    <000h>
 7864+ 2			        set_cy  000h
 7865+ 3	N      0000	??0680  set     (000h and 1)
 7866+ 3	N      0000	        if      ??0680 eq 1
 7867+ 3			        setb    c
 7868+ 3			        else
 7869+ 3  18C0	C3		        clr     c
 7870+ 3			        endif
 7871+ 2			        endif
 7872+ 2  18C1	94 70		        subb      a,#arg0
 7873+ 2			        ifnb    <000h>
 7874+ 2			        save_psw
 7875+ 3  18C3	85 D0 70	        mov     saved_psw,PSW
 7876+ 2			        endif
 7877+ 2  18C6	F5 E0		        mov     ACC,a
 7878+ 2  18C8	B4 03 0F	        cjne    a,#res,??0654
 7879+ 2			        ifnb    <000h>
 7880+ 2			        tst_psw <000h>,??0654
 7881+ 3  18CB	E5 70		        mov     a,saved_psw
 7882+ 3  18CD	54 C4		        anl     a,#0c4h
 7883+ 3  18CF	64 00		        xrl     a,#000h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 142



 Line  I  Addr  Code            Source

 7884+ 3  18D1	54 FE		        anl     a,#0feh
 7885+ 3  18D3	70 05		        jnz     ??0654
 7886+ 2			        endif
 7887+ 1			        eot     'e',??0654
 7888+ 2			        putc    #'e'
 7889+ 3  18D5			??0682:
 7890+ 3			        ;jnb     SCON.1,putc_loop
 7891+ 3			        ;clr     SCON.1
 7892+ 3  18D5	75 99 65	        mov     SBUF,#'e'
 7893+ 2  18D8	80 06		        sjmp    ??0681
 7894+ 2  18DA			??0654:  putc    #'?'
 7895+ 3  18DA			??0683:
 7896+ 3			        ;jnb     SCON.1,putc_loop
 7897+ 3			        ;clr     SCON.1
 7898+ 3  18DA	75 99 3F	        mov     SBUF,#'?'
 7899+ 2  18DD	75 6E 01	        mov     fail,#001h
 7900+ 2  18E0			??0681:
 7901+ 1			        endif
 7902+ 1
 7903+ 1	N      0000	        if      (01h and 2) ne 0
 7904+ 1			        ; ...and <op> dir, #arg1
 7905+ 1			        top_mb  subb,dir0,??0655,<000h>
 7906+ 1			        eot     'f',??0655
 7907+ 1			        endif
 7908+ 1
 7909+ 1			        ; Optionally test <op> dir, A
 7910+ 1	N      0000	        if      (01h and 4) ne 0
 7911+ 1			        top_mc  subb,??0656,<000h>
 7912+ 1			        eot     'g',??0656
 7913+ 1			        endif
 7914+ 1
 7915:				        putc    #'1'
 7916+ 1  18E0			??0684:
 7917+ 1			        ;jnb     SCON.1,putc_loop
 7918+ 1			        ;clr     SCON.1
 7919+ 1  18E0	75 99 31	        mov     SBUF,#'1'
 7920:				        tst_alu subb,070h,073h,002h,01h,001h     ; /CY /AC /OV (CY input)
 7921+ 1			        ; Put the argument and result data into variables for easier access
 7922+ 1	N      0070	        arg0    set 070h
 7923+ 1	N      0073	        arg1    set 073h
 7924+ 1	N      0002	        res     set 002h
 7925+ 1
 7926+ 1			        ; Test <op> A, dir
 7927+ 1			        top_ma  subb,dir0,??0686,<001h>
 7928+ 2  18E3	75 60 70	        mov     dir0,#arg0
 7929+ 2  18E6	74 73		        mov     a,#arg1
 7930+ 2			        ifnb    <001h>
 7931+ 2			        set_cy  001h
 7932+ 3	N      0001	??0692  set     (001h and 1)
 7933+ 3	N      FFFF	        if      ??0692 eq 1
 7934+ 3  18E8	D3		        setb    c
 7935+ 3			        else
 7936+ 3			        clr     c
 7937+ 3			        endif
 7938+ 2			        endif
 7939+ 2  18E9	95 60		        subb      a,dir0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 143



 Line  I  Addr  Code            Source

 7940+ 2			        ifnb    <001h>
 7941+ 2			        save_psw
 7942+ 3  18EB	85 D0 70	        mov     saved_psw,PSW
 7943+ 2			        endif
 7944+ 2  18EE	B4 02 6B	        cjne    a,#res,??0686
 7945+ 2			        ifnb    <001h>
 7946+ 2			        tst_psw <001h>,??0686
 7947+ 3  18F1	E5 70		        mov     a,saved_psw
 7948+ 3  18F3	54 C4		        anl     a,#0c4h
 7949+ 3  18F5	64 01		        xrl     a,#001h
 7950+ 3  18F7	54 FE		        anl     a,#0feh
 7951+ 3  18F9	70 61		        jnz     ??0686
 7952+ 2			        endif
 7953+ 1			        ; Test <op> A, @R0
 7954+ 1  18FB	78 60		        mov     r0,#dir0
 7955+ 1			        top_ma  subb,@r0,??0686,<001h>
 7956+ 2  18FD	76 70		        mov     @r0,#arg0
 7957+ 2  18FF	74 73		        mov     a,#arg1
 7958+ 2			        ifnb    <001h>
 7959+ 2			        set_cy  001h
 7960+ 3	N      0001	??0693  set     (001h and 1)
 7961+ 3	N      FFFF	        if      ??0693 eq 1
 7962+ 3  1901	D3		        setb    c
 7963+ 3			        else
 7964+ 3			        clr     c
 7965+ 3			        endif
 7966+ 2			        endif
 7967+ 2  1902	96		        subb      a,@r0
 7968+ 2			        ifnb    <001h>
 7969+ 2			        save_psw
 7970+ 3  1903	85 D0 70	        mov     saved_psw,PSW
 7971+ 2			        endif
 7972+ 2  1906	B4 02 53	        cjne    a,#res,??0686
 7973+ 2			        ifnb    <001h>
 7974+ 2			        tst_psw <001h>,??0686
 7975+ 3  1909	E5 70		        mov     a,saved_psw
 7976+ 3  190B	54 C4		        anl     a,#0c4h
 7977+ 3  190D	64 01		        xrl     a,#001h
 7978+ 3  190F	54 FE		        anl     a,#0feh
 7979+ 3  1911	70 49		        jnz     ??0686
 7980+ 2			        endif
 7981+ 1			        ; Test <op> A, @R1
 7982+ 1  1913	79 31		        mov     r1,#031h
 7983+ 1			        top_ma  subb,@r1,??0686,<001h>
 7984+ 2  1915	77 70		        mov     @r1,#arg0
 7985+ 2  1917	74 73		        mov     a,#arg1
 7986+ 2			        ifnb    <001h>
 7987+ 2			        set_cy  001h
 7988+ 3	N      0001	??0694  set     (001h and 1)
 7989+ 3	N      FFFF	        if      ??0694 eq 1
 7990+ 3  1919	D3		        setb    c
 7991+ 3			        else
 7992+ 3			        clr     c
 7993+ 3			        endif
 7994+ 2			        endif
 7995+ 2  191A	97		        subb      a,@r1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 144



 Line  I  Addr  Code            Source

 7996+ 2			        ifnb    <001h>
 7997+ 2			        save_psw
 7998+ 3  191B	85 D0 70	        mov     saved_psw,PSW
 7999+ 2			        endif
 8000+ 2  191E	B4 02 3B	        cjne    a,#res,??0686
 8001+ 2			        ifnb    <001h>
 8002+ 2			        tst_psw <001h>,??0686
 8003+ 3  1921	E5 70		        mov     a,saved_psw
 8004+ 3  1923	54 C4		        anl     a,#0c4h
 8005+ 3  1925	64 01		        xrl     a,#001h
 8006+ 3  1927	54 FE		        anl     a,#0feh
 8007+ 3  1929	70 31		        jnz     ??0686
 8008+ 2			        endif
 8009+ 1
 8010+ 1			        ; Now test <op> A, Rn for n in 0..7
 8011+ 1			        top_ma  subb,r0,??0686,<001h>
 8012+ 2  192B	78 70		        mov     r0,#arg0
 8013+ 2  192D	74 73		        mov     a,#arg1
 8014+ 2			        ifnb    <001h>
 8015+ 2			        set_cy  001h
 8016+ 3	N      0001	??0695  set     (001h and 1)
 8017+ 3	N      FFFF	        if      ??0695 eq 1
 8018+ 3  192F	D3		        setb    c
 8019+ 3			        else
 8020+ 3			        clr     c
 8021+ 3			        endif
 8022+ 2			        endif
 8023+ 2  1930	98		        subb      a,r0
 8024+ 2			        ifnb    <001h>
 8025+ 2			        save_psw
 8026+ 3  1931	85 D0 70	        mov     saved_psw,PSW
 8027+ 2			        endif
 8028+ 2  1934	B4 02 25	        cjne    a,#res,??0686
 8029+ 2			        ifnb    <001h>
 8030+ 2			        tst_psw <001h>,??0686
 8031+ 3  1937	E5 70		        mov     a,saved_psw
 8032+ 3  1939	54 C4		        anl     a,#0c4h
 8033+ 3  193B	64 01		        xrl     a,#001h
 8034+ 3  193D	54 FE		        anl     a,#0feh
 8035+ 3  193F	70 1B		        jnz     ??0686
 8036+ 2			        endif
 8037+ 1			        top_ma  subb,r1,??0686,<001h>
 8038+ 2  1941	79 70		        mov     r1,#arg0
 8039+ 2  1943	74 73		        mov     a,#arg1
 8040+ 2			        ifnb    <001h>
 8041+ 2			        set_cy  001h
 8042+ 3	N      0001	??0696  set     (001h and 1)
 8043+ 3	N      FFFF	        if      ??0696 eq 1
 8044+ 3  1945	D3		        setb    c
 8045+ 3			        else
 8046+ 3			        clr     c
 8047+ 3			        endif
 8048+ 2			        endif
 8049+ 2  1946	99		        subb      a,r1
 8050+ 2			        ifnb    <001h>
 8051+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 145



 Line  I  Addr  Code            Source

 8052+ 3  1947	85 D0 70	        mov     saved_psw,PSW
 8053+ 2			        endif
 8054+ 2  194A	B4 02 0F	        cjne    a,#res,??0686
 8055+ 2			        ifnb    <001h>
 8056+ 2			        tst_psw <001h>,??0686
 8057+ 3  194D	E5 70		        mov     a,saved_psw
 8058+ 3  194F	54 C4		        anl     a,#0c4h
 8059+ 3  1951	64 01		        xrl     a,#001h
 8060+ 3  1953	54 FE		        anl     a,#0feh
 8061+ 3  1955	70 05		        jnz     ??0686
 8062+ 2			        endif
 8063+ 1
 8064+ 1			        eot     'a',??0686
 8065+ 2			        putc    #'a'
 8066+ 3  1957			??0698:
 8067+ 3			        ;jnb     SCON.1,putc_loop
 8068+ 3			        ;clr     SCON.1
 8069+ 3  1957	75 99 61	        mov     SBUF,#'a'
 8070+ 2  195A	80 06		        sjmp    ??0697
 8071+ 2  195C			??0686:  putc    #'?'
 8072+ 3  195C			??0699:
 8073+ 3			        ;jnb     SCON.1,putc_loop
 8074+ 3			        ;clr     SCON.1
 8075+ 3  195C	75 99 3F	        mov     SBUF,#'?'
 8076+ 2  195F	75 6E 01	        mov     fail,#001h
 8077+ 2  1962			??0697:
 8078+ 1
 8079+ 1			        top_ma  subb,r2,??0687,<001h>
 8080+ 2  1962	7A 70		        mov     r2,#arg0
 8081+ 2  1964	74 73		        mov     a,#arg1
 8082+ 2			        ifnb    <001h>
 8083+ 2			        set_cy  001h
 8084+ 3	N      0001	??0700  set     (001h and 1)
 8085+ 3	N      FFFF	        if      ??0700 eq 1
 8086+ 3  1966	D3		        setb    c
 8087+ 3			        else
 8088+ 3			        clr     c
 8089+ 3			        endif
 8090+ 2			        endif
 8091+ 2  1967	9A		        subb      a,r2
 8092+ 2			        ifnb    <001h>
 8093+ 2			        save_psw
 8094+ 3  1968	85 D0 70	        mov     saved_psw,PSW
 8095+ 2			        endif
 8096+ 2  196B	B4 02 25	        cjne    a,#res,??0687
 8097+ 2			        ifnb    <001h>
 8098+ 2			        tst_psw <001h>,??0687
 8099+ 3  196E	E5 70		        mov     a,saved_psw
 8100+ 3  1970	54 C4		        anl     a,#0c4h
 8101+ 3  1972	64 01		        xrl     a,#001h
 8102+ 3  1974	54 FE		        anl     a,#0feh
 8103+ 3  1976	70 1B		        jnz     ??0687
 8104+ 2			        endif
 8105+ 1			        top_ma  subb,r3,??0687,<001h>
 8106+ 2  1978	7B 70		        mov     r3,#arg0
 8107+ 2  197A	74 73		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 146



 Line  I  Addr  Code            Source

 8108+ 2			        ifnb    <001h>
 8109+ 2			        set_cy  001h
 8110+ 3	N      0001	??0701  set     (001h and 1)
 8111+ 3	N      FFFF	        if      ??0701 eq 1
 8112+ 3  197C	D3		        setb    c
 8113+ 3			        else
 8114+ 3			        clr     c
 8115+ 3			        endif
 8116+ 2			        endif
 8117+ 2  197D	9B		        subb      a,r3
 8118+ 2			        ifnb    <001h>
 8119+ 2			        save_psw
 8120+ 3  197E	85 D0 70	        mov     saved_psw,PSW
 8121+ 2			        endif
 8122+ 2  1981	B4 02 0F	        cjne    a,#res,??0687
 8123+ 2			        ifnb    <001h>
 8124+ 2			        tst_psw <001h>,??0687
 8125+ 3  1984	E5 70		        mov     a,saved_psw
 8126+ 3  1986	54 C4		        anl     a,#0c4h
 8127+ 3  1988	64 01		        xrl     a,#001h
 8128+ 3  198A	54 FE		        anl     a,#0feh
 8129+ 3  198C	70 05		        jnz     ??0687
 8130+ 2			        endif
 8131+ 1
 8132+ 1			        eot     'b',??0687
 8133+ 2			        putc    #'b'
 8134+ 3  198E			??0703:
 8135+ 3			        ;jnb     SCON.1,putc_loop
 8136+ 3			        ;clr     SCON.1
 8137+ 3  198E	75 99 62	        mov     SBUF,#'b'
 8138+ 2  1991	80 06		        sjmp    ??0702
 8139+ 2  1993			??0687:  putc    #'?'
 8140+ 3  1993			??0704:
 8141+ 3			        ;jnb     SCON.1,putc_loop
 8142+ 3			        ;clr     SCON.1
 8143+ 3  1993	75 99 3F	        mov     SBUF,#'?'
 8144+ 2  1996	75 6E 01	        mov     fail,#001h
 8145+ 2  1999			??0702:
 8146+ 1
 8147+ 1			        top_ma  subb,r4,??0688,<001h>
 8148+ 2  1999	7C 70		        mov     r4,#arg0
 8149+ 2  199B	74 73		        mov     a,#arg1
 8150+ 2			        ifnb    <001h>
 8151+ 2			        set_cy  001h
 8152+ 3	N      0001	??0705  set     (001h and 1)
 8153+ 3	N      FFFF	        if      ??0705 eq 1
 8154+ 3  199D	D3		        setb    c
 8155+ 3			        else
 8156+ 3			        clr     c
 8157+ 3			        endif
 8158+ 2			        endif
 8159+ 2  199E	9C		        subb      a,r4
 8160+ 2			        ifnb    <001h>
 8161+ 2			        save_psw
 8162+ 3  199F	85 D0 70	        mov     saved_psw,PSW
 8163+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 147



 Line  I  Addr  Code            Source

 8164+ 2  19A2	B4 02 25	        cjne    a,#res,??0688
 8165+ 2			        ifnb    <001h>
 8166+ 2			        tst_psw <001h>,??0688
 8167+ 3  19A5	E5 70		        mov     a,saved_psw
 8168+ 3  19A7	54 C4		        anl     a,#0c4h
 8169+ 3  19A9	64 01		        xrl     a,#001h
 8170+ 3  19AB	54 FE		        anl     a,#0feh
 8171+ 3  19AD	70 1B		        jnz     ??0688
 8172+ 2			        endif
 8173+ 1			        top_ma  subb,r5,??0688,<001h>
 8174+ 2  19AF	7D 70		        mov     r5,#arg0
 8175+ 2  19B1	74 73		        mov     a,#arg1
 8176+ 2			        ifnb    <001h>
 8177+ 2			        set_cy  001h
 8178+ 3	N      0001	??0706  set     (001h and 1)
 8179+ 3	N      FFFF	        if      ??0706 eq 1
 8180+ 3  19B3	D3		        setb    c
 8181+ 3			        else
 8182+ 3			        clr     c
 8183+ 3			        endif
 8184+ 2			        endif
 8185+ 2  19B4	9D		        subb      a,r5
 8186+ 2			        ifnb    <001h>
 8187+ 2			        save_psw
 8188+ 3  19B5	85 D0 70	        mov     saved_psw,PSW
 8189+ 2			        endif
 8190+ 2  19B8	B4 02 0F	        cjne    a,#res,??0688
 8191+ 2			        ifnb    <001h>
 8192+ 2			        tst_psw <001h>,??0688
 8193+ 3  19BB	E5 70		        mov     a,saved_psw
 8194+ 3  19BD	54 C4		        anl     a,#0c4h
 8195+ 3  19BF	64 01		        xrl     a,#001h
 8196+ 3  19C1	54 FE		        anl     a,#0feh
 8197+ 3  19C3	70 05		        jnz     ??0688
 8198+ 2			        endif
 8199+ 1
 8200+ 1			        eot     'c',??0688
 8201+ 2			        putc    #'c'
 8202+ 3  19C5			??0708:
 8203+ 3			        ;jnb     SCON.1,putc_loop
 8204+ 3			        ;clr     SCON.1
 8205+ 3  19C5	75 99 63	        mov     SBUF,#'c'
 8206+ 2  19C8	80 06		        sjmp    ??0707
 8207+ 2  19CA			??0688:  putc    #'?'
 8208+ 3  19CA			??0709:
 8209+ 3			        ;jnb     SCON.1,putc_loop
 8210+ 3			        ;clr     SCON.1
 8211+ 3  19CA	75 99 3F	        mov     SBUF,#'?'
 8212+ 2  19CD	75 6E 01	        mov     fail,#001h
 8213+ 2  19D0			??0707:
 8214+ 1
 8215+ 1			        top_ma  subb,r6,??0685,<001h>
 8216+ 2  19D0	7E 70		        mov     r6,#arg0
 8217+ 2  19D2	74 73		        mov     a,#arg1
 8218+ 2			        ifnb    <001h>
 8219+ 2			        set_cy  001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 148



 Line  I  Addr  Code            Source

 8220+ 3	N      0001	??0710  set     (001h and 1)
 8221+ 3	N      FFFF	        if      ??0710 eq 1
 8222+ 3  19D4	D3		        setb    c
 8223+ 3			        else
 8224+ 3			        clr     c
 8225+ 3			        endif
 8226+ 2			        endif
 8227+ 2  19D5	9E		        subb      a,r6
 8228+ 2			        ifnb    <001h>
 8229+ 2			        save_psw
 8230+ 3  19D6	85 D0 70	        mov     saved_psw,PSW
 8231+ 2			        endif
 8232+ 2  19D9	B4 02 25	        cjne    a,#res,??0685
 8233+ 2			        ifnb    <001h>
 8234+ 2			        tst_psw <001h>,??0685
 8235+ 3  19DC	E5 70		        mov     a,saved_psw
 8236+ 3  19DE	54 C4		        anl     a,#0c4h
 8237+ 3  19E0	64 01		        xrl     a,#001h
 8238+ 3  19E2	54 FE		        anl     a,#0feh
 8239+ 3  19E4	70 1B		        jnz     ??0685
 8240+ 2			        endif
 8241+ 1			        top_ma  subb,r7,??0685,<001h>
 8242+ 2  19E6	7F 70		        mov     r7,#arg0
 8243+ 2  19E8	74 73		        mov     a,#arg1
 8244+ 2			        ifnb    <001h>
 8245+ 2			        set_cy  001h
 8246+ 3	N      0001	??0711  set     (001h and 1)
 8247+ 3	N      FFFF	        if      ??0711 eq 1
 8248+ 3  19EA	D3		        setb    c
 8249+ 3			        else
 8250+ 3			        clr     c
 8251+ 3			        endif
 8252+ 2			        endif
 8253+ 2  19EB	9F		        subb      a,r7
 8254+ 2			        ifnb    <001h>
 8255+ 2			        save_psw
 8256+ 3  19EC	85 D0 70	        mov     saved_psw,PSW
 8257+ 2			        endif
 8258+ 2  19EF	B4 02 0F	        cjne    a,#res,??0685
 8259+ 2			        ifnb    <001h>
 8260+ 2			        tst_psw <001h>,??0685
 8261+ 3  19F2	E5 70		        mov     a,saved_psw
 8262+ 3  19F4	54 C4		        anl     a,#0c4h
 8263+ 3  19F6	64 01		        xrl     a,#001h
 8264+ 3  19F8	54 FE		        anl     a,#0feh
 8265+ 3  19FA	70 05		        jnz     ??0685
 8266+ 2			        endif
 8267+ 1
 8268+ 1			        eot     'd',??0685
 8269+ 2			        putc    #'d'
 8270+ 3  19FC			??0713:
 8271+ 3			        ;jnb     SCON.1,putc_loop
 8272+ 3			        ;clr     SCON.1
 8273+ 3  19FC	75 99 64	        mov     SBUF,#'d'
 8274+ 2  19FF	80 06		        sjmp    ??0712
 8275+ 2  1A01			??0685:  putc    #'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 149



 Line  I  Addr  Code            Source

 8276+ 3  1A01			??0714:
 8277+ 3			        ;jnb     SCON.1,putc_loop
 8278+ 3			        ;clr     SCON.1
 8279+ 3  1A01	75 99 3F	        mov     SBUF,#'?'
 8280+ 2  1A04	75 6E 01	        mov     fail,#001h
 8281+ 2  1A07			??0712:
 8282+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 8283+ 1
 8284+ 1			        ; Optionally test immediate addressing modes.
 8285+ 1
 8286+ 1	N      FFFF	        if      (01h and 1) ne 0
 8287+ 1			        ; Test <op> A, #arg1...
 8288+ 1			        top_mb  subb,a,??0689,<001h>
 8289+ 2  1A07	74 73		        mov     a,#arg1
 8290+ 2			        ifnb    <001h>
 8291+ 2			        set_cy  001h
 8292+ 3	N      0001	??0715  set     (001h and 1)
 8293+ 3	N      FFFF	        if      ??0715 eq 1
 8294+ 3  1A09	D3		        setb    c
 8295+ 3			        else
 8296+ 3			        clr     c
 8297+ 3			        endif
 8298+ 2			        endif
 8299+ 2  1A0A	94 70		        subb      a,#arg0
 8300+ 2			        ifnb    <001h>
 8301+ 2			        save_psw
 8302+ 3  1A0C	85 D0 70	        mov     saved_psw,PSW
 8303+ 2			        endif
 8304+ 2  1A0F	F5 E0		        mov     ACC,a
 8305+ 2  1A11	B4 02 0F	        cjne    a,#res,??0689
 8306+ 2			        ifnb    <001h>
 8307+ 2			        tst_psw <001h>,??0689
 8308+ 3  1A14	E5 70		        mov     a,saved_psw
 8309+ 3  1A16	54 C4		        anl     a,#0c4h
 8310+ 3  1A18	64 01		        xrl     a,#001h
 8311+ 3  1A1A	54 FE		        anl     a,#0feh
 8312+ 3  1A1C	70 05		        jnz     ??0689
 8313+ 2			        endif
 8314+ 1			        eot     'e',??0689
 8315+ 2			        putc    #'e'
 8316+ 3  1A1E			??0717:
 8317+ 3			        ;jnb     SCON.1,putc_loop
 8318+ 3			        ;clr     SCON.1
 8319+ 3  1A1E	75 99 65	        mov     SBUF,#'e'
 8320+ 2  1A21	80 06		        sjmp    ??0716
 8321+ 2  1A23			??0689:  putc    #'?'
 8322+ 3  1A23			??0718:
 8323+ 3			        ;jnb     SCON.1,putc_loop
 8324+ 3			        ;clr     SCON.1
 8325+ 3  1A23	75 99 3F	        mov     SBUF,#'?'
 8326+ 2  1A26	75 6E 01	        mov     fail,#001h
 8327+ 2  1A29			??0716:
 8328+ 1			        endif
 8329+ 1
 8330+ 1	N      0000	        if      (01h and 2) ne 0
 8331+ 1			        ; ...and <op> dir, #arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 150



 Line  I  Addr  Code            Source

 8332+ 1			        top_mb  subb,dir0,??0690,<001h>
 8333+ 1			        eot     'f',??0690
 8334+ 1			        endif
 8335+ 1
 8336+ 1			        ; Optionally test <op> dir, A
 8337+ 1	N      0000	        if      (01h and 4) ne 0
 8338+ 1			        top_mc  subb,??0691,<001h>
 8339+ 1			        eot     'g',??0691
 8340+ 1			        endif
 8341+ 1
 8342:				        putc    #'2'
 8343+ 1  1A29			??0719:
 8344+ 1			        ;jnb     SCON.1,putc_loop
 8345+ 1			        ;clr     SCON.1
 8346+ 1  1A29	75 99 32	        mov     SBUF,#'2'
 8347:				        tst_alu subb,0c3h,0c5h,002h,01h,000h     ; /CY  AC /OV
 8348+ 1			        ; Put the argument and result data into variables for easier access
 8349+ 1	N      00C3	        arg0    set 0c3h
 8350+ 1	N      00C5	        arg1    set 0c5h
 8351+ 1	N      0002	        res     set 002h
 8352+ 1
 8353+ 1			        ; Test <op> A, dir
 8354+ 1			        top_ma  subb,dir0,??0721,<000h>
 8355+ 2  1A2C	75 60 C3	        mov     dir0,#arg0
 8356+ 2  1A2F	74 C5		        mov     a,#arg1
 8357+ 2			        ifnb    <000h>
 8358+ 2			        set_cy  000h
 8359+ 3	N      0000	??0727  set     (000h and 1)
 8360+ 3	N      0000	        if      ??0727 eq 1
 8361+ 3			        setb    c
 8362+ 3			        else
 8363+ 3  1A31	C3		        clr     c
 8364+ 3			        endif
 8365+ 2			        endif
 8366+ 2  1A32	95 60		        subb      a,dir0
 8367+ 2			        ifnb    <000h>
 8368+ 2			        save_psw
 8369+ 3  1A34	85 D0 70	        mov     saved_psw,PSW
 8370+ 2			        endif
 8371+ 2  1A37	B4 02 6B	        cjne    a,#res,??0721
 8372+ 2			        ifnb    <000h>
 8373+ 2			        tst_psw <000h>,??0721
 8374+ 3  1A3A	E5 70		        mov     a,saved_psw
 8375+ 3  1A3C	54 C4		        anl     a,#0c4h
 8376+ 3  1A3E	64 00		        xrl     a,#000h
 8377+ 3  1A40	54 FE		        anl     a,#0feh
 8378+ 3  1A42	70 61		        jnz     ??0721
 8379+ 2			        endif
 8380+ 1			        ; Test <op> A, @R0
 8381+ 1  1A44	78 60		        mov     r0,#dir0
 8382+ 1			        top_ma  subb,@r0,??0721,<000h>
 8383+ 2  1A46	76 C3		        mov     @r0,#arg0
 8384+ 2  1A48	74 C5		        mov     a,#arg1
 8385+ 2			        ifnb    <000h>
 8386+ 2			        set_cy  000h
 8387+ 3	N      0000	??0728  set     (000h and 1)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 151



 Line  I  Addr  Code            Source

 8388+ 3	N      0000	        if      ??0728 eq 1
 8389+ 3			        setb    c
 8390+ 3			        else
 8391+ 3  1A4A	C3		        clr     c
 8392+ 3			        endif
 8393+ 2			        endif
 8394+ 2  1A4B	96		        subb      a,@r0
 8395+ 2			        ifnb    <000h>
 8396+ 2			        save_psw
 8397+ 3  1A4C	85 D0 70	        mov     saved_psw,PSW
 8398+ 2			        endif
 8399+ 2  1A4F	B4 02 53	        cjne    a,#res,??0721
 8400+ 2			        ifnb    <000h>
 8401+ 2			        tst_psw <000h>,??0721
 8402+ 3  1A52	E5 70		        mov     a,saved_psw
 8403+ 3  1A54	54 C4		        anl     a,#0c4h
 8404+ 3  1A56	64 00		        xrl     a,#000h
 8405+ 3  1A58	54 FE		        anl     a,#0feh
 8406+ 3  1A5A	70 49		        jnz     ??0721
 8407+ 2			        endif
 8408+ 1			        ; Test <op> A, @R1
 8409+ 1  1A5C	79 31		        mov     r1,#031h
 8410+ 1			        top_ma  subb,@r1,??0721,<000h>
 8411+ 2  1A5E	77 C3		        mov     @r1,#arg0
 8412+ 2  1A60	74 C5		        mov     a,#arg1
 8413+ 2			        ifnb    <000h>
 8414+ 2			        set_cy  000h
 8415+ 3	N      0000	??0729  set     (000h and 1)
 8416+ 3	N      0000	        if      ??0729 eq 1
 8417+ 3			        setb    c
 8418+ 3			        else
 8419+ 3  1A62	C3		        clr     c
 8420+ 3			        endif
 8421+ 2			        endif
 8422+ 2  1A63	97		        subb      a,@r1
 8423+ 2			        ifnb    <000h>
 8424+ 2			        save_psw
 8425+ 3  1A64	85 D0 70	        mov     saved_psw,PSW
 8426+ 2			        endif
 8427+ 2  1A67	B4 02 3B	        cjne    a,#res,??0721
 8428+ 2			        ifnb    <000h>
 8429+ 2			        tst_psw <000h>,??0721
 8430+ 3  1A6A	E5 70		        mov     a,saved_psw
 8431+ 3  1A6C	54 C4		        anl     a,#0c4h
 8432+ 3  1A6E	64 00		        xrl     a,#000h
 8433+ 3  1A70	54 FE		        anl     a,#0feh
 8434+ 3  1A72	70 31		        jnz     ??0721
 8435+ 2			        endif
 8436+ 1
 8437+ 1			        ; Now test <op> A, Rn for n in 0..7
 8438+ 1			        top_ma  subb,r0,??0721,<000h>
 8439+ 2  1A74	78 C3		        mov     r0,#arg0
 8440+ 2  1A76	74 C5		        mov     a,#arg1
 8441+ 2			        ifnb    <000h>
 8442+ 2			        set_cy  000h
 8443+ 3	N      0000	??0730  set     (000h and 1)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 152



 Line  I  Addr  Code            Source

 8444+ 3	N      0000	        if      ??0730 eq 1
 8445+ 3			        setb    c
 8446+ 3			        else
 8447+ 3  1A78	C3		        clr     c
 8448+ 3			        endif
 8449+ 2			        endif
 8450+ 2  1A79	98		        subb      a,r0
 8451+ 2			        ifnb    <000h>
 8452+ 2			        save_psw
 8453+ 3  1A7A	85 D0 70	        mov     saved_psw,PSW
 8454+ 2			        endif
 8455+ 2  1A7D	B4 02 25	        cjne    a,#res,??0721
 8456+ 2			        ifnb    <000h>
 8457+ 2			        tst_psw <000h>,??0721
 8458+ 3  1A80	E5 70		        mov     a,saved_psw
 8459+ 3  1A82	54 C4		        anl     a,#0c4h
 8460+ 3  1A84	64 00		        xrl     a,#000h
 8461+ 3  1A86	54 FE		        anl     a,#0feh
 8462+ 3  1A88	70 1B		        jnz     ??0721
 8463+ 2			        endif
 8464+ 1			        top_ma  subb,r1,??0721,<000h>
 8465+ 2  1A8A	79 C3		        mov     r1,#arg0
 8466+ 2  1A8C	74 C5		        mov     a,#arg1
 8467+ 2			        ifnb    <000h>
 8468+ 2			        set_cy  000h
 8469+ 3	N      0000	??0731  set     (000h and 1)
 8470+ 3	N      0000	        if      ??0731 eq 1
 8471+ 3			        setb    c
 8472+ 3			        else
 8473+ 3  1A8E	C3		        clr     c
 8474+ 3			        endif
 8475+ 2			        endif
 8476+ 2  1A8F	99		        subb      a,r1
 8477+ 2			        ifnb    <000h>
 8478+ 2			        save_psw
 8479+ 3  1A90	85 D0 70	        mov     saved_psw,PSW
 8480+ 2			        endif
 8481+ 2  1A93	B4 02 0F	        cjne    a,#res,??0721
 8482+ 2			        ifnb    <000h>
 8483+ 2			        tst_psw <000h>,??0721
 8484+ 3  1A96	E5 70		        mov     a,saved_psw
 8485+ 3  1A98	54 C4		        anl     a,#0c4h
 8486+ 3  1A9A	64 00		        xrl     a,#000h
 8487+ 3  1A9C	54 FE		        anl     a,#0feh
 8488+ 3  1A9E	70 05		        jnz     ??0721
 8489+ 2			        endif
 8490+ 1
 8491+ 1			        eot     'a',??0721
 8492+ 2			        putc    #'a'
 8493+ 3  1AA0			??0733:
 8494+ 3			        ;jnb     SCON.1,putc_loop
 8495+ 3			        ;clr     SCON.1
 8496+ 3  1AA0	75 99 61	        mov     SBUF,#'a'
 8497+ 2  1AA3	80 06		        sjmp    ??0732
 8498+ 2  1AA5			??0721:  putc    #'?'
 8499+ 3  1AA5			??0734:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 153



 Line  I  Addr  Code            Source

 8500+ 3			        ;jnb     SCON.1,putc_loop
 8501+ 3			        ;clr     SCON.1
 8502+ 3  1AA5	75 99 3F	        mov     SBUF,#'?'
 8503+ 2  1AA8	75 6E 01	        mov     fail,#001h
 8504+ 2  1AAB			??0732:
 8505+ 1
 8506+ 1			        top_ma  subb,r2,??0722,<000h>
 8507+ 2  1AAB	7A C3		        mov     r2,#arg0
 8508+ 2  1AAD	74 C5		        mov     a,#arg1
 8509+ 2			        ifnb    <000h>
 8510+ 2			        set_cy  000h
 8511+ 3	N      0000	??0735  set     (000h and 1)
 8512+ 3	N      0000	        if      ??0735 eq 1
 8513+ 3			        setb    c
 8514+ 3			        else
 8515+ 3  1AAF	C3		        clr     c
 8516+ 3			        endif
 8517+ 2			        endif
 8518+ 2  1AB0	9A		        subb      a,r2
 8519+ 2			        ifnb    <000h>
 8520+ 2			        save_psw
 8521+ 3  1AB1	85 D0 70	        mov     saved_psw,PSW
 8522+ 2			        endif
 8523+ 2  1AB4	B4 02 25	        cjne    a,#res,??0722
 8524+ 2			        ifnb    <000h>
 8525+ 2			        tst_psw <000h>,??0722
 8526+ 3  1AB7	E5 70		        mov     a,saved_psw
 8527+ 3  1AB9	54 C4		        anl     a,#0c4h
 8528+ 3  1ABB	64 00		        xrl     a,#000h
 8529+ 3  1ABD	54 FE		        anl     a,#0feh
 8530+ 3  1ABF	70 1B		        jnz     ??0722
 8531+ 2			        endif
 8532+ 1			        top_ma  subb,r3,??0722,<000h>
 8533+ 2  1AC1	7B C3		        mov     r3,#arg0
 8534+ 2  1AC3	74 C5		        mov     a,#arg1
 8535+ 2			        ifnb    <000h>
 8536+ 2			        set_cy  000h
 8537+ 3	N      0000	??0736  set     (000h and 1)
 8538+ 3	N      0000	        if      ??0736 eq 1
 8539+ 3			        setb    c
 8540+ 3			        else
 8541+ 3  1AC5	C3		        clr     c
 8542+ 3			        endif
 8543+ 2			        endif
 8544+ 2  1AC6	9B		        subb      a,r3
 8545+ 2			        ifnb    <000h>
 8546+ 2			        save_psw
 8547+ 3  1AC7	85 D0 70	        mov     saved_psw,PSW
 8548+ 2			        endif
 8549+ 2  1ACA	B4 02 0F	        cjne    a,#res,??0722
 8550+ 2			        ifnb    <000h>
 8551+ 2			        tst_psw <000h>,??0722
 8552+ 3  1ACD	E5 70		        mov     a,saved_psw
 8553+ 3  1ACF	54 C4		        anl     a,#0c4h
 8554+ 3  1AD1	64 00		        xrl     a,#000h
 8555+ 3  1AD3	54 FE		        anl     a,#0feh

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 154



 Line  I  Addr  Code            Source

 8556+ 3  1AD5	70 05		        jnz     ??0722
 8557+ 2			        endif
 8558+ 1
 8559+ 1			        eot     'b',??0722
 8560+ 2			        putc    #'b'
 8561+ 3  1AD7			??0738:
 8562+ 3			        ;jnb     SCON.1,putc_loop
 8563+ 3			        ;clr     SCON.1
 8564+ 3  1AD7	75 99 62	        mov     SBUF,#'b'
 8565+ 2  1ADA	80 06		        sjmp    ??0737
 8566+ 2  1ADC			??0722:  putc    #'?'
 8567+ 3  1ADC			??0739:
 8568+ 3			        ;jnb     SCON.1,putc_loop
 8569+ 3			        ;clr     SCON.1
 8570+ 3  1ADC	75 99 3F	        mov     SBUF,#'?'
 8571+ 2  1ADF	75 6E 01	        mov     fail,#001h
 8572+ 2  1AE2			??0737:
 8573+ 1
 8574+ 1			        top_ma  subb,r4,??0723,<000h>
 8575+ 2  1AE2	7C C3		        mov     r4,#arg0
 8576+ 2  1AE4	74 C5		        mov     a,#arg1
 8577+ 2			        ifnb    <000h>
 8578+ 2			        set_cy  000h
 8579+ 3	N      0000	??0740  set     (000h and 1)
 8580+ 3	N      0000	        if      ??0740 eq 1
 8581+ 3			        setb    c
 8582+ 3			        else
 8583+ 3  1AE6	C3		        clr     c
 8584+ 3			        endif
 8585+ 2			        endif
 8586+ 2  1AE7	9C		        subb      a,r4
 8587+ 2			        ifnb    <000h>
 8588+ 2			        save_psw
 8589+ 3  1AE8	85 D0 70	        mov     saved_psw,PSW
 8590+ 2			        endif
 8591+ 2  1AEB	B4 02 25	        cjne    a,#res,??0723
 8592+ 2			        ifnb    <000h>
 8593+ 2			        tst_psw <000h>,??0723
 8594+ 3  1AEE	E5 70		        mov     a,saved_psw
 8595+ 3  1AF0	54 C4		        anl     a,#0c4h
 8596+ 3  1AF2	64 00		        xrl     a,#000h
 8597+ 3  1AF4	54 FE		        anl     a,#0feh
 8598+ 3  1AF6	70 1B		        jnz     ??0723
 8599+ 2			        endif
 8600+ 1			        top_ma  subb,r5,??0723,<000h>
 8601+ 2  1AF8	7D C3		        mov     r5,#arg0
 8602+ 2  1AFA	74 C5		        mov     a,#arg1
 8603+ 2			        ifnb    <000h>
 8604+ 2			        set_cy  000h
 8605+ 3	N      0000	??0741  set     (000h and 1)
 8606+ 3	N      0000	        if      ??0741 eq 1
 8607+ 3			        setb    c
 8608+ 3			        else
 8609+ 3  1AFC	C3		        clr     c
 8610+ 3			        endif
 8611+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 155



 Line  I  Addr  Code            Source

 8612+ 2  1AFD	9D		        subb      a,r5
 8613+ 2			        ifnb    <000h>
 8614+ 2			        save_psw
 8615+ 3  1AFE	85 D0 70	        mov     saved_psw,PSW
 8616+ 2			        endif
 8617+ 2  1B01	B4 02 0F	        cjne    a,#res,??0723
 8618+ 2			        ifnb    <000h>
 8619+ 2			        tst_psw <000h>,??0723
 8620+ 3  1B04	E5 70		        mov     a,saved_psw
 8621+ 3  1B06	54 C4		        anl     a,#0c4h
 8622+ 3  1B08	64 00		        xrl     a,#000h
 8623+ 3  1B0A	54 FE		        anl     a,#0feh
 8624+ 3  1B0C	70 05		        jnz     ??0723
 8625+ 2			        endif
 8626+ 1
 8627+ 1			        eot     'c',??0723
 8628+ 2			        putc    #'c'
 8629+ 3  1B0E			??0743:
 8630+ 3			        ;jnb     SCON.1,putc_loop
 8631+ 3			        ;clr     SCON.1
 8632+ 3  1B0E	75 99 63	        mov     SBUF,#'c'
 8633+ 2  1B11	80 06		        sjmp    ??0742
 8634+ 2  1B13			??0723:  putc    #'?'
 8635+ 3  1B13			??0744:
 8636+ 3			        ;jnb     SCON.1,putc_loop
 8637+ 3			        ;clr     SCON.1
 8638+ 3  1B13	75 99 3F	        mov     SBUF,#'?'
 8639+ 2  1B16	75 6E 01	        mov     fail,#001h
 8640+ 2  1B19			??0742:
 8641+ 1
 8642+ 1			        top_ma  subb,r6,??0720,<000h>
 8643+ 2  1B19	7E C3		        mov     r6,#arg0
 8644+ 2  1B1B	74 C5		        mov     a,#arg1
 8645+ 2			        ifnb    <000h>
 8646+ 2			        set_cy  000h
 8647+ 3	N      0000	??0745  set     (000h and 1)
 8648+ 3	N      0000	        if      ??0745 eq 1
 8649+ 3			        setb    c
 8650+ 3			        else
 8651+ 3  1B1D	C3		        clr     c
 8652+ 3			        endif
 8653+ 2			        endif
 8654+ 2  1B1E	9E		        subb      a,r6
 8655+ 2			        ifnb    <000h>
 8656+ 2			        save_psw
 8657+ 3  1B1F	85 D0 70	        mov     saved_psw,PSW
 8658+ 2			        endif
 8659+ 2  1B22	B4 02 25	        cjne    a,#res,??0720
 8660+ 2			        ifnb    <000h>
 8661+ 2			        tst_psw <000h>,??0720
 8662+ 3  1B25	E5 70		        mov     a,saved_psw
 8663+ 3  1B27	54 C4		        anl     a,#0c4h
 8664+ 3  1B29	64 00		        xrl     a,#000h
 8665+ 3  1B2B	54 FE		        anl     a,#0feh
 8666+ 3  1B2D	70 1B		        jnz     ??0720
 8667+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 156



 Line  I  Addr  Code            Source

 8668+ 1			        top_ma  subb,r7,??0720,<000h>
 8669+ 2  1B2F	7F C3		        mov     r7,#arg0
 8670+ 2  1B31	74 C5		        mov     a,#arg1
 8671+ 2			        ifnb    <000h>
 8672+ 2			        set_cy  000h
 8673+ 3	N      0000	??0746  set     (000h and 1)
 8674+ 3	N      0000	        if      ??0746 eq 1
 8675+ 3			        setb    c
 8676+ 3			        else
 8677+ 3  1B33	C3		        clr     c
 8678+ 3			        endif
 8679+ 2			        endif
 8680+ 2  1B34	9F		        subb      a,r7
 8681+ 2			        ifnb    <000h>
 8682+ 2			        save_psw
 8683+ 3  1B35	85 D0 70	        mov     saved_psw,PSW
 8684+ 2			        endif
 8685+ 2  1B38	B4 02 0F	        cjne    a,#res,??0720
 8686+ 2			        ifnb    <000h>
 8687+ 2			        tst_psw <000h>,??0720
 8688+ 3  1B3B	E5 70		        mov     a,saved_psw
 8689+ 3  1B3D	54 C4		        anl     a,#0c4h
 8690+ 3  1B3F	64 00		        xrl     a,#000h
 8691+ 3  1B41	54 FE		        anl     a,#0feh
 8692+ 3  1B43	70 05		        jnz     ??0720
 8693+ 2			        endif
 8694+ 1
 8695+ 1			        eot     'd',??0720
 8696+ 2			        putc    #'d'
 8697+ 3  1B45			??0748:
 8698+ 3			        ;jnb     SCON.1,putc_loop
 8699+ 3			        ;clr     SCON.1
 8700+ 3  1B45	75 99 64	        mov     SBUF,#'d'
 8701+ 2  1B48	80 06		        sjmp    ??0747
 8702+ 2  1B4A			??0720:  putc    #'?'
 8703+ 3  1B4A			??0749:
 8704+ 3			        ;jnb     SCON.1,putc_loop
 8705+ 3			        ;clr     SCON.1
 8706+ 3  1B4A	75 99 3F	        mov     SBUF,#'?'
 8707+ 2  1B4D	75 6E 01	        mov     fail,#001h
 8708+ 2  1B50			??0747:
 8709+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 8710+ 1
 8711+ 1			        ; Optionally test immediate addressing modes.
 8712+ 1
 8713+ 1	N      FFFF	        if      (01h and 1) ne 0
 8714+ 1			        ; Test <op> A, #arg1...
 8715+ 1			        top_mb  subb,a,??0724,<000h>
 8716+ 2  1B50	74 C5		        mov     a,#arg1
 8717+ 2			        ifnb    <000h>
 8718+ 2			        set_cy  000h
 8719+ 3	N      0000	??0750  set     (000h and 1)
 8720+ 3	N      0000	        if      ??0750 eq 1
 8721+ 3			        setb    c
 8722+ 3			        else
 8723+ 3  1B52	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 157



 Line  I  Addr  Code            Source

 8724+ 3			        endif
 8725+ 2			        endif
 8726+ 2  1B53	94 C3		        subb      a,#arg0
 8727+ 2			        ifnb    <000h>
 8728+ 2			        save_psw
 8729+ 3  1B55	85 D0 70	        mov     saved_psw,PSW
 8730+ 2			        endif
 8731+ 2  1B58	F5 E0		        mov     ACC,a
 8732+ 2  1B5A	B4 02 0F	        cjne    a,#res,??0724
 8733+ 2			        ifnb    <000h>
 8734+ 2			        tst_psw <000h>,??0724
 8735+ 3  1B5D	E5 70		        mov     a,saved_psw
 8736+ 3  1B5F	54 C4		        anl     a,#0c4h
 8737+ 3  1B61	64 00		        xrl     a,#000h
 8738+ 3  1B63	54 FE		        anl     a,#0feh
 8739+ 3  1B65	70 05		        jnz     ??0724
 8740+ 2			        endif
 8741+ 1			        eot     'e',??0724
 8742+ 2			        putc    #'e'
 8743+ 3  1B67			??0752:
 8744+ 3			        ;jnb     SCON.1,putc_loop
 8745+ 3			        ;clr     SCON.1
 8746+ 3  1B67	75 99 65	        mov     SBUF,#'e'
 8747+ 2  1B6A	80 06		        sjmp    ??0751
 8748+ 2  1B6C			??0724:  putc    #'?'
 8749+ 3  1B6C			??0753:
 8750+ 3			        ;jnb     SCON.1,putc_loop
 8751+ 3			        ;clr     SCON.1
 8752+ 3  1B6C	75 99 3F	        mov     SBUF,#'?'
 8753+ 2  1B6F	75 6E 01	        mov     fail,#001h
 8754+ 2  1B72			??0751:
 8755+ 1			        endif
 8756+ 1
 8757+ 1	N      0000	        if      (01h and 2) ne 0
 8758+ 1			        ; ...and <op> dir, #arg1
 8759+ 1			        top_mb  subb,dir0,??0725,<000h>
 8760+ 1			        eot     'f',??0725
 8761+ 1			        endif
 8762+ 1
 8763+ 1			        ; Optionally test <op> dir, A
 8764+ 1	N      0000	        if      (01h and 4) ne 0
 8765+ 1			        top_mc  subb,??0726,<000h>
 8766+ 1			        eot     'g',??0726
 8767+ 1			        endif
 8768+ 1
 8769:				        putc    #'3'
 8770+ 1  1B72			??0754:
 8771+ 1			        ;jnb     SCON.1,putc_loop
 8772+ 1			        ;clr     SCON.1
 8773+ 1  1B72	75 99 33	        mov     SBUF,#'3'
 8774:				        tst_alu subb,0c3h,0c5h,001h,01h,001h     ; /CY  AC  OV (CY input)
 8775+ 1			        ; Put the argument and result data into variables for easier access
 8776+ 1	N      00C3	        arg0    set 0c3h
 8777+ 1	N      00C5	        arg1    set 0c5h
 8778+ 1	N      0001	        res     set 001h
 8779+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 158



 Line  I  Addr  Code            Source

 8780+ 1			        ; Test <op> A, dir
 8781+ 1			        top_ma  subb,dir0,??0756,<001h>
 8782+ 2  1B75	75 60 C3	        mov     dir0,#arg0
 8783+ 2  1B78	74 C5		        mov     a,#arg1
 8784+ 2			        ifnb    <001h>
 8785+ 2			        set_cy  001h
 8786+ 3	N      0001	??0762  set     (001h and 1)
 8787+ 3	N      FFFF	        if      ??0762 eq 1
 8788+ 3  1B7A	D3		        setb    c
 8789+ 3			        else
 8790+ 3			        clr     c
 8791+ 3			        endif
 8792+ 2			        endif
 8793+ 2  1B7B	95 60		        subb      a,dir0
 8794+ 2			        ifnb    <001h>
 8795+ 2			        save_psw
 8796+ 3  1B7D	85 D0 70	        mov     saved_psw,PSW
 8797+ 2			        endif
 8798+ 2  1B80	B4 01 6B	        cjne    a,#res,??0756
 8799+ 2			        ifnb    <001h>
 8800+ 2			        tst_psw <001h>,??0756
 8801+ 3  1B83	E5 70		        mov     a,saved_psw
 8802+ 3  1B85	54 C4		        anl     a,#0c4h
 8803+ 3  1B87	64 01		        xrl     a,#001h
 8804+ 3  1B89	54 FE		        anl     a,#0feh
 8805+ 3  1B8B	70 61		        jnz     ??0756
 8806+ 2			        endif
 8807+ 1			        ; Test <op> A, @R0
 8808+ 1  1B8D	78 60		        mov     r0,#dir0
 8809+ 1			        top_ma  subb,@r0,??0756,<001h>
 8810+ 2  1B8F	76 C3		        mov     @r0,#arg0
 8811+ 2  1B91	74 C5		        mov     a,#arg1
 8812+ 2			        ifnb    <001h>
 8813+ 2			        set_cy  001h
 8814+ 3	N      0001	??0763  set     (001h and 1)
 8815+ 3	N      FFFF	        if      ??0763 eq 1
 8816+ 3  1B93	D3		        setb    c
 8817+ 3			        else
 8818+ 3			        clr     c
 8819+ 3			        endif
 8820+ 2			        endif
 8821+ 2  1B94	96		        subb      a,@r0
 8822+ 2			        ifnb    <001h>
 8823+ 2			        save_psw
 8824+ 3  1B95	85 D0 70	        mov     saved_psw,PSW
 8825+ 2			        endif
 8826+ 2  1B98	B4 01 53	        cjne    a,#res,??0756
 8827+ 2			        ifnb    <001h>
 8828+ 2			        tst_psw <001h>,??0756
 8829+ 3  1B9B	E5 70		        mov     a,saved_psw
 8830+ 3  1B9D	54 C4		        anl     a,#0c4h
 8831+ 3  1B9F	64 01		        xrl     a,#001h
 8832+ 3  1BA1	54 FE		        anl     a,#0feh
 8833+ 3  1BA3	70 49		        jnz     ??0756
 8834+ 2			        endif
 8835+ 1			        ; Test <op> A, @R1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 159



 Line  I  Addr  Code            Source

 8836+ 1  1BA5	79 31		        mov     r1,#031h
 8837+ 1			        top_ma  subb,@r1,??0756,<001h>
 8838+ 2  1BA7	77 C3		        mov     @r1,#arg0
 8839+ 2  1BA9	74 C5		        mov     a,#arg1
 8840+ 2			        ifnb    <001h>
 8841+ 2			        set_cy  001h
 8842+ 3	N      0001	??0764  set     (001h and 1)
 8843+ 3	N      FFFF	        if      ??0764 eq 1
 8844+ 3  1BAB	D3		        setb    c
 8845+ 3			        else
 8846+ 3			        clr     c
 8847+ 3			        endif
 8848+ 2			        endif
 8849+ 2  1BAC	97		        subb      a,@r1
 8850+ 2			        ifnb    <001h>
 8851+ 2			        save_psw
 8852+ 3  1BAD	85 D0 70	        mov     saved_psw,PSW
 8853+ 2			        endif
 8854+ 2  1BB0	B4 01 3B	        cjne    a,#res,??0756
 8855+ 2			        ifnb    <001h>
 8856+ 2			        tst_psw <001h>,??0756
 8857+ 3  1BB3	E5 70		        mov     a,saved_psw
 8858+ 3  1BB5	54 C4		        anl     a,#0c4h
 8859+ 3  1BB7	64 01		        xrl     a,#001h
 8860+ 3  1BB9	54 FE		        anl     a,#0feh
 8861+ 3  1BBB	70 31		        jnz     ??0756
 8862+ 2			        endif
 8863+ 1
 8864+ 1			        ; Now test <op> A, Rn for n in 0..7
 8865+ 1			        top_ma  subb,r0,??0756,<001h>
 8866+ 2  1BBD	78 C3		        mov     r0,#arg0
 8867+ 2  1BBF	74 C5		        mov     a,#arg1
 8868+ 2			        ifnb    <001h>
 8869+ 2			        set_cy  001h
 8870+ 3	N      0001	??0765  set     (001h and 1)
 8871+ 3	N      FFFF	        if      ??0765 eq 1
 8872+ 3  1BC1	D3		        setb    c
 8873+ 3			        else
 8874+ 3			        clr     c
 8875+ 3			        endif
 8876+ 2			        endif
 8877+ 2  1BC2	98		        subb      a,r0
 8878+ 2			        ifnb    <001h>
 8879+ 2			        save_psw
 8880+ 3  1BC3	85 D0 70	        mov     saved_psw,PSW
 8881+ 2			        endif
 8882+ 2  1BC6	B4 01 25	        cjne    a,#res,??0756
 8883+ 2			        ifnb    <001h>
 8884+ 2			        tst_psw <001h>,??0756
 8885+ 3  1BC9	E5 70		        mov     a,saved_psw
 8886+ 3  1BCB	54 C4		        anl     a,#0c4h
 8887+ 3  1BCD	64 01		        xrl     a,#001h
 8888+ 3  1BCF	54 FE		        anl     a,#0feh
 8889+ 3  1BD1	70 1B		        jnz     ??0756
 8890+ 2			        endif
 8891+ 1			        top_ma  subb,r1,??0756,<001h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 160



 Line  I  Addr  Code            Source

 8892+ 2  1BD3	79 C3		        mov     r1,#arg0
 8893+ 2  1BD5	74 C5		        mov     a,#arg1
 8894+ 2			        ifnb    <001h>
 8895+ 2			        set_cy  001h
 8896+ 3	N      0001	??0766  set     (001h and 1)
 8897+ 3	N      FFFF	        if      ??0766 eq 1
 8898+ 3  1BD7	D3		        setb    c
 8899+ 3			        else
 8900+ 3			        clr     c
 8901+ 3			        endif
 8902+ 2			        endif
 8903+ 2  1BD8	99		        subb      a,r1
 8904+ 2			        ifnb    <001h>
 8905+ 2			        save_psw
 8906+ 3  1BD9	85 D0 70	        mov     saved_psw,PSW
 8907+ 2			        endif
 8908+ 2  1BDC	B4 01 0F	        cjne    a,#res,??0756
 8909+ 2			        ifnb    <001h>
 8910+ 2			        tst_psw <001h>,??0756
 8911+ 3  1BDF	E5 70		        mov     a,saved_psw
 8912+ 3  1BE1	54 C4		        anl     a,#0c4h
 8913+ 3  1BE3	64 01		        xrl     a,#001h
 8914+ 3  1BE5	54 FE		        anl     a,#0feh
 8915+ 3  1BE7	70 05		        jnz     ??0756
 8916+ 2			        endif
 8917+ 1
 8918+ 1			        eot     'a',??0756
 8919+ 2			        putc    #'a'
 8920+ 3  1BE9			??0768:
 8921+ 3			        ;jnb     SCON.1,putc_loop
 8922+ 3			        ;clr     SCON.1
 8923+ 3  1BE9	75 99 61	        mov     SBUF,#'a'
 8924+ 2  1BEC	80 06		        sjmp    ??0767
 8925+ 2  1BEE			??0756:  putc    #'?'
 8926+ 3  1BEE			??0769:
 8927+ 3			        ;jnb     SCON.1,putc_loop
 8928+ 3			        ;clr     SCON.1
 8929+ 3  1BEE	75 99 3F	        mov     SBUF,#'?'
 8930+ 2  1BF1	75 6E 01	        mov     fail,#001h
 8931+ 2  1BF4			??0767:
 8932+ 1
 8933+ 1			        top_ma  subb,r2,??0757,<001h>
 8934+ 2  1BF4	7A C3		        mov     r2,#arg0
 8935+ 2  1BF6	74 C5		        mov     a,#arg1
 8936+ 2			        ifnb    <001h>
 8937+ 2			        set_cy  001h
 8938+ 3	N      0001	??0770  set     (001h and 1)
 8939+ 3	N      FFFF	        if      ??0770 eq 1
 8940+ 3  1BF8	D3		        setb    c
 8941+ 3			        else
 8942+ 3			        clr     c
 8943+ 3			        endif
 8944+ 2			        endif
 8945+ 2  1BF9	9A		        subb      a,r2
 8946+ 2			        ifnb    <001h>
 8947+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 161



 Line  I  Addr  Code            Source

 8948+ 3  1BFA	85 D0 70	        mov     saved_psw,PSW
 8949+ 2			        endif
 8950+ 2  1BFD	B4 01 25	        cjne    a,#res,??0757
 8951+ 2			        ifnb    <001h>
 8952+ 2			        tst_psw <001h>,??0757
 8953+ 3  1C00	E5 70		        mov     a,saved_psw
 8954+ 3  1C02	54 C4		        anl     a,#0c4h
 8955+ 3  1C04	64 01		        xrl     a,#001h
 8956+ 3  1C06	54 FE		        anl     a,#0feh
 8957+ 3  1C08	70 1B		        jnz     ??0757
 8958+ 2			        endif
 8959+ 1			        top_ma  subb,r3,??0757,<001h>
 8960+ 2  1C0A	7B C3		        mov     r3,#arg0
 8961+ 2  1C0C	74 C5		        mov     a,#arg1
 8962+ 2			        ifnb    <001h>
 8963+ 2			        set_cy  001h
 8964+ 3	N      0001	??0771  set     (001h and 1)
 8965+ 3	N      FFFF	        if      ??0771 eq 1
 8966+ 3  1C0E	D3		        setb    c
 8967+ 3			        else
 8968+ 3			        clr     c
 8969+ 3			        endif
 8970+ 2			        endif
 8971+ 2  1C0F	9B		        subb      a,r3
 8972+ 2			        ifnb    <001h>
 8973+ 2			        save_psw
 8974+ 3  1C10	85 D0 70	        mov     saved_psw,PSW
 8975+ 2			        endif
 8976+ 2  1C13	B4 01 0F	        cjne    a,#res,??0757
 8977+ 2			        ifnb    <001h>
 8978+ 2			        tst_psw <001h>,??0757
 8979+ 3  1C16	E5 70		        mov     a,saved_psw
 8980+ 3  1C18	54 C4		        anl     a,#0c4h
 8981+ 3  1C1A	64 01		        xrl     a,#001h
 8982+ 3  1C1C	54 FE		        anl     a,#0feh
 8983+ 3  1C1E	70 05		        jnz     ??0757
 8984+ 2			        endif
 8985+ 1
 8986+ 1			        eot     'b',??0757
 8987+ 2			        putc    #'b'
 8988+ 3  1C20			??0773:
 8989+ 3			        ;jnb     SCON.1,putc_loop
 8990+ 3			        ;clr     SCON.1
 8991+ 3  1C20	75 99 62	        mov     SBUF,#'b'
 8992+ 2  1C23	80 06		        sjmp    ??0772
 8993+ 2  1C25			??0757:  putc    #'?'
 8994+ 3  1C25			??0774:
 8995+ 3			        ;jnb     SCON.1,putc_loop
 8996+ 3			        ;clr     SCON.1
 8997+ 3  1C25	75 99 3F	        mov     SBUF,#'?'
 8998+ 2  1C28	75 6E 01	        mov     fail,#001h
 8999+ 2  1C2B			??0772:
 9000+ 1
 9001+ 1			        top_ma  subb,r4,??0758,<001h>
 9002+ 2  1C2B	7C C3		        mov     r4,#arg0
 9003+ 2  1C2D	74 C5		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 162



 Line  I  Addr  Code            Source

 9004+ 2			        ifnb    <001h>
 9005+ 2			        set_cy  001h
 9006+ 3	N      0001	??0775  set     (001h and 1)
 9007+ 3	N      FFFF	        if      ??0775 eq 1
 9008+ 3  1C2F	D3		        setb    c
 9009+ 3			        else
 9010+ 3			        clr     c
 9011+ 3			        endif
 9012+ 2			        endif
 9013+ 2  1C30	9C		        subb      a,r4
 9014+ 2			        ifnb    <001h>
 9015+ 2			        save_psw
 9016+ 3  1C31	85 D0 70	        mov     saved_psw,PSW
 9017+ 2			        endif
 9018+ 2  1C34	B4 01 25	        cjne    a,#res,??0758
 9019+ 2			        ifnb    <001h>
 9020+ 2			        tst_psw <001h>,??0758
 9021+ 3  1C37	E5 70		        mov     a,saved_psw
 9022+ 3  1C39	54 C4		        anl     a,#0c4h
 9023+ 3  1C3B	64 01		        xrl     a,#001h
 9024+ 3  1C3D	54 FE		        anl     a,#0feh
 9025+ 3  1C3F	70 1B		        jnz     ??0758
 9026+ 2			        endif
 9027+ 1			        top_ma  subb,r5,??0758,<001h>
 9028+ 2  1C41	7D C3		        mov     r5,#arg0
 9029+ 2  1C43	74 C5		        mov     a,#arg1
 9030+ 2			        ifnb    <001h>
 9031+ 2			        set_cy  001h
 9032+ 3	N      0001	??0776  set     (001h and 1)
 9033+ 3	N      FFFF	        if      ??0776 eq 1
 9034+ 3  1C45	D3		        setb    c
 9035+ 3			        else
 9036+ 3			        clr     c
 9037+ 3			        endif
 9038+ 2			        endif
 9039+ 2  1C46	9D		        subb      a,r5
 9040+ 2			        ifnb    <001h>
 9041+ 2			        save_psw
 9042+ 3  1C47	85 D0 70	        mov     saved_psw,PSW
 9043+ 2			        endif
 9044+ 2  1C4A	B4 01 0F	        cjne    a,#res,??0758
 9045+ 2			        ifnb    <001h>
 9046+ 2			        tst_psw <001h>,??0758
 9047+ 3  1C4D	E5 70		        mov     a,saved_psw
 9048+ 3  1C4F	54 C4		        anl     a,#0c4h
 9049+ 3  1C51	64 01		        xrl     a,#001h
 9050+ 3  1C53	54 FE		        anl     a,#0feh
 9051+ 3  1C55	70 05		        jnz     ??0758
 9052+ 2			        endif
 9053+ 1
 9054+ 1			        eot     'c',??0758
 9055+ 2			        putc    #'c'
 9056+ 3  1C57			??0778:
 9057+ 3			        ;jnb     SCON.1,putc_loop
 9058+ 3			        ;clr     SCON.1
 9059+ 3  1C57	75 99 63	        mov     SBUF,#'c'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 163



 Line  I  Addr  Code            Source

 9060+ 2  1C5A	80 06		        sjmp    ??0777
 9061+ 2  1C5C			??0758:  putc    #'?'
 9062+ 3  1C5C			??0779:
 9063+ 3			        ;jnb     SCON.1,putc_loop
 9064+ 3			        ;clr     SCON.1
 9065+ 3  1C5C	75 99 3F	        mov     SBUF,#'?'
 9066+ 2  1C5F	75 6E 01	        mov     fail,#001h
 9067+ 2  1C62			??0777:
 9068+ 1
 9069+ 1			        top_ma  subb,r6,??0755,<001h>
 9070+ 2  1C62	7E C3		        mov     r6,#arg0
 9071+ 2  1C64	74 C5		        mov     a,#arg1
 9072+ 2			        ifnb    <001h>
 9073+ 2			        set_cy  001h
 9074+ 3	N      0001	??0780  set     (001h and 1)
 9075+ 3	N      FFFF	        if      ??0780 eq 1
 9076+ 3  1C66	D3		        setb    c
 9077+ 3			        else
 9078+ 3			        clr     c
 9079+ 3			        endif
 9080+ 2			        endif
 9081+ 2  1C67	9E		        subb      a,r6
 9082+ 2			        ifnb    <001h>
 9083+ 2			        save_psw
 9084+ 3  1C68	85 D0 70	        mov     saved_psw,PSW
 9085+ 2			        endif
 9086+ 2  1C6B	B4 01 25	        cjne    a,#res,??0755
 9087+ 2			        ifnb    <001h>
 9088+ 2			        tst_psw <001h>,??0755
 9089+ 3  1C6E	E5 70		        mov     a,saved_psw
 9090+ 3  1C70	54 C4		        anl     a,#0c4h
 9091+ 3  1C72	64 01		        xrl     a,#001h
 9092+ 3  1C74	54 FE		        anl     a,#0feh
 9093+ 3  1C76	70 1B		        jnz     ??0755
 9094+ 2			        endif
 9095+ 1			        top_ma  subb,r7,??0755,<001h>
 9096+ 2  1C78	7F C3		        mov     r7,#arg0
 9097+ 2  1C7A	74 C5		        mov     a,#arg1
 9098+ 2			        ifnb    <001h>
 9099+ 2			        set_cy  001h
 9100+ 3	N      0001	??0781  set     (001h and 1)
 9101+ 3	N      FFFF	        if      ??0781 eq 1
 9102+ 3  1C7C	D3		        setb    c
 9103+ 3			        else
 9104+ 3			        clr     c
 9105+ 3			        endif
 9106+ 2			        endif
 9107+ 2  1C7D	9F		        subb      a,r7
 9108+ 2			        ifnb    <001h>
 9109+ 2			        save_psw
 9110+ 3  1C7E	85 D0 70	        mov     saved_psw,PSW
 9111+ 2			        endif
 9112+ 2  1C81	B4 01 0F	        cjne    a,#res,??0755
 9113+ 2			        ifnb    <001h>
 9114+ 2			        tst_psw <001h>,??0755
 9115+ 3  1C84	E5 70		        mov     a,saved_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 164



 Line  I  Addr  Code            Source

 9116+ 3  1C86	54 C4		        anl     a,#0c4h
 9117+ 3  1C88	64 01		        xrl     a,#001h
 9118+ 3  1C8A	54 FE		        anl     a,#0feh
 9119+ 3  1C8C	70 05		        jnz     ??0755
 9120+ 2			        endif
 9121+ 1
 9122+ 1			        eot     'd',??0755
 9123+ 2			        putc    #'d'
 9124+ 3  1C8E			??0783:
 9125+ 3			        ;jnb     SCON.1,putc_loop
 9126+ 3			        ;clr     SCON.1
 9127+ 3  1C8E	75 99 64	        mov     SBUF,#'d'
 9128+ 2  1C91	80 06		        sjmp    ??0782
 9129+ 2  1C93			??0755:  putc    #'?'
 9130+ 3  1C93			??0784:
 9131+ 3			        ;jnb     SCON.1,putc_loop
 9132+ 3			        ;clr     SCON.1
 9133+ 3  1C93	75 99 3F	        mov     SBUF,#'?'
 9134+ 2  1C96	75 6E 01	        mov     fail,#001h
 9135+ 2  1C99			??0782:
 9136+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 9137+ 1
 9138+ 1			        ; Optionally test immediate addressing modes.
 9139+ 1
 9140+ 1	N      FFFF	        if      (01h and 1) ne 0
 9141+ 1			        ; Test <op> A, #arg1...
 9142+ 1			        top_mb  subb,a,??0759,<001h>
 9143+ 2  1C99	74 C5		        mov     a,#arg1
 9144+ 2			        ifnb    <001h>
 9145+ 2			        set_cy  001h
 9146+ 3	N      0001	??0785  set     (001h and 1)
 9147+ 3	N      FFFF	        if      ??0785 eq 1
 9148+ 3  1C9B	D3		        setb    c
 9149+ 3			        else
 9150+ 3			        clr     c
 9151+ 3			        endif
 9152+ 2			        endif
 9153+ 2  1C9C	94 C3		        subb      a,#arg0
 9154+ 2			        ifnb    <001h>
 9155+ 2			        save_psw
 9156+ 3  1C9E	85 D0 70	        mov     saved_psw,PSW
 9157+ 2			        endif
 9158+ 2  1CA1	F5 E0		        mov     ACC,a
 9159+ 2  1CA3	B4 01 0F	        cjne    a,#res,??0759
 9160+ 2			        ifnb    <001h>
 9161+ 2			        tst_psw <001h>,??0759
 9162+ 3  1CA6	E5 70		        mov     a,saved_psw
 9163+ 3  1CA8	54 C4		        anl     a,#0c4h
 9164+ 3  1CAA	64 01		        xrl     a,#001h
 9165+ 3  1CAC	54 FE		        anl     a,#0feh
 9166+ 3  1CAE	70 05		        jnz     ??0759
 9167+ 2			        endif
 9168+ 1			        eot     'e',??0759
 9169+ 2			        putc    #'e'
 9170+ 3  1CB0			??0787:
 9171+ 3			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 165



 Line  I  Addr  Code            Source

 9172+ 3			        ;clr     SCON.1
 9173+ 3  1CB0	75 99 65	        mov     SBUF,#'e'
 9174+ 2  1CB3	80 06		        sjmp    ??0786
 9175+ 2  1CB5			??0759:  putc    #'?'
 9176+ 3  1CB5			??0788:
 9177+ 3			        ;jnb     SCON.1,putc_loop
 9178+ 3			        ;clr     SCON.1
 9179+ 3  1CB5	75 99 3F	        mov     SBUF,#'?'
 9180+ 2  1CB8	75 6E 01	        mov     fail,#001h
 9181+ 2  1CBB			??0786:
 9182+ 1			        endif
 9183+ 1
 9184+ 1	N      0000	        if      (01h and 2) ne 0
 9185+ 1			        ; ...and <op> dir, #arg1
 9186+ 1			        top_mb  subb,dir0,??0760,<001h>
 9187+ 1			        eot     'f',??0760
 9188+ 1			        endif
 9189+ 1
 9190+ 1			        ; Optionally test <op> dir, A
 9191+ 1	N      0000	        if      (01h and 4) ne 0
 9192+ 1			        top_mc  subb,??0761,<001h>
 9193+ 1			        eot     'g',??0761
 9194+ 1			        endif
 9195+ 1
 9196:
 9197:				        ; FIXME subb tests are specially weak
 9198:
 9199:				        put_crlf                    ; end of test series
 9200+ 1			        putc    #13
 9201+ 2  1CBB			??0789:
 9202+ 2			        ;jnb     SCON.1,putc_loop
 9203+ 2			        ;clr     SCON.1
 9204+ 2  1CBB	75 99 0D	        mov     SBUF,#13
 9205+ 1			        putc    #10
 9206+ 2  1CBE			??0790:
 9207+ 2			        ;jnb     SCON.1,putc_loop
 9208+ 2			        ;clr     SCON.1
 9209+ 2  1CBE	75 99 0A	        mov     SBUF,#10
 9210:
 9211:
 9212:				        ;-- Test series O ------------------------------------------------------
 9213:				        ; PUSH and POP
 9214:				        ; a.- <PUSH dir (IRAM)>
 9215:				        ; b.- <POP dir (IRAM)>
 9216:				        ; c.- <PUSH dir (SFR)>
 9217:				        ; d.- <POP dir (SFR)>
 9218:
 9219:				        putc    #'O'                ; start of test series
 9220+ 1  1CC1			??0791:
 9221+ 1			        ;jnb     SCON.1,putc_loop
 9222+ 1			        ;clr     SCON.1
 9223+ 1  1CC1	75 99 4F	        mov     SBUF,#'O'
 9224:
 9225:				        ; <PUSH dir (IRAM)>
 9226:	  1CC4	75 81 9F	        mov     SP,#stack0          ; prepare SP...
 9227:	  1CC7	75 60 12	        mov     dir0,#012h          ; ...and data to be pushed

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 166



 Line  I  Addr  Code            Source

 9228:	  1CCA	78 A0		        mov     r0,#(stack0+1)      ; r0->stack so we can verify data is pushed
 9229:	  1CCC	76 00		        mov     @r0,#000h           ; clear target stack location
 9230:	  1CCE	C0 60		        push    dir0                ; <PUSH dir>
 9231:	  1CD0	E6		        mov     a,@r0               ; verify data has been pushed
 9232:	  1CD1	B4 12 0A	        cjne    a,#012h,to_a0
 9233:	  1CD4	E5 81		        mov     a,SP                ; verify SP has been incremented
 9234:	  1CD6	B4 A0 05	        cjne    a,#(stack0+1),to_a0
 9235:
 9236:				        eot     'a',to_a0
 9237+ 1			        putc    #'a'
 9238+ 2  1CD9			??0793:
 9239+ 2			        ;jnb     SCON.1,putc_loop
 9240+ 2			        ;clr     SCON.1
 9241+ 2  1CD9	75 99 61	        mov     SBUF,#'a'
 9242+ 1  1CDC	80 06		        sjmp    ??0792
 9243+ 1  1CDE			to_a0:  putc    #'?'
 9244+ 2  1CDE			??0794:
 9245+ 2			        ;jnb     SCON.1,putc_loop
 9246+ 2			        ;clr     SCON.1
 9247+ 2  1CDE	75 99 3F	        mov     SBUF,#'?'
 9248+ 1  1CE1	75 6E 01	        mov     fail,#001h
 9249+ 1  1CE4			??0792:
 9250:
 9251:				        ; <POP dir (IRAM)> We'll use the data that was pushed previously
 9252:	  1CE4	75 61 00	        mov     dir1,#000h          ; clear POP target
 9253:	  1CE7	E4		        clr     a
 9254:	  1CE8	D0 61		        pop     dir1                ; <POP dir>
 9255:	  1CEA	79 61		        mov     r1,#dir1            ; verify data has been popped
 9256:	  1CEC	E7		        mov     a,@r1
 9257:	  1CED	B4 12 0A	        cjne    a,#012h,to_b0
 9258:	  1CF0	E5 81		        mov     a,SP                ; verify SP has been decremented
 9259:	  1CF2	B4 9F 05	        cjne    a,#stack0,to_b0
 9260:
 9261:				        eot     'b',to_b0
 9262+ 1			        putc    #'b'
 9263+ 2  1CF5			??0796:
 9264+ 2			        ;jnb     SCON.1,putc_loop
 9265+ 2			        ;clr     SCON.1
 9266+ 2  1CF5	75 99 62	        mov     SBUF,#'b'
 9267+ 1  1CF8	80 06		        sjmp    ??0795
 9268+ 1  1CFA			to_b0:  putc    #'?'
 9269+ 2  1CFA			??0797:
 9270+ 2			        ;jnb     SCON.1,putc_loop
 9271+ 2			        ;clr     SCON.1
 9272+ 2  1CFA	75 99 3F	        mov     SBUF,#'?'
 9273+ 1  1CFD	75 6E 01	        mov     fail,#001h
 9274+ 1  1D00			??0795:
 9275:
 9276:				        ; <PUSH dir (SFR)>
 9277:	  1D00	75 81 9F	        mov     SP,#stack0          ; prepare SP...
 9278:	  1D03	75 F0 42	        mov     B,#042h             ; ...and data to be pushed
 9279:	  1D06	78 A0		        mov     r0,#(stack0+1)      ; r0->stack so we can verify data is pushed
 9280:	  1D08	76 00		        mov     @r0,#000h           ; clear target stack location
 9281:	  1D0A	C0 F0		        push    B                   ; <PUSH dir>
 9282:	  1D0C	E6		        mov     a,@r0               ; verify data has been pushed
 9283:	  1D0D	B4 42 0A	        cjne    a,#042h,to_c0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 167



 Line  I  Addr  Code            Source

 9284:	  1D10	E5 81		        mov     a,SP                ; verify SP has been incremented
 9285:	  1D12	B4 A0 05	        cjne    a,#(stack0+1),to_c0
 9286:
 9287:				        eot     'c',to_c0
 9288+ 1			        putc    #'c'
 9289+ 2  1D15			??0799:
 9290+ 2			        ;jnb     SCON.1,putc_loop
 9291+ 2			        ;clr     SCON.1
 9292+ 2  1D15	75 99 63	        mov     SBUF,#'c'
 9293+ 1  1D18	80 06		        sjmp    ??0798
 9294+ 1  1D1A			to_c0:  putc    #'?'
 9295+ 2  1D1A			??0800:
 9296+ 2			        ;jnb     SCON.1,putc_loop
 9297+ 2			        ;clr     SCON.1
 9298+ 2  1D1A	75 99 3F	        mov     SBUF,#'?'
 9299+ 1  1D1D	75 6E 01	        mov     fail,#001h
 9300+ 1  1D20			??0798:
 9301:
 9302:				        ; <POP dir (SFR)> We'll use the data that was pushed previously
 9303:	  1D20	75 F0 00	        mov     B,#000h             ; clear POP target
 9304:	  1D23	E4		        clr     a
 9305:	  1D24	D0 F0		        pop     B                   ; <POP dir>
 9306:	  1D26	E5 F0		        mov     a,B                 ; verify data has been popped
 9307:	  1D28	B4 42 0A	        cjne    a,#042h,to_d0
 9308:	  1D2B	E5 81		        mov     a,SP                ; verify SP has been decremented
 9309:	  1D2D	B4 9F 05	        cjne    a,#stack0,to_d0
 9310:
 9311:				        eot     'd',to_d0
 9312+ 1			        putc    #'d'
 9313+ 2  1D30			??0802:
 9314+ 2			        ;jnb     SCON.1,putc_loop
 9315+ 2			        ;clr     SCON.1
 9316+ 2  1D30	75 99 64	        mov     SBUF,#'d'
 9317+ 1  1D33	80 06		        sjmp    ??0801
 9318+ 1  1D35			to_d0:  putc    #'?'
 9319+ 2  1D35			??0803:
 9320+ 2			        ;jnb     SCON.1,putc_loop
 9321+ 2			        ;clr     SCON.1
 9322+ 2  1D35	75 99 3F	        mov     SBUF,#'?'
 9323+ 1  1D38	75 6E 01	        mov     fail,#001h
 9324+ 1  1D3B			??0801:
 9325:
 9326:				        put_crlf                    ; end of test series
 9327+ 1			        putc    #13
 9328+ 2  1D3B			??0804:
 9329+ 2			        ;jnb     SCON.1,putc_loop
 9330+ 2			        ;clr     SCON.1
 9331+ 2  1D3B	75 99 0D	        mov     SBUF,#13
 9332+ 1			        putc    #10
 9333+ 2  1D3E			??0805:
 9334+ 2			        ;jnb     SCON.1,putc_loop
 9335+ 2			        ;clr     SCON.1
 9336+ 2  1D3E	75 99 0A	        mov     SBUF,#10
 9337:
 9338:				        ;-- Test series P ------------------------------------------------------
 9339:				        ; Access to XRAM -- note that current tests are bare-bone minimal!

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 168



 Line  I  Addr  Code            Source

 9340:				        ; a.- <MOV DPTR, #16>
 9341:				        ; b.- <MOVX @DPTR, A>, <MOVX A, @DPTR>
 9342:				        ; c.- <MOVX A, @Ri>
 9343:				        ; d.- <MOVX @Ri, A>
 9344:
 9345:				        putc    #'P'                ; start of test series
 9346+ 1  1D41			??0806:
 9347+ 1			        ;jnb     SCON.1,putc_loop
 9348+ 1			        ;clr     SCON.1
 9349+ 1  1D41	75 99 50	        mov     SBUF,#'P'
 9350:
 9351:				        ; a.- <MOV DPTR, #16>
 9352:	  1D44	75 83 65	        mov     DPH,#065h           ; initialize DPTR with known value...
 9353:	  1D47	75 82 43	        mov     DPL,#043h
 9354:
 9355:	  1D4A	90 01 23	        mov     DPTR,#0123h         ; ...then load it through MOV...
 9356:	  1D4D	E5 83		        mov     a,DPH               ; ...and verify the load
 9357:	  1D4F	B4 01 0A	        cjne    a,#01h,tp_a0
 9358:	  1D52	E5 82		        mov     a,DPL
 9359:	  1D54	B4 23 05	        cjne    a,#23h,tp_a0
 9360:
 9361:				        eot     'a',tp_a0
 9362+ 1			        putc    #'a'
 9363+ 2  1D57			??0808:
 9364+ 2			        ;jnb     SCON.1,putc_loop
 9365+ 2			        ;clr     SCON.1
 9366+ 2  1D57	75 99 61	        mov     SBUF,#'a'
 9367+ 1  1D5A	80 06		        sjmp    ??0807
 9368+ 1  1D5C			tp_a0:  putc    #'?'
 9369+ 2  1D5C			??0809:
 9370+ 2			        ;jnb     SCON.1,putc_loop
 9371+ 2			        ;clr     SCON.1
 9372+ 2  1D5C	75 99 3F	        mov     SBUF,#'?'
 9373+ 1  1D5F	75 6E 01	        mov     fail,#001h
 9374+ 1  1D62			??0807:
 9375:
 9376:
 9377:				        ; b.- <MOVX @DPTR, A>, <MOVX A, @DPTR>
 9378:				        ; We have no independent means to verify XRAM writes or reads, other
 9379:				        ; than the very instructions we're testing. So we should store a data
 9380:				        ; pattern on XRAM that is difficult to get back 'by chance'.
 9381:				        ; Ideally we would try all areas of XRAM, back-to-back operations, etc.
 9382:				        ; For the time being a simple word store will suffice.
 9383:	  1D62	90 00 13	        mov     DPTR,#0013h         ; Store 55h, aah at XRAM[0013h]...
 9384:	  1D65	74 55		        mov     A,#55h
 9385:	  1D67	F0		        movx    @DPTR,a
 9386:	  1D68	A3		        inc     DPTR
 9387:	  1D69	F4		        cpl     a
 9388:	  1D6A	F0		        movx    @DPTR,a
 9389:
 9390:	  1D6B	90 00 13	        mov     DPTR,#0013h         ; ...then verify the store
 9391:	  1D6E	E0		        movx    a,@DPTR
 9392:	  1D6F	B4 55 0A	        cjne    a,#55h,tp_b0
 9393:	  1D72	A3		        inc     DPTR
 9394:	  1D73	E0		        movx    a,@DPTR
 9395:	  1D74	B4 AA 05	        cjne    a,#0aah,tp_b0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 169



 Line  I  Addr  Code            Source

 9396:
 9397:				        eot     'b',tp_b0
 9398+ 1			        putc    #'b'
 9399+ 2  1D77			??0811:
 9400+ 2			        ;jnb     SCON.1,putc_loop
 9401+ 2			        ;clr     SCON.1
 9402+ 2  1D77	75 99 62	        mov     SBUF,#'b'
 9403+ 1  1D7A	80 06		        sjmp    ??0810
 9404+ 1  1D7C			tp_b0:  putc    #'?'
 9405+ 2  1D7C			??0812:
 9406+ 2			        ;jnb     SCON.1,putc_loop
 9407+ 2			        ;clr     SCON.1
 9408+ 2  1D7C	75 99 3F	        mov     SBUF,#'?'
 9409+ 1  1D7F	75 6E 01	        mov     fail,#001h
 9410+ 1  1D82			??0810:
 9411:
 9412:				        ; c.- <MOVX A, @Ri>
 9413:	  1D82	74 79		        mov     a,#79h              ; change A and DPTR so we can catch fails
 9414:	  1D84	90 00 00	        mov     dptr,#0000h
 9415:	  1D87	78 13		        mov     r0,#13h             ; read back the same data again through
 9416:	  1D89	79 14		        mov     r1,#14h             ; indexed addressing...
 9417:	  1D8B	E2		        movx    a,@r0
 9418:	  1D8C	B4 55 09	        cjne    a,#55h,tp_c0
 9419:	  1D8F	E3		        movx    a,@r1
 9420:	  1D90	B4 AA 05	        cjne    a,#0aah,tp_c0
 9421:
 9422:				        eot     'c',tp_c0
 9423+ 1			        putc    #'c'
 9424+ 2  1D93			??0814:
 9425+ 2			        ;jnb     SCON.1,putc_loop
 9426+ 2			        ;clr     SCON.1
 9427+ 2  1D93	75 99 63	        mov     SBUF,#'c'
 9428+ 1  1D96	80 06		        sjmp    ??0813
 9429+ 1  1D98			tp_c0:  putc    #'?'
 9430+ 2  1D98			??0815:
 9431+ 2			        ;jnb     SCON.1,putc_loop
 9432+ 2			        ;clr     SCON.1
 9433+ 2  1D98	75 99 3F	        mov     SBUF,#'?'
 9434+ 1  1D9B	75 6E 01	        mov     fail,#001h
 9435+ 1  1D9E			??0813:
 9436:
 9437:				        put_crlf                    ; end of test series
 9438+ 1			        putc    #13
 9439+ 2  1D9E			??0816:
 9440+ 2			        ;jnb     SCON.1,putc_loop
 9441+ 2			        ;clr     SCON.1
 9442+ 2  1D9E	75 99 0D	        mov     SBUF,#13
 9443+ 1			        putc    #10
 9444+ 2  1DA1			??0817:
 9445+ 2			        ;jnb     SCON.1,putc_loop
 9446+ 2			        ;clr     SCON.1
 9447+ 2  1DA1	75 99 0A	        mov     SBUF,#10
 9448:
 9449:				        ;-- Test series Q ------------------------------------------------------
 9450:				        ; MOVC instructions
 9451:				        ; a.- <MOVC A, @A + PC>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 170



 Line  I  Addr  Code            Source

 9452:				        ; b.- <MOVC A, @A + DPTR>
 9453:
 9454:				        putc    #'Q'                ; start of test series
 9455+ 1  1DA4			??0818:
 9456+ 1			        ;jnb     SCON.1,putc_loop
 9457+ 1			        ;clr     SCON.1
 9458+ 1  1DA4	75 99 51	        mov     SBUF,#'Q'
 9459:
 9460:				        ; a.- <MOVC A, @A + PC>
 9461:	  1DA7	74 03		        mov     a,#03h              ; we'll read the 4th byte in the table...
 9462:	  1DA9	24 02		        add     a,#02h              ; ...and must account for intervening sjmp
 9463:	  1DAB	83		        movc    a,@a+PC
 9464:	  1DAC	80 04		        sjmp    tq0
 9465:
 9466:	  1DAE	07 13 19 21	tq1:    db      07h, 13h, 19h, 21h
 9467:	  1DB2	B4 21 05	tq0:    cjne    a,#21h,tq_a0
 9468:
 9469:				        eot     'a',tq_a0
 9470+ 1			        putc    #'a'
 9471+ 2  1DB5			??0820:
 9472+ 2			        ;jnb     SCON.1,putc_loop
 9473+ 2			        ;clr     SCON.1
 9474+ 2  1DB5	75 99 61	        mov     SBUF,#'a'
 9475+ 1  1DB8	80 06		        sjmp    ??0819
 9476+ 1  1DBA			tq_a0:  putc    #'?'
 9477+ 2  1DBA			??0821:
 9478+ 2			        ;jnb     SCON.1,putc_loop
 9479+ 2			        ;clr     SCON.1
 9480+ 2  1DBA	75 99 3F	        mov     SBUF,#'?'
 9481+ 1  1DBD	75 6E 01	        mov     fail,#001h
 9482+ 1  1DC0			??0819:
 9483:
 9484:				        ; b.- <MOVC A, @A + DPTR>
 9485:	  1DC0	90 1D AE	        mov   DPTR,#tq1
 9486:
 9487:	  1DC3	74 00		        mov   a,#00h
 9488:	  1DC5	93		        movc  a,@a+DPTR
 9489:	  1DC6	B4 07 17	        cjne  a,#07h,tq_b0
 9490:
 9491:	  1DC9	74 01		        mov   a,#01h
 9492:	  1DCB	93		        movc  a,@a+DPTR
 9493:	  1DCC	B4 13 11	        cjne  a,#13h,tq_b0
 9494:
 9495:	  1DCF	74 02		        mov   a,#02h
 9496:	  1DD1	93		        movc  a,@a+DPTR
 9497:	  1DD2	B4 19 0B	        cjne  a,#19h,tq_b0
 9498:
 9499:	  1DD5	74 03		        mov   a,#03h
 9500:	  1DD7	93		        movc  a,@a+DPTR
 9501:	  1DD8	B4 21 05	        cjne  a,#21h,tq_b0
 9502:
 9503:				        eot     'b',tq_b0
 9504+ 1			        putc    #'b'
 9505+ 2  1DDB			??0823:
 9506+ 2			        ;jnb     SCON.1,putc_loop
 9507+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 171



 Line  I  Addr  Code            Source

 9508+ 2  1DDB	75 99 62	        mov     SBUF,#'b'
 9509+ 1  1DDE	80 06		        sjmp    ??0822
 9510+ 1  1DE0			tq_b0:  putc    #'?'
 9511+ 2  1DE0			??0824:
 9512+ 2			        ;jnb     SCON.1,putc_loop
 9513+ 2			        ;clr     SCON.1
 9514+ 2  1DE0	75 99 3F	        mov     SBUF,#'?'
 9515+ 1  1DE3	75 6E 01	        mov     fail,#001h
 9516+ 1  1DE6			??0822:
 9517:
 9518:				        put_crlf                    ; end of test series
 9519+ 1			        putc    #13
 9520+ 2  1DE6			??0825:
 9521+ 2			        ;jnb     SCON.1,putc_loop
 9522+ 2			        ;clr     SCON.1
 9523+ 2  1DE6	75 99 0D	        mov     SBUF,#13
 9524+ 1			        putc    #10
 9525+ 2  1DE9			??0826:
 9526+ 2			        ;jnb     SCON.1,putc_loop
 9527+ 2			        ;clr     SCON.1
 9528+ 2  1DE9	75 99 0A	        mov     SBUF,#10
 9529:
 9530:
 9531:				        ;-- Test series R ------------------------------------------------------
 9532:				        ; ACALL, LCALL, JMP @A+DPTR, LJMP instructions
 9533:				        ; a.- <ACALL addr8>     <-- uses LJMP too
 9534:				        ; b.- <LCALL addr16>    <-- uses LJMP too
 9535:				        ; c.- <JMP @A+DPTR>
 9536:				        ; d.- <LJMP addr16>
 9537:				        ;
 9538:				        ; Biggest limitations:
 9539:				        ; .- Only long jumps; jumps to same page (== H addr byte) untested.
 9540:				        ;
 9541:				        ; Note RET is NOT tested here! we don't return from these calls, just
 9542:				        ; use them as jumps.
 9543:				        ;
 9544:
 9545:				        putc    #'R'                ; start of test series
 9546+ 1  1DEC			??0827:
 9547+ 1			        ;jnb     SCON.1,putc_loop
 9548+ 1			        ;clr     SCON.1
 9549+ 1  1DEC	75 99 52	        mov     SBUF,#'R'
 9550:
 9551:	  1DEF	75 81 4F	        mov     SP,#4fh             ; Initialize SP...
 9552:	  1DF2	75 50 00	        mov     50h,#00h            ; ...and clear stack area
 9553:	  1DF5	75 51 00	        mov     51h,#00h
 9554:	  1DF8	75 52 00	        mov     52h,#00h
 9555:	  1DFB	75 53 00	        mov     53h,#00h
 9556:
 9557:				        ; a.- <ACALL addr8>
 9558:				        ; We should test all code pages eventually...
 9559:	  1DFE	D1 02		        acall   tr_sub0             ; Do the call...
 9560:	  1E00	80 14		tr_rv0: sjmp    tr_a0
 9561:	  1E02			tr_sub0:
 9562:	  1E02	E5 81		        mov     A,SP
 9563:	  1E04	B4 51 0F	        cjne    A,#51h,tr_a0       ; ...verify the SP value...

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 172



 Line  I  Addr  Code            Source

 9564:	  1E07	E5 50		        mov     A,50h
 9565:	  1E09	B4 00 0A	        cjne    A,#LOW(tr_rv0),tr_a0 ; ...and verify the pushed ret address
 9566:	  1E0C	E5 51		        mov     A,51h
 9567:	  1E0E	B4 1E 05	        cjne    A,#HIGH(tr_rv0),tr_a0
 9568:
 9569:				        eot     'a',tr_a0
 9570+ 1			        putc    #'a'
 9571+ 2  1E11			??0829:
 9572+ 2			        ;jnb     SCON.1,putc_loop
 9573+ 2			        ;clr     SCON.1
 9574+ 2  1E11	75 99 61	        mov     SBUF,#'a'
 9575+ 1  1E14	80 06		        sjmp    ??0828
 9576+ 1  1E16			tr_a0:  putc    #'?'
 9577+ 2  1E16			??0830:
 9578+ 2			        ;jnb     SCON.1,putc_loop
 9579+ 2			        ;clr     SCON.1
 9580+ 2  1E16	75 99 3F	        mov     SBUF,#'?'
 9581+ 1  1E19	75 6E 01	        mov     fail,#001h
 9582+ 1  1E1C			??0828:
 9583:
 9584:				        ; b.- <LCALL addr16>
 9585:	  1E1C	12 80 0C	        lcall   tr_sub1             ; Do the call...
 9586:	  1E1F	80 06		tr_rv1: sjmp    tr_b0
 9587:	  1E21	00		tr_rv2: nop
 9588:				        eot     'b',tr_b0
 9589+ 1			        putc    #'b'
 9590+ 2  1E22			??0832:
 9591+ 2			        ;jnb     SCON.1,putc_loop
 9592+ 2			        ;clr     SCON.1
 9593+ 2  1E22	75 99 62	        mov     SBUF,#'b'
 9594+ 1  1E25	80 06		        sjmp    ??0831
 9595+ 1  1E27			tr_b0:  putc    #'?'
 9596+ 2  1E27			??0833:
 9597+ 2			        ;jnb     SCON.1,putc_loop
 9598+ 2			        ;clr     SCON.1
 9599+ 2  1E27	75 99 3F	        mov     SBUF,#'?'
 9600+ 1  1E2A	75 6E 01	        mov     fail,#001h
 9601+ 1  1E2D			??0831:
 9602:
 9603:
 9604:				        ; c.- <JMP @A+DPTR>
 9605:				        ; Note that tr_sub2 is at 8000h so that we test the A+DPTR carry
 9606:				        ; propagation. Any address xx00h would do.
 9607:	  1E2D	90 7F CD	        mov     DPTR,#(tr_sub2-33h) ; Prepare DPTR and A so that their sum
 9608:	  1E30	74 33		        mov     a,#33h              ; gives the target address.
 9609:	  1E32	73		        jmp     @a+DPTR
 9610:	  1E33	02 1E 45	        jmp     tr_c0
 9611:	  1E36	00		        nop
 9612:	  1E37	00		        nop
 9613:	  1E38	74 00		tr_rv3: mov     a,#00h
 9614:	  1E3A	74 00		        mov     a,#00h
 9615:	  1E3C	74 00		        mov     a,#00h
 9616:	  1E3E	74 00		        mov     a,#00h
 9617:
 9618:				        eot     'c',tr_c0
 9619+ 1			        putc    #'c'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 173



 Line  I  Addr  Code            Source

 9620+ 2  1E40			??0835:
 9621+ 2			        ;jnb     SCON.1,putc_loop
 9622+ 2			        ;clr     SCON.1
 9623+ 2  1E40	75 99 63	        mov     SBUF,#'c'
 9624+ 1  1E43	80 06		        sjmp    ??0834
 9625+ 1  1E45			tr_c0:  putc    #'?'
 9626+ 2  1E45			??0836:
 9627+ 2			        ;jnb     SCON.1,putc_loop
 9628+ 2			        ;clr     SCON.1
 9629+ 2  1E45	75 99 3F	        mov     SBUF,#'?'
 9630+ 1  1E48	75 6E 01	        mov     fail,#001h
 9631+ 1  1E4B			??0834:
 9632:
 9633:				        ; c.- <LJMP addr16>
 9634:	  1E4B	02 80 06	        ljmp    tr_sub3
 9635:	  1E4E	02 1E 5A	        jmp     tr_d0
 9636:	  1E51	00		        nop
 9637:	  1E52	00		        nop
 9638:	  1E53	00		tr_rv4: nop
 9639:	  1E54	00		        nop
 9640:				        eot     'd',tr_d0
 9641+ 1			        putc    #'d'
 9642+ 2  1E55			??0838:
 9643+ 2			        ;jnb     SCON.1,putc_loop
 9644+ 2			        ;clr     SCON.1
 9645+ 2  1E55	75 99 64	        mov     SBUF,#'d'
 9646+ 1  1E58	80 06		        sjmp    ??0837
 9647+ 1  1E5A			tr_d0:  putc    #'?'
 9648+ 2  1E5A			??0839:
 9649+ 2			        ;jnb     SCON.1,putc_loop
 9650+ 2			        ;clr     SCON.1
 9651+ 2  1E5A	75 99 3F	        mov     SBUF,#'?'
 9652+ 1  1E5D	75 6E 01	        mov     fail,#001h
 9653+ 1  1E60			??0837:
 9654:
 9655:				        put_crlf                    ; end of test series
 9656+ 1			        putc    #13
 9657+ 2  1E60			??0840:
 9658+ 2			        ;jnb     SCON.1,putc_loop
 9659+ 2			        ;clr     SCON.1
 9660+ 2  1E60	75 99 0D	        mov     SBUF,#13
 9661+ 1			        putc    #10
 9662+ 2  1E63			??0841:
 9663+ 2			        ;jnb     SCON.1,putc_loop
 9664+ 2			        ;clr     SCON.1
 9665+ 2  1E63	75 99 0A	        mov     SBUF,#10
 9666:
 9667:
 9668:				        ;-- Test series S ------------------------------------------------------
 9669:				        ; RET, RETI instructions
 9670:				        ; a.- <RET>
 9671:				        ; b.- <RETI>
 9672:				        ;
 9673:				        ; RETs to different code pages (!= H addr byte) not tested!
 9674:				        ; Interrupt flag stuff not tested, only RET functionality
 9675:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 174



 Line  I  Addr  Code            Source

 9676:				        putc    #'S'                ; start of test series
 9677+ 1  1E66			??0842:
 9678+ 1			        ;jnb     SCON.1,putc_loop
 9679+ 1			        ;clr     SCON.1
 9680+ 1  1E66	75 99 53	        mov     SBUF,#'S'
 9681:
 9682:
 9683:				        ; a.- <RET>
 9684:	  1E69	75 81 4F	        mov     SP,#4fh             ; Initialize SP...
 9685:	  1E6C	75 4F 1E	        mov     4fh,#HIGH(s_sub0)   ; ...and load stack area with return
 9686:	  1E6F	75 4E 7D	        mov     4eh,#LOW(s_sub0)    ; addresses to be tested
 9687:	  1E72	75 4D 1E	        mov     4dh,#HIGH(s_sub1)
 9688:	  1E75	75 4C 87	        mov     4ch,#LOW(s_sub1)
 9689:
 9690:	  1E78	22		        ret                         ; Do the ret...
 9691:	  1E79	80 16		        sjmp    ts_a0
 9692:	  1E7B	74 00		        mov     A,#00h
 9693:	  1E7D	E5 81		s_sub0: mov     A,SP
 9694:	  1E7F	B4 4D 0F	        cjne    A,#4dh,ts_a0       ; ... and verify the SP value
 9695:
 9696:	  1E82	22		        ret                         ; Do another ret...
 9697:	  1E83	80 0C		        sjmp    ts_a0
 9698:	  1E85	74 00		        mov     A,#00h
 9699:	  1E87	E5 81		s_sub1: mov     A,SP
 9700:	  1E89	B4 4B 05	        cjne    A,#4bh,ts_a0       ; ... and verify the SP value
 9701:
 9702:				        eot     'a',ts_a0
 9703+ 1			        putc    #'a'
 9704+ 2  1E8C			??0844:
 9705+ 2			        ;jnb     SCON.1,putc_loop
 9706+ 2			        ;clr     SCON.1
 9707+ 2  1E8C	75 99 61	        mov     SBUF,#'a'
 9708+ 1  1E8F	80 06		        sjmp    ??0843
 9709+ 1  1E91			ts_a0:  putc    #'?'
 9710+ 2  1E91			??0845:
 9711+ 2			        ;jnb     SCON.1,putc_loop
 9712+ 2			        ;clr     SCON.1
 9713+ 2  1E91	75 99 3F	        mov     SBUF,#'?'
 9714+ 1  1E94	75 6E 01	        mov     fail,#001h
 9715+ 1  1E97			??0843:
 9716:
 9717:
 9718:				        ; a.- <RETI>
 9719:	  1E97	75 81 4F	        mov     SP,#4fh             ; Initialize SP...
 9720:	  1E9A	75 4F 1E	        mov     4fh,#HIGH(s_sub2)   ; ...and load stack area with return
 9721:	  1E9D	75 4E AB	        mov     4eh,#LOW(s_sub2)    ; addresses to be tested
 9722:	  1EA0	75 4D 1E	        mov     4dh,#HIGH(s_sub3)
 9723:	  1EA3	75 4C B5	        mov     4ch,#LOW(s_sub3)
 9724:
 9725:	  1EA6	22		        ret                         ; Do the ret...
 9726:	  1EA7	80 E8		        sjmp    ts_a0
 9727:	  1EA9	74 00		        mov     A,#00h
 9728:	  1EAB	E5 81		s_sub2: mov     A,SP
 9729:	  1EAD	B4 4D 0F	        cjne    A,#4dh,ts_b0       ; ... and verify the SP value
 9730:
 9731:	  1EB0	22		        ret                         ; Do another ret...

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 175



 Line  I  Addr  Code            Source

 9732:	  1EB1	80 DE		        sjmp    ts_a0
 9733:	  1EB3	74 00		        mov     A,#00h
 9734:	  1EB5	E5 81		s_sub3: mov     A,SP
 9735:	  1EB7	B4 4B 05	        cjne    A,#4bh,ts_b0       ; ... and verify the SP value
 9736:
 9737:				        eot     'b',ts_b0
 9738+ 1			        putc    #'b'
 9739+ 2  1EBA			??0847:
 9740+ 2			        ;jnb     SCON.1,putc_loop
 9741+ 2			        ;clr     SCON.1
 9742+ 2  1EBA	75 99 62	        mov     SBUF,#'b'
 9743+ 1  1EBD	80 06		        sjmp    ??0846
 9744+ 1  1EBF			ts_b0:  putc    #'?'
 9745+ 2  1EBF			??0848:
 9746+ 2			        ;jnb     SCON.1,putc_loop
 9747+ 2			        ;clr     SCON.1
 9748+ 2  1EBF	75 99 3F	        mov     SBUF,#'?'
 9749+ 1  1EC2	75 6E 01	        mov     fail,#001h
 9750+ 1  1EC5			??0846:
 9751:
 9752:				        ; Lots of things can go badly and we wouldn't know with this test...
 9753:				        put_crlf                    ; end of test series
 9754+ 1			        putc    #13
 9755+ 2  1EC5			??0849:
 9756+ 2			        ;jnb     SCON.1,putc_loop
 9757+ 2			        ;clr     SCON.1
 9758+ 2  1EC5	75 99 0D	        mov     SBUF,#13
 9759+ 1			        putc    #10
 9760+ 2  1EC8			??0850:
 9761+ 2			        ;jnb     SCON.1,putc_loop
 9762+ 2			        ;clr     SCON.1
 9763+ 2  1EC8	75 99 0A	        mov     SBUF,#10
 9764:
 9765:				        ;-- Test series T ------------------------------------------------------
 9766:				        ; MUL, DIV instructions
 9767:				        ; a.- <DIV>
 9768:				        ; b.- <MUL>
 9769:				        ;
 9770:
 9771:				        putc    #'T'                ; start of test series
 9772+ 1  1ECB			??0851:
 9773+ 1			        ;jnb     SCON.1,putc_loop
 9774+ 1			        ;clr     SCON.1
 9775+ 1  1ECB	75 99 54	        mov     SBUF,#'T'
 9776:
 9777:				        ; a.- <DIV>
 9778:	  1ECE	75 F0 07	        mov     B,#07h              ; First of all, make sure B can be read back
 9779:	  1ED1	74 13		        mov     A,#13h
 9780:	  1ED3	E5 F0		        mov     A,B
 9781:	  1ED5	B4 07 37	        cjne    A,#07h,tt_a0
 9782:
 9783:				        ; Now do a few representative DIVs using a table. The table has the
 9784:				        ; following format:
 9785:				        ; denominator, numerator, overflow, quotient, remainder
 9786:				        ; Where 'overflow' is 00h or 04h.
 9787:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 176



 Line  I  Addr  Code            Source

 9788:				        ; DPTR will point to the start of the table, r0 will be the current data
 9789:				        ; byte offset and r1 the number of test cases remaiining.
 9790:	  1ED8	90 1F 17	        mov     DPTR,#tt_a_tab
 9791:	  1EDB	78 00		        mov     r0,#00h
 9792:	  1EDD	79 09		        mov     r1,#((tt_a_tab_end-tt_a_tab)/5)
 9793:
 9794:	  1EDF			tt_a_loop:
 9795:	  1EDF	E8		        mov     a,r0
 9796:	  1EE0	08		        inc     r0
 9797:	  1EE1	93		        movc    a,@a+DPTR
 9798:	  1EE2	F5 F0		        mov     B,a
 9799:	  1EE4	E8		        mov     a,r0
 9800:	  1EE5	08		        inc     r0
 9801:	  1EE6	93		        movc    a,@a+DPTR
 9802:	  1EE7	84		        div     ab
 9803:	  1EE8	F5 60		        mov     dir0,a
 9804:
 9805:	  1EEA	E8		        mov     a,r0                ; Get expected OV flag
 9806:	  1EEB	08		        inc     r0
 9807:	  1EEC	93		        movc    a,@a+DPTR
 9808:	  1EED	70 15		        jnz     tt_a_divzero        ; If OV expected, skip verification of
 9809:	  1EEF	E5 D0		        mov     a,PSW               ; quotient and remainder
 9810:	  1EF1	54 04		        anl     a,#04h
 9811:	  1EF3	70 1A		        jnz     tt_a0
 9812:
 9813:	  1EF5	E8		        mov     a,r0                ; Verify quotient...
 9814:	  1EF6	08		        inc     r0
 9815:	  1EF7	93		        movc    a,@a+DPTR
 9816:	  1EF8	B5 60 14	        cjne    a,dir0,tt_a0
 9817:	  1EFB	E8		        mov     a,r0                ; ...and verify remainder
 9818:	  1EFC	08		        inc     r0
 9819:	  1EFD	93		        movc    a,@a+DPTR
 9820:	  1EFE	B5 F0 0E	        cjne    a,B,tt_a0
 9821:	  1F01	02 1F 06	        jmp     tt_a_next
 9822:
 9823:	  1F04			tt_a_divzero:
 9824:	  1F04	08		        inc     r0
 9825:	  1F05	08		        inc     r0
 9826:	  1F06			tt_a_next:
 9827:	  1F06	19		        dec     r1                  ; go for next test vector, if any
 9828:	  1F07	E9		        mov     a,r1
 9829:	  1F08	70 D5		        jnz     tt_a_loop
 9830:
 9831:				        eot     'a',tt_a0
 9832+ 1			        putc    #'a'
 9833+ 2  1F0A			??0853:
 9834+ 2			        ;jnb     SCON.1,putc_loop
 9835+ 2			        ;clr     SCON.1
 9836+ 2  1F0A	75 99 61	        mov     SBUF,#'a'
 9837+ 1  1F0D	80 06		        sjmp    ??0852
 9838+ 1  1F0F			tt_a0:  putc    #'?'
 9839+ 2  1F0F			??0854:
 9840+ 2			        ;jnb     SCON.1,putc_loop
 9841+ 2			        ;clr     SCON.1
 9842+ 2  1F0F	75 99 3F	        mov     SBUF,#'?'
 9843+ 1  1F12	75 6E 01	        mov     fail,#001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 177



 Line  I  Addr  Code            Source

 9844+ 1  1F15			??0852:
 9845:	  1F15	80 2D		        sjmp    tt_a_tab_end
 9846:
 9847:	  1F17			tt_a_tab:
 9848:	  1F17	07 13 00 02	        db      7,19,0,2,5
	  1F1B	05
 9849:	  1F1C	07 11 00 02	        db      7,17,0,2,3
	  1F20	03
 9850:	  1F21	07 0D 00 01	        db      7,13,0,1,6
	  1F25	06
 9851:	  1F26	0D 11 00 01	        db      13,17,0,1,4
	  1F2A	04
 9852:	  1F2B	11 0D 00 00	        db      17,13,0,0,13
	  1F2F	0D
 9853:	  1F30	00 0D 04 00	        db      0,13,4,0,13
	  1F34	0D
 9854:	  1F35	80 87 00 01	        db      80h,87h,0,1,7
	  1F39	07
 9855:	  1F3A	01 FF 00 FF	        db      1,255,0,255,0
	  1F3E	00
 9856:	  1F3F	02 FF 00 7F	        db      2,255,0,127,1
	  1F43	01
 9857:	  1F44			tt_a_tab_end:
 9858:
 9859:				        ; b.- <MUL>
 9860:
 9861:				        ; Do with MUL the same we just did with DIV. The test data table has
 9862:				        ; the following format:
 9863:				        ; denominator, numerator, product high byte, product low byte.
 9864:
 9865:				        ; DPTR will point to the start of the table, r0 will be the current data
 9866:				        ; byte offset and r1 the number of test cases remaiining.
 9867:	  1F44	90 1F 85	        mov     DPTR,#tt_b_tab
 9868:	  1F47	78 00		        mov     r0,#00h
 9869:	  1F49	79 09		        mov     r1,#((tt_b_tab_end-tt_b_tab)/4)
 9870:
 9871:	  1F4B			tt_b_loop:
 9872:	  1F4B	E8		        mov     a,r0                ; Load B with test data...
 9873:	  1F4C	08		        inc     r0
 9874:	  1F4D	93		        movc    a,@a+DPTR
 9875:	  1F4E	F5 F0		        mov     B,a
 9876:	  1F50	E8		        mov     a,r0                ; ...then load A with test data...
 9877:	  1F51	08		        inc     r0
 9878:	  1F52	93		        movc    a,@a+DPTR
 9879:	  1F53	A4		        mul     ab                  ; and do the MUL
 9880:	  1F54	F5 60		        mov     dir0,a              ; Save A for later checks
 9881:
 9882:	  1F56	E8		        mov     a,r0                ; Verify product high byte
 9883:				        ;inc     r0
 9884:	  1F57	93		        movc    a,@a+DPTR
 9885:	  1F58	60 08		        jz      tt_b_noovf
 9886:
 9887:	  1F5A	E5 D0		        mov     a,PSW               ; overflow expected
 9888:	  1F5C	54 04		        anl     a,#04h
 9889:	  1F5E	60 1D		        jz      tt_b0
 9890:	  1F60	80 06		        sjmp    tt_b_0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 178



 Line  I  Addr  Code            Source

 9891:
 9892:	  1F62			tt_b_noovf:
 9893:	  1F62	E5 D0		        mov     a,PSW               ; no overflow expected
 9894:	  1F64	54 04		        anl     a,#04h
 9895:	  1F66	70 15		        jnz     tt_b0
 9896:
 9897:	  1F68			tt_b_0:
 9898:	  1F68	E8		        mov     a,r0                ; Verify product high byte
 9899:	  1F69	08		        inc     r0
 9900:	  1F6A	93		        movc    a,@a+DPTR
 9901:	  1F6B	B5 F0 0F	        cjne    a,B,tt_b0
 9902:	  1F6E	E8		        mov     a,r0                ; ...and verify low byte
 9903:	  1F6F	08		        inc     r0
 9904:	  1F70	93		        movc    a,@a+DPTR
 9905:	  1F71	B5 60 09	        cjne    a,dir0,tt_b0
 9906:
 9907:	  1F74	19		        dec     r1                  ; go for next test vector, if any
 9908:	  1F75	E9		        mov     a,r1
 9909:	  1F76	70 D3		        jnz     tt_b_loop
 9910:
 9911:				        eot     'b',tt_b0
 9912+ 1			        putc    #'b'
 9913+ 2  1F78			??0856:
 9914+ 2			        ;jnb     SCON.1,putc_loop
 9915+ 2			        ;clr     SCON.1
 9916+ 2  1F78	75 99 62	        mov     SBUF,#'b'
 9917+ 1  1F7B	80 06		        sjmp    ??0855
 9918+ 1  1F7D			tt_b0:  putc    #'?'
 9919+ 2  1F7D			??0857:
 9920+ 2			        ;jnb     SCON.1,putc_loop
 9921+ 2			        ;clr     SCON.1
 9922+ 2  1F7D	75 99 3F	        mov     SBUF,#'?'
 9923+ 1  1F80	75 6E 01	        mov     fail,#001h
 9924+ 1  1F83			??0855:
 9925:	  1F83	80 24		        sjmp    tt_b_tab_end
 9926:
 9927:	  1F85			tt_b_tab:
 9928:	  1F85	07 13 00 85	        db      7,19,0,133
 9929:	  1F89	07 11 00 77	        db      7,17,0,119
 9930:	  1F8D	07 0D 00 5B	        db      7,13,0,91
 9931:	  1F91	0D 11 00 DD	        db      13,17,0,221
 9932:	  1F95	11 0D 00 DD	        db      17,13,0,221
 9933:	  1F99	00 0D 00 00	        db      0,13,0,0
 9934:	  1F9D	80 87 43 80	        db      80h,87h,43h,80h
 9935:	  1FA1	01 FF 00 FF	        db      1,255,0,255
 9936:	  1FA5	02 FF 01 FE	        db      2,255,01h,0feh
 9937:	  1FA9			tt_b_tab_end:
 9938:
 9939:				        put_crlf                    ; end of test series
 9940+ 1			        putc    #13
 9941+ 2  1FA9			??0858:
 9942+ 2			        ;jnb     SCON.1,putc_loop
 9943+ 2			        ;clr     SCON.1
 9944+ 2  1FA9	75 99 0D	        mov     SBUF,#13
 9945+ 1			        putc    #10
 9946+ 2  1FAC			??0859:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 179



 Line  I  Addr  Code            Source

 9947+ 2			        ;jnb     SCON.1,putc_loop
 9948+ 2			        ;clr     SCON.1
 9949+ 2  1FAC	75 99 0A	        mov     SBUF,#10
 9950:
 9951:
 9952:
 9953:				        ;-- Test series U ------------------------------------------------------
 9954:				        ; Register banks
 9955:				        ; a.- Write to register, read from indirect address.
 9956:				        ; a.- Write to indirect address, read from register.
 9957:				        ;
 9958:
 9959:				        putc    #'U'                ; start of test series
 9960+ 1  1FAF			??0860:
 9961+ 1			        ;jnb     SCON.1,putc_loop
 9962+ 1			        ;clr     SCON.1
 9963+ 1  1FAF	75 99 55	        mov     SBUF,#'U'
 9964:
 9965:
 9966:	  1FB2	75 D0 00	        mov     PSW,#00h            ; Test bank 0
 9967:	  1FB5	74 01		        mov     a,#00h + 1
 9968:	  1FB7	12 1F D4	        call    tu_a_test
 9969:
 9970:	  1FBA	75 D0 08	        mov     PSW,#08h            ; Test bank 1
 9971:	  1FBD	74 09		        mov     a,#08h + 1
 9972:	  1FBF	12 1F D4	        call    tu_a_test
 9973:
 9974:	  1FC2	75 D0 10	        mov     PSW,#10h            ; Test bank 2
 9975:	  1FC5	74 11		        mov     a,#10h + 1
 9976:	  1FC7	12 1F D4	        call    tu_a_test
 9977:
 9978:	  1FCA	75 D0 18	        mov     PSW,#18h            ; Test bank 3
 9979:	  1FCD	74 19		        mov     a,#18h + 1
 9980:	  1FCF	12 1F D4	        call    tu_a_test
 9981:
 9982:	  1FD2	80 1E		        sjmp    tu_a_done
 9983:
 9984:	  1FD4			tu_a_test:
 9985:	  1FD4	F8		        mov     r0,a                ; R0 points to R1 in the selected bank.
 9986:
 9987:	  1FD5	79 12		        mov     r1,#12h             ; Write to registers R1 and R7
 9988:	  1FD7	7F 34		        mov     r7,#34h
 9989:
 9990:	  1FD9	E6		        mov     a,@r0               ; Check R1
 9991:	  1FDA	B4 12 1B	        cjne    a,#12h,tu_a0
 9992:	  1FDD	74 56		        mov     a,#56h              ; Ok, now write to R1 with reg addressing...
 9993:	  1FDF	F6		        mov     @r0,a               ; ...and check by reading in indirect.
 9994:	  1FE0	B9 56 15	        cjne    r1,#56h,tu_a0
 9995:
 9996:	  1FE3	E8		        mov     a,r0                ; Set R0 to point to R7 in selected bank
 9997:	  1FE4	24 06		        add     a,#06h
 9998:	  1FE6	F8		        mov     r0,a
 9999:	  1FE7	E6		        mov     a,@r0               ; Check R7
10000:	  1FE8	B4 34 0D	        cjne    a,#34h,tu_a0
10001:
10002:	  1FEB	74 78		        mov     a,#78h              ; Ok, now write to R7 with reg addressing...

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 180



 Line  I  Addr  Code            Source

10003:	  1FED	F6		        mov     @r0,a               ; ...and check by reading in indirect.
10004:	  1FEE	B4 78 07	        cjne    a,#78h,tu_a0
10005:
10006:	  1FF1	22		        ret
10007:
10008:	  1FF2			tu_a_done:
10009:	  1FF2	00		        nop
10010:				        eot     'a',tu_a0
10011+ 1			        putc    #'a'
10012+ 2  1FF3			??0862:
10013+ 2			        ;jnb     SCON.1,putc_loop
10014+ 2			        ;clr     SCON.1
10015+ 2  1FF3	75 99 61	        mov     SBUF,#'a'
10016+ 1  1FF6	80 06		        sjmp    ??0861
10017+ 1  1FF8			tu_a0:  putc    #'?'
10018+ 2  1FF8			??0863:
10019+ 2			        ;jnb     SCON.1,putc_loop
10020+ 2			        ;clr     SCON.1
10021+ 2  1FF8	75 99 3F	        mov     SBUF,#'?'
10022+ 1  1FFB	75 6E 01	        mov     fail,#001h
10023+ 1  1FFE			??0861:
10024:
10025:				        put_crlf                    ; end of test series
10026+ 1			        putc    #13
10027+ 2  1FFE			??0864:
10028+ 2			        ;jnb     SCON.1,putc_loop
10029+ 2			        ;clr     SCON.1
10030+ 2  1FFE	75 99 0D	        mov     SBUF,#13
10031+ 1			        putc    #10
10032+ 2  2001			??0865:
10033+ 2			        ;jnb     SCON.1,putc_loop
10034+ 2			        ;clr     SCON.1
10035+ 2  2001	75 99 0A	        mov     SBUF,#10
10036:
10037:
10038:				        ;-- Template for test series -------------------------------------------
10039:
10040:				        ;-- Test series X ------------------------------------------------------
10041:				        ;
10042:				        ; a.-
10043:
10044:				        ;putc    #'X'                ; start of test series
10045:				        ;put_crlf                    ; end of test series
10046:
10047:				        ;-----------------------------------------------------------------------
10048:
10049:				        ; Test cases finished. Now print completion message dependent on the
10050:				        ; value of the fail flag.
10051:
10052:	  2004	E5 6E		        mov     a,fail
10053:	  2006	70 1A		        jnz     test_failed
10054:
10055:				        put_crlf
10056+ 1			        putc    #13
10057+ 2  2008			??0866:
10058+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 181



 Line  I  Addr  Code            Source

10059+ 2			        ;clr     SCON.1
10060+ 2  2008	75 99 0D	        mov     SBUF,#13
10061+ 1			        putc    #10
10062+ 2  200B			??0867:
10063+ 2			        ;jnb     SCON.1,putc_loop
10064+ 2			        ;clr     SCON.1
10065+ 2  200B	75 99 0A	        mov     SBUF,#10
10066:				        putc    #'P'
10067+ 1  200E			??0868:
10068+ 1			        ;jnb     SCON.1,putc_loop
10069+ 1			        ;clr     SCON.1
10070+ 1  200E	75 99 50	        mov     SBUF,#'P'
10071:				        putc    #'A'
10072+ 1  2011			??0869:
10073+ 1			        ;jnb     SCON.1,putc_loop
10074+ 1			        ;clr     SCON.1
10075+ 1  2011	75 99 41	        mov     SBUF,#'A'
10076:				        putc    #'S'
10077+ 1  2014			??0870:
10078+ 1			        ;jnb     SCON.1,putc_loop
10079+ 1			        ;clr     SCON.1
10080+ 1  2014	75 99 53	        mov     SBUF,#'S'
10081:				        putc    #'S'
10082+ 1  2017			??0871:
10083+ 1			        ;jnb     SCON.1,putc_loop
10084+ 1			        ;clr     SCON.1
10085+ 1  2017	75 99 53	        mov     SBUF,#'S'
10086:				        put_crlf
10087+ 1			        putc    #13
10088+ 2  201A			??0872:
10089+ 2			        ;jnb     SCON.1,putc_loop
10090+ 2			        ;clr     SCON.1
10091+ 2  201A	75 99 0D	        mov     SBUF,#13
10092+ 1			        putc    #10
10093+ 2  201D			??0873:
10094+ 2			        ;jnb     SCON.1,putc_loop
10095+ 2			        ;clr     SCON.1
10096+ 2  201D	75 99 0A	        mov     SBUF,#10
10097:	  2020	80 1A		        sjmp    quit
10098:
10099:	  2022			test_failed:
10100:				        put_crlf
10101+ 1			        putc    #13
10102+ 2  2022			??0874:
10103+ 2			        ;jnb     SCON.1,putc_loop
10104+ 2			        ;clr     SCON.1
10105+ 2  2022	75 99 0D	        mov     SBUF,#13
10106+ 1			        putc    #10
10107+ 2  2025			??0875:
10108+ 2			        ;jnb     SCON.1,putc_loop
10109+ 2			        ;clr     SCON.1
10110+ 2  2025	75 99 0A	        mov     SBUF,#10
10111:				        putc    #'F'
10112+ 1  2028			??0876:
10113+ 1			        ;jnb     SCON.1,putc_loop
10114+ 1			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 182



 Line  I  Addr  Code            Source

10115+ 1  2028	75 99 46	        mov     SBUF,#'F'
10116:				        putc    #'A'
10117+ 1  202B			??0877:
10118+ 1			        ;jnb     SCON.1,putc_loop
10119+ 1			        ;clr     SCON.1
10120+ 1  202B	75 99 41	        mov     SBUF,#'A'
10121:				        putc    #'I'
10122+ 1  202E			??0878:
10123+ 1			        ;jnb     SCON.1,putc_loop
10124+ 1			        ;clr     SCON.1
10125+ 1  202E	75 99 49	        mov     SBUF,#'I'
10126:				        putc    #'L'
10127+ 1  2031			??0879:
10128+ 1			        ;jnb     SCON.1,putc_loop
10129+ 1			        ;clr     SCON.1
10130+ 1  2031	75 99 4C	        mov     SBUF,#'L'
10131:				        put_crlf
10132+ 1			        putc    #13
10133+ 2  2034			??0880:
10134+ 2			        ;jnb     SCON.1,putc_loop
10135+ 2			        ;clr     SCON.1
10136+ 2  2034	75 99 0D	        mov     SBUF,#13
10137+ 1			        putc    #10
10138+ 2  2037			??0881:
10139+ 2			        ;jnb     SCON.1,putc_loop
10140+ 2			        ;clr     SCON.1
10141+ 2  2037	75 99 0A	        mov     SBUF,#10
10142:	  203A	80 00		        sjmp    quit
10143:
10144:				        ;-- End of test program, enter single-instruction endless loop
10145:	  203C	01 3C		quit:   ajmp    $
10146:
10147:
10148:				        ; We'll place a few test routines in the 2nd half of the code space so
10149:				        ; we can test long jumps and calls onto different code pages.
10150:		N      8000	        org     8000h
10151:
10152:				        ; tr_sub2: part of the JMP @A+DPTR test.
10153:				        ; HAS TO BE in 8000h so we can test the A+DPTR carry propagation!
10154:	  8000			tr_sub2:
10155:	  8000	02 1E 38	        jmp     tr_rv3
10156:	  8003	02 1E 45	        jmp     tr_c0
10157:				        ; Make sure the assumption we'll make in the test is actually valid
10158:		N      0000	        if      LOW(tr_sub2) ne 0
10159:				        $error("Label 'tr_sub2' must be at an address multiple of 256 to properly test JMP @A+DPTR")
10160:				        endif
10161:
10162:				        ; tr_sub3: part of the LJMP test.
10163:	  8006			tr_sub3:
10164:	  8006	02 1E 53	        jmp     tr_rv4
10165:	  8009	02 1E 5A	        jmp     tr_d0
10166:
10167:				        ; tr_sub1: part of the LCALL test.
10168:	  800C			tr_sub1:
10169:	  800C	E5 81		        mov     A,SP
10170:	  800E	B4 53 0D	        cjne    A,#53h,tr_sub1_fail ; ...verify the SP value...

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 183



 Line  I  Addr  Code            Source

10171:	  8011	E5 52		        mov     A,52h               ; ...and verify the pushed ret address
10172:	  8013	B4 1F 08	        cjne    A,#LOW(tr_rv1),tr_sub1_fail
10173:	  8016	E5 53		        mov     A,53h
10174:	  8018	B4 1E 03	        cjne    A,#HIGH(tr_rv1),tr_sub1_fail
10175:	  801B	02 1E 21	        ljmp    tr_rv2
10176:	  801E			tr_sub1_fail:
10177:	  801E	02 1E 27	        ljmp    tr_b0
10178:
10179:
10180:				        end





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 184





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0000				  CODE	    0033	 177
??0001				  CODE	    0036	 185
??0002				  CODE	    003B	 192
??0003				  CODE	    0041	 198
??0004				  CODE	    0046	 206
??0005				  CODE	    0054	 215
??0006				  CODE	    005D	 222
??0007				  CODE	    0069	 232
??0008				  CODE	    007D	 252
??0009				  CODE	    0072	 241
??0010				  CODE	    0077	 247
??0011				  CODE	    0090	 271
??0012				  CODE	    0085	 260
??0013				  CODE	    008A	 266
??0014				  CODE	    0090	 275
??0015				  CODE	    0093	 280
??0016				  CODE	    0096	 297
??0017				  CODE	    00D4	 354
??0018				  CODE	    00C9	 343
??0019				  CODE	    00CE	 349
??0020				  CODE	    00D9	 359
??0021				  CODE	    00E8	 369
??0022				  CODE	    00EE	 375
??0023				  CODE	    00FE	 401
??0024				  CODE	    00FC	 400
??0025				  CODE	    00F6	 395
??0026				  CODE	    010E	 412
??0027				  CODE	    010C	 411
??0028				  CODE	    0106	 406
??0029				  CODE	    011E	 423
??0030				  CODE	    011C	 422
??0031				  CODE	    0116	 417
??0032				  CODE	    012E	 434
??0033				  CODE	    012C	 433
??0034				  CODE	    0126	 428
??0035				  CODE	    013E	 445
??0036				  CODE	    013C	 444
??0037				  CODE	    0136	 439
??0038				  CODE	    014E	 456
??0039				  CODE	    014C	 455
??0040				  CODE	    0146	 450
??0041				  CODE	    015E	 467
??0042				  CODE	    015C	 466
??0043				  CODE	    0156	 461
??0044				  CODE	    016E	 478
??0045				  CODE	    016C	 477
??0046				  CODE	    0166	 472
??0047				  CODE	    0190	 502
??0048				  CODE	    0185	 491
??0049				  CODE	    018A	 497

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 185



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0050				  CODE	    01A7	 525
??0051				  CODE	    019C	 514
??0052				  CODE	    01A1	 520
??0053				  CODE	    01D4	 567
??0054				  CODE	    01C9	 556
??0055				  CODE	    01CE	 562
??0056				  CODE	    01E3	 592
??0057				  CODE	    01E1	 591
??0058				  CODE	    01DB	 586
??0059				  CODE	    01F5	 604
??0060				  CODE	    01F3	 603
??0061				  CODE	    01ED	 598
??0062				  CODE	    0217	 629
??0063				  CODE	    020C	 618
??0064				  CODE	    0211	 624
??0065				  CODE	    022B	 640
??0066				  CODE	    0236	 648
??0067				  CODE	    0249	 668
??0068				  CODE	    023E	 657
??0069				  CODE	    0243	 663
??0070				  CODE	    0249	 672
??0071				  CODE	    024C	 677
??0072				  CODE	    024F	 706
??0073				  CODE	    025D	 716
??0074				  CODE	    0268	 724
??0075				  CODE	    027C	 744
??0076				  CODE	    0271	 733
??0077				  CODE	    0276	 739
??0078				  CODE	    0292	 764
??0079				  CODE	    0287	 753
??0080				  CODE	    028C	 759
??0081				  CODE	    029C	 772
??0082				  CODE	    02A6	 780
??0083				  CODE	    02B9	 800
??0084				  CODE	    02AE	 789
??0085				  CODE	    02B3	 795
??0086				  CODE	    02D6	 824
??0087				  CODE	    02CB	 813
??0088				  CODE	    02D0	 819
??0089				  CODE	    0303	 859
??0090				  CODE	    02F8	 848
??0091				  CODE	    02FD	 854
??0092				  CODE	    0326	 887
??0093				  CODE	    031B	 876
??0094				  CODE	    0320	 882
??0095				  CODE	    0340	 910
??0096				  CODE	    0335	 899
??0097				  CODE	    033A	 905
??0098				  CODE	    035E	 936
??0099				  CODE	    0353	 925
??0100				  CODE	    0358	 931
??0101				  CODE	    036C	 944
??0102				  CODE	    0377	 952
??0103				  CODE	    038B	 972
??0104				  CODE	    0380	 961
??0105				  CODE	    0385	 967

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 186



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0106				  CODE	    03A8	 995
??0107				  CODE	    039D	 984
??0108				  CODE	    03A2	 990
??0109				  CODE	    03D5	1030
??0110				  CODE	    03CA	1019
??0111				  CODE	    03CF	1025
??0112				  CODE	    03F8	1058
??0113				  CODE	    03ED	1047
??0114				  CODE	    03F2	1053
??0115				  CODE	    0412	1081
??0116				  CODE	    0407	1070
??0117				  CODE	    040C	1076
??0118				  CODE	    0430	1107
??0119				  CODE	    0425	1096
??0120				  CODE	    042A	1102
??0121				  CODE	    0430	1113
??0122				  CODE	    0433	1118
??0123				  CODE	    0436	1136
??0124				  CODE	    044E	1160
??0125				  CODE	    0443	1149
??0126				  CODE	    0448	1155
??0127				  CODE	    0475	1195
??0128				  CODE	    046A	1184
??0129				  CODE	    046F	1190
??0130				  CODE	    049B	1229
??0131				  CODE	    0490	1218
??0132				  CODE	    0495	1224
??0133				  CODE	    04D3	1275
??0134				  CODE	    04C8	1264
??0135				  CODE	    04CD	1270
??0136				  CODE	    04D3	1279
??0137				  CODE	    04D6	1284
??0138				  CODE	    04D9	1302
??0139				  CODE	    04F6	1341
??0140				  CODE	    04EB	1330
??0141				  CODE	    04F0	1336
??0142				  CODE	    057B	1431
??0143				  CODE	    0570	1420
??0144				  CODE	    0575	1426
??0145				  CODE	    05A8	1468
??0146				  CODE	    059D	1457
??0147				  CODE	    05A2	1463
??0148				  CODE	    05BB	1487
??0149				  CODE	    05B0	1476
??0150				  CODE	    05B5	1482
??0151				  CODE	    05DD	1513
??0152				  CODE	    05D2	1502
??0153				  CODE	    05D7	1508
??0154				  CODE	    05F5	1547
??0155				  CODE	    05EA	1536
??0156				  CODE	    05EF	1542
??0157				  CODE	    066A	1629
??0158				  CODE	    065F	1618
??0159				  CODE	    0664	1624
??0160				  CODE	    0693	1664
??0161				  CODE	    0688	1653

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 187



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0162				  CODE	    068D	1659
??0163				  CODE	    06B5	1690
??0164				  CODE	    06AA	1679
??0165				  CODE	    06AF	1685
??0166				  CODE	    06B5	1694
??0167				  CODE	    06B8	1699
??0168				  CODE	    06BB	1718
??0169				  CODE	    0711	1784
??0170				  CODE	    0706	1773
??0171				  CODE	    070B	1779
??0172				  CODE	    072E	1810
??0173				  CODE	    0723	1799
??0174				  CODE	    0728	1805
??0175				  CODE	    0744	1830
??0176				  CODE	    0739	1819
??0177				  CODE	    073E	1825
??0178				  CODE	    078F	1884
??0179				  CODE	    0784	1873
??0180				  CODE	    0789	1879
??0181				  CODE	    07AE	1910
??0182				  CODE	    07A3	1899
??0183				  CODE	    07A8	1905
??0184				  CODE	    07E9	1964
??0185				  CODE	    07DE	1953
??0186				  CODE	    07E3	1959
??0187				  CODE	    0804	1990
??0188				  CODE	    07F9	1979
??0189				  CODE	    07FE	1985
??0190				  CODE	    081D	2012
??0191				  CODE	    0812	2001
??0192				  CODE	    0817	2007
??0193				  CODE	    083C	2038
??0194				  CODE	    0831	2027
??0195				  CODE	    0836	2033
??0196				  CODE	    083C	2042
??0197				  CODE	    083F	2047
??0198				  CODE	    0842	2062
??0199				  CODE	    0861	2092
??0200				  CODE	    0856	2081
??0201				  CODE	    085B	2087
??0202				  CODE	    0893	2125
??0203				  CODE	    0888	2114
??0204				  CODE	    088D	2120
??0205				  CODE	    08AD	2148
??0206				  CODE	    08A2	2137
??0207				  CODE	    08A7	2143
??0208				  CODE	    08C8	2172
??0209				  CODE	    08BD	2161
??0210				  CODE	    08C2	2167
??0211				  CODE	    08DF	2195
??0212				  CODE	    08D4	2184
??0213				  CODE	    08D9	2190
??0214				  CODE	    08DF	2200
??0215				  CODE	    08E2	2205
??0216				  CODE	    08E5	2385
??0217				  CODE	    096C	2613

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 188



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0218				  CODE	    091B	2481
??0219				  CODE	    0936	2525
??0220				  CODE	    0951	2569
??0221				  CODE	    0980	2647
??0222				  CODE	    0997	2679
??0223				  CODE	    09AE	2712
??0224				  CODE	    0921	2487
??0225				  CODE	    0916	2476
??0226				  CODE	    091B	2482
??0227				  CODE	    093C	2531
??0228				  CODE	    0931	2520
??0229				  CODE	    0936	2526
??0230				  CODE	    0957	2575
??0231				  CODE	    094C	2564
??0232				  CODE	    0951	2570
??0233				  CODE	    0972	2619
??0234				  CODE	    0967	2608
??0235				  CODE	    096C	2614
??0236				  CODE	    0986	2653
??0237				  CODE	    097B	2642
??0238				  CODE	    0980	2648
??0239				  CODE	    099D	2685
??0240				  CODE	    0992	2674
??0241				  CODE	    0997	2680
??0242				  CODE	    09B4	2718
??0243				  CODE	    09A9	2707
??0244				  CODE	    09AE	2713
??0245				  CODE	    09B4	2724
??0246				  CODE	    09B7	2729
??0247				  CODE	    09BA	2740
??0248				  CODE	    0A41	2968
??0249				  CODE	    09F0	2836
??0250				  CODE	    0A0B	2880
??0251				  CODE	    0A26	2924
??0252				  CODE	    0A55	3002
??0253				  CODE	    0A6C	3034
??0254				  CODE	    0A83	3067
??0255				  CODE	    09F6	2842
??0256				  CODE	    09EB	2831
??0257				  CODE	    09F0	2837
??0258				  CODE	    0A11	2886
??0259				  CODE	    0A06	2875
??0260				  CODE	    0A0B	2881
??0261				  CODE	    0A2C	2930
??0262				  CODE	    0A21	2919
??0263				  CODE	    0A26	2925
??0264				  CODE	    0A47	2974
??0265				  CODE	    0A3C	2963
??0266				  CODE	    0A41	2969
??0267				  CODE	    0A5B	3008
??0268				  CODE	    0A50	2997
??0269				  CODE	    0A55	3003
??0270				  CODE	    0A72	3040
??0271				  CODE	    0A67	3029
??0272				  CODE	    0A6C	3035
??0273				  CODE	    0A89	3073

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 189



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0274				  CODE	    0A7E	3062
??0275				  CODE	    0A83	3068
??0276				  CODE	    0A89	3079
??0277				  CODE	    0A8C	3084
??0278				  CODE	    0A8F	3095
??0279				  CODE	    0B16	3323
??0280				  CODE	    0AC5	3191
??0281				  CODE	    0AE0	3235
??0282				  CODE	    0AFB	3279
??0283				  CODE	    0B2A	3357
??0284				  CODE	    0B41	3389
??0285				  CODE	    0B58	3422
??0286				  CODE	    0ACB	3197
??0287				  CODE	    0AC0	3186
??0288				  CODE	    0AC5	3192
??0289				  CODE	    0AE6	3241
??0290				  CODE	    0ADB	3230
??0291				  CODE	    0AE0	3236
??0292				  CODE	    0B01	3285
??0293				  CODE	    0AF6	3274
??0294				  CODE	    0AFB	3280
??0295				  CODE	    0B1C	3329
??0296				  CODE	    0B11	3318
??0297				  CODE	    0B16	3324
??0298				  CODE	    0B30	3363
??0299				  CODE	    0B25	3352
??0300				  CODE	    0B2A	3358
??0301				  CODE	    0B47	3395
??0302				  CODE	    0B3C	3384
??0303				  CODE	    0B41	3390
??0304				  CODE	    0B5E	3428
??0305				  CODE	    0B53	3417
??0306				  CODE	    0B58	3423
??0307				  CODE	    0B5E	3434
??0308				  CODE	    0B61	3439
??0309				  CODE	    0B64	3449
??0310				  CODE	    0B6C	3470
??0311				  CODE	    0B80	3488
??0312				  CODE	    0B75	3477
??0313				  CODE	    0B7A	3483
??0314				  CODE	    0B84	3494
??0315				  CODE	    0B90	3502
??0316				  CODE	    0B9C	3510
??0317				  CODE	    0BA8	3518
??0318				  CODE	    0BB4	3526
??0319				  CODE	    0BC0	3534
??0320				  CODE	    0BCC	3542
??0321				  CODE	    0BD8	3550
??0322				  CODE	    0BEB	3568
??0323				  CODE	    0BE0	3557
??0324				  CODE	    0BE5	3563
??0325				  CODE	    0BEB	3572
??0326				  CODE	    0BEE	3577
??0327				  CODE	    0BF1	3589
??0328				  CODE	    0BF4	3595
??0329				  CODE	    0D15	3954

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 190



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0330				  CODE	    0C70	3750
??0331				  CODE	    0CA7	3818
??0332				  CODE	    0CDE	3886
??0333				  CODE	    0D37	4000
??0336				  NUMBER    0000	3611
??0337				  NUMBER    0000	3639
??0338				  NUMBER    0000	3667
??0339				  NUMBER    0000	3695
??0340				  NUMBER    0000	3721
??0341				  CODE	    0C76	3756
??0342				  CODE	    0C6B	3745
??0343				  CODE	    0C70	3751
??0344				  NUMBER    0000	3763
??0345				  NUMBER    0000	3789
??0346				  CODE	    0CAD	3824
??0347				  CODE	    0CA2	3813
??0348				  CODE	    0CA7	3819
??0349				  NUMBER    0000	3831
??0350				  NUMBER    0000	3857
??0351				  CODE	    0CE4	3892
??0352				  CODE	    0CD9	3881
??0353				  CODE	    0CDE	3887
??0354				  NUMBER    0000	3899
??0355				  NUMBER    0000	3925
??0356				  CODE	    0D1B	3960
??0357				  CODE	    0D10	3949
??0358				  CODE	    0D15	3955
??0359				  NUMBER    0000	3971
??0360				  CODE	    0D3D	4006
??0361				  CODE	    0D32	3995
??0362				  CODE	    0D37	4001
??0363				  CODE	    0D3D	4022
??0364				  CODE	    0E5E	4381
??0365				  CODE	    0DB9	4177
??0366				  CODE	    0DF0	4245
??0367				  CODE	    0E27	4313
??0368				  CODE	    0E80	4427
??0371				  NUMBER    0000	4038
??0372				  NUMBER    0000	4066
??0373				  NUMBER    0000	4094
??0374				  NUMBER    0000	4122
??0375				  NUMBER    0000	4148
??0376				  CODE	    0DBF	4183
??0377				  CODE	    0DB4	4172
??0378				  CODE	    0DB9	4178
??0379				  NUMBER    0000	4190
??0380				  NUMBER    0000	4216
??0381				  CODE	    0DF6	4251
??0382				  CODE	    0DEB	4240
??0383				  CODE	    0DF0	4246
??0384				  NUMBER    0000	4258
??0385				  NUMBER    0000	4284
??0386				  CODE	    0E2D	4319
??0387				  CODE	    0E22	4308
??0388				  CODE	    0E27	4314
??0389				  NUMBER    0000	4326

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 191



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0390				  NUMBER    0000	4352
??0391				  CODE	    0E64	4387
??0392				  CODE	    0E59	4376
??0393				  CODE	    0E5E	4382
??0394				  NUMBER    0000	4398
??0395				  CODE	    0E86	4433
??0396				  CODE	    0E7B	4422
??0397				  CODE	    0E80	4428
??0398				  CODE	    0E86	4449
??0399				  CODE	    0FA7	4808
??0400				  CODE	    0F02	4604
??0401				  CODE	    0F39	4672
??0402				  CODE	    0F70	4740
??0403				  CODE	    0FC9	4854
??0406				  NUMBER    0000	4465
??0407				  NUMBER    0000	4493
??0408				  NUMBER    0000	4521
??0409				  NUMBER    0000	4549
??0410				  NUMBER    0000	4575
??0411				  CODE	    0F08	4610
??0412				  CODE	    0EFD	4599
??0413				  CODE	    0F02	4605
??0414				  NUMBER    0000	4617
??0415				  NUMBER    0000	4643
??0416				  CODE	    0F3F	4678
??0417				  CODE	    0F34	4667
??0418				  CODE	    0F39	4673
??0419				  NUMBER    0000	4685
??0420				  NUMBER    0000	4711
??0421				  CODE	    0F76	4746
??0422				  CODE	    0F6B	4735
??0423				  CODE	    0F70	4741
??0424				  NUMBER    0000	4753
??0425				  NUMBER    0000	4779
??0426				  CODE	    0FAD	4814
??0427				  CODE	    0FA2	4803
??0428				  CODE	    0FA7	4809
??0429				  NUMBER    0000	4825
??0430				  CODE	    0FCF	4860
??0431				  CODE	    0FC4	4849
??0432				  CODE	    0FC9	4855
??0433				  CODE	    0FCF	4876
??0434				  CODE	    10F0	5235
??0435				  CODE	    104B	5031
??0436				  CODE	    1082	5099
??0437				  CODE	    10B9	5167
??0438				  CODE	    1112	5281
??0441				  NUMBER    0000	4892
??0442				  NUMBER    0000	4920
??0443				  NUMBER    0000	4948
??0444				  NUMBER    0000	4976
??0445				  NUMBER    0000	5002
??0446				  CODE	    1051	5037
??0447				  CODE	    1046	5026
??0448				  CODE	    104B	5032
??0449				  NUMBER    0000	5044

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 192



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0450				  NUMBER    0000	5070
??0451				  CODE	    1088	5105
??0452				  CODE	    107D	5094
??0453				  CODE	    1082	5100
??0454				  NUMBER    0000	5112
??0455				  NUMBER    0000	5138
??0456				  CODE	    10BF	5173
??0457				  CODE	    10B4	5162
??0458				  CODE	    10B9	5168
??0459				  NUMBER    0000	5180
??0460				  NUMBER    0000	5206
??0461				  CODE	    10F6	5241
??0462				  CODE	    10EB	5230
??0463				  CODE	    10F0	5236
??0464				  NUMBER    0000	5252
??0465				  CODE	    1118	5287
??0466				  CODE	    110D	5276
??0467				  CODE	    1112	5282
??0468				  CODE	    1118	5305
??0469				  CODE	    111B	5310
??0470				  CODE	    111E	5322
??0471				  CODE	    1121	5328
??0472				  CODE	    1242	5687
??0473				  CODE	    119D	5483
??0474				  CODE	    11D4	5551
??0475				  CODE	    120B	5619
??0476				  CODE	    1264	5733
??0479				  NUMBER    0000	5344
??0480				  NUMBER    0000	5372
??0481				  NUMBER    0000	5400
??0482				  NUMBER    0000	5428
??0483				  NUMBER    0000	5454
??0484				  CODE	    11A3	5489
??0485				  CODE	    1198	5478
??0486				  CODE	    119D	5484
??0487				  NUMBER    0000	5496
??0488				  NUMBER    0000	5522
??0489				  CODE	    11DA	5557
??0490				  CODE	    11CF	5546
??0491				  CODE	    11D4	5552
??0492				  NUMBER    0000	5564
??0493				  NUMBER    0000	5590
??0494				  CODE	    1211	5625
??0495				  CODE	    1206	5614
??0496				  CODE	    120B	5620
??0497				  NUMBER    0000	5632
??0498				  NUMBER    0000	5658
??0499				  CODE	    1248	5693
??0500				  CODE	    123D	5682
??0501				  CODE	    1242	5688
??0502				  NUMBER    0000	5704
??0503				  CODE	    126A	5739
??0504				  CODE	    125F	5728
??0505				  CODE	    1264	5734
??0506				  CODE	    126A	5755
??0507				  CODE	    138B	6114

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 193



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0508				  CODE	    12E6	5910
??0509				  CODE	    131D	5978
??0510				  CODE	    1354	6046
??0511				  CODE	    13AD	6160
??0514				  NUMBER    0000	5771
??0515				  NUMBER    0000	5799
??0516				  NUMBER    0000	5827
??0517				  NUMBER    0000	5855
??0518				  NUMBER    0000	5881
??0519				  CODE	    12EC	5916
??0520				  CODE	    12E1	5905
??0521				  CODE	    12E6	5911
??0522				  NUMBER    0000	5923
??0523				  NUMBER    0000	5949
??0524				  CODE	    1323	5984
??0525				  CODE	    1318	5973
??0526				  CODE	    131D	5979
??0527				  NUMBER    0000	5991
??0528				  NUMBER    0000	6017
??0529				  CODE	    135A	6052
??0530				  CODE	    134F	6041
??0531				  CODE	    1354	6047
??0532				  NUMBER    0000	6059
??0533				  NUMBER    0000	6085
??0534				  CODE	    1391	6120
??0535				  CODE	    1386	6109
??0536				  CODE	    138B	6115
??0537				  NUMBER    0000	6131
??0538				  CODE	    13B3	6166
??0539				  CODE	    13A8	6155
??0540				  CODE	    13AD	6161
??0541				  CODE	    13B3	6182
??0542				  CODE	    14D4	6541
??0543				  CODE	    142F	6337
??0544				  CODE	    1466	6405
??0545				  CODE	    149D	6473
??0546				  CODE	    14F6	6587
??0549				  NUMBER    0000	6198
??0550				  NUMBER    0000	6226
??0551				  NUMBER    0000	6254
??0552				  NUMBER    0000	6282
??0553				  NUMBER    0000	6308
??0554				  CODE	    1435	6343
??0555				  CODE	    142A	6332
??0556				  CODE	    142F	6338
??0557				  NUMBER    0000	6350
??0558				  NUMBER    0000	6376
??0559				  CODE	    146C	6411
??0560				  CODE	    1461	6400
??0561				  CODE	    1466	6406
??0562				  NUMBER    0000	6418
??0563				  NUMBER    0000	6444
??0564				  CODE	    14A3	6479
??0565				  CODE	    1498	6468
??0566				  CODE	    149D	6474
??0567				  NUMBER    0000	6486

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 194



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0568				  NUMBER    0000	6512
??0569				  CODE	    14DA	6547
??0570				  CODE	    14CF	6536
??0571				  CODE	    14D4	6542
??0572				  NUMBER    0000	6558
??0573				  CODE	    14FC	6593
??0574				  CODE	    14F1	6582
??0575				  CODE	    14F6	6588
??0576				  CODE	    14FC	6609
??0577				  CODE	    161D	6968
??0578				  CODE	    1578	6764
??0579				  CODE	    15AF	6832
??0580				  CODE	    15E6	6900
??0581				  CODE	    163F	7014
??0584				  NUMBER    0001	6625
??0585				  NUMBER    0001	6653
??0586				  NUMBER    0001	6681
??0587				  NUMBER    0001	6709
??0588				  NUMBER    0001	6735
??0589				  CODE	    157E	6770
??0590				  CODE	    1573	6759
??0591				  CODE	    1578	6765
??0592				  NUMBER    0001	6777
??0593				  NUMBER    0001	6803
??0594				  CODE	    15B5	6838
??0595				  CODE	    15AA	6827
??0596				  CODE	    15AF	6833
??0597				  NUMBER    0001	6845
??0598				  NUMBER    0001	6871
??0599				  CODE	    15EC	6906
??0600				  CODE	    15E1	6895
??0601				  CODE	    15E6	6901
??0602				  NUMBER    0001	6913
??0603				  NUMBER    0001	6939
??0604				  CODE	    1623	6974
??0605				  CODE	    1618	6963
??0606				  CODE	    161D	6969
??0607				  NUMBER    0001	6985
??0608				  CODE	    1645	7020
??0609				  CODE	    163A	7009
??0610				  CODE	    163F	7015
??0611				  CODE	    1645	7036
??0612				  CODE	    1766	7395
??0613				  CODE	    16C1	7191
??0614				  CODE	    16F8	7259
??0615				  CODE	    172F	7327
??0616				  CODE	    1788	7441
??0619				  NUMBER    0001	7052
??0620				  NUMBER    0001	7080
??0621				  NUMBER    0001	7108
??0622				  NUMBER    0001	7136
??0623				  NUMBER    0001	7162
??0624				  CODE	    16C7	7197
??0625				  CODE	    16BC	7186
??0626				  CODE	    16C1	7192
??0627				  NUMBER    0001	7204

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 195



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0628				  NUMBER    0001	7230
??0629				  CODE	    16FE	7265
??0630				  CODE	    16F3	7254
??0631				  CODE	    16F8	7260
??0632				  NUMBER    0001	7272
??0633				  NUMBER    0001	7298
??0634				  CODE	    1735	7333
??0635				  CODE	    172A	7322
??0636				  CODE	    172F	7328
??0637				  NUMBER    0001	7340
??0638				  NUMBER    0001	7366
??0639				  CODE	    176C	7401
??0640				  CODE	    1761	7390
??0641				  CODE	    1766	7396
??0642				  NUMBER    0001	7412
??0643				  CODE	    178E	7447
??0644				  CODE	    1783	7436
??0645				  CODE	    1788	7442
??0646				  CODE	    178E	7466
??0647				  CODE	    1791	7471
??0648				  CODE	    1794	7483
??0649				  CODE	    1797	7489
??0650				  CODE	    18B8	7848
??0651				  CODE	    1813	7644
??0652				  CODE	    184A	7712
??0653				  CODE	    1881	7780
??0654				  CODE	    18DA	7894
??0657				  NUMBER    0000	7505
??0658				  NUMBER    0000	7533
??0659				  NUMBER    0000	7561
??0660				  NUMBER    0000	7589
??0661				  NUMBER    0000	7615
??0662				  CODE	    1819	7650
??0663				  CODE	    180E	7639
??0664				  CODE	    1813	7645
??0665				  NUMBER    0000	7657
??0666				  NUMBER    0000	7683
??0667				  CODE	    1850	7718
??0668				  CODE	    1845	7707
??0669				  CODE	    184A	7713
??0670				  NUMBER    0000	7725
??0671				  NUMBER    0000	7751
??0672				  CODE	    1887	7786
??0673				  CODE	    187C	7775
??0674				  CODE	    1881	7781
??0675				  NUMBER    0000	7793
??0676				  NUMBER    0000	7819
??0677				  CODE	    18BE	7854
??0678				  CODE	    18B3	7843
??0679				  CODE	    18B8	7849
??0680				  NUMBER    0000	7865
??0681				  CODE	    18E0	7900
??0682				  CODE	    18D5	7889
??0683				  CODE	    18DA	7895
??0684				  CODE	    18E0	7916
??0685				  CODE	    1A01	8275

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 196



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0686				  CODE	    195C	8071
??0687				  CODE	    1993	8139
??0688				  CODE	    19CA	8207
??0689				  CODE	    1A23	8321
??0692				  NUMBER    0001	7932
??0693				  NUMBER    0001	7960
??0694				  NUMBER    0001	7988
??0695				  NUMBER    0001	8016
??0696				  NUMBER    0001	8042
??0697				  CODE	    1962	8077
??0698				  CODE	    1957	8066
??0699				  CODE	    195C	8072
??0700				  NUMBER    0001	8084
??0701				  NUMBER    0001	8110
??0702				  CODE	    1999	8145
??0703				  CODE	    198E	8134
??0704				  CODE	    1993	8140
??0705				  NUMBER    0001	8152
??0706				  NUMBER    0001	8178
??0707				  CODE	    19D0	8213
??0708				  CODE	    19C5	8202
??0709				  CODE	    19CA	8208
??0710				  NUMBER    0001	8220
??0711				  NUMBER    0001	8246
??0712				  CODE	    1A07	8281
??0713				  CODE	    19FC	8270
??0714				  CODE	    1A01	8276
??0715				  NUMBER    0001	8292
??0716				  CODE	    1A29	8327
??0717				  CODE	    1A1E	8316
??0718				  CODE	    1A23	8322
??0719				  CODE	    1A29	8343
??0720				  CODE	    1B4A	8702
??0721				  CODE	    1AA5	8498
??0722				  CODE	    1ADC	8566
??0723				  CODE	    1B13	8634
??0724				  CODE	    1B6C	8748
??0727				  NUMBER    0000	8359
??0728				  NUMBER    0000	8387
??0729				  NUMBER    0000	8415
??0730				  NUMBER    0000	8443
??0731				  NUMBER    0000	8469
??0732				  CODE	    1AAB	8504
??0733				  CODE	    1AA0	8493
??0734				  CODE	    1AA5	8499
??0735				  NUMBER    0000	8511
??0736				  NUMBER    0000	8537
??0737				  CODE	    1AE2	8572
??0738				  CODE	    1AD7	8561
??0739				  CODE	    1ADC	8567
??0740				  NUMBER    0000	8579
??0741				  NUMBER    0000	8605
??0742				  CODE	    1B19	8640
??0743				  CODE	    1B0E	8629
??0744				  CODE	    1B13	8635
??0745				  NUMBER    0000	8647

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 197



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0746				  NUMBER    0000	8673
??0747				  CODE	    1B50	8708
??0748				  CODE	    1B45	8697
??0749				  CODE	    1B4A	8703
??0750				  NUMBER    0000	8719
??0751				  CODE	    1B72	8754
??0752				  CODE	    1B67	8743
??0753				  CODE	    1B6C	8749
??0754				  CODE	    1B72	8770
??0755				  CODE	    1C93	9129
??0756				  CODE	    1BEE	8925
??0757				  CODE	    1C25	8993
??0758				  CODE	    1C5C	9061
??0759				  CODE	    1CB5	9175
??0762				  NUMBER    0001	8786
??0763				  NUMBER    0001	8814
??0764				  NUMBER    0001	8842
??0765				  NUMBER    0001	8870
??0766				  NUMBER    0001	8896
??0767				  CODE	    1BF4	8931
??0768				  CODE	    1BE9	8920
??0769				  CODE	    1BEE	8926
??0770				  NUMBER    0001	8938
??0771				  NUMBER    0001	8964
??0772				  CODE	    1C2B	8999
??0773				  CODE	    1C20	8988
??0774				  CODE	    1C25	8994
??0775				  NUMBER    0001	9006
??0776				  NUMBER    0001	9032
??0777				  CODE	    1C62	9067
??0778				  CODE	    1C57	9056
??0779				  CODE	    1C5C	9062
??0780				  NUMBER    0001	9074
??0781				  NUMBER    0001	9100
??0782				  CODE	    1C99	9135
??0783				  CODE	    1C8E	9124
??0784				  CODE	    1C93	9130
??0785				  NUMBER    0001	9146
??0786				  CODE	    1CBB	9181
??0787				  CODE	    1CB0	9170
??0788				  CODE	    1CB5	9176
??0789				  CODE	    1CBB	9201
??0790				  CODE	    1CBE	9206
??0791				  CODE	    1CC1	9220
??0792				  CODE	    1CE4	9249
??0793				  CODE	    1CD9	9238
??0794				  CODE	    1CDE	9244
??0795				  CODE	    1D00	9274
??0796				  CODE	    1CF5	9263
??0797				  CODE	    1CFA	9269
??0798				  CODE	    1D20	9300
??0799				  CODE	    1D15	9289
??0800				  CODE	    1D1A	9295
??0801				  CODE	    1D3B	9324
??0802				  CODE	    1D30	9313
??0803				  CODE	    1D35	9319

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 198



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0804				  CODE	    1D3B	9328
??0805				  CODE	    1D3E	9333
??0806				  CODE	    1D41	9346
??0807				  CODE	    1D62	9374
??0808				  CODE	    1D57	9363
??0809				  CODE	    1D5C	9369
??0810				  CODE	    1D82	9410
??0811				  CODE	    1D77	9399
??0812				  CODE	    1D7C	9405
??0813				  CODE	    1D9E	9435
??0814				  CODE	    1D93	9424
??0815				  CODE	    1D98	9430
??0816				  CODE	    1D9E	9439
??0817				  CODE	    1DA1	9444
??0818				  CODE	    1DA4	9455
??0819				  CODE	    1DC0	9482
??0820				  CODE	    1DB5	9471
??0821				  CODE	    1DBA	9477
??0822				  CODE	    1DE6	9516
??0823				  CODE	    1DDB	9505
??0824				  CODE	    1DE0	9511
??0825				  CODE	    1DE6	9520
??0826				  CODE	    1DE9	9525
??0827				  CODE	    1DEC	9546
??0828				  CODE	    1E1C	9582
??0829				  CODE	    1E11	9571
??0830				  CODE	    1E16	9577
??0831				  CODE	    1E2D	9601
??0832				  CODE	    1E22	9590
??0833				  CODE	    1E27	9596
??0834				  CODE	    1E4B	9631
??0835				  CODE	    1E40	9620
??0836				  CODE	    1E45	9626
??0837				  CODE	    1E60	9653
??0838				  CODE	    1E55	9642
??0839				  CODE	    1E5A	9648
??0840				  CODE	    1E60	9657
??0841				  CODE	    1E63	9662
??0842				  CODE	    1E66	9677
??0843				  CODE	    1E97	9715
??0844				  CODE	    1E8C	9704
??0845				  CODE	    1E91	9710
??0846				  CODE	    1EC5	9750
??0847				  CODE	    1EBA	9739
??0848				  CODE	    1EBF	9745
??0849				  CODE	    1EC5	9755
??0850				  CODE	    1EC8	9760
??0851				  CODE	    1ECB	9772
??0852				  CODE	    1F15	9844
??0853				  CODE	    1F0A	9833
??0854				  CODE	    1F0F	9839
??0855				  CODE	    1F83	9924
??0856				  CODE	    1F78	9913
??0857				  CODE	    1F7D	9919
??0858				  CODE	    1FA9	9941
??0859				  CODE	    1FAC	9946

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 199



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0860				  CODE	    1FAF	9960
??0861				  CODE	    1FFE       10023
??0862				  CODE	    1FF3       10012
??0863				  CODE	    1FF8       10018
??0864				  CODE	    1FFE       10027
??0865				  CODE	    2001       10032
??0866				  CODE	    2008       10057
??0867				  CODE	    200B       10062
??0868				  CODE	    200E       10067
??0869				  CODE	    2011       10072
??0870				  CODE	    2014       10077
??0871				  CODE	    2017       10082
??0872				  CODE	    201A       10088
??0873				  CODE	    201D       10093
??0874				  CODE	    2022       10102
??0875				  CODE	    2025       10107
??0876				  CODE	    2028       10112
??0877				  CODE	    202B       10117
??0878				  CODE	    202E       10122
??0879				  CODE	    2031       10127
??0880				  CODE	    2034       10133
??0881				  CODE	    2037       10138
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6	  87
ACC				  DATA	      E0	  58
ARG0				  NUMBER    00C3	2392
ARG1				  NUMBER    00C5	2393
B				  DATA	      F0	  59
CY				  BIT	      D7	  88
DIR0				  NUMBER    0060	 101
DIR1				  NUMBER    0061	 102
DPH				  DATA	      83	  41
DPL				  DATA	      82	  40
EA				  BIT	      AF	  73
EOT				  MACRO	        	 131
ES				  BIT	      AC	  71
ET0				  BIT	      A9	  68
EX0				  BIT	      A8	  67
EXTI0				  CODE	    0003	  92
EXTI1				  CODE	    0013	  94
EXTINT0				  DATA	      C0	  56
F0				  BIT	      D5	  86
FAIL				  NUMBER    006E	 103
IE				  DATA	      A8	  53
NLOOPS				  NUMBER    0003	3467
OV				  BIT	      D2	  83
P				  BIT	      D0	  82
P0				  DATA	      80	  38
P1				  DATA	      90	  49
P2				  DATA	      A0	  52
P3				  DATA	      B0	  54
PSW				  DATA	      D0	  57
PUTC				  MACRO	        	 112
PUT_CRLF			  MACRO	        	 121
QUIT				  CODE	    203C       10145

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 200



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
RES				  NUMBER    0001	2394
RESET				  CODE	    0000	  91
RS0				  BIT	      D3	  84
RS1				  BIT	      D4	  85
RXIRQ				  BIT	      99	  77
RXRDY				  BIT	      9D	  79
SAVED_PSW			  NUMBER    0070	 104
SAVE_PSW			  MACRO	        	2224
SBUF				  DATA	      99	  51
SCON				  DATA	      98	  50
SET_CY				  MACRO	        	2238
SINT				  CODE	    0023	  96
SP				  DATA	      81	  39
STACK0				  NUMBER    009F	 105
START				  CODE	    0030	 153
S_SUB0				  CODE	    1E7D	9693
S_SUB1				  CODE	    1E87	9699
S_SUB2				  CODE	    1EAB	9728
S_SUB3				  CODE	    1EB5	9734
T0ARL				  BIT	      8C	  63
T0CEN				  BIT	      8D	  64
T0IRQ				  BIT	      88	  62
TA_B0				  CODE	    0041	 197
TA_C0				  CODE	    0044	 204
TA_C1				  CODE	    004B	 211
TA_C2				  CODE	    005A	 220
TA_C3				  CODE	    0046	 205
TA_C4				  CODE	    0063	 227
TA_D1				  CODE	    006F	 237
TA_D2				  CODE	    0077	 246
TA_E1				  CODE	    008A	 265
TB_A1				  CODE	    00CE	 348
TB_B0				  CODE	    00DF	 364
TB_B1				  CODE	    00E8	 368
TB_B2				  CODE	    00EE	 374
TB_C0				  CODE	    0171	 480
TB_C1				  CODE	    0179	 483
TB_C2				  CODE	    018A	 496
TB_C3				  CODE	    017E	 485
TB_C4				  CODE	    0183	 487
TB_D0				  CODE	    01A1	 519
TB_E0				  CODE	    01CE	 561
TB_F0				  CODE	    01F8	 606
TB_F1				  CODE	    0200	 610
TB_F2				  CODE	    0211	 623
TB_F3				  CODE	    0205	 612
TB_F4				  CODE	    020A	 614
TB_G0				  CODE	    0243	 662
TB_G1				  CODE	    0231	 645
TB_G2				  CODE	    023C	 653
TB_MA				  MACRO	        	 302
TB_MC				  MACRO	        	 380
TB_ME				  MACRO	        	 527
TB_MF				  MACRO	        	 569
TCH				  DATA	      8F	  48
TCL				  DATA	      8E	  47

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 201



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TC_A0				  CODE	    0265	 722
TC_A1				  CODE	    0257	 713
TC_A2				  CODE	    026E	 729
TC_A3				  CODE	    0276	 738
TC_B1				  CODE	    028C	 758
TC_C0				  CODE	    02A4	 778
TC_C1				  CODE	    0296	 768
TC_C2				  CODE	    02AC	 785
TC_C3				  CODE	    02B3	 794
TC_D0				  CODE	    02D0	 818
TC_D1				  CODE	    02C1	 806
TC_E0				  CODE	    02FD	 853
TC_F0				  CODE	    0320	 881
TC_G0				  CODE	    033A	 904
TC_H0				  CODE	    0358	 930
TC_H1				  CODE	    034E	 919
TC_H2				  CODE	    0345	 915
TC_H3				  CODE	    0353	 921
TC_I0				  CODE	    0374	 950
TC_I1				  CODE	    0366	 941
TC_I2				  CODE	    037D	 957
TC_I3				  CODE	    0385	 966
TC_J0				  CODE	    03A2	 989
TC_J1				  CODE	    0393	 977
TC_K0				  CODE	    03CF	1024
TC_L0				  CODE	    03F2	1052
TC_M0				  CODE	    040C	1075
TC_N0				  CODE	    042A	1101
TC_N1				  CODE	    0420	1090
TC_N2				  CODE	    0417	1086
TC_N3				  CODE	    0425	1092
TD_A0				  CODE	    0448	1154
TD_B0				  CODE	    046F	1189
TD_C0				  CODE	    0495	1223
TD_D0				  CODE	    04CD	1269
TEST_FAILED			  CODE	    2022       10099
TE_A0				  CODE	    04F0	1335
TE_B0				  CODE	    0575	1425
TE_C0				  CODE	    05A2	1462
TE_D0				  CODE	    05B5	1481
TE_E0				  CODE	    05D7	1507
TE_F0				  CODE	    05EF	1541
TE_G0				  CODE	    0664	1623
TE_H0				  CODE	    068D	1658
TE_I0				  CODE	    06AF	1684
TE_MA				  MACRO	        	1307
TE_MF				  MACRO	        	1515
TF_A0				  CODE	    070B	1778
TF_B0				  CODE	    0728	1804
TF_C0				  CODE	    073E	1824
TF_D0				  CODE	    0789	1878
TF_E0				  CODE	    07A8	1904
TF_F0				  CODE	    07E3	1958
TF_G0				  CODE	    07FE	1984
TF_H0				  CODE	    0817	2006
TF_I0				  CODE	    0836	2032

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 202



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TF_MA				  MACRO	        	1723
TF_MD				  MACRO	        	1832
TF_MF				  MACRO	        	1912
TG_A0				  CODE	    085B	2086
TG_B0				  CODE	    088D	2119
TG_C0				  CODE	    08A7	2142
TG_D0				  CODE	    08C2	2166
TG_E0				  CODE	    08D9	2189
TH				  DATA	      8D	  46
TIMER0				  CODE	    000B	  93
TIMER1				  CODE	    001B	  95
TIMER2				  CODE	    002B	  97
TK_A0				  CODE	    0B7A	3482
TK_B0				  CODE	    0BE5	3562
TK_MA				  MACRO	        	3455
TL				  DATA	      8C	  45
TOP_MA				  MACRO	        	2252
TOP_MB				  MACRO	        	2270
TOP_MC				  MACRO	        	2288
TO_A0				  CODE	    1CDE	9243
TO_B0				  CODE	    1CFA	9268
TO_C0				  CODE	    1D1A	9294
TO_D0				  CODE	    1D35	9318
TP_A0				  CODE	    1D5C	9368
TP_B0				  CODE	    1D7C	9404
TP_C0				  CODE	    1D98	9429
TQ0				  CODE	    1DB2	9467
TQ1				  CODE	    1DAE	9466
TQ_A0				  CODE	    1DBA	9476
TQ_B0				  CODE	    1DE0	9510
TR_A0				  CODE	    1E16	9576
TR_B0				  CODE	    1E27	9595
TR_C0				  CODE	    1E45	9625
TR_D0				  CODE	    1E5A	9647
TR_RV0				  CODE	    1E00	9560
TR_RV1				  CODE	    1E1F	9586
TR_RV2				  CODE	    1E21	9587
TR_RV3				  CODE	    1E38	9613
TR_RV4				  CODE	    1E53	9638
TR_SUB0				  CODE	    1E02	9561
TR_SUB1				  CODE	    800C       10168
TR_SUB1_FAIL			  CODE	    801E       10176
TR_SUB2				  CODE	    8000       10154
TR_SUB3				  CODE	    8006       10163
TSTAT				  DATA	      88	  43
TST_ALU				  MACRO	        	2313
TST_PSW				  MACRO	        	2229
TS_A0				  CODE	    1E91	9709
TS_B0				  CODE	    1EBF	9744
TT_A0				  CODE	    1F0F	9838
TT_A_DIVZERO			  CODE	    1F04	9823
TT_A_LOOP			  CODE	    1EDF	9794
TT_A_NEXT			  CODE	    1F06	9826
TT_A_TAB			  CODE	    1F17	9847
TT_A_TAB_END			  CODE	    1F44	9857
TT_B0				  CODE	    1F7D	9918

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 203



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TT_B_0				  CODE	    1F68	9897
TT_B_LOOP			  CODE	    1F4B	9871
TT_B_NOOVF			  CODE	    1F62	9892
TT_B_TAB			  CODE	    1F85	9927
TT_B_TAB_END			  CODE	    1FA9	9937
TU_A0				  CODE	    1FF8       10017
TU_A_DONE			  CODE	    1FF2       10008
TU_A_TEST			  CODE	    1FD4	9984
TXIRQ				  BIT	      98	  76
TXRDY				  BIT	      9C	  78
