
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	src\tb51_cpu.a51
	Object File:	bin\tb51_cpu.hex
	List File:	lst\tb51_cpu.lst



 Line  I  Addr  Code            Source

    1:				;-------------------------------------------------------------------------------
    2:				; tb51_cpu.a51 -- MCS51 instruction set test bench.
    3:				;-------------------------------------------------------------------------------
    4:				; This program is meant to verify the basic operation of an MCS51 CPU
    5:				; instruction set implementation.
    6:				; It is far too weak to rely on it exclusively but it can help detect gross
    7:				; implementation errors (overclocked CPUs, timing errors in FPGA cores, that
    8:				; kind of thing).
    9:				;
   10:				; The program is not yet ready to run on actual hardware (UART interface).
   11:				;
   12:				; For a full verification of the instruction set, an instruction set exerciser
   13:				; such as 'zexall' for the Z80 would be more suitable. This one is too weak.
   14:				;
   15:				; The program is meant to run in actual hardware or on a simulated environment.
   16:				; In the latter case you can use the co-simulation features of the light52
   17:				; project to pinpoint bugs.
   18:				;
   19:				; FIXME add assembly option to run tests in an (possibly infinite) loop.
   20:				;-------------------------------------------------------------------------------
   21:				; Major limitations:
   22:				;   1.- PSW is not checked for undue changes.
   23:				;   2.- <#imm> instructions are tested with one imm value only.
   24:				;   3.- <rel> jumps tested with small values (not near corner values).
   25:				;   4.- <bit> tested on 1 byte only, on 2 bits only.
   26:				;   5.- BCD instructions (DA, XCHG) not tested at all.
   27:				;
   28:				; Note there are too many limitations to list. Use this test bench as a first
   29:				; approximation only. If your CPU fails this test, it must be dead!
   30:				;-------------------------------------------------------------------------------
   31:
   32:				        ; Include the definitions for the light52 derivative
   33:				        $nomod51
   34:				        $include (light52.mcu)
   35: 1			;   Light52 processor definition file (for ASEM-51 assembler)
   36: 1			;   =========================================================
   37: 1
   38: 1	N	 80	P0          DATA        080H
   39: 1	N	 81	SP          DATA        081H
   40: 1	N	 82	DPL         DATA        082H
   41: 1	N	 83	DPH         DATA        083H
   42: 1			;PCON      DATA        087H
   43: 1	N	 88	TSTAT       DATA        088H

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   44: 1			;TMOD      DATA        089H
   45: 1	N	 8C	TL          DATA        08CH
   46: 1	N	 8D	TH          DATA        08DH
   47: 1	N	 8E	TCL         DATA        08EH
   48: 1	N	 8F	TCH         DATA        08FH
   49: 1	N	 90	P1          DATA        090H
   50: 1	N	 98	SCON        DATA        098H
   51: 1	N	 99	SBUF        DATA        099H
   52: 1	N	 A0	P2          DATA        0A0H
   53: 1	N	 A8	IE          DATA        0A8H
   54: 1	N	 B0	P3          DATA        0B0H
   55: 1			;IP        DATA        0B8H
   56: 1	N	 C0	EXTINT0     DATA        0C0H
   57: 1	N	 D0	PSW         DATA        0D0H
   58: 1	N	 E0	ACC         DATA        0E0H
   59: 1	N	 F0	B           DATA        0F0H
   60: 1
   61: 1			; TSTAT flags
   62: 1	N	 88	T0IRQ       BIT         088H
   63: 1	N	 8C	T0ARL       BIT         08CH
   64: 1	N	 8D	T0CEN       BIT         08DH
   65: 1
   66: 1			; IE flags
   67: 1	N	 A8	EX0         BIT         0A8H
   68: 1	N	 A9	ET0         BIT         0A9H
   69: 1			;EX1         BIT        0AAH
   70: 1			;ET1         BIT        0ABH
   71: 1	N	 AC	ES          BIT         0ACH
   72: 1			;ET2         BIT        0ADH
   73: 1	N	 AF	EA          BIT         0AFH
   74: 1
   75: 1			; SCON flags
   76: 1	N	 98	TXIRQ       BIT         098H
   77: 1	N	 99	RXIRQ       BIT         099H
   78: 1	N	 9C	TXRDY       BIT         09CH
   79: 1	N	 9D	RXRDY       BIT         09DH
   80: 1
   81: 1			; PSW flags
   82: 1	N	 D0	P           BIT        0D0H
   83: 1	N	 D2	OV          BIT        0D2H
   84: 1	N	 D3	RS0         BIT        0D3H
   85: 1	N	 D4	RS1         BIT        0D4H
   86: 1	N	 D5	F0          BIT        0D5H
   87: 1	N	 D6	AC          BIT        0D6H
   88: 1	N	 D7	CY          BIT        0D7H
   89: 1
   90: 1			; Interrupt vectors
   91: 1	N      0000	RESET       CODE       000H
   92: 1	N      0003	EXTI0       CODE       003H
   93: 1	N      000B	TIMER0      CODE       00BH
   94: 1	N      0013	EXTI1       CODE       013H
   95: 1	N      001B	TIMER1      CODE       01BH
   96: 1	N      0023	SINT        CODE       023H
   97: 1	N      002B	TIMER2      CODE       02BH
   98:
   99:				        ;-- Parameters common to all tests -------------------------------------

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

  100:
  101:		N      0060	dir0    set     060h                ; Address used in direct addressing tests
  102:		N      0061	dir1    set     061h                ; Address used in direct addressing tests
  103:		N      006E	fail    set     06eh                ; (IDATA) set to 1 upon test failure
  104:		N      0070	saved_psw set   070h                ; (IDATA) temp store for PSW value
  105:		N      009F	stack0  set     09fh                ; (IDATA) stack addr used for push/pop tests
  106:
  107:
  108:				        ;-- Macros common to all tests -----------------------------------------
  109:
  110:				        ; putc: send character to console (UART)
  111:				        ; If you change this macro, make sure it DOES NOT MODIFY PSW!
  112:				putc    macro   character
  113:				        local   putc_loop
  114:				putc_loop:
  115:				        ;jnb     SCON.1,putc_loop
  116:				        ;clr     SCON.1
  117:				        mov     SBUF,character
  118:				        endm
  119:
  120:				        ; put_crlf: send CR+LF to console
  121:				put_crlf macro
  122:				        putc    #13
  123:				        putc    #10
  124:				        endm
  125:
  126:				        ;eot char, label: 'end of test' to be used at the end of all tests.
  127:				        ; If you run into this macro it will print character 'char' and
  128:				        ; continue.
  129:				        ; If you jump to label 'label', it will instead print char '?' and
  130:				        ; will set variable 'fail' to 1, then it will continue.
  131:				eot     macro   char,label
  132:				        local   skip
  133:				        putc    #char
  134:				        sjmp    skip
  135:				label:  putc    #'?'
  136:				        mov     fail,#001h
  137:				skip:
  138:				        endm
  139:
  140:				        ;-- Reset & interrupt vectors ------------------------------------------
  141:
  142:		N      0000	        org     00h
  143:	  0000	02 00 30	        ljmp    start               ; We'll assume LJMP works this far...
  144:		N      0003	        org     03h
  145:		N      000B	        org     0bh
  146:		N      0013	        org     13h
  147:		N      001B	        org     1bh
  148:		N      0023	        org     23h
  149:
  150:
  151:				        ;-- Main test program --------------------------------------------------
  152:		N      0030	        org     30h
  153:	  0030			start:
  154:				        ; Initialize serial port
  155:				        ;(leave it with the default configuration: 19200-8-N-1)

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

  156:				        ;mov     TMOD,#20h           ; C/T = 0, Mode = 2
  157:				        ;mov     TH1,#0fdh           ; 9600 bauds @11.xxx MHz
  158:				        ;mov     TCON,#40h           ; Enable T1
  159:				        ;mov     SCON,#52h           ; 8/N/1, TI enabled
  160:
  161:				        ; Clear failure flag
  162:	  0030	75 6E 00	        mov     fail,#000h
  163:
  164:
  165:				        ;-- Test series A ------------------------------------------------------
  166:				        ; Test the basic opcodes needed in later tests:
  167:				        ; a.- Serial port initialization is OK
  168:				        ; a.- Bootstrap instructions work as used
  169:				        ; b.- <SJMP rel> (small positive rel only)
  170:				        ; c.- ACC can be loaded with direct mode addressing (as an SFR)
  171:				        ; c.- <CJNE a,#imm,rel>
  172:				        ; d.- <DJNZ dir, rel> (small positive rel only)
  173:				        ; e.- <MOV  a,dir>
  174:				        ; Note that one instance of LJMP has been tested too.
  175:
  176:				        putc    #'A'                ; start of test series
  177+ 1  0033			??0000:
  178+ 1			        ;jnb     SCON.1,putc_loop
  179+ 1			        ;clr     SCON.1
  180+ 1  0033	75 99 41	        mov     SBUF,#'A'
  181:
  182:				        ; If we arrive here at all, and you see the chars in the
  183:				        ; terminal, the A.a test has passed
  184:				        putc    #'a'
  185+ 1  0036			??0001:
  186+ 1			        ;jnb     SCON.1,putc_loop
  187+ 1			        ;clr     SCON.1
  188+ 1  0036	75 99 61	        mov     SBUF,#'a'
  189:
  190:	  0039	80 06		        sjmp    ta_b0               ; <SJMP rel> with very small positive rel
  191:				        putc    #'?'
  192+ 1  003B			??0002:
  193+ 1			        ;jnb     SCON.1,putc_loop
  194+ 1			        ;clr     SCON.1
  195+ 1  003B	75 99 3F	        mov     SBUF,#'?'
  196:	  003E	75 6E 01	        mov     fail,#001h
  197:	  0041			ta_b0:  putc    #'b'
  198+ 1  0041			??0003:
  199+ 1			        ;jnb     SCON.1,putc_loop
  200+ 1			        ;clr     SCON.1
  201+ 1  0041	75 99 62	        mov     SBUF,#'b'
  202:
  203:
  204:	  0044	80 05		ta_c0:  sjmp    ta_c1
  205:	  0046			ta_c3:  putc    #'c'
  206+ 1  0046			??0004:
  207+ 1			        ;jnb     SCON.1,putc_loop
  208+ 1			        ;clr     SCON.1
  209+ 1  0046	75 99 63	        mov     SBUF,#'c'
  210:	  0049	80 18		        sjmp    ta_c4
  211:	  004B	75 E0 5A	ta_c1:  mov     0e0h,#5ah           ; load A as SFR

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



 Line  I  Addr  Code            Source

  212:	  004E	B4 5A F5	        cjne    a,#5ah,ta_c3        ; test cjne with == args...
  213:	  0051	B4 7A 06	        cjne    a,#7ah,ta_c2        ; ...with != args, rel>0...
  214:				        putc    #'?'
  215+ 1  0054			??0005:
  216+ 1			        ;jnb     SCON.1,putc_loop
  217+ 1			        ;clr     SCON.1
  218+ 1  0054	75 99 3F	        mov     SBUF,#'?'
  219:	  0057	75 6E 01	        mov     fail,#001h
  220:	  005A	B4 7A E9	ta_c2:  cjne    a,#7ah,ta_c3        ; ...and with != args, rel<0
  221:				        putc    #'?'
  222+ 1  005D			??0006:
  223+ 1			        ;jnb     SCON.1,putc_loop
  224+ 1			        ;clr     SCON.1
  225+ 1  005D	75 99 3F	        mov     SBUF,#'?'
  226:	  0060	75 6E 01	        mov     fail,#001h
  227:	  0063			ta_c4:
  228:
  229:	  0063	75 60 02	        mov     dir0,#02h
  230:	  0066	D5 60 06	        djnz    dir0,ta_d1
  231:				        putc    #'?'
  232+ 1  0069			??0007:
  233+ 1			        ;jnb     SCON.1,putc_loop
  234+ 1			        ;clr     SCON.1
  235+ 1  0069	75 99 3F	        mov     SBUF,#'?'
  236:	  006C	75 6E 01	        mov     fail,#001h
  237:	  006F	D5 60 05	ta_d1:  djnz    dir0,ta_d2
  238:
  239:				        eot     'd',ta_d2
  240+ 1			        putc    #'d'
  241+ 2  0072			??0009:
  242+ 2			        ;jnb     SCON.1,putc_loop
  243+ 2			        ;clr     SCON.1
  244+ 2  0072	75 99 64	        mov     SBUF,#'d'
  245+ 1  0075	80 06		        sjmp    ??0008
  246+ 1  0077			ta_d2:  putc    #'?'
  247+ 2  0077			??0010:
  248+ 2			        ;jnb     SCON.1,putc_loop
  249+ 2			        ;clr     SCON.1
  250+ 2  0077	75 99 3F	        mov     SBUF,#'?'
  251+ 1  007A	75 6E 01	        mov     fail,#001h
  252+ 1  007D			??0008:
  253:
  254:	  007D	75 60 A5	        mov     dir0,#0a5h          ; test mov a,dir
  255:	  0080	E5 60		        mov     a,dir0
  256:	  0082	B4 A5 05	        cjne    a,#0a5h,ta_e1
  257:
  258:				        eot     'e',ta_e1
  259+ 1			        putc    #'e'
  260+ 2  0085			??0012:
  261+ 2			        ;jnb     SCON.1,putc_loop
  262+ 2			        ;clr     SCON.1
  263+ 2  0085	75 99 65	        mov     SBUF,#'e'
  264+ 1  0088	80 06		        sjmp    ??0011
  265+ 1  008A			ta_e1:  putc    #'?'
  266+ 2  008A			??0013:
  267+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6



 Line  I  Addr  Code            Source

  268+ 2			        ;clr     SCON.1
  269+ 2  008A	75 99 3F	        mov     SBUF,#'?'
  270+ 1  008D	75 6E 01	        mov     fail,#001h
  271+ 1  0090			??0011:
  272:
  273:				        put_crlf                    ; end of test series
  274+ 1			        putc    #13
  275+ 2  0090			??0014:
  276+ 2			        ;jnb     SCON.1,putc_loop
  277+ 2			        ;clr     SCON.1
  278+ 2  0090	75 99 0D	        mov     SBUF,#13
  279+ 1			        putc    #10
  280+ 2  0093			??0015:
  281+ 2			        ;jnb     SCON.1,putc_loop
  282+ 2			        ;clr     SCON.1
  283+ 2  0093	75 99 0A	        mov     SBUF,#10
  284:
  285:				        ;-- Test series B ------------------------------------------------------
  286:				        ; Test CJNE plus a few aux opcodes
  287:				        ; a.- <MOV Rn, #imm>
  288:				        ; a.- <MOV a, Rn>
  289:				        ; b.- <JC rel>, <JNC rel>
  290:				        ; c.- <CJNE Rn, #imm, rel>
  291:				        ; d.- <SETB C>, <CLR C>, <CPL C>
  292:				        ; e.- <MOV @Ri, #imm>
  293:				        ; f.- <CJNE @Ri, #imm, rel>
  294:				        ; g.- <CJNE A, dir, rel>
  295:
  296:				        putc    #'B'                ; start of test series
  297+ 1  0096			??0016:
  298+ 1			        ;jnb     SCON.1,putc_loop
  299+ 1			        ;clr     SCON.1
  300+ 1  0096	75 99 42	        mov     SBUF,#'B'
  301:
  302:				tb_ma   macro   reg,val
  303:				        mov     reg,val
  304:				        mov     a,reg
  305:				        cjne    a,val,tb_a1
  306:				        endm
  307:
  308:				        tb_ma   r0,#081h
  309+ 1  0099	78 81		        mov     r0,#081h
  310+ 1  009B	E8		        mov     a,r0
  311+ 1  009C	B4 81 2F	        cjne    a,#081h,tb_a1
  312:				        tb_ma   r1,#043h
  313+ 1  009F	79 43		        mov     r1,#043h
  314+ 1  00A1	E9		        mov     a,r1
  315+ 1  00A2	B4 43 29	        cjne    a,#043h,tb_a1
  316:				        tb_ma   r2,#027h
  317+ 1  00A5	7A 27		        mov     r2,#027h
  318+ 1  00A7	EA		        mov     a,r2
  319+ 1  00A8	B4 27 23	        cjne    a,#027h,tb_a1
  320:				        tb_ma   r3,#0c2h
  321+ 1  00AB	7B C2		        mov     r3,#0c2h
  322+ 1  00AD	EB		        mov     a,r3
  323+ 1  00AE	B4 C2 1D	        cjne    a,#0c2h,tb_a1

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 7



 Line  I  Addr  Code            Source

  324:				        tb_ma   r4,#0f1h
  325+ 1  00B1	7C F1		        mov     r4,#0f1h
  326+ 1  00B3	EC		        mov     a,r4
  327+ 1  00B4	B4 F1 17	        cjne    a,#0f1h,tb_a1
  328:				        tb_ma   r5,#004h
  329+ 1  00B7	7D 04		        mov     r5,#004h
  330+ 1  00B9	ED		        mov     a,r5
  331+ 1  00BA	B4 04 11	        cjne    a,#004h,tb_a1
  332:				        tb_ma   r6,#092h
  333+ 1  00BD	7E 92		        mov     r6,#092h
  334+ 1  00BF	EE		        mov     a,r6
  335+ 1  00C0	B4 92 0B	        cjne    a,#092h,tb_a1
  336:				        tb_ma   r7,#01fh
  337+ 1  00C3	7F 1F		        mov     r7,#01fh
  338+ 1  00C5	EF		        mov     a,r7
  339+ 1  00C6	B4 1F 05	        cjne    a,#01fh,tb_a1
  340:
  341:				        eot     'a',tb_a1
  342+ 1			        putc    #'a'
  343+ 2  00C9			??0018:
  344+ 2			        ;jnb     SCON.1,putc_loop
  345+ 2			        ;clr     SCON.1
  346+ 2  00C9	75 99 61	        mov     SBUF,#'a'
  347+ 1  00CC	80 06		        sjmp    ??0017
  348+ 1  00CE			tb_a1:  putc    #'?'
  349+ 2  00CE			??0019:
  350+ 2			        ;jnb     SCON.1,putc_loop
  351+ 2			        ;clr     SCON.1
  352+ 2  00CE	75 99 3F	        mov     SBUF,#'?'
  353+ 1  00D1	75 6E 01	        mov     fail,#001h
  354+ 1  00D4			??0017:
  355:
  356:	  00D4	75 D0 80	        mov     PSW,#80h            ; <JC rel>, <JNC rel>
  357:	  00D7	40 06		        jc      tb_b0
  358:				        putc    #'?'
  359+ 1  00D9			??0020:
  360+ 1			        ;jnb     SCON.1,putc_loop
  361+ 1			        ;clr     SCON.1
  362+ 1  00D9	75 99 3F	        mov     SBUF,#'?'
  363:	  00DC	75 6E 01	        mov     fail,#001h
  364:	  00DF	50 07		tb_b0:  jnc     tb_b1
  365:	  00E1	75 D0 00	        mov     PSW,#00h
  366:	  00E4	40 02		        jc      tb_b1
  367:	  00E6	50 06		        jnc     tb_b2
  368:	  00E8			tb_b1:  putc    #'?'
  369+ 1  00E8			??0021:
  370+ 1			        ;jnb     SCON.1,putc_loop
  371+ 1			        ;clr     SCON.1
  372+ 1  00E8	75 99 3F	        mov     SBUF,#'?'
  373:	  00EB	75 6E 01	        mov     fail,#001h
  374:	  00EE			tb_b2:  putc    #'b'
  375+ 1  00EE			??0022:
  376+ 1			        ;jnb     SCON.1,putc_loop
  377+ 1			        ;clr     SCON.1
  378+ 1  00EE	75 99 62	        mov     SBUF,#'b'
  379:

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 8



 Line  I  Addr  Code            Source

  380:				tb_mc   macro   reg,val
  381:				        local   tb_mc0
  382:				        local   tb_mc1
  383:				        mov     reg,val+1
  384:				        cjne    reg,val,tb_mc0
  385:				        putc    #'?'
  386:				        mov     fail,#001h
  387:				tb_mc1: mov     reg,val
  388:				tb_mc0: cjne    reg,val,tb_mc1
  389:				        endm
  390:
  391:				        tb_mc   r0,#091h            ; first test the jumps for all Rn regs
  392+ 1  00F1	78 92		        mov     r0,#091h+1
  393+ 1  00F3	B8 91 08	        cjne    r0,#091h,??0023
  394+ 1			        putc    #'?'
  395+ 2  00F6			??0025:
  396+ 2			        ;jnb     SCON.1,putc_loop
  397+ 2			        ;clr     SCON.1
  398+ 2  00F6	75 99 3F	        mov     SBUF,#'?'
  399+ 1  00F9	75 6E 01	        mov     fail,#001h
  400+ 1  00FC	78 91		??0024: mov     r0,#091h
  401+ 1  00FE	B8 91 FB	??0023: cjne    r0,#091h,??0024
  402:				        tb_mc   r1,#0a2h
  403+ 1  0101	79 A3		        mov     r1,#0a2h+1
  404+ 1  0103	B9 A2 08	        cjne    r1,#0a2h,??0026
  405+ 1			        putc    #'?'
  406+ 2  0106			??0028:
  407+ 2			        ;jnb     SCON.1,putc_loop
  408+ 2			        ;clr     SCON.1
  409+ 2  0106	75 99 3F	        mov     SBUF,#'?'
  410+ 1  0109	75 6E 01	        mov     fail,#001h
  411+ 1  010C	79 A2		??0027: mov     r1,#0a2h
  412+ 1  010E	B9 A2 FB	??0026: cjne    r1,#0a2h,??0027
  413:				        tb_mc   r2,#0b3h
  414+ 1  0111	7A B4		        mov     r2,#0b3h+1
  415+ 1  0113	BA B3 08	        cjne    r2,#0b3h,??0029
  416+ 1			        putc    #'?'
  417+ 2  0116			??0031:
  418+ 2			        ;jnb     SCON.1,putc_loop
  419+ 2			        ;clr     SCON.1
  420+ 2  0116	75 99 3F	        mov     SBUF,#'?'
  421+ 1  0119	75 6E 01	        mov     fail,#001h
  422+ 1  011C	7A B3		??0030: mov     r2,#0b3h
  423+ 1  011E	BA B3 FB	??0029: cjne    r2,#0b3h,??0030
  424:				        tb_mc   r3,#0c4h
  425+ 1  0121	7B C5		        mov     r3,#0c4h+1
  426+ 1  0123	BB C4 08	        cjne    r3,#0c4h,??0032
  427+ 1			        putc    #'?'
  428+ 2  0126			??0034:
  429+ 2			        ;jnb     SCON.1,putc_loop
  430+ 2			        ;clr     SCON.1
  431+ 2  0126	75 99 3F	        mov     SBUF,#'?'
  432+ 1  0129	75 6E 01	        mov     fail,#001h
  433+ 1  012C	7B C4		??0033: mov     r3,#0c4h
  434+ 1  012E	BB C4 FB	??0032: cjne    r3,#0c4h,??0033
  435:				        tb_mc   r4,#0d5h

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 9



 Line  I  Addr  Code            Source

  436+ 1  0131	7C D6		        mov     r4,#0d5h+1
  437+ 1  0133	BC D5 08	        cjne    r4,#0d5h,??0035
  438+ 1			        putc    #'?'
  439+ 2  0136			??0037:
  440+ 2			        ;jnb     SCON.1,putc_loop
  441+ 2			        ;clr     SCON.1
  442+ 2  0136	75 99 3F	        mov     SBUF,#'?'
  443+ 1  0139	75 6E 01	        mov     fail,#001h
  444+ 1  013C	7C D5		??0036: mov     r4,#0d5h
  445+ 1  013E	BC D5 FB	??0035: cjne    r4,#0d5h,??0036
  446:				        tb_mc   r5,#0e6h
  447+ 1  0141	7D E7		        mov     r5,#0e6h+1
  448+ 1  0143	BD E6 08	        cjne    r5,#0e6h,??0038
  449+ 1			        putc    #'?'
  450+ 2  0146			??0040:
  451+ 2			        ;jnb     SCON.1,putc_loop
  452+ 2			        ;clr     SCON.1
  453+ 2  0146	75 99 3F	        mov     SBUF,#'?'
  454+ 1  0149	75 6E 01	        mov     fail,#001h
  455+ 1  014C	7D E6		??0039: mov     r5,#0e6h
  456+ 1  014E	BD E6 FB	??0038: cjne    r5,#0e6h,??0039
  457:				        tb_mc   r6,#0f7h
  458+ 1  0151	7E F8		        mov     r6,#0f7h+1
  459+ 1  0153	BE F7 08	        cjne    r6,#0f7h,??0041
  460+ 1			        putc    #'?'
  461+ 2  0156			??0043:
  462+ 2			        ;jnb     SCON.1,putc_loop
  463+ 2			        ;clr     SCON.1
  464+ 2  0156	75 99 3F	        mov     SBUF,#'?'
  465+ 1  0159	75 6E 01	        mov     fail,#001h
  466+ 1  015C	7E F7		??0042: mov     r6,#0f7h
  467+ 1  015E	BE F7 FB	??0041: cjne    r6,#0f7h,??0042
  468:				        tb_mc   r7,#008h
  469+ 1  0161	7F 09		        mov     r7,#008h+1
  470+ 1  0163	BF 08 08	        cjne    r7,#008h,??0044
  471+ 1			        putc    #'?'
  472+ 2  0166			??0046:
  473+ 2			        ;jnb     SCON.1,putc_loop
  474+ 2			        ;clr     SCON.1
  475+ 2  0166	75 99 3F	        mov     SBUF,#'?'
  476+ 1  0169	75 6E 01	        mov     fail,#001h
  477+ 1  016C	7F 08		??0045: mov     r7,#008h
  478+ 1  016E	BF 08 FB	??0044: cjne    r7,#008h,??0045
  479:
  480:	  0171	75 D0 00	tb_c0:  mov     PSW,#00h            ; now test the C flag with a single Rn reg
  481:	  0174	78 34		        mov     r0,#034h
  482:	  0176	B8 35 00	        cjne    r0,#035h,tb_c1
  483:	  0179	50 0F		tb_c1:  jnc     tb_c2
  484:	  017B	B8 34 00	        cjne    r0,#034h,tb_c3
  485:	  017E	40 0A		tb_c3:  jc      tb_c2
  486:	  0180	B8 33 00	        cjne    r0,#033h,tb_c4
  487:	  0183	40 05		tb_c4:  jc      tb_c2
  488:
  489:				        eot     'c',tb_c2
  490+ 1			        putc    #'c'
  491+ 2  0185			??0048:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 10



 Line  I  Addr  Code            Source

  492+ 2			        ;jnb     SCON.1,putc_loop
  493+ 2			        ;clr     SCON.1
  494+ 2  0185	75 99 63	        mov     SBUF,#'c'
  495+ 1  0188	80 06		        sjmp    ??0047
  496+ 1  018A			tb_c2:  putc    #'?'
  497+ 2  018A			??0049:
  498+ 2			        ;jnb     SCON.1,putc_loop
  499+ 2			        ;clr     SCON.1
  500+ 2  018A	75 99 3F	        mov     SBUF,#'?'
  501+ 1  018D	75 6E 01	        mov     fail,#001h
  502+ 1  0190			??0047:
  503:
  504:	  0190	75 D0 80	        mov     PSW,#80h            ; test C set, reset and complement
  505:	  0193	C3		        clr     c
  506:	  0194	40 0B		        jc      tb_d0
  507:	  0196	D3		        setb    c
  508:	  0197	50 08		        jnc     tb_d0
  509:	  0199	B3		        cpl     c
  510:	  019A	40 05		        jc      tb_d0
  511:
  512:				        eot     'd',tb_d0
  513+ 1			        putc    #'d'
  514+ 2  019C			??0051:
  515+ 2			        ;jnb     SCON.1,putc_loop
  516+ 2			        ;clr     SCON.1
  517+ 2  019C	75 99 64	        mov     SBUF,#'d'
  518+ 1  019F	80 06		        sjmp    ??0050
  519+ 1  01A1			tb_d0:  putc    #'?'
  520+ 2  01A1			??0052:
  521+ 2			        ;jnb     SCON.1,putc_loop
  522+ 2			        ;clr     SCON.1
  523+ 2  01A1	75 99 3F	        mov     SBUF,#'?'
  524+ 1  01A4	75 6E 01	        mov     fail,#001h
  525+ 1  01A7			??0050:
  526:
  527:				tb_me   macro   reg
  528:				        mov     reg,#dir0
  529:				        mov     dir0,#12h
  530:				        mov     a,dir0
  531:				        cjne    a,#012h,tb_e0
  532:				        mov     @reg,#0f5h
  533:				        mov     a,dir0
  534:				        cjne    a,#0f5h,tb_e0
  535:				        endm
  536:
  537:				        tb_me   r0                  ; test <mov @ri, #imm> with both regs
  538+ 1  01A7	78 60		        mov     r0,#dir0
  539+ 1  01A9	75 60 12	        mov     dir0,#12h
  540+ 1  01AC	E5 60		        mov     a,dir0
  541+ 1  01AE	B4 12 1D	        cjne    a,#012h,tb_e0
  542+ 1  01B1	76 F5		        mov     @r0,#0f5h
  543+ 1  01B3	E5 60		        mov     a,dir0
  544+ 1  01B5	B4 F5 16	        cjne    a,#0f5h,tb_e0
  545:				        tb_me   r1
  546+ 1  01B8	79 60		        mov     r1,#dir0
  547+ 1  01BA	75 60 12	        mov     dir0,#12h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 11



 Line  I  Addr  Code            Source

  548+ 1  01BD	E5 60		        mov     a,dir0
  549+ 1  01BF	B4 12 0C	        cjne    a,#012h,tb_e0
  550+ 1  01C2	77 F5		        mov     @r1,#0f5h
  551+ 1  01C4	E5 60		        mov     a,dir0
  552+ 1  01C6	B4 F5 05	        cjne    a,#0f5h,tb_e0
  553:
  554:				        eot     'e',tb_e0
  555+ 1			        putc    #'e'
  556+ 2  01C9			??0054:
  557+ 2			        ;jnb     SCON.1,putc_loop
  558+ 2			        ;clr     SCON.1
  559+ 2  01C9	75 99 65	        mov     SBUF,#'e'
  560+ 1  01CC	80 06		        sjmp    ??0053
  561+ 1  01CE			tb_e0:  putc    #'?'
  562+ 2  01CE			??0055:
  563+ 2			        ;jnb     SCON.1,putc_loop
  564+ 2			        ;clr     SCON.1
  565+ 2  01CE	75 99 3F	        mov     SBUF,#'?'
  566+ 1  01D1	75 6E 01	        mov     fail,#001h
  567+ 1  01D4			??0053:
  568:
  569:				tb_mf   macro   reg,val
  570:				        local   tb_mf0
  571:				        local   tb_mf1
  572:				        mov     reg,#30h
  573:				        mov     @reg,val+1
  574:				        cjne    @reg,val,tb_mf0
  575:				        putc    #'?'
  576:				        mov     fail,#001h
  577:				tb_mf1: mov     @reg,val
  578:				tb_mf0: cjne    @reg,val,tb_mf1
  579:				        endm
  580:
  581:				        tb_mf   r0,#12h
  582+ 1  01D4	78 30		        mov     r0,#30h
  583+ 1  01D6	76 13		        mov     @r0,#12h+1
  584+ 1  01D8	B6 12 08	        cjne    @r0,#12h,??0056
  585+ 1			        putc    #'?'
  586+ 2  01DB			??0058:
  587+ 2			        ;jnb     SCON.1,putc_loop
  588+ 2			        ;clr     SCON.1
  589+ 2  01DB	75 99 3F	        mov     SBUF,#'?'
  590+ 1  01DE	75 6E 01	        mov     fail,#001h
  591+ 1  01E1	76 12		??0057: mov     @r0,#12h
  592+ 1  01E3	B6 12 FB	??0056: cjne    @r0,#12h,??0057
  593:				        tb_mf   r1,#34h
  594+ 1  01E6	79 30		        mov     r1,#30h
  595+ 1  01E8	77 35		        mov     @r1,#34h+1
  596+ 1  01EA	B7 34 08	        cjne    @r1,#34h,??0059
  597+ 1			        putc    #'?'
  598+ 2  01ED			??0061:
  599+ 2			        ;jnb     SCON.1,putc_loop
  600+ 2			        ;clr     SCON.1
  601+ 2  01ED	75 99 3F	        mov     SBUF,#'?'
  602+ 1  01F0	75 6E 01	        mov     fail,#001h
  603+ 1  01F3	77 34		??0060: mov     @r1,#34h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 12



 Line  I  Addr  Code            Source

  604+ 1  01F5	B7 34 FB	??0059: cjne    @r1,#34h,??0060
  605:
  606:	  01F8	78 30		tb_f0:  mov     r0,#30h             ; now test the C flag with a single Rn reg
  607:	  01FA	C3		        clr     c
  608:	  01FB	76 34		        mov     @r0,#034h
  609:	  01FD	B6 35 00	        cjne    @r0,#035h,tb_f1
  610:	  0200	50 0F		tb_f1:  jnc     tb_f2
  611:	  0202	B6 34 00	        cjne    @r0,#034h,tb_f3
  612:	  0205	40 0A		tb_f3:  jc      tb_f2
  613:	  0207	B6 33 00	        cjne    @r0,#033h,tb_f4
  614:	  020A	40 05		tb_f4:  jc      tb_f2
  615:
  616:				        eot     'f',tb_f2
  617+ 1			        putc    #'f'
  618+ 2  020C			??0063:
  619+ 2			        ;jnb     SCON.1,putc_loop
  620+ 2			        ;clr     SCON.1
  621+ 2  020C	75 99 66	        mov     SBUF,#'f'
  622+ 1  020F	80 06		        sjmp    ??0062
  623+ 1  0211			tb_f2:  putc    #'?'
  624+ 2  0211			??0064:
  625+ 2			        ;jnb     SCON.1,putc_loop
  626+ 2			        ;clr     SCON.1
  627+ 2  0211	75 99 3F	        mov     SBUF,#'?'
  628+ 1  0214	75 6E 01	        mov     fail,#001h
  629+ 1  0217			??0062:
  630:
  631:	  0217	75 60 C0	        mov     dir0,#0c0h
  632:	  021A	75 31 C1	        mov     031h,#0c1h
  633:	  021D	75 32 C2	        mov     032h,#0c2h
  634:	  0220	C3		        clr     c
  635:	  0221	74 C1		        mov     a,#0c1h
  636:	  0223	B5 31 1D	        cjne    a,031h,tb_g0
  637:	  0226	40 1B		        jc      tb_g0
  638:	  0228	B5 32 06	        cjne    a,032h,tb_g1
  639:				        putc    #'?'
  640+ 1  022B			??0065:
  641+ 1			        ;jnb     SCON.1,putc_loop
  642+ 1			        ;clr     SCON.1
  643+ 1  022B	75 99 3F	        mov     SBUF,#'?'
  644:	  022E	75 6E 01	        mov     fail,#001h
  645:	  0231	50 10		tb_g1:  jnc     tb_g0
  646:	  0233	B5 60 06	        cjne    a,dir0,tb_g2
  647:				        putc    #'$'
  648+ 1  0236			??0066:
  649+ 1			        ;jnb     SCON.1,putc_loop
  650+ 1			        ;clr     SCON.1
  651+ 1  0236	75 99 24	        mov     SBUF,#'$'
  652:	  0239	75 6E 01	        mov     fail,#001h
  653:	  023C	40 05		tb_g2:  jc      tb_g0
  654:
  655:				        eot     'g',tb_g0
  656+ 1			        putc    #'g'
  657+ 2  023E			??0068:
  658+ 2			        ;jnb     SCON.1,putc_loop
  659+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 13



 Line  I  Addr  Code            Source

  660+ 2  023E	75 99 67	        mov     SBUF,#'g'
  661+ 1  0241	80 06		        sjmp    ??0067
  662+ 1  0243			tb_g0:  putc    #'?'
  663+ 2  0243			??0069:
  664+ 2			        ;jnb     SCON.1,putc_loop
  665+ 2			        ;clr     SCON.1
  666+ 2  0243	75 99 3F	        mov     SBUF,#'?'
  667+ 1  0246	75 6E 01	        mov     fail,#001h
  668+ 1  0249			??0067:
  669:
  670:				        put_crlf                    ; end of test series
  671+ 1			        putc    #13
  672+ 2  0249			??0070:
  673+ 2			        ;jnb     SCON.1,putc_loop
  674+ 2			        ;clr     SCON.1
  675+ 2  0249	75 99 0D	        mov     SBUF,#13
  676+ 1			        putc    #10
  677+ 2  024C			??0071:
  678+ 2			        ;jnb     SCON.1,putc_loop
  679+ 2			        ;clr     SCON.1
  680+ 2  024C	75 99 0A	        mov     SBUF,#10
  681:
  682:
  683:				        ;-- Test series C ------------------------------------------------------
  684:				        ; Bit operations and the rest of the conditional rel jumps
  685:				        ; The following tests will use a bit address within the IRAM
  686:				        ; a.- <JB bit, rel>, <JNB bit, rel>
  687:				        ; b.- <MOV A, #imm>
  688:				        ; c.- <JZ rel>, <JNZ rel>
  689:				        ; d.- <CLR bit>, <CPL bit>
  690:				        ; e.- <ANL C, bit>, <ORL C, bit>
  691:				        ; e.- <ANL C, /bit>, <ORL C, /bit>
  692:				        ; f.- <MOV C,bit>, <MOV bit, C>
  693:				        ; g.- <SETB bit>
  694:				        ; h.- <JBC bit>
  695:				        ; The following tests are the same as above except a bit address within
  696:				        ; SFR B is used.
  697:				        ; i.- <JB bit, rel>, <JNB bit, rel>
  698:				        ; j.- <CLR bit>, <CPL bit>
  699:				        ; k.- <ANL C, bit>, <ORL C, bit>
  700:				        ; k.- <ANL C, /bit>, <ORL C, /bit>
  701:				        ; l.- <MOV C,bit>, <MOV bit, C>
  702:				        ; m.- <SETB bit>
  703:				        ; n.- <JBC bit>
  704:
  705:				        putc    #'C'                ; start of test series
  706+ 1  024F			??0072:
  707+ 1			        ;jnb     SCON.1,putc_loop
  708+ 1			        ;clr     SCON.1
  709+ 1  024F	75 99 43	        mov     SBUF,#'C'
  710:
  711:	  0252	75 2F 80	        mov     02fh,#80h           ; We'll be testing bits 2F.7 and 2F.6
  712:	  0255	80 0E		        sjmp    tc_a0
  713:	  0257	30 7F 1C	tc_a1:  jnb     07fh,tc_a3          ; JNB jumps not on bit set
  714:	  025A	30 7E 11	        jnb     07eh,tc_a2          ; JNB jumps on bit clear
  715:				        putc    #'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 14



 Line  I  Addr  Code            Source

  716+ 1  025D			??0073:
  717+ 1			        ;jnb     SCON.1,putc_loop
  718+ 1			        ;clr     SCON.1
  719+ 1  025D	75 99 3F	        mov     SBUF,#'?'
  720:	  0260	75 6E 01	        mov     fail,#001h
  721:	  0263	80 11		        sjmp    tc_a3
  722:	  0265	20 7F EF	tc_a0:  jb      07fh,tc_a1          ; JB jumps on bit set
  723:				        putc    #'!'
  724+ 1  0268			??0074:
  725+ 1			        ;jnb     SCON.1,putc_loop
  726+ 1			        ;clr     SCON.1
  727+ 1  0268	75 99 21	        mov     SBUF,#'!'
  728:	  026B	75 6E 01	        mov     fail,#001h
  729:	  026E	20 7E 05	tc_a2:  jb      07eh,tc_a3          ; JB jumps not on bit clear
  730:
  731:				        eot     'a',tc_a3
  732+ 1			        putc    #'a'
  733+ 2  0271			??0076:
  734+ 2			        ;jnb     SCON.1,putc_loop
  735+ 2			        ;clr     SCON.1
  736+ 2  0271	75 99 61	        mov     SBUF,#'a'
  737+ 1  0274	80 06		        sjmp    ??0075
  738+ 1  0276			tc_a3:  putc    #'?'
  739+ 2  0276			??0077:
  740+ 2			        ;jnb     SCON.1,putc_loop
  741+ 2			        ;clr     SCON.1
  742+ 2  0276	75 99 3F	        mov     SBUF,#'?'
  743+ 1  0279	75 6E 01	        mov     fail,#001h
  744+ 1  027C			??0075:
  745:
  746:	  027C	75 E0 79	        mov     0e0h,#079h          ; init acc (as sfr) with some data
  747:	  027F	B4 79 0A	        cjne    a,#079h,tc_b1
  748:	  0282	74 5A		        mov     a,#05ah             ; now load a with imm data...
  749:	  0284	B4 5A 05	        cjne    a,#05ah,tc_b1       ; ...and make sure a got the data
  750:
  751:				        eot     'b',tc_b1
  752+ 1			        putc    #'b'
  753+ 2  0287			??0079:
  754+ 2			        ;jnb     SCON.1,putc_loop
  755+ 2			        ;clr     SCON.1
  756+ 2  0287	75 99 62	        mov     SBUF,#'b'
  757+ 1  028A	80 06		        sjmp    ??0078
  758+ 1  028C			tc_b1:  putc    #'?'
  759+ 2  028C			??0080:
  760+ 2			        ;jnb     SCON.1,putc_loop
  761+ 2			        ;clr     SCON.1
  762+ 2  028C	75 99 3F	        mov     SBUF,#'?'
  763+ 1  028F	75 6E 01	        mov     fail,#001h
  764+ 1  0292			??0078:
  765:
  766:	  0292	74 80		        mov     a,#80h
  767:	  0294	80 0E		        sjmp    tc_c0
  768:	  0296	60 1B		tc_c1:  jz      tc_c3               ; JZ jumps not on acc!=0
  769:	  0298	74 00		        mov     a,#00h
  770:	  029A	60 10		        jz      tc_c2               ; JZ jumps on acc==0
  771:				        putc    #'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 15



 Line  I  Addr  Code            Source

  772+ 1  029C			??0081:
  773+ 1			        ;jnb     SCON.1,putc_loop
  774+ 1			        ;clr     SCON.1
  775+ 1  029C	75 99 3F	        mov     SBUF,#'?'
  776:	  029F	75 6E 01	        mov     fail,#001h
  777:	  02A2	80 0F		        sjmp    tc_c3
  778:	  02A4	70 F0		tc_c0:  jnz     tc_c1               ; JNZ jumps on acc!=0
  779:				        putc    #'!'
  780+ 1  02A6			??0082:
  781+ 1			        ;jnb     SCON.1,putc_loop
  782+ 1			        ;clr     SCON.1
  783+ 1  02A6	75 99 21	        mov     SBUF,#'!'
  784:	  02A9	75 6E 01	        mov     fail,#001h
  785:	  02AC	70 05		tc_c2:  jnz     tc_c3               ; JNZ jumps not on acc==0
  786:
  787:				        eot     'c',tc_c3
  788+ 1			        putc    #'c'
  789+ 2  02AE			??0084:
  790+ 2			        ;jnb     SCON.1,putc_loop
  791+ 2			        ;clr     SCON.1
  792+ 2  02AE	75 99 63	        mov     SBUF,#'c'
  793+ 1  02B1	80 06		        sjmp    ??0083
  794+ 1  02B3			tc_c3:  putc    #'?'
  795+ 2  02B3			??0085:
  796+ 2			        ;jnb     SCON.1,putc_loop
  797+ 2			        ;clr     SCON.1
  798+ 2  02B3	75 99 3F	        mov     SBUF,#'?'
  799+ 1  02B6	75 6E 01	        mov     fail,#001h
  800+ 1  02B9			??0083:
  801:
  802:
  803:	  02B9	75 2F 80	        mov     02fh,#80h           ; We'll be testing bit 2F.7
  804:	  02BC	20 7F 02	        jb      07fh,tc_d1
  805:	  02BF	80 0F		        sjmp    tc_d0
  806:	  02C1	C2 7F		tc_d1:  clr     07fh
  807:	  02C3	20 7F 0A	        jb      07fh,tc_d0
  808:	  02C6	B2 7F		        cpl     07fh
  809:	  02C8	30 7F 05	        jnb     07fh,tc_d0
  810:
  811:				        eot     'd',tc_d0
  812+ 1			        putc    #'d'
  813+ 2  02CB			??0087:
  814+ 2			        ;jnb     SCON.1,putc_loop
  815+ 2			        ;clr     SCON.1
  816+ 2  02CB	75 99 64	        mov     SBUF,#'d'
  817+ 1  02CE	80 06		        sjmp    ??0086
  818+ 1  02D0			tc_d0:  putc    #'?'
  819+ 2  02D0			??0088:
  820+ 2			        ;jnb     SCON.1,putc_loop
  821+ 2			        ;clr     SCON.1
  822+ 2  02D0	75 99 3F	        mov     SBUF,#'?'
  823+ 1  02D3	75 6E 01	        mov     fail,#001h
  824+ 1  02D6			??0086:
  825:
  826:	  02D6	75 2E 08	        mov     02eh,#08h           ; We'll be testing bits 2E.3 and 2E.2
  827:	  02D9	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 16



 Line  I  Addr  Code            Source

  828:	  02DA	82 73		        anl     c,073h              ; Test ANL in all 4 input combinations
  829:	  02DC	40 1F		        jc      tc_e0
  830:	  02DE	D3		        setb    c
  831:	  02DF	82 73		        anl     c,073h
  832:	  02E1	50 1A		        jnc     tc_e0
  833:	  02E3	B0 72		        anl     c,/072h
  834:	  02E5	50 16		        jnc     tc_e0
  835:				                                    ; CY == 1
  836:	  02E7	72 73		        orl     c,073h              ; ORL-ing with 1 should give 1
  837:	  02E9	50 12		        jnc     tc_e0
  838:	  02EB	72 72		        orl     c,072h
  839:	  02ED	50 0E		        jnc     tc_e0
  840:	  02EF	C3		        clr     c                   ; CY == 0
  841:	  02F0	72 73		        orl     c,073h              ; Now ORL c, 'bit' should give 'bit'
  842:	  02F2	50 09		        jnc     tc_e0
  843:	  02F4	A0 72		        orl     c,/072h
  844:	  02F6	50 05		        jnc     tc_e0
  845:
  846:				        eot     'e',tc_e0
  847+ 1			        putc    #'e'
  848+ 2  02F8			??0090:
  849+ 2			        ;jnb     SCON.1,putc_loop
  850+ 2			        ;clr     SCON.1
  851+ 2  02F8	75 99 65	        mov     SBUF,#'e'
  852+ 1  02FB	80 06		        sjmp    ??0089
  853+ 1  02FD			tc_e0:  putc    #'?'
  854+ 2  02FD			??0091:
  855+ 2			        ;jnb     SCON.1,putc_loop
  856+ 2			        ;clr     SCON.1
  857+ 2  02FD	75 99 3F	        mov     SBUF,#'?'
  858+ 1  0300	75 6E 01	        mov     fail,#001h
  859+ 1  0303			??0089:
  860:
  861:	  0303	75 2E 08	        mov     02eh,#08h           ; We'll be testing bits 2E.3 and 2E.2
  862:	  0306	C3		        clr     c
  863:	  0307	A2 73		        mov     c,073h
  864:	  0309	50 15		        jnc     tc_f0
  865:	  030B	A2 72		        mov     c,072h
  866:	  030D	40 11		        jc      tc_f0
  867:	  030F	C3		        clr     c
  868:	  0310	92 71		        mov     071h,c
  869:	  0312	20 71 0B	        jb      071h,tc_f0
  870:	  0315	D3		        setb    c
  871:	  0316	92 71		        mov     071h,c
  872:	  0318	30 71 05	        jnb     071h,tc_f0
  873:
  874:				        eot     'f',tc_f0
  875+ 1			        putc    #'f'
  876+ 2  031B			??0093:
  877+ 2			        ;jnb     SCON.1,putc_loop
  878+ 2			        ;clr     SCON.1
  879+ 2  031B	75 99 66	        mov     SBUF,#'f'
  880+ 1  031E	80 06		        sjmp    ??0092
  881+ 1  0320			tc_f0:  putc    #'?'
  882+ 2  0320			??0094:
  883+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 17



 Line  I  Addr  Code            Source

  884+ 2			        ;clr     SCON.1
  885+ 2  0320	75 99 3F	        mov     SBUF,#'?'
  886+ 1  0323	75 6E 01	        mov     fail,#001h
  887+ 1  0326			??0092:
  888:
  889:	  0326	75 2E 00	        mov     02eh,#00h           ; We'll be testing bits 2E.3 and 2E.2
  890:	  0329	D2 73		        setb    073h
  891:	  032B	A2 73		        mov     c,073h
  892:	  032D	50 0B		        jnc     tc_g0
  893:	  032F	D2 72		        setb    072h
  894:	  0331	A2 72		        mov     c,072h
  895:	  0333	50 05		        jnc     tc_g0
  896:
  897:				        eot     'g',tc_g0
  898+ 1			        putc    #'g'
  899+ 2  0335			??0096:
  900+ 2			        ;jnb     SCON.1,putc_loop
  901+ 2			        ;clr     SCON.1
  902+ 2  0335	75 99 67	        mov     SBUF,#'g'
  903+ 1  0338	80 06		        sjmp    ??0095
  904+ 1  033A			tc_g0:  putc    #'?'
  905+ 2  033A			??0097:
  906+ 2			        ;jnb     SCON.1,putc_loop
  907+ 2			        ;clr     SCON.1
  908+ 2  033A	75 99 3F	        mov     SBUF,#'?'
  909+ 1  033D	75 6E 01	        mov     fail,#001h
  910+ 1  0340			??0095:
  911:
  912:				        ; (better read the following code in execution order)
  913:	  0340	75 2E 08	        mov     02eh,#08h           ; We'll be testing bits 2E.3 and 2E.2
  914:	  0343	80 09		        sjmp    tc_h1               ; jump forward so we can test jump backwards
  915:	  0345	A2 73		tc_h2:  mov     c,073h              ; make sure the target bit is clear
  916:	  0347	40 0F		        jc      tc_h0
  917:	  0349	10 72 0C	        jbc     072h,tc_h0          ; JBC jumps not when target bit clear
  918:	  034C	80 05		        sjmp    tc_h3
  919:	  034E	10 73 F4	tc_h1:  jbc     073h,tc_h2          ; JBC jumps when target bit set
  920:	  0351	80 05		        sjmp    tc_h0
  921:	  0353			tc_h3:
  922:
  923:				        eot     'h',tc_h0
  924+ 1			        putc    #'h'
  925+ 2  0353			??0099:
  926+ 2			        ;jnb     SCON.1,putc_loop
  927+ 2			        ;clr     SCON.1
  928+ 2  0353	75 99 68	        mov     SBUF,#'h'
  929+ 1  0356	80 06		        sjmp    ??0098
  930+ 1  0358			tc_h0:  putc    #'?'
  931+ 2  0358			??0100:
  932+ 2			        ;jnb     SCON.1,putc_loop
  933+ 2			        ;clr     SCON.1
  934+ 2  0358	75 99 3F	        mov     SBUF,#'?'
  935+ 1  035B	75 6E 01	        mov     fail,#001h
  936+ 1  035E			??0098:
  937:
  938:	  035E	75 2F 00	        mov     02fh,#00h
  939:	  0361	75 F0 80	        mov     B,#80h              ; We'll be testing bits B.7 and B.6

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 18



 Line  I  Addr  Code            Source

  940:	  0364	80 0E		        sjmp    tc_i0
  941:	  0366	30 F7 1C	tc_i1:  jnb     B.7,tc_i3           ; JNB jumps not on bit set
  942:	  0369	30 F6 11	        jnb     B.6,tc_i2           ; JNB jumps on bit clear
  943:				        putc    #'?'
  944+ 1  036C			??0101:
  945+ 1			        ;jnb     SCON.1,putc_loop
  946+ 1			        ;clr     SCON.1
  947+ 1  036C	75 99 3F	        mov     SBUF,#'?'
  948:	  036F	75 6E 01	        mov     fail,#001h
  949:	  0372	80 11		        sjmp    tc_i3
  950:	  0374	20 F7 EF	tc_i0:  jb      B.7,tc_i1           ; JB jumps on bit set
  951:				        putc    #'!'
  952+ 1  0377			??0102:
  953+ 1			        ;jnb     SCON.1,putc_loop
  954+ 1			        ;clr     SCON.1
  955+ 1  0377	75 99 21	        mov     SBUF,#'!'
  956:	  037A	75 6E 01	        mov     fail,#001h
  957:	  037D	20 F6 05	tc_i2:  jb      B.6,tc_i3           ; JB jumps not on bit clear
  958:
  959:				        eot     'i',tc_i3
  960+ 1			        putc    #'i'
  961+ 2  0380			??0104:
  962+ 2			        ;jnb     SCON.1,putc_loop
  963+ 2			        ;clr     SCON.1
  964+ 2  0380	75 99 69	        mov     SBUF,#'i'
  965+ 1  0383	80 06		        sjmp    ??0103
  966+ 1  0385			tc_i3:  putc    #'?'
  967+ 2  0385			??0105:
  968+ 2			        ;jnb     SCON.1,putc_loop
  969+ 2			        ;clr     SCON.1
  970+ 2  0385	75 99 3F	        mov     SBUF,#'?'
  971+ 1  0388	75 6E 01	        mov     fail,#001h
  972+ 1  038B			??0103:
  973:
  974:	  038B	75 F0 80	        mov     B,#80h              ; We'll be testing bit B.7
  975:	  038E	20 F7 02	        jb      B.7,tc_j1
  976:	  0391	80 0F		        sjmp    tc_j0
  977:	  0393	C2 F7		tc_j1:  clr     B.7
  978:	  0395	20 F7 0A	        jb      B.7,tc_j0
  979:	  0398	B2 F7		        cpl     B.7
  980:	  039A	30 F7 05	        jnb     B.7,tc_j0
  981:
  982:				        eot     'j',tc_j0
  983+ 1			        putc    #'j'
  984+ 2  039D			??0107:
  985+ 2			        ;jnb     SCON.1,putc_loop
  986+ 2			        ;clr     SCON.1
  987+ 2  039D	75 99 6A	        mov     SBUF,#'j'
  988+ 1  03A0	80 06		        sjmp    ??0106
  989+ 1  03A2			tc_j0:  putc    #'?'
  990+ 2  03A2			??0108:
  991+ 2			        ;jnb     SCON.1,putc_loop
  992+ 2			        ;clr     SCON.1
  993+ 2  03A2	75 99 3F	        mov     SBUF,#'?'
  994+ 1  03A5	75 6E 01	        mov     fail,#001h
  995+ 1  03A8			??0106:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 19



 Line  I  Addr  Code            Source

  996:
  997:	  03A8	75 F0 08	        mov     B,#08h              ; We'll be testing bits B.3 and B.2
  998:	  03AB	C3		        clr     c
  999:	  03AC	82 F3		        anl     c,B.3               ; Test ANL in all 4 input combinations
 1000:	  03AE	40 1F		        jc      tc_k0
 1001:	  03B0	D3		        setb    c
 1002:	  03B1	82 F3		        anl     c,B.3
 1003:	  03B3	50 1A		        jnc     tc_k0
 1004:	  03B5	B0 F2		        anl     c,/B.2
 1005:	  03B7	50 16		        jnc     tc_k0
 1006:				                                    ; CY == 1
 1007:	  03B9	72 F3		        orl     c,B.3               ; ORL-ing with 1 should give 1
 1008:	  03BB	50 12		        jnc     tc_k0
 1009:	  03BD	72 F2		        orl     c,B.2
 1010:	  03BF	50 0E		        jnc     tc_k0
 1011:	  03C1	C3		        clr     c                   ; CY == 0
 1012:	  03C2	72 F3		        orl     c,B.3               ; Now ORL c, 'bit' should give 'bit'
 1013:	  03C4	50 09		        jnc     tc_k0
 1014:	  03C6	A0 F2		        orl     c,/B.2
 1015:	  03C8	50 05		        jnc     tc_k0
 1016:
 1017:				        eot     'k',tc_k0
 1018+ 1			        putc    #'k'
 1019+ 2  03CA			??0110:
 1020+ 2			        ;jnb     SCON.1,putc_loop
 1021+ 2			        ;clr     SCON.1
 1022+ 2  03CA	75 99 6B	        mov     SBUF,#'k'
 1023+ 1  03CD	80 06		        sjmp    ??0109
 1024+ 1  03CF			tc_k0:  putc    #'?'
 1025+ 2  03CF			??0111:
 1026+ 2			        ;jnb     SCON.1,putc_loop
 1027+ 2			        ;clr     SCON.1
 1028+ 2  03CF	75 99 3F	        mov     SBUF,#'?'
 1029+ 1  03D2	75 6E 01	        mov     fail,#001h
 1030+ 1  03D5			??0109:
 1031:
 1032:	  03D5	75 F0 08	        mov     B,#08h              ; We'll be testing bits B.3, B.2 and B.1
 1033:	  03D8	C3		        clr     c
 1034:	  03D9	A2 F3		        mov     c,B.3
 1035:	  03DB	50 15		        jnc     tc_L0
 1036:	  03DD	A2 F2		        mov     c,B.2
 1037:	  03DF	40 11		        jc      tc_L0
 1038:	  03E1	C3		        clr     c
 1039:	  03E2	92 F1		        mov     B.1,c
 1040:	  03E4	20 F1 0B	        jb      B.1,tc_L0
 1041:	  03E7	D3		        setb    c
 1042:	  03E8	92 F1		        mov     B.1,c
 1043:	  03EA	30 F1 05	        jnb     B.1,tc_L0
 1044:
 1045:				        eot     'l',tc_L0
 1046+ 1			        putc    #'l'
 1047+ 2  03ED			??0113:
 1048+ 2			        ;jnb     SCON.1,putc_loop
 1049+ 2			        ;clr     SCON.1
 1050+ 2  03ED	75 99 6C	        mov     SBUF,#'l'
 1051+ 1  03F0	80 06		        sjmp    ??0112

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 20



 Line  I  Addr  Code            Source

 1052+ 1  03F2			tc_L0:  putc    #'?'
 1053+ 2  03F2			??0114:
 1054+ 2			        ;jnb     SCON.1,putc_loop
 1055+ 2			        ;clr     SCON.1
 1056+ 2  03F2	75 99 3F	        mov     SBUF,#'?'
 1057+ 1  03F5	75 6E 01	        mov     fail,#001h
 1058+ 1  03F8			??0112:
 1059:
 1060:	  03F8	75 2E 00	        mov     02eh,#00h           ; We'll be testing bits B.3 and B.2
 1061:	  03FB	D2 F3		        setb    B.3
 1062:	  03FD	A2 F3		        mov     c,B.3
 1063:	  03FF	50 0B		        jnc     tc_m0
 1064:	  0401	D2 F2		        setb    B.2
 1065:	  0403	A2 F2		        mov     c,B.2
 1066:	  0405	50 05		        jnc     tc_m0
 1067:
 1068:				        eot     'm',tc_m0
 1069+ 1			        putc    #'m'
 1070+ 2  0407			??0116:
 1071+ 2			        ;jnb     SCON.1,putc_loop
 1072+ 2			        ;clr     SCON.1
 1073+ 2  0407	75 99 6D	        mov     SBUF,#'m'
 1074+ 1  040A	80 06		        sjmp    ??0115
 1075+ 1  040C			tc_m0:  putc    #'?'
 1076+ 2  040C			??0117:
 1077+ 2			        ;jnb     SCON.1,putc_loop
 1078+ 2			        ;clr     SCON.1
 1079+ 2  040C	75 99 3F	        mov     SBUF,#'?'
 1080+ 1  040F	75 6E 01	        mov     fail,#001h
 1081+ 1  0412			??0115:
 1082:
 1083:				        ; (better read the following code in execution order)
 1084:	  0412	75 F0 08	        mov     B,#08h              ; We'll be testing bits B.3 and B.2
 1085:	  0415	80 09		        sjmp    tc_n1               ; jump forward so we can test jump backwards
 1086:	  0417	A2 F3		tc_n2:  mov     c,B.3               ; make sure the target bit is clear
 1087:	  0419	40 0F		        jc      tc_n0
 1088:	  041B	10 F2 0C	        jbc     B.2,tc_n0           ; JBC jumps not when target bit clear
 1089:	  041E	80 05		        sjmp    tc_n3
 1090:	  0420	10 F3 F4	tc_n1:  jbc     B.3,tc_n2           ; JBC jumps when target bit set
 1091:	  0423	80 05		        sjmp    tc_n0
 1092:	  0425			tc_n3:
 1093:
 1094:				        eot     'n',tc_n0
 1095+ 1			        putc    #'n'
 1096+ 2  0425			??0119:
 1097+ 2			        ;jnb     SCON.1,putc_loop
 1098+ 2			        ;clr     SCON.1
 1099+ 2  0425	75 99 6E	        mov     SBUF,#'n'
 1100+ 1  0428	80 06		        sjmp    ??0118
 1101+ 1  042A			tc_n0:  putc    #'?'
 1102+ 2  042A			??0120:
 1103+ 2			        ;jnb     SCON.1,putc_loop
 1104+ 2			        ;clr     SCON.1
 1105+ 2  042A	75 99 3F	        mov     SBUF,#'?'
 1106+ 1  042D	75 6E 01	        mov     fail,#001h
 1107+ 1  0430			??0118:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 21



 Line  I  Addr  Code            Source

 1108:
 1109:
 1110:
 1111:				        put_crlf                    ; end of test series
 1112+ 1			        putc    #13
 1113+ 2  0430			??0121:
 1114+ 2			        ;jnb     SCON.1,putc_loop
 1115+ 2			        ;clr     SCON.1
 1116+ 2  0430	75 99 0D	        mov     SBUF,#13
 1117+ 1			        putc    #10
 1118+ 2  0433			??0122:
 1119+ 2			        ;jnb     SCON.1,putc_loop
 1120+ 2			        ;clr     SCON.1
 1121+ 2  0433	75 99 0A	        mov     SBUF,#10
 1122:
 1123:				        ;-- Test series D ------------------------------------------------------
 1124:				        ;
 1125:				        ; a.- <XRL A, #imm>
 1126:				        ; b.- <RLC A>
 1127:				        ; c.- <RRC A>
 1128:				        ; d.- <RL A>, <RR A>
 1129:				        ;
 1130:				        ; This test executes a few NOPs too but does NOT check for unintended
 1131:				        ; side effects; we intersperse the nops between the other tests to at
 1132:				        ; least have a chance to catch buggy behavior but that's all.
 1133:
 1134:
 1135:				        putc    #'D'                ; start of test series
 1136+ 1  0436			??0123:
 1137+ 1			        ;jnb     SCON.1,putc_loop
 1138+ 1			        ;clr     SCON.1
 1139+ 1  0436	75 99 44	        mov     SBUF,#'D'
 1140:
 1141:	  0439	74 85		        mov     a,#085h             ; test XRL A,#imm before using it in
 1142:	  043B	64 44		        xrl     a,#044h             ; subsequent tests
 1143:	  043D	60 09		        jz      td_a0
 1144:	  043F	64 C1		        xrl     a,#0c1h
 1145:	  0441	70 05		        jnz     td_a0
 1146:
 1147:				        eot     'a',td_a0
 1148+ 1			        putc    #'a'
 1149+ 2  0443			??0125:
 1150+ 2			        ;jnb     SCON.1,putc_loop
 1151+ 2			        ;clr     SCON.1
 1152+ 2  0443	75 99 61	        mov     SBUF,#'a'
 1153+ 1  0446	80 06		        sjmp    ??0124
 1154+ 1  0448			td_a0:  putc    #'?'
 1155+ 2  0448			??0126:
 1156+ 2			        ;jnb     SCON.1,putc_loop
 1157+ 2			        ;clr     SCON.1
 1158+ 2  0448	75 99 3F	        mov     SBUF,#'?'
 1159+ 1  044B	75 6E 01	        mov     fail,#001h
 1160+ 1  044E			??0124:
 1161:
 1162:	  044E	74 85		        mov     a,#085h             ; Test RLC effects on ACC, ignore CY for now
 1163:	  0450	00		        nop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 22



 Line  I  Addr  Code            Source

 1164:	  0451	C3		        clr     c
 1165:	  0452	33		        rlc     a                   ; a = (a << 1) | 0
 1166:	  0453	F5 60		        mov     dir0,a
 1167:	  0455	64 0A		        xrl     a,#00ah             ; We can't use CJNE because it modifies CY
 1168:	  0457	70 16		        jnz     td_b0               ; check shifted acc
 1169:	  0459	E5 60		        mov     a,dir0
 1170:	  045B	33		        rlc     a                   ; rotate again...
 1171:	  045C	64 15		        xrl     a,#015h             ; ...and check shifted acc with CY at bit 0
 1172:	  045E	70 0F		        jnz     td_b0
 1173:
 1174:	  0460	74 85		        mov     a,#085h             ; Now check RLC effects on CY
 1175:	  0462	00		        nop
 1176:	  0463	C3		        clr     c
 1177:	  0464	33		        rlc     a
 1178:	  0465	50 08		        jnc     td_b0
 1179:	  0467	33		        rlc     a
 1180:	  0468	40 05		        jc      td_b0               ; CY==1 moved into ACC.0
 1181:
 1182:				        eot     'b',td_b0
 1183+ 1			        putc    #'b'
 1184+ 2  046A			??0128:
 1185+ 2			        ;jnb     SCON.1,putc_loop
 1186+ 2			        ;clr     SCON.1
 1187+ 2  046A	75 99 62	        mov     SBUF,#'b'
 1188+ 1  046D	80 06		        sjmp    ??0127
 1189+ 1  046F			td_b0:  putc    #'?'
 1190+ 2  046F			??0129:
 1191+ 2			        ;jnb     SCON.1,putc_loop
 1192+ 2			        ;clr     SCON.1
 1193+ 2  046F	75 99 3F	        mov     SBUF,#'?'
 1194+ 1  0472	75 6E 01	        mov     fail,#001h
 1195+ 1  0475			??0127:
 1196:
 1197:	  0475	74 85		        mov     a,#085h             ; Test RRC effects on ACC, ignore CY for now
 1198:	  0477	C3		        clr     c
 1199:	  0478	13		        rrc     a                   ; will set CY
 1200:	  0479	F5 60		        mov     dir0,a
 1201:	  047B	00		        nop
 1202:	  047C	64 42		        xrl     a,#042h             ; We can't use CJNE because it modifies CY
 1203:	  047E	70 15		        jnz     td_c0               ; check shifted acc
 1204:	  0480	E5 60		        mov     a,dir0
 1205:	  0482	13		        rrc     a                   ; rotate again...
 1206:	  0483	64 A1		        xrl     a,#0a1h             ; ...and check shifted acc with CY at bit 7
 1207:	  0485	70 0E		        jnz     td_c0
 1208:
 1209:	  0487	74 85		        mov     a,#085h             ; Now check RRC effects on CY
 1210:	  0489	C3		        clr     c
 1211:	  048A	13		        rrc     a
 1212:	  048B	50 08		        jnc     td_c0
 1213:	  048D	13		        rrc     a
 1214:	  048E	40 05		        jc      td_c0               ; CY==1 moved into ACC.0
 1215:
 1216:				        eot     'c',td_c0
 1217+ 1			        putc    #'c'
 1218+ 2  0490			??0131:
 1219+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 23



 Line  I  Addr  Code            Source

 1220+ 2			        ;clr     SCON.1
 1221+ 2  0490	75 99 63	        mov     SBUF,#'c'
 1222+ 1  0493	80 06		        sjmp    ??0130
 1223+ 1  0495			td_c0:  putc    #'?'
 1224+ 2  0495			??0132:
 1225+ 2			        ;jnb     SCON.1,putc_loop
 1226+ 2			        ;clr     SCON.1
 1227+ 2  0495	75 99 3F	        mov     SBUF,#'?'
 1228+ 1  0498	75 6E 01	        mov     fail,#001h
 1229+ 1  049B			??0130:
 1230:
 1231:	  049B	74 85		        mov     a,#085h             ; Test RL effects on ACC, ignore CY for now
 1232:	  049D	C3		        clr     c
 1233:	  049E	23		        rl      a                   ; a = (a << 1) | 0
 1234:	  049F	F5 60		        mov     dir0,a
 1235:	  04A1	64 0B		        xrl     a,#00bh             ; We can't use CJNE because it modifies CY
 1236:	  04A3	70 28		        jnz     td_d0               ; check shifted acc
 1237:	  04A5	E5 60		        mov     a,dir0
 1238:	  04A7	D3		        setb    c
 1239:	  04A8	23		        rl      a                   ; rotate again...
 1240:	  04A9	64 16		        xrl     a,#016h             ; ...and check shifted acc with CY at bit 0
 1241:	  04AB	70 20		        jnz     td_d0
 1242:
 1243:	  04AD	74 85		        mov     a,#085h             ; Test RR effects on ACC, ignore CY for now
 1244:	  04AF	C3		        clr     c
 1245:	  04B0	03		        rr      a                   ; will set CY
 1246:	  04B1	F5 60		        mov     dir0,a
 1247:	  04B3	64 C2		        xrl     a,#0c2h             ; We can't use CJNE because it modifies CY
 1248:	  04B5	70 16		        jnz     td_d0               ; check shifted acc
 1249:	  04B7	E5 60		        mov     a,dir0
 1250:	  04B9	03		        rr      a                   ; rotate again...
 1251:	  04BA	64 61		        xrl     a,#061h             ; ...and check shifted acc with CY at bit 7
 1252:	  04BC	70 0F		        jnz     td_d0
 1253:
 1254:	  04BE	74 FF		        mov     a,#0ffh             ; Now make sure RL and RR don't touch CY
 1255:	  04C0	C3		        clr     c
 1256:	  04C1	23		        rl      a
 1257:	  04C2	40 09		        jc      td_d0
 1258:	  04C4	03		        rr      a
 1259:	  04C5	03		        rr      a
 1260:	  04C6	40 05		        jc      td_d0
 1261:
 1262:				        eot     'd',td_d0
 1263+ 1			        putc    #'d'
 1264+ 2  04C8			??0134:
 1265+ 2			        ;jnb     SCON.1,putc_loop
 1266+ 2			        ;clr     SCON.1
 1267+ 2  04C8	75 99 64	        mov     SBUF,#'d'
 1268+ 1  04CB	80 06		        sjmp    ??0133
 1269+ 1  04CD			td_d0:  putc    #'?'
 1270+ 2  04CD			??0135:
 1271+ 2			        ;jnb     SCON.1,putc_loop
 1272+ 2			        ;clr     SCON.1
 1273+ 2  04CD	75 99 3F	        mov     SBUF,#'?'
 1274+ 1  04D0	75 6E 01	        mov     fail,#001h
 1275+ 1  04D3			??0133:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 24



 Line  I  Addr  Code            Source

 1276:
 1277:				        put_crlf                    ; end of test series
 1278+ 1			        putc    #13
 1279+ 2  04D3			??0136:
 1280+ 2			        ;jnb     SCON.1,putc_loop
 1281+ 2			        ;clr     SCON.1
 1282+ 2  04D3	75 99 0D	        mov     SBUF,#13
 1283+ 1			        putc    #10
 1284+ 2  04D6			??0137:
 1285+ 2			        ;jnb     SCON.1,putc_loop
 1286+ 2			        ;clr     SCON.1
 1287+ 2  04D6	75 99 0A	        mov     SBUF,#10
 1288:
 1289:				        ;-- Test series E ------------------------------------------------------
 1290:				        ; Increment
 1291:				        ; a.- <INC A>
 1292:				        ; b.- <INC Rn>
 1293:				        ; c.- <INC @Ri>
 1294:				        ; d.- <MOV dir,#imm>
 1295:				        ; e.- <INC dir>
 1296:				        ; f.- <DEC A>
 1297:				        ; g.- <DEC Rn>
 1298:				        ; h.- <DEC @Ri>
 1299:				        ; i.- <DEC dir>
 1300:
 1301:				        putc    #'E'                ; start of test series
 1302+ 1  04D9			??0138:
 1303+ 1			        ;jnb     SCON.1,putc_loop
 1304+ 1			        ;clr     SCON.1
 1305+ 1  04D9	75 99 45	        mov     SBUF,#'E'
 1306:
 1307:				te_ma   macro   target, error_loc
 1308:				        mov     target,#080h
 1309:				        inc     target
 1310:				        cjne    target,#081h,error_loc
 1311:				        mov     target,#0ffh
 1312:				        clr     c
 1313:				        inc     target
 1314:				        jc      error_loc
 1315:				        cjne    target,#000h,error_loc
 1316:				        endm
 1317:
 1318:				        te_ma   a,te_a0             ; Test <INC A>
 1319+ 1  04DC	74 80		        mov     a,#080h
 1320+ 1  04DE	04		        inc     a
 1321+ 1  04DF	B4 81 0E	        cjne    a,#081h,te_a0
 1322+ 1  04E2	74 FF		        mov     a,#0ffh
 1323+ 1  04E4	C3		        clr     c
 1324+ 1  04E5	04		        inc     a
 1325+ 1  04E6	40 08		        jc      te_a0
 1326+ 1  04E8	B4 00 05	        cjne    a,#000h,te_a0
 1327:
 1328:				        eot     'a',te_a0
 1329+ 1			        putc    #'a'
 1330+ 2  04EB			??0140:
 1331+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 25



 Line  I  Addr  Code            Source

 1332+ 2			        ;clr     SCON.1
 1333+ 2  04EB	75 99 61	        mov     SBUF,#'a'
 1334+ 1  04EE	80 06		        sjmp    ??0139
 1335+ 1  04F0			te_a0:  putc    #'?'
 1336+ 2  04F0			??0141:
 1337+ 2			        ;jnb     SCON.1,putc_loop
 1338+ 2			        ;clr     SCON.1
 1339+ 2  04F0	75 99 3F	        mov     SBUF,#'?'
 1340+ 1  04F3	75 6E 01	        mov     fail,#001h
 1341+ 1  04F6			??0139:
 1342:
 1343:	  04F6	78 66		        mov     r0,#066h
 1344:
 1345:				        te_ma   r0,te_b0
 1346+ 1  04F8	78 80		        mov     r0,#080h
 1347+ 1  04FA	08		        inc     r0
 1348+ 1  04FB	B8 81 77	        cjne    r0,#081h,te_b0
 1349+ 1  04FE	78 FF		        mov     r0,#0ffh
 1350+ 1  0500	C3		        clr     c
 1351+ 1  0501	08		        inc     r0
 1352+ 1  0502	40 71		        jc      te_b0
 1353+ 1  0504	B8 00 6E	        cjne    r0,#000h,te_b0
 1354:				        te_ma   r1,te_b0
 1355+ 1  0507	79 80		        mov     r1,#080h
 1356+ 1  0509	09		        inc     r1
 1357+ 1  050A	B9 81 68	        cjne    r1,#081h,te_b0
 1358+ 1  050D	79 FF		        mov     r1,#0ffh
 1359+ 1  050F	C3		        clr     c
 1360+ 1  0510	09		        inc     r1
 1361+ 1  0511	40 62		        jc      te_b0
 1362+ 1  0513	B9 00 5F	        cjne    r1,#000h,te_b0
 1363:				        te_ma   r2,te_b0
 1364+ 1  0516	7A 80		        mov     r2,#080h
 1365+ 1  0518	0A		        inc     r2
 1366+ 1  0519	BA 81 59	        cjne    r2,#081h,te_b0
 1367+ 1  051C	7A FF		        mov     r2,#0ffh
 1368+ 1  051E	C3		        clr     c
 1369+ 1  051F	0A		        inc     r2
 1370+ 1  0520	40 53		        jc      te_b0
 1371+ 1  0522	BA 00 50	        cjne    r2,#000h,te_b0
 1372:				        te_ma   r3,te_b0
 1373+ 1  0525	7B 80		        mov     r3,#080h
 1374+ 1  0527	0B		        inc     r3
 1375+ 1  0528	BB 81 4A	        cjne    r3,#081h,te_b0
 1376+ 1  052B	7B FF		        mov     r3,#0ffh
 1377+ 1  052D	C3		        clr     c
 1378+ 1  052E	0B		        inc     r3
 1379+ 1  052F	40 44		        jc      te_b0
 1380+ 1  0531	BB 00 41	        cjne    r3,#000h,te_b0
 1381:				        te_ma   r4,te_b0
 1382+ 1  0534	7C 80		        mov     r4,#080h
 1383+ 1  0536	0C		        inc     r4
 1384+ 1  0537	BC 81 3B	        cjne    r4,#081h,te_b0
 1385+ 1  053A	7C FF		        mov     r4,#0ffh
 1386+ 1  053C	C3		        clr     c
 1387+ 1  053D	0C		        inc     r4

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 26



 Line  I  Addr  Code            Source

 1388+ 1  053E	40 35		        jc      te_b0
 1389+ 1  0540	BC 00 32	        cjne    r4,#000h,te_b0
 1390:				        te_ma   r5,te_b0
 1391+ 1  0543	7D 80		        mov     r5,#080h
 1392+ 1  0545	0D		        inc     r5
 1393+ 1  0546	BD 81 2C	        cjne    r5,#081h,te_b0
 1394+ 1  0549	7D FF		        mov     r5,#0ffh
 1395+ 1  054B	C3		        clr     c
 1396+ 1  054C	0D		        inc     r5
 1397+ 1  054D	40 26		        jc      te_b0
 1398+ 1  054F	BD 00 23	        cjne    r5,#000h,te_b0
 1399:				        te_ma   r6,te_b0
 1400+ 1  0552	7E 80		        mov     r6,#080h
 1401+ 1  0554	0E		        inc     r6
 1402+ 1  0555	BE 81 1D	        cjne    r6,#081h,te_b0
 1403+ 1  0558	7E FF		        mov     r6,#0ffh
 1404+ 1  055A	C3		        clr     c
 1405+ 1  055B	0E		        inc     r6
 1406+ 1  055C	40 17		        jc      te_b0
 1407+ 1  055E	BE 00 14	        cjne    r6,#000h,te_b0
 1408:				        te_ma   r7,te_b0
 1409+ 1  0561	7F 80		        mov     r7,#080h
 1410+ 1  0563	0F		        inc     r7
 1411+ 1  0564	BF 81 0E	        cjne    r7,#081h,te_b0
 1412+ 1  0567	7F FF		        mov     r7,#0ffh
 1413+ 1  0569	C3		        clr     c
 1414+ 1  056A	0F		        inc     r7
 1415+ 1  056B	40 08		        jc      te_b0
 1416+ 1  056D	BF 00 05	        cjne    r7,#000h,te_b0
 1417:
 1418:				        eot     'b',te_b0
 1419+ 1			        putc    #'b'
 1420+ 2  0570			??0143:
 1421+ 2			        ;jnb     SCON.1,putc_loop
 1422+ 2			        ;clr     SCON.1
 1423+ 2  0570	75 99 62	        mov     SBUF,#'b'
 1424+ 1  0573	80 06		        sjmp    ??0142
 1425+ 1  0575			te_b0:  putc    #'?'
 1426+ 2  0575			??0144:
 1427+ 2			        ;jnb     SCON.1,putc_loop
 1428+ 2			        ;clr     SCON.1
 1429+ 2  0575	75 99 3F	        mov     SBUF,#'?'
 1430+ 1  0578	75 6E 01	        mov     fail,#001h
 1431+ 1  057B			??0142:
 1432:
 1433:	  057B	78 60		        mov     r0,#dir0
 1434:	  057D	79 31		        mov     r1,#031h
 1435:
 1436:				        te_ma   @r0,te_c0
 1437+ 1  057F	76 80		        mov     @r0,#080h
 1438+ 1  0581	06		        inc     @r0
 1439+ 1  0582	B6 81 1D	        cjne    @r0,#081h,te_c0
 1440+ 1  0585	76 FF		        mov     @r0,#0ffh
 1441+ 1  0587	C3		        clr     c
 1442+ 1  0588	06		        inc     @r0
 1443+ 1  0589	40 17		        jc      te_c0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 27



 Line  I  Addr  Code            Source

 1444+ 1  058B	B6 00 14	        cjne    @r0,#000h,te_c0
 1445:				        te_ma   @r1,te_c0
 1446+ 1  058E	77 80		        mov     @r1,#080h
 1447+ 1  0590	07		        inc     @r1
 1448+ 1  0591	B7 81 0E	        cjne    @r1,#081h,te_c0
 1449+ 1  0594	77 FF		        mov     @r1,#0ffh
 1450+ 1  0596	C3		        clr     c
 1451+ 1  0597	07		        inc     @r1
 1452+ 1  0598	40 08		        jc      te_c0
 1453+ 1  059A	B7 00 05	        cjne    @r1,#000h,te_c0
 1454:
 1455:				        eot     'c',te_c0
 1456+ 1			        putc    #'c'
 1457+ 2  059D			??0146:
 1458+ 2			        ;jnb     SCON.1,putc_loop
 1459+ 2			        ;clr     SCON.1
 1460+ 2  059D	75 99 63	        mov     SBUF,#'c'
 1461+ 1  05A0	80 06		        sjmp    ??0145
 1462+ 1  05A2			te_c0:  putc    #'?'
 1463+ 2  05A2			??0147:
 1464+ 2			        ;jnb     SCON.1,putc_loop
 1465+ 2			        ;clr     SCON.1
 1466+ 2  05A2	75 99 3F	        mov     SBUF,#'?'
 1467+ 1  05A5	75 6E 01	        mov     fail,#001h
 1468+ 1  05A8			??0145:
 1469:
 1470:	  05A8	75 60 34	        mov     dir0,#034h          ; Test <MOV dir,#imm> before using it in
 1471:	  05AB	E5 60		        mov     a,dir0              ; subsequent tests
 1472:	  05AD	B4 34 05	        cjne    a,#034h,te_d0
 1473:
 1474:				        eot     'd',te_d0
 1475+ 1			        putc    #'d'
 1476+ 2  05B0			??0149:
 1477+ 2			        ;jnb     SCON.1,putc_loop
 1478+ 2			        ;clr     SCON.1
 1479+ 2  05B0	75 99 64	        mov     SBUF,#'d'
 1480+ 1  05B3	80 06		        sjmp    ??0148
 1481+ 1  05B5			te_d0:  putc    #'?'
 1482+ 2  05B5			??0150:
 1483+ 2			        ;jnb     SCON.1,putc_loop
 1484+ 2			        ;clr     SCON.1
 1485+ 2  05B5	75 99 3F	        mov     SBUF,#'?'
 1486+ 1  05B8	75 6E 01	        mov     fail,#001h
 1487+ 1  05BB			??0148:
 1488:
 1489:	  05BB	75 39 80	        mov     039h,#080h
 1490:	  05BE	05 39		        inc     039h
 1491:	  05C0	E5 39		        mov     a,039h
 1492:	  05C2	B4 81 12	        cjne    a,#081h,te_e0
 1493:	  05C5	75 39 FF	        mov     039h,#0ffh
 1494:	  05C8	C3		        clr     c
 1495:	  05C9	05 39		        inc     039h
 1496:	  05CB	40 0A		        jc      te_e0
 1497:	  05CD	E5 39		        mov     a,039h
 1498:	  05CF	B4 00 05	        cjne    a,#000h,te_e0
 1499:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 28



 Line  I  Addr  Code            Source

 1500:				        eot     'e',te_e0
 1501+ 1			        putc    #'e'
 1502+ 2  05D2			??0152:
 1503+ 2			        ;jnb     SCON.1,putc_loop
 1504+ 2			        ;clr     SCON.1
 1505+ 2  05D2	75 99 65	        mov     SBUF,#'e'
 1506+ 1  05D5	80 06		        sjmp    ??0151
 1507+ 1  05D7			te_e0:  putc    #'?'
 1508+ 2  05D7			??0153:
 1509+ 2			        ;jnb     SCON.1,putc_loop
 1510+ 2			        ;clr     SCON.1
 1511+ 2  05D7	75 99 3F	        mov     SBUF,#'?'
 1512+ 1  05DA	75 6E 01	        mov     fail,#001h
 1513+ 1  05DD			??0151:
 1514:
 1515:				te_mf   macro   target, error_loc
 1516:				        mov     target,#001h
 1517:				        dec     target
 1518:				        cjne    target,#000h,error_loc
 1519:				        clr     c
 1520:				        dec     target
 1521:				        jc      error_loc
 1522:				        cjne    target,#0ffh,error_loc
 1523:				        endm
 1524:
 1525:				        te_ma   a,te_f0             ; Test <INC A>
 1526+ 1  05DD	74 80		        mov     a,#080h
 1527+ 1  05DF	04		        inc     a
 1528+ 1  05E0	B4 81 0E	        cjne    a,#081h,te_f0
 1529+ 1  05E3	74 FF		        mov     a,#0ffh
 1530+ 1  05E5	C3		        clr     c
 1531+ 1  05E6	04		        inc     a
 1532+ 1  05E7	40 08		        jc      te_f0
 1533+ 1  05E9	B4 00 05	        cjne    a,#000h,te_f0
 1534:
 1535:				        eot     'f',te_f0
 1536+ 1			        putc    #'f'
 1537+ 2  05EC			??0155:
 1538+ 2			        ;jnb     SCON.1,putc_loop
 1539+ 2			        ;clr     SCON.1
 1540+ 2  05EC	75 99 66	        mov     SBUF,#'f'
 1541+ 1  05EF	80 06		        sjmp    ??0154
 1542+ 1  05F1			te_f0:  putc    #'?'
 1543+ 2  05F1			??0156:
 1544+ 2			        ;jnb     SCON.1,putc_loop
 1545+ 2			        ;clr     SCON.1
 1546+ 2  05F1	75 99 3F	        mov     SBUF,#'?'
 1547+ 1  05F4	75 6E 01	        mov     fail,#001h
 1548+ 1  05F7			??0154:
 1549:
 1550:	  05F7	78 66		        mov     r0,#066h
 1551:
 1552:				        te_ma   r0,te_g0
 1553+ 1  05F9	78 80		        mov     r0,#080h
 1554+ 1  05FB	08		        inc     r0
 1555+ 1  05FC	B8 81 77	        cjne    r0,#081h,te_g0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 29



 Line  I  Addr  Code            Source

 1556+ 1  05FF	78 FF		        mov     r0,#0ffh
 1557+ 1  0601	C3		        clr     c
 1558+ 1  0602	08		        inc     r0
 1559+ 1  0603	40 71		        jc      te_g0
 1560+ 1  0605	B8 00 6E	        cjne    r0,#000h,te_g0
 1561:				        te_ma   r1,te_g0
 1562+ 1  0608	79 80		        mov     r1,#080h
 1563+ 1  060A	09		        inc     r1
 1564+ 1  060B	B9 81 68	        cjne    r1,#081h,te_g0
 1565+ 1  060E	79 FF		        mov     r1,#0ffh
 1566+ 1  0610	C3		        clr     c
 1567+ 1  0611	09		        inc     r1
 1568+ 1  0612	40 62		        jc      te_g0
 1569+ 1  0614	B9 00 5F	        cjne    r1,#000h,te_g0
 1570:				        te_ma   r2,te_g0
 1571+ 1  0617	7A 80		        mov     r2,#080h
 1572+ 1  0619	0A		        inc     r2
 1573+ 1  061A	BA 81 59	        cjne    r2,#081h,te_g0
 1574+ 1  061D	7A FF		        mov     r2,#0ffh
 1575+ 1  061F	C3		        clr     c
 1576+ 1  0620	0A		        inc     r2
 1577+ 1  0621	40 53		        jc      te_g0
 1578+ 1  0623	BA 00 50	        cjne    r2,#000h,te_g0
 1579:				        te_ma   r3,te_g0
 1580+ 1  0626	7B 80		        mov     r3,#080h
 1581+ 1  0628	0B		        inc     r3
 1582+ 1  0629	BB 81 4A	        cjne    r3,#081h,te_g0
 1583+ 1  062C	7B FF		        mov     r3,#0ffh
 1584+ 1  062E	C3		        clr     c
 1585+ 1  062F	0B		        inc     r3
 1586+ 1  0630	40 44		        jc      te_g0
 1587+ 1  0632	BB 00 41	        cjne    r3,#000h,te_g0
 1588:				        te_ma   r4,te_g0
 1589+ 1  0635	7C 80		        mov     r4,#080h
 1590+ 1  0637	0C		        inc     r4
 1591+ 1  0638	BC 81 3B	        cjne    r4,#081h,te_g0
 1592+ 1  063B	7C FF		        mov     r4,#0ffh
 1593+ 1  063D	C3		        clr     c
 1594+ 1  063E	0C		        inc     r4
 1595+ 1  063F	40 35		        jc      te_g0
 1596+ 1  0641	BC 00 32	        cjne    r4,#000h,te_g0
 1597:				        te_ma   r5,te_g0
 1598+ 1  0644	7D 80		        mov     r5,#080h
 1599+ 1  0646	0D		        inc     r5
 1600+ 1  0647	BD 81 2C	        cjne    r5,#081h,te_g0
 1601+ 1  064A	7D FF		        mov     r5,#0ffh
 1602+ 1  064C	C3		        clr     c
 1603+ 1  064D	0D		        inc     r5
 1604+ 1  064E	40 26		        jc      te_g0
 1605+ 1  0650	BD 00 23	        cjne    r5,#000h,te_g0
 1606:				        te_ma   r6,te_g0
 1607+ 1  0653	7E 80		        mov     r6,#080h
 1608+ 1  0655	0E		        inc     r6
 1609+ 1  0656	BE 81 1D	        cjne    r6,#081h,te_g0
 1610+ 1  0659	7E FF		        mov     r6,#0ffh
 1611+ 1  065B	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 30



 Line  I  Addr  Code            Source

 1612+ 1  065C	0E		        inc     r6
 1613+ 1  065D	40 17		        jc      te_g0
 1614+ 1  065F	BE 00 14	        cjne    r6,#000h,te_g0
 1615:				        te_ma   r7,te_g0
 1616+ 1  0662	7F 80		        mov     r7,#080h
 1617+ 1  0664	0F		        inc     r7
 1618+ 1  0665	BF 81 0E	        cjne    r7,#081h,te_g0
 1619+ 1  0668	7F FF		        mov     r7,#0ffh
 1620+ 1  066A	C3		        clr     c
 1621+ 1  066B	0F		        inc     r7
 1622+ 1  066C	40 08		        jc      te_g0
 1623+ 1  066E	BF 00 05	        cjne    r7,#000h,te_g0
 1624:
 1625:				        eot     'g',te_g0
 1626+ 1			        putc    #'g'
 1627+ 2  0671			??0158:
 1628+ 2			        ;jnb     SCON.1,putc_loop
 1629+ 2			        ;clr     SCON.1
 1630+ 2  0671	75 99 67	        mov     SBUF,#'g'
 1631+ 1  0674	80 06		        sjmp    ??0157
 1632+ 1  0676			te_g0:  putc    #'?'
 1633+ 2  0676			??0159:
 1634+ 2			        ;jnb     SCON.1,putc_loop
 1635+ 2			        ;clr     SCON.1
 1636+ 2  0676	75 99 3F	        mov     SBUF,#'?'
 1637+ 1  0679	75 6E 01	        mov     fail,#001h
 1638+ 1  067C			??0157:
 1639:
 1640:	  067C	78 60		        mov     r0,#dir0
 1641:	  067E	79 31		        mov     r1,#031h
 1642:
 1643:				        te_ma   @r0,te_h0
 1644+ 1  0680	76 80		        mov     @r0,#080h
 1645+ 1  0682	06		        inc     @r0
 1646+ 1  0683	B6 81 1D	        cjne    @r0,#081h,te_h0
 1647+ 1  0686	76 FF		        mov     @r0,#0ffh
 1648+ 1  0688	C3		        clr     c
 1649+ 1  0689	06		        inc     @r0
 1650+ 1  068A	40 17		        jc      te_h0
 1651+ 1  068C	B6 00 14	        cjne    @r0,#000h,te_h0
 1652:				        te_ma   @r1,te_h0
 1653+ 1  068F	77 80		        mov     @r1,#080h
 1654+ 1  0691	07		        inc     @r1
 1655+ 1  0692	B7 81 0E	        cjne    @r1,#081h,te_h0
 1656+ 1  0695	77 FF		        mov     @r1,#0ffh
 1657+ 1  0697	C3		        clr     c
 1658+ 1  0698	07		        inc     @r1
 1659+ 1  0699	40 08		        jc      te_h0
 1660+ 1  069B	B7 00 05	        cjne    @r1,#000h,te_h0
 1661:
 1662:				        eot     'h',te_h0
 1663+ 1			        putc    #'h'
 1664+ 2  069E			??0161:
 1665+ 2			        ;jnb     SCON.1,putc_loop
 1666+ 2			        ;clr     SCON.1
 1667+ 2  069E	75 99 68	        mov     SBUF,#'h'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 31



 Line  I  Addr  Code            Source

 1668+ 1  06A1	80 06		        sjmp    ??0160
 1669+ 1  06A3			te_h0:  putc    #'?'
 1670+ 2  06A3			??0162:
 1671+ 2			        ;jnb     SCON.1,putc_loop
 1672+ 2			        ;clr     SCON.1
 1673+ 2  06A3	75 99 3F	        mov     SBUF,#'?'
 1674+ 1  06A6	75 6E 01	        mov     fail,#001h
 1675+ 1  06A9			??0160:
 1676:
 1677:	  06A9	75 60 34	        mov     dir0,#034h          ; Test <MOV dir,#imm> before using it in
 1678:	  06AC	E5 60		        mov     a,dir0              ; subsequent tests
 1679:	  06AE	B4 34 05	        cjne    a,#034h,te_i0
 1680:
 1681:				        eot     'i',te_i0
 1682+ 1			        putc    #'i'
 1683+ 2  06B1			??0164:
 1684+ 2			        ;jnb     SCON.1,putc_loop
 1685+ 2			        ;clr     SCON.1
 1686+ 2  06B1	75 99 69	        mov     SBUF,#'i'
 1687+ 1  06B4	80 06		        sjmp    ??0163
 1688+ 1  06B6			te_i0:  putc    #'?'
 1689+ 2  06B6			??0165:
 1690+ 2			        ;jnb     SCON.1,putc_loop
 1691+ 2			        ;clr     SCON.1
 1692+ 2  06B6	75 99 3F	        mov     SBUF,#'?'
 1693+ 1  06B9	75 6E 01	        mov     fail,#001h
 1694+ 1  06BC			??0163:
 1695:
 1696:				        put_crlf                    ; end of test series
 1697+ 1			        putc    #13
 1698+ 2  06BC			??0166:
 1699+ 2			        ;jnb     SCON.1,putc_loop
 1700+ 2			        ;clr     SCON.1
 1701+ 2  06BC	75 99 0D	        mov     SBUF,#13
 1702+ 1			        putc    #10
 1703+ 2  06BF			??0167:
 1704+ 2			        ;jnb     SCON.1,putc_loop
 1705+ 2			        ;clr     SCON.1
 1706+ 2  06BF	75 99 0A	        mov     SBUF,#10
 1707:
 1708:
 1709:				        ;-- Test series F ------------------------------------------------------
 1710:				        ;
 1711:				        ; a.- <MOV dir,Rn>
 1712:				        ; b.- <MOV dir,@Ri>
 1713:				        ; c.- <MOV dir,dir>
 1714:				        ; d.- <MOV Rn,dir>
 1715:				        ; e.- <MOV @Ri,dir>
 1716:				        ; f.- <MOV Rn,A>
 1717:				        ; g.- <MOV @Ri,A>
 1718:				        ; h.- <MOV dir,A>
 1719:
 1720:
 1721:				        putc    #'F'                ; start of test series
 1722+ 1  06C2			??0168:
 1723+ 1			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 32



 Line  I  Addr  Code            Source

 1724+ 1			        ;clr     SCON.1
 1725+ 1  06C2	75 99 46	        mov     SBUF,#'F'
 1726:
 1727:				tf_ma   macro   rn, n, error_loc
 1728:				        mov     rn,#(091h+n)
 1729:				        mov     039h,rn
 1730:				        mov     a,039h
 1731:				        cjne    a,#(091h+n),error_loc
 1732:				        endm
 1733:
 1734:				        tf_ma   r0,0,tf_a0
 1735+ 1  06C5	78 91		        mov     r0,#(091h+0)
 1736+ 1  06C7	88 39		        mov     039h,r0
 1737+ 1  06C9	E5 39		        mov     a,039h
 1738+ 1  06CB	B4 91 44	        cjne    a,#(091h+0),tf_a0
 1739:				        tf_ma   r1,1,tf_a0
 1740+ 1  06CE	79 92		        mov     r1,#(091h+1)
 1741+ 1  06D0	89 39		        mov     039h,r1
 1742+ 1  06D2	E5 39		        mov     a,039h
 1743+ 1  06D4	B4 92 3B	        cjne    a,#(091h+1),tf_a0
 1744:				        tf_ma   r2,2,tf_a0
 1745+ 1  06D7	7A 93		        mov     r2,#(091h+2)
 1746+ 1  06D9	8A 39		        mov     039h,r2
 1747+ 1  06DB	E5 39		        mov     a,039h
 1748+ 1  06DD	B4 93 32	        cjne    a,#(091h+2),tf_a0
 1749:				        tf_ma   r3,3,tf_a0
 1750+ 1  06E0	7B 94		        mov     r3,#(091h+3)
 1751+ 1  06E2	8B 39		        mov     039h,r3
 1752+ 1  06E4	E5 39		        mov     a,039h
 1753+ 1  06E6	B4 94 29	        cjne    a,#(091h+3),tf_a0
 1754:				        tf_ma   r4,4,tf_a0
 1755+ 1  06E9	7C 95		        mov     r4,#(091h+4)
 1756+ 1  06EB	8C 39		        mov     039h,r4
 1757+ 1  06ED	E5 39		        mov     a,039h
 1758+ 1  06EF	B4 95 20	        cjne    a,#(091h+4),tf_a0
 1759:				        tf_ma   r5,5,tf_a0
 1760+ 1  06F2	7D 96		        mov     r5,#(091h+5)
 1761+ 1  06F4	8D 39		        mov     039h,r5
 1762+ 1  06F6	E5 39		        mov     a,039h
 1763+ 1  06F8	B4 96 17	        cjne    a,#(091h+5),tf_a0
 1764:				        tf_ma   r6,6,tf_a0
 1765+ 1  06FB	7E 97		        mov     r6,#(091h+6)
 1766+ 1  06FD	8E 39		        mov     039h,r6
 1767+ 1  06FF	E5 39		        mov     a,039h
 1768+ 1  0701	B4 97 0E	        cjne    a,#(091h+6),tf_a0
 1769:				        tf_ma   r7,7,tf_a0
 1770+ 1  0704	7F 98		        mov     r7,#(091h+7)
 1771+ 1  0706	8F 39		        mov     039h,r7
 1772+ 1  0708	E5 39		        mov     a,039h
 1773+ 1  070A	B4 98 05	        cjne    a,#(091h+7),tf_a0
 1774:
 1775:				        eot     'a',tf_a0
 1776+ 1			        putc    #'a'
 1777+ 2  070D			??0170:
 1778+ 2			        ;jnb     SCON.1,putc_loop
 1779+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 33



 Line  I  Addr  Code            Source

 1780+ 2  070D	75 99 61	        mov     SBUF,#'a'
 1781+ 1  0710	80 06		        sjmp    ??0169
 1782+ 1  0712			tf_a0:  putc    #'?'
 1783+ 2  0712			??0171:
 1784+ 2			        ;jnb     SCON.1,putc_loop
 1785+ 2			        ;clr     SCON.1
 1786+ 2  0712	75 99 3F	        mov     SBUF,#'?'
 1787+ 1  0715	75 6E 01	        mov     fail,#001h
 1788+ 1  0718			??0169:
 1789:
 1790:				        tf_ma   @r0,0,tf_b0
 1791+ 1  0718	76 91		        mov     @r0,#(091h+0)
 1792+ 1  071A	86 39		        mov     039h,@r0
 1793+ 1  071C	E5 39		        mov     a,039h
 1794+ 1  071E	B4 91 0E	        cjne    a,#(091h+0),tf_b0
 1795:				        tf_ma   @r1,1,tf_b0
 1796+ 1  0721	77 92		        mov     @r1,#(091h+1)
 1797+ 1  0723	87 39		        mov     039h,@r1
 1798+ 1  0725	E5 39		        mov     a,039h
 1799+ 1  0727	B4 92 05	        cjne    a,#(091h+1),tf_b0
 1800:
 1801:				        eot     'b',tf_b0
 1802+ 1			        putc    #'b'
 1803+ 2  072A			??0173:
 1804+ 2			        ;jnb     SCON.1,putc_loop
 1805+ 2			        ;clr     SCON.1
 1806+ 2  072A	75 99 62	        mov     SBUF,#'b'
 1807+ 1  072D	80 06		        sjmp    ??0172
 1808+ 1  072F			tf_b0:  putc    #'?'
 1809+ 2  072F			??0174:
 1810+ 2			        ;jnb     SCON.1,putc_loop
 1811+ 2			        ;clr     SCON.1
 1812+ 2  072F	75 99 3F	        mov     SBUF,#'?'
 1813+ 1  0732	75 6E 01	        mov     fail,#001h
 1814+ 1  0735			??0172:
 1815:
 1816:	  0735	75 31 91	        mov     031h,#091h
 1817:	  0738	85 31 39	        mov     039h,031h
 1818:	  073B	E5 39		        mov     a,039h
 1819:	  073D	B4 91 05	        cjne    a,#091h,tf_c0
 1820:
 1821:				        eot     'c',tf_c0
 1822+ 1			        putc    #'c'
 1823+ 2  0740			??0176:
 1824+ 2			        ;jnb     SCON.1,putc_loop
 1825+ 2			        ;clr     SCON.1
 1826+ 2  0740	75 99 63	        mov     SBUF,#'c'
 1827+ 1  0743	80 06		        sjmp    ??0175
 1828+ 1  0745			tf_c0:  putc    #'?'
 1829+ 2  0745			??0177:
 1830+ 2			        ;jnb     SCON.1,putc_loop
 1831+ 2			        ;clr     SCON.1
 1832+ 2  0745	75 99 3F	        mov     SBUF,#'?'
 1833+ 1  0748	75 6E 01	        mov     fail,#001h
 1834+ 1  074B			??0175:
 1835:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 34



 Line  I  Addr  Code            Source

 1836:				tf_md   macro   rn, n, error_loc
 1837:				        mov     039h,#(091h+n)
 1838:				        mov     rn,039h
 1839:				        cjne    rn,#(091h+n),error_loc
 1840:				        endm
 1841:
 1842:				        tf_md   r0,0,tf_d0
 1843+ 1  074B	75 39 91	        mov     039h,#(091h+0)
 1844+ 1  074E	A8 39		        mov     r0,039h
 1845+ 1  0750	B8 91 3D	        cjne    r0,#(091h+0),tf_d0
 1846:				        tf_md   r1,1,tf_d0
 1847+ 1  0753	75 39 92	        mov     039h,#(091h+1)
 1848+ 1  0756	A9 39		        mov     r1,039h
 1849+ 1  0758	B9 92 35	        cjne    r1,#(091h+1),tf_d0
 1850:				        tf_md   r2,2,tf_d0
 1851+ 1  075B	75 39 93	        mov     039h,#(091h+2)
 1852+ 1  075E	AA 39		        mov     r2,039h
 1853+ 1  0760	BA 93 2D	        cjne    r2,#(091h+2),tf_d0
 1854:				        tf_md   r3,3,tf_d0
 1855+ 1  0763	75 39 94	        mov     039h,#(091h+3)
 1856+ 1  0766	AB 39		        mov     r3,039h
 1857+ 1  0768	BB 94 25	        cjne    r3,#(091h+3),tf_d0
 1858:				        tf_md   r4,4,tf_d0
 1859+ 1  076B	75 39 95	        mov     039h,#(091h+4)
 1860+ 1  076E	AC 39		        mov     r4,039h
 1861+ 1  0770	BC 95 1D	        cjne    r4,#(091h+4),tf_d0
 1862:				        tf_md   r5,5,tf_d0
 1863+ 1  0773	75 39 96	        mov     039h,#(091h+5)
 1864+ 1  0776	AD 39		        mov     r5,039h
 1865+ 1  0778	BD 96 15	        cjne    r5,#(091h+5),tf_d0
 1866:				        tf_md   r6,6,tf_d0
 1867+ 1  077B	75 39 97	        mov     039h,#(091h+6)
 1868+ 1  077E	AE 39		        mov     r6,039h
 1869+ 1  0780	BE 97 0D	        cjne    r6,#(091h+6),tf_d0
 1870:				        tf_md   r7,7,tf_d0
 1871+ 1  0783	75 39 98	        mov     039h,#(091h+7)
 1872+ 1  0786	AF 39		        mov     r7,039h
 1873+ 1  0788	BF 98 05	        cjne    r7,#(091h+7),tf_d0
 1874:
 1875:				        eot     'd',tf_d0
 1876+ 1			        putc    #'d'
 1877+ 2  078B			??0179:
 1878+ 2			        ;jnb     SCON.1,putc_loop
 1879+ 2			        ;clr     SCON.1
 1880+ 2  078B	75 99 64	        mov     SBUF,#'d'
 1881+ 1  078E	80 06		        sjmp    ??0178
 1882+ 1  0790			tf_d0:  putc    #'?'
 1883+ 2  0790			??0180:
 1884+ 2			        ;jnb     SCON.1,putc_loop
 1885+ 2			        ;clr     SCON.1
 1886+ 2  0790	75 99 3F	        mov     SBUF,#'?'
 1887+ 1  0793	75 6E 01	        mov     fail,#001h
 1888+ 1  0796			??0178:
 1889:
 1890:	  0796	78 60		        mov     r0,#dir0
 1891:	  0798	79 31		        mov     r1,#031h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 35



 Line  I  Addr  Code            Source

 1892:				        tf_md   @r0,0,tf_e0
 1893+ 1  079A	75 39 91	        mov     039h,#(091h+0)
 1894+ 1  079D	A6 39		        mov     @r0,039h
 1895+ 1  079F	B6 91 0D	        cjne    @r0,#(091h+0),tf_e0
 1896:				        tf_md   @r1,1,tf_e0
 1897+ 1  07A2	75 39 92	        mov     039h,#(091h+1)
 1898+ 1  07A5	A7 39		        mov     @r1,039h
 1899+ 1  07A7	B7 92 05	        cjne    @r1,#(091h+1),tf_e0
 1900:
 1901:				        eot     'e',tf_e0
 1902+ 1			        putc    #'e'
 1903+ 2  07AA			??0182:
 1904+ 2			        ;jnb     SCON.1,putc_loop
 1905+ 2			        ;clr     SCON.1
 1906+ 2  07AA	75 99 65	        mov     SBUF,#'e'
 1907+ 1  07AD	80 06		        sjmp    ??0181
 1908+ 1  07AF			tf_e0:  putc    #'?'
 1909+ 2  07AF			??0183:
 1910+ 2			        ;jnb     SCON.1,putc_loop
 1911+ 2			        ;clr     SCON.1
 1912+ 2  07AF	75 99 3F	        mov     SBUF,#'?'
 1913+ 1  07B2	75 6E 01	        mov     fail,#001h
 1914+ 1  07B5			??0181:
 1915:
 1916:				tf_mf   macro   rn, n, error_loc
 1917:				        mov     a,#(091h+n)
 1918:				        mov     rn,a
 1919:				        cjne    rn,#(091h+n),error_loc
 1920:				        endm
 1921:
 1922:				        tf_mf   r0,0,tf_f0
 1923+ 1  07B5	74 91		        mov     a,#(091h+0)
 1924+ 1  07B7	F8		        mov     r0,a
 1925+ 1  07B8	B8 91 2F	        cjne    r0,#(091h+0),tf_f0
 1926:				        tf_mf   r1,1,tf_f0
 1927+ 1  07BB	74 92		        mov     a,#(091h+1)
 1928+ 1  07BD	F9		        mov     r1,a
 1929+ 1  07BE	B9 92 29	        cjne    r1,#(091h+1),tf_f0
 1930:				        tf_mf   r2,2,tf_f0
 1931+ 1  07C1	74 93		        mov     a,#(091h+2)
 1932+ 1  07C3	FA		        mov     r2,a
 1933+ 1  07C4	BA 93 23	        cjne    r2,#(091h+2),tf_f0
 1934:				        tf_mf   r3,3,tf_f0
 1935+ 1  07C7	74 94		        mov     a,#(091h+3)
 1936+ 1  07C9	FB		        mov     r3,a
 1937+ 1  07CA	BB 94 1D	        cjne    r3,#(091h+3),tf_f0
 1938:				        tf_mf   r5,4,tf_f0
 1939+ 1  07CD	74 95		        mov     a,#(091h+4)
 1940+ 1  07CF	FD		        mov     r5,a
 1941+ 1  07D0	BD 95 17	        cjne    r5,#(091h+4),tf_f0
 1942:				        tf_mf   r5,5,tf_f0
 1943+ 1  07D3	74 96		        mov     a,#(091h+5)
 1944+ 1  07D5	FD		        mov     r5,a
 1945+ 1  07D6	BD 96 11	        cjne    r5,#(091h+5),tf_f0
 1946:				        tf_mf   r6,6,tf_f0
 1947+ 1  07D9	74 97		        mov     a,#(091h+6)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 36



 Line  I  Addr  Code            Source

 1948+ 1  07DB	FE		        mov     r6,a
 1949+ 1  07DC	BE 97 0B	        cjne    r6,#(091h+6),tf_f0
 1950:				        tf_mf   r7,7,tf_f0
 1951+ 1  07DF	74 98		        mov     a,#(091h+7)
 1952+ 1  07E1	FF		        mov     r7,a
 1953+ 1  07E2	BF 98 05	        cjne    r7,#(091h+7),tf_f0
 1954:
 1955:				        eot     'f',tf_f0
 1956+ 1			        putc    #'f'
 1957+ 2  07E5			??0185:
 1958+ 2			        ;jnb     SCON.1,putc_loop
 1959+ 2			        ;clr     SCON.1
 1960+ 2  07E5	75 99 66	        mov     SBUF,#'f'
 1961+ 1  07E8	80 06		        sjmp    ??0184
 1962+ 1  07EA			tf_f0:  putc    #'?'
 1963+ 2  07EA			??0186:
 1964+ 2			        ;jnb     SCON.1,putc_loop
 1965+ 2			        ;clr     SCON.1
 1966+ 2  07EA	75 99 3F	        mov     SBUF,#'?'
 1967+ 1  07ED	75 6E 01	        mov     fail,#001h
 1968+ 1  07F0			??0184:
 1969:
 1970:	  07F0	78 60		        mov     r0,#dir0
 1971:	  07F2	79 31		        mov     r1,#031h
 1972:				        tf_mf   @r0,0,tf_g0
 1973+ 1  07F4	74 91		        mov     a,#(091h+0)
 1974+ 1  07F6	F6		        mov     @r0,a
 1975+ 1  07F7	B6 91 0B	        cjne    @r0,#(091h+0),tf_g0
 1976:				        tf_mf   @r1,1,tf_g0
 1977+ 1  07FA	74 92		        mov     a,#(091h+1)
 1978+ 1  07FC	F7		        mov     @r1,a
 1979+ 1  07FD	B7 92 05	        cjne    @r1,#(091h+1),tf_g0
 1980:
 1981:				        eot     'g',tf_g0
 1982+ 1			        putc    #'g'
 1983+ 2  0800			??0188:
 1984+ 2			        ;jnb     SCON.1,putc_loop
 1985+ 2			        ;clr     SCON.1
 1986+ 2  0800	75 99 67	        mov     SBUF,#'g'
 1987+ 1  0803	80 06		        sjmp    ??0187
 1988+ 1  0805			tf_g0:  putc    #'?'
 1989+ 2  0805			??0189:
 1990+ 2			        ;jnb     SCON.1,putc_loop
 1991+ 2			        ;clr     SCON.1
 1992+ 2  0805	75 99 3F	        mov     SBUF,#'?'
 1993+ 1  0808	75 6E 01	        mov     fail,#001h
 1994+ 1  080B			??0187:
 1995:
 1996:	  080B	75 60 79	        mov     dir0,#079h
 1997:	  080E	78 00		        mov     r0,#000h
 1998:	  0810	74 34		        mov     a,#34h
 1999:	  0812	F5 60		        mov     dir0,a
 2000:	  0814	A8 60		        mov     r0,dir0
 2001:	  0816	B8 34 05	        cjne    r0,#034h,tf_h0
 2002:
 2003:				        eot     'h',tf_h0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 37



 Line  I  Addr  Code            Source

 2004+ 1			        putc    #'h'
 2005+ 2  0819			??0191:
 2006+ 2			        ;jnb     SCON.1,putc_loop
 2007+ 2			        ;clr     SCON.1
 2008+ 2  0819	75 99 68	        mov     SBUF,#'h'
 2009+ 1  081C	80 06		        sjmp    ??0190
 2010+ 1  081E			tf_h0:  putc    #'?'
 2011+ 2  081E			??0192:
 2012+ 2			        ;jnb     SCON.1,putc_loop
 2013+ 2			        ;clr     SCON.1
 2014+ 2  081E	75 99 3F	        mov     SBUF,#'?'
 2015+ 1  0821	75 6E 01	        mov     fail,#001h
 2016+ 1  0824			??0190:
 2017:
 2018:	  0824	74 00		        mov     a,#000h
 2019:
 2020:	  0826	79 31		        mov     r1,#031h
 2021:	  0828	75 31 56	        mov     031h,#056h
 2022:	  082B	78 60		        mov     r0,#dir0
 2023:	  082D	75 60 34	        mov     dir0,#034h
 2024:	  0830	E6		        mov     a,@r0
 2025:	  0831	B4 34 09	        cjne    a,#034h,tf_i0
 2026:	  0834	E7		        mov     a,@r1
 2027:	  0835	B4 56 05	        cjne    a,#056h,tf_i0
 2028:
 2029:				        eot     'i',tf_i0
 2030+ 1			        putc    #'i'
 2031+ 2  0838			??0194:
 2032+ 2			        ;jnb     SCON.1,putc_loop
 2033+ 2			        ;clr     SCON.1
 2034+ 2  0838	75 99 69	        mov     SBUF,#'i'
 2035+ 1  083B	80 06		        sjmp    ??0193
 2036+ 1  083D			tf_i0:  putc    #'?'
 2037+ 2  083D			??0195:
 2038+ 2			        ;jnb     SCON.1,putc_loop
 2039+ 2			        ;clr     SCON.1
 2040+ 2  083D	75 99 3F	        mov     SBUF,#'?'
 2041+ 1  0840	75 6E 01	        mov     fail,#001h
 2042+ 1  0843			??0193:
 2043:
 2044:				        put_crlf                    ; end of test series
 2045+ 1			        putc    #13
 2046+ 2  0843			??0196:
 2047+ 2			        ;jnb     SCON.1,putc_loop
 2048+ 2			        ;clr     SCON.1
 2049+ 2  0843	75 99 0D	        mov     SBUF,#13
 2050+ 1			        putc    #10
 2051+ 2  0846			??0197:
 2052+ 2			        ;jnb     SCON.1,putc_loop
 2053+ 2			        ;clr     SCON.1
 2054+ 2  0846	75 99 0A	        mov     SBUF,#10
 2055:
 2056:
 2057:				        ;-- Test series G ------------------------------------------------------
 2058:				        ; Note the XCG tests are specially lame even within this context.
 2059:				        ; a.- <CLR A>, <CPL A>, <SWAP A>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 38



 Line  I  Addr  Code            Source

 2060:				        ; b.- <INC DPTR>
 2061:				        ; c.- <XCH A,dir>
 2062:				        ; d.- <XCH A,@Ri>
 2063:				        ; e.- <XCH A,Rn>
 2064:
 2065:				        putc    #'G'                ; start of test series
 2066+ 1  0849			??0198:
 2067+ 1			        ;jnb     SCON.1,putc_loop
 2068+ 1			        ;clr     SCON.1
 2069+ 1  0849	75 99 47	        mov     SBUF,#'G'
 2070:
 2071:	  084C	74 55		        mov     a,#055h
 2072:	  084E	E4		        clr     a
 2073:	  084F	70 11		        jnz     tg_a0
 2074:
 2075:	  0851	74 55		        mov     a,#055h
 2076:	  0853	F4		        cpl     a
 2077:	  0854	B4 AA 0B	        cjne    a,#0aah,tg_a0
 2078:
 2079:	  0857	74 97		        mov     a,#097h
 2080:	  0859	C4		        swap    a
 2081:	  085A	B4 79 05	        cjne    a,#079h,tg_a0
 2082:
 2083:				        eot     'a',tg_a0
 2084+ 1			        putc    #'a'
 2085+ 2  085D			??0200:
 2086+ 2			        ;jnb     SCON.1,putc_loop
 2087+ 2			        ;clr     SCON.1
 2088+ 2  085D	75 99 61	        mov     SBUF,#'a'
 2089+ 1  0860	80 06		        sjmp    ??0199
 2090+ 1  0862			tg_a0:  putc    #'?'
 2091+ 2  0862			??0201:
 2092+ 2			        ;jnb     SCON.1,putc_loop
 2093+ 2			        ;clr     SCON.1
 2094+ 2  0862	75 99 3F	        mov     SBUF,#'?'
 2095+ 1  0865	75 6E 01	        mov     fail,#001h
 2096+ 1  0868			??0199:
 2097:
 2098:	  0868	75 83 12	        mov     DPH,#012h
 2099:	  086B	75 82 FD	        mov     DPL,#0fdh
 2100:	  086E	A3		        inc     dptr
 2101:	  086F	E5 83		        mov     a,DPH
 2102:	  0871	B4 12 20	        cjne    a,#012h,tg_b0
 2103:	  0874	E5 82		        mov     a,DPL
 2104:	  0876	B4 FE 1B	        cjne    a,#0feh,tg_b0
 2105:	  0879	A3		        inc     dptr
 2106:	  087A	E5 83		        mov     a,DPH
 2107:	  087C	B4 12 15	        cjne    a,#012h,tg_b0
 2108:	  087F	E5 82		        mov     a,DPL
 2109:	  0881	B4 FF 10	        cjne    a,#0ffh,tg_b0
 2110:	  0884	A3		        inc     dptr
 2111:	  0885	E5 83		        mov     a,DPH
 2112:	  0887	B4 13 0A	        cjne    a,#013h,tg_b0
 2113:	  088A	E5 82		        mov     a,DPL
 2114:	  088C	B4 00 05	        cjne    a,#000h,tg_b0
 2115:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 39



 Line  I  Addr  Code            Source

 2116:				        eot     'b',tg_b0
 2117+ 1			        putc    #'b'
 2118+ 2  088F			??0203:
 2119+ 2			        ;jnb     SCON.1,putc_loop
 2120+ 2			        ;clr     SCON.1
 2121+ 2  088F	75 99 62	        mov     SBUF,#'b'
 2122+ 1  0892	80 06		        sjmp    ??0202
 2123+ 1  0894			tg_b0:  putc    #'?'
 2124+ 2  0894			??0204:
 2125+ 2			        ;jnb     SCON.1,putc_loop
 2126+ 2			        ;clr     SCON.1
 2127+ 2  0894	75 99 3F	        mov     SBUF,#'?'
 2128+ 1  0897	75 6E 01	        mov     fail,#001h
 2129+ 1  089A			??0202:
 2130:
 2131:				        ; c.- <XCH A,dir>
 2132:	  089A	74 34		        mov     a,#34h
 2133:	  089C	75 13 57	        mov     13h,#57h
 2134:	  089F	C5 13		        xch     a,13h
 2135:	  08A1	B4 57 0A	        cjne    a,#57h,tg_c0
 2136:	  08A4	E5 13		        mov     a,13h
 2137:	  08A6	B4 34 05	        cjne    a,#34h,tg_c0
 2138:
 2139:				        eot     'c',tg_c0
 2140+ 1			        putc    #'c'
 2141+ 2  08A9			??0206:
 2142+ 2			        ;jnb     SCON.1,putc_loop
 2143+ 2			        ;clr     SCON.1
 2144+ 2  08A9	75 99 63	        mov     SBUF,#'c'
 2145+ 1  08AC	80 06		        sjmp    ??0205
 2146+ 1  08AE			tg_c0:  putc    #'?'
 2147+ 2  08AE			??0207:
 2148+ 2			        ;jnb     SCON.1,putc_loop
 2149+ 2			        ;clr     SCON.1
 2150+ 2  08AE	75 99 3F	        mov     SBUF,#'?'
 2151+ 1  08B1	75 6E 01	        mov     fail,#001h
 2152+ 1  08B4			??0205:
 2153:
 2154:				        ; d.- <XCH A,@Ri>
 2155:	  08B4	74 91		        mov     a,#91h
 2156:	  08B6	75 29 78	        mov     29h,#78h
 2157:	  08B9	79 29		        mov     r1,#29h
 2158:	  08BB	C7		        xch     a,@r1
 2159:	  08BC	B4 78 0A	        cjne    a,#78h,tg_d0
 2160:	  08BF	E5 29		        mov     a,29h
 2161:	  08C1	B4 91 05	        cjne    a,#91h,tg_d0
 2162:
 2163:				        eot     'd',tg_d0
 2164+ 1			        putc    #'d'
 2165+ 2  08C4			??0209:
 2166+ 2			        ;jnb     SCON.1,putc_loop
 2167+ 2			        ;clr     SCON.1
 2168+ 2  08C4	75 99 64	        mov     SBUF,#'d'
 2169+ 1  08C7	80 06		        sjmp    ??0208
 2170+ 1  08C9			tg_d0:  putc    #'?'
 2171+ 2  08C9			??0210:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 40



 Line  I  Addr  Code            Source

 2172+ 2			        ;jnb     SCON.1,putc_loop
 2173+ 2			        ;clr     SCON.1
 2174+ 2  08C9	75 99 3F	        mov     SBUF,#'?'
 2175+ 1  08CC	75 6E 01	        mov     fail,#001h
 2176+ 1  08CF			??0208:
 2177:
 2178:				        ; e.- <XCHG A,Rn>
 2179:	  08CF	74 43		        mov     a,#43h
 2180:	  08D1	7E A2		        mov     r6,#0a2h
 2181:	  08D3	CE		        xch     a,r6
 2182:	  08D4	B4 A2 09	        cjne    a,#0a2h,tg_e0
 2183:	  08D7	EE		        mov     a,r6
 2184:	  08D8	B4 43 05	        cjne    a,#43h,tg_e0
 2185:
 2186:				        eot     'e',tg_e0
 2187+ 1			        putc    #'e'
 2188+ 2  08DB			??0212:
 2189+ 2			        ;jnb     SCON.1,putc_loop
 2190+ 2			        ;clr     SCON.1
 2191+ 2  08DB	75 99 65	        mov     SBUF,#'e'
 2192+ 1  08DE	80 06		        sjmp    ??0211
 2193+ 1  08E0			tg_e0:  putc    #'?'
 2194+ 2  08E0			??0213:
 2195+ 2			        ;jnb     SCON.1,putc_loop
 2196+ 2			        ;clr     SCON.1
 2197+ 2  08E0	75 99 3F	        mov     SBUF,#'?'
 2198+ 1  08E3	75 6E 01	        mov     fail,#001h
 2199+ 1  08E6			??0211:
 2200:
 2201:
 2202:				        put_crlf                    ; end of test series
 2203+ 1			        putc    #13
 2204+ 2  08E6			??0214:
 2205+ 2			        ;jnb     SCON.1,putc_loop
 2206+ 2			        ;clr     SCON.1
 2207+ 2  08E6	75 99 0D	        mov     SBUF,#13
 2208+ 1			        putc    #10
 2209+ 2  08E9			??0215:
 2210+ 2			        ;jnb     SCON.1,putc_loop
 2211+ 2			        ;clr     SCON.1
 2212+ 2  08E9	75 99 0A	        mov     SBUF,#10
 2213:
 2214:
 2215:				        ;-- ALU opcode block test ----------------------------------------------
 2216:				        ; This set of macros is used to test families of opcodes, such as ORL,
 2217:				        ; ANL, ADD, etc. with all their addressing modes.
 2218:				        ;
 2219:				        ; a.- <OP A,dir>, <OP A,@Ri>, <OP A, Rn> (n=0,1)
 2220:				        ; b.- <OP A, Rn> (n=2,3)
 2221:				        ; c.- <OP A, Rn> (n=4,5)
 2222:				        ; d.- <OP A, Rn> (n=6,7)
 2223:				        ; e.- <OP dir,#imm>
 2224:				        ; f.- <OP A,#imm>
 2225:				        ; g.- <OP dir,A>
 2226:
 2227:				        ;store psw away for later comparison

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 41



 Line  I  Addr  Code            Source

 2228:				save_psw macro
 2229:				        mov     saved_psw,PSW
 2230:				        endm
 2231:
 2232:				        ; compare flags CY, AC and OV with expected values in <flags>
 2233:				tst_psw macro   flags,error_loc
 2234:				        mov     a,saved_psw
 2235:				        anl     a,#0c4h
 2236:				        xrl     a,#flags
 2237:				        anl     a,#0feh
 2238:				        jnz     error_loc
 2239:				        endm
 2240:
 2241:				        ; Set the CY flag to the value of the lsb of argument <flags>
 2242:				set_cy  macro   flags
 2243:				        local   cy_val
 2244:				cy_val  set     (flags and 1)
 2245:				        if      cy_val eq 1
 2246:				        setb    c
 2247:				        else
 2248:				        clr     c
 2249:				        endif
 2250:				        endm
 2251:
 2252:				        ; Test instruction <op> A, src
 2253:				        ;
 2254:				        ; flags = (<expected PSW> & 0xfe) | <input cy>
 2255:				        ; (P flag result is not tested)
 2256:				top_ma  macro   op,src,error_loc,flags
 2257:				        mov     src,#arg0
 2258:				        mov     a,#arg1
 2259:				        ifnb    <flags>
 2260:				        set_cy  flags
 2261:				        endif
 2262:				        op      a,src
 2263:				        ifnb    <flags>
 2264:				        save_psw
 2265:				        endif
 2266:				        cjne    a,#res,error_loc
 2267:				        ifnb    <flags>
 2268:				        tst_psw <flags>,error_loc
 2269:				        endif
 2270:				        endm
 2271:
 2272:				        ; Test instruction <op> dst, #arg0
 2273:				        ; (<flags> same as top_ma)
 2274:				top_mb  macro   op,dst,error_loc,flags
 2275:				        mov     dst,#arg1
 2276:				        ifnb    <flags>
 2277:				        set_cy  flags
 2278:				        endif
 2279:				        op      dst,#arg0
 2280:				        ifnb    <flags>
 2281:				        save_psw
 2282:				        endif
 2283:				        mov     ACC,dst

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 42



 Line  I  Addr  Code            Source

 2284:				        cjne    a,#res,error_loc
 2285:				        ifnb    <flags>
 2286:				        tst_psw <flags>,error_loc
 2287:				        endif
 2288:				        endm
 2289:
 2290:				        ; Test instruction <op> dir, A
 2291:				        ; (<flags> same as top_ma)
 2292:				top_mc  macro   op,error_loc,flags
 2293:				        mov     dir0,#arg0
 2294:				        mov     a,#arg1
 2295:				        ifnb    <flags>
 2296:				        set_cy  flags
 2297:				        endif
 2298:				        op      dir0,a
 2299:				        ifnb    <flags>
 2300:				        save_psw
 2301:				        endif
 2302:				        mov     a,dir0
 2303:				        cjne    a,#res,error_loc
 2304:				        ifnb    <flags>
 2305:				        tst_psw <flags>,error_loc
 2306:				        endif
 2307:				        endm
 2308:
 2309:				        ; Test ALU instruction with all addressing modes.
 2310:				        ; FIXME <op> A, #imm not tested!
 2311:				        ; op : Opcode to be tested
 2312:				        ; a0, a1 : Values used as 1st and 2nd args in all addressing modes
 2313:				        ; r : Expected result
 2314:				        ; am :
 2315:				        ; flags : <Expected PSW value>&0xfe | <input cy>
 2316:				        ; (if the parameter is unused, the macro skips the flag check)
 2317:				tst_alu macro   op,a0,a1,r,am,flags
 2318:				        local   tall_0d
 2319:				        local   tall_0a
 2320:				        local   tall_0b
 2321:				        local   tall_0c
 2322:				        local   tall_1
 2323:				        local   tall_2
 2324:				        local   tall_3
 2325:				        ; Put the argument and result data into variables for easier access
 2326:				        arg0    set a0
 2327:				        arg1    set a1
 2328:				        res     set r
 2329:
 2330:				        ; Test <op> A, dir
 2331:				        top_ma  op,dir0,tall_0a,<flags>
 2332:				        ; Test <op> A, @R0
 2333:				        mov     r0,#dir0
 2334:				        top_ma  op,@r0,tall_0a,<flags>
 2335:				        ; Test <op> A, @R1
 2336:				        mov     r1,#031h
 2337:				        top_ma  op,@r1,tall_0a,<flags>
 2338:
 2339:				        ; Now test <op> A, Rn for n in 0..7

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 43



 Line  I  Addr  Code            Source

 2340:				        top_ma  op,r0,tall_0a,<flags>
 2341:				        top_ma  op,r1,tall_0a,<flags>
 2342:
 2343:				        eot     'a',tall_0a
 2344:
 2345:				        top_ma  op,r2,tall_0b,<flags>
 2346:				        top_ma  op,r3,tall_0b,<flags>
 2347:
 2348:				        eot     'b',tall_0b
 2349:
 2350:				        top_ma  op,r4,tall_0c,<flags>
 2351:				        top_ma  op,r5,tall_0c,<flags>
 2352:
 2353:				        eot     'c',tall_0c
 2354:
 2355:				        top_ma  op,r6,tall_0d,<flags>
 2356:				        top_ma  op,r7,tall_0d,<flags>
 2357:
 2358:				        eot     'd',tall_0d
 2359:				        ; Ok, <op> A, {dir | @Ri | Rn} done.
 2360:
 2361:				        ; Optionally test immediate addressing modes.
 2362:
 2363:				        if      (am and 1) ne 0
 2364:				        ; Test <op> A, #arg1...
 2365:				        top_mb  op,a,tall_1,<flags>
 2366:				        eot     'e',tall_1
 2367:				        endif
 2368:
 2369:				        if      (am and 2) ne 0
 2370:				        ; ...and <op> dir, #arg1
 2371:				        top_mb  op,dir0,tall_2,<flags>
 2372:				        eot     'f',tall_2
 2373:				        endif
 2374:
 2375:				        ; Optionally test <op> dir, A
 2376:				        if      (am and 4) ne 0
 2377:				        top_mc  op,tall_3,<flags>
 2378:				        eot     'g',tall_3
 2379:				        endif
 2380:
 2381:				        endm
 2382:
 2383:
 2384:				        ;-- Test series H ------------------------------------------------------
 2385:				        ; ANL
 2386:				        ; (See comments for 'ALU opcode block test')
 2387:
 2388:				        putc    #'H'                ; start of test series
 2389+ 1  08EC			??0216:
 2390+ 1			        ;jnb     SCON.1,putc_loop
 2391+ 1			        ;clr     SCON.1
 2392+ 1  08EC	75 99 48	        mov     SBUF,#'H'
 2393:
 2394:				        tst_alu anl,03ch,099h,018h,07h,
 2395+ 1			        ; Put the argument and result data into variables for easier access

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 44



 Line  I  Addr  Code            Source

 2396+ 1	N      003C	        arg0    set 03ch
 2397+ 1	N      0099	        arg1    set 099h
 2398+ 1	N      0018	        res     set 018h
 2399+ 1
 2400+ 1			        ; Test <op> A, dir
 2401+ 1			        top_ma  anl,dir0,??0218,<>
 2402+ 2  08EF	75 60 3C	        mov     dir0,#arg0
 2403+ 2  08F2	74 99		        mov     a,#arg1
 2404+ 2			        ifnb    <>
 2405+ 2			        set_cy
 2406+ 2			        endif
 2407+ 2  08F4	55 60		        anl      a,dir0
 2408+ 2			        ifnb    <>
 2409+ 2			        save_psw
 2410+ 2			        endif
 2411+ 2  08F6	B4 18 29	        cjne    a,#res,??0218
 2412+ 2			        ifnb    <>
 2413+ 2			        tst_psw <>,??0218
 2414+ 2			        endif
 2415+ 1			        ; Test <op> A, @R0
 2416+ 1  08F9	78 60		        mov     r0,#dir0
 2417+ 1			        top_ma  anl,@r0,??0218,<>
 2418+ 2  08FB	76 3C		        mov     @r0,#arg0
 2419+ 2  08FD	74 99		        mov     a,#arg1
 2420+ 2			        ifnb    <>
 2421+ 2			        set_cy
 2422+ 2			        endif
 2423+ 2  08FF	56		        anl      a,@r0
 2424+ 2			        ifnb    <>
 2425+ 2			        save_psw
 2426+ 2			        endif
 2427+ 2  0900	B4 18 1F	        cjne    a,#res,??0218
 2428+ 2			        ifnb    <>
 2429+ 2			        tst_psw <>,??0218
 2430+ 2			        endif
 2431+ 1			        ; Test <op> A, @R1
 2432+ 1  0903	79 31		        mov     r1,#031h
 2433+ 1			        top_ma  anl,@r1,??0218,<>
 2434+ 2  0905	77 3C		        mov     @r1,#arg0
 2435+ 2  0907	74 99		        mov     a,#arg1
 2436+ 2			        ifnb    <>
 2437+ 2			        set_cy
 2438+ 2			        endif
 2439+ 2  0909	57		        anl      a,@r1
 2440+ 2			        ifnb    <>
 2441+ 2			        save_psw
 2442+ 2			        endif
 2443+ 2  090A	B4 18 15	        cjne    a,#res,??0218
 2444+ 2			        ifnb    <>
 2445+ 2			        tst_psw <>,??0218
 2446+ 2			        endif
 2447+ 1
 2448+ 1			        ; Now test <op> A, Rn for n in 0..7
 2449+ 1			        top_ma  anl,r0,??0218,<>
 2450+ 2  090D	78 3C		        mov     r0,#arg0
 2451+ 2  090F	74 99		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 45



 Line  I  Addr  Code            Source

 2452+ 2			        ifnb    <>
 2453+ 2			        set_cy
 2454+ 2			        endif
 2455+ 2  0911	58		        anl      a,r0
 2456+ 2			        ifnb    <>
 2457+ 2			        save_psw
 2458+ 2			        endif
 2459+ 2  0912	B4 18 0D	        cjne    a,#res,??0218
 2460+ 2			        ifnb    <>
 2461+ 2			        tst_psw <>,??0218
 2462+ 2			        endif
 2463+ 1			        top_ma  anl,r1,??0218,<>
 2464+ 2  0915	79 3C		        mov     r1,#arg0
 2465+ 2  0917	74 99		        mov     a,#arg1
 2466+ 2			        ifnb    <>
 2467+ 2			        set_cy
 2468+ 2			        endif
 2469+ 2  0919	59		        anl      a,r1
 2470+ 2			        ifnb    <>
 2471+ 2			        save_psw
 2472+ 2			        endif
 2473+ 2  091A	B4 18 05	        cjne    a,#res,??0218
 2474+ 2			        ifnb    <>
 2475+ 2			        tst_psw <>,??0218
 2476+ 2			        endif
 2477+ 1
 2478+ 1			        eot     'a',??0218
 2479+ 2			        putc    #'a'
 2480+ 3  091D			??0225:
 2481+ 3			        ;jnb     SCON.1,putc_loop
 2482+ 3			        ;clr     SCON.1
 2483+ 3  091D	75 99 61	        mov     SBUF,#'a'
 2484+ 2  0920	80 06		        sjmp    ??0224
 2485+ 2  0922			??0218:  putc    #'?'
 2486+ 3  0922			??0226:
 2487+ 3			        ;jnb     SCON.1,putc_loop
 2488+ 3			        ;clr     SCON.1
 2489+ 3  0922	75 99 3F	        mov     SBUF,#'?'
 2490+ 2  0925	75 6E 01	        mov     fail,#001h
 2491+ 2  0928			??0224:
 2492+ 1
 2493+ 1			        top_ma  anl,r2,??0219,<>
 2494+ 2  0928	7A 3C		        mov     r2,#arg0
 2495+ 2  092A	74 99		        mov     a,#arg1
 2496+ 2			        ifnb    <>
 2497+ 2			        set_cy
 2498+ 2			        endif
 2499+ 2  092C	5A		        anl      a,r2
 2500+ 2			        ifnb    <>
 2501+ 2			        save_psw
 2502+ 2			        endif
 2503+ 2  092D	B4 18 0D	        cjne    a,#res,??0219
 2504+ 2			        ifnb    <>
 2505+ 2			        tst_psw <>,??0219
 2506+ 2			        endif
 2507+ 1			        top_ma  anl,r3,??0219,<>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 46



 Line  I  Addr  Code            Source

 2508+ 2  0930	7B 3C		        mov     r3,#arg0
 2509+ 2  0932	74 99		        mov     a,#arg1
 2510+ 2			        ifnb    <>
 2511+ 2			        set_cy
 2512+ 2			        endif
 2513+ 2  0934	5B		        anl      a,r3
 2514+ 2			        ifnb    <>
 2515+ 2			        save_psw
 2516+ 2			        endif
 2517+ 2  0935	B4 18 05	        cjne    a,#res,??0219
 2518+ 2			        ifnb    <>
 2519+ 2			        tst_psw <>,??0219
 2520+ 2			        endif
 2521+ 1
 2522+ 1			        eot     'b',??0219
 2523+ 2			        putc    #'b'
 2524+ 3  0938			??0228:
 2525+ 3			        ;jnb     SCON.1,putc_loop
 2526+ 3			        ;clr     SCON.1
 2527+ 3  0938	75 99 62	        mov     SBUF,#'b'
 2528+ 2  093B	80 06		        sjmp    ??0227
 2529+ 2  093D			??0219:  putc    #'?'
 2530+ 3  093D			??0229:
 2531+ 3			        ;jnb     SCON.1,putc_loop
 2532+ 3			        ;clr     SCON.1
 2533+ 3  093D	75 99 3F	        mov     SBUF,#'?'
 2534+ 2  0940	75 6E 01	        mov     fail,#001h
 2535+ 2  0943			??0227:
 2536+ 1
 2537+ 1			        top_ma  anl,r4,??0220,<>
 2538+ 2  0943	7C 3C		        mov     r4,#arg0
 2539+ 2  0945	74 99		        mov     a,#arg1
 2540+ 2			        ifnb    <>
 2541+ 2			        set_cy
 2542+ 2			        endif
 2543+ 2  0947	5C		        anl      a,r4
 2544+ 2			        ifnb    <>
 2545+ 2			        save_psw
 2546+ 2			        endif
 2547+ 2  0948	B4 18 0D	        cjne    a,#res,??0220
 2548+ 2			        ifnb    <>
 2549+ 2			        tst_psw <>,??0220
 2550+ 2			        endif
 2551+ 1			        top_ma  anl,r5,??0220,<>
 2552+ 2  094B	7D 3C		        mov     r5,#arg0
 2553+ 2  094D	74 99		        mov     a,#arg1
 2554+ 2			        ifnb    <>
 2555+ 2			        set_cy
 2556+ 2			        endif
 2557+ 2  094F	5D		        anl      a,r5
 2558+ 2			        ifnb    <>
 2559+ 2			        save_psw
 2560+ 2			        endif
 2561+ 2  0950	B4 18 05	        cjne    a,#res,??0220
 2562+ 2			        ifnb    <>
 2563+ 2			        tst_psw <>,??0220

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 47



 Line  I  Addr  Code            Source

 2564+ 2			        endif
 2565+ 1
 2566+ 1			        eot     'c',??0220
 2567+ 2			        putc    #'c'
 2568+ 3  0953			??0231:
 2569+ 3			        ;jnb     SCON.1,putc_loop
 2570+ 3			        ;clr     SCON.1
 2571+ 3  0953	75 99 63	        mov     SBUF,#'c'
 2572+ 2  0956	80 06		        sjmp    ??0230
 2573+ 2  0958			??0220:  putc    #'?'
 2574+ 3  0958			??0232:
 2575+ 3			        ;jnb     SCON.1,putc_loop
 2576+ 3			        ;clr     SCON.1
 2577+ 3  0958	75 99 3F	        mov     SBUF,#'?'
 2578+ 2  095B	75 6E 01	        mov     fail,#001h
 2579+ 2  095E			??0230:
 2580+ 1
 2581+ 1			        top_ma  anl,r6,??0217,<>
 2582+ 2  095E	7E 3C		        mov     r6,#arg0
 2583+ 2  0960	74 99		        mov     a,#arg1
 2584+ 2			        ifnb    <>
 2585+ 2			        set_cy
 2586+ 2			        endif
 2587+ 2  0962	5E		        anl      a,r6
 2588+ 2			        ifnb    <>
 2589+ 2			        save_psw
 2590+ 2			        endif
 2591+ 2  0963	B4 18 0D	        cjne    a,#res,??0217
 2592+ 2			        ifnb    <>
 2593+ 2			        tst_psw <>,??0217
 2594+ 2			        endif
 2595+ 1			        top_ma  anl,r7,??0217,<>
 2596+ 2  0966	7F 3C		        mov     r7,#arg0
 2597+ 2  0968	74 99		        mov     a,#arg1
 2598+ 2			        ifnb    <>
 2599+ 2			        set_cy
 2600+ 2			        endif
 2601+ 2  096A	5F		        anl      a,r7
 2602+ 2			        ifnb    <>
 2603+ 2			        save_psw
 2604+ 2			        endif
 2605+ 2  096B	B4 18 05	        cjne    a,#res,??0217
 2606+ 2			        ifnb    <>
 2607+ 2			        tst_psw <>,??0217
 2608+ 2			        endif
 2609+ 1
 2610+ 1			        eot     'd',??0217
 2611+ 2			        putc    #'d'
 2612+ 3  096E			??0234:
 2613+ 3			        ;jnb     SCON.1,putc_loop
 2614+ 3			        ;clr     SCON.1
 2615+ 3  096E	75 99 64	        mov     SBUF,#'d'
 2616+ 2  0971	80 06		        sjmp    ??0233
 2617+ 2  0973			??0217:  putc    #'?'
 2618+ 3  0973			??0235:
 2619+ 3			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 48



 Line  I  Addr  Code            Source

 2620+ 3			        ;clr     SCON.1
 2621+ 3  0973	75 99 3F	        mov     SBUF,#'?'
 2622+ 2  0976	75 6E 01	        mov     fail,#001h
 2623+ 2  0979			??0233:
 2624+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 2625+ 1
 2626+ 1			        ; Optionally test immediate addressing modes.
 2627+ 1
 2628+ 1	N      FFFF	        if      (07h and 1) ne 0
 2629+ 1			        ; Test <op> A, #arg1...
 2630+ 1			        top_mb  anl,a,??0221,<>
 2631+ 2  0979	74 99		        mov     a,#arg1
 2632+ 2			        ifnb    <>
 2633+ 2			        set_cy
 2634+ 2			        endif
 2635+ 2  097B	54 3C		        anl      a,#arg0
 2636+ 2			        ifnb    <>
 2637+ 2			        save_psw
 2638+ 2			        endif
 2639+ 2  097D	F5 E0		        mov     ACC,a
 2640+ 2  097F	B4 18 05	        cjne    a,#res,??0221
 2641+ 2			        ifnb    <>
 2642+ 2			        tst_psw <>,??0221
 2643+ 2			        endif
 2644+ 1			        eot     'e',??0221
 2645+ 2			        putc    #'e'
 2646+ 3  0982			??0237:
 2647+ 3			        ;jnb     SCON.1,putc_loop
 2648+ 3			        ;clr     SCON.1
 2649+ 3  0982	75 99 65	        mov     SBUF,#'e'
 2650+ 2  0985	80 06		        sjmp    ??0236
 2651+ 2  0987			??0221:  putc    #'?'
 2652+ 3  0987			??0238:
 2653+ 3			        ;jnb     SCON.1,putc_loop
 2654+ 3			        ;clr     SCON.1
 2655+ 3  0987	75 99 3F	        mov     SBUF,#'?'
 2656+ 2  098A	75 6E 01	        mov     fail,#001h
 2657+ 2  098D			??0236:
 2658+ 1			        endif
 2659+ 1
 2660+ 1	N      FFFF	        if      (07h and 2) ne 0
 2661+ 1			        ; ...and <op> dir, #arg1
 2662+ 1			        top_mb  anl,dir0,??0222,<>
 2663+ 2  098D	75 60 99	        mov     dir0,#arg1
 2664+ 2			        ifnb    <>
 2665+ 2			        set_cy
 2666+ 2			        endif
 2667+ 2  0990	53 60 3C	        anl      dir0,#arg0
 2668+ 2			        ifnb    <>
 2669+ 2			        save_psw
 2670+ 2			        endif
 2671+ 2  0993	85 60 E0	        mov     ACC,dir0
 2672+ 2  0996	B4 18 05	        cjne    a,#res,??0222
 2673+ 2			        ifnb    <>
 2674+ 2			        tst_psw <>,??0222
 2675+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 49



 Line  I  Addr  Code            Source

 2676+ 1			        eot     'f',??0222
 2677+ 2			        putc    #'f'
 2678+ 3  0999			??0240:
 2679+ 3			        ;jnb     SCON.1,putc_loop
 2680+ 3			        ;clr     SCON.1
 2681+ 3  0999	75 99 66	        mov     SBUF,#'f'
 2682+ 2  099C	80 06		        sjmp    ??0239
 2683+ 2  099E			??0222:  putc    #'?'
 2684+ 3  099E			??0241:
 2685+ 3			        ;jnb     SCON.1,putc_loop
 2686+ 3			        ;clr     SCON.1
 2687+ 3  099E	75 99 3F	        mov     SBUF,#'?'
 2688+ 2  09A1	75 6E 01	        mov     fail,#001h
 2689+ 2  09A4			??0239:
 2690+ 1			        endif
 2691+ 1
 2692+ 1			        ; Optionally test <op> dir, A
 2693+ 1	N      FFFF	        if      (07h and 4) ne 0
 2694+ 1			        top_mc  anl,??0223,<>
 2695+ 2  09A4	75 60 3C	        mov     dir0,#arg0
 2696+ 2  09A7	74 99		        mov     a,#arg1
 2697+ 2			        ifnb    <>
 2698+ 2			        set_cy
 2699+ 2			        endif
 2700+ 2  09A9	52 60		        anl      dir0,a
 2701+ 2			        ifnb    <>
 2702+ 2			        save_psw
 2703+ 2			        endif
 2704+ 2  09AB	E5 60		        mov     a,dir0
 2705+ 2  09AD	B4 18 05	        cjne    a,#res,??0223
 2706+ 2			        ifnb    <>
 2707+ 2			        tst_psw <>,??0223
 2708+ 2			        endif
 2709+ 1			        eot     'g',??0223
 2710+ 2			        putc    #'g'
 2711+ 3  09B0			??0243:
 2712+ 3			        ;jnb     SCON.1,putc_loop
 2713+ 3			        ;clr     SCON.1
 2714+ 3  09B0	75 99 67	        mov     SBUF,#'g'
 2715+ 2  09B3	80 06		        sjmp    ??0242
 2716+ 2  09B5			??0223:  putc    #'?'
 2717+ 3  09B5			??0244:
 2718+ 3			        ;jnb     SCON.1,putc_loop
 2719+ 3			        ;clr     SCON.1
 2720+ 3  09B5	75 99 3F	        mov     SBUF,#'?'
 2721+ 2  09B8	75 6E 01	        mov     fail,#001h
 2722+ 2  09BB			??0242:
 2723+ 1			        endif
 2724+ 1
 2725:
 2726:				        put_crlf                    ; end of test series
 2727+ 1			        putc    #13
 2728+ 2  09BB			??0245:
 2729+ 2			        ;jnb     SCON.1,putc_loop
 2730+ 2			        ;clr     SCON.1
 2731+ 2  09BB	75 99 0D	        mov     SBUF,#13

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 50



 Line  I  Addr  Code            Source

 2732+ 1			        putc    #10
 2733+ 2  09BE			??0246:
 2734+ 2			        ;jnb     SCON.1,putc_loop
 2735+ 2			        ;clr     SCON.1
 2736+ 2  09BE	75 99 0A	        mov     SBUF,#10
 2737:
 2738:
 2739:				        ;-- Test series I ------------------------------------------------------
 2740:				        ; ORL
 2741:				        ; (See comments for 'ALU opcode block test')
 2742:
 2743:				        putc    #'I'                ; start of test series
 2744+ 1  09C1			??0247:
 2745+ 1			        ;jnb     SCON.1,putc_loop
 2746+ 1			        ;clr     SCON.1
 2747+ 1  09C1	75 99 49	        mov     SBUF,#'I'
 2748:
 2749:				        tst_alu orl,051h,092h,0d3h,07h,
 2750+ 1			        ; Put the argument and result data into variables for easier access
 2751+ 1	N      0051	        arg0    set 051h
 2752+ 1	N      0092	        arg1    set 092h
 2753+ 1	N      00D3	        res     set 0d3h
 2754+ 1
 2755+ 1			        ; Test <op> A, dir
 2756+ 1			        top_ma  orl,dir0,??0249,<>
 2757+ 2  09C4	75 60 51	        mov     dir0,#arg0
 2758+ 2  09C7	74 92		        mov     a,#arg1
 2759+ 2			        ifnb    <>
 2760+ 2			        set_cy
 2761+ 2			        endif
 2762+ 2  09C9	45 60		        orl      a,dir0
 2763+ 2			        ifnb    <>
 2764+ 2			        save_psw
 2765+ 2			        endif
 2766+ 2  09CB	B4 D3 29	        cjne    a,#res,??0249
 2767+ 2			        ifnb    <>
 2768+ 2			        tst_psw <>,??0249
 2769+ 2			        endif
 2770+ 1			        ; Test <op> A, @R0
 2771+ 1  09CE	78 60		        mov     r0,#dir0
 2772+ 1			        top_ma  orl,@r0,??0249,<>
 2773+ 2  09D0	76 51		        mov     @r0,#arg0
 2774+ 2  09D2	74 92		        mov     a,#arg1
 2775+ 2			        ifnb    <>
 2776+ 2			        set_cy
 2777+ 2			        endif
 2778+ 2  09D4	46		        orl      a,@r0
 2779+ 2			        ifnb    <>
 2780+ 2			        save_psw
 2781+ 2			        endif
 2782+ 2  09D5	B4 D3 1F	        cjne    a,#res,??0249
 2783+ 2			        ifnb    <>
 2784+ 2			        tst_psw <>,??0249
 2785+ 2			        endif
 2786+ 1			        ; Test <op> A, @R1
 2787+ 1  09D8	79 31		        mov     r1,#031h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 51



 Line  I  Addr  Code            Source

 2788+ 1			        top_ma  orl,@r1,??0249,<>
 2789+ 2  09DA	77 51		        mov     @r1,#arg0
 2790+ 2  09DC	74 92		        mov     a,#arg1
 2791+ 2			        ifnb    <>
 2792+ 2			        set_cy
 2793+ 2			        endif
 2794+ 2  09DE	47		        orl      a,@r1
 2795+ 2			        ifnb    <>
 2796+ 2			        save_psw
 2797+ 2			        endif
 2798+ 2  09DF	B4 D3 15	        cjne    a,#res,??0249
 2799+ 2			        ifnb    <>
 2800+ 2			        tst_psw <>,??0249
 2801+ 2			        endif
 2802+ 1
 2803+ 1			        ; Now test <op> A, Rn for n in 0..7
 2804+ 1			        top_ma  orl,r0,??0249,<>
 2805+ 2  09E2	78 51		        mov     r0,#arg0
 2806+ 2  09E4	74 92		        mov     a,#arg1
 2807+ 2			        ifnb    <>
 2808+ 2			        set_cy
 2809+ 2			        endif
 2810+ 2  09E6	48		        orl      a,r0
 2811+ 2			        ifnb    <>
 2812+ 2			        save_psw
 2813+ 2			        endif
 2814+ 2  09E7	B4 D3 0D	        cjne    a,#res,??0249
 2815+ 2			        ifnb    <>
 2816+ 2			        tst_psw <>,??0249
 2817+ 2			        endif
 2818+ 1			        top_ma  orl,r1,??0249,<>
 2819+ 2  09EA	79 51		        mov     r1,#arg0
 2820+ 2  09EC	74 92		        mov     a,#arg1
 2821+ 2			        ifnb    <>
 2822+ 2			        set_cy
 2823+ 2			        endif
 2824+ 2  09EE	49		        orl      a,r1
 2825+ 2			        ifnb    <>
 2826+ 2			        save_psw
 2827+ 2			        endif
 2828+ 2  09EF	B4 D3 05	        cjne    a,#res,??0249
 2829+ 2			        ifnb    <>
 2830+ 2			        tst_psw <>,??0249
 2831+ 2			        endif
 2832+ 1
 2833+ 1			        eot     'a',??0249
 2834+ 2			        putc    #'a'
 2835+ 3  09F2			??0256:
 2836+ 3			        ;jnb     SCON.1,putc_loop
 2837+ 3			        ;clr     SCON.1
 2838+ 3  09F2	75 99 61	        mov     SBUF,#'a'
 2839+ 2  09F5	80 06		        sjmp    ??0255
 2840+ 2  09F7			??0249:  putc    #'?'
 2841+ 3  09F7			??0257:
 2842+ 3			        ;jnb     SCON.1,putc_loop
 2843+ 3			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 52



 Line  I  Addr  Code            Source

 2844+ 3  09F7	75 99 3F	        mov     SBUF,#'?'
 2845+ 2  09FA	75 6E 01	        mov     fail,#001h
 2846+ 2  09FD			??0255:
 2847+ 1
 2848+ 1			        top_ma  orl,r2,??0250,<>
 2849+ 2  09FD	7A 51		        mov     r2,#arg0
 2850+ 2  09FF	74 92		        mov     a,#arg1
 2851+ 2			        ifnb    <>
 2852+ 2			        set_cy
 2853+ 2			        endif
 2854+ 2  0A01	4A		        orl      a,r2
 2855+ 2			        ifnb    <>
 2856+ 2			        save_psw
 2857+ 2			        endif
 2858+ 2  0A02	B4 D3 0D	        cjne    a,#res,??0250
 2859+ 2			        ifnb    <>
 2860+ 2			        tst_psw <>,??0250
 2861+ 2			        endif
 2862+ 1			        top_ma  orl,r3,??0250,<>
 2863+ 2  0A05	7B 51		        mov     r3,#arg0
 2864+ 2  0A07	74 92		        mov     a,#arg1
 2865+ 2			        ifnb    <>
 2866+ 2			        set_cy
 2867+ 2			        endif
 2868+ 2  0A09	4B		        orl      a,r3
 2869+ 2			        ifnb    <>
 2870+ 2			        save_psw
 2871+ 2			        endif
 2872+ 2  0A0A	B4 D3 05	        cjne    a,#res,??0250
 2873+ 2			        ifnb    <>
 2874+ 2			        tst_psw <>,??0250
 2875+ 2			        endif
 2876+ 1
 2877+ 1			        eot     'b',??0250
 2878+ 2			        putc    #'b'
 2879+ 3  0A0D			??0259:
 2880+ 3			        ;jnb     SCON.1,putc_loop
 2881+ 3			        ;clr     SCON.1
 2882+ 3  0A0D	75 99 62	        mov     SBUF,#'b'
 2883+ 2  0A10	80 06		        sjmp    ??0258
 2884+ 2  0A12			??0250:  putc    #'?'
 2885+ 3  0A12			??0260:
 2886+ 3			        ;jnb     SCON.1,putc_loop
 2887+ 3			        ;clr     SCON.1
 2888+ 3  0A12	75 99 3F	        mov     SBUF,#'?'
 2889+ 2  0A15	75 6E 01	        mov     fail,#001h
 2890+ 2  0A18			??0258:
 2891+ 1
 2892+ 1			        top_ma  orl,r4,??0251,<>
 2893+ 2  0A18	7C 51		        mov     r4,#arg0
 2894+ 2  0A1A	74 92		        mov     a,#arg1
 2895+ 2			        ifnb    <>
 2896+ 2			        set_cy
 2897+ 2			        endif
 2898+ 2  0A1C	4C		        orl      a,r4
 2899+ 2			        ifnb    <>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 53



 Line  I  Addr  Code            Source

 2900+ 2			        save_psw
 2901+ 2			        endif
 2902+ 2  0A1D	B4 D3 0D	        cjne    a,#res,??0251
 2903+ 2			        ifnb    <>
 2904+ 2			        tst_psw <>,??0251
 2905+ 2			        endif
 2906+ 1			        top_ma  orl,r5,??0251,<>
 2907+ 2  0A20	7D 51		        mov     r5,#arg0
 2908+ 2  0A22	74 92		        mov     a,#arg1
 2909+ 2			        ifnb    <>
 2910+ 2			        set_cy
 2911+ 2			        endif
 2912+ 2  0A24	4D		        orl      a,r5
 2913+ 2			        ifnb    <>
 2914+ 2			        save_psw
 2915+ 2			        endif
 2916+ 2  0A25	B4 D3 05	        cjne    a,#res,??0251
 2917+ 2			        ifnb    <>
 2918+ 2			        tst_psw <>,??0251
 2919+ 2			        endif
 2920+ 1
 2921+ 1			        eot     'c',??0251
 2922+ 2			        putc    #'c'
 2923+ 3  0A28			??0262:
 2924+ 3			        ;jnb     SCON.1,putc_loop
 2925+ 3			        ;clr     SCON.1
 2926+ 3  0A28	75 99 63	        mov     SBUF,#'c'
 2927+ 2  0A2B	80 06		        sjmp    ??0261
 2928+ 2  0A2D			??0251:  putc    #'?'
 2929+ 3  0A2D			??0263:
 2930+ 3			        ;jnb     SCON.1,putc_loop
 2931+ 3			        ;clr     SCON.1
 2932+ 3  0A2D	75 99 3F	        mov     SBUF,#'?'
 2933+ 2  0A30	75 6E 01	        mov     fail,#001h
 2934+ 2  0A33			??0261:
 2935+ 1
 2936+ 1			        top_ma  orl,r6,??0248,<>
 2937+ 2  0A33	7E 51		        mov     r6,#arg0
 2938+ 2  0A35	74 92		        mov     a,#arg1
 2939+ 2			        ifnb    <>
 2940+ 2			        set_cy
 2941+ 2			        endif
 2942+ 2  0A37	4E		        orl      a,r6
 2943+ 2			        ifnb    <>
 2944+ 2			        save_psw
 2945+ 2			        endif
 2946+ 2  0A38	B4 D3 0D	        cjne    a,#res,??0248
 2947+ 2			        ifnb    <>
 2948+ 2			        tst_psw <>,??0248
 2949+ 2			        endif
 2950+ 1			        top_ma  orl,r7,??0248,<>
 2951+ 2  0A3B	7F 51		        mov     r7,#arg0
 2952+ 2  0A3D	74 92		        mov     a,#arg1
 2953+ 2			        ifnb    <>
 2954+ 2			        set_cy
 2955+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 54



 Line  I  Addr  Code            Source

 2956+ 2  0A3F	4F		        orl      a,r7
 2957+ 2			        ifnb    <>
 2958+ 2			        save_psw
 2959+ 2			        endif
 2960+ 2  0A40	B4 D3 05	        cjne    a,#res,??0248
 2961+ 2			        ifnb    <>
 2962+ 2			        tst_psw <>,??0248
 2963+ 2			        endif
 2964+ 1
 2965+ 1			        eot     'd',??0248
 2966+ 2			        putc    #'d'
 2967+ 3  0A43			??0265:
 2968+ 3			        ;jnb     SCON.1,putc_loop
 2969+ 3			        ;clr     SCON.1
 2970+ 3  0A43	75 99 64	        mov     SBUF,#'d'
 2971+ 2  0A46	80 06		        sjmp    ??0264
 2972+ 2  0A48			??0248:  putc    #'?'
 2973+ 3  0A48			??0266:
 2974+ 3			        ;jnb     SCON.1,putc_loop
 2975+ 3			        ;clr     SCON.1
 2976+ 3  0A48	75 99 3F	        mov     SBUF,#'?'
 2977+ 2  0A4B	75 6E 01	        mov     fail,#001h
 2978+ 2  0A4E			??0264:
 2979+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 2980+ 1
 2981+ 1			        ; Optionally test immediate addressing modes.
 2982+ 1
 2983+ 1	N      FFFF	        if      (07h and 1) ne 0
 2984+ 1			        ; Test <op> A, #arg1...
 2985+ 1			        top_mb  orl,a,??0252,<>
 2986+ 2  0A4E	74 92		        mov     a,#arg1
 2987+ 2			        ifnb    <>
 2988+ 2			        set_cy
 2989+ 2			        endif
 2990+ 2  0A50	44 51		        orl      a,#arg0
 2991+ 2			        ifnb    <>
 2992+ 2			        save_psw
 2993+ 2			        endif
 2994+ 2  0A52	F5 E0		        mov     ACC,a
 2995+ 2  0A54	B4 D3 05	        cjne    a,#res,??0252
 2996+ 2			        ifnb    <>
 2997+ 2			        tst_psw <>,??0252
 2998+ 2			        endif
 2999+ 1			        eot     'e',??0252
 3000+ 2			        putc    #'e'
 3001+ 3  0A57			??0268:
 3002+ 3			        ;jnb     SCON.1,putc_loop
 3003+ 3			        ;clr     SCON.1
 3004+ 3  0A57	75 99 65	        mov     SBUF,#'e'
 3005+ 2  0A5A	80 06		        sjmp    ??0267
 3006+ 2  0A5C			??0252:  putc    #'?'
 3007+ 3  0A5C			??0269:
 3008+ 3			        ;jnb     SCON.1,putc_loop
 3009+ 3			        ;clr     SCON.1
 3010+ 3  0A5C	75 99 3F	        mov     SBUF,#'?'
 3011+ 2  0A5F	75 6E 01	        mov     fail,#001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 55



 Line  I  Addr  Code            Source

 3012+ 2  0A62			??0267:
 3013+ 1			        endif
 3014+ 1
 3015+ 1	N      FFFF	        if      (07h and 2) ne 0
 3016+ 1			        ; ...and <op> dir, #arg1
 3017+ 1			        top_mb  orl,dir0,??0253,<>
 3018+ 2  0A62	75 60 92	        mov     dir0,#arg1
 3019+ 2			        ifnb    <>
 3020+ 2			        set_cy
 3021+ 2			        endif
 3022+ 2  0A65	43 60 51	        orl      dir0,#arg0
 3023+ 2			        ifnb    <>
 3024+ 2			        save_psw
 3025+ 2			        endif
 3026+ 2  0A68	85 60 E0	        mov     ACC,dir0
 3027+ 2  0A6B	B4 D3 05	        cjne    a,#res,??0253
 3028+ 2			        ifnb    <>
 3029+ 2			        tst_psw <>,??0253
 3030+ 2			        endif
 3031+ 1			        eot     'f',??0253
 3032+ 2			        putc    #'f'
 3033+ 3  0A6E			??0271:
 3034+ 3			        ;jnb     SCON.1,putc_loop
 3035+ 3			        ;clr     SCON.1
 3036+ 3  0A6E	75 99 66	        mov     SBUF,#'f'
 3037+ 2  0A71	80 06		        sjmp    ??0270
 3038+ 2  0A73			??0253:  putc    #'?'
 3039+ 3  0A73			??0272:
 3040+ 3			        ;jnb     SCON.1,putc_loop
 3041+ 3			        ;clr     SCON.1
 3042+ 3  0A73	75 99 3F	        mov     SBUF,#'?'
 3043+ 2  0A76	75 6E 01	        mov     fail,#001h
 3044+ 2  0A79			??0270:
 3045+ 1			        endif
 3046+ 1
 3047+ 1			        ; Optionally test <op> dir, A
 3048+ 1	N      FFFF	        if      (07h and 4) ne 0
 3049+ 1			        top_mc  orl,??0254,<>
 3050+ 2  0A79	75 60 51	        mov     dir0,#arg0
 3051+ 2  0A7C	74 92		        mov     a,#arg1
 3052+ 2			        ifnb    <>
 3053+ 2			        set_cy
 3054+ 2			        endif
 3055+ 2  0A7E	42 60		        orl      dir0,a
 3056+ 2			        ifnb    <>
 3057+ 2			        save_psw
 3058+ 2			        endif
 3059+ 2  0A80	E5 60		        mov     a,dir0
 3060+ 2  0A82	B4 D3 05	        cjne    a,#res,??0254
 3061+ 2			        ifnb    <>
 3062+ 2			        tst_psw <>,??0254
 3063+ 2			        endif
 3064+ 1			        eot     'g',??0254
 3065+ 2			        putc    #'g'
 3066+ 3  0A85			??0274:
 3067+ 3			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 56



 Line  I  Addr  Code            Source

 3068+ 3			        ;clr     SCON.1
 3069+ 3  0A85	75 99 67	        mov     SBUF,#'g'
 3070+ 2  0A88	80 06		        sjmp    ??0273
 3071+ 2  0A8A			??0254:  putc    #'?'
 3072+ 3  0A8A			??0275:
 3073+ 3			        ;jnb     SCON.1,putc_loop
 3074+ 3			        ;clr     SCON.1
 3075+ 3  0A8A	75 99 3F	        mov     SBUF,#'?'
 3076+ 2  0A8D	75 6E 01	        mov     fail,#001h
 3077+ 2  0A90			??0273:
 3078+ 1			        endif
 3079+ 1
 3080:
 3081:				        put_crlf                    ; end of test series
 3082+ 1			        putc    #13
 3083+ 2  0A90			??0276:
 3084+ 2			        ;jnb     SCON.1,putc_loop
 3085+ 2			        ;clr     SCON.1
 3086+ 2  0A90	75 99 0D	        mov     SBUF,#13
 3087+ 1			        putc    #10
 3088+ 2  0A93			??0277:
 3089+ 2			        ;jnb     SCON.1,putc_loop
 3090+ 2			        ;clr     SCON.1
 3091+ 2  0A93	75 99 0A	        mov     SBUF,#10
 3092:
 3093:				        ;-- Test series J ------------------------------------------------------
 3094:				        ; XRL
 3095:				        ; (See comments for 'ALU opcode block test')
 3096:
 3097:
 3098:				        putc    #'J'                ; start of test series
 3099+ 1  0A96			??0278:
 3100+ 1			        ;jnb     SCON.1,putc_loop
 3101+ 1			        ;clr     SCON.1
 3102+ 1  0A96	75 99 4A	        mov     SBUF,#'J'
 3103:
 3104:				        tst_alu xrl,051h,033h,062h,07h,
 3105+ 1			        ; Put the argument and result data into variables for easier access
 3106+ 1	N      0051	        arg0    set 051h
 3107+ 1	N      0033	        arg1    set 033h
 3108+ 1	N      0062	        res     set 062h
 3109+ 1
 3110+ 1			        ; Test <op> A, dir
 3111+ 1			        top_ma  xrl,dir0,??0280,<>
 3112+ 2  0A99	75 60 51	        mov     dir0,#arg0
 3113+ 2  0A9C	74 33		        mov     a,#arg1
 3114+ 2			        ifnb    <>
 3115+ 2			        set_cy
 3116+ 2			        endif
 3117+ 2  0A9E	65 60		        xrl      a,dir0
 3118+ 2			        ifnb    <>
 3119+ 2			        save_psw
 3120+ 2			        endif
 3121+ 2  0AA0	B4 62 29	        cjne    a,#res,??0280
 3122+ 2			        ifnb    <>
 3123+ 2			        tst_psw <>,??0280

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 57



 Line  I  Addr  Code            Source

 3124+ 2			        endif
 3125+ 1			        ; Test <op> A, @R0
 3126+ 1  0AA3	78 60		        mov     r0,#dir0
 3127+ 1			        top_ma  xrl,@r0,??0280,<>
 3128+ 2  0AA5	76 51		        mov     @r0,#arg0
 3129+ 2  0AA7	74 33		        mov     a,#arg1
 3130+ 2			        ifnb    <>
 3131+ 2			        set_cy
 3132+ 2			        endif
 3133+ 2  0AA9	66		        xrl      a,@r0
 3134+ 2			        ifnb    <>
 3135+ 2			        save_psw
 3136+ 2			        endif
 3137+ 2  0AAA	B4 62 1F	        cjne    a,#res,??0280
 3138+ 2			        ifnb    <>
 3139+ 2			        tst_psw <>,??0280
 3140+ 2			        endif
 3141+ 1			        ; Test <op> A, @R1
 3142+ 1  0AAD	79 31		        mov     r1,#031h
 3143+ 1			        top_ma  xrl,@r1,??0280,<>
 3144+ 2  0AAF	77 51		        mov     @r1,#arg0
 3145+ 2  0AB1	74 33		        mov     a,#arg1
 3146+ 2			        ifnb    <>
 3147+ 2			        set_cy
 3148+ 2			        endif
 3149+ 2  0AB3	67		        xrl      a,@r1
 3150+ 2			        ifnb    <>
 3151+ 2			        save_psw
 3152+ 2			        endif
 3153+ 2  0AB4	B4 62 15	        cjne    a,#res,??0280
 3154+ 2			        ifnb    <>
 3155+ 2			        tst_psw <>,??0280
 3156+ 2			        endif
 3157+ 1
 3158+ 1			        ; Now test <op> A, Rn for n in 0..7
 3159+ 1			        top_ma  xrl,r0,??0280,<>
 3160+ 2  0AB7	78 51		        mov     r0,#arg0
 3161+ 2  0AB9	74 33		        mov     a,#arg1
 3162+ 2			        ifnb    <>
 3163+ 2			        set_cy
 3164+ 2			        endif
 3165+ 2  0ABB	68		        xrl      a,r0
 3166+ 2			        ifnb    <>
 3167+ 2			        save_psw
 3168+ 2			        endif
 3169+ 2  0ABC	B4 62 0D	        cjne    a,#res,??0280
 3170+ 2			        ifnb    <>
 3171+ 2			        tst_psw <>,??0280
 3172+ 2			        endif
 3173+ 1			        top_ma  xrl,r1,??0280,<>
 3174+ 2  0ABF	79 51		        mov     r1,#arg0
 3175+ 2  0AC1	74 33		        mov     a,#arg1
 3176+ 2			        ifnb    <>
 3177+ 2			        set_cy
 3178+ 2			        endif
 3179+ 2  0AC3	69		        xrl      a,r1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 58



 Line  I  Addr  Code            Source

 3180+ 2			        ifnb    <>
 3181+ 2			        save_psw
 3182+ 2			        endif
 3183+ 2  0AC4	B4 62 05	        cjne    a,#res,??0280
 3184+ 2			        ifnb    <>
 3185+ 2			        tst_psw <>,??0280
 3186+ 2			        endif
 3187+ 1
 3188+ 1			        eot     'a',??0280
 3189+ 2			        putc    #'a'
 3190+ 3  0AC7			??0287:
 3191+ 3			        ;jnb     SCON.1,putc_loop
 3192+ 3			        ;clr     SCON.1
 3193+ 3  0AC7	75 99 61	        mov     SBUF,#'a'
 3194+ 2  0ACA	80 06		        sjmp    ??0286
 3195+ 2  0ACC			??0280:  putc    #'?'
 3196+ 3  0ACC			??0288:
 3197+ 3			        ;jnb     SCON.1,putc_loop
 3198+ 3			        ;clr     SCON.1
 3199+ 3  0ACC	75 99 3F	        mov     SBUF,#'?'
 3200+ 2  0ACF	75 6E 01	        mov     fail,#001h
 3201+ 2  0AD2			??0286:
 3202+ 1
 3203+ 1			        top_ma  xrl,r2,??0281,<>
 3204+ 2  0AD2	7A 51		        mov     r2,#arg0
 3205+ 2  0AD4	74 33		        mov     a,#arg1
 3206+ 2			        ifnb    <>
 3207+ 2			        set_cy
 3208+ 2			        endif
 3209+ 2  0AD6	6A		        xrl      a,r2
 3210+ 2			        ifnb    <>
 3211+ 2			        save_psw
 3212+ 2			        endif
 3213+ 2  0AD7	B4 62 0D	        cjne    a,#res,??0281
 3214+ 2			        ifnb    <>
 3215+ 2			        tst_psw <>,??0281
 3216+ 2			        endif
 3217+ 1			        top_ma  xrl,r3,??0281,<>
 3218+ 2  0ADA	7B 51		        mov     r3,#arg0
 3219+ 2  0ADC	74 33		        mov     a,#arg1
 3220+ 2			        ifnb    <>
 3221+ 2			        set_cy
 3222+ 2			        endif
 3223+ 2  0ADE	6B		        xrl      a,r3
 3224+ 2			        ifnb    <>
 3225+ 2			        save_psw
 3226+ 2			        endif
 3227+ 2  0ADF	B4 62 05	        cjne    a,#res,??0281
 3228+ 2			        ifnb    <>
 3229+ 2			        tst_psw <>,??0281
 3230+ 2			        endif
 3231+ 1
 3232+ 1			        eot     'b',??0281
 3233+ 2			        putc    #'b'
 3234+ 3  0AE2			??0290:
 3235+ 3			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 59



 Line  I  Addr  Code            Source

 3236+ 3			        ;clr     SCON.1
 3237+ 3  0AE2	75 99 62	        mov     SBUF,#'b'
 3238+ 2  0AE5	80 06		        sjmp    ??0289
 3239+ 2  0AE7			??0281:  putc    #'?'
 3240+ 3  0AE7			??0291:
 3241+ 3			        ;jnb     SCON.1,putc_loop
 3242+ 3			        ;clr     SCON.1
 3243+ 3  0AE7	75 99 3F	        mov     SBUF,#'?'
 3244+ 2  0AEA	75 6E 01	        mov     fail,#001h
 3245+ 2  0AED			??0289:
 3246+ 1
 3247+ 1			        top_ma  xrl,r4,??0282,<>
 3248+ 2  0AED	7C 51		        mov     r4,#arg0
 3249+ 2  0AEF	74 33		        mov     a,#arg1
 3250+ 2			        ifnb    <>
 3251+ 2			        set_cy
 3252+ 2			        endif
 3253+ 2  0AF1	6C		        xrl      a,r4
 3254+ 2			        ifnb    <>
 3255+ 2			        save_psw
 3256+ 2			        endif
 3257+ 2  0AF2	B4 62 0D	        cjne    a,#res,??0282
 3258+ 2			        ifnb    <>
 3259+ 2			        tst_psw <>,??0282
 3260+ 2			        endif
 3261+ 1			        top_ma  xrl,r5,??0282,<>
 3262+ 2  0AF5	7D 51		        mov     r5,#arg0
 3263+ 2  0AF7	74 33		        mov     a,#arg1
 3264+ 2			        ifnb    <>
 3265+ 2			        set_cy
 3266+ 2			        endif
 3267+ 2  0AF9	6D		        xrl      a,r5
 3268+ 2			        ifnb    <>
 3269+ 2			        save_psw
 3270+ 2			        endif
 3271+ 2  0AFA	B4 62 05	        cjne    a,#res,??0282
 3272+ 2			        ifnb    <>
 3273+ 2			        tst_psw <>,??0282
 3274+ 2			        endif
 3275+ 1
 3276+ 1			        eot     'c',??0282
 3277+ 2			        putc    #'c'
 3278+ 3  0AFD			??0293:
 3279+ 3			        ;jnb     SCON.1,putc_loop
 3280+ 3			        ;clr     SCON.1
 3281+ 3  0AFD	75 99 63	        mov     SBUF,#'c'
 3282+ 2  0B00	80 06		        sjmp    ??0292
 3283+ 2  0B02			??0282:  putc    #'?'
 3284+ 3  0B02			??0294:
 3285+ 3			        ;jnb     SCON.1,putc_loop
 3286+ 3			        ;clr     SCON.1
 3287+ 3  0B02	75 99 3F	        mov     SBUF,#'?'
 3288+ 2  0B05	75 6E 01	        mov     fail,#001h
 3289+ 2  0B08			??0292:
 3290+ 1
 3291+ 1			        top_ma  xrl,r6,??0279,<>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 60



 Line  I  Addr  Code            Source

 3292+ 2  0B08	7E 51		        mov     r6,#arg0
 3293+ 2  0B0A	74 33		        mov     a,#arg1
 3294+ 2			        ifnb    <>
 3295+ 2			        set_cy
 3296+ 2			        endif
 3297+ 2  0B0C	6E		        xrl      a,r6
 3298+ 2			        ifnb    <>
 3299+ 2			        save_psw
 3300+ 2			        endif
 3301+ 2  0B0D	B4 62 0D	        cjne    a,#res,??0279
 3302+ 2			        ifnb    <>
 3303+ 2			        tst_psw <>,??0279
 3304+ 2			        endif
 3305+ 1			        top_ma  xrl,r7,??0279,<>
 3306+ 2  0B10	7F 51		        mov     r7,#arg0
 3307+ 2  0B12	74 33		        mov     a,#arg1
 3308+ 2			        ifnb    <>
 3309+ 2			        set_cy
 3310+ 2			        endif
 3311+ 2  0B14	6F		        xrl      a,r7
 3312+ 2			        ifnb    <>
 3313+ 2			        save_psw
 3314+ 2			        endif
 3315+ 2  0B15	B4 62 05	        cjne    a,#res,??0279
 3316+ 2			        ifnb    <>
 3317+ 2			        tst_psw <>,??0279
 3318+ 2			        endif
 3319+ 1
 3320+ 1			        eot     'd',??0279
 3321+ 2			        putc    #'d'
 3322+ 3  0B18			??0296:
 3323+ 3			        ;jnb     SCON.1,putc_loop
 3324+ 3			        ;clr     SCON.1
 3325+ 3  0B18	75 99 64	        mov     SBUF,#'d'
 3326+ 2  0B1B	80 06		        sjmp    ??0295
 3327+ 2  0B1D			??0279:  putc    #'?'
 3328+ 3  0B1D			??0297:
 3329+ 3			        ;jnb     SCON.1,putc_loop
 3330+ 3			        ;clr     SCON.1
 3331+ 3  0B1D	75 99 3F	        mov     SBUF,#'?'
 3332+ 2  0B20	75 6E 01	        mov     fail,#001h
 3333+ 2  0B23			??0295:
 3334+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 3335+ 1
 3336+ 1			        ; Optionally test immediate addressing modes.
 3337+ 1
 3338+ 1	N      FFFF	        if      (07h and 1) ne 0
 3339+ 1			        ; Test <op> A, #arg1...
 3340+ 1			        top_mb  xrl,a,??0283,<>
 3341+ 2  0B23	74 33		        mov     a,#arg1
 3342+ 2			        ifnb    <>
 3343+ 2			        set_cy
 3344+ 2			        endif
 3345+ 2  0B25	64 51		        xrl      a,#arg0
 3346+ 2			        ifnb    <>
 3347+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 61



 Line  I  Addr  Code            Source

 3348+ 2			        endif
 3349+ 2  0B27	F5 E0		        mov     ACC,a
 3350+ 2  0B29	B4 62 05	        cjne    a,#res,??0283
 3351+ 2			        ifnb    <>
 3352+ 2			        tst_psw <>,??0283
 3353+ 2			        endif
 3354+ 1			        eot     'e',??0283
 3355+ 2			        putc    #'e'
 3356+ 3  0B2C			??0299:
 3357+ 3			        ;jnb     SCON.1,putc_loop
 3358+ 3			        ;clr     SCON.1
 3359+ 3  0B2C	75 99 65	        mov     SBUF,#'e'
 3360+ 2  0B2F	80 06		        sjmp    ??0298
 3361+ 2  0B31			??0283:  putc    #'?'
 3362+ 3  0B31			??0300:
 3363+ 3			        ;jnb     SCON.1,putc_loop
 3364+ 3			        ;clr     SCON.1
 3365+ 3  0B31	75 99 3F	        mov     SBUF,#'?'
 3366+ 2  0B34	75 6E 01	        mov     fail,#001h
 3367+ 2  0B37			??0298:
 3368+ 1			        endif
 3369+ 1
 3370+ 1	N      FFFF	        if      (07h and 2) ne 0
 3371+ 1			        ; ...and <op> dir, #arg1
 3372+ 1			        top_mb  xrl,dir0,??0284,<>
 3373+ 2  0B37	75 60 33	        mov     dir0,#arg1
 3374+ 2			        ifnb    <>
 3375+ 2			        set_cy
 3376+ 2			        endif
 3377+ 2  0B3A	63 60 51	        xrl      dir0,#arg0
 3378+ 2			        ifnb    <>
 3379+ 2			        save_psw
 3380+ 2			        endif
 3381+ 2  0B3D	85 60 E0	        mov     ACC,dir0
 3382+ 2  0B40	B4 62 05	        cjne    a,#res,??0284
 3383+ 2			        ifnb    <>
 3384+ 2			        tst_psw <>,??0284
 3385+ 2			        endif
 3386+ 1			        eot     'f',??0284
 3387+ 2			        putc    #'f'
 3388+ 3  0B43			??0302:
 3389+ 3			        ;jnb     SCON.1,putc_loop
 3390+ 3			        ;clr     SCON.1
 3391+ 3  0B43	75 99 66	        mov     SBUF,#'f'
 3392+ 2  0B46	80 06		        sjmp    ??0301
 3393+ 2  0B48			??0284:  putc    #'?'
 3394+ 3  0B48			??0303:
 3395+ 3			        ;jnb     SCON.1,putc_loop
 3396+ 3			        ;clr     SCON.1
 3397+ 3  0B48	75 99 3F	        mov     SBUF,#'?'
 3398+ 2  0B4B	75 6E 01	        mov     fail,#001h
 3399+ 2  0B4E			??0301:
 3400+ 1			        endif
 3401+ 1
 3402+ 1			        ; Optionally test <op> dir, A
 3403+ 1	N      FFFF	        if      (07h and 4) ne 0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 62



 Line  I  Addr  Code            Source

 3404+ 1			        top_mc  xrl,??0285,<>
 3405+ 2  0B4E	75 60 51	        mov     dir0,#arg0
 3406+ 2  0B51	74 33		        mov     a,#arg1
 3407+ 2			        ifnb    <>
 3408+ 2			        set_cy
 3409+ 2			        endif
 3410+ 2  0B53	62 60		        xrl      dir0,a
 3411+ 2			        ifnb    <>
 3412+ 2			        save_psw
 3413+ 2			        endif
 3414+ 2  0B55	E5 60		        mov     a,dir0
 3415+ 2  0B57	B4 62 05	        cjne    a,#res,??0285
 3416+ 2			        ifnb    <>
 3417+ 2			        tst_psw <>,??0285
 3418+ 2			        endif
 3419+ 1			        eot     'g',??0285
 3420+ 2			        putc    #'g'
 3421+ 3  0B5A			??0305:
 3422+ 3			        ;jnb     SCON.1,putc_loop
 3423+ 3			        ;clr     SCON.1
 3424+ 3  0B5A	75 99 67	        mov     SBUF,#'g'
 3425+ 2  0B5D	80 06		        sjmp    ??0304
 3426+ 2  0B5F			??0285:  putc    #'?'
 3427+ 3  0B5F			??0306:
 3428+ 3			        ;jnb     SCON.1,putc_loop
 3429+ 3			        ;clr     SCON.1
 3430+ 3  0B5F	75 99 3F	        mov     SBUF,#'?'
 3431+ 2  0B62	75 6E 01	        mov     fail,#001h
 3432+ 2  0B65			??0304:
 3433+ 1			        endif
 3434+ 1
 3435:
 3436:				        put_crlf                    ; end of test series
 3437+ 1			        putc    #13
 3438+ 2  0B65			??0307:
 3439+ 2			        ;jnb     SCON.1,putc_loop
 3440+ 2			        ;clr     SCON.1
 3441+ 2  0B65	75 99 0D	        mov     SBUF,#13
 3442+ 1			        putc    #10
 3443+ 2  0B68			??0308:
 3444+ 2			        ;jnb     SCON.1,putc_loop
 3445+ 2			        ;clr     SCON.1
 3446+ 2  0B68	75 99 0A	        mov     SBUF,#10
 3447:
 3448:				        ;-- Test series K ------------------------------------------------------
 3449:				        ; DJNZ
 3450:				        ; a.- <DJNZ dir,rel>, <DJNZ Rn,rel> tested only with small negative rels
 3451:
 3452:				        putc    #'K'                ; start of test series
 3453+ 1  0B6B			??0309:
 3454+ 1			        ;jnb     SCON.1,putc_loop
 3455+ 1			        ;clr     SCON.1
 3456+ 1  0B6B	75 99 4B	        mov     SBUF,#'K'
 3457:
 3458:				        ;tk_ma: test DJNZ with parametrizable addressing mode
 3459:				tk_ma   macro   dst,error_loc

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 63



 Line  I  Addr  Code            Source

 3460:				        local   tk_ma0
 3461:				nloops  set     3
 3462:				        mov     dst,#nloops         ; We'll perform a fixed no. of iterations
 3463:				        mov     a,#(nloops+1)       ; A will or our control counter
 3464:				tk_ma0: dec     a
 3465:				        jz      error_loc           ; Break loop after nloops iterations
 3466:				        djnz    dst,tk_ma0          ; Test DJNZ instruction
 3467:				        cjne    a,#001,error_loc    ; Verify number of iterations is ok
 3468:				        endm
 3469:
 3470:				        tk_ma   dir0,tk_a0          ; <DJNZ dir,rel>
 3471+ 1	N      0003	nloops  set     3
 3472+ 1  0B6E	75 60 03	        mov     dir0,#nloops         ; We'll perform a fixed no. of iterations
 3473+ 1  0B71	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3474+ 1  0B73	14		??0310: dec     a
 3475+ 1  0B74	60 0B		        jz      tk_a0           ; Break loop after nloops iterations
 3476+ 1  0B76	D5 60 FA	        djnz    dir0,??0310          ; Test DJNZ instruction
 3477+ 1  0B79	B4 01 05	        cjne    a,#001,tk_a0    ; Verify number of iterations is ok
 3478:
 3479:				        eot     'a',tk_a0
 3480+ 1			        putc    #'a'
 3481+ 2  0B7C			??0312:
 3482+ 2			        ;jnb     SCON.1,putc_loop
 3483+ 2			        ;clr     SCON.1
 3484+ 2  0B7C	75 99 61	        mov     SBUF,#'a'
 3485+ 1  0B7F	80 06		        sjmp    ??0311
 3486+ 1  0B81			tk_a0:  putc    #'?'
 3487+ 2  0B81			??0313:
 3488+ 2			        ;jnb     SCON.1,putc_loop
 3489+ 2			        ;clr     SCON.1
 3490+ 2  0B81	75 99 3F	        mov     SBUF,#'?'
 3491+ 1  0B84	75 6E 01	        mov     fail,#001h
 3492+ 1  0B87			??0311:
 3493:
 3494:				        tk_ma   r0,tk_b0            ; <DJNZ Rn,rel>
 3495+ 1	N      0003	nloops  set     3
 3496+ 1  0B87	78 03		        mov     r0,#nloops         ; We'll perform a fixed no. of iterations
 3497+ 1  0B89	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3498+ 1  0B8B	14		??0314: dec     a
 3499+ 1  0B8C	60 5E		        jz      tk_b0           ; Break loop after nloops iterations
 3500+ 1  0B8E	D8 FB		        djnz    r0,??0314          ; Test DJNZ instruction
 3501+ 1  0B90	B4 01 59	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3502:				        tk_ma   r1,tk_b0
 3503+ 1	N      0003	nloops  set     3
 3504+ 1  0B93	79 03		        mov     r1,#nloops         ; We'll perform a fixed no. of iterations
 3505+ 1  0B95	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3506+ 1  0B97	14		??0315: dec     a
 3507+ 1  0B98	60 52		        jz      tk_b0           ; Break loop after nloops iterations
 3508+ 1  0B9A	D9 FB		        djnz    r1,??0315          ; Test DJNZ instruction
 3509+ 1  0B9C	B4 01 4D	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3510:				        tk_ma   r2,tk_b0
 3511+ 1	N      0003	nloops  set     3
 3512+ 1  0B9F	7A 03		        mov     r2,#nloops         ; We'll perform a fixed no. of iterations
 3513+ 1  0BA1	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3514+ 1  0BA3	14		??0316: dec     a
 3515+ 1  0BA4	60 46		        jz      tk_b0           ; Break loop after nloops iterations

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 64



 Line  I  Addr  Code            Source

 3516+ 1  0BA6	DA FB		        djnz    r2,??0316          ; Test DJNZ instruction
 3517+ 1  0BA8	B4 01 41	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3518:				        tk_ma   r3,tk_b0
 3519+ 1	N      0003	nloops  set     3
 3520+ 1  0BAB	7B 03		        mov     r3,#nloops         ; We'll perform a fixed no. of iterations
 3521+ 1  0BAD	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3522+ 1  0BAF	14		??0317: dec     a
 3523+ 1  0BB0	60 3A		        jz      tk_b0           ; Break loop after nloops iterations
 3524+ 1  0BB2	DB FB		        djnz    r3,??0317          ; Test DJNZ instruction
 3525+ 1  0BB4	B4 01 35	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3526:				        tk_ma   r4,tk_b0
 3527+ 1	N      0003	nloops  set     3
 3528+ 1  0BB7	7C 03		        mov     r4,#nloops         ; We'll perform a fixed no. of iterations
 3529+ 1  0BB9	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3530+ 1  0BBB	14		??0318: dec     a
 3531+ 1  0BBC	60 2E		        jz      tk_b0           ; Break loop after nloops iterations
 3532+ 1  0BBE	DC FB		        djnz    r4,??0318          ; Test DJNZ instruction
 3533+ 1  0BC0	B4 01 29	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3534:				        tk_ma   r5,tk_b0
 3535+ 1	N      0003	nloops  set     3
 3536+ 1  0BC3	7D 03		        mov     r5,#nloops         ; We'll perform a fixed no. of iterations
 3537+ 1  0BC5	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3538+ 1  0BC7	14		??0319: dec     a
 3539+ 1  0BC8	60 22		        jz      tk_b0           ; Break loop after nloops iterations
 3540+ 1  0BCA	DD FB		        djnz    r5,??0319          ; Test DJNZ instruction
 3541+ 1  0BCC	B4 01 1D	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3542:				        tk_ma   r6,tk_b0
 3543+ 1	N      0003	nloops  set     3
 3544+ 1  0BCF	7E 03		        mov     r6,#nloops         ; We'll perform a fixed no. of iterations
 3545+ 1  0BD1	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3546+ 1  0BD3	14		??0320: dec     a
 3547+ 1  0BD4	60 16		        jz      tk_b0           ; Break loop after nloops iterations
 3548+ 1  0BD6	DE FB		        djnz    r6,??0320          ; Test DJNZ instruction
 3549+ 1  0BD8	B4 01 11	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3550:				        tk_ma   r7,tk_b0
 3551+ 1	N      0003	nloops  set     3
 3552+ 1  0BDB	7F 03		        mov     r7,#nloops         ; We'll perform a fixed no. of iterations
 3553+ 1  0BDD	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3554+ 1  0BDF	14		??0321: dec     a
 3555+ 1  0BE0	60 0A		        jz      tk_b0           ; Break loop after nloops iterations
 3556+ 1  0BE2	DF FB		        djnz    r7,??0321          ; Test DJNZ instruction
 3557+ 1  0BE4	B4 01 05	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3558:
 3559:				        eot     'b',tk_b0
 3560+ 1			        putc    #'b'
 3561+ 2  0BE7			??0323:
 3562+ 2			        ;jnb     SCON.1,putc_loop
 3563+ 2			        ;clr     SCON.1
 3564+ 2  0BE7	75 99 62	        mov     SBUF,#'b'
 3565+ 1  0BEA	80 06		        sjmp    ??0322
 3566+ 1  0BEC			tk_b0:  putc    #'?'
 3567+ 2  0BEC			??0324:
 3568+ 2			        ;jnb     SCON.1,putc_loop
 3569+ 2			        ;clr     SCON.1
 3570+ 2  0BEC	75 99 3F	        mov     SBUF,#'?'
 3571+ 1  0BEF	75 6E 01	        mov     fail,#001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 65



 Line  I  Addr  Code            Source

 3572+ 1  0BF2			??0322:
 3573:
 3574:				        put_crlf                    ; end of test series
 3575+ 1			        putc    #13
 3576+ 2  0BF2			??0325:
 3577+ 2			        ;jnb     SCON.1,putc_loop
 3578+ 2			        ;clr     SCON.1
 3579+ 2  0BF2	75 99 0D	        mov     SBUF,#13
 3580+ 1			        putc    #10
 3581+ 2  0BF5			??0326:
 3582+ 2			        ;jnb     SCON.1,putc_loop
 3583+ 2			        ;clr     SCON.1
 3584+ 2  0BF5	75 99 0A	        mov     SBUF,#10
 3585:
 3586:
 3587:				        ;-- Test series L ------------------------------------------------------
 3588:				        ; ADD
 3589:				        ; (See comments for 'ALU opcode block test')
 3590:
 3591:
 3592:				        putc    #'L'                ; start of test series
 3593+ 1  0BF8			??0327:
 3594+ 1			        ;jnb     SCON.1,putc_loop
 3595+ 1			        ;clr     SCON.1
 3596+ 1  0BF8	75 99 4C	        mov     SBUF,#'L'
 3597:
 3598:				        putc    #'0'
 3599+ 1  0BFB			??0328:
 3600+ 1			        ;jnb     SCON.1,putc_loop
 3601+ 1			        ;clr     SCON.1
 3602+ 1  0BFB	75 99 30	        mov     SBUF,#'0'
 3603:				        tst_alu add,051h,033h,084h,01h,004h     ; /CY /AC  OV
 3604+ 1			        ; Put the argument and result data into variables for easier access
 3605+ 1	N      0051	        arg0    set 051h
 3606+ 1	N      0033	        arg1    set 033h
 3607+ 1	N      0084	        res     set 084h
 3608+ 1
 3609+ 1			        ; Test <op> A, dir
 3610+ 1			        top_ma  add,dir0,??0330,<004h>
 3611+ 2  0BFE	75 60 51	        mov     dir0,#arg0
 3612+ 2  0C01	74 33		        mov     a,#arg1
 3613+ 2			        ifnb    <004h>
 3614+ 2			        set_cy  004h
 3615+ 3	N      0000	??0336  set     (004h and 1)
 3616+ 3	N      0000	        if      ??0336 eq 1
 3617+ 3			        setb    c
 3618+ 3			        else
 3619+ 3  0C03	C3		        clr     c
 3620+ 3			        endif
 3621+ 2			        endif
 3622+ 2  0C04	25 60		        add      a,dir0
 3623+ 2			        ifnb    <004h>
 3624+ 2			        save_psw
 3625+ 3  0C06	85 D0 70	        mov     saved_psw,PSW
 3626+ 2			        endif
 3627+ 2  0C09	B4 84 6B	        cjne    a,#res,??0330

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 66



 Line  I  Addr  Code            Source

 3628+ 2			        ifnb    <004h>
 3629+ 2			        tst_psw <004h>,??0330
 3630+ 3  0C0C	E5 70		        mov     a,saved_psw
 3631+ 3  0C0E	54 C4		        anl     a,#0c4h
 3632+ 3  0C10	64 04		        xrl     a,#004h
 3633+ 3  0C12	54 FE		        anl     a,#0feh
 3634+ 3  0C14	70 61		        jnz     ??0330
 3635+ 2			        endif
 3636+ 1			        ; Test <op> A, @R0
 3637+ 1  0C16	78 60		        mov     r0,#dir0
 3638+ 1			        top_ma  add,@r0,??0330,<004h>
 3639+ 2  0C18	76 51		        mov     @r0,#arg0
 3640+ 2  0C1A	74 33		        mov     a,#arg1
 3641+ 2			        ifnb    <004h>
 3642+ 2			        set_cy  004h
 3643+ 3	N      0000	??0337  set     (004h and 1)
 3644+ 3	N      0000	        if      ??0337 eq 1
 3645+ 3			        setb    c
 3646+ 3			        else
 3647+ 3  0C1C	C3		        clr     c
 3648+ 3			        endif
 3649+ 2			        endif
 3650+ 2  0C1D	26		        add      a,@r0
 3651+ 2			        ifnb    <004h>
 3652+ 2			        save_psw
 3653+ 3  0C1E	85 D0 70	        mov     saved_psw,PSW
 3654+ 2			        endif
 3655+ 2  0C21	B4 84 53	        cjne    a,#res,??0330
 3656+ 2			        ifnb    <004h>
 3657+ 2			        tst_psw <004h>,??0330
 3658+ 3  0C24	E5 70		        mov     a,saved_psw
 3659+ 3  0C26	54 C4		        anl     a,#0c4h
 3660+ 3  0C28	64 04		        xrl     a,#004h
 3661+ 3  0C2A	54 FE		        anl     a,#0feh
 3662+ 3  0C2C	70 49		        jnz     ??0330
 3663+ 2			        endif
 3664+ 1			        ; Test <op> A, @R1
 3665+ 1  0C2E	79 31		        mov     r1,#031h
 3666+ 1			        top_ma  add,@r1,??0330,<004h>
 3667+ 2  0C30	77 51		        mov     @r1,#arg0
 3668+ 2  0C32	74 33		        mov     a,#arg1
 3669+ 2			        ifnb    <004h>
 3670+ 2			        set_cy  004h
 3671+ 3	N      0000	??0338  set     (004h and 1)
 3672+ 3	N      0000	        if      ??0338 eq 1
 3673+ 3			        setb    c
 3674+ 3			        else
 3675+ 3  0C34	C3		        clr     c
 3676+ 3			        endif
 3677+ 2			        endif
 3678+ 2  0C35	27		        add      a,@r1
 3679+ 2			        ifnb    <004h>
 3680+ 2			        save_psw
 3681+ 3  0C36	85 D0 70	        mov     saved_psw,PSW
 3682+ 2			        endif
 3683+ 2  0C39	B4 84 3B	        cjne    a,#res,??0330

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 67



 Line  I  Addr  Code            Source

 3684+ 2			        ifnb    <004h>
 3685+ 2			        tst_psw <004h>,??0330
 3686+ 3  0C3C	E5 70		        mov     a,saved_psw
 3687+ 3  0C3E	54 C4		        anl     a,#0c4h
 3688+ 3  0C40	64 04		        xrl     a,#004h
 3689+ 3  0C42	54 FE		        anl     a,#0feh
 3690+ 3  0C44	70 31		        jnz     ??0330
 3691+ 2			        endif
 3692+ 1
 3693+ 1			        ; Now test <op> A, Rn for n in 0..7
 3694+ 1			        top_ma  add,r0,??0330,<004h>
 3695+ 2  0C46	78 51		        mov     r0,#arg0
 3696+ 2  0C48	74 33		        mov     a,#arg1
 3697+ 2			        ifnb    <004h>
 3698+ 2			        set_cy  004h
 3699+ 3	N      0000	??0339  set     (004h and 1)
 3700+ 3	N      0000	        if      ??0339 eq 1
 3701+ 3			        setb    c
 3702+ 3			        else
 3703+ 3  0C4A	C3		        clr     c
 3704+ 3			        endif
 3705+ 2			        endif
 3706+ 2  0C4B	28		        add      a,r0
 3707+ 2			        ifnb    <004h>
 3708+ 2			        save_psw
 3709+ 3  0C4C	85 D0 70	        mov     saved_psw,PSW
 3710+ 2			        endif
 3711+ 2  0C4F	B4 84 25	        cjne    a,#res,??0330
 3712+ 2			        ifnb    <004h>
 3713+ 2			        tst_psw <004h>,??0330
 3714+ 3  0C52	E5 70		        mov     a,saved_psw
 3715+ 3  0C54	54 C4		        anl     a,#0c4h
 3716+ 3  0C56	64 04		        xrl     a,#004h
 3717+ 3  0C58	54 FE		        anl     a,#0feh
 3718+ 3  0C5A	70 1B		        jnz     ??0330
 3719+ 2			        endif
 3720+ 1			        top_ma  add,r1,??0330,<004h>
 3721+ 2  0C5C	79 51		        mov     r1,#arg0
 3722+ 2  0C5E	74 33		        mov     a,#arg1
 3723+ 2			        ifnb    <004h>
 3724+ 2			        set_cy  004h
 3725+ 3	N      0000	??0340  set     (004h and 1)
 3726+ 3	N      0000	        if      ??0340 eq 1
 3727+ 3			        setb    c
 3728+ 3			        else
 3729+ 3  0C60	C3		        clr     c
 3730+ 3			        endif
 3731+ 2			        endif
 3732+ 2  0C61	29		        add      a,r1
 3733+ 2			        ifnb    <004h>
 3734+ 2			        save_psw
 3735+ 3  0C62	85 D0 70	        mov     saved_psw,PSW
 3736+ 2			        endif
 3737+ 2  0C65	B4 84 0F	        cjne    a,#res,??0330
 3738+ 2			        ifnb    <004h>
 3739+ 2			        tst_psw <004h>,??0330

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 68



 Line  I  Addr  Code            Source

 3740+ 3  0C68	E5 70		        mov     a,saved_psw
 3741+ 3  0C6A	54 C4		        anl     a,#0c4h
 3742+ 3  0C6C	64 04		        xrl     a,#004h
 3743+ 3  0C6E	54 FE		        anl     a,#0feh
 3744+ 3  0C70	70 05		        jnz     ??0330
 3745+ 2			        endif
 3746+ 1
 3747+ 1			        eot     'a',??0330
 3748+ 2			        putc    #'a'
 3749+ 3  0C72			??0342:
 3750+ 3			        ;jnb     SCON.1,putc_loop
 3751+ 3			        ;clr     SCON.1
 3752+ 3  0C72	75 99 61	        mov     SBUF,#'a'
 3753+ 2  0C75	80 06		        sjmp    ??0341
 3754+ 2  0C77			??0330:  putc    #'?'
 3755+ 3  0C77			??0343:
 3756+ 3			        ;jnb     SCON.1,putc_loop
 3757+ 3			        ;clr     SCON.1
 3758+ 3  0C77	75 99 3F	        mov     SBUF,#'?'
 3759+ 2  0C7A	75 6E 01	        mov     fail,#001h
 3760+ 2  0C7D			??0341:
 3761+ 1
 3762+ 1			        top_ma  add,r2,??0331,<004h>
 3763+ 2  0C7D	7A 51		        mov     r2,#arg0
 3764+ 2  0C7F	74 33		        mov     a,#arg1
 3765+ 2			        ifnb    <004h>
 3766+ 2			        set_cy  004h
 3767+ 3	N      0000	??0344  set     (004h and 1)
 3768+ 3	N      0000	        if      ??0344 eq 1
 3769+ 3			        setb    c
 3770+ 3			        else
 3771+ 3  0C81	C3		        clr     c
 3772+ 3			        endif
 3773+ 2			        endif
 3774+ 2  0C82	2A		        add      a,r2
 3775+ 2			        ifnb    <004h>
 3776+ 2			        save_psw
 3777+ 3  0C83	85 D0 70	        mov     saved_psw,PSW
 3778+ 2			        endif
 3779+ 2  0C86	B4 84 25	        cjne    a,#res,??0331
 3780+ 2			        ifnb    <004h>
 3781+ 2			        tst_psw <004h>,??0331
 3782+ 3  0C89	E5 70		        mov     a,saved_psw
 3783+ 3  0C8B	54 C4		        anl     a,#0c4h
 3784+ 3  0C8D	64 04		        xrl     a,#004h
 3785+ 3  0C8F	54 FE		        anl     a,#0feh
 3786+ 3  0C91	70 1B		        jnz     ??0331
 3787+ 2			        endif
 3788+ 1			        top_ma  add,r3,??0331,<004h>
 3789+ 2  0C93	7B 51		        mov     r3,#arg0
 3790+ 2  0C95	74 33		        mov     a,#arg1
 3791+ 2			        ifnb    <004h>
 3792+ 2			        set_cy  004h
 3793+ 3	N      0000	??0345  set     (004h and 1)
 3794+ 3	N      0000	        if      ??0345 eq 1
 3795+ 3			        setb    c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 69



 Line  I  Addr  Code            Source

 3796+ 3			        else
 3797+ 3  0C97	C3		        clr     c
 3798+ 3			        endif
 3799+ 2			        endif
 3800+ 2  0C98	2B		        add      a,r3
 3801+ 2			        ifnb    <004h>
 3802+ 2			        save_psw
 3803+ 3  0C99	85 D0 70	        mov     saved_psw,PSW
 3804+ 2			        endif
 3805+ 2  0C9C	B4 84 0F	        cjne    a,#res,??0331
 3806+ 2			        ifnb    <004h>
 3807+ 2			        tst_psw <004h>,??0331
 3808+ 3  0C9F	E5 70		        mov     a,saved_psw
 3809+ 3  0CA1	54 C4		        anl     a,#0c4h
 3810+ 3  0CA3	64 04		        xrl     a,#004h
 3811+ 3  0CA5	54 FE		        anl     a,#0feh
 3812+ 3  0CA7	70 05		        jnz     ??0331
 3813+ 2			        endif
 3814+ 1
 3815+ 1			        eot     'b',??0331
 3816+ 2			        putc    #'b'
 3817+ 3  0CA9			??0347:
 3818+ 3			        ;jnb     SCON.1,putc_loop
 3819+ 3			        ;clr     SCON.1
 3820+ 3  0CA9	75 99 62	        mov     SBUF,#'b'
 3821+ 2  0CAC	80 06		        sjmp    ??0346
 3822+ 2  0CAE			??0331:  putc    #'?'
 3823+ 3  0CAE			??0348:
 3824+ 3			        ;jnb     SCON.1,putc_loop
 3825+ 3			        ;clr     SCON.1
 3826+ 3  0CAE	75 99 3F	        mov     SBUF,#'?'
 3827+ 2  0CB1	75 6E 01	        mov     fail,#001h
 3828+ 2  0CB4			??0346:
 3829+ 1
 3830+ 1			        top_ma  add,r4,??0332,<004h>
 3831+ 2  0CB4	7C 51		        mov     r4,#arg0
 3832+ 2  0CB6	74 33		        mov     a,#arg1
 3833+ 2			        ifnb    <004h>
 3834+ 2			        set_cy  004h
 3835+ 3	N      0000	??0349  set     (004h and 1)
 3836+ 3	N      0000	        if      ??0349 eq 1
 3837+ 3			        setb    c
 3838+ 3			        else
 3839+ 3  0CB8	C3		        clr     c
 3840+ 3			        endif
 3841+ 2			        endif
 3842+ 2  0CB9	2C		        add      a,r4
 3843+ 2			        ifnb    <004h>
 3844+ 2			        save_psw
 3845+ 3  0CBA	85 D0 70	        mov     saved_psw,PSW
 3846+ 2			        endif
 3847+ 2  0CBD	B4 84 25	        cjne    a,#res,??0332
 3848+ 2			        ifnb    <004h>
 3849+ 2			        tst_psw <004h>,??0332
 3850+ 3  0CC0	E5 70		        mov     a,saved_psw
 3851+ 3  0CC2	54 C4		        anl     a,#0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 70



 Line  I  Addr  Code            Source

 3852+ 3  0CC4	64 04		        xrl     a,#004h
 3853+ 3  0CC6	54 FE		        anl     a,#0feh
 3854+ 3  0CC8	70 1B		        jnz     ??0332
 3855+ 2			        endif
 3856+ 1			        top_ma  add,r5,??0332,<004h>
 3857+ 2  0CCA	7D 51		        mov     r5,#arg0
 3858+ 2  0CCC	74 33		        mov     a,#arg1
 3859+ 2			        ifnb    <004h>
 3860+ 2			        set_cy  004h
 3861+ 3	N      0000	??0350  set     (004h and 1)
 3862+ 3	N      0000	        if      ??0350 eq 1
 3863+ 3			        setb    c
 3864+ 3			        else
 3865+ 3  0CCE	C3		        clr     c
 3866+ 3			        endif
 3867+ 2			        endif
 3868+ 2  0CCF	2D		        add      a,r5
 3869+ 2			        ifnb    <004h>
 3870+ 2			        save_psw
 3871+ 3  0CD0	85 D0 70	        mov     saved_psw,PSW
 3872+ 2			        endif
 3873+ 2  0CD3	B4 84 0F	        cjne    a,#res,??0332
 3874+ 2			        ifnb    <004h>
 3875+ 2			        tst_psw <004h>,??0332
 3876+ 3  0CD6	E5 70		        mov     a,saved_psw
 3877+ 3  0CD8	54 C4		        anl     a,#0c4h
 3878+ 3  0CDA	64 04		        xrl     a,#004h
 3879+ 3  0CDC	54 FE		        anl     a,#0feh
 3880+ 3  0CDE	70 05		        jnz     ??0332
 3881+ 2			        endif
 3882+ 1
 3883+ 1			        eot     'c',??0332
 3884+ 2			        putc    #'c'
 3885+ 3  0CE0			??0352:
 3886+ 3			        ;jnb     SCON.1,putc_loop
 3887+ 3			        ;clr     SCON.1
 3888+ 3  0CE0	75 99 63	        mov     SBUF,#'c'
 3889+ 2  0CE3	80 06		        sjmp    ??0351
 3890+ 2  0CE5			??0332:  putc    #'?'
 3891+ 3  0CE5			??0353:
 3892+ 3			        ;jnb     SCON.1,putc_loop
 3893+ 3			        ;clr     SCON.1
 3894+ 3  0CE5	75 99 3F	        mov     SBUF,#'?'
 3895+ 2  0CE8	75 6E 01	        mov     fail,#001h
 3896+ 2  0CEB			??0351:
 3897+ 1
 3898+ 1			        top_ma  add,r6,??0329,<004h>
 3899+ 2  0CEB	7E 51		        mov     r6,#arg0
 3900+ 2  0CED	74 33		        mov     a,#arg1
 3901+ 2			        ifnb    <004h>
 3902+ 2			        set_cy  004h
 3903+ 3	N      0000	??0354  set     (004h and 1)
 3904+ 3	N      0000	        if      ??0354 eq 1
 3905+ 3			        setb    c
 3906+ 3			        else
 3907+ 3  0CEF	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 71



 Line  I  Addr  Code            Source

 3908+ 3			        endif
 3909+ 2			        endif
 3910+ 2  0CF0	2E		        add      a,r6
 3911+ 2			        ifnb    <004h>
 3912+ 2			        save_psw
 3913+ 3  0CF1	85 D0 70	        mov     saved_psw,PSW
 3914+ 2			        endif
 3915+ 2  0CF4	B4 84 25	        cjne    a,#res,??0329
 3916+ 2			        ifnb    <004h>
 3917+ 2			        tst_psw <004h>,??0329
 3918+ 3  0CF7	E5 70		        mov     a,saved_psw
 3919+ 3  0CF9	54 C4		        anl     a,#0c4h
 3920+ 3  0CFB	64 04		        xrl     a,#004h
 3921+ 3  0CFD	54 FE		        anl     a,#0feh
 3922+ 3  0CFF	70 1B		        jnz     ??0329
 3923+ 2			        endif
 3924+ 1			        top_ma  add,r7,??0329,<004h>
 3925+ 2  0D01	7F 51		        mov     r7,#arg0
 3926+ 2  0D03	74 33		        mov     a,#arg1
 3927+ 2			        ifnb    <004h>
 3928+ 2			        set_cy  004h
 3929+ 3	N      0000	??0355  set     (004h and 1)
 3930+ 3	N      0000	        if      ??0355 eq 1
 3931+ 3			        setb    c
 3932+ 3			        else
 3933+ 3  0D05	C3		        clr     c
 3934+ 3			        endif
 3935+ 2			        endif
 3936+ 2  0D06	2F		        add      a,r7
 3937+ 2			        ifnb    <004h>
 3938+ 2			        save_psw
 3939+ 3  0D07	85 D0 70	        mov     saved_psw,PSW
 3940+ 2			        endif
 3941+ 2  0D0A	B4 84 0F	        cjne    a,#res,??0329
 3942+ 2			        ifnb    <004h>
 3943+ 2			        tst_psw <004h>,??0329
 3944+ 3  0D0D	E5 70		        mov     a,saved_psw
 3945+ 3  0D0F	54 C4		        anl     a,#0c4h
 3946+ 3  0D11	64 04		        xrl     a,#004h
 3947+ 3  0D13	54 FE		        anl     a,#0feh
 3948+ 3  0D15	70 05		        jnz     ??0329
 3949+ 2			        endif
 3950+ 1
 3951+ 1			        eot     'd',??0329
 3952+ 2			        putc    #'d'
 3953+ 3  0D17			??0357:
 3954+ 3			        ;jnb     SCON.1,putc_loop
 3955+ 3			        ;clr     SCON.1
 3956+ 3  0D17	75 99 64	        mov     SBUF,#'d'
 3957+ 2  0D1A	80 06		        sjmp    ??0356
 3958+ 2  0D1C			??0329:  putc    #'?'
 3959+ 3  0D1C			??0358:
 3960+ 3			        ;jnb     SCON.1,putc_loop
 3961+ 3			        ;clr     SCON.1
 3962+ 3  0D1C	75 99 3F	        mov     SBUF,#'?'
 3963+ 2  0D1F	75 6E 01	        mov     fail,#001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 72



 Line  I  Addr  Code            Source

 3964+ 2  0D22			??0356:
 3965+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 3966+ 1
 3967+ 1			        ; Optionally test immediate addressing modes.
 3968+ 1
 3969+ 1	N      FFFF	        if      (01h and 1) ne 0
 3970+ 1			        ; Test <op> A, #arg1...
 3971+ 1			        top_mb  add,a,??0333,<004h>
 3972+ 2  0D22	74 33		        mov     a,#arg1
 3973+ 2			        ifnb    <004h>
 3974+ 2			        set_cy  004h
 3975+ 3	N      0000	??0359  set     (004h and 1)
 3976+ 3	N      0000	        if      ??0359 eq 1
 3977+ 3			        setb    c
 3978+ 3			        else
 3979+ 3  0D24	C3		        clr     c
 3980+ 3			        endif
 3981+ 2			        endif
 3982+ 2  0D25	24 51		        add      a,#arg0
 3983+ 2			        ifnb    <004h>
 3984+ 2			        save_psw
 3985+ 3  0D27	85 D0 70	        mov     saved_psw,PSW
 3986+ 2			        endif
 3987+ 2  0D2A	F5 E0		        mov     ACC,a
 3988+ 2  0D2C	B4 84 0F	        cjne    a,#res,??0333
 3989+ 2			        ifnb    <004h>
 3990+ 2			        tst_psw <004h>,??0333
 3991+ 3  0D2F	E5 70		        mov     a,saved_psw
 3992+ 3  0D31	54 C4		        anl     a,#0c4h
 3993+ 3  0D33	64 04		        xrl     a,#004h
 3994+ 3  0D35	54 FE		        anl     a,#0feh
 3995+ 3  0D37	70 05		        jnz     ??0333
 3996+ 2			        endif
 3997+ 1			        eot     'e',??0333
 3998+ 2			        putc    #'e'
 3999+ 3  0D39			??0361:
 4000+ 3			        ;jnb     SCON.1,putc_loop
 4001+ 3			        ;clr     SCON.1
 4002+ 3  0D39	75 99 65	        mov     SBUF,#'e'
 4003+ 2  0D3C	80 06		        sjmp    ??0360
 4004+ 2  0D3E			??0333:  putc    #'?'
 4005+ 3  0D3E			??0362:
 4006+ 3			        ;jnb     SCON.1,putc_loop
 4007+ 3			        ;clr     SCON.1
 4008+ 3  0D3E	75 99 3F	        mov     SBUF,#'?'
 4009+ 2  0D41	75 6E 01	        mov     fail,#001h
 4010+ 2  0D44			??0360:
 4011+ 1			        endif
 4012+ 1
 4013+ 1	N      0000	        if      (01h and 2) ne 0
 4014+ 1			        ; ...and <op> dir, #arg1
 4015+ 1			        top_mb  add,dir0,??0334,<004h>
 4016+ 1			        eot     'f',??0334
 4017+ 1			        endif
 4018+ 1
 4019+ 1			        ; Optionally test <op> dir, A

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 73



 Line  I  Addr  Code            Source

 4020+ 1	N      0000	        if      (01h and 4) ne 0
 4021+ 1			        top_mc  add,??0335,<004h>
 4022+ 1			        eot     'g',??0335
 4023+ 1			        endif
 4024+ 1
 4025:				        putc    #'1'
 4026+ 1  0D44			??0363:
 4027+ 1			        ;jnb     SCON.1,putc_loop
 4028+ 1			        ;clr     SCON.1
 4029+ 1  0D44	75 99 31	        mov     SBUF,#'1'
 4030:				        tst_alu add,081h,093h,014h,01h,084h     ;  CY /AC  OV
 4031+ 1			        ; Put the argument and result data into variables for easier access
 4032+ 1	N      0081	        arg0    set 081h
 4033+ 1	N      0093	        arg1    set 093h
 4034+ 1	N      0014	        res     set 014h
 4035+ 1
 4036+ 1			        ; Test <op> A, dir
 4037+ 1			        top_ma  add,dir0,??0365,<084h>
 4038+ 2  0D47	75 60 81	        mov     dir0,#arg0
 4039+ 2  0D4A	74 93		        mov     a,#arg1
 4040+ 2			        ifnb    <084h>
 4041+ 2			        set_cy  084h
 4042+ 3	N      0000	??0371  set     (084h and 1)
 4043+ 3	N      0000	        if      ??0371 eq 1
 4044+ 3			        setb    c
 4045+ 3			        else
 4046+ 3  0D4C	C3		        clr     c
 4047+ 3			        endif
 4048+ 2			        endif
 4049+ 2  0D4D	25 60		        add      a,dir0
 4050+ 2			        ifnb    <084h>
 4051+ 2			        save_psw
 4052+ 3  0D4F	85 D0 70	        mov     saved_psw,PSW
 4053+ 2			        endif
 4054+ 2  0D52	B4 14 6B	        cjne    a,#res,??0365
 4055+ 2			        ifnb    <084h>
 4056+ 2			        tst_psw <084h>,??0365
 4057+ 3  0D55	E5 70		        mov     a,saved_psw
 4058+ 3  0D57	54 C4		        anl     a,#0c4h
 4059+ 3  0D59	64 84		        xrl     a,#084h
 4060+ 3  0D5B	54 FE		        anl     a,#0feh
 4061+ 3  0D5D	70 61		        jnz     ??0365
 4062+ 2			        endif
 4063+ 1			        ; Test <op> A, @R0
 4064+ 1  0D5F	78 60		        mov     r0,#dir0
 4065+ 1			        top_ma  add,@r0,??0365,<084h>
 4066+ 2  0D61	76 81		        mov     @r0,#arg0
 4067+ 2  0D63	74 93		        mov     a,#arg1
 4068+ 2			        ifnb    <084h>
 4069+ 2			        set_cy  084h
 4070+ 3	N      0000	??0372  set     (084h and 1)
 4071+ 3	N      0000	        if      ??0372 eq 1
 4072+ 3			        setb    c
 4073+ 3			        else
 4074+ 3  0D65	C3		        clr     c
 4075+ 3			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 74



 Line  I  Addr  Code            Source

 4076+ 2			        endif
 4077+ 2  0D66	26		        add      a,@r0
 4078+ 2			        ifnb    <084h>
 4079+ 2			        save_psw
 4080+ 3  0D67	85 D0 70	        mov     saved_psw,PSW
 4081+ 2			        endif
 4082+ 2  0D6A	B4 14 53	        cjne    a,#res,??0365
 4083+ 2			        ifnb    <084h>
 4084+ 2			        tst_psw <084h>,??0365
 4085+ 3  0D6D	E5 70		        mov     a,saved_psw
 4086+ 3  0D6F	54 C4		        anl     a,#0c4h
 4087+ 3  0D71	64 84		        xrl     a,#084h
 4088+ 3  0D73	54 FE		        anl     a,#0feh
 4089+ 3  0D75	70 49		        jnz     ??0365
 4090+ 2			        endif
 4091+ 1			        ; Test <op> A, @R1
 4092+ 1  0D77	79 31		        mov     r1,#031h
 4093+ 1			        top_ma  add,@r1,??0365,<084h>
 4094+ 2  0D79	77 81		        mov     @r1,#arg0
 4095+ 2  0D7B	74 93		        mov     a,#arg1
 4096+ 2			        ifnb    <084h>
 4097+ 2			        set_cy  084h
 4098+ 3	N      0000	??0373  set     (084h and 1)
 4099+ 3	N      0000	        if      ??0373 eq 1
 4100+ 3			        setb    c
 4101+ 3			        else
 4102+ 3  0D7D	C3		        clr     c
 4103+ 3			        endif
 4104+ 2			        endif
 4105+ 2  0D7E	27		        add      a,@r1
 4106+ 2			        ifnb    <084h>
 4107+ 2			        save_psw
 4108+ 3  0D7F	85 D0 70	        mov     saved_psw,PSW
 4109+ 2			        endif
 4110+ 2  0D82	B4 14 3B	        cjne    a,#res,??0365
 4111+ 2			        ifnb    <084h>
 4112+ 2			        tst_psw <084h>,??0365
 4113+ 3  0D85	E5 70		        mov     a,saved_psw
 4114+ 3  0D87	54 C4		        anl     a,#0c4h
 4115+ 3  0D89	64 84		        xrl     a,#084h
 4116+ 3  0D8B	54 FE		        anl     a,#0feh
 4117+ 3  0D8D	70 31		        jnz     ??0365
 4118+ 2			        endif
 4119+ 1
 4120+ 1			        ; Now test <op> A, Rn for n in 0..7
 4121+ 1			        top_ma  add,r0,??0365,<084h>
 4122+ 2  0D8F	78 81		        mov     r0,#arg0
 4123+ 2  0D91	74 93		        mov     a,#arg1
 4124+ 2			        ifnb    <084h>
 4125+ 2			        set_cy  084h
 4126+ 3	N      0000	??0374  set     (084h and 1)
 4127+ 3	N      0000	        if      ??0374 eq 1
 4128+ 3			        setb    c
 4129+ 3			        else
 4130+ 3  0D93	C3		        clr     c
 4131+ 3			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 75



 Line  I  Addr  Code            Source

 4132+ 2			        endif
 4133+ 2  0D94	28		        add      a,r0
 4134+ 2			        ifnb    <084h>
 4135+ 2			        save_psw
 4136+ 3  0D95	85 D0 70	        mov     saved_psw,PSW
 4137+ 2			        endif
 4138+ 2  0D98	B4 14 25	        cjne    a,#res,??0365
 4139+ 2			        ifnb    <084h>
 4140+ 2			        tst_psw <084h>,??0365
 4141+ 3  0D9B	E5 70		        mov     a,saved_psw
 4142+ 3  0D9D	54 C4		        anl     a,#0c4h
 4143+ 3  0D9F	64 84		        xrl     a,#084h
 4144+ 3  0DA1	54 FE		        anl     a,#0feh
 4145+ 3  0DA3	70 1B		        jnz     ??0365
 4146+ 2			        endif
 4147+ 1			        top_ma  add,r1,??0365,<084h>
 4148+ 2  0DA5	79 81		        mov     r1,#arg0
 4149+ 2  0DA7	74 93		        mov     a,#arg1
 4150+ 2			        ifnb    <084h>
 4151+ 2			        set_cy  084h
 4152+ 3	N      0000	??0375  set     (084h and 1)
 4153+ 3	N      0000	        if      ??0375 eq 1
 4154+ 3			        setb    c
 4155+ 3			        else
 4156+ 3  0DA9	C3		        clr     c
 4157+ 3			        endif
 4158+ 2			        endif
 4159+ 2  0DAA	29		        add      a,r1
 4160+ 2			        ifnb    <084h>
 4161+ 2			        save_psw
 4162+ 3  0DAB	85 D0 70	        mov     saved_psw,PSW
 4163+ 2			        endif
 4164+ 2  0DAE	B4 14 0F	        cjne    a,#res,??0365
 4165+ 2			        ifnb    <084h>
 4166+ 2			        tst_psw <084h>,??0365
 4167+ 3  0DB1	E5 70		        mov     a,saved_psw
 4168+ 3  0DB3	54 C4		        anl     a,#0c4h
 4169+ 3  0DB5	64 84		        xrl     a,#084h
 4170+ 3  0DB7	54 FE		        anl     a,#0feh
 4171+ 3  0DB9	70 05		        jnz     ??0365
 4172+ 2			        endif
 4173+ 1
 4174+ 1			        eot     'a',??0365
 4175+ 2			        putc    #'a'
 4176+ 3  0DBB			??0377:
 4177+ 3			        ;jnb     SCON.1,putc_loop
 4178+ 3			        ;clr     SCON.1
 4179+ 3  0DBB	75 99 61	        mov     SBUF,#'a'
 4180+ 2  0DBE	80 06		        sjmp    ??0376
 4181+ 2  0DC0			??0365:  putc    #'?'
 4182+ 3  0DC0			??0378:
 4183+ 3			        ;jnb     SCON.1,putc_loop
 4184+ 3			        ;clr     SCON.1
 4185+ 3  0DC0	75 99 3F	        mov     SBUF,#'?'
 4186+ 2  0DC3	75 6E 01	        mov     fail,#001h
 4187+ 2  0DC6			??0376:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 76



 Line  I  Addr  Code            Source

 4188+ 1
 4189+ 1			        top_ma  add,r2,??0366,<084h>
 4190+ 2  0DC6	7A 81		        mov     r2,#arg0
 4191+ 2  0DC8	74 93		        mov     a,#arg1
 4192+ 2			        ifnb    <084h>
 4193+ 2			        set_cy  084h
 4194+ 3	N      0000	??0379  set     (084h and 1)
 4195+ 3	N      0000	        if      ??0379 eq 1
 4196+ 3			        setb    c
 4197+ 3			        else
 4198+ 3  0DCA	C3		        clr     c
 4199+ 3			        endif
 4200+ 2			        endif
 4201+ 2  0DCB	2A		        add      a,r2
 4202+ 2			        ifnb    <084h>
 4203+ 2			        save_psw
 4204+ 3  0DCC	85 D0 70	        mov     saved_psw,PSW
 4205+ 2			        endif
 4206+ 2  0DCF	B4 14 25	        cjne    a,#res,??0366
 4207+ 2			        ifnb    <084h>
 4208+ 2			        tst_psw <084h>,??0366
 4209+ 3  0DD2	E5 70		        mov     a,saved_psw
 4210+ 3  0DD4	54 C4		        anl     a,#0c4h
 4211+ 3  0DD6	64 84		        xrl     a,#084h
 4212+ 3  0DD8	54 FE		        anl     a,#0feh
 4213+ 3  0DDA	70 1B		        jnz     ??0366
 4214+ 2			        endif
 4215+ 1			        top_ma  add,r3,??0366,<084h>
 4216+ 2  0DDC	7B 81		        mov     r3,#arg0
 4217+ 2  0DDE	74 93		        mov     a,#arg1
 4218+ 2			        ifnb    <084h>
 4219+ 2			        set_cy  084h
 4220+ 3	N      0000	??0380  set     (084h and 1)
 4221+ 3	N      0000	        if      ??0380 eq 1
 4222+ 3			        setb    c
 4223+ 3			        else
 4224+ 3  0DE0	C3		        clr     c
 4225+ 3			        endif
 4226+ 2			        endif
 4227+ 2  0DE1	2B		        add      a,r3
 4228+ 2			        ifnb    <084h>
 4229+ 2			        save_psw
 4230+ 3  0DE2	85 D0 70	        mov     saved_psw,PSW
 4231+ 2			        endif
 4232+ 2  0DE5	B4 14 0F	        cjne    a,#res,??0366
 4233+ 2			        ifnb    <084h>
 4234+ 2			        tst_psw <084h>,??0366
 4235+ 3  0DE8	E5 70		        mov     a,saved_psw
 4236+ 3  0DEA	54 C4		        anl     a,#0c4h
 4237+ 3  0DEC	64 84		        xrl     a,#084h
 4238+ 3  0DEE	54 FE		        anl     a,#0feh
 4239+ 3  0DF0	70 05		        jnz     ??0366
 4240+ 2			        endif
 4241+ 1
 4242+ 1			        eot     'b',??0366
 4243+ 2			        putc    #'b'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 77



 Line  I  Addr  Code            Source

 4244+ 3  0DF2			??0382:
 4245+ 3			        ;jnb     SCON.1,putc_loop
 4246+ 3			        ;clr     SCON.1
 4247+ 3  0DF2	75 99 62	        mov     SBUF,#'b'
 4248+ 2  0DF5	80 06		        sjmp    ??0381
 4249+ 2  0DF7			??0366:  putc    #'?'
 4250+ 3  0DF7			??0383:
 4251+ 3			        ;jnb     SCON.1,putc_loop
 4252+ 3			        ;clr     SCON.1
 4253+ 3  0DF7	75 99 3F	        mov     SBUF,#'?'
 4254+ 2  0DFA	75 6E 01	        mov     fail,#001h
 4255+ 2  0DFD			??0381:
 4256+ 1
 4257+ 1			        top_ma  add,r4,??0367,<084h>
 4258+ 2  0DFD	7C 81		        mov     r4,#arg0
 4259+ 2  0DFF	74 93		        mov     a,#arg1
 4260+ 2			        ifnb    <084h>
 4261+ 2			        set_cy  084h
 4262+ 3	N      0000	??0384  set     (084h and 1)
 4263+ 3	N      0000	        if      ??0384 eq 1
 4264+ 3			        setb    c
 4265+ 3			        else
 4266+ 3  0E01	C3		        clr     c
 4267+ 3			        endif
 4268+ 2			        endif
 4269+ 2  0E02	2C		        add      a,r4
 4270+ 2			        ifnb    <084h>
 4271+ 2			        save_psw
 4272+ 3  0E03	85 D0 70	        mov     saved_psw,PSW
 4273+ 2			        endif
 4274+ 2  0E06	B4 14 25	        cjne    a,#res,??0367
 4275+ 2			        ifnb    <084h>
 4276+ 2			        tst_psw <084h>,??0367
 4277+ 3  0E09	E5 70		        mov     a,saved_psw
 4278+ 3  0E0B	54 C4		        anl     a,#0c4h
 4279+ 3  0E0D	64 84		        xrl     a,#084h
 4280+ 3  0E0F	54 FE		        anl     a,#0feh
 4281+ 3  0E11	70 1B		        jnz     ??0367
 4282+ 2			        endif
 4283+ 1			        top_ma  add,r5,??0367,<084h>
 4284+ 2  0E13	7D 81		        mov     r5,#arg0
 4285+ 2  0E15	74 93		        mov     a,#arg1
 4286+ 2			        ifnb    <084h>
 4287+ 2			        set_cy  084h
 4288+ 3	N      0000	??0385  set     (084h and 1)
 4289+ 3	N      0000	        if      ??0385 eq 1
 4290+ 3			        setb    c
 4291+ 3			        else
 4292+ 3  0E17	C3		        clr     c
 4293+ 3			        endif
 4294+ 2			        endif
 4295+ 2  0E18	2D		        add      a,r5
 4296+ 2			        ifnb    <084h>
 4297+ 2			        save_psw
 4298+ 3  0E19	85 D0 70	        mov     saved_psw,PSW
 4299+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 78



 Line  I  Addr  Code            Source

 4300+ 2  0E1C	B4 14 0F	        cjne    a,#res,??0367
 4301+ 2			        ifnb    <084h>
 4302+ 2			        tst_psw <084h>,??0367
 4303+ 3  0E1F	E5 70		        mov     a,saved_psw
 4304+ 3  0E21	54 C4		        anl     a,#0c4h
 4305+ 3  0E23	64 84		        xrl     a,#084h
 4306+ 3  0E25	54 FE		        anl     a,#0feh
 4307+ 3  0E27	70 05		        jnz     ??0367
 4308+ 2			        endif
 4309+ 1
 4310+ 1			        eot     'c',??0367
 4311+ 2			        putc    #'c'
 4312+ 3  0E29			??0387:
 4313+ 3			        ;jnb     SCON.1,putc_loop
 4314+ 3			        ;clr     SCON.1
 4315+ 3  0E29	75 99 63	        mov     SBUF,#'c'
 4316+ 2  0E2C	80 06		        sjmp    ??0386
 4317+ 2  0E2E			??0367:  putc    #'?'
 4318+ 3  0E2E			??0388:
 4319+ 3			        ;jnb     SCON.1,putc_loop
 4320+ 3			        ;clr     SCON.1
 4321+ 3  0E2E	75 99 3F	        mov     SBUF,#'?'
 4322+ 2  0E31	75 6E 01	        mov     fail,#001h
 4323+ 2  0E34			??0386:
 4324+ 1
 4325+ 1			        top_ma  add,r6,??0364,<084h>
 4326+ 2  0E34	7E 81		        mov     r6,#arg0
 4327+ 2  0E36	74 93		        mov     a,#arg1
 4328+ 2			        ifnb    <084h>
 4329+ 2			        set_cy  084h
 4330+ 3	N      0000	??0389  set     (084h and 1)
 4331+ 3	N      0000	        if      ??0389 eq 1
 4332+ 3			        setb    c
 4333+ 3			        else
 4334+ 3  0E38	C3		        clr     c
 4335+ 3			        endif
 4336+ 2			        endif
 4337+ 2  0E39	2E		        add      a,r6
 4338+ 2			        ifnb    <084h>
 4339+ 2			        save_psw
 4340+ 3  0E3A	85 D0 70	        mov     saved_psw,PSW
 4341+ 2			        endif
 4342+ 2  0E3D	B4 14 25	        cjne    a,#res,??0364
 4343+ 2			        ifnb    <084h>
 4344+ 2			        tst_psw <084h>,??0364
 4345+ 3  0E40	E5 70		        mov     a,saved_psw
 4346+ 3  0E42	54 C4		        anl     a,#0c4h
 4347+ 3  0E44	64 84		        xrl     a,#084h
 4348+ 3  0E46	54 FE		        anl     a,#0feh
 4349+ 3  0E48	70 1B		        jnz     ??0364
 4350+ 2			        endif
 4351+ 1			        top_ma  add,r7,??0364,<084h>
 4352+ 2  0E4A	7F 81		        mov     r7,#arg0
 4353+ 2  0E4C	74 93		        mov     a,#arg1
 4354+ 2			        ifnb    <084h>
 4355+ 2			        set_cy  084h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 79



 Line  I  Addr  Code            Source

 4356+ 3	N      0000	??0390  set     (084h and 1)
 4357+ 3	N      0000	        if      ??0390 eq 1
 4358+ 3			        setb    c
 4359+ 3			        else
 4360+ 3  0E4E	C3		        clr     c
 4361+ 3			        endif
 4362+ 2			        endif
 4363+ 2  0E4F	2F		        add      a,r7
 4364+ 2			        ifnb    <084h>
 4365+ 2			        save_psw
 4366+ 3  0E50	85 D0 70	        mov     saved_psw,PSW
 4367+ 2			        endif
 4368+ 2  0E53	B4 14 0F	        cjne    a,#res,??0364
 4369+ 2			        ifnb    <084h>
 4370+ 2			        tst_psw <084h>,??0364
 4371+ 3  0E56	E5 70		        mov     a,saved_psw
 4372+ 3  0E58	54 C4		        anl     a,#0c4h
 4373+ 3  0E5A	64 84		        xrl     a,#084h
 4374+ 3  0E5C	54 FE		        anl     a,#0feh
 4375+ 3  0E5E	70 05		        jnz     ??0364
 4376+ 2			        endif
 4377+ 1
 4378+ 1			        eot     'd',??0364
 4379+ 2			        putc    #'d'
 4380+ 3  0E60			??0392:
 4381+ 3			        ;jnb     SCON.1,putc_loop
 4382+ 3			        ;clr     SCON.1
 4383+ 3  0E60	75 99 64	        mov     SBUF,#'d'
 4384+ 2  0E63	80 06		        sjmp    ??0391
 4385+ 2  0E65			??0364:  putc    #'?'
 4386+ 3  0E65			??0393:
 4387+ 3			        ;jnb     SCON.1,putc_loop
 4388+ 3			        ;clr     SCON.1
 4389+ 3  0E65	75 99 3F	        mov     SBUF,#'?'
 4390+ 2  0E68	75 6E 01	        mov     fail,#001h
 4391+ 2  0E6B			??0391:
 4392+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 4393+ 1
 4394+ 1			        ; Optionally test immediate addressing modes.
 4395+ 1
 4396+ 1	N      FFFF	        if      (01h and 1) ne 0
 4397+ 1			        ; Test <op> A, #arg1...
 4398+ 1			        top_mb  add,a,??0368,<084h>
 4399+ 2  0E6B	74 93		        mov     a,#arg1
 4400+ 2			        ifnb    <084h>
 4401+ 2			        set_cy  084h
 4402+ 3	N      0000	??0394  set     (084h and 1)
 4403+ 3	N      0000	        if      ??0394 eq 1
 4404+ 3			        setb    c
 4405+ 3			        else
 4406+ 3  0E6D	C3		        clr     c
 4407+ 3			        endif
 4408+ 2			        endif
 4409+ 2  0E6E	24 81		        add      a,#arg0
 4410+ 2			        ifnb    <084h>
 4411+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 80



 Line  I  Addr  Code            Source

 4412+ 3  0E70	85 D0 70	        mov     saved_psw,PSW
 4413+ 2			        endif
 4414+ 2  0E73	F5 E0		        mov     ACC,a
 4415+ 2  0E75	B4 14 0F	        cjne    a,#res,??0368
 4416+ 2			        ifnb    <084h>
 4417+ 2			        tst_psw <084h>,??0368
 4418+ 3  0E78	E5 70		        mov     a,saved_psw
 4419+ 3  0E7A	54 C4		        anl     a,#0c4h
 4420+ 3  0E7C	64 84		        xrl     a,#084h
 4421+ 3  0E7E	54 FE		        anl     a,#0feh
 4422+ 3  0E80	70 05		        jnz     ??0368
 4423+ 2			        endif
 4424+ 1			        eot     'e',??0368
 4425+ 2			        putc    #'e'
 4426+ 3  0E82			??0396:
 4427+ 3			        ;jnb     SCON.1,putc_loop
 4428+ 3			        ;clr     SCON.1
 4429+ 3  0E82	75 99 65	        mov     SBUF,#'e'
 4430+ 2  0E85	80 06		        sjmp    ??0395
 4431+ 2  0E87			??0368:  putc    #'?'
 4432+ 3  0E87			??0397:
 4433+ 3			        ;jnb     SCON.1,putc_loop
 4434+ 3			        ;clr     SCON.1
 4435+ 3  0E87	75 99 3F	        mov     SBUF,#'?'
 4436+ 2  0E8A	75 6E 01	        mov     fail,#001h
 4437+ 2  0E8D			??0395:
 4438+ 1			        endif
 4439+ 1
 4440+ 1	N      0000	        if      (01h and 2) ne 0
 4441+ 1			        ; ...and <op> dir, #arg1
 4442+ 1			        top_mb  add,dir0,??0369,<084h>
 4443+ 1			        eot     'f',??0369
 4444+ 1			        endif
 4445+ 1
 4446+ 1			        ; Optionally test <op> dir, A
 4447+ 1	N      0000	        if      (01h and 4) ne 0
 4448+ 1			        top_mc  add,??0370,<084h>
 4449+ 1			        eot     'g',??0370
 4450+ 1			        endif
 4451+ 1
 4452:				        putc    #'2'
 4453+ 1  0E8D			??0398:
 4454+ 1			        ;jnb     SCON.1,putc_loop
 4455+ 1			        ;clr     SCON.1
 4456+ 1  0E8D	75 99 32	        mov     SBUF,#'2'
 4457:				        tst_alu add,088h,098h,020h,01h,0c4h     ;  CY  AC  OV
 4458+ 1			        ; Put the argument and result data into variables for easier access
 4459+ 1	N      0088	        arg0    set 088h
 4460+ 1	N      0098	        arg1    set 098h
 4461+ 1	N      0020	        res     set 020h
 4462+ 1
 4463+ 1			        ; Test <op> A, dir
 4464+ 1			        top_ma  add,dir0,??0400,<0c4h>
 4465+ 2  0E90	75 60 88	        mov     dir0,#arg0
 4466+ 2  0E93	74 98		        mov     a,#arg1
 4467+ 2			        ifnb    <0c4h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 81



 Line  I  Addr  Code            Source

 4468+ 2			        set_cy  0c4h
 4469+ 3	N      0000	??0406  set     (0c4h and 1)
 4470+ 3	N      0000	        if      ??0406 eq 1
 4471+ 3			        setb    c
 4472+ 3			        else
 4473+ 3  0E95	C3		        clr     c
 4474+ 3			        endif
 4475+ 2			        endif
 4476+ 2  0E96	25 60		        add      a,dir0
 4477+ 2			        ifnb    <0c4h>
 4478+ 2			        save_psw
 4479+ 3  0E98	85 D0 70	        mov     saved_psw,PSW
 4480+ 2			        endif
 4481+ 2  0E9B	B4 20 6B	        cjne    a,#res,??0400
 4482+ 2			        ifnb    <0c4h>
 4483+ 2			        tst_psw <0c4h>,??0400
 4484+ 3  0E9E	E5 70		        mov     a,saved_psw
 4485+ 3  0EA0	54 C4		        anl     a,#0c4h
 4486+ 3  0EA2	64 C4		        xrl     a,#0c4h
 4487+ 3  0EA4	54 FE		        anl     a,#0feh
 4488+ 3  0EA6	70 61		        jnz     ??0400
 4489+ 2			        endif
 4490+ 1			        ; Test <op> A, @R0
 4491+ 1  0EA8	78 60		        mov     r0,#dir0
 4492+ 1			        top_ma  add,@r0,??0400,<0c4h>
 4493+ 2  0EAA	76 88		        mov     @r0,#arg0
 4494+ 2  0EAC	74 98		        mov     a,#arg1
 4495+ 2			        ifnb    <0c4h>
 4496+ 2			        set_cy  0c4h
 4497+ 3	N      0000	??0407  set     (0c4h and 1)
 4498+ 3	N      0000	        if      ??0407 eq 1
 4499+ 3			        setb    c
 4500+ 3			        else
 4501+ 3  0EAE	C3		        clr     c
 4502+ 3			        endif
 4503+ 2			        endif
 4504+ 2  0EAF	26		        add      a,@r0
 4505+ 2			        ifnb    <0c4h>
 4506+ 2			        save_psw
 4507+ 3  0EB0	85 D0 70	        mov     saved_psw,PSW
 4508+ 2			        endif
 4509+ 2  0EB3	B4 20 53	        cjne    a,#res,??0400
 4510+ 2			        ifnb    <0c4h>
 4511+ 2			        tst_psw <0c4h>,??0400
 4512+ 3  0EB6	E5 70		        mov     a,saved_psw
 4513+ 3  0EB8	54 C4		        anl     a,#0c4h
 4514+ 3  0EBA	64 C4		        xrl     a,#0c4h
 4515+ 3  0EBC	54 FE		        anl     a,#0feh
 4516+ 3  0EBE	70 49		        jnz     ??0400
 4517+ 2			        endif
 4518+ 1			        ; Test <op> A, @R1
 4519+ 1  0EC0	79 31		        mov     r1,#031h
 4520+ 1			        top_ma  add,@r1,??0400,<0c4h>
 4521+ 2  0EC2	77 88		        mov     @r1,#arg0
 4522+ 2  0EC4	74 98		        mov     a,#arg1
 4523+ 2			        ifnb    <0c4h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 82



 Line  I  Addr  Code            Source

 4524+ 2			        set_cy  0c4h
 4525+ 3	N      0000	??0408  set     (0c4h and 1)
 4526+ 3	N      0000	        if      ??0408 eq 1
 4527+ 3			        setb    c
 4528+ 3			        else
 4529+ 3  0EC6	C3		        clr     c
 4530+ 3			        endif
 4531+ 2			        endif
 4532+ 2  0EC7	27		        add      a,@r1
 4533+ 2			        ifnb    <0c4h>
 4534+ 2			        save_psw
 4535+ 3  0EC8	85 D0 70	        mov     saved_psw,PSW
 4536+ 2			        endif
 4537+ 2  0ECB	B4 20 3B	        cjne    a,#res,??0400
 4538+ 2			        ifnb    <0c4h>
 4539+ 2			        tst_psw <0c4h>,??0400
 4540+ 3  0ECE	E5 70		        mov     a,saved_psw
 4541+ 3  0ED0	54 C4		        anl     a,#0c4h
 4542+ 3  0ED2	64 C4		        xrl     a,#0c4h
 4543+ 3  0ED4	54 FE		        anl     a,#0feh
 4544+ 3  0ED6	70 31		        jnz     ??0400
 4545+ 2			        endif
 4546+ 1
 4547+ 1			        ; Now test <op> A, Rn for n in 0..7
 4548+ 1			        top_ma  add,r0,??0400,<0c4h>
 4549+ 2  0ED8	78 88		        mov     r0,#arg0
 4550+ 2  0EDA	74 98		        mov     a,#arg1
 4551+ 2			        ifnb    <0c4h>
 4552+ 2			        set_cy  0c4h
 4553+ 3	N      0000	??0409  set     (0c4h and 1)
 4554+ 3	N      0000	        if      ??0409 eq 1
 4555+ 3			        setb    c
 4556+ 3			        else
 4557+ 3  0EDC	C3		        clr     c
 4558+ 3			        endif
 4559+ 2			        endif
 4560+ 2  0EDD	28		        add      a,r0
 4561+ 2			        ifnb    <0c4h>
 4562+ 2			        save_psw
 4563+ 3  0EDE	85 D0 70	        mov     saved_psw,PSW
 4564+ 2			        endif
 4565+ 2  0EE1	B4 20 25	        cjne    a,#res,??0400
 4566+ 2			        ifnb    <0c4h>
 4567+ 2			        tst_psw <0c4h>,??0400
 4568+ 3  0EE4	E5 70		        mov     a,saved_psw
 4569+ 3  0EE6	54 C4		        anl     a,#0c4h
 4570+ 3  0EE8	64 C4		        xrl     a,#0c4h
 4571+ 3  0EEA	54 FE		        anl     a,#0feh
 4572+ 3  0EEC	70 1B		        jnz     ??0400
 4573+ 2			        endif
 4574+ 1			        top_ma  add,r1,??0400,<0c4h>
 4575+ 2  0EEE	79 88		        mov     r1,#arg0
 4576+ 2  0EF0	74 98		        mov     a,#arg1
 4577+ 2			        ifnb    <0c4h>
 4578+ 2			        set_cy  0c4h
 4579+ 3	N      0000	??0410  set     (0c4h and 1)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 83



 Line  I  Addr  Code            Source

 4580+ 3	N      0000	        if      ??0410 eq 1
 4581+ 3			        setb    c
 4582+ 3			        else
 4583+ 3  0EF2	C3		        clr     c
 4584+ 3			        endif
 4585+ 2			        endif
 4586+ 2  0EF3	29		        add      a,r1
 4587+ 2			        ifnb    <0c4h>
 4588+ 2			        save_psw
 4589+ 3  0EF4	85 D0 70	        mov     saved_psw,PSW
 4590+ 2			        endif
 4591+ 2  0EF7	B4 20 0F	        cjne    a,#res,??0400
 4592+ 2			        ifnb    <0c4h>
 4593+ 2			        tst_psw <0c4h>,??0400
 4594+ 3  0EFA	E5 70		        mov     a,saved_psw
 4595+ 3  0EFC	54 C4		        anl     a,#0c4h
 4596+ 3  0EFE	64 C4		        xrl     a,#0c4h
 4597+ 3  0F00	54 FE		        anl     a,#0feh
 4598+ 3  0F02	70 05		        jnz     ??0400
 4599+ 2			        endif
 4600+ 1
 4601+ 1			        eot     'a',??0400
 4602+ 2			        putc    #'a'
 4603+ 3  0F04			??0412:
 4604+ 3			        ;jnb     SCON.1,putc_loop
 4605+ 3			        ;clr     SCON.1
 4606+ 3  0F04	75 99 61	        mov     SBUF,#'a'
 4607+ 2  0F07	80 06		        sjmp    ??0411
 4608+ 2  0F09			??0400:  putc    #'?'
 4609+ 3  0F09			??0413:
 4610+ 3			        ;jnb     SCON.1,putc_loop
 4611+ 3			        ;clr     SCON.1
 4612+ 3  0F09	75 99 3F	        mov     SBUF,#'?'
 4613+ 2  0F0C	75 6E 01	        mov     fail,#001h
 4614+ 2  0F0F			??0411:
 4615+ 1
 4616+ 1			        top_ma  add,r2,??0401,<0c4h>
 4617+ 2  0F0F	7A 88		        mov     r2,#arg0
 4618+ 2  0F11	74 98		        mov     a,#arg1
 4619+ 2			        ifnb    <0c4h>
 4620+ 2			        set_cy  0c4h
 4621+ 3	N      0000	??0414  set     (0c4h and 1)
 4622+ 3	N      0000	        if      ??0414 eq 1
 4623+ 3			        setb    c
 4624+ 3			        else
 4625+ 3  0F13	C3		        clr     c
 4626+ 3			        endif
 4627+ 2			        endif
 4628+ 2  0F14	2A		        add      a,r2
 4629+ 2			        ifnb    <0c4h>
 4630+ 2			        save_psw
 4631+ 3  0F15	85 D0 70	        mov     saved_psw,PSW
 4632+ 2			        endif
 4633+ 2  0F18	B4 20 25	        cjne    a,#res,??0401
 4634+ 2			        ifnb    <0c4h>
 4635+ 2			        tst_psw <0c4h>,??0401

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 84



 Line  I  Addr  Code            Source

 4636+ 3  0F1B	E5 70		        mov     a,saved_psw
 4637+ 3  0F1D	54 C4		        anl     a,#0c4h
 4638+ 3  0F1F	64 C4		        xrl     a,#0c4h
 4639+ 3  0F21	54 FE		        anl     a,#0feh
 4640+ 3  0F23	70 1B		        jnz     ??0401
 4641+ 2			        endif
 4642+ 1			        top_ma  add,r3,??0401,<0c4h>
 4643+ 2  0F25	7B 88		        mov     r3,#arg0
 4644+ 2  0F27	74 98		        mov     a,#arg1
 4645+ 2			        ifnb    <0c4h>
 4646+ 2			        set_cy  0c4h
 4647+ 3	N      0000	??0415  set     (0c4h and 1)
 4648+ 3	N      0000	        if      ??0415 eq 1
 4649+ 3			        setb    c
 4650+ 3			        else
 4651+ 3  0F29	C3		        clr     c
 4652+ 3			        endif
 4653+ 2			        endif
 4654+ 2  0F2A	2B		        add      a,r3
 4655+ 2			        ifnb    <0c4h>
 4656+ 2			        save_psw
 4657+ 3  0F2B	85 D0 70	        mov     saved_psw,PSW
 4658+ 2			        endif
 4659+ 2  0F2E	B4 20 0F	        cjne    a,#res,??0401
 4660+ 2			        ifnb    <0c4h>
 4661+ 2			        tst_psw <0c4h>,??0401
 4662+ 3  0F31	E5 70		        mov     a,saved_psw
 4663+ 3  0F33	54 C4		        anl     a,#0c4h
 4664+ 3  0F35	64 C4		        xrl     a,#0c4h
 4665+ 3  0F37	54 FE		        anl     a,#0feh
 4666+ 3  0F39	70 05		        jnz     ??0401
 4667+ 2			        endif
 4668+ 1
 4669+ 1			        eot     'b',??0401
 4670+ 2			        putc    #'b'
 4671+ 3  0F3B			??0417:
 4672+ 3			        ;jnb     SCON.1,putc_loop
 4673+ 3			        ;clr     SCON.1
 4674+ 3  0F3B	75 99 62	        mov     SBUF,#'b'
 4675+ 2  0F3E	80 06		        sjmp    ??0416
 4676+ 2  0F40			??0401:  putc    #'?'
 4677+ 3  0F40			??0418:
 4678+ 3			        ;jnb     SCON.1,putc_loop
 4679+ 3			        ;clr     SCON.1
 4680+ 3  0F40	75 99 3F	        mov     SBUF,#'?'
 4681+ 2  0F43	75 6E 01	        mov     fail,#001h
 4682+ 2  0F46			??0416:
 4683+ 1
 4684+ 1			        top_ma  add,r4,??0402,<0c4h>
 4685+ 2  0F46	7C 88		        mov     r4,#arg0
 4686+ 2  0F48	74 98		        mov     a,#arg1
 4687+ 2			        ifnb    <0c4h>
 4688+ 2			        set_cy  0c4h
 4689+ 3	N      0000	??0419  set     (0c4h and 1)
 4690+ 3	N      0000	        if      ??0419 eq 1
 4691+ 3			        setb    c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 85



 Line  I  Addr  Code            Source

 4692+ 3			        else
 4693+ 3  0F4A	C3		        clr     c
 4694+ 3			        endif
 4695+ 2			        endif
 4696+ 2  0F4B	2C		        add      a,r4
 4697+ 2			        ifnb    <0c4h>
 4698+ 2			        save_psw
 4699+ 3  0F4C	85 D0 70	        mov     saved_psw,PSW
 4700+ 2			        endif
 4701+ 2  0F4F	B4 20 25	        cjne    a,#res,??0402
 4702+ 2			        ifnb    <0c4h>
 4703+ 2			        tst_psw <0c4h>,??0402
 4704+ 3  0F52	E5 70		        mov     a,saved_psw
 4705+ 3  0F54	54 C4		        anl     a,#0c4h
 4706+ 3  0F56	64 C4		        xrl     a,#0c4h
 4707+ 3  0F58	54 FE		        anl     a,#0feh
 4708+ 3  0F5A	70 1B		        jnz     ??0402
 4709+ 2			        endif
 4710+ 1			        top_ma  add,r5,??0402,<0c4h>
 4711+ 2  0F5C	7D 88		        mov     r5,#arg0
 4712+ 2  0F5E	74 98		        mov     a,#arg1
 4713+ 2			        ifnb    <0c4h>
 4714+ 2			        set_cy  0c4h
 4715+ 3	N      0000	??0420  set     (0c4h and 1)
 4716+ 3	N      0000	        if      ??0420 eq 1
 4717+ 3			        setb    c
 4718+ 3			        else
 4719+ 3  0F60	C3		        clr     c
 4720+ 3			        endif
 4721+ 2			        endif
 4722+ 2  0F61	2D		        add      a,r5
 4723+ 2			        ifnb    <0c4h>
 4724+ 2			        save_psw
 4725+ 3  0F62	85 D0 70	        mov     saved_psw,PSW
 4726+ 2			        endif
 4727+ 2  0F65	B4 20 0F	        cjne    a,#res,??0402
 4728+ 2			        ifnb    <0c4h>
 4729+ 2			        tst_psw <0c4h>,??0402
 4730+ 3  0F68	E5 70		        mov     a,saved_psw
 4731+ 3  0F6A	54 C4		        anl     a,#0c4h
 4732+ 3  0F6C	64 C4		        xrl     a,#0c4h
 4733+ 3  0F6E	54 FE		        anl     a,#0feh
 4734+ 3  0F70	70 05		        jnz     ??0402
 4735+ 2			        endif
 4736+ 1
 4737+ 1			        eot     'c',??0402
 4738+ 2			        putc    #'c'
 4739+ 3  0F72			??0422:
 4740+ 3			        ;jnb     SCON.1,putc_loop
 4741+ 3			        ;clr     SCON.1
 4742+ 3  0F72	75 99 63	        mov     SBUF,#'c'
 4743+ 2  0F75	80 06		        sjmp    ??0421
 4744+ 2  0F77			??0402:  putc    #'?'
 4745+ 3  0F77			??0423:
 4746+ 3			        ;jnb     SCON.1,putc_loop
 4747+ 3			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 86



 Line  I  Addr  Code            Source

 4748+ 3  0F77	75 99 3F	        mov     SBUF,#'?'
 4749+ 2  0F7A	75 6E 01	        mov     fail,#001h
 4750+ 2  0F7D			??0421:
 4751+ 1
 4752+ 1			        top_ma  add,r6,??0399,<0c4h>
 4753+ 2  0F7D	7E 88		        mov     r6,#arg0
 4754+ 2  0F7F	74 98		        mov     a,#arg1
 4755+ 2			        ifnb    <0c4h>
 4756+ 2			        set_cy  0c4h
 4757+ 3	N      0000	??0424  set     (0c4h and 1)
 4758+ 3	N      0000	        if      ??0424 eq 1
 4759+ 3			        setb    c
 4760+ 3			        else
 4761+ 3  0F81	C3		        clr     c
 4762+ 3			        endif
 4763+ 2			        endif
 4764+ 2  0F82	2E		        add      a,r6
 4765+ 2			        ifnb    <0c4h>
 4766+ 2			        save_psw
 4767+ 3  0F83	85 D0 70	        mov     saved_psw,PSW
 4768+ 2			        endif
 4769+ 2  0F86	B4 20 25	        cjne    a,#res,??0399
 4770+ 2			        ifnb    <0c4h>
 4771+ 2			        tst_psw <0c4h>,??0399
 4772+ 3  0F89	E5 70		        mov     a,saved_psw
 4773+ 3  0F8B	54 C4		        anl     a,#0c4h
 4774+ 3  0F8D	64 C4		        xrl     a,#0c4h
 4775+ 3  0F8F	54 FE		        anl     a,#0feh
 4776+ 3  0F91	70 1B		        jnz     ??0399
 4777+ 2			        endif
 4778+ 1			        top_ma  add,r7,??0399,<0c4h>
 4779+ 2  0F93	7F 88		        mov     r7,#arg0
 4780+ 2  0F95	74 98		        mov     a,#arg1
 4781+ 2			        ifnb    <0c4h>
 4782+ 2			        set_cy  0c4h
 4783+ 3	N      0000	??0425  set     (0c4h and 1)
 4784+ 3	N      0000	        if      ??0425 eq 1
 4785+ 3			        setb    c
 4786+ 3			        else
 4787+ 3  0F97	C3		        clr     c
 4788+ 3			        endif
 4789+ 2			        endif
 4790+ 2  0F98	2F		        add      a,r7
 4791+ 2			        ifnb    <0c4h>
 4792+ 2			        save_psw
 4793+ 3  0F99	85 D0 70	        mov     saved_psw,PSW
 4794+ 2			        endif
 4795+ 2  0F9C	B4 20 0F	        cjne    a,#res,??0399
 4796+ 2			        ifnb    <0c4h>
 4797+ 2			        tst_psw <0c4h>,??0399
 4798+ 3  0F9F	E5 70		        mov     a,saved_psw
 4799+ 3  0FA1	54 C4		        anl     a,#0c4h
 4800+ 3  0FA3	64 C4		        xrl     a,#0c4h
 4801+ 3  0FA5	54 FE		        anl     a,#0feh
 4802+ 3  0FA7	70 05		        jnz     ??0399
 4803+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 87



 Line  I  Addr  Code            Source

 4804+ 1
 4805+ 1			        eot     'd',??0399
 4806+ 2			        putc    #'d'
 4807+ 3  0FA9			??0427:
 4808+ 3			        ;jnb     SCON.1,putc_loop
 4809+ 3			        ;clr     SCON.1
 4810+ 3  0FA9	75 99 64	        mov     SBUF,#'d'
 4811+ 2  0FAC	80 06		        sjmp    ??0426
 4812+ 2  0FAE			??0399:  putc    #'?'
 4813+ 3  0FAE			??0428:
 4814+ 3			        ;jnb     SCON.1,putc_loop
 4815+ 3			        ;clr     SCON.1
 4816+ 3  0FAE	75 99 3F	        mov     SBUF,#'?'
 4817+ 2  0FB1	75 6E 01	        mov     fail,#001h
 4818+ 2  0FB4			??0426:
 4819+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 4820+ 1
 4821+ 1			        ; Optionally test immediate addressing modes.
 4822+ 1
 4823+ 1	N      FFFF	        if      (01h and 1) ne 0
 4824+ 1			        ; Test <op> A, #arg1...
 4825+ 1			        top_mb  add,a,??0403,<0c4h>
 4826+ 2  0FB4	74 98		        mov     a,#arg1
 4827+ 2			        ifnb    <0c4h>
 4828+ 2			        set_cy  0c4h
 4829+ 3	N      0000	??0429  set     (0c4h and 1)
 4830+ 3	N      0000	        if      ??0429 eq 1
 4831+ 3			        setb    c
 4832+ 3			        else
 4833+ 3  0FB6	C3		        clr     c
 4834+ 3			        endif
 4835+ 2			        endif
 4836+ 2  0FB7	24 88		        add      a,#arg0
 4837+ 2			        ifnb    <0c4h>
 4838+ 2			        save_psw
 4839+ 3  0FB9	85 D0 70	        mov     saved_psw,PSW
 4840+ 2			        endif
 4841+ 2  0FBC	F5 E0		        mov     ACC,a
 4842+ 2  0FBE	B4 20 0F	        cjne    a,#res,??0403
 4843+ 2			        ifnb    <0c4h>
 4844+ 2			        tst_psw <0c4h>,??0403
 4845+ 3  0FC1	E5 70		        mov     a,saved_psw
 4846+ 3  0FC3	54 C4		        anl     a,#0c4h
 4847+ 3  0FC5	64 C4		        xrl     a,#0c4h
 4848+ 3  0FC7	54 FE		        anl     a,#0feh
 4849+ 3  0FC9	70 05		        jnz     ??0403
 4850+ 2			        endif
 4851+ 1			        eot     'e',??0403
 4852+ 2			        putc    #'e'
 4853+ 3  0FCB			??0431:
 4854+ 3			        ;jnb     SCON.1,putc_loop
 4855+ 3			        ;clr     SCON.1
 4856+ 3  0FCB	75 99 65	        mov     SBUF,#'e'
 4857+ 2  0FCE	80 06		        sjmp    ??0430
 4858+ 2  0FD0			??0403:  putc    #'?'
 4859+ 3  0FD0			??0432:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 88



 Line  I  Addr  Code            Source

 4860+ 3			        ;jnb     SCON.1,putc_loop
 4861+ 3			        ;clr     SCON.1
 4862+ 3  0FD0	75 99 3F	        mov     SBUF,#'?'
 4863+ 2  0FD3	75 6E 01	        mov     fail,#001h
 4864+ 2  0FD6			??0430:
 4865+ 1			        endif
 4866+ 1
 4867+ 1	N      0000	        if      (01h and 2) ne 0
 4868+ 1			        ; ...and <op> dir, #arg1
 4869+ 1			        top_mb  add,dir0,??0404,<0c4h>
 4870+ 1			        eot     'f',??0404
 4871+ 1			        endif
 4872+ 1
 4873+ 1			        ; Optionally test <op> dir, A
 4874+ 1	N      0000	        if      (01h and 4) ne 0
 4875+ 1			        top_mc  add,??0405,<0c4h>
 4876+ 1			        eot     'g',??0405
 4877+ 1			        endif
 4878+ 1
 4879:				        putc    #'3'
 4880+ 1  0FD6			??0433:
 4881+ 1			        ;jnb     SCON.1,putc_loop
 4882+ 1			        ;clr     SCON.1
 4883+ 1  0FD6	75 99 33	        mov     SBUF,#'3'
 4884:				        tst_alu add,043h,0fbh,03eh,01h,080h     ;  CY /AC /OV
 4885+ 1			        ; Put the argument and result data into variables for easier access
 4886+ 1	N      0043	        arg0    set 043h
 4887+ 1	N      00FB	        arg1    set 0fbh
 4888+ 1	N      003E	        res     set 03eh
 4889+ 1
 4890+ 1			        ; Test <op> A, dir
 4891+ 1			        top_ma  add,dir0,??0435,<080h>
 4892+ 2  0FD9	75 60 43	        mov     dir0,#arg0
 4893+ 2  0FDC	74 FB		        mov     a,#arg1
 4894+ 2			        ifnb    <080h>
 4895+ 2			        set_cy  080h
 4896+ 3	N      0000	??0441  set     (080h and 1)
 4897+ 3	N      0000	        if      ??0441 eq 1
 4898+ 3			        setb    c
 4899+ 3			        else
 4900+ 3  0FDE	C3		        clr     c
 4901+ 3			        endif
 4902+ 2			        endif
 4903+ 2  0FDF	25 60		        add      a,dir0
 4904+ 2			        ifnb    <080h>
 4905+ 2			        save_psw
 4906+ 3  0FE1	85 D0 70	        mov     saved_psw,PSW
 4907+ 2			        endif
 4908+ 2  0FE4	B4 3E 6B	        cjne    a,#res,??0435
 4909+ 2			        ifnb    <080h>
 4910+ 2			        tst_psw <080h>,??0435
 4911+ 3  0FE7	E5 70		        mov     a,saved_psw
 4912+ 3  0FE9	54 C4		        anl     a,#0c4h
 4913+ 3  0FEB	64 80		        xrl     a,#080h
 4914+ 3  0FED	54 FE		        anl     a,#0feh
 4915+ 3  0FEF	70 61		        jnz     ??0435

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 89



 Line  I  Addr  Code            Source

 4916+ 2			        endif
 4917+ 1			        ; Test <op> A, @R0
 4918+ 1  0FF1	78 60		        mov     r0,#dir0
 4919+ 1			        top_ma  add,@r0,??0435,<080h>
 4920+ 2  0FF3	76 43		        mov     @r0,#arg0
 4921+ 2  0FF5	74 FB		        mov     a,#arg1
 4922+ 2			        ifnb    <080h>
 4923+ 2			        set_cy  080h
 4924+ 3	N      0000	??0442  set     (080h and 1)
 4925+ 3	N      0000	        if      ??0442 eq 1
 4926+ 3			        setb    c
 4927+ 3			        else
 4928+ 3  0FF7	C3		        clr     c
 4929+ 3			        endif
 4930+ 2			        endif
 4931+ 2  0FF8	26		        add      a,@r0
 4932+ 2			        ifnb    <080h>
 4933+ 2			        save_psw
 4934+ 3  0FF9	85 D0 70	        mov     saved_psw,PSW
 4935+ 2			        endif
 4936+ 2  0FFC	B4 3E 53	        cjne    a,#res,??0435
 4937+ 2			        ifnb    <080h>
 4938+ 2			        tst_psw <080h>,??0435
 4939+ 3  0FFF	E5 70		        mov     a,saved_psw
 4940+ 3  1001	54 C4		        anl     a,#0c4h
 4941+ 3  1003	64 80		        xrl     a,#080h
 4942+ 3  1005	54 FE		        anl     a,#0feh
 4943+ 3  1007	70 49		        jnz     ??0435
 4944+ 2			        endif
 4945+ 1			        ; Test <op> A, @R1
 4946+ 1  1009	79 31		        mov     r1,#031h
 4947+ 1			        top_ma  add,@r1,??0435,<080h>
 4948+ 2  100B	77 43		        mov     @r1,#arg0
 4949+ 2  100D	74 FB		        mov     a,#arg1
 4950+ 2			        ifnb    <080h>
 4951+ 2			        set_cy  080h
 4952+ 3	N      0000	??0443  set     (080h and 1)
 4953+ 3	N      0000	        if      ??0443 eq 1
 4954+ 3			        setb    c
 4955+ 3			        else
 4956+ 3  100F	C3		        clr     c
 4957+ 3			        endif
 4958+ 2			        endif
 4959+ 2  1010	27		        add      a,@r1
 4960+ 2			        ifnb    <080h>
 4961+ 2			        save_psw
 4962+ 3  1011	85 D0 70	        mov     saved_psw,PSW
 4963+ 2			        endif
 4964+ 2  1014	B4 3E 3B	        cjne    a,#res,??0435
 4965+ 2			        ifnb    <080h>
 4966+ 2			        tst_psw <080h>,??0435
 4967+ 3  1017	E5 70		        mov     a,saved_psw
 4968+ 3  1019	54 C4		        anl     a,#0c4h
 4969+ 3  101B	64 80		        xrl     a,#080h
 4970+ 3  101D	54 FE		        anl     a,#0feh
 4971+ 3  101F	70 31		        jnz     ??0435

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 90



 Line  I  Addr  Code            Source

 4972+ 2			        endif
 4973+ 1
 4974+ 1			        ; Now test <op> A, Rn for n in 0..7
 4975+ 1			        top_ma  add,r0,??0435,<080h>
 4976+ 2  1021	78 43		        mov     r0,#arg0
 4977+ 2  1023	74 FB		        mov     a,#arg1
 4978+ 2			        ifnb    <080h>
 4979+ 2			        set_cy  080h
 4980+ 3	N      0000	??0444  set     (080h and 1)
 4981+ 3	N      0000	        if      ??0444 eq 1
 4982+ 3			        setb    c
 4983+ 3			        else
 4984+ 3  1025	C3		        clr     c
 4985+ 3			        endif
 4986+ 2			        endif
 4987+ 2  1026	28		        add      a,r0
 4988+ 2			        ifnb    <080h>
 4989+ 2			        save_psw
 4990+ 3  1027	85 D0 70	        mov     saved_psw,PSW
 4991+ 2			        endif
 4992+ 2  102A	B4 3E 25	        cjne    a,#res,??0435
 4993+ 2			        ifnb    <080h>
 4994+ 2			        tst_psw <080h>,??0435
 4995+ 3  102D	E5 70		        mov     a,saved_psw
 4996+ 3  102F	54 C4		        anl     a,#0c4h
 4997+ 3  1031	64 80		        xrl     a,#080h
 4998+ 3  1033	54 FE		        anl     a,#0feh
 4999+ 3  1035	70 1B		        jnz     ??0435
 5000+ 2			        endif
 5001+ 1			        top_ma  add,r1,??0435,<080h>
 5002+ 2  1037	79 43		        mov     r1,#arg0
 5003+ 2  1039	74 FB		        mov     a,#arg1
 5004+ 2			        ifnb    <080h>
 5005+ 2			        set_cy  080h
 5006+ 3	N      0000	??0445  set     (080h and 1)
 5007+ 3	N      0000	        if      ??0445 eq 1
 5008+ 3			        setb    c
 5009+ 3			        else
 5010+ 3  103B	C3		        clr     c
 5011+ 3			        endif
 5012+ 2			        endif
 5013+ 2  103C	29		        add      a,r1
 5014+ 2			        ifnb    <080h>
 5015+ 2			        save_psw
 5016+ 3  103D	85 D0 70	        mov     saved_psw,PSW
 5017+ 2			        endif
 5018+ 2  1040	B4 3E 0F	        cjne    a,#res,??0435
 5019+ 2			        ifnb    <080h>
 5020+ 2			        tst_psw <080h>,??0435
 5021+ 3  1043	E5 70		        mov     a,saved_psw
 5022+ 3  1045	54 C4		        anl     a,#0c4h
 5023+ 3  1047	64 80		        xrl     a,#080h
 5024+ 3  1049	54 FE		        anl     a,#0feh
 5025+ 3  104B	70 05		        jnz     ??0435
 5026+ 2			        endif
 5027+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 91



 Line  I  Addr  Code            Source

 5028+ 1			        eot     'a',??0435
 5029+ 2			        putc    #'a'
 5030+ 3  104D			??0447:
 5031+ 3			        ;jnb     SCON.1,putc_loop
 5032+ 3			        ;clr     SCON.1
 5033+ 3  104D	75 99 61	        mov     SBUF,#'a'
 5034+ 2  1050	80 06		        sjmp    ??0446
 5035+ 2  1052			??0435:  putc    #'?'
 5036+ 3  1052			??0448:
 5037+ 3			        ;jnb     SCON.1,putc_loop
 5038+ 3			        ;clr     SCON.1
 5039+ 3  1052	75 99 3F	        mov     SBUF,#'?'
 5040+ 2  1055	75 6E 01	        mov     fail,#001h
 5041+ 2  1058			??0446:
 5042+ 1
 5043+ 1			        top_ma  add,r2,??0436,<080h>
 5044+ 2  1058	7A 43		        mov     r2,#arg0
 5045+ 2  105A	74 FB		        mov     a,#arg1
 5046+ 2			        ifnb    <080h>
 5047+ 2			        set_cy  080h
 5048+ 3	N      0000	??0449  set     (080h and 1)
 5049+ 3	N      0000	        if      ??0449 eq 1
 5050+ 3			        setb    c
 5051+ 3			        else
 5052+ 3  105C	C3		        clr     c
 5053+ 3			        endif
 5054+ 2			        endif
 5055+ 2  105D	2A		        add      a,r2
 5056+ 2			        ifnb    <080h>
 5057+ 2			        save_psw
 5058+ 3  105E	85 D0 70	        mov     saved_psw,PSW
 5059+ 2			        endif
 5060+ 2  1061	B4 3E 25	        cjne    a,#res,??0436
 5061+ 2			        ifnb    <080h>
 5062+ 2			        tst_psw <080h>,??0436
 5063+ 3  1064	E5 70		        mov     a,saved_psw
 5064+ 3  1066	54 C4		        anl     a,#0c4h
 5065+ 3  1068	64 80		        xrl     a,#080h
 5066+ 3  106A	54 FE		        anl     a,#0feh
 5067+ 3  106C	70 1B		        jnz     ??0436
 5068+ 2			        endif
 5069+ 1			        top_ma  add,r3,??0436,<080h>
 5070+ 2  106E	7B 43		        mov     r3,#arg0
 5071+ 2  1070	74 FB		        mov     a,#arg1
 5072+ 2			        ifnb    <080h>
 5073+ 2			        set_cy  080h
 5074+ 3	N      0000	??0450  set     (080h and 1)
 5075+ 3	N      0000	        if      ??0450 eq 1
 5076+ 3			        setb    c
 5077+ 3			        else
 5078+ 3  1072	C3		        clr     c
 5079+ 3			        endif
 5080+ 2			        endif
 5081+ 2  1073	2B		        add      a,r3
 5082+ 2			        ifnb    <080h>
 5083+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 92



 Line  I  Addr  Code            Source

 5084+ 3  1074	85 D0 70	        mov     saved_psw,PSW
 5085+ 2			        endif
 5086+ 2  1077	B4 3E 0F	        cjne    a,#res,??0436
 5087+ 2			        ifnb    <080h>
 5088+ 2			        tst_psw <080h>,??0436
 5089+ 3  107A	E5 70		        mov     a,saved_psw
 5090+ 3  107C	54 C4		        anl     a,#0c4h
 5091+ 3  107E	64 80		        xrl     a,#080h
 5092+ 3  1080	54 FE		        anl     a,#0feh
 5093+ 3  1082	70 05		        jnz     ??0436
 5094+ 2			        endif
 5095+ 1
 5096+ 1			        eot     'b',??0436
 5097+ 2			        putc    #'b'
 5098+ 3  1084			??0452:
 5099+ 3			        ;jnb     SCON.1,putc_loop
 5100+ 3			        ;clr     SCON.1
 5101+ 3  1084	75 99 62	        mov     SBUF,#'b'
 5102+ 2  1087	80 06		        sjmp    ??0451
 5103+ 2  1089			??0436:  putc    #'?'
 5104+ 3  1089			??0453:
 5105+ 3			        ;jnb     SCON.1,putc_loop
 5106+ 3			        ;clr     SCON.1
 5107+ 3  1089	75 99 3F	        mov     SBUF,#'?'
 5108+ 2  108C	75 6E 01	        mov     fail,#001h
 5109+ 2  108F			??0451:
 5110+ 1
 5111+ 1			        top_ma  add,r4,??0437,<080h>
 5112+ 2  108F	7C 43		        mov     r4,#arg0
 5113+ 2  1091	74 FB		        mov     a,#arg1
 5114+ 2			        ifnb    <080h>
 5115+ 2			        set_cy  080h
 5116+ 3	N      0000	??0454  set     (080h and 1)
 5117+ 3	N      0000	        if      ??0454 eq 1
 5118+ 3			        setb    c
 5119+ 3			        else
 5120+ 3  1093	C3		        clr     c
 5121+ 3			        endif
 5122+ 2			        endif
 5123+ 2  1094	2C		        add      a,r4
 5124+ 2			        ifnb    <080h>
 5125+ 2			        save_psw
 5126+ 3  1095	85 D0 70	        mov     saved_psw,PSW
 5127+ 2			        endif
 5128+ 2  1098	B4 3E 25	        cjne    a,#res,??0437
 5129+ 2			        ifnb    <080h>
 5130+ 2			        tst_psw <080h>,??0437
 5131+ 3  109B	E5 70		        mov     a,saved_psw
 5132+ 3  109D	54 C4		        anl     a,#0c4h
 5133+ 3  109F	64 80		        xrl     a,#080h
 5134+ 3  10A1	54 FE		        anl     a,#0feh
 5135+ 3  10A3	70 1B		        jnz     ??0437
 5136+ 2			        endif
 5137+ 1			        top_ma  add,r5,??0437,<080h>
 5138+ 2  10A5	7D 43		        mov     r5,#arg0
 5139+ 2  10A7	74 FB		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 93



 Line  I  Addr  Code            Source

 5140+ 2			        ifnb    <080h>
 5141+ 2			        set_cy  080h
 5142+ 3	N      0000	??0455  set     (080h and 1)
 5143+ 3	N      0000	        if      ??0455 eq 1
 5144+ 3			        setb    c
 5145+ 3			        else
 5146+ 3  10A9	C3		        clr     c
 5147+ 3			        endif
 5148+ 2			        endif
 5149+ 2  10AA	2D		        add      a,r5
 5150+ 2			        ifnb    <080h>
 5151+ 2			        save_psw
 5152+ 3  10AB	85 D0 70	        mov     saved_psw,PSW
 5153+ 2			        endif
 5154+ 2  10AE	B4 3E 0F	        cjne    a,#res,??0437
 5155+ 2			        ifnb    <080h>
 5156+ 2			        tst_psw <080h>,??0437
 5157+ 3  10B1	E5 70		        mov     a,saved_psw
 5158+ 3  10B3	54 C4		        anl     a,#0c4h
 5159+ 3  10B5	64 80		        xrl     a,#080h
 5160+ 3  10B7	54 FE		        anl     a,#0feh
 5161+ 3  10B9	70 05		        jnz     ??0437
 5162+ 2			        endif
 5163+ 1
 5164+ 1			        eot     'c',??0437
 5165+ 2			        putc    #'c'
 5166+ 3  10BB			??0457:
 5167+ 3			        ;jnb     SCON.1,putc_loop
 5168+ 3			        ;clr     SCON.1
 5169+ 3  10BB	75 99 63	        mov     SBUF,#'c'
 5170+ 2  10BE	80 06		        sjmp    ??0456
 5171+ 2  10C0			??0437:  putc    #'?'
 5172+ 3  10C0			??0458:
 5173+ 3			        ;jnb     SCON.1,putc_loop
 5174+ 3			        ;clr     SCON.1
 5175+ 3  10C0	75 99 3F	        mov     SBUF,#'?'
 5176+ 2  10C3	75 6E 01	        mov     fail,#001h
 5177+ 2  10C6			??0456:
 5178+ 1
 5179+ 1			        top_ma  add,r6,??0434,<080h>
 5180+ 2  10C6	7E 43		        mov     r6,#arg0
 5181+ 2  10C8	74 FB		        mov     a,#arg1
 5182+ 2			        ifnb    <080h>
 5183+ 2			        set_cy  080h
 5184+ 3	N      0000	??0459  set     (080h and 1)
 5185+ 3	N      0000	        if      ??0459 eq 1
 5186+ 3			        setb    c
 5187+ 3			        else
 5188+ 3  10CA	C3		        clr     c
 5189+ 3			        endif
 5190+ 2			        endif
 5191+ 2  10CB	2E		        add      a,r6
 5192+ 2			        ifnb    <080h>
 5193+ 2			        save_psw
 5194+ 3  10CC	85 D0 70	        mov     saved_psw,PSW
 5195+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 94



 Line  I  Addr  Code            Source

 5196+ 2  10CF	B4 3E 25	        cjne    a,#res,??0434
 5197+ 2			        ifnb    <080h>
 5198+ 2			        tst_psw <080h>,??0434
 5199+ 3  10D2	E5 70		        mov     a,saved_psw
 5200+ 3  10D4	54 C4		        anl     a,#0c4h
 5201+ 3  10D6	64 80		        xrl     a,#080h
 5202+ 3  10D8	54 FE		        anl     a,#0feh
 5203+ 3  10DA	70 1B		        jnz     ??0434
 5204+ 2			        endif
 5205+ 1			        top_ma  add,r7,??0434,<080h>
 5206+ 2  10DC	7F 43		        mov     r7,#arg0
 5207+ 2  10DE	74 FB		        mov     a,#arg1
 5208+ 2			        ifnb    <080h>
 5209+ 2			        set_cy  080h
 5210+ 3	N      0000	??0460  set     (080h and 1)
 5211+ 3	N      0000	        if      ??0460 eq 1
 5212+ 3			        setb    c
 5213+ 3			        else
 5214+ 3  10E0	C3		        clr     c
 5215+ 3			        endif
 5216+ 2			        endif
 5217+ 2  10E1	2F		        add      a,r7
 5218+ 2			        ifnb    <080h>
 5219+ 2			        save_psw
 5220+ 3  10E2	85 D0 70	        mov     saved_psw,PSW
 5221+ 2			        endif
 5222+ 2  10E5	B4 3E 0F	        cjne    a,#res,??0434
 5223+ 2			        ifnb    <080h>
 5224+ 2			        tst_psw <080h>,??0434
 5225+ 3  10E8	E5 70		        mov     a,saved_psw
 5226+ 3  10EA	54 C4		        anl     a,#0c4h
 5227+ 3  10EC	64 80		        xrl     a,#080h
 5228+ 3  10EE	54 FE		        anl     a,#0feh
 5229+ 3  10F0	70 05		        jnz     ??0434
 5230+ 2			        endif
 5231+ 1
 5232+ 1			        eot     'd',??0434
 5233+ 2			        putc    #'d'
 5234+ 3  10F2			??0462:
 5235+ 3			        ;jnb     SCON.1,putc_loop
 5236+ 3			        ;clr     SCON.1
 5237+ 3  10F2	75 99 64	        mov     SBUF,#'d'
 5238+ 2  10F5	80 06		        sjmp    ??0461
 5239+ 2  10F7			??0434:  putc    #'?'
 5240+ 3  10F7			??0463:
 5241+ 3			        ;jnb     SCON.1,putc_loop
 5242+ 3			        ;clr     SCON.1
 5243+ 3  10F7	75 99 3F	        mov     SBUF,#'?'
 5244+ 2  10FA	75 6E 01	        mov     fail,#001h
 5245+ 2  10FD			??0461:
 5246+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 5247+ 1
 5248+ 1			        ; Optionally test immediate addressing modes.
 5249+ 1
 5250+ 1	N      FFFF	        if      (01h and 1) ne 0
 5251+ 1			        ; Test <op> A, #arg1...

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 95



 Line  I  Addr  Code            Source

 5252+ 1			        top_mb  add,a,??0438,<080h>
 5253+ 2  10FD	74 FB		        mov     a,#arg1
 5254+ 2			        ifnb    <080h>
 5255+ 2			        set_cy  080h
 5256+ 3	N      0000	??0464  set     (080h and 1)
 5257+ 3	N      0000	        if      ??0464 eq 1
 5258+ 3			        setb    c
 5259+ 3			        else
 5260+ 3  10FF	C3		        clr     c
 5261+ 3			        endif
 5262+ 2			        endif
 5263+ 2  1100	24 43		        add      a,#arg0
 5264+ 2			        ifnb    <080h>
 5265+ 2			        save_psw
 5266+ 3  1102	85 D0 70	        mov     saved_psw,PSW
 5267+ 2			        endif
 5268+ 2  1105	F5 E0		        mov     ACC,a
 5269+ 2  1107	B4 3E 0F	        cjne    a,#res,??0438
 5270+ 2			        ifnb    <080h>
 5271+ 2			        tst_psw <080h>,??0438
 5272+ 3  110A	E5 70		        mov     a,saved_psw
 5273+ 3  110C	54 C4		        anl     a,#0c4h
 5274+ 3  110E	64 80		        xrl     a,#080h
 5275+ 3  1110	54 FE		        anl     a,#0feh
 5276+ 3  1112	70 05		        jnz     ??0438
 5277+ 2			        endif
 5278+ 1			        eot     'e',??0438
 5279+ 2			        putc    #'e'
 5280+ 3  1114			??0466:
 5281+ 3			        ;jnb     SCON.1,putc_loop
 5282+ 3			        ;clr     SCON.1
 5283+ 3  1114	75 99 65	        mov     SBUF,#'e'
 5284+ 2  1117	80 06		        sjmp    ??0465
 5285+ 2  1119			??0438:  putc    #'?'
 5286+ 3  1119			??0467:
 5287+ 3			        ;jnb     SCON.1,putc_loop
 5288+ 3			        ;clr     SCON.1
 5289+ 3  1119	75 99 3F	        mov     SBUF,#'?'
 5290+ 2  111C	75 6E 01	        mov     fail,#001h
 5291+ 2  111F			??0465:
 5292+ 1			        endif
 5293+ 1
 5294+ 1	N      0000	        if      (01h and 2) ne 0
 5295+ 1			        ; ...and <op> dir, #arg1
 5296+ 1			        top_mb  add,dir0,??0439,<080h>
 5297+ 1			        eot     'f',??0439
 5298+ 1			        endif
 5299+ 1
 5300+ 1			        ; Optionally test <op> dir, A
 5301+ 1	N      0000	        if      (01h and 4) ne 0
 5302+ 1			        top_mc  add,??0440,<080h>
 5303+ 1			        eot     'g',??0440
 5304+ 1			        endif
 5305+ 1
 5306:
 5307:				        put_crlf                    ; end of test series

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 96



 Line  I  Addr  Code            Source

 5308+ 1			        putc    #13
 5309+ 2  111F			??0468:
 5310+ 2			        ;jnb     SCON.1,putc_loop
 5311+ 2			        ;clr     SCON.1
 5312+ 2  111F	75 99 0D	        mov     SBUF,#13
 5313+ 1			        putc    #10
 5314+ 2  1122			??0469:
 5315+ 2			        ;jnb     SCON.1,putc_loop
 5316+ 2			        ;clr     SCON.1
 5317+ 2  1122	75 99 0A	        mov     SBUF,#10
 5318:
 5319:
 5320:				        ;-- Test series M ------------------------------------------------------
 5321:				        ; ADDC
 5322:				        ; (See comments for 'ALU opcode block test')
 5323:				        ; Note the test runs 4 times for different values of operands
 5324:
 5325:				        putc    #'M'                ; start of test series
 5326+ 1  1125			??0470:
 5327+ 1			        ;jnb     SCON.1,putc_loop
 5328+ 1			        ;clr     SCON.1
 5329+ 1  1125	75 99 4D	        mov     SBUF,#'M'
 5330:
 5331:				        putc    #'0'
 5332+ 1  1128			??0471:
 5333+ 1			        ;jnb     SCON.1,putc_loop
 5334+ 1			        ;clr     SCON.1
 5335+ 1  1128	75 99 30	        mov     SBUF,#'0'
 5336:				        tst_alu addc,051h,033h,084h,01h,004h     ; /CY /AC  OV
 5337+ 1			        ; Put the argument and result data into variables for easier access
 5338+ 1	N      0051	        arg0    set 051h
 5339+ 1	N      0033	        arg1    set 033h
 5340+ 1	N      0084	        res     set 084h
 5341+ 1
 5342+ 1			        ; Test <op> A, dir
 5343+ 1			        top_ma  addc,dir0,??0473,<004h>
 5344+ 2  112B	75 60 51	        mov     dir0,#arg0
 5345+ 2  112E	74 33		        mov     a,#arg1
 5346+ 2			        ifnb    <004h>
 5347+ 2			        set_cy  004h
 5348+ 3	N      0000	??0479  set     (004h and 1)
 5349+ 3	N      0000	        if      ??0479 eq 1
 5350+ 3			        setb    c
 5351+ 3			        else
 5352+ 3  1130	C3		        clr     c
 5353+ 3			        endif
 5354+ 2			        endif
 5355+ 2  1131	35 60		        addc      a,dir0
 5356+ 2			        ifnb    <004h>
 5357+ 2			        save_psw
 5358+ 3  1133	85 D0 70	        mov     saved_psw,PSW
 5359+ 2			        endif
 5360+ 2  1136	B4 84 6B	        cjne    a,#res,??0473
 5361+ 2			        ifnb    <004h>
 5362+ 2			        tst_psw <004h>,??0473
 5363+ 3  1139	E5 70		        mov     a,saved_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 97



 Line  I  Addr  Code            Source

 5364+ 3  113B	54 C4		        anl     a,#0c4h
 5365+ 3  113D	64 04		        xrl     a,#004h
 5366+ 3  113F	54 FE		        anl     a,#0feh
 5367+ 3  1141	70 61		        jnz     ??0473
 5368+ 2			        endif
 5369+ 1			        ; Test <op> A, @R0
 5370+ 1  1143	78 60		        mov     r0,#dir0
 5371+ 1			        top_ma  addc,@r0,??0473,<004h>
 5372+ 2  1145	76 51		        mov     @r0,#arg0
 5373+ 2  1147	74 33		        mov     a,#arg1
 5374+ 2			        ifnb    <004h>
 5375+ 2			        set_cy  004h
 5376+ 3	N      0000	??0480  set     (004h and 1)
 5377+ 3	N      0000	        if      ??0480 eq 1
 5378+ 3			        setb    c
 5379+ 3			        else
 5380+ 3  1149	C3		        clr     c
 5381+ 3			        endif
 5382+ 2			        endif
 5383+ 2  114A	36		        addc      a,@r0
 5384+ 2			        ifnb    <004h>
 5385+ 2			        save_psw
 5386+ 3  114B	85 D0 70	        mov     saved_psw,PSW
 5387+ 2			        endif
 5388+ 2  114E	B4 84 53	        cjne    a,#res,??0473
 5389+ 2			        ifnb    <004h>
 5390+ 2			        tst_psw <004h>,??0473
 5391+ 3  1151	E5 70		        mov     a,saved_psw
 5392+ 3  1153	54 C4		        anl     a,#0c4h
 5393+ 3  1155	64 04		        xrl     a,#004h
 5394+ 3  1157	54 FE		        anl     a,#0feh
 5395+ 3  1159	70 49		        jnz     ??0473
 5396+ 2			        endif
 5397+ 1			        ; Test <op> A, @R1
 5398+ 1  115B	79 31		        mov     r1,#031h
 5399+ 1			        top_ma  addc,@r1,??0473,<004h>
 5400+ 2  115D	77 51		        mov     @r1,#arg0
 5401+ 2  115F	74 33		        mov     a,#arg1
 5402+ 2			        ifnb    <004h>
 5403+ 2			        set_cy  004h
 5404+ 3	N      0000	??0481  set     (004h and 1)
 5405+ 3	N      0000	        if      ??0481 eq 1
 5406+ 3			        setb    c
 5407+ 3			        else
 5408+ 3  1161	C3		        clr     c
 5409+ 3			        endif
 5410+ 2			        endif
 5411+ 2  1162	37		        addc      a,@r1
 5412+ 2			        ifnb    <004h>
 5413+ 2			        save_psw
 5414+ 3  1163	85 D0 70	        mov     saved_psw,PSW
 5415+ 2			        endif
 5416+ 2  1166	B4 84 3B	        cjne    a,#res,??0473
 5417+ 2			        ifnb    <004h>
 5418+ 2			        tst_psw <004h>,??0473
 5419+ 3  1169	E5 70		        mov     a,saved_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 98



 Line  I  Addr  Code            Source

 5420+ 3  116B	54 C4		        anl     a,#0c4h
 5421+ 3  116D	64 04		        xrl     a,#004h
 5422+ 3  116F	54 FE		        anl     a,#0feh
 5423+ 3  1171	70 31		        jnz     ??0473
 5424+ 2			        endif
 5425+ 1
 5426+ 1			        ; Now test <op> A, Rn for n in 0..7
 5427+ 1			        top_ma  addc,r0,??0473,<004h>
 5428+ 2  1173	78 51		        mov     r0,#arg0
 5429+ 2  1175	74 33		        mov     a,#arg1
 5430+ 2			        ifnb    <004h>
 5431+ 2			        set_cy  004h
 5432+ 3	N      0000	??0482  set     (004h and 1)
 5433+ 3	N      0000	        if      ??0482 eq 1
 5434+ 3			        setb    c
 5435+ 3			        else
 5436+ 3  1177	C3		        clr     c
 5437+ 3			        endif
 5438+ 2			        endif
 5439+ 2  1178	38		        addc      a,r0
 5440+ 2			        ifnb    <004h>
 5441+ 2			        save_psw
 5442+ 3  1179	85 D0 70	        mov     saved_psw,PSW
 5443+ 2			        endif
 5444+ 2  117C	B4 84 25	        cjne    a,#res,??0473
 5445+ 2			        ifnb    <004h>
 5446+ 2			        tst_psw <004h>,??0473
 5447+ 3  117F	E5 70		        mov     a,saved_psw
 5448+ 3  1181	54 C4		        anl     a,#0c4h
 5449+ 3  1183	64 04		        xrl     a,#004h
 5450+ 3  1185	54 FE		        anl     a,#0feh
 5451+ 3  1187	70 1B		        jnz     ??0473
 5452+ 2			        endif
 5453+ 1			        top_ma  addc,r1,??0473,<004h>
 5454+ 2  1189	79 51		        mov     r1,#arg0
 5455+ 2  118B	74 33		        mov     a,#arg1
 5456+ 2			        ifnb    <004h>
 5457+ 2			        set_cy  004h
 5458+ 3	N      0000	??0483  set     (004h and 1)
 5459+ 3	N      0000	        if      ??0483 eq 1
 5460+ 3			        setb    c
 5461+ 3			        else
 5462+ 3  118D	C3		        clr     c
 5463+ 3			        endif
 5464+ 2			        endif
 5465+ 2  118E	39		        addc      a,r1
 5466+ 2			        ifnb    <004h>
 5467+ 2			        save_psw
 5468+ 3  118F	85 D0 70	        mov     saved_psw,PSW
 5469+ 2			        endif
 5470+ 2  1192	B4 84 0F	        cjne    a,#res,??0473
 5471+ 2			        ifnb    <004h>
 5472+ 2			        tst_psw <004h>,??0473
 5473+ 3  1195	E5 70		        mov     a,saved_psw
 5474+ 3  1197	54 C4		        anl     a,#0c4h
 5475+ 3  1199	64 04		        xrl     a,#004h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 99



 Line  I  Addr  Code            Source

 5476+ 3  119B	54 FE		        anl     a,#0feh
 5477+ 3  119D	70 05		        jnz     ??0473
 5478+ 2			        endif
 5479+ 1
 5480+ 1			        eot     'a',??0473
 5481+ 2			        putc    #'a'
 5482+ 3  119F			??0485:
 5483+ 3			        ;jnb     SCON.1,putc_loop
 5484+ 3			        ;clr     SCON.1
 5485+ 3  119F	75 99 61	        mov     SBUF,#'a'
 5486+ 2  11A2	80 06		        sjmp    ??0484
 5487+ 2  11A4			??0473:  putc    #'?'
 5488+ 3  11A4			??0486:
 5489+ 3			        ;jnb     SCON.1,putc_loop
 5490+ 3			        ;clr     SCON.1
 5491+ 3  11A4	75 99 3F	        mov     SBUF,#'?'
 5492+ 2  11A7	75 6E 01	        mov     fail,#001h
 5493+ 2  11AA			??0484:
 5494+ 1
 5495+ 1			        top_ma  addc,r2,??0474,<004h>
 5496+ 2  11AA	7A 51		        mov     r2,#arg0
 5497+ 2  11AC	74 33		        mov     a,#arg1
 5498+ 2			        ifnb    <004h>
 5499+ 2			        set_cy  004h
 5500+ 3	N      0000	??0487  set     (004h and 1)
 5501+ 3	N      0000	        if      ??0487 eq 1
 5502+ 3			        setb    c
 5503+ 3			        else
 5504+ 3  11AE	C3		        clr     c
 5505+ 3			        endif
 5506+ 2			        endif
 5507+ 2  11AF	3A		        addc      a,r2
 5508+ 2			        ifnb    <004h>
 5509+ 2			        save_psw
 5510+ 3  11B0	85 D0 70	        mov     saved_psw,PSW
 5511+ 2			        endif
 5512+ 2  11B3	B4 84 25	        cjne    a,#res,??0474
 5513+ 2			        ifnb    <004h>
 5514+ 2			        tst_psw <004h>,??0474
 5515+ 3  11B6	E5 70		        mov     a,saved_psw
 5516+ 3  11B8	54 C4		        anl     a,#0c4h
 5517+ 3  11BA	64 04		        xrl     a,#004h
 5518+ 3  11BC	54 FE		        anl     a,#0feh
 5519+ 3  11BE	70 1B		        jnz     ??0474
 5520+ 2			        endif
 5521+ 1			        top_ma  addc,r3,??0474,<004h>
 5522+ 2  11C0	7B 51		        mov     r3,#arg0
 5523+ 2  11C2	74 33		        mov     a,#arg1
 5524+ 2			        ifnb    <004h>
 5525+ 2			        set_cy  004h
 5526+ 3	N      0000	??0488  set     (004h and 1)
 5527+ 3	N      0000	        if      ??0488 eq 1
 5528+ 3			        setb    c
 5529+ 3			        else
 5530+ 3  11C4	C3		        clr     c
 5531+ 3			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 100



 Line  I  Addr  Code            Source

 5532+ 2			        endif
 5533+ 2  11C5	3B		        addc      a,r3
 5534+ 2			        ifnb    <004h>
 5535+ 2			        save_psw
 5536+ 3  11C6	85 D0 70	        mov     saved_psw,PSW
 5537+ 2			        endif
 5538+ 2  11C9	B4 84 0F	        cjne    a,#res,??0474
 5539+ 2			        ifnb    <004h>
 5540+ 2			        tst_psw <004h>,??0474
 5541+ 3  11CC	E5 70		        mov     a,saved_psw
 5542+ 3  11CE	54 C4		        anl     a,#0c4h
 5543+ 3  11D0	64 04		        xrl     a,#004h
 5544+ 3  11D2	54 FE		        anl     a,#0feh
 5545+ 3  11D4	70 05		        jnz     ??0474
 5546+ 2			        endif
 5547+ 1
 5548+ 1			        eot     'b',??0474
 5549+ 2			        putc    #'b'
 5550+ 3  11D6			??0490:
 5551+ 3			        ;jnb     SCON.1,putc_loop
 5552+ 3			        ;clr     SCON.1
 5553+ 3  11D6	75 99 62	        mov     SBUF,#'b'
 5554+ 2  11D9	80 06		        sjmp    ??0489
 5555+ 2  11DB			??0474:  putc    #'?'
 5556+ 3  11DB			??0491:
 5557+ 3			        ;jnb     SCON.1,putc_loop
 5558+ 3			        ;clr     SCON.1
 5559+ 3  11DB	75 99 3F	        mov     SBUF,#'?'
 5560+ 2  11DE	75 6E 01	        mov     fail,#001h
 5561+ 2  11E1			??0489:
 5562+ 1
 5563+ 1			        top_ma  addc,r4,??0475,<004h>
 5564+ 2  11E1	7C 51		        mov     r4,#arg0
 5565+ 2  11E3	74 33		        mov     a,#arg1
 5566+ 2			        ifnb    <004h>
 5567+ 2			        set_cy  004h
 5568+ 3	N      0000	??0492  set     (004h and 1)
 5569+ 3	N      0000	        if      ??0492 eq 1
 5570+ 3			        setb    c
 5571+ 3			        else
 5572+ 3  11E5	C3		        clr     c
 5573+ 3			        endif
 5574+ 2			        endif
 5575+ 2  11E6	3C		        addc      a,r4
 5576+ 2			        ifnb    <004h>
 5577+ 2			        save_psw
 5578+ 3  11E7	85 D0 70	        mov     saved_psw,PSW
 5579+ 2			        endif
 5580+ 2  11EA	B4 84 25	        cjne    a,#res,??0475
 5581+ 2			        ifnb    <004h>
 5582+ 2			        tst_psw <004h>,??0475
 5583+ 3  11ED	E5 70		        mov     a,saved_psw
 5584+ 3  11EF	54 C4		        anl     a,#0c4h
 5585+ 3  11F1	64 04		        xrl     a,#004h
 5586+ 3  11F3	54 FE		        anl     a,#0feh
 5587+ 3  11F5	70 1B		        jnz     ??0475

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 101



 Line  I  Addr  Code            Source

 5588+ 2			        endif
 5589+ 1			        top_ma  addc,r5,??0475,<004h>
 5590+ 2  11F7	7D 51		        mov     r5,#arg0
 5591+ 2  11F9	74 33		        mov     a,#arg1
 5592+ 2			        ifnb    <004h>
 5593+ 2			        set_cy  004h
 5594+ 3	N      0000	??0493  set     (004h and 1)
 5595+ 3	N      0000	        if      ??0493 eq 1
 5596+ 3			        setb    c
 5597+ 3			        else
 5598+ 3  11FB	C3		        clr     c
 5599+ 3			        endif
 5600+ 2			        endif
 5601+ 2  11FC	3D		        addc      a,r5
 5602+ 2			        ifnb    <004h>
 5603+ 2			        save_psw
 5604+ 3  11FD	85 D0 70	        mov     saved_psw,PSW
 5605+ 2			        endif
 5606+ 2  1200	B4 84 0F	        cjne    a,#res,??0475
 5607+ 2			        ifnb    <004h>
 5608+ 2			        tst_psw <004h>,??0475
 5609+ 3  1203	E5 70		        mov     a,saved_psw
 5610+ 3  1205	54 C4		        anl     a,#0c4h
 5611+ 3  1207	64 04		        xrl     a,#004h
 5612+ 3  1209	54 FE		        anl     a,#0feh
 5613+ 3  120B	70 05		        jnz     ??0475
 5614+ 2			        endif
 5615+ 1
 5616+ 1			        eot     'c',??0475
 5617+ 2			        putc    #'c'
 5618+ 3  120D			??0495:
 5619+ 3			        ;jnb     SCON.1,putc_loop
 5620+ 3			        ;clr     SCON.1
 5621+ 3  120D	75 99 63	        mov     SBUF,#'c'
 5622+ 2  1210	80 06		        sjmp    ??0494
 5623+ 2  1212			??0475:  putc    #'?'
 5624+ 3  1212			??0496:
 5625+ 3			        ;jnb     SCON.1,putc_loop
 5626+ 3			        ;clr     SCON.1
 5627+ 3  1212	75 99 3F	        mov     SBUF,#'?'
 5628+ 2  1215	75 6E 01	        mov     fail,#001h
 5629+ 2  1218			??0494:
 5630+ 1
 5631+ 1			        top_ma  addc,r6,??0472,<004h>
 5632+ 2  1218	7E 51		        mov     r6,#arg0
 5633+ 2  121A	74 33		        mov     a,#arg1
 5634+ 2			        ifnb    <004h>
 5635+ 2			        set_cy  004h
 5636+ 3	N      0000	??0497  set     (004h and 1)
 5637+ 3	N      0000	        if      ??0497 eq 1
 5638+ 3			        setb    c
 5639+ 3			        else
 5640+ 3  121C	C3		        clr     c
 5641+ 3			        endif
 5642+ 2			        endif
 5643+ 2  121D	3E		        addc      a,r6

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 102



 Line  I  Addr  Code            Source

 5644+ 2			        ifnb    <004h>
 5645+ 2			        save_psw
 5646+ 3  121E	85 D0 70	        mov     saved_psw,PSW
 5647+ 2			        endif
 5648+ 2  1221	B4 84 25	        cjne    a,#res,??0472
 5649+ 2			        ifnb    <004h>
 5650+ 2			        tst_psw <004h>,??0472
 5651+ 3  1224	E5 70		        mov     a,saved_psw
 5652+ 3  1226	54 C4		        anl     a,#0c4h
 5653+ 3  1228	64 04		        xrl     a,#004h
 5654+ 3  122A	54 FE		        anl     a,#0feh
 5655+ 3  122C	70 1B		        jnz     ??0472
 5656+ 2			        endif
 5657+ 1			        top_ma  addc,r7,??0472,<004h>
 5658+ 2  122E	7F 51		        mov     r7,#arg0
 5659+ 2  1230	74 33		        mov     a,#arg1
 5660+ 2			        ifnb    <004h>
 5661+ 2			        set_cy  004h
 5662+ 3	N      0000	??0498  set     (004h and 1)
 5663+ 3	N      0000	        if      ??0498 eq 1
 5664+ 3			        setb    c
 5665+ 3			        else
 5666+ 3  1232	C3		        clr     c
 5667+ 3			        endif
 5668+ 2			        endif
 5669+ 2  1233	3F		        addc      a,r7
 5670+ 2			        ifnb    <004h>
 5671+ 2			        save_psw
 5672+ 3  1234	85 D0 70	        mov     saved_psw,PSW
 5673+ 2			        endif
 5674+ 2  1237	B4 84 0F	        cjne    a,#res,??0472
 5675+ 2			        ifnb    <004h>
 5676+ 2			        tst_psw <004h>,??0472
 5677+ 3  123A	E5 70		        mov     a,saved_psw
 5678+ 3  123C	54 C4		        anl     a,#0c4h
 5679+ 3  123E	64 04		        xrl     a,#004h
 5680+ 3  1240	54 FE		        anl     a,#0feh
 5681+ 3  1242	70 05		        jnz     ??0472
 5682+ 2			        endif
 5683+ 1
 5684+ 1			        eot     'd',??0472
 5685+ 2			        putc    #'d'
 5686+ 3  1244			??0500:
 5687+ 3			        ;jnb     SCON.1,putc_loop
 5688+ 3			        ;clr     SCON.1
 5689+ 3  1244	75 99 64	        mov     SBUF,#'d'
 5690+ 2  1247	80 06		        sjmp    ??0499
 5691+ 2  1249			??0472:  putc    #'?'
 5692+ 3  1249			??0501:
 5693+ 3			        ;jnb     SCON.1,putc_loop
 5694+ 3			        ;clr     SCON.1
 5695+ 3  1249	75 99 3F	        mov     SBUF,#'?'
 5696+ 2  124C	75 6E 01	        mov     fail,#001h
 5697+ 2  124F			??0499:
 5698+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 5699+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 103



 Line  I  Addr  Code            Source

 5700+ 1			        ; Optionally test immediate addressing modes.
 5701+ 1
 5702+ 1	N      FFFF	        if      (01h and 1) ne 0
 5703+ 1			        ; Test <op> A, #arg1...
 5704+ 1			        top_mb  addc,a,??0476,<004h>
 5705+ 2  124F	74 33		        mov     a,#arg1
 5706+ 2			        ifnb    <004h>
 5707+ 2			        set_cy  004h
 5708+ 3	N      0000	??0502  set     (004h and 1)
 5709+ 3	N      0000	        if      ??0502 eq 1
 5710+ 3			        setb    c
 5711+ 3			        else
 5712+ 3  1251	C3		        clr     c
 5713+ 3			        endif
 5714+ 2			        endif
 5715+ 2  1252	34 51		        addc      a,#arg0
 5716+ 2			        ifnb    <004h>
 5717+ 2			        save_psw
 5718+ 3  1254	85 D0 70	        mov     saved_psw,PSW
 5719+ 2			        endif
 5720+ 2  1257	F5 E0		        mov     ACC,a
 5721+ 2  1259	B4 84 0F	        cjne    a,#res,??0476
 5722+ 2			        ifnb    <004h>
 5723+ 2			        tst_psw <004h>,??0476
 5724+ 3  125C	E5 70		        mov     a,saved_psw
 5725+ 3  125E	54 C4		        anl     a,#0c4h
 5726+ 3  1260	64 04		        xrl     a,#004h
 5727+ 3  1262	54 FE		        anl     a,#0feh
 5728+ 3  1264	70 05		        jnz     ??0476
 5729+ 2			        endif
 5730+ 1			        eot     'e',??0476
 5731+ 2			        putc    #'e'
 5732+ 3  1266			??0504:
 5733+ 3			        ;jnb     SCON.1,putc_loop
 5734+ 3			        ;clr     SCON.1
 5735+ 3  1266	75 99 65	        mov     SBUF,#'e'
 5736+ 2  1269	80 06		        sjmp    ??0503
 5737+ 2  126B			??0476:  putc    #'?'
 5738+ 3  126B			??0505:
 5739+ 3			        ;jnb     SCON.1,putc_loop
 5740+ 3			        ;clr     SCON.1
 5741+ 3  126B	75 99 3F	        mov     SBUF,#'?'
 5742+ 2  126E	75 6E 01	        mov     fail,#001h
 5743+ 2  1271			??0503:
 5744+ 1			        endif
 5745+ 1
 5746+ 1	N      0000	        if      (01h and 2) ne 0
 5747+ 1			        ; ...and <op> dir, #arg1
 5748+ 1			        top_mb  addc,dir0,??0477,<004h>
 5749+ 1			        eot     'f',??0477
 5750+ 1			        endif
 5751+ 1
 5752+ 1			        ; Optionally test <op> dir, A
 5753+ 1	N      0000	        if      (01h and 4) ne 0
 5754+ 1			        top_mc  addc,??0478,<004h>
 5755+ 1			        eot     'g',??0478

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 104



 Line  I  Addr  Code            Source

 5756+ 1			        endif
 5757+ 1
 5758:				        putc    #'1'
 5759+ 1  1271			??0506:
 5760+ 1			        ;jnb     SCON.1,putc_loop
 5761+ 1			        ;clr     SCON.1
 5762+ 1  1271	75 99 31	        mov     SBUF,#'1'
 5763:				        tst_alu addc,081h,093h,014h,01h,084h     ;  CY /AC  OV
 5764+ 1			        ; Put the argument and result data into variables for easier access
 5765+ 1	N      0081	        arg0    set 081h
 5766+ 1	N      0093	        arg1    set 093h
 5767+ 1	N      0014	        res     set 014h
 5768+ 1
 5769+ 1			        ; Test <op> A, dir
 5770+ 1			        top_ma  addc,dir0,??0508,<084h>
 5771+ 2  1274	75 60 81	        mov     dir0,#arg0
 5772+ 2  1277	74 93		        mov     a,#arg1
 5773+ 2			        ifnb    <084h>
 5774+ 2			        set_cy  084h
 5775+ 3	N      0000	??0514  set     (084h and 1)
 5776+ 3	N      0000	        if      ??0514 eq 1
 5777+ 3			        setb    c
 5778+ 3			        else
 5779+ 3  1279	C3		        clr     c
 5780+ 3			        endif
 5781+ 2			        endif
 5782+ 2  127A	35 60		        addc      a,dir0
 5783+ 2			        ifnb    <084h>
 5784+ 2			        save_psw
 5785+ 3  127C	85 D0 70	        mov     saved_psw,PSW
 5786+ 2			        endif
 5787+ 2  127F	B4 14 6B	        cjne    a,#res,??0508
 5788+ 2			        ifnb    <084h>
 5789+ 2			        tst_psw <084h>,??0508
 5790+ 3  1282	E5 70		        mov     a,saved_psw
 5791+ 3  1284	54 C4		        anl     a,#0c4h
 5792+ 3  1286	64 84		        xrl     a,#084h
 5793+ 3  1288	54 FE		        anl     a,#0feh
 5794+ 3  128A	70 61		        jnz     ??0508
 5795+ 2			        endif
 5796+ 1			        ; Test <op> A, @R0
 5797+ 1  128C	78 60		        mov     r0,#dir0
 5798+ 1			        top_ma  addc,@r0,??0508,<084h>
 5799+ 2  128E	76 81		        mov     @r0,#arg0
 5800+ 2  1290	74 93		        mov     a,#arg1
 5801+ 2			        ifnb    <084h>
 5802+ 2			        set_cy  084h
 5803+ 3	N      0000	??0515  set     (084h and 1)
 5804+ 3	N      0000	        if      ??0515 eq 1
 5805+ 3			        setb    c
 5806+ 3			        else
 5807+ 3  1292	C3		        clr     c
 5808+ 3			        endif
 5809+ 2			        endif
 5810+ 2  1293	36		        addc      a,@r0
 5811+ 2			        ifnb    <084h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 105



 Line  I  Addr  Code            Source

 5812+ 2			        save_psw
 5813+ 3  1294	85 D0 70	        mov     saved_psw,PSW
 5814+ 2			        endif
 5815+ 2  1297	B4 14 53	        cjne    a,#res,??0508
 5816+ 2			        ifnb    <084h>
 5817+ 2			        tst_psw <084h>,??0508
 5818+ 3  129A	E5 70		        mov     a,saved_psw
 5819+ 3  129C	54 C4		        anl     a,#0c4h
 5820+ 3  129E	64 84		        xrl     a,#084h
 5821+ 3  12A0	54 FE		        anl     a,#0feh
 5822+ 3  12A2	70 49		        jnz     ??0508
 5823+ 2			        endif
 5824+ 1			        ; Test <op> A, @R1
 5825+ 1  12A4	79 31		        mov     r1,#031h
 5826+ 1			        top_ma  addc,@r1,??0508,<084h>
 5827+ 2  12A6	77 81		        mov     @r1,#arg0
 5828+ 2  12A8	74 93		        mov     a,#arg1
 5829+ 2			        ifnb    <084h>
 5830+ 2			        set_cy  084h
 5831+ 3	N      0000	??0516  set     (084h and 1)
 5832+ 3	N      0000	        if      ??0516 eq 1
 5833+ 3			        setb    c
 5834+ 3			        else
 5835+ 3  12AA	C3		        clr     c
 5836+ 3			        endif
 5837+ 2			        endif
 5838+ 2  12AB	37		        addc      a,@r1
 5839+ 2			        ifnb    <084h>
 5840+ 2			        save_psw
 5841+ 3  12AC	85 D0 70	        mov     saved_psw,PSW
 5842+ 2			        endif
 5843+ 2  12AF	B4 14 3B	        cjne    a,#res,??0508
 5844+ 2			        ifnb    <084h>
 5845+ 2			        tst_psw <084h>,??0508
 5846+ 3  12B2	E5 70		        mov     a,saved_psw
 5847+ 3  12B4	54 C4		        anl     a,#0c4h
 5848+ 3  12B6	64 84		        xrl     a,#084h
 5849+ 3  12B8	54 FE		        anl     a,#0feh
 5850+ 3  12BA	70 31		        jnz     ??0508
 5851+ 2			        endif
 5852+ 1
 5853+ 1			        ; Now test <op> A, Rn for n in 0..7
 5854+ 1			        top_ma  addc,r0,??0508,<084h>
 5855+ 2  12BC	78 81		        mov     r0,#arg0
 5856+ 2  12BE	74 93		        mov     a,#arg1
 5857+ 2			        ifnb    <084h>
 5858+ 2			        set_cy  084h
 5859+ 3	N      0000	??0517  set     (084h and 1)
 5860+ 3	N      0000	        if      ??0517 eq 1
 5861+ 3			        setb    c
 5862+ 3			        else
 5863+ 3  12C0	C3		        clr     c
 5864+ 3			        endif
 5865+ 2			        endif
 5866+ 2  12C1	38		        addc      a,r0
 5867+ 2			        ifnb    <084h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 106



 Line  I  Addr  Code            Source

 5868+ 2			        save_psw
 5869+ 3  12C2	85 D0 70	        mov     saved_psw,PSW
 5870+ 2			        endif
 5871+ 2  12C5	B4 14 25	        cjne    a,#res,??0508
 5872+ 2			        ifnb    <084h>
 5873+ 2			        tst_psw <084h>,??0508
 5874+ 3  12C8	E5 70		        mov     a,saved_psw
 5875+ 3  12CA	54 C4		        anl     a,#0c4h
 5876+ 3  12CC	64 84		        xrl     a,#084h
 5877+ 3  12CE	54 FE		        anl     a,#0feh
 5878+ 3  12D0	70 1B		        jnz     ??0508
 5879+ 2			        endif
 5880+ 1			        top_ma  addc,r1,??0508,<084h>
 5881+ 2  12D2	79 81		        mov     r1,#arg0
 5882+ 2  12D4	74 93		        mov     a,#arg1
 5883+ 2			        ifnb    <084h>
 5884+ 2			        set_cy  084h
 5885+ 3	N      0000	??0518  set     (084h and 1)
 5886+ 3	N      0000	        if      ??0518 eq 1
 5887+ 3			        setb    c
 5888+ 3			        else
 5889+ 3  12D6	C3		        clr     c
 5890+ 3			        endif
 5891+ 2			        endif
 5892+ 2  12D7	39		        addc      a,r1
 5893+ 2			        ifnb    <084h>
 5894+ 2			        save_psw
 5895+ 3  12D8	85 D0 70	        mov     saved_psw,PSW
 5896+ 2			        endif
 5897+ 2  12DB	B4 14 0F	        cjne    a,#res,??0508
 5898+ 2			        ifnb    <084h>
 5899+ 2			        tst_psw <084h>,??0508
 5900+ 3  12DE	E5 70		        mov     a,saved_psw
 5901+ 3  12E0	54 C4		        anl     a,#0c4h
 5902+ 3  12E2	64 84		        xrl     a,#084h
 5903+ 3  12E4	54 FE		        anl     a,#0feh
 5904+ 3  12E6	70 05		        jnz     ??0508
 5905+ 2			        endif
 5906+ 1
 5907+ 1			        eot     'a',??0508
 5908+ 2			        putc    #'a'
 5909+ 3  12E8			??0520:
 5910+ 3			        ;jnb     SCON.1,putc_loop
 5911+ 3			        ;clr     SCON.1
 5912+ 3  12E8	75 99 61	        mov     SBUF,#'a'
 5913+ 2  12EB	80 06		        sjmp    ??0519
 5914+ 2  12ED			??0508:  putc    #'?'
 5915+ 3  12ED			??0521:
 5916+ 3			        ;jnb     SCON.1,putc_loop
 5917+ 3			        ;clr     SCON.1
 5918+ 3  12ED	75 99 3F	        mov     SBUF,#'?'
 5919+ 2  12F0	75 6E 01	        mov     fail,#001h
 5920+ 2  12F3			??0519:
 5921+ 1
 5922+ 1			        top_ma  addc,r2,??0509,<084h>
 5923+ 2  12F3	7A 81		        mov     r2,#arg0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 107



 Line  I  Addr  Code            Source

 5924+ 2  12F5	74 93		        mov     a,#arg1
 5925+ 2			        ifnb    <084h>
 5926+ 2			        set_cy  084h
 5927+ 3	N      0000	??0522  set     (084h and 1)
 5928+ 3	N      0000	        if      ??0522 eq 1
 5929+ 3			        setb    c
 5930+ 3			        else
 5931+ 3  12F7	C3		        clr     c
 5932+ 3			        endif
 5933+ 2			        endif
 5934+ 2  12F8	3A		        addc      a,r2
 5935+ 2			        ifnb    <084h>
 5936+ 2			        save_psw
 5937+ 3  12F9	85 D0 70	        mov     saved_psw,PSW
 5938+ 2			        endif
 5939+ 2  12FC	B4 14 25	        cjne    a,#res,??0509
 5940+ 2			        ifnb    <084h>
 5941+ 2			        tst_psw <084h>,??0509
 5942+ 3  12FF	E5 70		        mov     a,saved_psw
 5943+ 3  1301	54 C4		        anl     a,#0c4h
 5944+ 3  1303	64 84		        xrl     a,#084h
 5945+ 3  1305	54 FE		        anl     a,#0feh
 5946+ 3  1307	70 1B		        jnz     ??0509
 5947+ 2			        endif
 5948+ 1			        top_ma  addc,r3,??0509,<084h>
 5949+ 2  1309	7B 81		        mov     r3,#arg0
 5950+ 2  130B	74 93		        mov     a,#arg1
 5951+ 2			        ifnb    <084h>
 5952+ 2			        set_cy  084h
 5953+ 3	N      0000	??0523  set     (084h and 1)
 5954+ 3	N      0000	        if      ??0523 eq 1
 5955+ 3			        setb    c
 5956+ 3			        else
 5957+ 3  130D	C3		        clr     c
 5958+ 3			        endif
 5959+ 2			        endif
 5960+ 2  130E	3B		        addc      a,r3
 5961+ 2			        ifnb    <084h>
 5962+ 2			        save_psw
 5963+ 3  130F	85 D0 70	        mov     saved_psw,PSW
 5964+ 2			        endif
 5965+ 2  1312	B4 14 0F	        cjne    a,#res,??0509
 5966+ 2			        ifnb    <084h>
 5967+ 2			        tst_psw <084h>,??0509
 5968+ 3  1315	E5 70		        mov     a,saved_psw
 5969+ 3  1317	54 C4		        anl     a,#0c4h
 5970+ 3  1319	64 84		        xrl     a,#084h
 5971+ 3  131B	54 FE		        anl     a,#0feh
 5972+ 3  131D	70 05		        jnz     ??0509
 5973+ 2			        endif
 5974+ 1
 5975+ 1			        eot     'b',??0509
 5976+ 2			        putc    #'b'
 5977+ 3  131F			??0525:
 5978+ 3			        ;jnb     SCON.1,putc_loop
 5979+ 3			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 108



 Line  I  Addr  Code            Source

 5980+ 3  131F	75 99 62	        mov     SBUF,#'b'
 5981+ 2  1322	80 06		        sjmp    ??0524
 5982+ 2  1324			??0509:  putc    #'?'
 5983+ 3  1324			??0526:
 5984+ 3			        ;jnb     SCON.1,putc_loop
 5985+ 3			        ;clr     SCON.1
 5986+ 3  1324	75 99 3F	        mov     SBUF,#'?'
 5987+ 2  1327	75 6E 01	        mov     fail,#001h
 5988+ 2  132A			??0524:
 5989+ 1
 5990+ 1			        top_ma  addc,r4,??0510,<084h>
 5991+ 2  132A	7C 81		        mov     r4,#arg0
 5992+ 2  132C	74 93		        mov     a,#arg1
 5993+ 2			        ifnb    <084h>
 5994+ 2			        set_cy  084h
 5995+ 3	N      0000	??0527  set     (084h and 1)
 5996+ 3	N      0000	        if      ??0527 eq 1
 5997+ 3			        setb    c
 5998+ 3			        else
 5999+ 3  132E	C3		        clr     c
 6000+ 3			        endif
 6001+ 2			        endif
 6002+ 2  132F	3C		        addc      a,r4
 6003+ 2			        ifnb    <084h>
 6004+ 2			        save_psw
 6005+ 3  1330	85 D0 70	        mov     saved_psw,PSW
 6006+ 2			        endif
 6007+ 2  1333	B4 14 25	        cjne    a,#res,??0510
 6008+ 2			        ifnb    <084h>
 6009+ 2			        tst_psw <084h>,??0510
 6010+ 3  1336	E5 70		        mov     a,saved_psw
 6011+ 3  1338	54 C4		        anl     a,#0c4h
 6012+ 3  133A	64 84		        xrl     a,#084h
 6013+ 3  133C	54 FE		        anl     a,#0feh
 6014+ 3  133E	70 1B		        jnz     ??0510
 6015+ 2			        endif
 6016+ 1			        top_ma  addc,r5,??0510,<084h>
 6017+ 2  1340	7D 81		        mov     r5,#arg0
 6018+ 2  1342	74 93		        mov     a,#arg1
 6019+ 2			        ifnb    <084h>
 6020+ 2			        set_cy  084h
 6021+ 3	N      0000	??0528  set     (084h and 1)
 6022+ 3	N      0000	        if      ??0528 eq 1
 6023+ 3			        setb    c
 6024+ 3			        else
 6025+ 3  1344	C3		        clr     c
 6026+ 3			        endif
 6027+ 2			        endif
 6028+ 2  1345	3D		        addc      a,r5
 6029+ 2			        ifnb    <084h>
 6030+ 2			        save_psw
 6031+ 3  1346	85 D0 70	        mov     saved_psw,PSW
 6032+ 2			        endif
 6033+ 2  1349	B4 14 0F	        cjne    a,#res,??0510
 6034+ 2			        ifnb    <084h>
 6035+ 2			        tst_psw <084h>,??0510

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 109



 Line  I  Addr  Code            Source

 6036+ 3  134C	E5 70		        mov     a,saved_psw
 6037+ 3  134E	54 C4		        anl     a,#0c4h
 6038+ 3  1350	64 84		        xrl     a,#084h
 6039+ 3  1352	54 FE		        anl     a,#0feh
 6040+ 3  1354	70 05		        jnz     ??0510
 6041+ 2			        endif
 6042+ 1
 6043+ 1			        eot     'c',??0510
 6044+ 2			        putc    #'c'
 6045+ 3  1356			??0530:
 6046+ 3			        ;jnb     SCON.1,putc_loop
 6047+ 3			        ;clr     SCON.1
 6048+ 3  1356	75 99 63	        mov     SBUF,#'c'
 6049+ 2  1359	80 06		        sjmp    ??0529
 6050+ 2  135B			??0510:  putc    #'?'
 6051+ 3  135B			??0531:
 6052+ 3			        ;jnb     SCON.1,putc_loop
 6053+ 3			        ;clr     SCON.1
 6054+ 3  135B	75 99 3F	        mov     SBUF,#'?'
 6055+ 2  135E	75 6E 01	        mov     fail,#001h
 6056+ 2  1361			??0529:
 6057+ 1
 6058+ 1			        top_ma  addc,r6,??0507,<084h>
 6059+ 2  1361	7E 81		        mov     r6,#arg0
 6060+ 2  1363	74 93		        mov     a,#arg1
 6061+ 2			        ifnb    <084h>
 6062+ 2			        set_cy  084h
 6063+ 3	N      0000	??0532  set     (084h and 1)
 6064+ 3	N      0000	        if      ??0532 eq 1
 6065+ 3			        setb    c
 6066+ 3			        else
 6067+ 3  1365	C3		        clr     c
 6068+ 3			        endif
 6069+ 2			        endif
 6070+ 2  1366	3E		        addc      a,r6
 6071+ 2			        ifnb    <084h>
 6072+ 2			        save_psw
 6073+ 3  1367	85 D0 70	        mov     saved_psw,PSW
 6074+ 2			        endif
 6075+ 2  136A	B4 14 25	        cjne    a,#res,??0507
 6076+ 2			        ifnb    <084h>
 6077+ 2			        tst_psw <084h>,??0507
 6078+ 3  136D	E5 70		        mov     a,saved_psw
 6079+ 3  136F	54 C4		        anl     a,#0c4h
 6080+ 3  1371	64 84		        xrl     a,#084h
 6081+ 3  1373	54 FE		        anl     a,#0feh
 6082+ 3  1375	70 1B		        jnz     ??0507
 6083+ 2			        endif
 6084+ 1			        top_ma  addc,r7,??0507,<084h>
 6085+ 2  1377	7F 81		        mov     r7,#arg0
 6086+ 2  1379	74 93		        mov     a,#arg1
 6087+ 2			        ifnb    <084h>
 6088+ 2			        set_cy  084h
 6089+ 3	N      0000	??0533  set     (084h and 1)
 6090+ 3	N      0000	        if      ??0533 eq 1
 6091+ 3			        setb    c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 110



 Line  I  Addr  Code            Source

 6092+ 3			        else
 6093+ 3  137B	C3		        clr     c
 6094+ 3			        endif
 6095+ 2			        endif
 6096+ 2  137C	3F		        addc      a,r7
 6097+ 2			        ifnb    <084h>
 6098+ 2			        save_psw
 6099+ 3  137D	85 D0 70	        mov     saved_psw,PSW
 6100+ 2			        endif
 6101+ 2  1380	B4 14 0F	        cjne    a,#res,??0507
 6102+ 2			        ifnb    <084h>
 6103+ 2			        tst_psw <084h>,??0507
 6104+ 3  1383	E5 70		        mov     a,saved_psw
 6105+ 3  1385	54 C4		        anl     a,#0c4h
 6106+ 3  1387	64 84		        xrl     a,#084h
 6107+ 3  1389	54 FE		        anl     a,#0feh
 6108+ 3  138B	70 05		        jnz     ??0507
 6109+ 2			        endif
 6110+ 1
 6111+ 1			        eot     'd',??0507
 6112+ 2			        putc    #'d'
 6113+ 3  138D			??0535:
 6114+ 3			        ;jnb     SCON.1,putc_loop
 6115+ 3			        ;clr     SCON.1
 6116+ 3  138D	75 99 64	        mov     SBUF,#'d'
 6117+ 2  1390	80 06		        sjmp    ??0534
 6118+ 2  1392			??0507:  putc    #'?'
 6119+ 3  1392			??0536:
 6120+ 3			        ;jnb     SCON.1,putc_loop
 6121+ 3			        ;clr     SCON.1
 6122+ 3  1392	75 99 3F	        mov     SBUF,#'?'
 6123+ 2  1395	75 6E 01	        mov     fail,#001h
 6124+ 2  1398			??0534:
 6125+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 6126+ 1
 6127+ 1			        ; Optionally test immediate addressing modes.
 6128+ 1
 6129+ 1	N      FFFF	        if      (01h and 1) ne 0
 6130+ 1			        ; Test <op> A, #arg1...
 6131+ 1			        top_mb  addc,a,??0511,<084h>
 6132+ 2  1398	74 93		        mov     a,#arg1
 6133+ 2			        ifnb    <084h>
 6134+ 2			        set_cy  084h
 6135+ 3	N      0000	??0537  set     (084h and 1)
 6136+ 3	N      0000	        if      ??0537 eq 1
 6137+ 3			        setb    c
 6138+ 3			        else
 6139+ 3  139A	C3		        clr     c
 6140+ 3			        endif
 6141+ 2			        endif
 6142+ 2  139B	34 81		        addc      a,#arg0
 6143+ 2			        ifnb    <084h>
 6144+ 2			        save_psw
 6145+ 3  139D	85 D0 70	        mov     saved_psw,PSW
 6146+ 2			        endif
 6147+ 2  13A0	F5 E0		        mov     ACC,a

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 111



 Line  I  Addr  Code            Source

 6148+ 2  13A2	B4 14 0F	        cjne    a,#res,??0511
 6149+ 2			        ifnb    <084h>
 6150+ 2			        tst_psw <084h>,??0511
 6151+ 3  13A5	E5 70		        mov     a,saved_psw
 6152+ 3  13A7	54 C4		        anl     a,#0c4h
 6153+ 3  13A9	64 84		        xrl     a,#084h
 6154+ 3  13AB	54 FE		        anl     a,#0feh
 6155+ 3  13AD	70 05		        jnz     ??0511
 6156+ 2			        endif
 6157+ 1			        eot     'e',??0511
 6158+ 2			        putc    #'e'
 6159+ 3  13AF			??0539:
 6160+ 3			        ;jnb     SCON.1,putc_loop
 6161+ 3			        ;clr     SCON.1
 6162+ 3  13AF	75 99 65	        mov     SBUF,#'e'
 6163+ 2  13B2	80 06		        sjmp    ??0538
 6164+ 2  13B4			??0511:  putc    #'?'
 6165+ 3  13B4			??0540:
 6166+ 3			        ;jnb     SCON.1,putc_loop
 6167+ 3			        ;clr     SCON.1
 6168+ 3  13B4	75 99 3F	        mov     SBUF,#'?'
 6169+ 2  13B7	75 6E 01	        mov     fail,#001h
 6170+ 2  13BA			??0538:
 6171+ 1			        endif
 6172+ 1
 6173+ 1	N      0000	        if      (01h and 2) ne 0
 6174+ 1			        ; ...and <op> dir, #arg1
 6175+ 1			        top_mb  addc,dir0,??0512,<084h>
 6176+ 1			        eot     'f',??0512
 6177+ 1			        endif
 6178+ 1
 6179+ 1			        ; Optionally test <op> dir, A
 6180+ 1	N      0000	        if      (01h and 4) ne 0
 6181+ 1			        top_mc  addc,??0513,<084h>
 6182+ 1			        eot     'g',??0513
 6183+ 1			        endif
 6184+ 1
 6185:				        putc    #'2'
 6186+ 1  13BA			??0541:
 6187+ 1			        ;jnb     SCON.1,putc_loop
 6188+ 1			        ;clr     SCON.1
 6189+ 1  13BA	75 99 32	        mov     SBUF,#'2'
 6190:				        tst_alu addc,088h,098h,020h,01h,0c4h     ;  CY  AC  OV
 6191+ 1			        ; Put the argument and result data into variables for easier access
 6192+ 1	N      0088	        arg0    set 088h
 6193+ 1	N      0098	        arg1    set 098h
 6194+ 1	N      0020	        res     set 020h
 6195+ 1
 6196+ 1			        ; Test <op> A, dir
 6197+ 1			        top_ma  addc,dir0,??0543,<0c4h>
 6198+ 2  13BD	75 60 88	        mov     dir0,#arg0
 6199+ 2  13C0	74 98		        mov     a,#arg1
 6200+ 2			        ifnb    <0c4h>
 6201+ 2			        set_cy  0c4h
 6202+ 3	N      0000	??0549  set     (0c4h and 1)
 6203+ 3	N      0000	        if      ??0549 eq 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 112



 Line  I  Addr  Code            Source

 6204+ 3			        setb    c
 6205+ 3			        else
 6206+ 3  13C2	C3		        clr     c
 6207+ 3			        endif
 6208+ 2			        endif
 6209+ 2  13C3	35 60		        addc      a,dir0
 6210+ 2			        ifnb    <0c4h>
 6211+ 2			        save_psw
 6212+ 3  13C5	85 D0 70	        mov     saved_psw,PSW
 6213+ 2			        endif
 6214+ 2  13C8	B4 20 6B	        cjne    a,#res,??0543
 6215+ 2			        ifnb    <0c4h>
 6216+ 2			        tst_psw <0c4h>,??0543
 6217+ 3  13CB	E5 70		        mov     a,saved_psw
 6218+ 3  13CD	54 C4		        anl     a,#0c4h
 6219+ 3  13CF	64 C4		        xrl     a,#0c4h
 6220+ 3  13D1	54 FE		        anl     a,#0feh
 6221+ 3  13D3	70 61		        jnz     ??0543
 6222+ 2			        endif
 6223+ 1			        ; Test <op> A, @R0
 6224+ 1  13D5	78 60		        mov     r0,#dir0
 6225+ 1			        top_ma  addc,@r0,??0543,<0c4h>
 6226+ 2  13D7	76 88		        mov     @r0,#arg0
 6227+ 2  13D9	74 98		        mov     a,#arg1
 6228+ 2			        ifnb    <0c4h>
 6229+ 2			        set_cy  0c4h
 6230+ 3	N      0000	??0550  set     (0c4h and 1)
 6231+ 3	N      0000	        if      ??0550 eq 1
 6232+ 3			        setb    c
 6233+ 3			        else
 6234+ 3  13DB	C3		        clr     c
 6235+ 3			        endif
 6236+ 2			        endif
 6237+ 2  13DC	36		        addc      a,@r0
 6238+ 2			        ifnb    <0c4h>
 6239+ 2			        save_psw
 6240+ 3  13DD	85 D0 70	        mov     saved_psw,PSW
 6241+ 2			        endif
 6242+ 2  13E0	B4 20 53	        cjne    a,#res,??0543
 6243+ 2			        ifnb    <0c4h>
 6244+ 2			        tst_psw <0c4h>,??0543
 6245+ 3  13E3	E5 70		        mov     a,saved_psw
 6246+ 3  13E5	54 C4		        anl     a,#0c4h
 6247+ 3  13E7	64 C4		        xrl     a,#0c4h
 6248+ 3  13E9	54 FE		        anl     a,#0feh
 6249+ 3  13EB	70 49		        jnz     ??0543
 6250+ 2			        endif
 6251+ 1			        ; Test <op> A, @R1
 6252+ 1  13ED	79 31		        mov     r1,#031h
 6253+ 1			        top_ma  addc,@r1,??0543,<0c4h>
 6254+ 2  13EF	77 88		        mov     @r1,#arg0
 6255+ 2  13F1	74 98		        mov     a,#arg1
 6256+ 2			        ifnb    <0c4h>
 6257+ 2			        set_cy  0c4h
 6258+ 3	N      0000	??0551  set     (0c4h and 1)
 6259+ 3	N      0000	        if      ??0551 eq 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 113



 Line  I  Addr  Code            Source

 6260+ 3			        setb    c
 6261+ 3			        else
 6262+ 3  13F3	C3		        clr     c
 6263+ 3			        endif
 6264+ 2			        endif
 6265+ 2  13F4	37		        addc      a,@r1
 6266+ 2			        ifnb    <0c4h>
 6267+ 2			        save_psw
 6268+ 3  13F5	85 D0 70	        mov     saved_psw,PSW
 6269+ 2			        endif
 6270+ 2  13F8	B4 20 3B	        cjne    a,#res,??0543
 6271+ 2			        ifnb    <0c4h>
 6272+ 2			        tst_psw <0c4h>,??0543
 6273+ 3  13FB	E5 70		        mov     a,saved_psw
 6274+ 3  13FD	54 C4		        anl     a,#0c4h
 6275+ 3  13FF	64 C4		        xrl     a,#0c4h
 6276+ 3  1401	54 FE		        anl     a,#0feh
 6277+ 3  1403	70 31		        jnz     ??0543
 6278+ 2			        endif
 6279+ 1
 6280+ 1			        ; Now test <op> A, Rn for n in 0..7
 6281+ 1			        top_ma  addc,r0,??0543,<0c4h>
 6282+ 2  1405	78 88		        mov     r0,#arg0
 6283+ 2  1407	74 98		        mov     a,#arg1
 6284+ 2			        ifnb    <0c4h>
 6285+ 2			        set_cy  0c4h
 6286+ 3	N      0000	??0552  set     (0c4h and 1)
 6287+ 3	N      0000	        if      ??0552 eq 1
 6288+ 3			        setb    c
 6289+ 3			        else
 6290+ 3  1409	C3		        clr     c
 6291+ 3			        endif
 6292+ 2			        endif
 6293+ 2  140A	38		        addc      a,r0
 6294+ 2			        ifnb    <0c4h>
 6295+ 2			        save_psw
 6296+ 3  140B	85 D0 70	        mov     saved_psw,PSW
 6297+ 2			        endif
 6298+ 2  140E	B4 20 25	        cjne    a,#res,??0543
 6299+ 2			        ifnb    <0c4h>
 6300+ 2			        tst_psw <0c4h>,??0543
 6301+ 3  1411	E5 70		        mov     a,saved_psw
 6302+ 3  1413	54 C4		        anl     a,#0c4h
 6303+ 3  1415	64 C4		        xrl     a,#0c4h
 6304+ 3  1417	54 FE		        anl     a,#0feh
 6305+ 3  1419	70 1B		        jnz     ??0543
 6306+ 2			        endif
 6307+ 1			        top_ma  addc,r1,??0543,<0c4h>
 6308+ 2  141B	79 88		        mov     r1,#arg0
 6309+ 2  141D	74 98		        mov     a,#arg1
 6310+ 2			        ifnb    <0c4h>
 6311+ 2			        set_cy  0c4h
 6312+ 3	N      0000	??0553  set     (0c4h and 1)
 6313+ 3	N      0000	        if      ??0553 eq 1
 6314+ 3			        setb    c
 6315+ 3			        else

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 114



 Line  I  Addr  Code            Source

 6316+ 3  141F	C3		        clr     c
 6317+ 3			        endif
 6318+ 2			        endif
 6319+ 2  1420	39		        addc      a,r1
 6320+ 2			        ifnb    <0c4h>
 6321+ 2			        save_psw
 6322+ 3  1421	85 D0 70	        mov     saved_psw,PSW
 6323+ 2			        endif
 6324+ 2  1424	B4 20 0F	        cjne    a,#res,??0543
 6325+ 2			        ifnb    <0c4h>
 6326+ 2			        tst_psw <0c4h>,??0543
 6327+ 3  1427	E5 70		        mov     a,saved_psw
 6328+ 3  1429	54 C4		        anl     a,#0c4h
 6329+ 3  142B	64 C4		        xrl     a,#0c4h
 6330+ 3  142D	54 FE		        anl     a,#0feh
 6331+ 3  142F	70 05		        jnz     ??0543
 6332+ 2			        endif
 6333+ 1
 6334+ 1			        eot     'a',??0543
 6335+ 2			        putc    #'a'
 6336+ 3  1431			??0555:
 6337+ 3			        ;jnb     SCON.1,putc_loop
 6338+ 3			        ;clr     SCON.1
 6339+ 3  1431	75 99 61	        mov     SBUF,#'a'
 6340+ 2  1434	80 06		        sjmp    ??0554
 6341+ 2  1436			??0543:  putc    #'?'
 6342+ 3  1436			??0556:
 6343+ 3			        ;jnb     SCON.1,putc_loop
 6344+ 3			        ;clr     SCON.1
 6345+ 3  1436	75 99 3F	        mov     SBUF,#'?'
 6346+ 2  1439	75 6E 01	        mov     fail,#001h
 6347+ 2  143C			??0554:
 6348+ 1
 6349+ 1			        top_ma  addc,r2,??0544,<0c4h>
 6350+ 2  143C	7A 88		        mov     r2,#arg0
 6351+ 2  143E	74 98		        mov     a,#arg1
 6352+ 2			        ifnb    <0c4h>
 6353+ 2			        set_cy  0c4h
 6354+ 3	N      0000	??0557  set     (0c4h and 1)
 6355+ 3	N      0000	        if      ??0557 eq 1
 6356+ 3			        setb    c
 6357+ 3			        else
 6358+ 3  1440	C3		        clr     c
 6359+ 3			        endif
 6360+ 2			        endif
 6361+ 2  1441	3A		        addc      a,r2
 6362+ 2			        ifnb    <0c4h>
 6363+ 2			        save_psw
 6364+ 3  1442	85 D0 70	        mov     saved_psw,PSW
 6365+ 2			        endif
 6366+ 2  1445	B4 20 25	        cjne    a,#res,??0544
 6367+ 2			        ifnb    <0c4h>
 6368+ 2			        tst_psw <0c4h>,??0544
 6369+ 3  1448	E5 70		        mov     a,saved_psw
 6370+ 3  144A	54 C4		        anl     a,#0c4h
 6371+ 3  144C	64 C4		        xrl     a,#0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 115



 Line  I  Addr  Code            Source

 6372+ 3  144E	54 FE		        anl     a,#0feh
 6373+ 3  1450	70 1B		        jnz     ??0544
 6374+ 2			        endif
 6375+ 1			        top_ma  addc,r3,??0544,<0c4h>
 6376+ 2  1452	7B 88		        mov     r3,#arg0
 6377+ 2  1454	74 98		        mov     a,#arg1
 6378+ 2			        ifnb    <0c4h>
 6379+ 2			        set_cy  0c4h
 6380+ 3	N      0000	??0558  set     (0c4h and 1)
 6381+ 3	N      0000	        if      ??0558 eq 1
 6382+ 3			        setb    c
 6383+ 3			        else
 6384+ 3  1456	C3		        clr     c
 6385+ 3			        endif
 6386+ 2			        endif
 6387+ 2  1457	3B		        addc      a,r3
 6388+ 2			        ifnb    <0c4h>
 6389+ 2			        save_psw
 6390+ 3  1458	85 D0 70	        mov     saved_psw,PSW
 6391+ 2			        endif
 6392+ 2  145B	B4 20 0F	        cjne    a,#res,??0544
 6393+ 2			        ifnb    <0c4h>
 6394+ 2			        tst_psw <0c4h>,??0544
 6395+ 3  145E	E5 70		        mov     a,saved_psw
 6396+ 3  1460	54 C4		        anl     a,#0c4h
 6397+ 3  1462	64 C4		        xrl     a,#0c4h
 6398+ 3  1464	54 FE		        anl     a,#0feh
 6399+ 3  1466	70 05		        jnz     ??0544
 6400+ 2			        endif
 6401+ 1
 6402+ 1			        eot     'b',??0544
 6403+ 2			        putc    #'b'
 6404+ 3  1468			??0560:
 6405+ 3			        ;jnb     SCON.1,putc_loop
 6406+ 3			        ;clr     SCON.1
 6407+ 3  1468	75 99 62	        mov     SBUF,#'b'
 6408+ 2  146B	80 06		        sjmp    ??0559
 6409+ 2  146D			??0544:  putc    #'?'
 6410+ 3  146D			??0561:
 6411+ 3			        ;jnb     SCON.1,putc_loop
 6412+ 3			        ;clr     SCON.1
 6413+ 3  146D	75 99 3F	        mov     SBUF,#'?'
 6414+ 2  1470	75 6E 01	        mov     fail,#001h
 6415+ 2  1473			??0559:
 6416+ 1
 6417+ 1			        top_ma  addc,r4,??0545,<0c4h>
 6418+ 2  1473	7C 88		        mov     r4,#arg0
 6419+ 2  1475	74 98		        mov     a,#arg1
 6420+ 2			        ifnb    <0c4h>
 6421+ 2			        set_cy  0c4h
 6422+ 3	N      0000	??0562  set     (0c4h and 1)
 6423+ 3	N      0000	        if      ??0562 eq 1
 6424+ 3			        setb    c
 6425+ 3			        else
 6426+ 3  1477	C3		        clr     c
 6427+ 3			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 116



 Line  I  Addr  Code            Source

 6428+ 2			        endif
 6429+ 2  1478	3C		        addc      a,r4
 6430+ 2			        ifnb    <0c4h>
 6431+ 2			        save_psw
 6432+ 3  1479	85 D0 70	        mov     saved_psw,PSW
 6433+ 2			        endif
 6434+ 2  147C	B4 20 25	        cjne    a,#res,??0545
 6435+ 2			        ifnb    <0c4h>
 6436+ 2			        tst_psw <0c4h>,??0545
 6437+ 3  147F	E5 70		        mov     a,saved_psw
 6438+ 3  1481	54 C4		        anl     a,#0c4h
 6439+ 3  1483	64 C4		        xrl     a,#0c4h
 6440+ 3  1485	54 FE		        anl     a,#0feh
 6441+ 3  1487	70 1B		        jnz     ??0545
 6442+ 2			        endif
 6443+ 1			        top_ma  addc,r5,??0545,<0c4h>
 6444+ 2  1489	7D 88		        mov     r5,#arg0
 6445+ 2  148B	74 98		        mov     a,#arg1
 6446+ 2			        ifnb    <0c4h>
 6447+ 2			        set_cy  0c4h
 6448+ 3	N      0000	??0563  set     (0c4h and 1)
 6449+ 3	N      0000	        if      ??0563 eq 1
 6450+ 3			        setb    c
 6451+ 3			        else
 6452+ 3  148D	C3		        clr     c
 6453+ 3			        endif
 6454+ 2			        endif
 6455+ 2  148E	3D		        addc      a,r5
 6456+ 2			        ifnb    <0c4h>
 6457+ 2			        save_psw
 6458+ 3  148F	85 D0 70	        mov     saved_psw,PSW
 6459+ 2			        endif
 6460+ 2  1492	B4 20 0F	        cjne    a,#res,??0545
 6461+ 2			        ifnb    <0c4h>
 6462+ 2			        tst_psw <0c4h>,??0545
 6463+ 3  1495	E5 70		        mov     a,saved_psw
 6464+ 3  1497	54 C4		        anl     a,#0c4h
 6465+ 3  1499	64 C4		        xrl     a,#0c4h
 6466+ 3  149B	54 FE		        anl     a,#0feh
 6467+ 3  149D	70 05		        jnz     ??0545
 6468+ 2			        endif
 6469+ 1
 6470+ 1			        eot     'c',??0545
 6471+ 2			        putc    #'c'
 6472+ 3  149F			??0565:
 6473+ 3			        ;jnb     SCON.1,putc_loop
 6474+ 3			        ;clr     SCON.1
 6475+ 3  149F	75 99 63	        mov     SBUF,#'c'
 6476+ 2  14A2	80 06		        sjmp    ??0564
 6477+ 2  14A4			??0545:  putc    #'?'
 6478+ 3  14A4			??0566:
 6479+ 3			        ;jnb     SCON.1,putc_loop
 6480+ 3			        ;clr     SCON.1
 6481+ 3  14A4	75 99 3F	        mov     SBUF,#'?'
 6482+ 2  14A7	75 6E 01	        mov     fail,#001h
 6483+ 2  14AA			??0564:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 117



 Line  I  Addr  Code            Source

 6484+ 1
 6485+ 1			        top_ma  addc,r6,??0542,<0c4h>
 6486+ 2  14AA	7E 88		        mov     r6,#arg0
 6487+ 2  14AC	74 98		        mov     a,#arg1
 6488+ 2			        ifnb    <0c4h>
 6489+ 2			        set_cy  0c4h
 6490+ 3	N      0000	??0567  set     (0c4h and 1)
 6491+ 3	N      0000	        if      ??0567 eq 1
 6492+ 3			        setb    c
 6493+ 3			        else
 6494+ 3  14AE	C3		        clr     c
 6495+ 3			        endif
 6496+ 2			        endif
 6497+ 2  14AF	3E		        addc      a,r6
 6498+ 2			        ifnb    <0c4h>
 6499+ 2			        save_psw
 6500+ 3  14B0	85 D0 70	        mov     saved_psw,PSW
 6501+ 2			        endif
 6502+ 2  14B3	B4 20 25	        cjne    a,#res,??0542
 6503+ 2			        ifnb    <0c4h>
 6504+ 2			        tst_psw <0c4h>,??0542
 6505+ 3  14B6	E5 70		        mov     a,saved_psw
 6506+ 3  14B8	54 C4		        anl     a,#0c4h
 6507+ 3  14BA	64 C4		        xrl     a,#0c4h
 6508+ 3  14BC	54 FE		        anl     a,#0feh
 6509+ 3  14BE	70 1B		        jnz     ??0542
 6510+ 2			        endif
 6511+ 1			        top_ma  addc,r7,??0542,<0c4h>
 6512+ 2  14C0	7F 88		        mov     r7,#arg0
 6513+ 2  14C2	74 98		        mov     a,#arg1
 6514+ 2			        ifnb    <0c4h>
 6515+ 2			        set_cy  0c4h
 6516+ 3	N      0000	??0568  set     (0c4h and 1)
 6517+ 3	N      0000	        if      ??0568 eq 1
 6518+ 3			        setb    c
 6519+ 3			        else
 6520+ 3  14C4	C3		        clr     c
 6521+ 3			        endif
 6522+ 2			        endif
 6523+ 2  14C5	3F		        addc      a,r7
 6524+ 2			        ifnb    <0c4h>
 6525+ 2			        save_psw
 6526+ 3  14C6	85 D0 70	        mov     saved_psw,PSW
 6527+ 2			        endif
 6528+ 2  14C9	B4 20 0F	        cjne    a,#res,??0542
 6529+ 2			        ifnb    <0c4h>
 6530+ 2			        tst_psw <0c4h>,??0542
 6531+ 3  14CC	E5 70		        mov     a,saved_psw
 6532+ 3  14CE	54 C4		        anl     a,#0c4h
 6533+ 3  14D0	64 C4		        xrl     a,#0c4h
 6534+ 3  14D2	54 FE		        anl     a,#0feh
 6535+ 3  14D4	70 05		        jnz     ??0542
 6536+ 2			        endif
 6537+ 1
 6538+ 1			        eot     'd',??0542
 6539+ 2			        putc    #'d'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 118



 Line  I  Addr  Code            Source

 6540+ 3  14D6			??0570:
 6541+ 3			        ;jnb     SCON.1,putc_loop
 6542+ 3			        ;clr     SCON.1
 6543+ 3  14D6	75 99 64	        mov     SBUF,#'d'
 6544+ 2  14D9	80 06		        sjmp    ??0569
 6545+ 2  14DB			??0542:  putc    #'?'
 6546+ 3  14DB			??0571:
 6547+ 3			        ;jnb     SCON.1,putc_loop
 6548+ 3			        ;clr     SCON.1
 6549+ 3  14DB	75 99 3F	        mov     SBUF,#'?'
 6550+ 2  14DE	75 6E 01	        mov     fail,#001h
 6551+ 2  14E1			??0569:
 6552+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 6553+ 1
 6554+ 1			        ; Optionally test immediate addressing modes.
 6555+ 1
 6556+ 1	N      FFFF	        if      (01h and 1) ne 0
 6557+ 1			        ; Test <op> A, #arg1...
 6558+ 1			        top_mb  addc,a,??0546,<0c4h>
 6559+ 2  14E1	74 98		        mov     a,#arg1
 6560+ 2			        ifnb    <0c4h>
 6561+ 2			        set_cy  0c4h
 6562+ 3	N      0000	??0572  set     (0c4h and 1)
 6563+ 3	N      0000	        if      ??0572 eq 1
 6564+ 3			        setb    c
 6565+ 3			        else
 6566+ 3  14E3	C3		        clr     c
 6567+ 3			        endif
 6568+ 2			        endif
 6569+ 2  14E4	34 88		        addc      a,#arg0
 6570+ 2			        ifnb    <0c4h>
 6571+ 2			        save_psw
 6572+ 3  14E6	85 D0 70	        mov     saved_psw,PSW
 6573+ 2			        endif
 6574+ 2  14E9	F5 E0		        mov     ACC,a
 6575+ 2  14EB	B4 20 0F	        cjne    a,#res,??0546
 6576+ 2			        ifnb    <0c4h>
 6577+ 2			        tst_psw <0c4h>,??0546
 6578+ 3  14EE	E5 70		        mov     a,saved_psw
 6579+ 3  14F0	54 C4		        anl     a,#0c4h
 6580+ 3  14F2	64 C4		        xrl     a,#0c4h
 6581+ 3  14F4	54 FE		        anl     a,#0feh
 6582+ 3  14F6	70 05		        jnz     ??0546
 6583+ 2			        endif
 6584+ 1			        eot     'e',??0546
 6585+ 2			        putc    #'e'
 6586+ 3  14F8			??0574:
 6587+ 3			        ;jnb     SCON.1,putc_loop
 6588+ 3			        ;clr     SCON.1
 6589+ 3  14F8	75 99 65	        mov     SBUF,#'e'
 6590+ 2  14FB	80 06		        sjmp    ??0573
 6591+ 2  14FD			??0546:  putc    #'?'
 6592+ 3  14FD			??0575:
 6593+ 3			        ;jnb     SCON.1,putc_loop
 6594+ 3			        ;clr     SCON.1
 6595+ 3  14FD	75 99 3F	        mov     SBUF,#'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 119



 Line  I  Addr  Code            Source

 6596+ 2  1500	75 6E 01	        mov     fail,#001h
 6597+ 2  1503			??0573:
 6598+ 1			        endif
 6599+ 1
 6600+ 1	N      0000	        if      (01h and 2) ne 0
 6601+ 1			        ; ...and <op> dir, #arg1
 6602+ 1			        top_mb  addc,dir0,??0547,<0c4h>
 6603+ 1			        eot     'f',??0547
 6604+ 1			        endif
 6605+ 1
 6606+ 1			        ; Optionally test <op> dir, A
 6607+ 1	N      0000	        if      (01h and 4) ne 0
 6608+ 1			        top_mc  addc,??0548,<0c4h>
 6609+ 1			        eot     'g',??0548
 6610+ 1			        endif
 6611+ 1
 6612:				        putc    #'3'
 6613+ 1  1503			??0576:
 6614+ 1			        ;jnb     SCON.1,putc_loop
 6615+ 1			        ;clr     SCON.1
 6616+ 1  1503	75 99 33	        mov     SBUF,#'3'
 6617:				        tst_alu addc,088h,098h,021h,01h,0c5h     ;  CY  AC  OV (CY input)
 6618+ 1			        ; Put the argument and result data into variables for easier access
 6619+ 1	N      0088	        arg0    set 088h
 6620+ 1	N      0098	        arg1    set 098h
 6621+ 1	N      0021	        res     set 021h
 6622+ 1
 6623+ 1			        ; Test <op> A, dir
 6624+ 1			        top_ma  addc,dir0,??0578,<0c5h>
 6625+ 2  1506	75 60 88	        mov     dir0,#arg0
 6626+ 2  1509	74 98		        mov     a,#arg1
 6627+ 2			        ifnb    <0c5h>
 6628+ 2			        set_cy  0c5h
 6629+ 3	N      0001	??0584  set     (0c5h and 1)
 6630+ 3	N      FFFF	        if      ??0584 eq 1
 6631+ 3  150B	D3		        setb    c
 6632+ 3			        else
 6633+ 3			        clr     c
 6634+ 3			        endif
 6635+ 2			        endif
 6636+ 2  150C	35 60		        addc      a,dir0
 6637+ 2			        ifnb    <0c5h>
 6638+ 2			        save_psw
 6639+ 3  150E	85 D0 70	        mov     saved_psw,PSW
 6640+ 2			        endif
 6641+ 2  1511	B4 21 6B	        cjne    a,#res,??0578
 6642+ 2			        ifnb    <0c5h>
 6643+ 2			        tst_psw <0c5h>,??0578
 6644+ 3  1514	E5 70		        mov     a,saved_psw
 6645+ 3  1516	54 C4		        anl     a,#0c4h
 6646+ 3  1518	64 C5		        xrl     a,#0c5h
 6647+ 3  151A	54 FE		        anl     a,#0feh
 6648+ 3  151C	70 61		        jnz     ??0578
 6649+ 2			        endif
 6650+ 1			        ; Test <op> A, @R0
 6651+ 1  151E	78 60		        mov     r0,#dir0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 120



 Line  I  Addr  Code            Source

 6652+ 1			        top_ma  addc,@r0,??0578,<0c5h>
 6653+ 2  1520	76 88		        mov     @r0,#arg0
 6654+ 2  1522	74 98		        mov     a,#arg1
 6655+ 2			        ifnb    <0c5h>
 6656+ 2			        set_cy  0c5h
 6657+ 3	N      0001	??0585  set     (0c5h and 1)
 6658+ 3	N      FFFF	        if      ??0585 eq 1
 6659+ 3  1524	D3		        setb    c
 6660+ 3			        else
 6661+ 3			        clr     c
 6662+ 3			        endif
 6663+ 2			        endif
 6664+ 2  1525	36		        addc      a,@r0
 6665+ 2			        ifnb    <0c5h>
 6666+ 2			        save_psw
 6667+ 3  1526	85 D0 70	        mov     saved_psw,PSW
 6668+ 2			        endif
 6669+ 2  1529	B4 21 53	        cjne    a,#res,??0578
 6670+ 2			        ifnb    <0c5h>
 6671+ 2			        tst_psw <0c5h>,??0578
 6672+ 3  152C	E5 70		        mov     a,saved_psw
 6673+ 3  152E	54 C4		        anl     a,#0c4h
 6674+ 3  1530	64 C5		        xrl     a,#0c5h
 6675+ 3  1532	54 FE		        anl     a,#0feh
 6676+ 3  1534	70 49		        jnz     ??0578
 6677+ 2			        endif
 6678+ 1			        ; Test <op> A, @R1
 6679+ 1  1536	79 31		        mov     r1,#031h
 6680+ 1			        top_ma  addc,@r1,??0578,<0c5h>
 6681+ 2  1538	77 88		        mov     @r1,#arg0
 6682+ 2  153A	74 98		        mov     a,#arg1
 6683+ 2			        ifnb    <0c5h>
 6684+ 2			        set_cy  0c5h
 6685+ 3	N      0001	??0586  set     (0c5h and 1)
 6686+ 3	N      FFFF	        if      ??0586 eq 1
 6687+ 3  153C	D3		        setb    c
 6688+ 3			        else
 6689+ 3			        clr     c
 6690+ 3			        endif
 6691+ 2			        endif
 6692+ 2  153D	37		        addc      a,@r1
 6693+ 2			        ifnb    <0c5h>
 6694+ 2			        save_psw
 6695+ 3  153E	85 D0 70	        mov     saved_psw,PSW
 6696+ 2			        endif
 6697+ 2  1541	B4 21 3B	        cjne    a,#res,??0578
 6698+ 2			        ifnb    <0c5h>
 6699+ 2			        tst_psw <0c5h>,??0578
 6700+ 3  1544	E5 70		        mov     a,saved_psw
 6701+ 3  1546	54 C4		        anl     a,#0c4h
 6702+ 3  1548	64 C5		        xrl     a,#0c5h
 6703+ 3  154A	54 FE		        anl     a,#0feh
 6704+ 3  154C	70 31		        jnz     ??0578
 6705+ 2			        endif
 6706+ 1
 6707+ 1			        ; Now test <op> A, Rn for n in 0..7

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 121



 Line  I  Addr  Code            Source

 6708+ 1			        top_ma  addc,r0,??0578,<0c5h>
 6709+ 2  154E	78 88		        mov     r0,#arg0
 6710+ 2  1550	74 98		        mov     a,#arg1
 6711+ 2			        ifnb    <0c5h>
 6712+ 2			        set_cy  0c5h
 6713+ 3	N      0001	??0587  set     (0c5h and 1)
 6714+ 3	N      FFFF	        if      ??0587 eq 1
 6715+ 3  1552	D3		        setb    c
 6716+ 3			        else
 6717+ 3			        clr     c
 6718+ 3			        endif
 6719+ 2			        endif
 6720+ 2  1553	38		        addc      a,r0
 6721+ 2			        ifnb    <0c5h>
 6722+ 2			        save_psw
 6723+ 3  1554	85 D0 70	        mov     saved_psw,PSW
 6724+ 2			        endif
 6725+ 2  1557	B4 21 25	        cjne    a,#res,??0578
 6726+ 2			        ifnb    <0c5h>
 6727+ 2			        tst_psw <0c5h>,??0578
 6728+ 3  155A	E5 70		        mov     a,saved_psw
 6729+ 3  155C	54 C4		        anl     a,#0c4h
 6730+ 3  155E	64 C5		        xrl     a,#0c5h
 6731+ 3  1560	54 FE		        anl     a,#0feh
 6732+ 3  1562	70 1B		        jnz     ??0578
 6733+ 2			        endif
 6734+ 1			        top_ma  addc,r1,??0578,<0c5h>
 6735+ 2  1564	79 88		        mov     r1,#arg0
 6736+ 2  1566	74 98		        mov     a,#arg1
 6737+ 2			        ifnb    <0c5h>
 6738+ 2			        set_cy  0c5h
 6739+ 3	N      0001	??0588  set     (0c5h and 1)
 6740+ 3	N      FFFF	        if      ??0588 eq 1
 6741+ 3  1568	D3		        setb    c
 6742+ 3			        else
 6743+ 3			        clr     c
 6744+ 3			        endif
 6745+ 2			        endif
 6746+ 2  1569	39		        addc      a,r1
 6747+ 2			        ifnb    <0c5h>
 6748+ 2			        save_psw
 6749+ 3  156A	85 D0 70	        mov     saved_psw,PSW
 6750+ 2			        endif
 6751+ 2  156D	B4 21 0F	        cjne    a,#res,??0578
 6752+ 2			        ifnb    <0c5h>
 6753+ 2			        tst_psw <0c5h>,??0578
 6754+ 3  1570	E5 70		        mov     a,saved_psw
 6755+ 3  1572	54 C4		        anl     a,#0c4h
 6756+ 3  1574	64 C5		        xrl     a,#0c5h
 6757+ 3  1576	54 FE		        anl     a,#0feh
 6758+ 3  1578	70 05		        jnz     ??0578
 6759+ 2			        endif
 6760+ 1
 6761+ 1			        eot     'a',??0578
 6762+ 2			        putc    #'a'
 6763+ 3  157A			??0590:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 122



 Line  I  Addr  Code            Source

 6764+ 3			        ;jnb     SCON.1,putc_loop
 6765+ 3			        ;clr     SCON.1
 6766+ 3  157A	75 99 61	        mov     SBUF,#'a'
 6767+ 2  157D	80 06		        sjmp    ??0589
 6768+ 2  157F			??0578:  putc    #'?'
 6769+ 3  157F			??0591:
 6770+ 3			        ;jnb     SCON.1,putc_loop
 6771+ 3			        ;clr     SCON.1
 6772+ 3  157F	75 99 3F	        mov     SBUF,#'?'
 6773+ 2  1582	75 6E 01	        mov     fail,#001h
 6774+ 2  1585			??0589:
 6775+ 1
 6776+ 1			        top_ma  addc,r2,??0579,<0c5h>
 6777+ 2  1585	7A 88		        mov     r2,#arg0
 6778+ 2  1587	74 98		        mov     a,#arg1
 6779+ 2			        ifnb    <0c5h>
 6780+ 2			        set_cy  0c5h
 6781+ 3	N      0001	??0592  set     (0c5h and 1)
 6782+ 3	N      FFFF	        if      ??0592 eq 1
 6783+ 3  1589	D3		        setb    c
 6784+ 3			        else
 6785+ 3			        clr     c
 6786+ 3			        endif
 6787+ 2			        endif
 6788+ 2  158A	3A		        addc      a,r2
 6789+ 2			        ifnb    <0c5h>
 6790+ 2			        save_psw
 6791+ 3  158B	85 D0 70	        mov     saved_psw,PSW
 6792+ 2			        endif
 6793+ 2  158E	B4 21 25	        cjne    a,#res,??0579
 6794+ 2			        ifnb    <0c5h>
 6795+ 2			        tst_psw <0c5h>,??0579
 6796+ 3  1591	E5 70		        mov     a,saved_psw
 6797+ 3  1593	54 C4		        anl     a,#0c4h
 6798+ 3  1595	64 C5		        xrl     a,#0c5h
 6799+ 3  1597	54 FE		        anl     a,#0feh
 6800+ 3  1599	70 1B		        jnz     ??0579
 6801+ 2			        endif
 6802+ 1			        top_ma  addc,r3,??0579,<0c5h>
 6803+ 2  159B	7B 88		        mov     r3,#arg0
 6804+ 2  159D	74 98		        mov     a,#arg1
 6805+ 2			        ifnb    <0c5h>
 6806+ 2			        set_cy  0c5h
 6807+ 3	N      0001	??0593  set     (0c5h and 1)
 6808+ 3	N      FFFF	        if      ??0593 eq 1
 6809+ 3  159F	D3		        setb    c
 6810+ 3			        else
 6811+ 3			        clr     c
 6812+ 3			        endif
 6813+ 2			        endif
 6814+ 2  15A0	3B		        addc      a,r3
 6815+ 2			        ifnb    <0c5h>
 6816+ 2			        save_psw
 6817+ 3  15A1	85 D0 70	        mov     saved_psw,PSW
 6818+ 2			        endif
 6819+ 2  15A4	B4 21 0F	        cjne    a,#res,??0579

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 123



 Line  I  Addr  Code            Source

 6820+ 2			        ifnb    <0c5h>
 6821+ 2			        tst_psw <0c5h>,??0579
 6822+ 3  15A7	E5 70		        mov     a,saved_psw
 6823+ 3  15A9	54 C4		        anl     a,#0c4h
 6824+ 3  15AB	64 C5		        xrl     a,#0c5h
 6825+ 3  15AD	54 FE		        anl     a,#0feh
 6826+ 3  15AF	70 05		        jnz     ??0579
 6827+ 2			        endif
 6828+ 1
 6829+ 1			        eot     'b',??0579
 6830+ 2			        putc    #'b'
 6831+ 3  15B1			??0595:
 6832+ 3			        ;jnb     SCON.1,putc_loop
 6833+ 3			        ;clr     SCON.1
 6834+ 3  15B1	75 99 62	        mov     SBUF,#'b'
 6835+ 2  15B4	80 06		        sjmp    ??0594
 6836+ 2  15B6			??0579:  putc    #'?'
 6837+ 3  15B6			??0596:
 6838+ 3			        ;jnb     SCON.1,putc_loop
 6839+ 3			        ;clr     SCON.1
 6840+ 3  15B6	75 99 3F	        mov     SBUF,#'?'
 6841+ 2  15B9	75 6E 01	        mov     fail,#001h
 6842+ 2  15BC			??0594:
 6843+ 1
 6844+ 1			        top_ma  addc,r4,??0580,<0c5h>
 6845+ 2  15BC	7C 88		        mov     r4,#arg0
 6846+ 2  15BE	74 98		        mov     a,#arg1
 6847+ 2			        ifnb    <0c5h>
 6848+ 2			        set_cy  0c5h
 6849+ 3	N      0001	??0597  set     (0c5h and 1)
 6850+ 3	N      FFFF	        if      ??0597 eq 1
 6851+ 3  15C0	D3		        setb    c
 6852+ 3			        else
 6853+ 3			        clr     c
 6854+ 3			        endif
 6855+ 2			        endif
 6856+ 2  15C1	3C		        addc      a,r4
 6857+ 2			        ifnb    <0c5h>
 6858+ 2			        save_psw
 6859+ 3  15C2	85 D0 70	        mov     saved_psw,PSW
 6860+ 2			        endif
 6861+ 2  15C5	B4 21 25	        cjne    a,#res,??0580
 6862+ 2			        ifnb    <0c5h>
 6863+ 2			        tst_psw <0c5h>,??0580
 6864+ 3  15C8	E5 70		        mov     a,saved_psw
 6865+ 3  15CA	54 C4		        anl     a,#0c4h
 6866+ 3  15CC	64 C5		        xrl     a,#0c5h
 6867+ 3  15CE	54 FE		        anl     a,#0feh
 6868+ 3  15D0	70 1B		        jnz     ??0580
 6869+ 2			        endif
 6870+ 1			        top_ma  addc,r5,??0580,<0c5h>
 6871+ 2  15D2	7D 88		        mov     r5,#arg0
 6872+ 2  15D4	74 98		        mov     a,#arg1
 6873+ 2			        ifnb    <0c5h>
 6874+ 2			        set_cy  0c5h
 6875+ 3	N      0001	??0598  set     (0c5h and 1)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 124



 Line  I  Addr  Code            Source

 6876+ 3	N      FFFF	        if      ??0598 eq 1
 6877+ 3  15D6	D3		        setb    c
 6878+ 3			        else
 6879+ 3			        clr     c
 6880+ 3			        endif
 6881+ 2			        endif
 6882+ 2  15D7	3D		        addc      a,r5
 6883+ 2			        ifnb    <0c5h>
 6884+ 2			        save_psw
 6885+ 3  15D8	85 D0 70	        mov     saved_psw,PSW
 6886+ 2			        endif
 6887+ 2  15DB	B4 21 0F	        cjne    a,#res,??0580
 6888+ 2			        ifnb    <0c5h>
 6889+ 2			        tst_psw <0c5h>,??0580
 6890+ 3  15DE	E5 70		        mov     a,saved_psw
 6891+ 3  15E0	54 C4		        anl     a,#0c4h
 6892+ 3  15E2	64 C5		        xrl     a,#0c5h
 6893+ 3  15E4	54 FE		        anl     a,#0feh
 6894+ 3  15E6	70 05		        jnz     ??0580
 6895+ 2			        endif
 6896+ 1
 6897+ 1			        eot     'c',??0580
 6898+ 2			        putc    #'c'
 6899+ 3  15E8			??0600:
 6900+ 3			        ;jnb     SCON.1,putc_loop
 6901+ 3			        ;clr     SCON.1
 6902+ 3  15E8	75 99 63	        mov     SBUF,#'c'
 6903+ 2  15EB	80 06		        sjmp    ??0599
 6904+ 2  15ED			??0580:  putc    #'?'
 6905+ 3  15ED			??0601:
 6906+ 3			        ;jnb     SCON.1,putc_loop
 6907+ 3			        ;clr     SCON.1
 6908+ 3  15ED	75 99 3F	        mov     SBUF,#'?'
 6909+ 2  15F0	75 6E 01	        mov     fail,#001h
 6910+ 2  15F3			??0599:
 6911+ 1
 6912+ 1			        top_ma  addc,r6,??0577,<0c5h>
 6913+ 2  15F3	7E 88		        mov     r6,#arg0
 6914+ 2  15F5	74 98		        mov     a,#arg1
 6915+ 2			        ifnb    <0c5h>
 6916+ 2			        set_cy  0c5h
 6917+ 3	N      0001	??0602  set     (0c5h and 1)
 6918+ 3	N      FFFF	        if      ??0602 eq 1
 6919+ 3  15F7	D3		        setb    c
 6920+ 3			        else
 6921+ 3			        clr     c
 6922+ 3			        endif
 6923+ 2			        endif
 6924+ 2  15F8	3E		        addc      a,r6
 6925+ 2			        ifnb    <0c5h>
 6926+ 2			        save_psw
 6927+ 3  15F9	85 D0 70	        mov     saved_psw,PSW
 6928+ 2			        endif
 6929+ 2  15FC	B4 21 25	        cjne    a,#res,??0577
 6930+ 2			        ifnb    <0c5h>
 6931+ 2			        tst_psw <0c5h>,??0577

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 125



 Line  I  Addr  Code            Source

 6932+ 3  15FF	E5 70		        mov     a,saved_psw
 6933+ 3  1601	54 C4		        anl     a,#0c4h
 6934+ 3  1603	64 C5		        xrl     a,#0c5h
 6935+ 3  1605	54 FE		        anl     a,#0feh
 6936+ 3  1607	70 1B		        jnz     ??0577
 6937+ 2			        endif
 6938+ 1			        top_ma  addc,r7,??0577,<0c5h>
 6939+ 2  1609	7F 88		        mov     r7,#arg0
 6940+ 2  160B	74 98		        mov     a,#arg1
 6941+ 2			        ifnb    <0c5h>
 6942+ 2			        set_cy  0c5h
 6943+ 3	N      0001	??0603  set     (0c5h and 1)
 6944+ 3	N      FFFF	        if      ??0603 eq 1
 6945+ 3  160D	D3		        setb    c
 6946+ 3			        else
 6947+ 3			        clr     c
 6948+ 3			        endif
 6949+ 2			        endif
 6950+ 2  160E	3F		        addc      a,r7
 6951+ 2			        ifnb    <0c5h>
 6952+ 2			        save_psw
 6953+ 3  160F	85 D0 70	        mov     saved_psw,PSW
 6954+ 2			        endif
 6955+ 2  1612	B4 21 0F	        cjne    a,#res,??0577
 6956+ 2			        ifnb    <0c5h>
 6957+ 2			        tst_psw <0c5h>,??0577
 6958+ 3  1615	E5 70		        mov     a,saved_psw
 6959+ 3  1617	54 C4		        anl     a,#0c4h
 6960+ 3  1619	64 C5		        xrl     a,#0c5h
 6961+ 3  161B	54 FE		        anl     a,#0feh
 6962+ 3  161D	70 05		        jnz     ??0577
 6963+ 2			        endif
 6964+ 1
 6965+ 1			        eot     'd',??0577
 6966+ 2			        putc    #'d'
 6967+ 3  161F			??0605:
 6968+ 3			        ;jnb     SCON.1,putc_loop
 6969+ 3			        ;clr     SCON.1
 6970+ 3  161F	75 99 64	        mov     SBUF,#'d'
 6971+ 2  1622	80 06		        sjmp    ??0604
 6972+ 2  1624			??0577:  putc    #'?'
 6973+ 3  1624			??0606:
 6974+ 3			        ;jnb     SCON.1,putc_loop
 6975+ 3			        ;clr     SCON.1
 6976+ 3  1624	75 99 3F	        mov     SBUF,#'?'
 6977+ 2  1627	75 6E 01	        mov     fail,#001h
 6978+ 2  162A			??0604:
 6979+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 6980+ 1
 6981+ 1			        ; Optionally test immediate addressing modes.
 6982+ 1
 6983+ 1	N      FFFF	        if      (01h and 1) ne 0
 6984+ 1			        ; Test <op> A, #arg1...
 6985+ 1			        top_mb  addc,a,??0581,<0c5h>
 6986+ 2  162A	74 98		        mov     a,#arg1
 6987+ 2			        ifnb    <0c5h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 126



 Line  I  Addr  Code            Source

 6988+ 2			        set_cy  0c5h
 6989+ 3	N      0001	??0607  set     (0c5h and 1)
 6990+ 3	N      FFFF	        if      ??0607 eq 1
 6991+ 3  162C	D3		        setb    c
 6992+ 3			        else
 6993+ 3			        clr     c
 6994+ 3			        endif
 6995+ 2			        endif
 6996+ 2  162D	34 88		        addc      a,#arg0
 6997+ 2			        ifnb    <0c5h>
 6998+ 2			        save_psw
 6999+ 3  162F	85 D0 70	        mov     saved_psw,PSW
 7000+ 2			        endif
 7001+ 2  1632	F5 E0		        mov     ACC,a
 7002+ 2  1634	B4 21 0F	        cjne    a,#res,??0581
 7003+ 2			        ifnb    <0c5h>
 7004+ 2			        tst_psw <0c5h>,??0581
 7005+ 3  1637	E5 70		        mov     a,saved_psw
 7006+ 3  1639	54 C4		        anl     a,#0c4h
 7007+ 3  163B	64 C5		        xrl     a,#0c5h
 7008+ 3  163D	54 FE		        anl     a,#0feh
 7009+ 3  163F	70 05		        jnz     ??0581
 7010+ 2			        endif
 7011+ 1			        eot     'e',??0581
 7012+ 2			        putc    #'e'
 7013+ 3  1641			??0609:
 7014+ 3			        ;jnb     SCON.1,putc_loop
 7015+ 3			        ;clr     SCON.1
 7016+ 3  1641	75 99 65	        mov     SBUF,#'e'
 7017+ 2  1644	80 06		        sjmp    ??0608
 7018+ 2  1646			??0581:  putc    #'?'
 7019+ 3  1646			??0610:
 7020+ 3			        ;jnb     SCON.1,putc_loop
 7021+ 3			        ;clr     SCON.1
 7022+ 3  1646	75 99 3F	        mov     SBUF,#'?'
 7023+ 2  1649	75 6E 01	        mov     fail,#001h
 7024+ 2  164C			??0608:
 7025+ 1			        endif
 7026+ 1
 7027+ 1	N      0000	        if      (01h and 2) ne 0
 7028+ 1			        ; ...and <op> dir, #arg1
 7029+ 1			        top_mb  addc,dir0,??0582,<0c5h>
 7030+ 1			        eot     'f',??0582
 7031+ 1			        endif
 7032+ 1
 7033+ 1			        ; Optionally test <op> dir, A
 7034+ 1	N      0000	        if      (01h and 4) ne 0
 7035+ 1			        top_mc  addc,??0583,<0c5h>
 7036+ 1			        eot     'g',??0583
 7037+ 1			        endif
 7038+ 1
 7039:				        putc    #'4'
 7040+ 1  164C			??0611:
 7041+ 1			        ;jnb     SCON.1,putc_loop
 7042+ 1			        ;clr     SCON.1
 7043+ 1  164C	75 99 34	        mov     SBUF,#'4'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 127



 Line  I  Addr  Code            Source

 7044:				        tst_alu addc,043h,0fbh,03fh,01h,081h     ;  CY /AC /OV (CY input)
 7045+ 1			        ; Put the argument and result data into variables for easier access
 7046+ 1	N      0043	        arg0    set 043h
 7047+ 1	N      00FB	        arg1    set 0fbh
 7048+ 1	N      003F	        res     set 03fh
 7049+ 1
 7050+ 1			        ; Test <op> A, dir
 7051+ 1			        top_ma  addc,dir0,??0613,<081h>
 7052+ 2  164F	75 60 43	        mov     dir0,#arg0
 7053+ 2  1652	74 FB		        mov     a,#arg1
 7054+ 2			        ifnb    <081h>
 7055+ 2			        set_cy  081h
 7056+ 3	N      0001	??0619  set     (081h and 1)
 7057+ 3	N      FFFF	        if      ??0619 eq 1
 7058+ 3  1654	D3		        setb    c
 7059+ 3			        else
 7060+ 3			        clr     c
 7061+ 3			        endif
 7062+ 2			        endif
 7063+ 2  1655	35 60		        addc      a,dir0
 7064+ 2			        ifnb    <081h>
 7065+ 2			        save_psw
 7066+ 3  1657	85 D0 70	        mov     saved_psw,PSW
 7067+ 2			        endif
 7068+ 2  165A	B4 3F 6B	        cjne    a,#res,??0613
 7069+ 2			        ifnb    <081h>
 7070+ 2			        tst_psw <081h>,??0613
 7071+ 3  165D	E5 70		        mov     a,saved_psw
 7072+ 3  165F	54 C4		        anl     a,#0c4h
 7073+ 3  1661	64 81		        xrl     a,#081h
 7074+ 3  1663	54 FE		        anl     a,#0feh
 7075+ 3  1665	70 61		        jnz     ??0613
 7076+ 2			        endif
 7077+ 1			        ; Test <op> A, @R0
 7078+ 1  1667	78 60		        mov     r0,#dir0
 7079+ 1			        top_ma  addc,@r0,??0613,<081h>
 7080+ 2  1669	76 43		        mov     @r0,#arg0
 7081+ 2  166B	74 FB		        mov     a,#arg1
 7082+ 2			        ifnb    <081h>
 7083+ 2			        set_cy  081h
 7084+ 3	N      0001	??0620  set     (081h and 1)
 7085+ 3	N      FFFF	        if      ??0620 eq 1
 7086+ 3  166D	D3		        setb    c
 7087+ 3			        else
 7088+ 3			        clr     c
 7089+ 3			        endif
 7090+ 2			        endif
 7091+ 2  166E	36		        addc      a,@r0
 7092+ 2			        ifnb    <081h>
 7093+ 2			        save_psw
 7094+ 3  166F	85 D0 70	        mov     saved_psw,PSW
 7095+ 2			        endif
 7096+ 2  1672	B4 3F 53	        cjne    a,#res,??0613
 7097+ 2			        ifnb    <081h>
 7098+ 2			        tst_psw <081h>,??0613
 7099+ 3  1675	E5 70		        mov     a,saved_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 128



 Line  I  Addr  Code            Source

 7100+ 3  1677	54 C4		        anl     a,#0c4h
 7101+ 3  1679	64 81		        xrl     a,#081h
 7102+ 3  167B	54 FE		        anl     a,#0feh
 7103+ 3  167D	70 49		        jnz     ??0613
 7104+ 2			        endif
 7105+ 1			        ; Test <op> A, @R1
 7106+ 1  167F	79 31		        mov     r1,#031h
 7107+ 1			        top_ma  addc,@r1,??0613,<081h>
 7108+ 2  1681	77 43		        mov     @r1,#arg0
 7109+ 2  1683	74 FB		        mov     a,#arg1
 7110+ 2			        ifnb    <081h>
 7111+ 2			        set_cy  081h
 7112+ 3	N      0001	??0621  set     (081h and 1)
 7113+ 3	N      FFFF	        if      ??0621 eq 1
 7114+ 3  1685	D3		        setb    c
 7115+ 3			        else
 7116+ 3			        clr     c
 7117+ 3			        endif
 7118+ 2			        endif
 7119+ 2  1686	37		        addc      a,@r1
 7120+ 2			        ifnb    <081h>
 7121+ 2			        save_psw
 7122+ 3  1687	85 D0 70	        mov     saved_psw,PSW
 7123+ 2			        endif
 7124+ 2  168A	B4 3F 3B	        cjne    a,#res,??0613
 7125+ 2			        ifnb    <081h>
 7126+ 2			        tst_psw <081h>,??0613
 7127+ 3  168D	E5 70		        mov     a,saved_psw
 7128+ 3  168F	54 C4		        anl     a,#0c4h
 7129+ 3  1691	64 81		        xrl     a,#081h
 7130+ 3  1693	54 FE		        anl     a,#0feh
 7131+ 3  1695	70 31		        jnz     ??0613
 7132+ 2			        endif
 7133+ 1
 7134+ 1			        ; Now test <op> A, Rn for n in 0..7
 7135+ 1			        top_ma  addc,r0,??0613,<081h>
 7136+ 2  1697	78 43		        mov     r0,#arg0
 7137+ 2  1699	74 FB		        mov     a,#arg1
 7138+ 2			        ifnb    <081h>
 7139+ 2			        set_cy  081h
 7140+ 3	N      0001	??0622  set     (081h and 1)
 7141+ 3	N      FFFF	        if      ??0622 eq 1
 7142+ 3  169B	D3		        setb    c
 7143+ 3			        else
 7144+ 3			        clr     c
 7145+ 3			        endif
 7146+ 2			        endif
 7147+ 2  169C	38		        addc      a,r0
 7148+ 2			        ifnb    <081h>
 7149+ 2			        save_psw
 7150+ 3  169D	85 D0 70	        mov     saved_psw,PSW
 7151+ 2			        endif
 7152+ 2  16A0	B4 3F 25	        cjne    a,#res,??0613
 7153+ 2			        ifnb    <081h>
 7154+ 2			        tst_psw <081h>,??0613
 7155+ 3  16A3	E5 70		        mov     a,saved_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 129



 Line  I  Addr  Code            Source

 7156+ 3  16A5	54 C4		        anl     a,#0c4h
 7157+ 3  16A7	64 81		        xrl     a,#081h
 7158+ 3  16A9	54 FE		        anl     a,#0feh
 7159+ 3  16AB	70 1B		        jnz     ??0613
 7160+ 2			        endif
 7161+ 1			        top_ma  addc,r1,??0613,<081h>
 7162+ 2  16AD	79 43		        mov     r1,#arg0
 7163+ 2  16AF	74 FB		        mov     a,#arg1
 7164+ 2			        ifnb    <081h>
 7165+ 2			        set_cy  081h
 7166+ 3	N      0001	??0623  set     (081h and 1)
 7167+ 3	N      FFFF	        if      ??0623 eq 1
 7168+ 3  16B1	D3		        setb    c
 7169+ 3			        else
 7170+ 3			        clr     c
 7171+ 3			        endif
 7172+ 2			        endif
 7173+ 2  16B2	39		        addc      a,r1
 7174+ 2			        ifnb    <081h>
 7175+ 2			        save_psw
 7176+ 3  16B3	85 D0 70	        mov     saved_psw,PSW
 7177+ 2			        endif
 7178+ 2  16B6	B4 3F 0F	        cjne    a,#res,??0613
 7179+ 2			        ifnb    <081h>
 7180+ 2			        tst_psw <081h>,??0613
 7181+ 3  16B9	E5 70		        mov     a,saved_psw
 7182+ 3  16BB	54 C4		        anl     a,#0c4h
 7183+ 3  16BD	64 81		        xrl     a,#081h
 7184+ 3  16BF	54 FE		        anl     a,#0feh
 7185+ 3  16C1	70 05		        jnz     ??0613
 7186+ 2			        endif
 7187+ 1
 7188+ 1			        eot     'a',??0613
 7189+ 2			        putc    #'a'
 7190+ 3  16C3			??0625:
 7191+ 3			        ;jnb     SCON.1,putc_loop
 7192+ 3			        ;clr     SCON.1
 7193+ 3  16C3	75 99 61	        mov     SBUF,#'a'
 7194+ 2  16C6	80 06		        sjmp    ??0624
 7195+ 2  16C8			??0613:  putc    #'?'
 7196+ 3  16C8			??0626:
 7197+ 3			        ;jnb     SCON.1,putc_loop
 7198+ 3			        ;clr     SCON.1
 7199+ 3  16C8	75 99 3F	        mov     SBUF,#'?'
 7200+ 2  16CB	75 6E 01	        mov     fail,#001h
 7201+ 2  16CE			??0624:
 7202+ 1
 7203+ 1			        top_ma  addc,r2,??0614,<081h>
 7204+ 2  16CE	7A 43		        mov     r2,#arg0
 7205+ 2  16D0	74 FB		        mov     a,#arg1
 7206+ 2			        ifnb    <081h>
 7207+ 2			        set_cy  081h
 7208+ 3	N      0001	??0627  set     (081h and 1)
 7209+ 3	N      FFFF	        if      ??0627 eq 1
 7210+ 3  16D2	D3		        setb    c
 7211+ 3			        else

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 130



 Line  I  Addr  Code            Source

 7212+ 3			        clr     c
 7213+ 3			        endif
 7214+ 2			        endif
 7215+ 2  16D3	3A		        addc      a,r2
 7216+ 2			        ifnb    <081h>
 7217+ 2			        save_psw
 7218+ 3  16D4	85 D0 70	        mov     saved_psw,PSW
 7219+ 2			        endif
 7220+ 2  16D7	B4 3F 25	        cjne    a,#res,??0614
 7221+ 2			        ifnb    <081h>
 7222+ 2			        tst_psw <081h>,??0614
 7223+ 3  16DA	E5 70		        mov     a,saved_psw
 7224+ 3  16DC	54 C4		        anl     a,#0c4h
 7225+ 3  16DE	64 81		        xrl     a,#081h
 7226+ 3  16E0	54 FE		        anl     a,#0feh
 7227+ 3  16E2	70 1B		        jnz     ??0614
 7228+ 2			        endif
 7229+ 1			        top_ma  addc,r3,??0614,<081h>
 7230+ 2  16E4	7B 43		        mov     r3,#arg0
 7231+ 2  16E6	74 FB		        mov     a,#arg1
 7232+ 2			        ifnb    <081h>
 7233+ 2			        set_cy  081h
 7234+ 3	N      0001	??0628  set     (081h and 1)
 7235+ 3	N      FFFF	        if      ??0628 eq 1
 7236+ 3  16E8	D3		        setb    c
 7237+ 3			        else
 7238+ 3			        clr     c
 7239+ 3			        endif
 7240+ 2			        endif
 7241+ 2  16E9	3B		        addc      a,r3
 7242+ 2			        ifnb    <081h>
 7243+ 2			        save_psw
 7244+ 3  16EA	85 D0 70	        mov     saved_psw,PSW
 7245+ 2			        endif
 7246+ 2  16ED	B4 3F 0F	        cjne    a,#res,??0614
 7247+ 2			        ifnb    <081h>
 7248+ 2			        tst_psw <081h>,??0614
 7249+ 3  16F0	E5 70		        mov     a,saved_psw
 7250+ 3  16F2	54 C4		        anl     a,#0c4h
 7251+ 3  16F4	64 81		        xrl     a,#081h
 7252+ 3  16F6	54 FE		        anl     a,#0feh
 7253+ 3  16F8	70 05		        jnz     ??0614
 7254+ 2			        endif
 7255+ 1
 7256+ 1			        eot     'b',??0614
 7257+ 2			        putc    #'b'
 7258+ 3  16FA			??0630:
 7259+ 3			        ;jnb     SCON.1,putc_loop
 7260+ 3			        ;clr     SCON.1
 7261+ 3  16FA	75 99 62	        mov     SBUF,#'b'
 7262+ 2  16FD	80 06		        sjmp    ??0629
 7263+ 2  16FF			??0614:  putc    #'?'
 7264+ 3  16FF			??0631:
 7265+ 3			        ;jnb     SCON.1,putc_loop
 7266+ 3			        ;clr     SCON.1
 7267+ 3  16FF	75 99 3F	        mov     SBUF,#'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 131



 Line  I  Addr  Code            Source

 7268+ 2  1702	75 6E 01	        mov     fail,#001h
 7269+ 2  1705			??0629:
 7270+ 1
 7271+ 1			        top_ma  addc,r4,??0615,<081h>
 7272+ 2  1705	7C 43		        mov     r4,#arg0
 7273+ 2  1707	74 FB		        mov     a,#arg1
 7274+ 2			        ifnb    <081h>
 7275+ 2			        set_cy  081h
 7276+ 3	N      0001	??0632  set     (081h and 1)
 7277+ 3	N      FFFF	        if      ??0632 eq 1
 7278+ 3  1709	D3		        setb    c
 7279+ 3			        else
 7280+ 3			        clr     c
 7281+ 3			        endif
 7282+ 2			        endif
 7283+ 2  170A	3C		        addc      a,r4
 7284+ 2			        ifnb    <081h>
 7285+ 2			        save_psw
 7286+ 3  170B	85 D0 70	        mov     saved_psw,PSW
 7287+ 2			        endif
 7288+ 2  170E	B4 3F 25	        cjne    a,#res,??0615
 7289+ 2			        ifnb    <081h>
 7290+ 2			        tst_psw <081h>,??0615
 7291+ 3  1711	E5 70		        mov     a,saved_psw
 7292+ 3  1713	54 C4		        anl     a,#0c4h
 7293+ 3  1715	64 81		        xrl     a,#081h
 7294+ 3  1717	54 FE		        anl     a,#0feh
 7295+ 3  1719	70 1B		        jnz     ??0615
 7296+ 2			        endif
 7297+ 1			        top_ma  addc,r5,??0615,<081h>
 7298+ 2  171B	7D 43		        mov     r5,#arg0
 7299+ 2  171D	74 FB		        mov     a,#arg1
 7300+ 2			        ifnb    <081h>
 7301+ 2			        set_cy  081h
 7302+ 3	N      0001	??0633  set     (081h and 1)
 7303+ 3	N      FFFF	        if      ??0633 eq 1
 7304+ 3  171F	D3		        setb    c
 7305+ 3			        else
 7306+ 3			        clr     c
 7307+ 3			        endif
 7308+ 2			        endif
 7309+ 2  1720	3D		        addc      a,r5
 7310+ 2			        ifnb    <081h>
 7311+ 2			        save_psw
 7312+ 3  1721	85 D0 70	        mov     saved_psw,PSW
 7313+ 2			        endif
 7314+ 2  1724	B4 3F 0F	        cjne    a,#res,??0615
 7315+ 2			        ifnb    <081h>
 7316+ 2			        tst_psw <081h>,??0615
 7317+ 3  1727	E5 70		        mov     a,saved_psw
 7318+ 3  1729	54 C4		        anl     a,#0c4h
 7319+ 3  172B	64 81		        xrl     a,#081h
 7320+ 3  172D	54 FE		        anl     a,#0feh
 7321+ 3  172F	70 05		        jnz     ??0615
 7322+ 2			        endif
 7323+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 132



 Line  I  Addr  Code            Source

 7324+ 1			        eot     'c',??0615
 7325+ 2			        putc    #'c'
 7326+ 3  1731			??0635:
 7327+ 3			        ;jnb     SCON.1,putc_loop
 7328+ 3			        ;clr     SCON.1
 7329+ 3  1731	75 99 63	        mov     SBUF,#'c'
 7330+ 2  1734	80 06		        sjmp    ??0634
 7331+ 2  1736			??0615:  putc    #'?'
 7332+ 3  1736			??0636:
 7333+ 3			        ;jnb     SCON.1,putc_loop
 7334+ 3			        ;clr     SCON.1
 7335+ 3  1736	75 99 3F	        mov     SBUF,#'?'
 7336+ 2  1739	75 6E 01	        mov     fail,#001h
 7337+ 2  173C			??0634:
 7338+ 1
 7339+ 1			        top_ma  addc,r6,??0612,<081h>
 7340+ 2  173C	7E 43		        mov     r6,#arg0
 7341+ 2  173E	74 FB		        mov     a,#arg1
 7342+ 2			        ifnb    <081h>
 7343+ 2			        set_cy  081h
 7344+ 3	N      0001	??0637  set     (081h and 1)
 7345+ 3	N      FFFF	        if      ??0637 eq 1
 7346+ 3  1740	D3		        setb    c
 7347+ 3			        else
 7348+ 3			        clr     c
 7349+ 3			        endif
 7350+ 2			        endif
 7351+ 2  1741	3E		        addc      a,r6
 7352+ 2			        ifnb    <081h>
 7353+ 2			        save_psw
 7354+ 3  1742	85 D0 70	        mov     saved_psw,PSW
 7355+ 2			        endif
 7356+ 2  1745	B4 3F 25	        cjne    a,#res,??0612
 7357+ 2			        ifnb    <081h>
 7358+ 2			        tst_psw <081h>,??0612
 7359+ 3  1748	E5 70		        mov     a,saved_psw
 7360+ 3  174A	54 C4		        anl     a,#0c4h
 7361+ 3  174C	64 81		        xrl     a,#081h
 7362+ 3  174E	54 FE		        anl     a,#0feh
 7363+ 3  1750	70 1B		        jnz     ??0612
 7364+ 2			        endif
 7365+ 1			        top_ma  addc,r7,??0612,<081h>
 7366+ 2  1752	7F 43		        mov     r7,#arg0
 7367+ 2  1754	74 FB		        mov     a,#arg1
 7368+ 2			        ifnb    <081h>
 7369+ 2			        set_cy  081h
 7370+ 3	N      0001	??0638  set     (081h and 1)
 7371+ 3	N      FFFF	        if      ??0638 eq 1
 7372+ 3  1756	D3		        setb    c
 7373+ 3			        else
 7374+ 3			        clr     c
 7375+ 3			        endif
 7376+ 2			        endif
 7377+ 2  1757	3F		        addc      a,r7
 7378+ 2			        ifnb    <081h>
 7379+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 133



 Line  I  Addr  Code            Source

 7380+ 3  1758	85 D0 70	        mov     saved_psw,PSW
 7381+ 2			        endif
 7382+ 2  175B	B4 3F 0F	        cjne    a,#res,??0612
 7383+ 2			        ifnb    <081h>
 7384+ 2			        tst_psw <081h>,??0612
 7385+ 3  175E	E5 70		        mov     a,saved_psw
 7386+ 3  1760	54 C4		        anl     a,#0c4h
 7387+ 3  1762	64 81		        xrl     a,#081h
 7388+ 3  1764	54 FE		        anl     a,#0feh
 7389+ 3  1766	70 05		        jnz     ??0612
 7390+ 2			        endif
 7391+ 1
 7392+ 1			        eot     'd',??0612
 7393+ 2			        putc    #'d'
 7394+ 3  1768			??0640:
 7395+ 3			        ;jnb     SCON.1,putc_loop
 7396+ 3			        ;clr     SCON.1
 7397+ 3  1768	75 99 64	        mov     SBUF,#'d'
 7398+ 2  176B	80 06		        sjmp    ??0639
 7399+ 2  176D			??0612:  putc    #'?'
 7400+ 3  176D			??0641:
 7401+ 3			        ;jnb     SCON.1,putc_loop
 7402+ 3			        ;clr     SCON.1
 7403+ 3  176D	75 99 3F	        mov     SBUF,#'?'
 7404+ 2  1770	75 6E 01	        mov     fail,#001h
 7405+ 2  1773			??0639:
 7406+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 7407+ 1
 7408+ 1			        ; Optionally test immediate addressing modes.
 7409+ 1
 7410+ 1	N      FFFF	        if      (01h and 1) ne 0
 7411+ 1			        ; Test <op> A, #arg1...
 7412+ 1			        top_mb  addc,a,??0616,<081h>
 7413+ 2  1773	74 FB		        mov     a,#arg1
 7414+ 2			        ifnb    <081h>
 7415+ 2			        set_cy  081h
 7416+ 3	N      0001	??0642  set     (081h and 1)
 7417+ 3	N      FFFF	        if      ??0642 eq 1
 7418+ 3  1775	D3		        setb    c
 7419+ 3			        else
 7420+ 3			        clr     c
 7421+ 3			        endif
 7422+ 2			        endif
 7423+ 2  1776	34 43		        addc      a,#arg0
 7424+ 2			        ifnb    <081h>
 7425+ 2			        save_psw
 7426+ 3  1778	85 D0 70	        mov     saved_psw,PSW
 7427+ 2			        endif
 7428+ 2  177B	F5 E0		        mov     ACC,a
 7429+ 2  177D	B4 3F 0F	        cjne    a,#res,??0616
 7430+ 2			        ifnb    <081h>
 7431+ 2			        tst_psw <081h>,??0616
 7432+ 3  1780	E5 70		        mov     a,saved_psw
 7433+ 3  1782	54 C4		        anl     a,#0c4h
 7434+ 3  1784	64 81		        xrl     a,#081h
 7435+ 3  1786	54 FE		        anl     a,#0feh

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 134



 Line  I  Addr  Code            Source

 7436+ 3  1788	70 05		        jnz     ??0616
 7437+ 2			        endif
 7438+ 1			        eot     'e',??0616
 7439+ 2			        putc    #'e'
 7440+ 3  178A			??0644:
 7441+ 3			        ;jnb     SCON.1,putc_loop
 7442+ 3			        ;clr     SCON.1
 7443+ 3  178A	75 99 65	        mov     SBUF,#'e'
 7444+ 2  178D	80 06		        sjmp    ??0643
 7445+ 2  178F			??0616:  putc    #'?'
 7446+ 3  178F			??0645:
 7447+ 3			        ;jnb     SCON.1,putc_loop
 7448+ 3			        ;clr     SCON.1
 7449+ 3  178F	75 99 3F	        mov     SBUF,#'?'
 7450+ 2  1792	75 6E 01	        mov     fail,#001h
 7451+ 2  1795			??0643:
 7452+ 1			        endif
 7453+ 1
 7454+ 1	N      0000	        if      (01h and 2) ne 0
 7455+ 1			        ; ...and <op> dir, #arg1
 7456+ 1			        top_mb  addc,dir0,??0617,<081h>
 7457+ 1			        eot     'f',??0617
 7458+ 1			        endif
 7459+ 1
 7460+ 1			        ; Optionally test <op> dir, A
 7461+ 1	N      0000	        if      (01h and 4) ne 0
 7462+ 1			        top_mc  addc,??0618,<081h>
 7463+ 1			        eot     'g',??0618
 7464+ 1			        endif
 7465+ 1
 7466:
 7467:
 7468:				        put_crlf                    ; end of test series
 7469+ 1			        putc    #13
 7470+ 2  1795			??0646:
 7471+ 2			        ;jnb     SCON.1,putc_loop
 7472+ 2			        ;clr     SCON.1
 7473+ 2  1795	75 99 0D	        mov     SBUF,#13
 7474+ 1			        putc    #10
 7475+ 2  1798			??0647:
 7476+ 2			        ;jnb     SCON.1,putc_loop
 7477+ 2			        ;clr     SCON.1
 7478+ 2  1798	75 99 0A	        mov     SBUF,#10
 7479:
 7480:
 7481:				        ;-- Test series N ------------------------------------------------------
 7482:				        ; SUBB
 7483:				        ; (See comments for 'ALU opcode block test')
 7484:				        ; Note the test runs 4 times for different values of operands
 7485:
 7486:				        putc    #'N'                ; start of test series
 7487+ 1  179B			??0648:
 7488+ 1			        ;jnb     SCON.1,putc_loop
 7489+ 1			        ;clr     SCON.1
 7490+ 1  179B	75 99 4E	        mov     SBUF,#'N'
 7491:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 135



 Line  I  Addr  Code            Source

 7492:				        putc    #'0'
 7493+ 1  179E			??0649:
 7494+ 1			        ;jnb     SCON.1,putc_loop
 7495+ 1			        ;clr     SCON.1
 7496+ 1  179E	75 99 30	        mov     SBUF,#'0'
 7497:				        tst_alu subb,070h,073h,003h,01h,000h     ; /CY /AC /OV
 7498+ 1			        ; Put the argument and result data into variables for easier access
 7499+ 1	N      0070	        arg0    set 070h
 7500+ 1	N      0073	        arg1    set 073h
 7501+ 1	N      0003	        res     set 003h
 7502+ 1
 7503+ 1			        ; Test <op> A, dir
 7504+ 1			        top_ma  subb,dir0,??0651,<000h>
 7505+ 2  17A1	75 60 70	        mov     dir0,#arg0
 7506+ 2  17A4	74 73		        mov     a,#arg1
 7507+ 2			        ifnb    <000h>
 7508+ 2			        set_cy  000h
 7509+ 3	N      0000	??0657  set     (000h and 1)
 7510+ 3	N      0000	        if      ??0657 eq 1
 7511+ 3			        setb    c
 7512+ 3			        else
 7513+ 3  17A6	C3		        clr     c
 7514+ 3			        endif
 7515+ 2			        endif
 7516+ 2  17A7	95 60		        subb      a,dir0
 7517+ 2			        ifnb    <000h>
 7518+ 2			        save_psw
 7519+ 3  17A9	85 D0 70	        mov     saved_psw,PSW
 7520+ 2			        endif
 7521+ 2  17AC	B4 03 6B	        cjne    a,#res,??0651
 7522+ 2			        ifnb    <000h>
 7523+ 2			        tst_psw <000h>,??0651
 7524+ 3  17AF	E5 70		        mov     a,saved_psw
 7525+ 3  17B1	54 C4		        anl     a,#0c4h
 7526+ 3  17B3	64 00		        xrl     a,#000h
 7527+ 3  17B5	54 FE		        anl     a,#0feh
 7528+ 3  17B7	70 61		        jnz     ??0651
 7529+ 2			        endif
 7530+ 1			        ; Test <op> A, @R0
 7531+ 1  17B9	78 60		        mov     r0,#dir0
 7532+ 1			        top_ma  subb,@r0,??0651,<000h>
 7533+ 2  17BB	76 70		        mov     @r0,#arg0
 7534+ 2  17BD	74 73		        mov     a,#arg1
 7535+ 2			        ifnb    <000h>
 7536+ 2			        set_cy  000h
 7537+ 3	N      0000	??0658  set     (000h and 1)
 7538+ 3	N      0000	        if      ??0658 eq 1
 7539+ 3			        setb    c
 7540+ 3			        else
 7541+ 3  17BF	C3		        clr     c
 7542+ 3			        endif
 7543+ 2			        endif
 7544+ 2  17C0	96		        subb      a,@r0
 7545+ 2			        ifnb    <000h>
 7546+ 2			        save_psw
 7547+ 3  17C1	85 D0 70	        mov     saved_psw,PSW

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 136



 Line  I  Addr  Code            Source

 7548+ 2			        endif
 7549+ 2  17C4	B4 03 53	        cjne    a,#res,??0651
 7550+ 2			        ifnb    <000h>
 7551+ 2			        tst_psw <000h>,??0651
 7552+ 3  17C7	E5 70		        mov     a,saved_psw
 7553+ 3  17C9	54 C4		        anl     a,#0c4h
 7554+ 3  17CB	64 00		        xrl     a,#000h
 7555+ 3  17CD	54 FE		        anl     a,#0feh
 7556+ 3  17CF	70 49		        jnz     ??0651
 7557+ 2			        endif
 7558+ 1			        ; Test <op> A, @R1
 7559+ 1  17D1	79 31		        mov     r1,#031h
 7560+ 1			        top_ma  subb,@r1,??0651,<000h>
 7561+ 2  17D3	77 70		        mov     @r1,#arg0
 7562+ 2  17D5	74 73		        mov     a,#arg1
 7563+ 2			        ifnb    <000h>
 7564+ 2			        set_cy  000h
 7565+ 3	N      0000	??0659  set     (000h and 1)
 7566+ 3	N      0000	        if      ??0659 eq 1
 7567+ 3			        setb    c
 7568+ 3			        else
 7569+ 3  17D7	C3		        clr     c
 7570+ 3			        endif
 7571+ 2			        endif
 7572+ 2  17D8	97		        subb      a,@r1
 7573+ 2			        ifnb    <000h>
 7574+ 2			        save_psw
 7575+ 3  17D9	85 D0 70	        mov     saved_psw,PSW
 7576+ 2			        endif
 7577+ 2  17DC	B4 03 3B	        cjne    a,#res,??0651
 7578+ 2			        ifnb    <000h>
 7579+ 2			        tst_psw <000h>,??0651
 7580+ 3  17DF	E5 70		        mov     a,saved_psw
 7581+ 3  17E1	54 C4		        anl     a,#0c4h
 7582+ 3  17E3	64 00		        xrl     a,#000h
 7583+ 3  17E5	54 FE		        anl     a,#0feh
 7584+ 3  17E7	70 31		        jnz     ??0651
 7585+ 2			        endif
 7586+ 1
 7587+ 1			        ; Now test <op> A, Rn for n in 0..7
 7588+ 1			        top_ma  subb,r0,??0651,<000h>
 7589+ 2  17E9	78 70		        mov     r0,#arg0
 7590+ 2  17EB	74 73		        mov     a,#arg1
 7591+ 2			        ifnb    <000h>
 7592+ 2			        set_cy  000h
 7593+ 3	N      0000	??0660  set     (000h and 1)
 7594+ 3	N      0000	        if      ??0660 eq 1
 7595+ 3			        setb    c
 7596+ 3			        else
 7597+ 3  17ED	C3		        clr     c
 7598+ 3			        endif
 7599+ 2			        endif
 7600+ 2  17EE	98		        subb      a,r0
 7601+ 2			        ifnb    <000h>
 7602+ 2			        save_psw
 7603+ 3  17EF	85 D0 70	        mov     saved_psw,PSW

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 137



 Line  I  Addr  Code            Source

 7604+ 2			        endif
 7605+ 2  17F2	B4 03 25	        cjne    a,#res,??0651
 7606+ 2			        ifnb    <000h>
 7607+ 2			        tst_psw <000h>,??0651
 7608+ 3  17F5	E5 70		        mov     a,saved_psw
 7609+ 3  17F7	54 C4		        anl     a,#0c4h
 7610+ 3  17F9	64 00		        xrl     a,#000h
 7611+ 3  17FB	54 FE		        anl     a,#0feh
 7612+ 3  17FD	70 1B		        jnz     ??0651
 7613+ 2			        endif
 7614+ 1			        top_ma  subb,r1,??0651,<000h>
 7615+ 2  17FF	79 70		        mov     r1,#arg0
 7616+ 2  1801	74 73		        mov     a,#arg1
 7617+ 2			        ifnb    <000h>
 7618+ 2			        set_cy  000h
 7619+ 3	N      0000	??0661  set     (000h and 1)
 7620+ 3	N      0000	        if      ??0661 eq 1
 7621+ 3			        setb    c
 7622+ 3			        else
 7623+ 3  1803	C3		        clr     c
 7624+ 3			        endif
 7625+ 2			        endif
 7626+ 2  1804	99		        subb      a,r1
 7627+ 2			        ifnb    <000h>
 7628+ 2			        save_psw
 7629+ 3  1805	85 D0 70	        mov     saved_psw,PSW
 7630+ 2			        endif
 7631+ 2  1808	B4 03 0F	        cjne    a,#res,??0651
 7632+ 2			        ifnb    <000h>
 7633+ 2			        tst_psw <000h>,??0651
 7634+ 3  180B	E5 70		        mov     a,saved_psw
 7635+ 3  180D	54 C4		        anl     a,#0c4h
 7636+ 3  180F	64 00		        xrl     a,#000h
 7637+ 3  1811	54 FE		        anl     a,#0feh
 7638+ 3  1813	70 05		        jnz     ??0651
 7639+ 2			        endif
 7640+ 1
 7641+ 1			        eot     'a',??0651
 7642+ 2			        putc    #'a'
 7643+ 3  1815			??0663:
 7644+ 3			        ;jnb     SCON.1,putc_loop
 7645+ 3			        ;clr     SCON.1
 7646+ 3  1815	75 99 61	        mov     SBUF,#'a'
 7647+ 2  1818	80 06		        sjmp    ??0662
 7648+ 2  181A			??0651:  putc    #'?'
 7649+ 3  181A			??0664:
 7650+ 3			        ;jnb     SCON.1,putc_loop
 7651+ 3			        ;clr     SCON.1
 7652+ 3  181A	75 99 3F	        mov     SBUF,#'?'
 7653+ 2  181D	75 6E 01	        mov     fail,#001h
 7654+ 2  1820			??0662:
 7655+ 1
 7656+ 1			        top_ma  subb,r2,??0652,<000h>
 7657+ 2  1820	7A 70		        mov     r2,#arg0
 7658+ 2  1822	74 73		        mov     a,#arg1
 7659+ 2			        ifnb    <000h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 138



 Line  I  Addr  Code            Source

 7660+ 2			        set_cy  000h
 7661+ 3	N      0000	??0665  set     (000h and 1)
 7662+ 3	N      0000	        if      ??0665 eq 1
 7663+ 3			        setb    c
 7664+ 3			        else
 7665+ 3  1824	C3		        clr     c
 7666+ 3			        endif
 7667+ 2			        endif
 7668+ 2  1825	9A		        subb      a,r2
 7669+ 2			        ifnb    <000h>
 7670+ 2			        save_psw
 7671+ 3  1826	85 D0 70	        mov     saved_psw,PSW
 7672+ 2			        endif
 7673+ 2  1829	B4 03 25	        cjne    a,#res,??0652
 7674+ 2			        ifnb    <000h>
 7675+ 2			        tst_psw <000h>,??0652
 7676+ 3  182C	E5 70		        mov     a,saved_psw
 7677+ 3  182E	54 C4		        anl     a,#0c4h
 7678+ 3  1830	64 00		        xrl     a,#000h
 7679+ 3  1832	54 FE		        anl     a,#0feh
 7680+ 3  1834	70 1B		        jnz     ??0652
 7681+ 2			        endif
 7682+ 1			        top_ma  subb,r3,??0652,<000h>
 7683+ 2  1836	7B 70		        mov     r3,#arg0
 7684+ 2  1838	74 73		        mov     a,#arg1
 7685+ 2			        ifnb    <000h>
 7686+ 2			        set_cy  000h
 7687+ 3	N      0000	??0666  set     (000h and 1)
 7688+ 3	N      0000	        if      ??0666 eq 1
 7689+ 3			        setb    c
 7690+ 3			        else
 7691+ 3  183A	C3		        clr     c
 7692+ 3			        endif
 7693+ 2			        endif
 7694+ 2  183B	9B		        subb      a,r3
 7695+ 2			        ifnb    <000h>
 7696+ 2			        save_psw
 7697+ 3  183C	85 D0 70	        mov     saved_psw,PSW
 7698+ 2			        endif
 7699+ 2  183F	B4 03 0F	        cjne    a,#res,??0652
 7700+ 2			        ifnb    <000h>
 7701+ 2			        tst_psw <000h>,??0652
 7702+ 3  1842	E5 70		        mov     a,saved_psw
 7703+ 3  1844	54 C4		        anl     a,#0c4h
 7704+ 3  1846	64 00		        xrl     a,#000h
 7705+ 3  1848	54 FE		        anl     a,#0feh
 7706+ 3  184A	70 05		        jnz     ??0652
 7707+ 2			        endif
 7708+ 1
 7709+ 1			        eot     'b',??0652
 7710+ 2			        putc    #'b'
 7711+ 3  184C			??0668:
 7712+ 3			        ;jnb     SCON.1,putc_loop
 7713+ 3			        ;clr     SCON.1
 7714+ 3  184C	75 99 62	        mov     SBUF,#'b'
 7715+ 2  184F	80 06		        sjmp    ??0667

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 139



 Line  I  Addr  Code            Source

 7716+ 2  1851			??0652:  putc    #'?'
 7717+ 3  1851			??0669:
 7718+ 3			        ;jnb     SCON.1,putc_loop
 7719+ 3			        ;clr     SCON.1
 7720+ 3  1851	75 99 3F	        mov     SBUF,#'?'
 7721+ 2  1854	75 6E 01	        mov     fail,#001h
 7722+ 2  1857			??0667:
 7723+ 1
 7724+ 1			        top_ma  subb,r4,??0653,<000h>
 7725+ 2  1857	7C 70		        mov     r4,#arg0
 7726+ 2  1859	74 73		        mov     a,#arg1
 7727+ 2			        ifnb    <000h>
 7728+ 2			        set_cy  000h
 7729+ 3	N      0000	??0670  set     (000h and 1)
 7730+ 3	N      0000	        if      ??0670 eq 1
 7731+ 3			        setb    c
 7732+ 3			        else
 7733+ 3  185B	C3		        clr     c
 7734+ 3			        endif
 7735+ 2			        endif
 7736+ 2  185C	9C		        subb      a,r4
 7737+ 2			        ifnb    <000h>
 7738+ 2			        save_psw
 7739+ 3  185D	85 D0 70	        mov     saved_psw,PSW
 7740+ 2			        endif
 7741+ 2  1860	B4 03 25	        cjne    a,#res,??0653
 7742+ 2			        ifnb    <000h>
 7743+ 2			        tst_psw <000h>,??0653
 7744+ 3  1863	E5 70		        mov     a,saved_psw
 7745+ 3  1865	54 C4		        anl     a,#0c4h
 7746+ 3  1867	64 00		        xrl     a,#000h
 7747+ 3  1869	54 FE		        anl     a,#0feh
 7748+ 3  186B	70 1B		        jnz     ??0653
 7749+ 2			        endif
 7750+ 1			        top_ma  subb,r5,??0653,<000h>
 7751+ 2  186D	7D 70		        mov     r5,#arg0
 7752+ 2  186F	74 73		        mov     a,#arg1
 7753+ 2			        ifnb    <000h>
 7754+ 2			        set_cy  000h
 7755+ 3	N      0000	??0671  set     (000h and 1)
 7756+ 3	N      0000	        if      ??0671 eq 1
 7757+ 3			        setb    c
 7758+ 3			        else
 7759+ 3  1871	C3		        clr     c
 7760+ 3			        endif
 7761+ 2			        endif
 7762+ 2  1872	9D		        subb      a,r5
 7763+ 2			        ifnb    <000h>
 7764+ 2			        save_psw
 7765+ 3  1873	85 D0 70	        mov     saved_psw,PSW
 7766+ 2			        endif
 7767+ 2  1876	B4 03 0F	        cjne    a,#res,??0653
 7768+ 2			        ifnb    <000h>
 7769+ 2			        tst_psw <000h>,??0653
 7770+ 3  1879	E5 70		        mov     a,saved_psw
 7771+ 3  187B	54 C4		        anl     a,#0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 140



 Line  I  Addr  Code            Source

 7772+ 3  187D	64 00		        xrl     a,#000h
 7773+ 3  187F	54 FE		        anl     a,#0feh
 7774+ 3  1881	70 05		        jnz     ??0653
 7775+ 2			        endif
 7776+ 1
 7777+ 1			        eot     'c',??0653
 7778+ 2			        putc    #'c'
 7779+ 3  1883			??0673:
 7780+ 3			        ;jnb     SCON.1,putc_loop
 7781+ 3			        ;clr     SCON.1
 7782+ 3  1883	75 99 63	        mov     SBUF,#'c'
 7783+ 2  1886	80 06		        sjmp    ??0672
 7784+ 2  1888			??0653:  putc    #'?'
 7785+ 3  1888			??0674:
 7786+ 3			        ;jnb     SCON.1,putc_loop
 7787+ 3			        ;clr     SCON.1
 7788+ 3  1888	75 99 3F	        mov     SBUF,#'?'
 7789+ 2  188B	75 6E 01	        mov     fail,#001h
 7790+ 2  188E			??0672:
 7791+ 1
 7792+ 1			        top_ma  subb,r6,??0650,<000h>
 7793+ 2  188E	7E 70		        mov     r6,#arg0
 7794+ 2  1890	74 73		        mov     a,#arg1
 7795+ 2			        ifnb    <000h>
 7796+ 2			        set_cy  000h
 7797+ 3	N      0000	??0675  set     (000h and 1)
 7798+ 3	N      0000	        if      ??0675 eq 1
 7799+ 3			        setb    c
 7800+ 3			        else
 7801+ 3  1892	C3		        clr     c
 7802+ 3			        endif
 7803+ 2			        endif
 7804+ 2  1893	9E		        subb      a,r6
 7805+ 2			        ifnb    <000h>
 7806+ 2			        save_psw
 7807+ 3  1894	85 D0 70	        mov     saved_psw,PSW
 7808+ 2			        endif
 7809+ 2  1897	B4 03 25	        cjne    a,#res,??0650
 7810+ 2			        ifnb    <000h>
 7811+ 2			        tst_psw <000h>,??0650
 7812+ 3  189A	E5 70		        mov     a,saved_psw
 7813+ 3  189C	54 C4		        anl     a,#0c4h
 7814+ 3  189E	64 00		        xrl     a,#000h
 7815+ 3  18A0	54 FE		        anl     a,#0feh
 7816+ 3  18A2	70 1B		        jnz     ??0650
 7817+ 2			        endif
 7818+ 1			        top_ma  subb,r7,??0650,<000h>
 7819+ 2  18A4	7F 70		        mov     r7,#arg0
 7820+ 2  18A6	74 73		        mov     a,#arg1
 7821+ 2			        ifnb    <000h>
 7822+ 2			        set_cy  000h
 7823+ 3	N      0000	??0676  set     (000h and 1)
 7824+ 3	N      0000	        if      ??0676 eq 1
 7825+ 3			        setb    c
 7826+ 3			        else
 7827+ 3  18A8	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 141



 Line  I  Addr  Code            Source

 7828+ 3			        endif
 7829+ 2			        endif
 7830+ 2  18A9	9F		        subb      a,r7
 7831+ 2			        ifnb    <000h>
 7832+ 2			        save_psw
 7833+ 3  18AA	85 D0 70	        mov     saved_psw,PSW
 7834+ 2			        endif
 7835+ 2  18AD	B4 03 0F	        cjne    a,#res,??0650
 7836+ 2			        ifnb    <000h>
 7837+ 2			        tst_psw <000h>,??0650
 7838+ 3  18B0	E5 70		        mov     a,saved_psw
 7839+ 3  18B2	54 C4		        anl     a,#0c4h
 7840+ 3  18B4	64 00		        xrl     a,#000h
 7841+ 3  18B6	54 FE		        anl     a,#0feh
 7842+ 3  18B8	70 05		        jnz     ??0650
 7843+ 2			        endif
 7844+ 1
 7845+ 1			        eot     'd',??0650
 7846+ 2			        putc    #'d'
 7847+ 3  18BA			??0678:
 7848+ 3			        ;jnb     SCON.1,putc_loop
 7849+ 3			        ;clr     SCON.1
 7850+ 3  18BA	75 99 64	        mov     SBUF,#'d'
 7851+ 2  18BD	80 06		        sjmp    ??0677
 7852+ 2  18BF			??0650:  putc    #'?'
 7853+ 3  18BF			??0679:
 7854+ 3			        ;jnb     SCON.1,putc_loop
 7855+ 3			        ;clr     SCON.1
 7856+ 3  18BF	75 99 3F	        mov     SBUF,#'?'
 7857+ 2  18C2	75 6E 01	        mov     fail,#001h
 7858+ 2  18C5			??0677:
 7859+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 7860+ 1
 7861+ 1			        ; Optionally test immediate addressing modes.
 7862+ 1
 7863+ 1	N      FFFF	        if      (01h and 1) ne 0
 7864+ 1			        ; Test <op> A, #arg1...
 7865+ 1			        top_mb  subb,a,??0654,<000h>
 7866+ 2  18C5	74 73		        mov     a,#arg1
 7867+ 2			        ifnb    <000h>
 7868+ 2			        set_cy  000h
 7869+ 3	N      0000	??0680  set     (000h and 1)
 7870+ 3	N      0000	        if      ??0680 eq 1
 7871+ 3			        setb    c
 7872+ 3			        else
 7873+ 3  18C7	C3		        clr     c
 7874+ 3			        endif
 7875+ 2			        endif
 7876+ 2  18C8	94 70		        subb      a,#arg0
 7877+ 2			        ifnb    <000h>
 7878+ 2			        save_psw
 7879+ 3  18CA	85 D0 70	        mov     saved_psw,PSW
 7880+ 2			        endif
 7881+ 2  18CD	F5 E0		        mov     ACC,a
 7882+ 2  18CF	B4 03 0F	        cjne    a,#res,??0654
 7883+ 2			        ifnb    <000h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 142



 Line  I  Addr  Code            Source

 7884+ 2			        tst_psw <000h>,??0654
 7885+ 3  18D2	E5 70		        mov     a,saved_psw
 7886+ 3  18D4	54 C4		        anl     a,#0c4h
 7887+ 3  18D6	64 00		        xrl     a,#000h
 7888+ 3  18D8	54 FE		        anl     a,#0feh
 7889+ 3  18DA	70 05		        jnz     ??0654
 7890+ 2			        endif
 7891+ 1			        eot     'e',??0654
 7892+ 2			        putc    #'e'
 7893+ 3  18DC			??0682:
 7894+ 3			        ;jnb     SCON.1,putc_loop
 7895+ 3			        ;clr     SCON.1
 7896+ 3  18DC	75 99 65	        mov     SBUF,#'e'
 7897+ 2  18DF	80 06		        sjmp    ??0681
 7898+ 2  18E1			??0654:  putc    #'?'
 7899+ 3  18E1			??0683:
 7900+ 3			        ;jnb     SCON.1,putc_loop
 7901+ 3			        ;clr     SCON.1
 7902+ 3  18E1	75 99 3F	        mov     SBUF,#'?'
 7903+ 2  18E4	75 6E 01	        mov     fail,#001h
 7904+ 2  18E7			??0681:
 7905+ 1			        endif
 7906+ 1
 7907+ 1	N      0000	        if      (01h and 2) ne 0
 7908+ 1			        ; ...and <op> dir, #arg1
 7909+ 1			        top_mb  subb,dir0,??0655,<000h>
 7910+ 1			        eot     'f',??0655
 7911+ 1			        endif
 7912+ 1
 7913+ 1			        ; Optionally test <op> dir, A
 7914+ 1	N      0000	        if      (01h and 4) ne 0
 7915+ 1			        top_mc  subb,??0656,<000h>
 7916+ 1			        eot     'g',??0656
 7917+ 1			        endif
 7918+ 1
 7919:				        putc    #'1'
 7920+ 1  18E7			??0684:
 7921+ 1			        ;jnb     SCON.1,putc_loop
 7922+ 1			        ;clr     SCON.1
 7923+ 1  18E7	75 99 31	        mov     SBUF,#'1'
 7924:				        tst_alu subb,070h,073h,002h,01h,001h     ; /CY /AC /OV (CY input)
 7925+ 1			        ; Put the argument and result data into variables for easier access
 7926+ 1	N      0070	        arg0    set 070h
 7927+ 1	N      0073	        arg1    set 073h
 7928+ 1	N      0002	        res     set 002h
 7929+ 1
 7930+ 1			        ; Test <op> A, dir
 7931+ 1			        top_ma  subb,dir0,??0686,<001h>
 7932+ 2  18EA	75 60 70	        mov     dir0,#arg0
 7933+ 2  18ED	74 73		        mov     a,#arg1
 7934+ 2			        ifnb    <001h>
 7935+ 2			        set_cy  001h
 7936+ 3	N      0001	??0692  set     (001h and 1)
 7937+ 3	N      FFFF	        if      ??0692 eq 1
 7938+ 3  18EF	D3		        setb    c
 7939+ 3			        else

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 143



 Line  I  Addr  Code            Source

 7940+ 3			        clr     c
 7941+ 3			        endif
 7942+ 2			        endif
 7943+ 2  18F0	95 60		        subb      a,dir0
 7944+ 2			        ifnb    <001h>
 7945+ 2			        save_psw
 7946+ 3  18F2	85 D0 70	        mov     saved_psw,PSW
 7947+ 2			        endif
 7948+ 2  18F5	B4 02 6B	        cjne    a,#res,??0686
 7949+ 2			        ifnb    <001h>
 7950+ 2			        tst_psw <001h>,??0686
 7951+ 3  18F8	E5 70		        mov     a,saved_psw
 7952+ 3  18FA	54 C4		        anl     a,#0c4h
 7953+ 3  18FC	64 01		        xrl     a,#001h
 7954+ 3  18FE	54 FE		        anl     a,#0feh
 7955+ 3  1900	70 61		        jnz     ??0686
 7956+ 2			        endif
 7957+ 1			        ; Test <op> A, @R0
 7958+ 1  1902	78 60		        mov     r0,#dir0
 7959+ 1			        top_ma  subb,@r0,??0686,<001h>
 7960+ 2  1904	76 70		        mov     @r0,#arg0
 7961+ 2  1906	74 73		        mov     a,#arg1
 7962+ 2			        ifnb    <001h>
 7963+ 2			        set_cy  001h
 7964+ 3	N      0001	??0693  set     (001h and 1)
 7965+ 3	N      FFFF	        if      ??0693 eq 1
 7966+ 3  1908	D3		        setb    c
 7967+ 3			        else
 7968+ 3			        clr     c
 7969+ 3			        endif
 7970+ 2			        endif
 7971+ 2  1909	96		        subb      a,@r0
 7972+ 2			        ifnb    <001h>
 7973+ 2			        save_psw
 7974+ 3  190A	85 D0 70	        mov     saved_psw,PSW
 7975+ 2			        endif
 7976+ 2  190D	B4 02 53	        cjne    a,#res,??0686
 7977+ 2			        ifnb    <001h>
 7978+ 2			        tst_psw <001h>,??0686
 7979+ 3  1910	E5 70		        mov     a,saved_psw
 7980+ 3  1912	54 C4		        anl     a,#0c4h
 7981+ 3  1914	64 01		        xrl     a,#001h
 7982+ 3  1916	54 FE		        anl     a,#0feh
 7983+ 3  1918	70 49		        jnz     ??0686
 7984+ 2			        endif
 7985+ 1			        ; Test <op> A, @R1
 7986+ 1  191A	79 31		        mov     r1,#031h
 7987+ 1			        top_ma  subb,@r1,??0686,<001h>
 7988+ 2  191C	77 70		        mov     @r1,#arg0
 7989+ 2  191E	74 73		        mov     a,#arg1
 7990+ 2			        ifnb    <001h>
 7991+ 2			        set_cy  001h
 7992+ 3	N      0001	??0694  set     (001h and 1)
 7993+ 3	N      FFFF	        if      ??0694 eq 1
 7994+ 3  1920	D3		        setb    c
 7995+ 3			        else

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 144



 Line  I  Addr  Code            Source

 7996+ 3			        clr     c
 7997+ 3			        endif
 7998+ 2			        endif
 7999+ 2  1921	97		        subb      a,@r1
 8000+ 2			        ifnb    <001h>
 8001+ 2			        save_psw
 8002+ 3  1922	85 D0 70	        mov     saved_psw,PSW
 8003+ 2			        endif
 8004+ 2  1925	B4 02 3B	        cjne    a,#res,??0686
 8005+ 2			        ifnb    <001h>
 8006+ 2			        tst_psw <001h>,??0686
 8007+ 3  1928	E5 70		        mov     a,saved_psw
 8008+ 3  192A	54 C4		        anl     a,#0c4h
 8009+ 3  192C	64 01		        xrl     a,#001h
 8010+ 3  192E	54 FE		        anl     a,#0feh
 8011+ 3  1930	70 31		        jnz     ??0686
 8012+ 2			        endif
 8013+ 1
 8014+ 1			        ; Now test <op> A, Rn for n in 0..7
 8015+ 1			        top_ma  subb,r0,??0686,<001h>
 8016+ 2  1932	78 70		        mov     r0,#arg0
 8017+ 2  1934	74 73		        mov     a,#arg1
 8018+ 2			        ifnb    <001h>
 8019+ 2			        set_cy  001h
 8020+ 3	N      0001	??0695  set     (001h and 1)
 8021+ 3	N      FFFF	        if      ??0695 eq 1
 8022+ 3  1936	D3		        setb    c
 8023+ 3			        else
 8024+ 3			        clr     c
 8025+ 3			        endif
 8026+ 2			        endif
 8027+ 2  1937	98		        subb      a,r0
 8028+ 2			        ifnb    <001h>
 8029+ 2			        save_psw
 8030+ 3  1938	85 D0 70	        mov     saved_psw,PSW
 8031+ 2			        endif
 8032+ 2  193B	B4 02 25	        cjne    a,#res,??0686
 8033+ 2			        ifnb    <001h>
 8034+ 2			        tst_psw <001h>,??0686
 8035+ 3  193E	E5 70		        mov     a,saved_psw
 8036+ 3  1940	54 C4		        anl     a,#0c4h
 8037+ 3  1942	64 01		        xrl     a,#001h
 8038+ 3  1944	54 FE		        anl     a,#0feh
 8039+ 3  1946	70 1B		        jnz     ??0686
 8040+ 2			        endif
 8041+ 1			        top_ma  subb,r1,??0686,<001h>
 8042+ 2  1948	79 70		        mov     r1,#arg0
 8043+ 2  194A	74 73		        mov     a,#arg1
 8044+ 2			        ifnb    <001h>
 8045+ 2			        set_cy  001h
 8046+ 3	N      0001	??0696  set     (001h and 1)
 8047+ 3	N      FFFF	        if      ??0696 eq 1
 8048+ 3  194C	D3		        setb    c
 8049+ 3			        else
 8050+ 3			        clr     c
 8051+ 3			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 145



 Line  I  Addr  Code            Source

 8052+ 2			        endif
 8053+ 2  194D	99		        subb      a,r1
 8054+ 2			        ifnb    <001h>
 8055+ 2			        save_psw
 8056+ 3  194E	85 D0 70	        mov     saved_psw,PSW
 8057+ 2			        endif
 8058+ 2  1951	B4 02 0F	        cjne    a,#res,??0686
 8059+ 2			        ifnb    <001h>
 8060+ 2			        tst_psw <001h>,??0686
 8061+ 3  1954	E5 70		        mov     a,saved_psw
 8062+ 3  1956	54 C4		        anl     a,#0c4h
 8063+ 3  1958	64 01		        xrl     a,#001h
 8064+ 3  195A	54 FE		        anl     a,#0feh
 8065+ 3  195C	70 05		        jnz     ??0686
 8066+ 2			        endif
 8067+ 1
 8068+ 1			        eot     'a',??0686
 8069+ 2			        putc    #'a'
 8070+ 3  195E			??0698:
 8071+ 3			        ;jnb     SCON.1,putc_loop
 8072+ 3			        ;clr     SCON.1
 8073+ 3  195E	75 99 61	        mov     SBUF,#'a'
 8074+ 2  1961	80 06		        sjmp    ??0697
 8075+ 2  1963			??0686:  putc    #'?'
 8076+ 3  1963			??0699:
 8077+ 3			        ;jnb     SCON.1,putc_loop
 8078+ 3			        ;clr     SCON.1
 8079+ 3  1963	75 99 3F	        mov     SBUF,#'?'
 8080+ 2  1966	75 6E 01	        mov     fail,#001h
 8081+ 2  1969			??0697:
 8082+ 1
 8083+ 1			        top_ma  subb,r2,??0687,<001h>
 8084+ 2  1969	7A 70		        mov     r2,#arg0
 8085+ 2  196B	74 73		        mov     a,#arg1
 8086+ 2			        ifnb    <001h>
 8087+ 2			        set_cy  001h
 8088+ 3	N      0001	??0700  set     (001h and 1)
 8089+ 3	N      FFFF	        if      ??0700 eq 1
 8090+ 3  196D	D3		        setb    c
 8091+ 3			        else
 8092+ 3			        clr     c
 8093+ 3			        endif
 8094+ 2			        endif
 8095+ 2  196E	9A		        subb      a,r2
 8096+ 2			        ifnb    <001h>
 8097+ 2			        save_psw
 8098+ 3  196F	85 D0 70	        mov     saved_psw,PSW
 8099+ 2			        endif
 8100+ 2  1972	B4 02 25	        cjne    a,#res,??0687
 8101+ 2			        ifnb    <001h>
 8102+ 2			        tst_psw <001h>,??0687
 8103+ 3  1975	E5 70		        mov     a,saved_psw
 8104+ 3  1977	54 C4		        anl     a,#0c4h
 8105+ 3  1979	64 01		        xrl     a,#001h
 8106+ 3  197B	54 FE		        anl     a,#0feh
 8107+ 3  197D	70 1B		        jnz     ??0687

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 146



 Line  I  Addr  Code            Source

 8108+ 2			        endif
 8109+ 1			        top_ma  subb,r3,??0687,<001h>
 8110+ 2  197F	7B 70		        mov     r3,#arg0
 8111+ 2  1981	74 73		        mov     a,#arg1
 8112+ 2			        ifnb    <001h>
 8113+ 2			        set_cy  001h
 8114+ 3	N      0001	??0701  set     (001h and 1)
 8115+ 3	N      FFFF	        if      ??0701 eq 1
 8116+ 3  1983	D3		        setb    c
 8117+ 3			        else
 8118+ 3			        clr     c
 8119+ 3			        endif
 8120+ 2			        endif
 8121+ 2  1984	9B		        subb      a,r3
 8122+ 2			        ifnb    <001h>
 8123+ 2			        save_psw
 8124+ 3  1985	85 D0 70	        mov     saved_psw,PSW
 8125+ 2			        endif
 8126+ 2  1988	B4 02 0F	        cjne    a,#res,??0687
 8127+ 2			        ifnb    <001h>
 8128+ 2			        tst_psw <001h>,??0687
 8129+ 3  198B	E5 70		        mov     a,saved_psw
 8130+ 3  198D	54 C4		        anl     a,#0c4h
 8131+ 3  198F	64 01		        xrl     a,#001h
 8132+ 3  1991	54 FE		        anl     a,#0feh
 8133+ 3  1993	70 05		        jnz     ??0687
 8134+ 2			        endif
 8135+ 1
 8136+ 1			        eot     'b',??0687
 8137+ 2			        putc    #'b'
 8138+ 3  1995			??0703:
 8139+ 3			        ;jnb     SCON.1,putc_loop
 8140+ 3			        ;clr     SCON.1
 8141+ 3  1995	75 99 62	        mov     SBUF,#'b'
 8142+ 2  1998	80 06		        sjmp    ??0702
 8143+ 2  199A			??0687:  putc    #'?'
 8144+ 3  199A			??0704:
 8145+ 3			        ;jnb     SCON.1,putc_loop
 8146+ 3			        ;clr     SCON.1
 8147+ 3  199A	75 99 3F	        mov     SBUF,#'?'
 8148+ 2  199D	75 6E 01	        mov     fail,#001h
 8149+ 2  19A0			??0702:
 8150+ 1
 8151+ 1			        top_ma  subb,r4,??0688,<001h>
 8152+ 2  19A0	7C 70		        mov     r4,#arg0
 8153+ 2  19A2	74 73		        mov     a,#arg1
 8154+ 2			        ifnb    <001h>
 8155+ 2			        set_cy  001h
 8156+ 3	N      0001	??0705  set     (001h and 1)
 8157+ 3	N      FFFF	        if      ??0705 eq 1
 8158+ 3  19A4	D3		        setb    c
 8159+ 3			        else
 8160+ 3			        clr     c
 8161+ 3			        endif
 8162+ 2			        endif
 8163+ 2  19A5	9C		        subb      a,r4

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 147



 Line  I  Addr  Code            Source

 8164+ 2			        ifnb    <001h>
 8165+ 2			        save_psw
 8166+ 3  19A6	85 D0 70	        mov     saved_psw,PSW
 8167+ 2			        endif
 8168+ 2  19A9	B4 02 25	        cjne    a,#res,??0688
 8169+ 2			        ifnb    <001h>
 8170+ 2			        tst_psw <001h>,??0688
 8171+ 3  19AC	E5 70		        mov     a,saved_psw
 8172+ 3  19AE	54 C4		        anl     a,#0c4h
 8173+ 3  19B0	64 01		        xrl     a,#001h
 8174+ 3  19B2	54 FE		        anl     a,#0feh
 8175+ 3  19B4	70 1B		        jnz     ??0688
 8176+ 2			        endif
 8177+ 1			        top_ma  subb,r5,??0688,<001h>
 8178+ 2  19B6	7D 70		        mov     r5,#arg0
 8179+ 2  19B8	74 73		        mov     a,#arg1
 8180+ 2			        ifnb    <001h>
 8181+ 2			        set_cy  001h
 8182+ 3	N      0001	??0706  set     (001h and 1)
 8183+ 3	N      FFFF	        if      ??0706 eq 1
 8184+ 3  19BA	D3		        setb    c
 8185+ 3			        else
 8186+ 3			        clr     c
 8187+ 3			        endif
 8188+ 2			        endif
 8189+ 2  19BB	9D		        subb      a,r5
 8190+ 2			        ifnb    <001h>
 8191+ 2			        save_psw
 8192+ 3  19BC	85 D0 70	        mov     saved_psw,PSW
 8193+ 2			        endif
 8194+ 2  19BF	B4 02 0F	        cjne    a,#res,??0688
 8195+ 2			        ifnb    <001h>
 8196+ 2			        tst_psw <001h>,??0688
 8197+ 3  19C2	E5 70		        mov     a,saved_psw
 8198+ 3  19C4	54 C4		        anl     a,#0c4h
 8199+ 3  19C6	64 01		        xrl     a,#001h
 8200+ 3  19C8	54 FE		        anl     a,#0feh
 8201+ 3  19CA	70 05		        jnz     ??0688
 8202+ 2			        endif
 8203+ 1
 8204+ 1			        eot     'c',??0688
 8205+ 2			        putc    #'c'
 8206+ 3  19CC			??0708:
 8207+ 3			        ;jnb     SCON.1,putc_loop
 8208+ 3			        ;clr     SCON.1
 8209+ 3  19CC	75 99 63	        mov     SBUF,#'c'
 8210+ 2  19CF	80 06		        sjmp    ??0707
 8211+ 2  19D1			??0688:  putc    #'?'
 8212+ 3  19D1			??0709:
 8213+ 3			        ;jnb     SCON.1,putc_loop
 8214+ 3			        ;clr     SCON.1
 8215+ 3  19D1	75 99 3F	        mov     SBUF,#'?'
 8216+ 2  19D4	75 6E 01	        mov     fail,#001h
 8217+ 2  19D7			??0707:
 8218+ 1
 8219+ 1			        top_ma  subb,r6,??0685,<001h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 148



 Line  I  Addr  Code            Source

 8220+ 2  19D7	7E 70		        mov     r6,#arg0
 8221+ 2  19D9	74 73		        mov     a,#arg1
 8222+ 2			        ifnb    <001h>
 8223+ 2			        set_cy  001h
 8224+ 3	N      0001	??0710  set     (001h and 1)
 8225+ 3	N      FFFF	        if      ??0710 eq 1
 8226+ 3  19DB	D3		        setb    c
 8227+ 3			        else
 8228+ 3			        clr     c
 8229+ 3			        endif
 8230+ 2			        endif
 8231+ 2  19DC	9E		        subb      a,r6
 8232+ 2			        ifnb    <001h>
 8233+ 2			        save_psw
 8234+ 3  19DD	85 D0 70	        mov     saved_psw,PSW
 8235+ 2			        endif
 8236+ 2  19E0	B4 02 25	        cjne    a,#res,??0685
 8237+ 2			        ifnb    <001h>
 8238+ 2			        tst_psw <001h>,??0685
 8239+ 3  19E3	E5 70		        mov     a,saved_psw
 8240+ 3  19E5	54 C4		        anl     a,#0c4h
 8241+ 3  19E7	64 01		        xrl     a,#001h
 8242+ 3  19E9	54 FE		        anl     a,#0feh
 8243+ 3  19EB	70 1B		        jnz     ??0685
 8244+ 2			        endif
 8245+ 1			        top_ma  subb,r7,??0685,<001h>
 8246+ 2  19ED	7F 70		        mov     r7,#arg0
 8247+ 2  19EF	74 73		        mov     a,#arg1
 8248+ 2			        ifnb    <001h>
 8249+ 2			        set_cy  001h
 8250+ 3	N      0001	??0711  set     (001h and 1)
 8251+ 3	N      FFFF	        if      ??0711 eq 1
 8252+ 3  19F1	D3		        setb    c
 8253+ 3			        else
 8254+ 3			        clr     c
 8255+ 3			        endif
 8256+ 2			        endif
 8257+ 2  19F2	9F		        subb      a,r7
 8258+ 2			        ifnb    <001h>
 8259+ 2			        save_psw
 8260+ 3  19F3	85 D0 70	        mov     saved_psw,PSW
 8261+ 2			        endif
 8262+ 2  19F6	B4 02 0F	        cjne    a,#res,??0685
 8263+ 2			        ifnb    <001h>
 8264+ 2			        tst_psw <001h>,??0685
 8265+ 3  19F9	E5 70		        mov     a,saved_psw
 8266+ 3  19FB	54 C4		        anl     a,#0c4h
 8267+ 3  19FD	64 01		        xrl     a,#001h
 8268+ 3  19FF	54 FE		        anl     a,#0feh
 8269+ 3  1A01	70 05		        jnz     ??0685
 8270+ 2			        endif
 8271+ 1
 8272+ 1			        eot     'd',??0685
 8273+ 2			        putc    #'d'
 8274+ 3  1A03			??0713:
 8275+ 3			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 149



 Line  I  Addr  Code            Source

 8276+ 3			        ;clr     SCON.1
 8277+ 3  1A03	75 99 64	        mov     SBUF,#'d'
 8278+ 2  1A06	80 06		        sjmp    ??0712
 8279+ 2  1A08			??0685:  putc    #'?'
 8280+ 3  1A08			??0714:
 8281+ 3			        ;jnb     SCON.1,putc_loop
 8282+ 3			        ;clr     SCON.1
 8283+ 3  1A08	75 99 3F	        mov     SBUF,#'?'
 8284+ 2  1A0B	75 6E 01	        mov     fail,#001h
 8285+ 2  1A0E			??0712:
 8286+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 8287+ 1
 8288+ 1			        ; Optionally test immediate addressing modes.
 8289+ 1
 8290+ 1	N      FFFF	        if      (01h and 1) ne 0
 8291+ 1			        ; Test <op> A, #arg1...
 8292+ 1			        top_mb  subb,a,??0689,<001h>
 8293+ 2  1A0E	74 73		        mov     a,#arg1
 8294+ 2			        ifnb    <001h>
 8295+ 2			        set_cy  001h
 8296+ 3	N      0001	??0715  set     (001h and 1)
 8297+ 3	N      FFFF	        if      ??0715 eq 1
 8298+ 3  1A10	D3		        setb    c
 8299+ 3			        else
 8300+ 3			        clr     c
 8301+ 3			        endif
 8302+ 2			        endif
 8303+ 2  1A11	94 70		        subb      a,#arg0
 8304+ 2			        ifnb    <001h>
 8305+ 2			        save_psw
 8306+ 3  1A13	85 D0 70	        mov     saved_psw,PSW
 8307+ 2			        endif
 8308+ 2  1A16	F5 E0		        mov     ACC,a
 8309+ 2  1A18	B4 02 0F	        cjne    a,#res,??0689
 8310+ 2			        ifnb    <001h>
 8311+ 2			        tst_psw <001h>,??0689
 8312+ 3  1A1B	E5 70		        mov     a,saved_psw
 8313+ 3  1A1D	54 C4		        anl     a,#0c4h
 8314+ 3  1A1F	64 01		        xrl     a,#001h
 8315+ 3  1A21	54 FE		        anl     a,#0feh
 8316+ 3  1A23	70 05		        jnz     ??0689
 8317+ 2			        endif
 8318+ 1			        eot     'e',??0689
 8319+ 2			        putc    #'e'
 8320+ 3  1A25			??0717:
 8321+ 3			        ;jnb     SCON.1,putc_loop
 8322+ 3			        ;clr     SCON.1
 8323+ 3  1A25	75 99 65	        mov     SBUF,#'e'
 8324+ 2  1A28	80 06		        sjmp    ??0716
 8325+ 2  1A2A			??0689:  putc    #'?'
 8326+ 3  1A2A			??0718:
 8327+ 3			        ;jnb     SCON.1,putc_loop
 8328+ 3			        ;clr     SCON.1
 8329+ 3  1A2A	75 99 3F	        mov     SBUF,#'?'
 8330+ 2  1A2D	75 6E 01	        mov     fail,#001h
 8331+ 2  1A30			??0716:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 150



 Line  I  Addr  Code            Source

 8332+ 1			        endif
 8333+ 1
 8334+ 1	N      0000	        if      (01h and 2) ne 0
 8335+ 1			        ; ...and <op> dir, #arg1
 8336+ 1			        top_mb  subb,dir0,??0690,<001h>
 8337+ 1			        eot     'f',??0690
 8338+ 1			        endif
 8339+ 1
 8340+ 1			        ; Optionally test <op> dir, A
 8341+ 1	N      0000	        if      (01h and 4) ne 0
 8342+ 1			        top_mc  subb,??0691,<001h>
 8343+ 1			        eot     'g',??0691
 8344+ 1			        endif
 8345+ 1
 8346:				        putc    #'2'
 8347+ 1  1A30			??0719:
 8348+ 1			        ;jnb     SCON.1,putc_loop
 8349+ 1			        ;clr     SCON.1
 8350+ 1  1A30	75 99 32	        mov     SBUF,#'2'
 8351:				        tst_alu subb,0c3h,0c5h,002h,01h,000h     ; /CY  AC /OV
 8352+ 1			        ; Put the argument and result data into variables for easier access
 8353+ 1	N      00C3	        arg0    set 0c3h
 8354+ 1	N      00C5	        arg1    set 0c5h
 8355+ 1	N      0002	        res     set 002h
 8356+ 1
 8357+ 1			        ; Test <op> A, dir
 8358+ 1			        top_ma  subb,dir0,??0721,<000h>
 8359+ 2  1A33	75 60 C3	        mov     dir0,#arg0
 8360+ 2  1A36	74 C5		        mov     a,#arg1
 8361+ 2			        ifnb    <000h>
 8362+ 2			        set_cy  000h
 8363+ 3	N      0000	??0727  set     (000h and 1)
 8364+ 3	N      0000	        if      ??0727 eq 1
 8365+ 3			        setb    c
 8366+ 3			        else
 8367+ 3  1A38	C3		        clr     c
 8368+ 3			        endif
 8369+ 2			        endif
 8370+ 2  1A39	95 60		        subb      a,dir0
 8371+ 2			        ifnb    <000h>
 8372+ 2			        save_psw
 8373+ 3  1A3B	85 D0 70	        mov     saved_psw,PSW
 8374+ 2			        endif
 8375+ 2  1A3E	B4 02 6B	        cjne    a,#res,??0721
 8376+ 2			        ifnb    <000h>
 8377+ 2			        tst_psw <000h>,??0721
 8378+ 3  1A41	E5 70		        mov     a,saved_psw
 8379+ 3  1A43	54 C4		        anl     a,#0c4h
 8380+ 3  1A45	64 00		        xrl     a,#000h
 8381+ 3  1A47	54 FE		        anl     a,#0feh
 8382+ 3  1A49	70 61		        jnz     ??0721
 8383+ 2			        endif
 8384+ 1			        ; Test <op> A, @R0
 8385+ 1  1A4B	78 60		        mov     r0,#dir0
 8386+ 1			        top_ma  subb,@r0,??0721,<000h>
 8387+ 2  1A4D	76 C3		        mov     @r0,#arg0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 151



 Line  I  Addr  Code            Source

 8388+ 2  1A4F	74 C5		        mov     a,#arg1
 8389+ 2			        ifnb    <000h>
 8390+ 2			        set_cy  000h
 8391+ 3	N      0000	??0728  set     (000h and 1)
 8392+ 3	N      0000	        if      ??0728 eq 1
 8393+ 3			        setb    c
 8394+ 3			        else
 8395+ 3  1A51	C3		        clr     c
 8396+ 3			        endif
 8397+ 2			        endif
 8398+ 2  1A52	96		        subb      a,@r0
 8399+ 2			        ifnb    <000h>
 8400+ 2			        save_psw
 8401+ 3  1A53	85 D0 70	        mov     saved_psw,PSW
 8402+ 2			        endif
 8403+ 2  1A56	B4 02 53	        cjne    a,#res,??0721
 8404+ 2			        ifnb    <000h>
 8405+ 2			        tst_psw <000h>,??0721
 8406+ 3  1A59	E5 70		        mov     a,saved_psw
 8407+ 3  1A5B	54 C4		        anl     a,#0c4h
 8408+ 3  1A5D	64 00		        xrl     a,#000h
 8409+ 3  1A5F	54 FE		        anl     a,#0feh
 8410+ 3  1A61	70 49		        jnz     ??0721
 8411+ 2			        endif
 8412+ 1			        ; Test <op> A, @R1
 8413+ 1  1A63	79 31		        mov     r1,#031h
 8414+ 1			        top_ma  subb,@r1,??0721,<000h>
 8415+ 2  1A65	77 C3		        mov     @r1,#arg0
 8416+ 2  1A67	74 C5		        mov     a,#arg1
 8417+ 2			        ifnb    <000h>
 8418+ 2			        set_cy  000h
 8419+ 3	N      0000	??0729  set     (000h and 1)
 8420+ 3	N      0000	        if      ??0729 eq 1
 8421+ 3			        setb    c
 8422+ 3			        else
 8423+ 3  1A69	C3		        clr     c
 8424+ 3			        endif
 8425+ 2			        endif
 8426+ 2  1A6A	97		        subb      a,@r1
 8427+ 2			        ifnb    <000h>
 8428+ 2			        save_psw
 8429+ 3  1A6B	85 D0 70	        mov     saved_psw,PSW
 8430+ 2			        endif
 8431+ 2  1A6E	B4 02 3B	        cjne    a,#res,??0721
 8432+ 2			        ifnb    <000h>
 8433+ 2			        tst_psw <000h>,??0721
 8434+ 3  1A71	E5 70		        mov     a,saved_psw
 8435+ 3  1A73	54 C4		        anl     a,#0c4h
 8436+ 3  1A75	64 00		        xrl     a,#000h
 8437+ 3  1A77	54 FE		        anl     a,#0feh
 8438+ 3  1A79	70 31		        jnz     ??0721
 8439+ 2			        endif
 8440+ 1
 8441+ 1			        ; Now test <op> A, Rn for n in 0..7
 8442+ 1			        top_ma  subb,r0,??0721,<000h>
 8443+ 2  1A7B	78 C3		        mov     r0,#arg0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 152



 Line  I  Addr  Code            Source

 8444+ 2  1A7D	74 C5		        mov     a,#arg1
 8445+ 2			        ifnb    <000h>
 8446+ 2			        set_cy  000h
 8447+ 3	N      0000	??0730  set     (000h and 1)
 8448+ 3	N      0000	        if      ??0730 eq 1
 8449+ 3			        setb    c
 8450+ 3			        else
 8451+ 3  1A7F	C3		        clr     c
 8452+ 3			        endif
 8453+ 2			        endif
 8454+ 2  1A80	98		        subb      a,r0
 8455+ 2			        ifnb    <000h>
 8456+ 2			        save_psw
 8457+ 3  1A81	85 D0 70	        mov     saved_psw,PSW
 8458+ 2			        endif
 8459+ 2  1A84	B4 02 25	        cjne    a,#res,??0721
 8460+ 2			        ifnb    <000h>
 8461+ 2			        tst_psw <000h>,??0721
 8462+ 3  1A87	E5 70		        mov     a,saved_psw
 8463+ 3  1A89	54 C4		        anl     a,#0c4h
 8464+ 3  1A8B	64 00		        xrl     a,#000h
 8465+ 3  1A8D	54 FE		        anl     a,#0feh
 8466+ 3  1A8F	70 1B		        jnz     ??0721
 8467+ 2			        endif
 8468+ 1			        top_ma  subb,r1,??0721,<000h>
 8469+ 2  1A91	79 C3		        mov     r1,#arg0
 8470+ 2  1A93	74 C5		        mov     a,#arg1
 8471+ 2			        ifnb    <000h>
 8472+ 2			        set_cy  000h
 8473+ 3	N      0000	??0731  set     (000h and 1)
 8474+ 3	N      0000	        if      ??0731 eq 1
 8475+ 3			        setb    c
 8476+ 3			        else
 8477+ 3  1A95	C3		        clr     c
 8478+ 3			        endif
 8479+ 2			        endif
 8480+ 2  1A96	99		        subb      a,r1
 8481+ 2			        ifnb    <000h>
 8482+ 2			        save_psw
 8483+ 3  1A97	85 D0 70	        mov     saved_psw,PSW
 8484+ 2			        endif
 8485+ 2  1A9A	B4 02 0F	        cjne    a,#res,??0721
 8486+ 2			        ifnb    <000h>
 8487+ 2			        tst_psw <000h>,??0721
 8488+ 3  1A9D	E5 70		        mov     a,saved_psw
 8489+ 3  1A9F	54 C4		        anl     a,#0c4h
 8490+ 3  1AA1	64 00		        xrl     a,#000h
 8491+ 3  1AA3	54 FE		        anl     a,#0feh
 8492+ 3  1AA5	70 05		        jnz     ??0721
 8493+ 2			        endif
 8494+ 1
 8495+ 1			        eot     'a',??0721
 8496+ 2			        putc    #'a'
 8497+ 3  1AA7			??0733:
 8498+ 3			        ;jnb     SCON.1,putc_loop
 8499+ 3			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 153



 Line  I  Addr  Code            Source

 8500+ 3  1AA7	75 99 61	        mov     SBUF,#'a'
 8501+ 2  1AAA	80 06		        sjmp    ??0732
 8502+ 2  1AAC			??0721:  putc    #'?'
 8503+ 3  1AAC			??0734:
 8504+ 3			        ;jnb     SCON.1,putc_loop
 8505+ 3			        ;clr     SCON.1
 8506+ 3  1AAC	75 99 3F	        mov     SBUF,#'?'
 8507+ 2  1AAF	75 6E 01	        mov     fail,#001h
 8508+ 2  1AB2			??0732:
 8509+ 1
 8510+ 1			        top_ma  subb,r2,??0722,<000h>
 8511+ 2  1AB2	7A C3		        mov     r2,#arg0
 8512+ 2  1AB4	74 C5		        mov     a,#arg1
 8513+ 2			        ifnb    <000h>
 8514+ 2			        set_cy  000h
 8515+ 3	N      0000	??0735  set     (000h and 1)
 8516+ 3	N      0000	        if      ??0735 eq 1
 8517+ 3			        setb    c
 8518+ 3			        else
 8519+ 3  1AB6	C3		        clr     c
 8520+ 3			        endif
 8521+ 2			        endif
 8522+ 2  1AB7	9A		        subb      a,r2
 8523+ 2			        ifnb    <000h>
 8524+ 2			        save_psw
 8525+ 3  1AB8	85 D0 70	        mov     saved_psw,PSW
 8526+ 2			        endif
 8527+ 2  1ABB	B4 02 25	        cjne    a,#res,??0722
 8528+ 2			        ifnb    <000h>
 8529+ 2			        tst_psw <000h>,??0722
 8530+ 3  1ABE	E5 70		        mov     a,saved_psw
 8531+ 3  1AC0	54 C4		        anl     a,#0c4h
 8532+ 3  1AC2	64 00		        xrl     a,#000h
 8533+ 3  1AC4	54 FE		        anl     a,#0feh
 8534+ 3  1AC6	70 1B		        jnz     ??0722
 8535+ 2			        endif
 8536+ 1			        top_ma  subb,r3,??0722,<000h>
 8537+ 2  1AC8	7B C3		        mov     r3,#arg0
 8538+ 2  1ACA	74 C5		        mov     a,#arg1
 8539+ 2			        ifnb    <000h>
 8540+ 2			        set_cy  000h
 8541+ 3	N      0000	??0736  set     (000h and 1)
 8542+ 3	N      0000	        if      ??0736 eq 1
 8543+ 3			        setb    c
 8544+ 3			        else
 8545+ 3  1ACC	C3		        clr     c
 8546+ 3			        endif
 8547+ 2			        endif
 8548+ 2  1ACD	9B		        subb      a,r3
 8549+ 2			        ifnb    <000h>
 8550+ 2			        save_psw
 8551+ 3  1ACE	85 D0 70	        mov     saved_psw,PSW
 8552+ 2			        endif
 8553+ 2  1AD1	B4 02 0F	        cjne    a,#res,??0722
 8554+ 2			        ifnb    <000h>
 8555+ 2			        tst_psw <000h>,??0722

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 154



 Line  I  Addr  Code            Source

 8556+ 3  1AD4	E5 70		        mov     a,saved_psw
 8557+ 3  1AD6	54 C4		        anl     a,#0c4h
 8558+ 3  1AD8	64 00		        xrl     a,#000h
 8559+ 3  1ADA	54 FE		        anl     a,#0feh
 8560+ 3  1ADC	70 05		        jnz     ??0722
 8561+ 2			        endif
 8562+ 1
 8563+ 1			        eot     'b',??0722
 8564+ 2			        putc    #'b'
 8565+ 3  1ADE			??0738:
 8566+ 3			        ;jnb     SCON.1,putc_loop
 8567+ 3			        ;clr     SCON.1
 8568+ 3  1ADE	75 99 62	        mov     SBUF,#'b'
 8569+ 2  1AE1	80 06		        sjmp    ??0737
 8570+ 2  1AE3			??0722:  putc    #'?'
 8571+ 3  1AE3			??0739:
 8572+ 3			        ;jnb     SCON.1,putc_loop
 8573+ 3			        ;clr     SCON.1
 8574+ 3  1AE3	75 99 3F	        mov     SBUF,#'?'
 8575+ 2  1AE6	75 6E 01	        mov     fail,#001h
 8576+ 2  1AE9			??0737:
 8577+ 1
 8578+ 1			        top_ma  subb,r4,??0723,<000h>
 8579+ 2  1AE9	7C C3		        mov     r4,#arg0
 8580+ 2  1AEB	74 C5		        mov     a,#arg1
 8581+ 2			        ifnb    <000h>
 8582+ 2			        set_cy  000h
 8583+ 3	N      0000	??0740  set     (000h and 1)
 8584+ 3	N      0000	        if      ??0740 eq 1
 8585+ 3			        setb    c
 8586+ 3			        else
 8587+ 3  1AED	C3		        clr     c
 8588+ 3			        endif
 8589+ 2			        endif
 8590+ 2  1AEE	9C		        subb      a,r4
 8591+ 2			        ifnb    <000h>
 8592+ 2			        save_psw
 8593+ 3  1AEF	85 D0 70	        mov     saved_psw,PSW
 8594+ 2			        endif
 8595+ 2  1AF2	B4 02 25	        cjne    a,#res,??0723
 8596+ 2			        ifnb    <000h>
 8597+ 2			        tst_psw <000h>,??0723
 8598+ 3  1AF5	E5 70		        mov     a,saved_psw
 8599+ 3  1AF7	54 C4		        anl     a,#0c4h
 8600+ 3  1AF9	64 00		        xrl     a,#000h
 8601+ 3  1AFB	54 FE		        anl     a,#0feh
 8602+ 3  1AFD	70 1B		        jnz     ??0723
 8603+ 2			        endif
 8604+ 1			        top_ma  subb,r5,??0723,<000h>
 8605+ 2  1AFF	7D C3		        mov     r5,#arg0
 8606+ 2  1B01	74 C5		        mov     a,#arg1
 8607+ 2			        ifnb    <000h>
 8608+ 2			        set_cy  000h
 8609+ 3	N      0000	??0741  set     (000h and 1)
 8610+ 3	N      0000	        if      ??0741 eq 1
 8611+ 3			        setb    c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 155



 Line  I  Addr  Code            Source

 8612+ 3			        else
 8613+ 3  1B03	C3		        clr     c
 8614+ 3			        endif
 8615+ 2			        endif
 8616+ 2  1B04	9D		        subb      a,r5
 8617+ 2			        ifnb    <000h>
 8618+ 2			        save_psw
 8619+ 3  1B05	85 D0 70	        mov     saved_psw,PSW
 8620+ 2			        endif
 8621+ 2  1B08	B4 02 0F	        cjne    a,#res,??0723
 8622+ 2			        ifnb    <000h>
 8623+ 2			        tst_psw <000h>,??0723
 8624+ 3  1B0B	E5 70		        mov     a,saved_psw
 8625+ 3  1B0D	54 C4		        anl     a,#0c4h
 8626+ 3  1B0F	64 00		        xrl     a,#000h
 8627+ 3  1B11	54 FE		        anl     a,#0feh
 8628+ 3  1B13	70 05		        jnz     ??0723
 8629+ 2			        endif
 8630+ 1
 8631+ 1			        eot     'c',??0723
 8632+ 2			        putc    #'c'
 8633+ 3  1B15			??0743:
 8634+ 3			        ;jnb     SCON.1,putc_loop
 8635+ 3			        ;clr     SCON.1
 8636+ 3  1B15	75 99 63	        mov     SBUF,#'c'
 8637+ 2  1B18	80 06		        sjmp    ??0742
 8638+ 2  1B1A			??0723:  putc    #'?'
 8639+ 3  1B1A			??0744:
 8640+ 3			        ;jnb     SCON.1,putc_loop
 8641+ 3			        ;clr     SCON.1
 8642+ 3  1B1A	75 99 3F	        mov     SBUF,#'?'
 8643+ 2  1B1D	75 6E 01	        mov     fail,#001h
 8644+ 2  1B20			??0742:
 8645+ 1
 8646+ 1			        top_ma  subb,r6,??0720,<000h>
 8647+ 2  1B20	7E C3		        mov     r6,#arg0
 8648+ 2  1B22	74 C5		        mov     a,#arg1
 8649+ 2			        ifnb    <000h>
 8650+ 2			        set_cy  000h
 8651+ 3	N      0000	??0745  set     (000h and 1)
 8652+ 3	N      0000	        if      ??0745 eq 1
 8653+ 3			        setb    c
 8654+ 3			        else
 8655+ 3  1B24	C3		        clr     c
 8656+ 3			        endif
 8657+ 2			        endif
 8658+ 2  1B25	9E		        subb      a,r6
 8659+ 2			        ifnb    <000h>
 8660+ 2			        save_psw
 8661+ 3  1B26	85 D0 70	        mov     saved_psw,PSW
 8662+ 2			        endif
 8663+ 2  1B29	B4 02 25	        cjne    a,#res,??0720
 8664+ 2			        ifnb    <000h>
 8665+ 2			        tst_psw <000h>,??0720
 8666+ 3  1B2C	E5 70		        mov     a,saved_psw
 8667+ 3  1B2E	54 C4		        anl     a,#0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 156



 Line  I  Addr  Code            Source

 8668+ 3  1B30	64 00		        xrl     a,#000h
 8669+ 3  1B32	54 FE		        anl     a,#0feh
 8670+ 3  1B34	70 1B		        jnz     ??0720
 8671+ 2			        endif
 8672+ 1			        top_ma  subb,r7,??0720,<000h>
 8673+ 2  1B36	7F C3		        mov     r7,#arg0
 8674+ 2  1B38	74 C5		        mov     a,#arg1
 8675+ 2			        ifnb    <000h>
 8676+ 2			        set_cy  000h
 8677+ 3	N      0000	??0746  set     (000h and 1)
 8678+ 3	N      0000	        if      ??0746 eq 1
 8679+ 3			        setb    c
 8680+ 3			        else
 8681+ 3  1B3A	C3		        clr     c
 8682+ 3			        endif
 8683+ 2			        endif
 8684+ 2  1B3B	9F		        subb      a,r7
 8685+ 2			        ifnb    <000h>
 8686+ 2			        save_psw
 8687+ 3  1B3C	85 D0 70	        mov     saved_psw,PSW
 8688+ 2			        endif
 8689+ 2  1B3F	B4 02 0F	        cjne    a,#res,??0720
 8690+ 2			        ifnb    <000h>
 8691+ 2			        tst_psw <000h>,??0720
 8692+ 3  1B42	E5 70		        mov     a,saved_psw
 8693+ 3  1B44	54 C4		        anl     a,#0c4h
 8694+ 3  1B46	64 00		        xrl     a,#000h
 8695+ 3  1B48	54 FE		        anl     a,#0feh
 8696+ 3  1B4A	70 05		        jnz     ??0720
 8697+ 2			        endif
 8698+ 1
 8699+ 1			        eot     'd',??0720
 8700+ 2			        putc    #'d'
 8701+ 3  1B4C			??0748:
 8702+ 3			        ;jnb     SCON.1,putc_loop
 8703+ 3			        ;clr     SCON.1
 8704+ 3  1B4C	75 99 64	        mov     SBUF,#'d'
 8705+ 2  1B4F	80 06		        sjmp    ??0747
 8706+ 2  1B51			??0720:  putc    #'?'
 8707+ 3  1B51			??0749:
 8708+ 3			        ;jnb     SCON.1,putc_loop
 8709+ 3			        ;clr     SCON.1
 8710+ 3  1B51	75 99 3F	        mov     SBUF,#'?'
 8711+ 2  1B54	75 6E 01	        mov     fail,#001h
 8712+ 2  1B57			??0747:
 8713+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 8714+ 1
 8715+ 1			        ; Optionally test immediate addressing modes.
 8716+ 1
 8717+ 1	N      FFFF	        if      (01h and 1) ne 0
 8718+ 1			        ; Test <op> A, #arg1...
 8719+ 1			        top_mb  subb,a,??0724,<000h>
 8720+ 2  1B57	74 C5		        mov     a,#arg1
 8721+ 2			        ifnb    <000h>
 8722+ 2			        set_cy  000h
 8723+ 3	N      0000	??0750  set     (000h and 1)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 157



 Line  I  Addr  Code            Source

 8724+ 3	N      0000	        if      ??0750 eq 1
 8725+ 3			        setb    c
 8726+ 3			        else
 8727+ 3  1B59	C3		        clr     c
 8728+ 3			        endif
 8729+ 2			        endif
 8730+ 2  1B5A	94 C3		        subb      a,#arg0
 8731+ 2			        ifnb    <000h>
 8732+ 2			        save_psw
 8733+ 3  1B5C	85 D0 70	        mov     saved_psw,PSW
 8734+ 2			        endif
 8735+ 2  1B5F	F5 E0		        mov     ACC,a
 8736+ 2  1B61	B4 02 0F	        cjne    a,#res,??0724
 8737+ 2			        ifnb    <000h>
 8738+ 2			        tst_psw <000h>,??0724
 8739+ 3  1B64	E5 70		        mov     a,saved_psw
 8740+ 3  1B66	54 C4		        anl     a,#0c4h
 8741+ 3  1B68	64 00		        xrl     a,#000h
 8742+ 3  1B6A	54 FE		        anl     a,#0feh
 8743+ 3  1B6C	70 05		        jnz     ??0724
 8744+ 2			        endif
 8745+ 1			        eot     'e',??0724
 8746+ 2			        putc    #'e'
 8747+ 3  1B6E			??0752:
 8748+ 3			        ;jnb     SCON.1,putc_loop
 8749+ 3			        ;clr     SCON.1
 8750+ 3  1B6E	75 99 65	        mov     SBUF,#'e'
 8751+ 2  1B71	80 06		        sjmp    ??0751
 8752+ 2  1B73			??0724:  putc    #'?'
 8753+ 3  1B73			??0753:
 8754+ 3			        ;jnb     SCON.1,putc_loop
 8755+ 3			        ;clr     SCON.1
 8756+ 3  1B73	75 99 3F	        mov     SBUF,#'?'
 8757+ 2  1B76	75 6E 01	        mov     fail,#001h
 8758+ 2  1B79			??0751:
 8759+ 1			        endif
 8760+ 1
 8761+ 1	N      0000	        if      (01h and 2) ne 0
 8762+ 1			        ; ...and <op> dir, #arg1
 8763+ 1			        top_mb  subb,dir0,??0725,<000h>
 8764+ 1			        eot     'f',??0725
 8765+ 1			        endif
 8766+ 1
 8767+ 1			        ; Optionally test <op> dir, A
 8768+ 1	N      0000	        if      (01h and 4) ne 0
 8769+ 1			        top_mc  subb,??0726,<000h>
 8770+ 1			        eot     'g',??0726
 8771+ 1			        endif
 8772+ 1
 8773:				        putc    #'3'
 8774+ 1  1B79			??0754:
 8775+ 1			        ;jnb     SCON.1,putc_loop
 8776+ 1			        ;clr     SCON.1
 8777+ 1  1B79	75 99 33	        mov     SBUF,#'3'
 8778:				        tst_alu subb,0c3h,0c5h,001h,01h,001h     ; /CY  AC  OV (CY input)
 8779+ 1			        ; Put the argument and result data into variables for easier access

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 158



 Line  I  Addr  Code            Source

 8780+ 1	N      00C3	        arg0    set 0c3h
 8781+ 1	N      00C5	        arg1    set 0c5h
 8782+ 1	N      0001	        res     set 001h
 8783+ 1
 8784+ 1			        ; Test <op> A, dir
 8785+ 1			        top_ma  subb,dir0,??0756,<001h>
 8786+ 2  1B7C	75 60 C3	        mov     dir0,#arg0
 8787+ 2  1B7F	74 C5		        mov     a,#arg1
 8788+ 2			        ifnb    <001h>
 8789+ 2			        set_cy  001h
 8790+ 3	N      0001	??0762  set     (001h and 1)
 8791+ 3	N      FFFF	        if      ??0762 eq 1
 8792+ 3  1B81	D3		        setb    c
 8793+ 3			        else
 8794+ 3			        clr     c
 8795+ 3			        endif
 8796+ 2			        endif
 8797+ 2  1B82	95 60		        subb      a,dir0
 8798+ 2			        ifnb    <001h>
 8799+ 2			        save_psw
 8800+ 3  1B84	85 D0 70	        mov     saved_psw,PSW
 8801+ 2			        endif
 8802+ 2  1B87	B4 01 6B	        cjne    a,#res,??0756
 8803+ 2			        ifnb    <001h>
 8804+ 2			        tst_psw <001h>,??0756
 8805+ 3  1B8A	E5 70		        mov     a,saved_psw
 8806+ 3  1B8C	54 C4		        anl     a,#0c4h
 8807+ 3  1B8E	64 01		        xrl     a,#001h
 8808+ 3  1B90	54 FE		        anl     a,#0feh
 8809+ 3  1B92	70 61		        jnz     ??0756
 8810+ 2			        endif
 8811+ 1			        ; Test <op> A, @R0
 8812+ 1  1B94	78 60		        mov     r0,#dir0
 8813+ 1			        top_ma  subb,@r0,??0756,<001h>
 8814+ 2  1B96	76 C3		        mov     @r0,#arg0
 8815+ 2  1B98	74 C5		        mov     a,#arg1
 8816+ 2			        ifnb    <001h>
 8817+ 2			        set_cy  001h
 8818+ 3	N      0001	??0763  set     (001h and 1)
 8819+ 3	N      FFFF	        if      ??0763 eq 1
 8820+ 3  1B9A	D3		        setb    c
 8821+ 3			        else
 8822+ 3			        clr     c
 8823+ 3			        endif
 8824+ 2			        endif
 8825+ 2  1B9B	96		        subb      a,@r0
 8826+ 2			        ifnb    <001h>
 8827+ 2			        save_psw
 8828+ 3  1B9C	85 D0 70	        mov     saved_psw,PSW
 8829+ 2			        endif
 8830+ 2  1B9F	B4 01 53	        cjne    a,#res,??0756
 8831+ 2			        ifnb    <001h>
 8832+ 2			        tst_psw <001h>,??0756
 8833+ 3  1BA2	E5 70		        mov     a,saved_psw
 8834+ 3  1BA4	54 C4		        anl     a,#0c4h
 8835+ 3  1BA6	64 01		        xrl     a,#001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 159



 Line  I  Addr  Code            Source

 8836+ 3  1BA8	54 FE		        anl     a,#0feh
 8837+ 3  1BAA	70 49		        jnz     ??0756
 8838+ 2			        endif
 8839+ 1			        ; Test <op> A, @R1
 8840+ 1  1BAC	79 31		        mov     r1,#031h
 8841+ 1			        top_ma  subb,@r1,??0756,<001h>
 8842+ 2  1BAE	77 C3		        mov     @r1,#arg0
 8843+ 2  1BB0	74 C5		        mov     a,#arg1
 8844+ 2			        ifnb    <001h>
 8845+ 2			        set_cy  001h
 8846+ 3	N      0001	??0764  set     (001h and 1)
 8847+ 3	N      FFFF	        if      ??0764 eq 1
 8848+ 3  1BB2	D3		        setb    c
 8849+ 3			        else
 8850+ 3			        clr     c
 8851+ 3			        endif
 8852+ 2			        endif
 8853+ 2  1BB3	97		        subb      a,@r1
 8854+ 2			        ifnb    <001h>
 8855+ 2			        save_psw
 8856+ 3  1BB4	85 D0 70	        mov     saved_psw,PSW
 8857+ 2			        endif
 8858+ 2  1BB7	B4 01 3B	        cjne    a,#res,??0756
 8859+ 2			        ifnb    <001h>
 8860+ 2			        tst_psw <001h>,??0756
 8861+ 3  1BBA	E5 70		        mov     a,saved_psw
 8862+ 3  1BBC	54 C4		        anl     a,#0c4h
 8863+ 3  1BBE	64 01		        xrl     a,#001h
 8864+ 3  1BC0	54 FE		        anl     a,#0feh
 8865+ 3  1BC2	70 31		        jnz     ??0756
 8866+ 2			        endif
 8867+ 1
 8868+ 1			        ; Now test <op> A, Rn for n in 0..7
 8869+ 1			        top_ma  subb,r0,??0756,<001h>
 8870+ 2  1BC4	78 C3		        mov     r0,#arg0
 8871+ 2  1BC6	74 C5		        mov     a,#arg1
 8872+ 2			        ifnb    <001h>
 8873+ 2			        set_cy  001h
 8874+ 3	N      0001	??0765  set     (001h and 1)
 8875+ 3	N      FFFF	        if      ??0765 eq 1
 8876+ 3  1BC8	D3		        setb    c
 8877+ 3			        else
 8878+ 3			        clr     c
 8879+ 3			        endif
 8880+ 2			        endif
 8881+ 2  1BC9	98		        subb      a,r0
 8882+ 2			        ifnb    <001h>
 8883+ 2			        save_psw
 8884+ 3  1BCA	85 D0 70	        mov     saved_psw,PSW
 8885+ 2			        endif
 8886+ 2  1BCD	B4 01 25	        cjne    a,#res,??0756
 8887+ 2			        ifnb    <001h>
 8888+ 2			        tst_psw <001h>,??0756
 8889+ 3  1BD0	E5 70		        mov     a,saved_psw
 8890+ 3  1BD2	54 C4		        anl     a,#0c4h
 8891+ 3  1BD4	64 01		        xrl     a,#001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 160



 Line  I  Addr  Code            Source

 8892+ 3  1BD6	54 FE		        anl     a,#0feh
 8893+ 3  1BD8	70 1B		        jnz     ??0756
 8894+ 2			        endif
 8895+ 1			        top_ma  subb,r1,??0756,<001h>
 8896+ 2  1BDA	79 C3		        mov     r1,#arg0
 8897+ 2  1BDC	74 C5		        mov     a,#arg1
 8898+ 2			        ifnb    <001h>
 8899+ 2			        set_cy  001h
 8900+ 3	N      0001	??0766  set     (001h and 1)
 8901+ 3	N      FFFF	        if      ??0766 eq 1
 8902+ 3  1BDE	D3		        setb    c
 8903+ 3			        else
 8904+ 3			        clr     c
 8905+ 3			        endif
 8906+ 2			        endif
 8907+ 2  1BDF	99		        subb      a,r1
 8908+ 2			        ifnb    <001h>
 8909+ 2			        save_psw
 8910+ 3  1BE0	85 D0 70	        mov     saved_psw,PSW
 8911+ 2			        endif
 8912+ 2  1BE3	B4 01 0F	        cjne    a,#res,??0756
 8913+ 2			        ifnb    <001h>
 8914+ 2			        tst_psw <001h>,??0756
 8915+ 3  1BE6	E5 70		        mov     a,saved_psw
 8916+ 3  1BE8	54 C4		        anl     a,#0c4h
 8917+ 3  1BEA	64 01		        xrl     a,#001h
 8918+ 3  1BEC	54 FE		        anl     a,#0feh
 8919+ 3  1BEE	70 05		        jnz     ??0756
 8920+ 2			        endif
 8921+ 1
 8922+ 1			        eot     'a',??0756
 8923+ 2			        putc    #'a'
 8924+ 3  1BF0			??0768:
 8925+ 3			        ;jnb     SCON.1,putc_loop
 8926+ 3			        ;clr     SCON.1
 8927+ 3  1BF0	75 99 61	        mov     SBUF,#'a'
 8928+ 2  1BF3	80 06		        sjmp    ??0767
 8929+ 2  1BF5			??0756:  putc    #'?'
 8930+ 3  1BF5			??0769:
 8931+ 3			        ;jnb     SCON.1,putc_loop
 8932+ 3			        ;clr     SCON.1
 8933+ 3  1BF5	75 99 3F	        mov     SBUF,#'?'
 8934+ 2  1BF8	75 6E 01	        mov     fail,#001h
 8935+ 2  1BFB			??0767:
 8936+ 1
 8937+ 1			        top_ma  subb,r2,??0757,<001h>
 8938+ 2  1BFB	7A C3		        mov     r2,#arg0
 8939+ 2  1BFD	74 C5		        mov     a,#arg1
 8940+ 2			        ifnb    <001h>
 8941+ 2			        set_cy  001h
 8942+ 3	N      0001	??0770  set     (001h and 1)
 8943+ 3	N      FFFF	        if      ??0770 eq 1
 8944+ 3  1BFF	D3		        setb    c
 8945+ 3			        else
 8946+ 3			        clr     c
 8947+ 3			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 161



 Line  I  Addr  Code            Source

 8948+ 2			        endif
 8949+ 2  1C00	9A		        subb      a,r2
 8950+ 2			        ifnb    <001h>
 8951+ 2			        save_psw
 8952+ 3  1C01	85 D0 70	        mov     saved_psw,PSW
 8953+ 2			        endif
 8954+ 2  1C04	B4 01 25	        cjne    a,#res,??0757
 8955+ 2			        ifnb    <001h>
 8956+ 2			        tst_psw <001h>,??0757
 8957+ 3  1C07	E5 70		        mov     a,saved_psw
 8958+ 3  1C09	54 C4		        anl     a,#0c4h
 8959+ 3  1C0B	64 01		        xrl     a,#001h
 8960+ 3  1C0D	54 FE		        anl     a,#0feh
 8961+ 3  1C0F	70 1B		        jnz     ??0757
 8962+ 2			        endif
 8963+ 1			        top_ma  subb,r3,??0757,<001h>
 8964+ 2  1C11	7B C3		        mov     r3,#arg0
 8965+ 2  1C13	74 C5		        mov     a,#arg1
 8966+ 2			        ifnb    <001h>
 8967+ 2			        set_cy  001h
 8968+ 3	N      0001	??0771  set     (001h and 1)
 8969+ 3	N      FFFF	        if      ??0771 eq 1
 8970+ 3  1C15	D3		        setb    c
 8971+ 3			        else
 8972+ 3			        clr     c
 8973+ 3			        endif
 8974+ 2			        endif
 8975+ 2  1C16	9B		        subb      a,r3
 8976+ 2			        ifnb    <001h>
 8977+ 2			        save_psw
 8978+ 3  1C17	85 D0 70	        mov     saved_psw,PSW
 8979+ 2			        endif
 8980+ 2  1C1A	B4 01 0F	        cjne    a,#res,??0757
 8981+ 2			        ifnb    <001h>
 8982+ 2			        tst_psw <001h>,??0757
 8983+ 3  1C1D	E5 70		        mov     a,saved_psw
 8984+ 3  1C1F	54 C4		        anl     a,#0c4h
 8985+ 3  1C21	64 01		        xrl     a,#001h
 8986+ 3  1C23	54 FE		        anl     a,#0feh
 8987+ 3  1C25	70 05		        jnz     ??0757
 8988+ 2			        endif
 8989+ 1
 8990+ 1			        eot     'b',??0757
 8991+ 2			        putc    #'b'
 8992+ 3  1C27			??0773:
 8993+ 3			        ;jnb     SCON.1,putc_loop
 8994+ 3			        ;clr     SCON.1
 8995+ 3  1C27	75 99 62	        mov     SBUF,#'b'
 8996+ 2  1C2A	80 06		        sjmp    ??0772
 8997+ 2  1C2C			??0757:  putc    #'?'
 8998+ 3  1C2C			??0774:
 8999+ 3			        ;jnb     SCON.1,putc_loop
 9000+ 3			        ;clr     SCON.1
 9001+ 3  1C2C	75 99 3F	        mov     SBUF,#'?'
 9002+ 2  1C2F	75 6E 01	        mov     fail,#001h
 9003+ 2  1C32			??0772:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 162



 Line  I  Addr  Code            Source

 9004+ 1
 9005+ 1			        top_ma  subb,r4,??0758,<001h>
 9006+ 2  1C32	7C C3		        mov     r4,#arg0
 9007+ 2  1C34	74 C5		        mov     a,#arg1
 9008+ 2			        ifnb    <001h>
 9009+ 2			        set_cy  001h
 9010+ 3	N      0001	??0775  set     (001h and 1)
 9011+ 3	N      FFFF	        if      ??0775 eq 1
 9012+ 3  1C36	D3		        setb    c
 9013+ 3			        else
 9014+ 3			        clr     c
 9015+ 3			        endif
 9016+ 2			        endif
 9017+ 2  1C37	9C		        subb      a,r4
 9018+ 2			        ifnb    <001h>
 9019+ 2			        save_psw
 9020+ 3  1C38	85 D0 70	        mov     saved_psw,PSW
 9021+ 2			        endif
 9022+ 2  1C3B	B4 01 25	        cjne    a,#res,??0758
 9023+ 2			        ifnb    <001h>
 9024+ 2			        tst_psw <001h>,??0758
 9025+ 3  1C3E	E5 70		        mov     a,saved_psw
 9026+ 3  1C40	54 C4		        anl     a,#0c4h
 9027+ 3  1C42	64 01		        xrl     a,#001h
 9028+ 3  1C44	54 FE		        anl     a,#0feh
 9029+ 3  1C46	70 1B		        jnz     ??0758
 9030+ 2			        endif
 9031+ 1			        top_ma  subb,r5,??0758,<001h>
 9032+ 2  1C48	7D C3		        mov     r5,#arg0
 9033+ 2  1C4A	74 C5		        mov     a,#arg1
 9034+ 2			        ifnb    <001h>
 9035+ 2			        set_cy  001h
 9036+ 3	N      0001	??0776  set     (001h and 1)
 9037+ 3	N      FFFF	        if      ??0776 eq 1
 9038+ 3  1C4C	D3		        setb    c
 9039+ 3			        else
 9040+ 3			        clr     c
 9041+ 3			        endif
 9042+ 2			        endif
 9043+ 2  1C4D	9D		        subb      a,r5
 9044+ 2			        ifnb    <001h>
 9045+ 2			        save_psw
 9046+ 3  1C4E	85 D0 70	        mov     saved_psw,PSW
 9047+ 2			        endif
 9048+ 2  1C51	B4 01 0F	        cjne    a,#res,??0758
 9049+ 2			        ifnb    <001h>
 9050+ 2			        tst_psw <001h>,??0758
 9051+ 3  1C54	E5 70		        mov     a,saved_psw
 9052+ 3  1C56	54 C4		        anl     a,#0c4h
 9053+ 3  1C58	64 01		        xrl     a,#001h
 9054+ 3  1C5A	54 FE		        anl     a,#0feh
 9055+ 3  1C5C	70 05		        jnz     ??0758
 9056+ 2			        endif
 9057+ 1
 9058+ 1			        eot     'c',??0758
 9059+ 2			        putc    #'c'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 163



 Line  I  Addr  Code            Source

 9060+ 3  1C5E			??0778:
 9061+ 3			        ;jnb     SCON.1,putc_loop
 9062+ 3			        ;clr     SCON.1
 9063+ 3  1C5E	75 99 63	        mov     SBUF,#'c'
 9064+ 2  1C61	80 06		        sjmp    ??0777
 9065+ 2  1C63			??0758:  putc    #'?'
 9066+ 3  1C63			??0779:
 9067+ 3			        ;jnb     SCON.1,putc_loop
 9068+ 3			        ;clr     SCON.1
 9069+ 3  1C63	75 99 3F	        mov     SBUF,#'?'
 9070+ 2  1C66	75 6E 01	        mov     fail,#001h
 9071+ 2  1C69			??0777:
 9072+ 1
 9073+ 1			        top_ma  subb,r6,??0755,<001h>
 9074+ 2  1C69	7E C3		        mov     r6,#arg0
 9075+ 2  1C6B	74 C5		        mov     a,#arg1
 9076+ 2			        ifnb    <001h>
 9077+ 2			        set_cy  001h
 9078+ 3	N      0001	??0780  set     (001h and 1)
 9079+ 3	N      FFFF	        if      ??0780 eq 1
 9080+ 3  1C6D	D3		        setb    c
 9081+ 3			        else
 9082+ 3			        clr     c
 9083+ 3			        endif
 9084+ 2			        endif
 9085+ 2  1C6E	9E		        subb      a,r6
 9086+ 2			        ifnb    <001h>
 9087+ 2			        save_psw
 9088+ 3  1C6F	85 D0 70	        mov     saved_psw,PSW
 9089+ 2			        endif
 9090+ 2  1C72	B4 01 25	        cjne    a,#res,??0755
 9091+ 2			        ifnb    <001h>
 9092+ 2			        tst_psw <001h>,??0755
 9093+ 3  1C75	E5 70		        mov     a,saved_psw
 9094+ 3  1C77	54 C4		        anl     a,#0c4h
 9095+ 3  1C79	64 01		        xrl     a,#001h
 9096+ 3  1C7B	54 FE		        anl     a,#0feh
 9097+ 3  1C7D	70 1B		        jnz     ??0755
 9098+ 2			        endif
 9099+ 1			        top_ma  subb,r7,??0755,<001h>
 9100+ 2  1C7F	7F C3		        mov     r7,#arg0
 9101+ 2  1C81	74 C5		        mov     a,#arg1
 9102+ 2			        ifnb    <001h>
 9103+ 2			        set_cy  001h
 9104+ 3	N      0001	??0781  set     (001h and 1)
 9105+ 3	N      FFFF	        if      ??0781 eq 1
 9106+ 3  1C83	D3		        setb    c
 9107+ 3			        else
 9108+ 3			        clr     c
 9109+ 3			        endif
 9110+ 2			        endif
 9111+ 2  1C84	9F		        subb      a,r7
 9112+ 2			        ifnb    <001h>
 9113+ 2			        save_psw
 9114+ 3  1C85	85 D0 70	        mov     saved_psw,PSW
 9115+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 164



 Line  I  Addr  Code            Source

 9116+ 2  1C88	B4 01 0F	        cjne    a,#res,??0755
 9117+ 2			        ifnb    <001h>
 9118+ 2			        tst_psw <001h>,??0755
 9119+ 3  1C8B	E5 70		        mov     a,saved_psw
 9120+ 3  1C8D	54 C4		        anl     a,#0c4h
 9121+ 3  1C8F	64 01		        xrl     a,#001h
 9122+ 3  1C91	54 FE		        anl     a,#0feh
 9123+ 3  1C93	70 05		        jnz     ??0755
 9124+ 2			        endif
 9125+ 1
 9126+ 1			        eot     'd',??0755
 9127+ 2			        putc    #'d'
 9128+ 3  1C95			??0783:
 9129+ 3			        ;jnb     SCON.1,putc_loop
 9130+ 3			        ;clr     SCON.1
 9131+ 3  1C95	75 99 64	        mov     SBUF,#'d'
 9132+ 2  1C98	80 06		        sjmp    ??0782
 9133+ 2  1C9A			??0755:  putc    #'?'
 9134+ 3  1C9A			??0784:
 9135+ 3			        ;jnb     SCON.1,putc_loop
 9136+ 3			        ;clr     SCON.1
 9137+ 3  1C9A	75 99 3F	        mov     SBUF,#'?'
 9138+ 2  1C9D	75 6E 01	        mov     fail,#001h
 9139+ 2  1CA0			??0782:
 9140+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 9141+ 1
 9142+ 1			        ; Optionally test immediate addressing modes.
 9143+ 1
 9144+ 1	N      FFFF	        if      (01h and 1) ne 0
 9145+ 1			        ; Test <op> A, #arg1...
 9146+ 1			        top_mb  subb,a,??0759,<001h>
 9147+ 2  1CA0	74 C5		        mov     a,#arg1
 9148+ 2			        ifnb    <001h>
 9149+ 2			        set_cy  001h
 9150+ 3	N      0001	??0785  set     (001h and 1)
 9151+ 3	N      FFFF	        if      ??0785 eq 1
 9152+ 3  1CA2	D3		        setb    c
 9153+ 3			        else
 9154+ 3			        clr     c
 9155+ 3			        endif
 9156+ 2			        endif
 9157+ 2  1CA3	94 C3		        subb      a,#arg0
 9158+ 2			        ifnb    <001h>
 9159+ 2			        save_psw
 9160+ 3  1CA5	85 D0 70	        mov     saved_psw,PSW
 9161+ 2			        endif
 9162+ 2  1CA8	F5 E0		        mov     ACC,a
 9163+ 2  1CAA	B4 01 0F	        cjne    a,#res,??0759
 9164+ 2			        ifnb    <001h>
 9165+ 2			        tst_psw <001h>,??0759
 9166+ 3  1CAD	E5 70		        mov     a,saved_psw
 9167+ 3  1CAF	54 C4		        anl     a,#0c4h
 9168+ 3  1CB1	64 01		        xrl     a,#001h
 9169+ 3  1CB3	54 FE		        anl     a,#0feh
 9170+ 3  1CB5	70 05		        jnz     ??0759
 9171+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 165



 Line  I  Addr  Code            Source

 9172+ 1			        eot     'e',??0759
 9173+ 2			        putc    #'e'
 9174+ 3  1CB7			??0787:
 9175+ 3			        ;jnb     SCON.1,putc_loop
 9176+ 3			        ;clr     SCON.1
 9177+ 3  1CB7	75 99 65	        mov     SBUF,#'e'
 9178+ 2  1CBA	80 06		        sjmp    ??0786
 9179+ 2  1CBC			??0759:  putc    #'?'
 9180+ 3  1CBC			??0788:
 9181+ 3			        ;jnb     SCON.1,putc_loop
 9182+ 3			        ;clr     SCON.1
 9183+ 3  1CBC	75 99 3F	        mov     SBUF,#'?'
 9184+ 2  1CBF	75 6E 01	        mov     fail,#001h
 9185+ 2  1CC2			??0786:
 9186+ 1			        endif
 9187+ 1
 9188+ 1	N      0000	        if      (01h and 2) ne 0
 9189+ 1			        ; ...and <op> dir, #arg1
 9190+ 1			        top_mb  subb,dir0,??0760,<001h>
 9191+ 1			        eot     'f',??0760
 9192+ 1			        endif
 9193+ 1
 9194+ 1			        ; Optionally test <op> dir, A
 9195+ 1	N      0000	        if      (01h and 4) ne 0
 9196+ 1			        top_mc  subb,??0761,<001h>
 9197+ 1			        eot     'g',??0761
 9198+ 1			        endif
 9199+ 1
 9200:
 9201:				        ; FIXME subb tests are specially weak
 9202:
 9203:				        put_crlf                    ; end of test series
 9204+ 1			        putc    #13
 9205+ 2  1CC2			??0789:
 9206+ 2			        ;jnb     SCON.1,putc_loop
 9207+ 2			        ;clr     SCON.1
 9208+ 2  1CC2	75 99 0D	        mov     SBUF,#13
 9209+ 1			        putc    #10
 9210+ 2  1CC5			??0790:
 9211+ 2			        ;jnb     SCON.1,putc_loop
 9212+ 2			        ;clr     SCON.1
 9213+ 2  1CC5	75 99 0A	        mov     SBUF,#10
 9214:
 9215:
 9216:				        ;-- Test series O ------------------------------------------------------
 9217:				        ; PUSH and POP
 9218:				        ; a.- <PUSH dir (IRAM)>
 9219:				        ; b.- <POP dir (IRAM)>
 9220:				        ; c.- <PUSH dir (SFR)>
 9221:				        ; d.- <POP dir (SFR)>
 9222:
 9223:				        putc    #'O'                ; start of test series
 9224+ 1  1CC8			??0791:
 9225+ 1			        ;jnb     SCON.1,putc_loop
 9226+ 1			        ;clr     SCON.1
 9227+ 1  1CC8	75 99 4F	        mov     SBUF,#'O'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 166



 Line  I  Addr  Code            Source

 9228:
 9229:				        ; <PUSH dir (IRAM)>
 9230:	  1CCB	75 81 9F	        mov     SP,#stack0          ; prepare SP...
 9231:	  1CCE	75 60 12	        mov     dir0,#012h          ; ...and data to be pushed
 9232:	  1CD1	78 A0		        mov     r0,#(stack0+1)      ; r0->stack so we can verify data is pushed
 9233:	  1CD3	76 00		        mov     @r0,#000h           ; clear target stack location
 9234:	  1CD5	C0 60		        push    dir0                ; <PUSH dir>
 9235:	  1CD7	E6		        mov     a,@r0               ; verify data has been pushed
 9236:	  1CD8	B4 12 0A	        cjne    a,#012h,to_a0
 9237:	  1CDB	E5 81		        mov     a,SP                ; verify SP has been incremented
 9238:	  1CDD	B4 A0 05	        cjne    a,#(stack0+1),to_a0
 9239:
 9240:				        eot     'a',to_a0
 9241+ 1			        putc    #'a'
 9242+ 2  1CE0			??0793:
 9243+ 2			        ;jnb     SCON.1,putc_loop
 9244+ 2			        ;clr     SCON.1
 9245+ 2  1CE0	75 99 61	        mov     SBUF,#'a'
 9246+ 1  1CE3	80 06		        sjmp    ??0792
 9247+ 1  1CE5			to_a0:  putc    #'?'
 9248+ 2  1CE5			??0794:
 9249+ 2			        ;jnb     SCON.1,putc_loop
 9250+ 2			        ;clr     SCON.1
 9251+ 2  1CE5	75 99 3F	        mov     SBUF,#'?'
 9252+ 1  1CE8	75 6E 01	        mov     fail,#001h
 9253+ 1  1CEB			??0792:
 9254:
 9255:				        ; <POP dir (IRAM)> We'll use the data that was pushed previously
 9256:	  1CEB	75 61 00	        mov     dir1,#000h          ; clear POP target
 9257:	  1CEE	E4		        clr     a
 9258:	  1CEF	D0 61		        pop     dir1                ; <POP dir>
 9259:	  1CF1	79 61		        mov     r1,#dir1            ; verify data has been popped
 9260:	  1CF3	E7		        mov     a,@r1
 9261:	  1CF4	B4 12 0A	        cjne    a,#012h,to_b0
 9262:	  1CF7	E5 81		        mov     a,SP                ; verify SP has been decremented
 9263:	  1CF9	B4 9F 05	        cjne    a,#stack0,to_b0
 9264:
 9265:				        eot     'b',to_b0
 9266+ 1			        putc    #'b'
 9267+ 2  1CFC			??0796:
 9268+ 2			        ;jnb     SCON.1,putc_loop
 9269+ 2			        ;clr     SCON.1
 9270+ 2  1CFC	75 99 62	        mov     SBUF,#'b'
 9271+ 1  1CFF	80 06		        sjmp    ??0795
 9272+ 1  1D01			to_b0:  putc    #'?'
 9273+ 2  1D01			??0797:
 9274+ 2			        ;jnb     SCON.1,putc_loop
 9275+ 2			        ;clr     SCON.1
 9276+ 2  1D01	75 99 3F	        mov     SBUF,#'?'
 9277+ 1  1D04	75 6E 01	        mov     fail,#001h
 9278+ 1  1D07			??0795:
 9279:
 9280:				        ; <PUSH dir (SFR)>
 9281:	  1D07	75 81 9F	        mov     SP,#stack0          ; prepare SP...
 9282:	  1D0A	75 F0 42	        mov     B,#042h             ; ...and data to be pushed
 9283:	  1D0D	78 A0		        mov     r0,#(stack0+1)      ; r0->stack so we can verify data is pushed

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 167



 Line  I  Addr  Code            Source

 9284:	  1D0F	76 00		        mov     @r0,#000h           ; clear target stack location
 9285:	  1D11	C0 F0		        push    B                   ; <PUSH dir>
 9286:	  1D13	E6		        mov     a,@r0               ; verify data has been pushed
 9287:	  1D14	B4 42 0A	        cjne    a,#042h,to_c0
 9288:	  1D17	E5 81		        mov     a,SP                ; verify SP has been incremented
 9289:	  1D19	B4 A0 05	        cjne    a,#(stack0+1),to_c0
 9290:
 9291:				        eot     'c',to_c0
 9292+ 1			        putc    #'c'
 9293+ 2  1D1C			??0799:
 9294+ 2			        ;jnb     SCON.1,putc_loop
 9295+ 2			        ;clr     SCON.1
 9296+ 2  1D1C	75 99 63	        mov     SBUF,#'c'
 9297+ 1  1D1F	80 06		        sjmp    ??0798
 9298+ 1  1D21			to_c0:  putc    #'?'
 9299+ 2  1D21			??0800:
 9300+ 2			        ;jnb     SCON.1,putc_loop
 9301+ 2			        ;clr     SCON.1
 9302+ 2  1D21	75 99 3F	        mov     SBUF,#'?'
 9303+ 1  1D24	75 6E 01	        mov     fail,#001h
 9304+ 1  1D27			??0798:
 9305:
 9306:				        ; <POP dir (SFR)> We'll use the data that was pushed previously
 9307:	  1D27	75 F0 00	        mov     B,#000h             ; clear POP target
 9308:	  1D2A	E4		        clr     a
 9309:	  1D2B	D0 F0		        pop     B                   ; <POP dir>
 9310:	  1D2D	E5 F0		        mov     a,B                 ; verify data has been popped
 9311:	  1D2F	B4 42 0A	        cjne    a,#042h,to_d0
 9312:	  1D32	E5 81		        mov     a,SP                ; verify SP has been decremented
 9313:	  1D34	B4 9F 05	        cjne    a,#stack0,to_d0
 9314:
 9315:				        eot     'd',to_d0
 9316+ 1			        putc    #'d'
 9317+ 2  1D37			??0802:
 9318+ 2			        ;jnb     SCON.1,putc_loop
 9319+ 2			        ;clr     SCON.1
 9320+ 2  1D37	75 99 64	        mov     SBUF,#'d'
 9321+ 1  1D3A	80 06		        sjmp    ??0801
 9322+ 1  1D3C			to_d0:  putc    #'?'
 9323+ 2  1D3C			??0803:
 9324+ 2			        ;jnb     SCON.1,putc_loop
 9325+ 2			        ;clr     SCON.1
 9326+ 2  1D3C	75 99 3F	        mov     SBUF,#'?'
 9327+ 1  1D3F	75 6E 01	        mov     fail,#001h
 9328+ 1  1D42			??0801:
 9329:
 9330:				        put_crlf                    ; end of test series
 9331+ 1			        putc    #13
 9332+ 2  1D42			??0804:
 9333+ 2			        ;jnb     SCON.1,putc_loop
 9334+ 2			        ;clr     SCON.1
 9335+ 2  1D42	75 99 0D	        mov     SBUF,#13
 9336+ 1			        putc    #10
 9337+ 2  1D45			??0805:
 9338+ 2			        ;jnb     SCON.1,putc_loop
 9339+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 168



 Line  I  Addr  Code            Source

 9340+ 2  1D45	75 99 0A	        mov     SBUF,#10
 9341:
 9342:				        ;-- Test series P ------------------------------------------------------
 9343:				        ; Access to XRAM -- note that current tests are bare-bone minimal!
 9344:				        ; a.- <MOV DPTR, #16>
 9345:				        ; b.- <MOVX @DPTR, A>, <MOVX A, @DPTR>
 9346:				        ; c.- <MOVX A, @Ri>
 9347:				        ; d.- <MOVX @Ri, A>
 9348:
 9349:				        putc    #'P'                ; start of test series
 9350+ 1  1D48			??0806:
 9351+ 1			        ;jnb     SCON.1,putc_loop
 9352+ 1			        ;clr     SCON.1
 9353+ 1  1D48	75 99 50	        mov     SBUF,#'P'
 9354:
 9355:				        ; a.- <MOV DPTR, #16>
 9356:	  1D4B	75 83 65	        mov     DPH,#065h           ; initialize DPTR with known value...
 9357:	  1D4E	75 82 43	        mov     DPL,#043h
 9358:
 9359:	  1D51	90 01 23	        mov     DPTR,#0123h         ; ...then load it through MOV...
 9360:	  1D54	E5 83		        mov     a,DPH               ; ...and verify the load
 9361:	  1D56	B4 01 0A	        cjne    a,#01h,tp_a0
 9362:	  1D59	E5 82		        mov     a,DPL
 9363:	  1D5B	B4 23 05	        cjne    a,#23h,tp_a0
 9364:
 9365:				        eot     'a',tp_a0
 9366+ 1			        putc    #'a'
 9367+ 2  1D5E			??0808:
 9368+ 2			        ;jnb     SCON.1,putc_loop
 9369+ 2			        ;clr     SCON.1
 9370+ 2  1D5E	75 99 61	        mov     SBUF,#'a'
 9371+ 1  1D61	80 06		        sjmp    ??0807
 9372+ 1  1D63			tp_a0:  putc    #'?'
 9373+ 2  1D63			??0809:
 9374+ 2			        ;jnb     SCON.1,putc_loop
 9375+ 2			        ;clr     SCON.1
 9376+ 2  1D63	75 99 3F	        mov     SBUF,#'?'
 9377+ 1  1D66	75 6E 01	        mov     fail,#001h
 9378+ 1  1D69			??0807:
 9379:
 9380:
 9381:				        ; b.- <MOVX @DPTR, A>, <MOVX A, @DPTR>
 9382:				        ; We have no independent means to verify XRAM writes or reads, other
 9383:				        ; than the very instructions we're testing. So we should store a data
 9384:				        ; pattern on XRAM that is difficult to get back 'by chance'.
 9385:				        ; Ideally we would try all areas of XRAM, back-to-back operations, etc.
 9386:				        ; For the time being a simple word store will suffice.
 9387:	  1D69	90 00 13	        mov     DPTR,#0013h         ; Store 55h, aah at XRAM[0013h]...
 9388:	  1D6C	74 55		        mov     A,#55h
 9389:	  1D6E	F0		        movx    @DPTR,a
 9390:	  1D6F	A3		        inc     DPTR
 9391:	  1D70	F4		        cpl     a
 9392:	  1D71	F0		        movx    @DPTR,a
 9393:
 9394:	  1D72	90 00 13	        mov     DPTR,#0013h         ; ...then verify the store
 9395:	  1D75	E0		        movx    a,@DPTR

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 169



 Line  I  Addr  Code            Source

 9396:	  1D76	B4 55 0A	        cjne    a,#55h,tp_b0
 9397:	  1D79	A3		        inc     DPTR
 9398:	  1D7A	E0		        movx    a,@DPTR
 9399:	  1D7B	B4 AA 05	        cjne    a,#0aah,tp_b0
 9400:
 9401:				        eot     'b',tp_b0
 9402+ 1			        putc    #'b'
 9403+ 2  1D7E			??0811:
 9404+ 2			        ;jnb     SCON.1,putc_loop
 9405+ 2			        ;clr     SCON.1
 9406+ 2  1D7E	75 99 62	        mov     SBUF,#'b'
 9407+ 1  1D81	80 06		        sjmp    ??0810
 9408+ 1  1D83			tp_b0:  putc    #'?'
 9409+ 2  1D83			??0812:
 9410+ 2			        ;jnb     SCON.1,putc_loop
 9411+ 2			        ;clr     SCON.1
 9412+ 2  1D83	75 99 3F	        mov     SBUF,#'?'
 9413+ 1  1D86	75 6E 01	        mov     fail,#001h
 9414+ 1  1D89			??0810:
 9415:
 9416:				        ; c.- <MOVX A, @Ri>
 9417:	  1D89	74 79		        mov     a,#79h              ; change A and DPTR so we can catch fails
 9418:	  1D8B	90 00 00	        mov     dptr,#0000h
 9419:	  1D8E	78 13		        mov     r0,#13h             ; read back the same data again through
 9420:	  1D90	79 14		        mov     r1,#14h             ; indexed addressing...
 9421:	  1D92	E2		        movx    a,@r0
 9422:	  1D93	B4 55 09	        cjne    a,#55h,tp_c0
 9423:	  1D96	E3		        movx    a,@r1
 9424:	  1D97	B4 AA 05	        cjne    a,#0aah,tp_c0
 9425:
 9426:				        eot     'c',tp_c0
 9427+ 1			        putc    #'c'
 9428+ 2  1D9A			??0814:
 9429+ 2			        ;jnb     SCON.1,putc_loop
 9430+ 2			        ;clr     SCON.1
 9431+ 2  1D9A	75 99 63	        mov     SBUF,#'c'
 9432+ 1  1D9D	80 06		        sjmp    ??0813
 9433+ 1  1D9F			tp_c0:  putc    #'?'
 9434+ 2  1D9F			??0815:
 9435+ 2			        ;jnb     SCON.1,putc_loop
 9436+ 2			        ;clr     SCON.1
 9437+ 2  1D9F	75 99 3F	        mov     SBUF,#'?'
 9438+ 1  1DA2	75 6E 01	        mov     fail,#001h
 9439+ 1  1DA5			??0813:
 9440:
 9441:				        put_crlf                    ; end of test series
 9442+ 1			        putc    #13
 9443+ 2  1DA5			??0816:
 9444+ 2			        ;jnb     SCON.1,putc_loop
 9445+ 2			        ;clr     SCON.1
 9446+ 2  1DA5	75 99 0D	        mov     SBUF,#13
 9447+ 1			        putc    #10
 9448+ 2  1DA8			??0817:
 9449+ 2			        ;jnb     SCON.1,putc_loop
 9450+ 2			        ;clr     SCON.1
 9451+ 2  1DA8	75 99 0A	        mov     SBUF,#10

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 170



 Line  I  Addr  Code            Source

 9452:
 9453:				        ;-- Test series Q ------------------------------------------------------
 9454:				        ; MOVC instructions
 9455:				        ; a.- <MOVC A, @A + PC>
 9456:				        ; b.- <MOVC A, @A + DPTR>
 9457:
 9458:				        putc    #'Q'                ; start of test series
 9459+ 1  1DAB			??0818:
 9460+ 1			        ;jnb     SCON.1,putc_loop
 9461+ 1			        ;clr     SCON.1
 9462+ 1  1DAB	75 99 51	        mov     SBUF,#'Q'
 9463:
 9464:				        ; a.- <MOVC A, @A + PC>
 9465:	  1DAE	74 03		        mov     a,#03h              ; we'll read the 4th byte in the table...
 9466:	  1DB0	24 02		        add     a,#02h              ; ...and must account for intervening sjmp
 9467:	  1DB2	83		        movc    a,@a+PC
 9468:	  1DB3	80 04		        sjmp    tq0
 9469:
 9470:	  1DB5	07 13 19 21	tq1:    db      07h, 13h, 19h, 21h
 9471:	  1DB9	B4 21 05	tq0:    cjne    a,#21h,tq_a0
 9472:
 9473:				        eot     'a',tq_a0
 9474+ 1			        putc    #'a'
 9475+ 2  1DBC			??0820:
 9476+ 2			        ;jnb     SCON.1,putc_loop
 9477+ 2			        ;clr     SCON.1
 9478+ 2  1DBC	75 99 61	        mov     SBUF,#'a'
 9479+ 1  1DBF	80 06		        sjmp    ??0819
 9480+ 1  1DC1			tq_a0:  putc    #'?'
 9481+ 2  1DC1			??0821:
 9482+ 2			        ;jnb     SCON.1,putc_loop
 9483+ 2			        ;clr     SCON.1
 9484+ 2  1DC1	75 99 3F	        mov     SBUF,#'?'
 9485+ 1  1DC4	75 6E 01	        mov     fail,#001h
 9486+ 1  1DC7			??0819:
 9487:
 9488:				        ; b.- <MOVC A, @A + DPTR>
 9489:	  1DC7	90 1D B5	        mov   DPTR,#tq1
 9490:
 9491:	  1DCA	74 00		        mov   a,#00h
 9492:	  1DCC	93		        movc  a,@a+DPTR
 9493:	  1DCD	B4 07 17	        cjne  a,#07h,tq_b0
 9494:
 9495:	  1DD0	74 01		        mov   a,#01h
 9496:	  1DD2	93		        movc  a,@a+DPTR
 9497:	  1DD3	B4 13 11	        cjne  a,#13h,tq_b0
 9498:
 9499:	  1DD6	74 02		        mov   a,#02h
 9500:	  1DD8	93		        movc  a,@a+DPTR
 9501:	  1DD9	B4 19 0B	        cjne  a,#19h,tq_b0
 9502:
 9503:	  1DDC	74 03		        mov   a,#03h
 9504:	  1DDE	93		        movc  a,@a+DPTR
 9505:	  1DDF	B4 21 05	        cjne  a,#21h,tq_b0
 9506:
 9507:				        eot     'b',tq_b0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 171



 Line  I  Addr  Code            Source

 9508+ 1			        putc    #'b'
 9509+ 2  1DE2			??0823:
 9510+ 2			        ;jnb     SCON.1,putc_loop
 9511+ 2			        ;clr     SCON.1
 9512+ 2  1DE2	75 99 62	        mov     SBUF,#'b'
 9513+ 1  1DE5	80 06		        sjmp    ??0822
 9514+ 1  1DE7			tq_b0:  putc    #'?'
 9515+ 2  1DE7			??0824:
 9516+ 2			        ;jnb     SCON.1,putc_loop
 9517+ 2			        ;clr     SCON.1
 9518+ 2  1DE7	75 99 3F	        mov     SBUF,#'?'
 9519+ 1  1DEA	75 6E 01	        mov     fail,#001h
 9520+ 1  1DED			??0822:
 9521:
 9522:				        put_crlf                    ; end of test series
 9523+ 1			        putc    #13
 9524+ 2  1DED			??0825:
 9525+ 2			        ;jnb     SCON.1,putc_loop
 9526+ 2			        ;clr     SCON.1
 9527+ 2  1DED	75 99 0D	        mov     SBUF,#13
 9528+ 1			        putc    #10
 9529+ 2  1DF0			??0826:
 9530+ 2			        ;jnb     SCON.1,putc_loop
 9531+ 2			        ;clr     SCON.1
 9532+ 2  1DF0	75 99 0A	        mov     SBUF,#10
 9533:
 9534:
 9535:				        ;-- Test series R ------------------------------------------------------
 9536:				        ; ACALL, LCALL, JMP @A+DPTR, LJMP instructions
 9537:				        ; a.- <ACALL addr8>     <-- uses LJMP too
 9538:				        ; b.- <LCALL addr16>    <-- uses LJMP too
 9539:				        ; c.- <JMP @A+DPTR>
 9540:				        ; d.- <LJMP addr16>
 9541:				        ;
 9542:				        ; Biggest limitations:
 9543:				        ; .- Only long jumps; jumps to same page (== H addr byte) untested.
 9544:				        ;
 9545:				        ; Note RET is NOT tested here! we don't return from these calls, just
 9546:				        ; use them as jumps.
 9547:				        ;
 9548:
 9549:				        putc    #'R'                ; start of test series
 9550+ 1  1DF3			??0827:
 9551+ 1			        ;jnb     SCON.1,putc_loop
 9552+ 1			        ;clr     SCON.1
 9553+ 1  1DF3	75 99 52	        mov     SBUF,#'R'
 9554:
 9555:	  1DF6	75 81 4F	        mov     SP,#4fh             ; Initialize SP...
 9556:	  1DF9	75 50 00	        mov     50h,#00h            ; ...and clear stack area
 9557:	  1DFC	75 51 00	        mov     51h,#00h
 9558:	  1DFF	75 52 00	        mov     52h,#00h
 9559:	  1E02	75 53 00	        mov     53h,#00h
 9560:
 9561:				        ; a.- <ACALL addr8>
 9562:				        ; We should test all code pages eventually...
 9563:	  1E05	D1 09		        acall   tr_sub0             ; Do the call...

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 172



 Line  I  Addr  Code            Source

 9564:	  1E07	80 14		tr_rv0: sjmp    tr_a0
 9565:	  1E09			tr_sub0:
 9566:	  1E09	E5 81		        mov     A,SP
 9567:	  1E0B	B4 51 0F	        cjne    A,#51h,tr_a0       ; ...verify the SP value...
 9568:	  1E0E	E5 50		        mov     A,50h
 9569:	  1E10	B4 07 0A	        cjne    A,#LOW(tr_rv0),tr_a0 ; ...and verify the pushed ret address
 9570:	  1E13	E5 51		        mov     A,51h
 9571:	  1E15	B4 1E 05	        cjne    A,#HIGH(tr_rv0),tr_a0
 9572:
 9573:				        eot     'a',tr_a0
 9574+ 1			        putc    #'a'
 9575+ 2  1E18			??0829:
 9576+ 2			        ;jnb     SCON.1,putc_loop
 9577+ 2			        ;clr     SCON.1
 9578+ 2  1E18	75 99 61	        mov     SBUF,#'a'
 9579+ 1  1E1B	80 06		        sjmp    ??0828
 9580+ 1  1E1D			tr_a0:  putc    #'?'
 9581+ 2  1E1D			??0830:
 9582+ 2			        ;jnb     SCON.1,putc_loop
 9583+ 2			        ;clr     SCON.1
 9584+ 2  1E1D	75 99 3F	        mov     SBUF,#'?'
 9585+ 1  1E20	75 6E 01	        mov     fail,#001h
 9586+ 1  1E23			??0828:
 9587:
 9588:				        ; b.- <LCALL addr16>
 9589:	  1E23	12 80 0C	        lcall   tr_sub1             ; Do the call...
 9590:	  1E26	80 06		tr_rv1: sjmp    tr_b0
 9591:	  1E28	00		tr_rv2: nop
 9592:				        eot     'b',tr_b0
 9593+ 1			        putc    #'b'
 9594+ 2  1E29			??0832:
 9595+ 2			        ;jnb     SCON.1,putc_loop
 9596+ 2			        ;clr     SCON.1
 9597+ 2  1E29	75 99 62	        mov     SBUF,#'b'
 9598+ 1  1E2C	80 06		        sjmp    ??0831
 9599+ 1  1E2E			tr_b0:  putc    #'?'
 9600+ 2  1E2E			??0833:
 9601+ 2			        ;jnb     SCON.1,putc_loop
 9602+ 2			        ;clr     SCON.1
 9603+ 2  1E2E	75 99 3F	        mov     SBUF,#'?'
 9604+ 1  1E31	75 6E 01	        mov     fail,#001h
 9605+ 1  1E34			??0831:
 9606:
 9607:
 9608:				        ; c.- <JMP @A+DPTR>
 9609:				        ; Note that tr_sub2 is at 8000h so that we test the A+DPTR carry
 9610:				        ; propagation. Any address xx00h would do.
 9611:	  1E34	90 7F CD	        mov     DPTR,#(tr_sub2-33h) ; Prepare DPTR and A so that their sum
 9612:	  1E37	74 33		        mov     a,#33h              ; gives the target address.
 9613:	  1E39	73		        jmp     @a+DPTR
 9614:	  1E3A	02 1E 4C	        jmp     tr_c0
 9615:	  1E3D	00		        nop
 9616:	  1E3E	00		        nop
 9617:	  1E3F	74 00		tr_rv3: mov     a,#00h
 9618:	  1E41	74 00		        mov     a,#00h
 9619:	  1E43	74 00		        mov     a,#00h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 173



 Line  I  Addr  Code            Source

 9620:	  1E45	74 00		        mov     a,#00h
 9621:
 9622:				        eot     'c',tr_c0
 9623+ 1			        putc    #'c'
 9624+ 2  1E47			??0835:
 9625+ 2			        ;jnb     SCON.1,putc_loop
 9626+ 2			        ;clr     SCON.1
 9627+ 2  1E47	75 99 63	        mov     SBUF,#'c'
 9628+ 1  1E4A	80 06		        sjmp    ??0834
 9629+ 1  1E4C			tr_c0:  putc    #'?'
 9630+ 2  1E4C			??0836:
 9631+ 2			        ;jnb     SCON.1,putc_loop
 9632+ 2			        ;clr     SCON.1
 9633+ 2  1E4C	75 99 3F	        mov     SBUF,#'?'
 9634+ 1  1E4F	75 6E 01	        mov     fail,#001h
 9635+ 1  1E52			??0834:
 9636:
 9637:				        ; c.- <LJMP addr16>
 9638:	  1E52	02 80 06	        ljmp    tr_sub3
 9639:	  1E55	02 1E 61	        jmp     tr_d0
 9640:	  1E58	00		        nop
 9641:	  1E59	00		        nop
 9642:	  1E5A	00		tr_rv4: nop
 9643:	  1E5B	00		        nop
 9644:				        eot     'd',tr_d0
 9645+ 1			        putc    #'d'
 9646+ 2  1E5C			??0838:
 9647+ 2			        ;jnb     SCON.1,putc_loop
 9648+ 2			        ;clr     SCON.1
 9649+ 2  1E5C	75 99 64	        mov     SBUF,#'d'
 9650+ 1  1E5F	80 06		        sjmp    ??0837
 9651+ 1  1E61			tr_d0:  putc    #'?'
 9652+ 2  1E61			??0839:
 9653+ 2			        ;jnb     SCON.1,putc_loop
 9654+ 2			        ;clr     SCON.1
 9655+ 2  1E61	75 99 3F	        mov     SBUF,#'?'
 9656+ 1  1E64	75 6E 01	        mov     fail,#001h
 9657+ 1  1E67			??0837:
 9658:
 9659:				        put_crlf                    ; end of test series
 9660+ 1			        putc    #13
 9661+ 2  1E67			??0840:
 9662+ 2			        ;jnb     SCON.1,putc_loop
 9663+ 2			        ;clr     SCON.1
 9664+ 2  1E67	75 99 0D	        mov     SBUF,#13
 9665+ 1			        putc    #10
 9666+ 2  1E6A			??0841:
 9667+ 2			        ;jnb     SCON.1,putc_loop
 9668+ 2			        ;clr     SCON.1
 9669+ 2  1E6A	75 99 0A	        mov     SBUF,#10
 9670:
 9671:
 9672:				        ;-- Test series S ------------------------------------------------------
 9673:				        ; RET, RETI instructions
 9674:				        ; a.- <RET>
 9675:				        ; b.- <RETI>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 174



 Line  I  Addr  Code            Source

 9676:				        ;
 9677:				        ; RETs to different code pages (!= H addr byte) not tested!
 9678:				        ; Interrupt flag stuff not tested, only RET functionality
 9679:
 9680:				        putc    #'S'                ; start of test series
 9681+ 1  1E6D			??0842:
 9682+ 1			        ;jnb     SCON.1,putc_loop
 9683+ 1			        ;clr     SCON.1
 9684+ 1  1E6D	75 99 53	        mov     SBUF,#'S'
 9685:
 9686:
 9687:				        ; a.- <RET>
 9688:	  1E70	75 81 4F	        mov     SP,#4fh             ; Initialize SP...
 9689:	  1E73	75 4F 1E	        mov     4fh,#HIGH(s_sub0)   ; ...and load stack area with return
 9690:	  1E76	75 4E 84	        mov     4eh,#LOW(s_sub0)    ; addresses to be tested
 9691:	  1E79	75 4D 1E	        mov     4dh,#HIGH(s_sub1)
 9692:	  1E7C	75 4C 8E	        mov     4ch,#LOW(s_sub1)
 9693:
 9694:	  1E7F	22		        ret                         ; Do the ret...
 9695:	  1E80	80 16		        sjmp    ts_a0
 9696:	  1E82	74 00		        mov     A,#00h
 9697:	  1E84	E5 81		s_sub0: mov     A,SP
 9698:	  1E86	B4 4D 0F	        cjne    A,#4dh,ts_a0       ; ... and verify the SP value
 9699:
 9700:	  1E89	22		        ret                         ; Do another ret...
 9701:	  1E8A	80 0C		        sjmp    ts_a0
 9702:	  1E8C	74 00		        mov     A,#00h
 9703:	  1E8E	E5 81		s_sub1: mov     A,SP
 9704:	  1E90	B4 4B 05	        cjne    A,#4bh,ts_a0       ; ... and verify the SP value
 9705:
 9706:				        eot     'a',ts_a0
 9707+ 1			        putc    #'a'
 9708+ 2  1E93			??0844:
 9709+ 2			        ;jnb     SCON.1,putc_loop
 9710+ 2			        ;clr     SCON.1
 9711+ 2  1E93	75 99 61	        mov     SBUF,#'a'
 9712+ 1  1E96	80 06		        sjmp    ??0843
 9713+ 1  1E98			ts_a0:  putc    #'?'
 9714+ 2  1E98			??0845:
 9715+ 2			        ;jnb     SCON.1,putc_loop
 9716+ 2			        ;clr     SCON.1
 9717+ 2  1E98	75 99 3F	        mov     SBUF,#'?'
 9718+ 1  1E9B	75 6E 01	        mov     fail,#001h
 9719+ 1  1E9E			??0843:
 9720:
 9721:
 9722:				        ; a.- <RETI>
 9723:	  1E9E	75 81 4F	        mov     SP,#4fh             ; Initialize SP...
 9724:	  1EA1	75 4F 1E	        mov     4fh,#HIGH(s_sub2)   ; ...and load stack area with return
 9725:	  1EA4	75 4E B2	        mov     4eh,#LOW(s_sub2)    ; addresses to be tested
 9726:	  1EA7	75 4D 1E	        mov     4dh,#HIGH(s_sub3)
 9727:	  1EAA	75 4C BC	        mov     4ch,#LOW(s_sub3)
 9728:
 9729:	  1EAD	22		        ret                         ; Do the ret...
 9730:	  1EAE	80 E8		        sjmp    ts_a0
 9731:	  1EB0	74 00		        mov     A,#00h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 175



 Line  I  Addr  Code            Source

 9732:	  1EB2	E5 81		s_sub2: mov     A,SP
 9733:	  1EB4	B4 4D 0F	        cjne    A,#4dh,ts_b0       ; ... and verify the SP value
 9734:
 9735:	  1EB7	22		        ret                         ; Do another ret...
 9736:	  1EB8	80 DE		        sjmp    ts_a0
 9737:	  1EBA	74 00		        mov     A,#00h
 9738:	  1EBC	E5 81		s_sub3: mov     A,SP
 9739:	  1EBE	B4 4B 05	        cjne    A,#4bh,ts_b0       ; ... and verify the SP value
 9740:
 9741:				        eot     'b',ts_b0
 9742+ 1			        putc    #'b'
 9743+ 2  1EC1			??0847:
 9744+ 2			        ;jnb     SCON.1,putc_loop
 9745+ 2			        ;clr     SCON.1
 9746+ 2  1EC1	75 99 62	        mov     SBUF,#'b'
 9747+ 1  1EC4	80 06		        sjmp    ??0846
 9748+ 1  1EC6			ts_b0:  putc    #'?'
 9749+ 2  1EC6			??0848:
 9750+ 2			        ;jnb     SCON.1,putc_loop
 9751+ 2			        ;clr     SCON.1
 9752+ 2  1EC6	75 99 3F	        mov     SBUF,#'?'
 9753+ 1  1EC9	75 6E 01	        mov     fail,#001h
 9754+ 1  1ECC			??0846:
 9755:
 9756:				        ; Lots of things can go badly and we wouldn't know with this test...
 9757:				        put_crlf                    ; end of test series
 9758+ 1			        putc    #13
 9759+ 2  1ECC			??0849:
 9760+ 2			        ;jnb     SCON.1,putc_loop
 9761+ 2			        ;clr     SCON.1
 9762+ 2  1ECC	75 99 0D	        mov     SBUF,#13
 9763+ 1			        putc    #10
 9764+ 2  1ECF			??0850:
 9765+ 2			        ;jnb     SCON.1,putc_loop
 9766+ 2			        ;clr     SCON.1
 9767+ 2  1ECF	75 99 0A	        mov     SBUF,#10
 9768:
 9769:				        ;-- Test series T ------------------------------------------------------
 9770:				        ; MUL, DIV instructions
 9771:				        ; a.- <DIV>
 9772:				        ; b.- <MUL>
 9773:				        ;
 9774:
 9775:				        putc    #'T'                ; start of test series
 9776+ 1  1ED2			??0851:
 9777+ 1			        ;jnb     SCON.1,putc_loop
 9778+ 1			        ;clr     SCON.1
 9779+ 1  1ED2	75 99 54	        mov     SBUF,#'T'
 9780:
 9781:				        ; a.- <DIV>
 9782:	  1ED5	75 F0 07	        mov     B,#07h              ; First of all, make sure B can be read back
 9783:	  1ED8	74 13		        mov     A,#13h
 9784:	  1EDA	E5 F0		        mov     A,B
 9785:	  1EDC	B4 07 37	        cjne    A,#07h,tt_a0
 9786:
 9787:				        ; Now do a few representative DIVs using a table. The table has the

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 176



 Line  I  Addr  Code            Source

 9788:				        ; following format:
 9789:				        ; denominator, numerator, overflow, quotient, remainder
 9790:				        ; Where 'overflow' is 00h or 04h.
 9791:
 9792:				        ; DPTR will point to the start of the table, r0 will be the current data
 9793:				        ; byte offset and r1 the number of test cases remaiining.
 9794:	  1EDF	90 1F 1E	        mov     DPTR,#tt_a_tab
 9795:	  1EE2	78 00		        mov     r0,#00h
 9796:	  1EE4	79 09		        mov     r1,#((tt_a_tab_end-tt_a_tab)/5)
 9797:
 9798:	  1EE6			tt_a_loop:
 9799:	  1EE6	E8		        mov     a,r0
 9800:	  1EE7	08		        inc     r0
 9801:	  1EE8	93		        movc    a,@a+DPTR
 9802:	  1EE9	F5 F0		        mov     B,a
 9803:	  1EEB	E8		        mov     a,r0
 9804:	  1EEC	08		        inc     r0
 9805:	  1EED	93		        movc    a,@a+DPTR
 9806:	  1EEE	84		        div     ab
 9807:	  1EEF	F5 60		        mov     dir0,a
 9808:
 9809:	  1EF1	E8		        mov     a,r0                ; Get expected OV flag
 9810:	  1EF2	08		        inc     r0
 9811:	  1EF3	93		        movc    a,@a+DPTR
 9812:	  1EF4	70 15		        jnz     tt_a_divzero        ; If OV expected, skip verification of
 9813:	  1EF6	E5 D0		        mov     a,PSW               ; quotient and remainder
 9814:	  1EF8	54 04		        anl     a,#04h
 9815:	  1EFA	70 1A		        jnz     tt_a0
 9816:
 9817:	  1EFC	E8		        mov     a,r0                ; Verify quotient...
 9818:	  1EFD	08		        inc     r0
 9819:	  1EFE	93		        movc    a,@a+DPTR
 9820:	  1EFF	B5 60 14	        cjne    a,dir0,tt_a0
 9821:	  1F02	E8		        mov     a,r0                ; ...and verify remainder
 9822:	  1F03	08		        inc     r0
 9823:	  1F04	93		        movc    a,@a+DPTR
 9824:	  1F05	B5 F0 0E	        cjne    a,B,tt_a0
 9825:	  1F08	02 1F 0D	        jmp     tt_a_next
 9826:
 9827:	  1F0B			tt_a_divzero:
 9828:	  1F0B	08		        inc     r0
 9829:	  1F0C	08		        inc     r0
 9830:	  1F0D			tt_a_next:
 9831:	  1F0D	19		        dec     r1                  ; go for next test vector, if any
 9832:	  1F0E	E9		        mov     a,r1
 9833:	  1F0F	70 D5		        jnz     tt_a_loop
 9834:
 9835:				        eot     'a',tt_a0
 9836+ 1			        putc    #'a'
 9837+ 2  1F11			??0853:
 9838+ 2			        ;jnb     SCON.1,putc_loop
 9839+ 2			        ;clr     SCON.1
 9840+ 2  1F11	75 99 61	        mov     SBUF,#'a'
 9841+ 1  1F14	80 06		        sjmp    ??0852
 9842+ 1  1F16			tt_a0:  putc    #'?'
 9843+ 2  1F16			??0854:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 177



 Line  I  Addr  Code            Source

 9844+ 2			        ;jnb     SCON.1,putc_loop
 9845+ 2			        ;clr     SCON.1
 9846+ 2  1F16	75 99 3F	        mov     SBUF,#'?'
 9847+ 1  1F19	75 6E 01	        mov     fail,#001h
 9848+ 1  1F1C			??0852:
 9849:	  1F1C	80 2D		        sjmp    tt_a_tab_end
 9850:
 9851:	  1F1E			tt_a_tab:
 9852:	  1F1E	07 13 00 02	        db      7,19,0,2,5
	  1F22	05
 9853:	  1F23	07 11 00 02	        db      7,17,0,2,3
	  1F27	03
 9854:	  1F28	07 0D 00 01	        db      7,13,0,1,6
	  1F2C	06
 9855:	  1F2D	0D 11 00 01	        db      13,17,0,1,4
	  1F31	04
 9856:	  1F32	11 0D 00 00	        db      17,13,0,0,13
	  1F36	0D
 9857:	  1F37	00 0D 04 00	        db      0,13,4,0,13
	  1F3B	0D
 9858:	  1F3C	80 87 00 01	        db      80h,87h,0,1,7
	  1F40	07
 9859:	  1F41	01 FF 00 FF	        db      1,255,0,255,0
	  1F45	00
 9860:	  1F46	02 FF 00 7F	        db      2,255,0,127,1
	  1F4A	01
 9861:	  1F4B			tt_a_tab_end:
 9862:
 9863:				        ; b.- <MUL>
 9864:
 9865:				        ; Do with MUL the same we just did with DIV. The test data table has
 9866:				        ; the following format:
 9867:				        ; denominator, numerator, product high byte, product low byte.
 9868:
 9869:				        ; DPTR will point to the start of the table, r0 will be the current data
 9870:				        ; byte offset and r1 the number of test cases remaiining.
 9871:	  1F4B	90 1F 8C	        mov     DPTR,#tt_b_tab
 9872:	  1F4E	78 00		        mov     r0,#00h
 9873:	  1F50	79 09		        mov     r1,#((tt_b_tab_end-tt_b_tab)/4)
 9874:
 9875:	  1F52			tt_b_loop:
 9876:	  1F52	E8		        mov     a,r0                ; Load B with test data...
 9877:	  1F53	08		        inc     r0
 9878:	  1F54	93		        movc    a,@a+DPTR
 9879:	  1F55	F5 F0		        mov     B,a
 9880:	  1F57	E8		        mov     a,r0                ; ...then load A with test data...
 9881:	  1F58	08		        inc     r0
 9882:	  1F59	93		        movc    a,@a+DPTR
 9883:	  1F5A	A4		        mul     ab                  ; and do the MUL
 9884:	  1F5B	F5 60		        mov     dir0,a              ; Save A for later checks
 9885:
 9886:	  1F5D	E8		        mov     a,r0                ; Verify product high byte
 9887:				        ;inc     r0
 9888:	  1F5E	93		        movc    a,@a+DPTR
 9889:	  1F5F	60 08		        jz      tt_b_noovf
 9890:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 178



 Line  I  Addr  Code            Source

 9891:	  1F61	E5 D0		        mov     a,PSW               ; overflow expected
 9892:	  1F63	54 04		        anl     a,#04h
 9893:	  1F65	60 1D		        jz      tt_b0
 9894:	  1F67	80 06		        sjmp    tt_b_0
 9895:
 9896:	  1F69			tt_b_noovf:
 9897:	  1F69	E5 D0		        mov     a,PSW               ; no overflow expected
 9898:	  1F6B	54 04		        anl     a,#04h
 9899:	  1F6D	70 15		        jnz     tt_b0
 9900:
 9901:	  1F6F			tt_b_0:
 9902:	  1F6F	E8		        mov     a,r0                ; Verify product high byte
 9903:	  1F70	08		        inc     r0
 9904:	  1F71	93		        movc    a,@a+DPTR
 9905:	  1F72	B5 F0 0F	        cjne    a,B,tt_b0
 9906:	  1F75	E8		        mov     a,r0                ; ...and verify low byte
 9907:	  1F76	08		        inc     r0
 9908:	  1F77	93		        movc    a,@a+DPTR
 9909:	  1F78	B5 60 09	        cjne    a,dir0,tt_b0
 9910:
 9911:	  1F7B	19		        dec     r1                  ; go for next test vector, if any
 9912:	  1F7C	E9		        mov     a,r1
 9913:	  1F7D	70 D3		        jnz     tt_b_loop
 9914:
 9915:				        eot     'b',tt_b0
 9916+ 1			        putc    #'b'
 9917+ 2  1F7F			??0856:
 9918+ 2			        ;jnb     SCON.1,putc_loop
 9919+ 2			        ;clr     SCON.1
 9920+ 2  1F7F	75 99 62	        mov     SBUF,#'b'
 9921+ 1  1F82	80 06		        sjmp    ??0855
 9922+ 1  1F84			tt_b0:  putc    #'?'
 9923+ 2  1F84			??0857:
 9924+ 2			        ;jnb     SCON.1,putc_loop
 9925+ 2			        ;clr     SCON.1
 9926+ 2  1F84	75 99 3F	        mov     SBUF,#'?'
 9927+ 1  1F87	75 6E 01	        mov     fail,#001h
 9928+ 1  1F8A			??0855:
 9929:	  1F8A	80 24		        sjmp    tt_b_tab_end
 9930:
 9931:	  1F8C			tt_b_tab:
 9932:	  1F8C	07 13 00 85	        db      7,19,0,133
 9933:	  1F90	07 11 00 77	        db      7,17,0,119
 9934:	  1F94	07 0D 00 5B	        db      7,13,0,91
 9935:	  1F98	0D 11 00 DD	        db      13,17,0,221
 9936:	  1F9C	11 0D 00 DD	        db      17,13,0,221
 9937:	  1FA0	00 0D 00 00	        db      0,13,0,0
 9938:	  1FA4	80 87 43 80	        db      80h,87h,43h,80h
 9939:	  1FA8	01 FF 00 FF	        db      1,255,0,255
 9940:	  1FAC	02 FF 01 FE	        db      2,255,01h,0feh
 9941:	  1FB0			tt_b_tab_end:
 9942:
 9943:				        put_crlf                    ; end of test series
 9944+ 1			        putc    #13
 9945+ 2  1FB0			??0858:
 9946+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 179



 Line  I  Addr  Code            Source

 9947+ 2			        ;clr     SCON.1
 9948+ 2  1FB0	75 99 0D	        mov     SBUF,#13
 9949+ 1			        putc    #10
 9950+ 2  1FB3			??0859:
 9951+ 2			        ;jnb     SCON.1,putc_loop
 9952+ 2			        ;clr     SCON.1
 9953+ 2  1FB3	75 99 0A	        mov     SBUF,#10
 9954:
 9955:
 9956:
 9957:				        ;-- Test series U ------------------------------------------------------
 9958:				        ; Register banks
 9959:				        ; a.- Write to register, read from indirect address.
 9960:				        ; a.- Write to indirect address, read from register.
 9961:				        ;
 9962:
 9963:				        putc    #'U'                ; start of test series
 9964+ 1  1FB6			??0860:
 9965+ 1			        ;jnb     SCON.1,putc_loop
 9966+ 1			        ;clr     SCON.1
 9967+ 1  1FB6	75 99 55	        mov     SBUF,#'U'
 9968:
 9969:
 9970:	  1FB9	75 D0 00	        mov     PSW,#00h            ; Test bank 0
 9971:	  1FBC	74 01		        mov     a,#00h + 1
 9972:	  1FBE	12 1F DB	        call    tu_a_test
 9973:
 9974:	  1FC1	75 D0 08	        mov     PSW,#08h            ; Test bank 1
 9975:	  1FC4	74 09		        mov     a,#08h + 1
 9976:	  1FC6	12 1F DB	        call    tu_a_test
 9977:
 9978:	  1FC9	75 D0 10	        mov     PSW,#10h            ; Test bank 2
 9979:	  1FCC	74 11		        mov     a,#10h + 1
 9980:	  1FCE	12 1F DB	        call    tu_a_test
 9981:
 9982:	  1FD1	75 D0 18	        mov     PSW,#18h            ; Test bank 3
 9983:	  1FD4	74 19		        mov     a,#18h + 1
 9984:	  1FD6	12 1F DB	        call    tu_a_test
 9985:
 9986:	  1FD9	80 1E		        sjmp    tu_a_done
 9987:
 9988:	  1FDB			tu_a_test:
 9989:	  1FDB	F8		        mov     r0,a                ; R0 points to R1 in the selected bank.
 9990:
 9991:	  1FDC	79 12		        mov     r1,#12h             ; Write to registers R1 and R7
 9992:	  1FDE	7F 34		        mov     r7,#34h
 9993:
 9994:	  1FE0	E6		        mov     a,@r0               ; Check R1
 9995:	  1FE1	B4 12 1B	        cjne    a,#12h,tu_a0
 9996:	  1FE4	74 56		        mov     a,#56h              ; Ok, now write to R1 with reg addressing...
 9997:	  1FE6	F6		        mov     @r0,a               ; ...and check by reading in indirect.
 9998:	  1FE7	B9 56 15	        cjne    r1,#56h,tu_a0
 9999:
10000:	  1FEA	E8		        mov     a,r0                ; Set R0 to point to R7 in selected bank
10001:	  1FEB	24 06		        add     a,#06h
10002:	  1FED	F8		        mov     r0,a

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 180



 Line  I  Addr  Code            Source

10003:	  1FEE	E6		        mov     a,@r0               ; Check R7
10004:	  1FEF	B4 34 0D	        cjne    a,#34h,tu_a0
10005:
10006:	  1FF2	74 78		        mov     a,#78h              ; Ok, now write to R7 with reg addressing...
10007:	  1FF4	F6		        mov     @r0,a               ; ...and check by reading in indirect.
10008:	  1FF5	B4 78 07	        cjne    a,#78h,tu_a0
10009:
10010:	  1FF8	22		        ret
10011:
10012:	  1FF9			tu_a_done:
10013:	  1FF9	00		        nop
10014:				        eot     'a',tu_a0
10015+ 1			        putc    #'a'
10016+ 2  1FFA			??0862:
10017+ 2			        ;jnb     SCON.1,putc_loop
10018+ 2			        ;clr     SCON.1
10019+ 2  1FFA	75 99 61	        mov     SBUF,#'a'
10020+ 1  1FFD	80 06		        sjmp    ??0861
10021+ 1  1FFF			tu_a0:  putc    #'?'
10022+ 2  1FFF			??0863:
10023+ 2			        ;jnb     SCON.1,putc_loop
10024+ 2			        ;clr     SCON.1
10025+ 2  1FFF	75 99 3F	        mov     SBUF,#'?'
10026+ 1  2002	75 6E 01	        mov     fail,#001h
10027+ 1  2005			??0861:
10028:
10029:				        put_crlf                    ; end of test series
10030+ 1			        putc    #13
10031+ 2  2005			??0864:
10032+ 2			        ;jnb     SCON.1,putc_loop
10033+ 2			        ;clr     SCON.1
10034+ 2  2005	75 99 0D	        mov     SBUF,#13
10035+ 1			        putc    #10
10036+ 2  2008			??0865:
10037+ 2			        ;jnb     SCON.1,putc_loop
10038+ 2			        ;clr     SCON.1
10039+ 2  2008	75 99 0A	        mov     SBUF,#10
10040:
10041:
10042:				        ;-- Template for test series -------------------------------------------
10043:
10044:				        ;-- Test series X ------------------------------------------------------
10045:				        ;
10046:				        ; a.-
10047:
10048:				        ;putc    #'X'                ; start of test series
10049:				        ;put_crlf                    ; end of test series
10050:
10051:				        ;-----------------------------------------------------------------------
10052:
10053:				        ; Test cases finished. Now print completion message dependent on the
10054:				        ; value of the fail flag.
10055:
10056:	  200B	E5 6E		        mov     a,fail
10057:	  200D	70 1A		        jnz     test_failed
10058:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 181



 Line  I  Addr  Code            Source

10059:				        put_crlf
10060+ 1			        putc    #13
10061+ 2  200F			??0866:
10062+ 2			        ;jnb     SCON.1,putc_loop
10063+ 2			        ;clr     SCON.1
10064+ 2  200F	75 99 0D	        mov     SBUF,#13
10065+ 1			        putc    #10
10066+ 2  2012			??0867:
10067+ 2			        ;jnb     SCON.1,putc_loop
10068+ 2			        ;clr     SCON.1
10069+ 2  2012	75 99 0A	        mov     SBUF,#10
10070:				        putc    #'P'
10071+ 1  2015			??0868:
10072+ 1			        ;jnb     SCON.1,putc_loop
10073+ 1			        ;clr     SCON.1
10074+ 1  2015	75 99 50	        mov     SBUF,#'P'
10075:				        putc    #'A'
10076+ 1  2018			??0869:
10077+ 1			        ;jnb     SCON.1,putc_loop
10078+ 1			        ;clr     SCON.1
10079+ 1  2018	75 99 41	        mov     SBUF,#'A'
10080:				        putc    #'S'
10081+ 1  201B			??0870:
10082+ 1			        ;jnb     SCON.1,putc_loop
10083+ 1			        ;clr     SCON.1
10084+ 1  201B	75 99 53	        mov     SBUF,#'S'
10085:				        putc    #'S'
10086+ 1  201E			??0871:
10087+ 1			        ;jnb     SCON.1,putc_loop
10088+ 1			        ;clr     SCON.1
10089+ 1  201E	75 99 53	        mov     SBUF,#'S'
10090:				        put_crlf
10091+ 1			        putc    #13
10092+ 2  2021			??0872:
10093+ 2			        ;jnb     SCON.1,putc_loop
10094+ 2			        ;clr     SCON.1
10095+ 2  2021	75 99 0D	        mov     SBUF,#13
10096+ 1			        putc    #10
10097+ 2  2024			??0873:
10098+ 2			        ;jnb     SCON.1,putc_loop
10099+ 2			        ;clr     SCON.1
10100+ 2  2024	75 99 0A	        mov     SBUF,#10
10101:	  2027	80 1A		        sjmp    quit
10102:
10103:	  2029			test_failed:
10104:				        put_crlf
10105+ 1			        putc    #13
10106+ 2  2029			??0874:
10107+ 2			        ;jnb     SCON.1,putc_loop
10108+ 2			        ;clr     SCON.1
10109+ 2  2029	75 99 0D	        mov     SBUF,#13
10110+ 1			        putc    #10
10111+ 2  202C			??0875:
10112+ 2			        ;jnb     SCON.1,putc_loop
10113+ 2			        ;clr     SCON.1
10114+ 2  202C	75 99 0A	        mov     SBUF,#10

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 182



 Line  I  Addr  Code            Source

10115:				        putc    #'F'
10116+ 1  202F			??0876:
10117+ 1			        ;jnb     SCON.1,putc_loop
10118+ 1			        ;clr     SCON.1
10119+ 1  202F	75 99 46	        mov     SBUF,#'F'
10120:				        putc    #'A'
10121+ 1  2032			??0877:
10122+ 1			        ;jnb     SCON.1,putc_loop
10123+ 1			        ;clr     SCON.1
10124+ 1  2032	75 99 41	        mov     SBUF,#'A'
10125:				        putc    #'I'
10126+ 1  2035			??0878:
10127+ 1			        ;jnb     SCON.1,putc_loop
10128+ 1			        ;clr     SCON.1
10129+ 1  2035	75 99 49	        mov     SBUF,#'I'
10130:				        putc    #'L'
10131+ 1  2038			??0879:
10132+ 1			        ;jnb     SCON.1,putc_loop
10133+ 1			        ;clr     SCON.1
10134+ 1  2038	75 99 4C	        mov     SBUF,#'L'
10135:				        put_crlf
10136+ 1			        putc    #13
10137+ 2  203B			??0880:
10138+ 2			        ;jnb     SCON.1,putc_loop
10139+ 2			        ;clr     SCON.1
10140+ 2  203B	75 99 0D	        mov     SBUF,#13
10141+ 1			        putc    #10
10142+ 2  203E			??0881:
10143+ 2			        ;jnb     SCON.1,putc_loop
10144+ 2			        ;clr     SCON.1
10145+ 2  203E	75 99 0A	        mov     SBUF,#10
10146:	  2041	80 00		        sjmp    quit
10147:
10148:				        ;-- End of test program, enter single-instruction endless loop
10149:	  2043	01 43		quit:   ajmp    $
10150:
10151:
10152:				        ; We'll place a few test routines in the 2nd half of the code space so
10153:				        ; we can test long jumps and calls onto different code pages.
10154:		N      8000	        org     8000h
10155:
10156:				        ; tr_sub2: part of the JMP @A+DPTR test.
10157:				        ; HAS TO BE in 8000h so we can test the A+DPTR carry propagation!
10158:	  8000			tr_sub2:
10159:	  8000	02 1E 3F	        jmp     tr_rv3
10160:	  8003	02 1E 4C	        jmp     tr_c0
10161:				        ; Make sure the assumption we'll make in the test is actually valid
10162:		N      0000	        if      LOW(tr_sub2) ne 0
10163:				        $error("Label 'tr_sub2' must be at an address multiple of 256 to properly test JMP @A+DPTR")
10164:				        endif
10165:
10166:				        ; tr_sub3: part of the LJMP test.
10167:	  8006			tr_sub3:
10168:	  8006	02 1E 5A	        jmp     tr_rv4
10169:	  8009	02 1E 61	        jmp     tr_d0
10170:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 183



 Line  I  Addr  Code            Source

10171:				        ; tr_sub1: part of the LCALL test.
10172:	  800C			tr_sub1:
10173:	  800C	E5 81		        mov     A,SP
10174:	  800E	B4 53 0D	        cjne    A,#53h,tr_sub1_fail ; ...verify the SP value...
10175:	  8011	E5 52		        mov     A,52h               ; ...and verify the pushed ret address
10176:	  8013	B4 26 08	        cjne    A,#LOW(tr_rv1),tr_sub1_fail
10177:	  8016	E5 53		        mov     A,53h
10178:	  8018	B4 1E 03	        cjne    A,#HIGH(tr_rv1),tr_sub1_fail
10179:	  801B	02 1E 28	        ljmp    tr_rv2
10180:	  801E			tr_sub1_fail:
10181:	  801E	02 1E 2E	        ljmp    tr_b0
10182:
10183:
10184:				        end





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 184





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0000				  CODE	    0033	 177
??0001				  CODE	    0036	 185
??0002				  CODE	    003B	 192
??0003				  CODE	    0041	 198
??0004				  CODE	    0046	 206
??0005				  CODE	    0054	 215
??0006				  CODE	    005D	 222
??0007				  CODE	    0069	 232
??0008				  CODE	    007D	 252
??0009				  CODE	    0072	 241
??0010				  CODE	    0077	 247
??0011				  CODE	    0090	 271
??0012				  CODE	    0085	 260
??0013				  CODE	    008A	 266
??0014				  CODE	    0090	 275
??0015				  CODE	    0093	 280
??0016				  CODE	    0096	 297
??0017				  CODE	    00D4	 354
??0018				  CODE	    00C9	 343
??0019				  CODE	    00CE	 349
??0020				  CODE	    00D9	 359
??0021				  CODE	    00E8	 369
??0022				  CODE	    00EE	 375
??0023				  CODE	    00FE	 401
??0024				  CODE	    00FC	 400
??0025				  CODE	    00F6	 395
??0026				  CODE	    010E	 412
??0027				  CODE	    010C	 411
??0028				  CODE	    0106	 406
??0029				  CODE	    011E	 423
??0030				  CODE	    011C	 422
??0031				  CODE	    0116	 417
??0032				  CODE	    012E	 434
??0033				  CODE	    012C	 433
??0034				  CODE	    0126	 428
??0035				  CODE	    013E	 445
??0036				  CODE	    013C	 444
??0037				  CODE	    0136	 439
??0038				  CODE	    014E	 456
??0039				  CODE	    014C	 455
??0040				  CODE	    0146	 450
??0041				  CODE	    015E	 467
??0042				  CODE	    015C	 466
??0043				  CODE	    0156	 461
??0044				  CODE	    016E	 478
??0045				  CODE	    016C	 477
??0046				  CODE	    0166	 472
??0047				  CODE	    0190	 502
??0048				  CODE	    0185	 491
??0049				  CODE	    018A	 497

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 185



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0050				  CODE	    01A7	 525
??0051				  CODE	    019C	 514
??0052				  CODE	    01A1	 520
??0053				  CODE	    01D4	 567
??0054				  CODE	    01C9	 556
??0055				  CODE	    01CE	 562
??0056				  CODE	    01E3	 592
??0057				  CODE	    01E1	 591
??0058				  CODE	    01DB	 586
??0059				  CODE	    01F5	 604
??0060				  CODE	    01F3	 603
??0061				  CODE	    01ED	 598
??0062				  CODE	    0217	 629
??0063				  CODE	    020C	 618
??0064				  CODE	    0211	 624
??0065				  CODE	    022B	 640
??0066				  CODE	    0236	 648
??0067				  CODE	    0249	 668
??0068				  CODE	    023E	 657
??0069				  CODE	    0243	 663
??0070				  CODE	    0249	 672
??0071				  CODE	    024C	 677
??0072				  CODE	    024F	 706
??0073				  CODE	    025D	 716
??0074				  CODE	    0268	 724
??0075				  CODE	    027C	 744
??0076				  CODE	    0271	 733
??0077				  CODE	    0276	 739
??0078				  CODE	    0292	 764
??0079				  CODE	    0287	 753
??0080				  CODE	    028C	 759
??0081				  CODE	    029C	 772
??0082				  CODE	    02A6	 780
??0083				  CODE	    02B9	 800
??0084				  CODE	    02AE	 789
??0085				  CODE	    02B3	 795
??0086				  CODE	    02D6	 824
??0087				  CODE	    02CB	 813
??0088				  CODE	    02D0	 819
??0089				  CODE	    0303	 859
??0090				  CODE	    02F8	 848
??0091				  CODE	    02FD	 854
??0092				  CODE	    0326	 887
??0093				  CODE	    031B	 876
??0094				  CODE	    0320	 882
??0095				  CODE	    0340	 910
??0096				  CODE	    0335	 899
??0097				  CODE	    033A	 905
??0098				  CODE	    035E	 936
??0099				  CODE	    0353	 925
??0100				  CODE	    0358	 931
??0101				  CODE	    036C	 944
??0102				  CODE	    0377	 952
??0103				  CODE	    038B	 972
??0104				  CODE	    0380	 961
??0105				  CODE	    0385	 967

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 186



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0106				  CODE	    03A8	 995
??0107				  CODE	    039D	 984
??0108				  CODE	    03A2	 990
??0109				  CODE	    03D5	1030
??0110				  CODE	    03CA	1019
??0111				  CODE	    03CF	1025
??0112				  CODE	    03F8	1058
??0113				  CODE	    03ED	1047
??0114				  CODE	    03F2	1053
??0115				  CODE	    0412	1081
??0116				  CODE	    0407	1070
??0117				  CODE	    040C	1076
??0118				  CODE	    0430	1107
??0119				  CODE	    0425	1096
??0120				  CODE	    042A	1102
??0121				  CODE	    0430	1113
??0122				  CODE	    0433	1118
??0123				  CODE	    0436	1136
??0124				  CODE	    044E	1160
??0125				  CODE	    0443	1149
??0126				  CODE	    0448	1155
??0127				  CODE	    0475	1195
??0128				  CODE	    046A	1184
??0129				  CODE	    046F	1190
??0130				  CODE	    049B	1229
??0131				  CODE	    0490	1218
??0132				  CODE	    0495	1224
??0133				  CODE	    04D3	1275
??0134				  CODE	    04C8	1264
??0135				  CODE	    04CD	1270
??0136				  CODE	    04D3	1279
??0137				  CODE	    04D6	1284
??0138				  CODE	    04D9	1302
??0139				  CODE	    04F6	1341
??0140				  CODE	    04EB	1330
??0141				  CODE	    04F0	1336
??0142				  CODE	    057B	1431
??0143				  CODE	    0570	1420
??0144				  CODE	    0575	1426
??0145				  CODE	    05A8	1468
??0146				  CODE	    059D	1457
??0147				  CODE	    05A2	1463
??0148				  CODE	    05BB	1487
??0149				  CODE	    05B0	1476
??0150				  CODE	    05B5	1482
??0151				  CODE	    05DD	1513
??0152				  CODE	    05D2	1502
??0153				  CODE	    05D7	1508
??0154				  CODE	    05F7	1548
??0155				  CODE	    05EC	1537
??0156				  CODE	    05F1	1543
??0157				  CODE	    067C	1638
??0158				  CODE	    0671	1627
??0159				  CODE	    0676	1633
??0160				  CODE	    06A9	1675
??0161				  CODE	    069E	1664

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 187



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0162				  CODE	    06A3	1670
??0163				  CODE	    06BC	1694
??0164				  CODE	    06B1	1683
??0165				  CODE	    06B6	1689
??0166				  CODE	    06BC	1698
??0167				  CODE	    06BF	1703
??0168				  CODE	    06C2	1722
??0169				  CODE	    0718	1788
??0170				  CODE	    070D	1777
??0171				  CODE	    0712	1783
??0172				  CODE	    0735	1814
??0173				  CODE	    072A	1803
??0174				  CODE	    072F	1809
??0175				  CODE	    074B	1834
??0176				  CODE	    0740	1823
??0177				  CODE	    0745	1829
??0178				  CODE	    0796	1888
??0179				  CODE	    078B	1877
??0180				  CODE	    0790	1883
??0181				  CODE	    07B5	1914
??0182				  CODE	    07AA	1903
??0183				  CODE	    07AF	1909
??0184				  CODE	    07F0	1968
??0185				  CODE	    07E5	1957
??0186				  CODE	    07EA	1963
??0187				  CODE	    080B	1994
??0188				  CODE	    0800	1983
??0189				  CODE	    0805	1989
??0190				  CODE	    0824	2016
??0191				  CODE	    0819	2005
??0192				  CODE	    081E	2011
??0193				  CODE	    0843	2042
??0194				  CODE	    0838	2031
??0195				  CODE	    083D	2037
??0196				  CODE	    0843	2046
??0197				  CODE	    0846	2051
??0198				  CODE	    0849	2066
??0199				  CODE	    0868	2096
??0200				  CODE	    085D	2085
??0201				  CODE	    0862	2091
??0202				  CODE	    089A	2129
??0203				  CODE	    088F	2118
??0204				  CODE	    0894	2124
??0205				  CODE	    08B4	2152
??0206				  CODE	    08A9	2141
??0207				  CODE	    08AE	2147
??0208				  CODE	    08CF	2176
??0209				  CODE	    08C4	2165
??0210				  CODE	    08C9	2171
??0211				  CODE	    08E6	2199
??0212				  CODE	    08DB	2188
??0213				  CODE	    08E0	2194
??0214				  CODE	    08E6	2204
??0215				  CODE	    08E9	2209
??0216				  CODE	    08EC	2389
??0217				  CODE	    0973	2617

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 188



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0218				  CODE	    0922	2485
??0219				  CODE	    093D	2529
??0220				  CODE	    0958	2573
??0221				  CODE	    0987	2651
??0222				  CODE	    099E	2683
??0223				  CODE	    09B5	2716
??0224				  CODE	    0928	2491
??0225				  CODE	    091D	2480
??0226				  CODE	    0922	2486
??0227				  CODE	    0943	2535
??0228				  CODE	    0938	2524
??0229				  CODE	    093D	2530
??0230				  CODE	    095E	2579
??0231				  CODE	    0953	2568
??0232				  CODE	    0958	2574
??0233				  CODE	    0979	2623
??0234				  CODE	    096E	2612
??0235				  CODE	    0973	2618
??0236				  CODE	    098D	2657
??0237				  CODE	    0982	2646
??0238				  CODE	    0987	2652
??0239				  CODE	    09A4	2689
??0240				  CODE	    0999	2678
??0241				  CODE	    099E	2684
??0242				  CODE	    09BB	2722
??0243				  CODE	    09B0	2711
??0244				  CODE	    09B5	2717
??0245				  CODE	    09BB	2728
??0246				  CODE	    09BE	2733
??0247				  CODE	    09C1	2744
??0248				  CODE	    0A48	2972
??0249				  CODE	    09F7	2840
??0250				  CODE	    0A12	2884
??0251				  CODE	    0A2D	2928
??0252				  CODE	    0A5C	3006
??0253				  CODE	    0A73	3038
??0254				  CODE	    0A8A	3071
??0255				  CODE	    09FD	2846
??0256				  CODE	    09F2	2835
??0257				  CODE	    09F7	2841
??0258				  CODE	    0A18	2890
??0259				  CODE	    0A0D	2879
??0260				  CODE	    0A12	2885
??0261				  CODE	    0A33	2934
??0262				  CODE	    0A28	2923
??0263				  CODE	    0A2D	2929
??0264				  CODE	    0A4E	2978
??0265				  CODE	    0A43	2967
??0266				  CODE	    0A48	2973
??0267				  CODE	    0A62	3012
??0268				  CODE	    0A57	3001
??0269				  CODE	    0A5C	3007
??0270				  CODE	    0A79	3044
??0271				  CODE	    0A6E	3033
??0272				  CODE	    0A73	3039
??0273				  CODE	    0A90	3077

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 189



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0274				  CODE	    0A85	3066
??0275				  CODE	    0A8A	3072
??0276				  CODE	    0A90	3083
??0277				  CODE	    0A93	3088
??0278				  CODE	    0A96	3099
??0279				  CODE	    0B1D	3327
??0280				  CODE	    0ACC	3195
??0281				  CODE	    0AE7	3239
??0282				  CODE	    0B02	3283
??0283				  CODE	    0B31	3361
??0284				  CODE	    0B48	3393
??0285				  CODE	    0B5F	3426
??0286				  CODE	    0AD2	3201
??0287				  CODE	    0AC7	3190
??0288				  CODE	    0ACC	3196
??0289				  CODE	    0AED	3245
??0290				  CODE	    0AE2	3234
??0291				  CODE	    0AE7	3240
??0292				  CODE	    0B08	3289
??0293				  CODE	    0AFD	3278
??0294				  CODE	    0B02	3284
??0295				  CODE	    0B23	3333
??0296				  CODE	    0B18	3322
??0297				  CODE	    0B1D	3328
??0298				  CODE	    0B37	3367
??0299				  CODE	    0B2C	3356
??0300				  CODE	    0B31	3362
??0301				  CODE	    0B4E	3399
??0302				  CODE	    0B43	3388
??0303				  CODE	    0B48	3394
??0304				  CODE	    0B65	3432
??0305				  CODE	    0B5A	3421
??0306				  CODE	    0B5F	3427
??0307				  CODE	    0B65	3438
??0308				  CODE	    0B68	3443
??0309				  CODE	    0B6B	3453
??0310				  CODE	    0B73	3474
??0311				  CODE	    0B87	3492
??0312				  CODE	    0B7C	3481
??0313				  CODE	    0B81	3487
??0314				  CODE	    0B8B	3498
??0315				  CODE	    0B97	3506
??0316				  CODE	    0BA3	3514
??0317				  CODE	    0BAF	3522
??0318				  CODE	    0BBB	3530
??0319				  CODE	    0BC7	3538
??0320				  CODE	    0BD3	3546
??0321				  CODE	    0BDF	3554
??0322				  CODE	    0BF2	3572
??0323				  CODE	    0BE7	3561
??0324				  CODE	    0BEC	3567
??0325				  CODE	    0BF2	3576
??0326				  CODE	    0BF5	3581
??0327				  CODE	    0BF8	3593
??0328				  CODE	    0BFB	3599
??0329				  CODE	    0D1C	3958

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 190



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0330				  CODE	    0C77	3754
??0331				  CODE	    0CAE	3822
??0332				  CODE	    0CE5	3890
??0333				  CODE	    0D3E	4004
??0336				  NUMBER    0000	3615
??0337				  NUMBER    0000	3643
??0338				  NUMBER    0000	3671
??0339				  NUMBER    0000	3699
??0340				  NUMBER    0000	3725
??0341				  CODE	    0C7D	3760
??0342				  CODE	    0C72	3749
??0343				  CODE	    0C77	3755
??0344				  NUMBER    0000	3767
??0345				  NUMBER    0000	3793
??0346				  CODE	    0CB4	3828
??0347				  CODE	    0CA9	3817
??0348				  CODE	    0CAE	3823
??0349				  NUMBER    0000	3835
??0350				  NUMBER    0000	3861
??0351				  CODE	    0CEB	3896
??0352				  CODE	    0CE0	3885
??0353				  CODE	    0CE5	3891
??0354				  NUMBER    0000	3903
??0355				  NUMBER    0000	3929
??0356				  CODE	    0D22	3964
??0357				  CODE	    0D17	3953
??0358				  CODE	    0D1C	3959
??0359				  NUMBER    0000	3975
??0360				  CODE	    0D44	4010
??0361				  CODE	    0D39	3999
??0362				  CODE	    0D3E	4005
??0363				  CODE	    0D44	4026
??0364				  CODE	    0E65	4385
??0365				  CODE	    0DC0	4181
??0366				  CODE	    0DF7	4249
??0367				  CODE	    0E2E	4317
??0368				  CODE	    0E87	4431
??0371				  NUMBER    0000	4042
??0372				  NUMBER    0000	4070
??0373				  NUMBER    0000	4098
??0374				  NUMBER    0000	4126
??0375				  NUMBER    0000	4152
??0376				  CODE	    0DC6	4187
??0377				  CODE	    0DBB	4176
??0378				  CODE	    0DC0	4182
??0379				  NUMBER    0000	4194
??0380				  NUMBER    0000	4220
??0381				  CODE	    0DFD	4255
??0382				  CODE	    0DF2	4244
??0383				  CODE	    0DF7	4250
??0384				  NUMBER    0000	4262
??0385				  NUMBER    0000	4288
??0386				  CODE	    0E34	4323
??0387				  CODE	    0E29	4312
??0388				  CODE	    0E2E	4318
??0389				  NUMBER    0000	4330

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 191



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0390				  NUMBER    0000	4356
??0391				  CODE	    0E6B	4391
??0392				  CODE	    0E60	4380
??0393				  CODE	    0E65	4386
??0394				  NUMBER    0000	4402
??0395				  CODE	    0E8D	4437
??0396				  CODE	    0E82	4426
??0397				  CODE	    0E87	4432
??0398				  CODE	    0E8D	4453
??0399				  CODE	    0FAE	4812
??0400				  CODE	    0F09	4608
??0401				  CODE	    0F40	4676
??0402				  CODE	    0F77	4744
??0403				  CODE	    0FD0	4858
??0406				  NUMBER    0000	4469
??0407				  NUMBER    0000	4497
??0408				  NUMBER    0000	4525
??0409				  NUMBER    0000	4553
??0410				  NUMBER    0000	4579
??0411				  CODE	    0F0F	4614
??0412				  CODE	    0F04	4603
??0413				  CODE	    0F09	4609
??0414				  NUMBER    0000	4621
??0415				  NUMBER    0000	4647
??0416				  CODE	    0F46	4682
??0417				  CODE	    0F3B	4671
??0418				  CODE	    0F40	4677
??0419				  NUMBER    0000	4689
??0420				  NUMBER    0000	4715
??0421				  CODE	    0F7D	4750
??0422				  CODE	    0F72	4739
??0423				  CODE	    0F77	4745
??0424				  NUMBER    0000	4757
??0425				  NUMBER    0000	4783
??0426				  CODE	    0FB4	4818
??0427				  CODE	    0FA9	4807
??0428				  CODE	    0FAE	4813
??0429				  NUMBER    0000	4829
??0430				  CODE	    0FD6	4864
??0431				  CODE	    0FCB	4853
??0432				  CODE	    0FD0	4859
??0433				  CODE	    0FD6	4880
??0434				  CODE	    10F7	5239
??0435				  CODE	    1052	5035
??0436				  CODE	    1089	5103
??0437				  CODE	    10C0	5171
??0438				  CODE	    1119	5285
??0441				  NUMBER    0000	4896
??0442				  NUMBER    0000	4924
??0443				  NUMBER    0000	4952
??0444				  NUMBER    0000	4980
??0445				  NUMBER    0000	5006
??0446				  CODE	    1058	5041
??0447				  CODE	    104D	5030
??0448				  CODE	    1052	5036
??0449				  NUMBER    0000	5048

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 192



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0450				  NUMBER    0000	5074
??0451				  CODE	    108F	5109
??0452				  CODE	    1084	5098
??0453				  CODE	    1089	5104
??0454				  NUMBER    0000	5116
??0455				  NUMBER    0000	5142
??0456				  CODE	    10C6	5177
??0457				  CODE	    10BB	5166
??0458				  CODE	    10C0	5172
??0459				  NUMBER    0000	5184
??0460				  NUMBER    0000	5210
??0461				  CODE	    10FD	5245
??0462				  CODE	    10F2	5234
??0463				  CODE	    10F7	5240
??0464				  NUMBER    0000	5256
??0465				  CODE	    111F	5291
??0466				  CODE	    1114	5280
??0467				  CODE	    1119	5286
??0468				  CODE	    111F	5309
??0469				  CODE	    1122	5314
??0470				  CODE	    1125	5326
??0471				  CODE	    1128	5332
??0472				  CODE	    1249	5691
??0473				  CODE	    11A4	5487
??0474				  CODE	    11DB	5555
??0475				  CODE	    1212	5623
??0476				  CODE	    126B	5737
??0479				  NUMBER    0000	5348
??0480				  NUMBER    0000	5376
??0481				  NUMBER    0000	5404
??0482				  NUMBER    0000	5432
??0483				  NUMBER    0000	5458
??0484				  CODE	    11AA	5493
??0485				  CODE	    119F	5482
??0486				  CODE	    11A4	5488
??0487				  NUMBER    0000	5500
??0488				  NUMBER    0000	5526
??0489				  CODE	    11E1	5561
??0490				  CODE	    11D6	5550
??0491				  CODE	    11DB	5556
??0492				  NUMBER    0000	5568
??0493				  NUMBER    0000	5594
??0494				  CODE	    1218	5629
??0495				  CODE	    120D	5618
??0496				  CODE	    1212	5624
??0497				  NUMBER    0000	5636
??0498				  NUMBER    0000	5662
??0499				  CODE	    124F	5697
??0500				  CODE	    1244	5686
??0501				  CODE	    1249	5692
??0502				  NUMBER    0000	5708
??0503				  CODE	    1271	5743
??0504				  CODE	    1266	5732
??0505				  CODE	    126B	5738
??0506				  CODE	    1271	5759
??0507				  CODE	    1392	6118

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 193



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0508				  CODE	    12ED	5914
??0509				  CODE	    1324	5982
??0510				  CODE	    135B	6050
??0511				  CODE	    13B4	6164
??0514				  NUMBER    0000	5775
??0515				  NUMBER    0000	5803
??0516				  NUMBER    0000	5831
??0517				  NUMBER    0000	5859
??0518				  NUMBER    0000	5885
??0519				  CODE	    12F3	5920
??0520				  CODE	    12E8	5909
??0521				  CODE	    12ED	5915
??0522				  NUMBER    0000	5927
??0523				  NUMBER    0000	5953
??0524				  CODE	    132A	5988
??0525				  CODE	    131F	5977
??0526				  CODE	    1324	5983
??0527				  NUMBER    0000	5995
??0528				  NUMBER    0000	6021
??0529				  CODE	    1361	6056
??0530				  CODE	    1356	6045
??0531				  CODE	    135B	6051
??0532				  NUMBER    0000	6063
??0533				  NUMBER    0000	6089
??0534				  CODE	    1398	6124
??0535				  CODE	    138D	6113
??0536				  CODE	    1392	6119
??0537				  NUMBER    0000	6135
??0538				  CODE	    13BA	6170
??0539				  CODE	    13AF	6159
??0540				  CODE	    13B4	6165
??0541				  CODE	    13BA	6186
??0542				  CODE	    14DB	6545
??0543				  CODE	    1436	6341
??0544				  CODE	    146D	6409
??0545				  CODE	    14A4	6477
??0546				  CODE	    14FD	6591
??0549				  NUMBER    0000	6202
??0550				  NUMBER    0000	6230
??0551				  NUMBER    0000	6258
??0552				  NUMBER    0000	6286
??0553				  NUMBER    0000	6312
??0554				  CODE	    143C	6347
??0555				  CODE	    1431	6336
??0556				  CODE	    1436	6342
??0557				  NUMBER    0000	6354
??0558				  NUMBER    0000	6380
??0559				  CODE	    1473	6415
??0560				  CODE	    1468	6404
??0561				  CODE	    146D	6410
??0562				  NUMBER    0000	6422
??0563				  NUMBER    0000	6448
??0564				  CODE	    14AA	6483
??0565				  CODE	    149F	6472
??0566				  CODE	    14A4	6478
??0567				  NUMBER    0000	6490

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 194



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0568				  NUMBER    0000	6516
??0569				  CODE	    14E1	6551
??0570				  CODE	    14D6	6540
??0571				  CODE	    14DB	6546
??0572				  NUMBER    0000	6562
??0573				  CODE	    1503	6597
??0574				  CODE	    14F8	6586
??0575				  CODE	    14FD	6592
??0576				  CODE	    1503	6613
??0577				  CODE	    1624	6972
??0578				  CODE	    157F	6768
??0579				  CODE	    15B6	6836
??0580				  CODE	    15ED	6904
??0581				  CODE	    1646	7018
??0584				  NUMBER    0001	6629
??0585				  NUMBER    0001	6657
??0586				  NUMBER    0001	6685
??0587				  NUMBER    0001	6713
??0588				  NUMBER    0001	6739
??0589				  CODE	    1585	6774
??0590				  CODE	    157A	6763
??0591				  CODE	    157F	6769
??0592				  NUMBER    0001	6781
??0593				  NUMBER    0001	6807
??0594				  CODE	    15BC	6842
??0595				  CODE	    15B1	6831
??0596				  CODE	    15B6	6837
??0597				  NUMBER    0001	6849
??0598				  NUMBER    0001	6875
??0599				  CODE	    15F3	6910
??0600				  CODE	    15E8	6899
??0601				  CODE	    15ED	6905
??0602				  NUMBER    0001	6917
??0603				  NUMBER    0001	6943
??0604				  CODE	    162A	6978
??0605				  CODE	    161F	6967
??0606				  CODE	    1624	6973
??0607				  NUMBER    0001	6989
??0608				  CODE	    164C	7024
??0609				  CODE	    1641	7013
??0610				  CODE	    1646	7019
??0611				  CODE	    164C	7040
??0612				  CODE	    176D	7399
??0613				  CODE	    16C8	7195
??0614				  CODE	    16FF	7263
??0615				  CODE	    1736	7331
??0616				  CODE	    178F	7445
??0619				  NUMBER    0001	7056
??0620				  NUMBER    0001	7084
??0621				  NUMBER    0001	7112
??0622				  NUMBER    0001	7140
??0623				  NUMBER    0001	7166
??0624				  CODE	    16CE	7201
??0625				  CODE	    16C3	7190
??0626				  CODE	    16C8	7196
??0627				  NUMBER    0001	7208

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 195



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0628				  NUMBER    0001	7234
??0629				  CODE	    1705	7269
??0630				  CODE	    16FA	7258
??0631				  CODE	    16FF	7264
??0632				  NUMBER    0001	7276
??0633				  NUMBER    0001	7302
??0634				  CODE	    173C	7337
??0635				  CODE	    1731	7326
??0636				  CODE	    1736	7332
??0637				  NUMBER    0001	7344
??0638				  NUMBER    0001	7370
??0639				  CODE	    1773	7405
??0640				  CODE	    1768	7394
??0641				  CODE	    176D	7400
??0642				  NUMBER    0001	7416
??0643				  CODE	    1795	7451
??0644				  CODE	    178A	7440
??0645				  CODE	    178F	7446
??0646				  CODE	    1795	7470
??0647				  CODE	    1798	7475
??0648				  CODE	    179B	7487
??0649				  CODE	    179E	7493
??0650				  CODE	    18BF	7852
??0651				  CODE	    181A	7648
??0652				  CODE	    1851	7716
??0653				  CODE	    1888	7784
??0654				  CODE	    18E1	7898
??0657				  NUMBER    0000	7509
??0658				  NUMBER    0000	7537
??0659				  NUMBER    0000	7565
??0660				  NUMBER    0000	7593
??0661				  NUMBER    0000	7619
??0662				  CODE	    1820	7654
??0663				  CODE	    1815	7643
??0664				  CODE	    181A	7649
??0665				  NUMBER    0000	7661
??0666				  NUMBER    0000	7687
??0667				  CODE	    1857	7722
??0668				  CODE	    184C	7711
??0669				  CODE	    1851	7717
??0670				  NUMBER    0000	7729
??0671				  NUMBER    0000	7755
??0672				  CODE	    188E	7790
??0673				  CODE	    1883	7779
??0674				  CODE	    1888	7785
??0675				  NUMBER    0000	7797
??0676				  NUMBER    0000	7823
??0677				  CODE	    18C5	7858
??0678				  CODE	    18BA	7847
??0679				  CODE	    18BF	7853
??0680				  NUMBER    0000	7869
??0681				  CODE	    18E7	7904
??0682				  CODE	    18DC	7893
??0683				  CODE	    18E1	7899
??0684				  CODE	    18E7	7920
??0685				  CODE	    1A08	8279

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 196



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0686				  CODE	    1963	8075
??0687				  CODE	    199A	8143
??0688				  CODE	    19D1	8211
??0689				  CODE	    1A2A	8325
??0692				  NUMBER    0001	7936
??0693				  NUMBER    0001	7964
??0694				  NUMBER    0001	7992
??0695				  NUMBER    0001	8020
??0696				  NUMBER    0001	8046
??0697				  CODE	    1969	8081
??0698				  CODE	    195E	8070
??0699				  CODE	    1963	8076
??0700				  NUMBER    0001	8088
??0701				  NUMBER    0001	8114
??0702				  CODE	    19A0	8149
??0703				  CODE	    1995	8138
??0704				  CODE	    199A	8144
??0705				  NUMBER    0001	8156
??0706				  NUMBER    0001	8182
??0707				  CODE	    19D7	8217
??0708				  CODE	    19CC	8206
??0709				  CODE	    19D1	8212
??0710				  NUMBER    0001	8224
??0711				  NUMBER    0001	8250
??0712				  CODE	    1A0E	8285
??0713				  CODE	    1A03	8274
??0714				  CODE	    1A08	8280
??0715				  NUMBER    0001	8296
??0716				  CODE	    1A30	8331
??0717				  CODE	    1A25	8320
??0718				  CODE	    1A2A	8326
??0719				  CODE	    1A30	8347
??0720				  CODE	    1B51	8706
??0721				  CODE	    1AAC	8502
??0722				  CODE	    1AE3	8570
??0723				  CODE	    1B1A	8638
??0724				  CODE	    1B73	8752
??0727				  NUMBER    0000	8363
??0728				  NUMBER    0000	8391
??0729				  NUMBER    0000	8419
??0730				  NUMBER    0000	8447
??0731				  NUMBER    0000	8473
??0732				  CODE	    1AB2	8508
??0733				  CODE	    1AA7	8497
??0734				  CODE	    1AAC	8503
??0735				  NUMBER    0000	8515
??0736				  NUMBER    0000	8541
??0737				  CODE	    1AE9	8576
??0738				  CODE	    1ADE	8565
??0739				  CODE	    1AE3	8571
??0740				  NUMBER    0000	8583
??0741				  NUMBER    0000	8609
??0742				  CODE	    1B20	8644
??0743				  CODE	    1B15	8633
??0744				  CODE	    1B1A	8639
??0745				  NUMBER    0000	8651

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 197



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0746				  NUMBER    0000	8677
??0747				  CODE	    1B57	8712
??0748				  CODE	    1B4C	8701
??0749				  CODE	    1B51	8707
??0750				  NUMBER    0000	8723
??0751				  CODE	    1B79	8758
??0752				  CODE	    1B6E	8747
??0753				  CODE	    1B73	8753
??0754				  CODE	    1B79	8774
??0755				  CODE	    1C9A	9133
??0756				  CODE	    1BF5	8929
??0757				  CODE	    1C2C	8997
??0758				  CODE	    1C63	9065
??0759				  CODE	    1CBC	9179
??0762				  NUMBER    0001	8790
??0763				  NUMBER    0001	8818
??0764				  NUMBER    0001	8846
??0765				  NUMBER    0001	8874
??0766				  NUMBER    0001	8900
??0767				  CODE	    1BFB	8935
??0768				  CODE	    1BF0	8924
??0769				  CODE	    1BF5	8930
??0770				  NUMBER    0001	8942
??0771				  NUMBER    0001	8968
??0772				  CODE	    1C32	9003
??0773				  CODE	    1C27	8992
??0774				  CODE	    1C2C	8998
??0775				  NUMBER    0001	9010
??0776				  NUMBER    0001	9036
??0777				  CODE	    1C69	9071
??0778				  CODE	    1C5E	9060
??0779				  CODE	    1C63	9066
??0780				  NUMBER    0001	9078
??0781				  NUMBER    0001	9104
??0782				  CODE	    1CA0	9139
??0783				  CODE	    1C95	9128
??0784				  CODE	    1C9A	9134
??0785				  NUMBER    0001	9150
??0786				  CODE	    1CC2	9185
??0787				  CODE	    1CB7	9174
??0788				  CODE	    1CBC	9180
??0789				  CODE	    1CC2	9205
??0790				  CODE	    1CC5	9210
??0791				  CODE	    1CC8	9224
??0792				  CODE	    1CEB	9253
??0793				  CODE	    1CE0	9242
??0794				  CODE	    1CE5	9248
??0795				  CODE	    1D07	9278
??0796				  CODE	    1CFC	9267
??0797				  CODE	    1D01	9273
??0798				  CODE	    1D27	9304
??0799				  CODE	    1D1C	9293
??0800				  CODE	    1D21	9299
??0801				  CODE	    1D42	9328
??0802				  CODE	    1D37	9317
??0803				  CODE	    1D3C	9323

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 198



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0804				  CODE	    1D42	9332
??0805				  CODE	    1D45	9337
??0806				  CODE	    1D48	9350
??0807				  CODE	    1D69	9378
??0808				  CODE	    1D5E	9367
??0809				  CODE	    1D63	9373
??0810				  CODE	    1D89	9414
??0811				  CODE	    1D7E	9403
??0812				  CODE	    1D83	9409
??0813				  CODE	    1DA5	9439
??0814				  CODE	    1D9A	9428
??0815				  CODE	    1D9F	9434
??0816				  CODE	    1DA5	9443
??0817				  CODE	    1DA8	9448
??0818				  CODE	    1DAB	9459
??0819				  CODE	    1DC7	9486
??0820				  CODE	    1DBC	9475
??0821				  CODE	    1DC1	9481
??0822				  CODE	    1DED	9520
??0823				  CODE	    1DE2	9509
??0824				  CODE	    1DE7	9515
??0825				  CODE	    1DED	9524
??0826				  CODE	    1DF0	9529
??0827				  CODE	    1DF3	9550
??0828				  CODE	    1E23	9586
??0829				  CODE	    1E18	9575
??0830				  CODE	    1E1D	9581
??0831				  CODE	    1E34	9605
??0832				  CODE	    1E29	9594
??0833				  CODE	    1E2E	9600
??0834				  CODE	    1E52	9635
??0835				  CODE	    1E47	9624
??0836				  CODE	    1E4C	9630
??0837				  CODE	    1E67	9657
??0838				  CODE	    1E5C	9646
??0839				  CODE	    1E61	9652
??0840				  CODE	    1E67	9661
??0841				  CODE	    1E6A	9666
??0842				  CODE	    1E6D	9681
??0843				  CODE	    1E9E	9719
??0844				  CODE	    1E93	9708
??0845				  CODE	    1E98	9714
??0846				  CODE	    1ECC	9754
??0847				  CODE	    1EC1	9743
??0848				  CODE	    1EC6	9749
??0849				  CODE	    1ECC	9759
??0850				  CODE	    1ECF	9764
??0851				  CODE	    1ED2	9776
??0852				  CODE	    1F1C	9848
??0853				  CODE	    1F11	9837
??0854				  CODE	    1F16	9843
??0855				  CODE	    1F8A	9928
??0856				  CODE	    1F7F	9917
??0857				  CODE	    1F84	9923
??0858				  CODE	    1FB0	9945
??0859				  CODE	    1FB3	9950

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 199



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0860				  CODE	    1FB6	9964
??0861				  CODE	    2005       10027
??0862				  CODE	    1FFA       10016
??0863				  CODE	    1FFF       10022
??0864				  CODE	    2005       10031
??0865				  CODE	    2008       10036
??0866				  CODE	    200F       10061
??0867				  CODE	    2012       10066
??0868				  CODE	    2015       10071
??0869				  CODE	    2018       10076
??0870				  CODE	    201B       10081
??0871				  CODE	    201E       10086
??0872				  CODE	    2021       10092
??0873				  CODE	    2024       10097
??0874				  CODE	    2029       10106
??0875				  CODE	    202C       10111
??0876				  CODE	    202F       10116
??0877				  CODE	    2032       10121
??0878				  CODE	    2035       10126
??0879				  CODE	    2038       10131
??0880				  CODE	    203B       10137
??0881				  CODE	    203E       10142
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6	  87
ACC				  DATA	      E0	  58
ARG0				  NUMBER    00C3	2396
ARG1				  NUMBER    00C5	2397
B				  DATA	      F0	  59
CY				  BIT	      D7	  88
DIR0				  NUMBER    0060	 101
DIR1				  NUMBER    0061	 102
DPH				  DATA	      83	  41
DPL				  DATA	      82	  40
EA				  BIT	      AF	  73
EOT				  MACRO	        	 131
ES				  BIT	      AC	  71
ET0				  BIT	      A9	  68
EX0				  BIT	      A8	  67
EXTI0				  CODE	    0003	  92
EXTI1				  CODE	    0013	  94
EXTINT0				  DATA	      C0	  56
F0				  BIT	      D5	  86
FAIL				  NUMBER    006E	 103
IE				  DATA	      A8	  53
NLOOPS				  NUMBER    0003	3471
OV				  BIT	      D2	  83
P				  BIT	      D0	  82
P0				  DATA	      80	  38
P1				  DATA	      90	  49
P2				  DATA	      A0	  52
P3				  DATA	      B0	  54
PSW				  DATA	      D0	  57
PUTC				  MACRO	        	 112
PUT_CRLF			  MACRO	        	 121
QUIT				  CODE	    2043       10149

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 200



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
RES				  NUMBER    0001	2398
RESET				  CODE	    0000	  91
RS0				  BIT	      D3	  84
RS1				  BIT	      D4	  85
RXIRQ				  BIT	      99	  77
RXRDY				  BIT	      9D	  79
SAVED_PSW			  NUMBER    0070	 104
SAVE_PSW			  MACRO	        	2228
SBUF				  DATA	      99	  51
SCON				  DATA	      98	  50
SET_CY				  MACRO	        	2242
SINT				  CODE	    0023	  96
SP				  DATA	      81	  39
STACK0				  NUMBER    009F	 105
START				  CODE	    0030	 153
S_SUB0				  CODE	    1E84	9697
S_SUB1				  CODE	    1E8E	9703
S_SUB2				  CODE	    1EB2	9732
S_SUB3				  CODE	    1EBC	9738
T0ARL				  BIT	      8C	  63
T0CEN				  BIT	      8D	  64
T0IRQ				  BIT	      88	  62
TA_B0				  CODE	    0041	 197
TA_C0				  CODE	    0044	 204
TA_C1				  CODE	    004B	 211
TA_C2				  CODE	    005A	 220
TA_C3				  CODE	    0046	 205
TA_C4				  CODE	    0063	 227
TA_D1				  CODE	    006F	 237
TA_D2				  CODE	    0077	 246
TA_E1				  CODE	    008A	 265
TB_A1				  CODE	    00CE	 348
TB_B0				  CODE	    00DF	 364
TB_B1				  CODE	    00E8	 368
TB_B2				  CODE	    00EE	 374
TB_C0				  CODE	    0171	 480
TB_C1				  CODE	    0179	 483
TB_C2				  CODE	    018A	 496
TB_C3				  CODE	    017E	 485
TB_C4				  CODE	    0183	 487
TB_D0				  CODE	    01A1	 519
TB_E0				  CODE	    01CE	 561
TB_F0				  CODE	    01F8	 606
TB_F1				  CODE	    0200	 610
TB_F2				  CODE	    0211	 623
TB_F3				  CODE	    0205	 612
TB_F4				  CODE	    020A	 614
TB_G0				  CODE	    0243	 662
TB_G1				  CODE	    0231	 645
TB_G2				  CODE	    023C	 653
TB_MA				  MACRO	        	 302
TB_MC				  MACRO	        	 380
TB_ME				  MACRO	        	 527
TB_MF				  MACRO	        	 569
TCH				  DATA	      8F	  48
TCL				  DATA	      8E	  47

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 201



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TC_A0				  CODE	    0265	 722
TC_A1				  CODE	    0257	 713
TC_A2				  CODE	    026E	 729
TC_A3				  CODE	    0276	 738
TC_B1				  CODE	    028C	 758
TC_C0				  CODE	    02A4	 778
TC_C1				  CODE	    0296	 768
TC_C2				  CODE	    02AC	 785
TC_C3				  CODE	    02B3	 794
TC_D0				  CODE	    02D0	 818
TC_D1				  CODE	    02C1	 806
TC_E0				  CODE	    02FD	 853
TC_F0				  CODE	    0320	 881
TC_G0				  CODE	    033A	 904
TC_H0				  CODE	    0358	 930
TC_H1				  CODE	    034E	 919
TC_H2				  CODE	    0345	 915
TC_H3				  CODE	    0353	 921
TC_I0				  CODE	    0374	 950
TC_I1				  CODE	    0366	 941
TC_I2				  CODE	    037D	 957
TC_I3				  CODE	    0385	 966
TC_J0				  CODE	    03A2	 989
TC_J1				  CODE	    0393	 977
TC_K0				  CODE	    03CF	1024
TC_L0				  CODE	    03F2	1052
TC_M0				  CODE	    040C	1075
TC_N0				  CODE	    042A	1101
TC_N1				  CODE	    0420	1090
TC_N2				  CODE	    0417	1086
TC_N3				  CODE	    0425	1092
TD_A0				  CODE	    0448	1154
TD_B0				  CODE	    046F	1189
TD_C0				  CODE	    0495	1223
TD_D0				  CODE	    04CD	1269
TEST_FAILED			  CODE	    2029       10103
TE_A0				  CODE	    04F0	1335
TE_B0				  CODE	    0575	1425
TE_C0				  CODE	    05A2	1462
TE_D0				  CODE	    05B5	1481
TE_E0				  CODE	    05D7	1507
TE_F0				  CODE	    05F1	1542
TE_G0				  CODE	    0676	1632
TE_H0				  CODE	    06A3	1669
TE_I0				  CODE	    06B6	1688
TE_MA				  MACRO	        	1307
TE_MF				  MACRO	        	1515
TF_A0				  CODE	    0712	1782
TF_B0				  CODE	    072F	1808
TF_C0				  CODE	    0745	1828
TF_D0				  CODE	    0790	1882
TF_E0				  CODE	    07AF	1908
TF_F0				  CODE	    07EA	1962
TF_G0				  CODE	    0805	1988
TF_H0				  CODE	    081E	2010
TF_I0				  CODE	    083D	2036

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 202



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TF_MA				  MACRO	        	1727
TF_MD				  MACRO	        	1836
TF_MF				  MACRO	        	1916
TG_A0				  CODE	    0862	2090
TG_B0				  CODE	    0894	2123
TG_C0				  CODE	    08AE	2146
TG_D0				  CODE	    08C9	2170
TG_E0				  CODE	    08E0	2193
TH				  DATA	      8D	  46
TIMER0				  CODE	    000B	  93
TIMER1				  CODE	    001B	  95
TIMER2				  CODE	    002B	  97
TK_A0				  CODE	    0B81	3486
TK_B0				  CODE	    0BEC	3566
TK_MA				  MACRO	        	3459
TL				  DATA	      8C	  45
TOP_MA				  MACRO	        	2256
TOP_MB				  MACRO	        	2274
TOP_MC				  MACRO	        	2292
TO_A0				  CODE	    1CE5	9247
TO_B0				  CODE	    1D01	9272
TO_C0				  CODE	    1D21	9298
TO_D0				  CODE	    1D3C	9322
TP_A0				  CODE	    1D63	9372
TP_B0				  CODE	    1D83	9408
TP_C0				  CODE	    1D9F	9433
TQ0				  CODE	    1DB9	9471
TQ1				  CODE	    1DB5	9470
TQ_A0				  CODE	    1DC1	9480
TQ_B0				  CODE	    1DE7	9514
TR_A0				  CODE	    1E1D	9580
TR_B0				  CODE	    1E2E	9599
TR_C0				  CODE	    1E4C	9629
TR_D0				  CODE	    1E61	9651
TR_RV0				  CODE	    1E07	9564
TR_RV1				  CODE	    1E26	9590
TR_RV2				  CODE	    1E28	9591
TR_RV3				  CODE	    1E3F	9617
TR_RV4				  CODE	    1E5A	9642
TR_SUB0				  CODE	    1E09	9565
TR_SUB1				  CODE	    800C       10172
TR_SUB1_FAIL			  CODE	    801E       10180
TR_SUB2				  CODE	    8000       10158
TR_SUB3				  CODE	    8006       10167
TSTAT				  DATA	      88	  43
TST_ALU				  MACRO	        	2317
TST_PSW				  MACRO	        	2233
TS_A0				  CODE	    1E98	9713
TS_B0				  CODE	    1EC6	9748
TT_A0				  CODE	    1F16	9842
TT_A_DIVZERO			  CODE	    1F0B	9827
TT_A_LOOP			  CODE	    1EE6	9798
TT_A_NEXT			  CODE	    1F0D	9830
TT_A_TAB			  CODE	    1F1E	9851
TT_A_TAB_END			  CODE	    1F4B	9861
TT_B0				  CODE	    1F84	9922

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 203



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TT_B_0				  CODE	    1F6F	9901
TT_B_LOOP			  CODE	    1F52	9875
TT_B_NOOVF			  CODE	    1F69	9896
TT_B_TAB			  CODE	    1F8C	9931
TT_B_TAB_END			  CODE	    1FB0	9941
TU_A0				  CODE	    1FFF       10021
TU_A_DONE			  CODE	    1FF9       10012
TU_A_TEST			  CODE	    1FDB	9988
TXIRQ				  BIT	      98	  76
TXRDY				  BIT	      9C	  78
