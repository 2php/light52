
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	src\tb51_cpu.a51
	Object File:	bin\tb51_cpu.hex
	List File:	lst\tb51_cpu.lst



 Line  I  Addr  Code            Source

    1:				;-------------------------------------------------------------------------------
    2:				; tb51_cpu.a51 -- MCS51 instruction set test bench.
    3:				;-------------------------------------------------------------------------------
    4:				; This program is meant to verify the basic operation of an MCS51 CPU
    5:				; instruction set implementation.
    6:				; It is far too weak to rely on it exclusively but it can help detect gross
    7:				; implementation errors (overclocked CPUs, timing errors in FPGA cores, that
    8:				; kind of thing).
    9:				;
   10:				; The program is not yet ready to run on actual hardware (UART interface).
   11:				;
   12:				; For a full verification of the instruction set, an instruction set exerciser
   13:				; such as 'zexall' for the Z80 would be more suitable. This one is too weak.
   14:				;
   15:				; The program is meant to run in actual hardware or on a simulated environment.
   16:				; In the latter case you can use the co-simulation features of the light52
   17:				; project to pinpoint bugs.
   18:				;
   19:				; FIXME add assembly option to run tests in a (possibly infinite) loop.
   20:				;-------------------------------------------------------------------------------
   21:				; Major limitations:
   22:				;   1.- PSW is not checked for undue changes.
   23:				;   2.- <#imm> instructions are tested with one imm value only.
   24:				;   3.- <rel> jumps tested with small values (not near corner values).
   25:				;   4.- <bit> tested on 1 byte only, on 2 bits only.
   26:				;
   27:				; Note there are too many limitations to list. Use this test bench as a first
   28:				; approximation only. If your CPU fails this test, it must be dead!
   29:				;-------------------------------------------------------------------------------
   30:
   31:				        ; Include the definitions for the light52 derivative
   32:				        $nomod51
   33:				        $include (light52.mcu)
   34: 1			;   Light52 processor definition file (for ASEM-51 assembler)
   35: 1			;   =========================================================
   36: 1
   37: 1	N	 80	P0          DATA        080H
   38: 1	N	 81	SP          DATA        081H
   39: 1	N	 82	DPL         DATA        082H
   40: 1	N	 83	DPH         DATA        083H
   41: 1			;PCON      DATA        087H
   42: 1	N	 88	TSTAT       DATA        088H
   43: 1			;TMOD      DATA        089H

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   44: 1	N	 8C	TL          DATA        08CH
   45: 1	N	 8D	TH          DATA        08DH
   46: 1	N	 8E	TCL         DATA        08EH
   47: 1	N	 8F	TCH         DATA        08FH
   48: 1	N	 90	P1          DATA        090H
   49: 1	N	 98	SCON        DATA        098H
   50: 1	N	 99	SBUF        DATA        099H
   51: 1	N	 A0	P2          DATA        0A0H
   52: 1	N	 A8	IE          DATA        0A8H
   53: 1	N	 B0	P3          DATA        0B0H
   54: 1			;IP        DATA        0B8H
   55: 1	N	 C0	EXTINT0     DATA        0C0H
   56: 1	N	 D0	PSW         DATA        0D0H
   57: 1	N	 E0	ACC         DATA        0E0H
   58: 1	N	 F0	B           DATA        0F0H
   59: 1
   60: 1			; TSTAT flags
   61: 1	N	 88	T0IRQ       BIT         088H
   62: 1	N	 8C	T0ARL       BIT         08CH
   63: 1	N	 8D	T0CEN       BIT         08DH
   64: 1
   65: 1			; IE flags
   66: 1	N	 A8	EX0         BIT         0A8H
   67: 1	N	 A9	ET0         BIT         0A9H
   68: 1			;EX1         BIT        0AAH
   69: 1			;ET1         BIT        0ABH
   70: 1	N	 AC	ES          BIT         0ACH
   71: 1			;ET2         BIT        0ADH
   72: 1	N	 AF	EA          BIT         0AFH
   73: 1
   74: 1			; SCON flags
   75: 1	N	 98	TXIRQ       BIT         098H
   76: 1	N	 99	RXIRQ       BIT         099H
   77: 1	N	 9C	TXRDY       BIT         09CH
   78: 1	N	 9D	RXRDY       BIT         09DH
   79: 1
   80: 1			; PSW flags
   81: 1	N	 D0	P           BIT        0D0H
   82: 1	N	 D2	OV          BIT        0D2H
   83: 1	N	 D3	RS0         BIT        0D3H
   84: 1	N	 D4	RS1         BIT        0D4H
   85: 1	N	 D5	F0          BIT        0D5H
   86: 1	N	 D6	AC          BIT        0D6H
   87: 1	N	 D7	CY          BIT        0D7H
   88: 1
   89: 1			; Interrupt vectors
   90: 1	N      0000	RESET       CODE       000H
   91: 1	N      0003	EXTI0       CODE       003H
   92: 1	N      000B	TIMER0      CODE       00BH
   93: 1	N      0013	EXTI1       CODE       013H
   94: 1	N      001B	TIMER1      CODE       01BH
   95: 1	N      0023	SINT        CODE       023H
   96: 1	N      002B	TIMER2      CODE       02BH
   97:
   98:				        ;-- Parameters common to all tests -------------------------------------
   99:

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

  100:		N      0060	dir0    set     060h                ; Address used in direct addressing tests
  101:		N      0061	dir1    set     061h                ; Address used in direct addressing tests
  102:		N      006E	fail    set     06eh                ; (IDATA) set to 1 upon test failure
  103:		N      0070	saved_psw set   070h                ; (IDATA) temp store for PSW value
  104:		N      009F	stack0  set     09fh                ; (IDATA) stack addr used for push/pop tests
  105:
  106:
  107:				        ;-- Macros common to all tests -----------------------------------------
  108:
  109:				        ; putc: send character to console (UART)
  110:				        ; If you change this macro, make sure it DOES NOT MODIFY PSW!
  111:				putc    macro   character
  112:				        local   putc_loop
  113:				putc_loop:
  114:				        ;jnb     SCON.1,putc_loop
  115:				        ;clr     SCON.1
  116:				        mov     SBUF,character
  117:				        endm
  118:
  119:				        ; put_crlf: send CR+LF to console
  120:				put_crlf macro
  121:				        putc    #13
  122:				        putc    #10
  123:				        endm
  124:
  125:				        ;eot char, label: 'end of test' to be used at the end of all tests.
  126:				        ; If you run into this macro it will print character 'char' and
  127:				        ; continue.
  128:				        ; If you jump to label 'label', it will instead print char '?' and
  129:				        ; will set variable 'fail' to 1, then it will continue.
  130:				eot     macro   char,label
  131:				        local   skip
  132:				        putc    #char
  133:				        sjmp    skip
  134:				label:  putc    #'?'
  135:				        mov     fail,#001h
  136:				skip:
  137:				        endm
  138:
  139:				        ;-- Reset & interrupt vectors ------------------------------------------
  140:
  141:		N      0000	        org     00h
  142:	  0000	02 00 30	        ljmp    start               ; We'll assume LJMP works this far...
  143:		N      0003	        org     03h
  144:		N      000B	        org     0bh
  145:		N      0013	        org     13h
  146:		N      001B	        org     1bh
  147:		N      0023	        org     23h
  148:
  149:
  150:				        ;-- Main test program --------------------------------------------------
  151:		N      0030	        org     30h
  152:	  0030			start:
  153:				        ; Initialize serial port
  154:				        ;(leave it with the default configuration: 19200-8-N-1)
  155:				        ;mov     TMOD,#20h           ; C/T = 0, Mode = 2

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

  156:				        ;mov     TH1,#0fdh           ; 9600 bauds @11.xxx MHz
  157:				        ;mov     TCON,#40h           ; Enable T1
  158:				        ;mov     SCON,#52h           ; 8/N/1, TI enabled
  159:
  160:				        ; Clear failure flag
  161:	  0030	75 6E 00	        mov     fail,#000h
  162:
  163:
  164:				        ;-- Test series A ------------------------------------------------------
  165:				        ; Test the basic opcodes needed in later tests:
  166:				        ; a.- Serial port initialization is OK
  167:				        ; a.- Bootstrap instructions work as used
  168:				        ; b.- <SJMP rel> (small positive rel only)
  169:				        ; c.- ACC can be loaded with direct mode addressing (as an SFR)
  170:				        ; c.- <CJNE a,#imm,rel>
  171:				        ; d.- <DJNZ dir, rel> (small positive rel only)
  172:				        ; e.- <MOV  a,dir>
  173:				        ; Note that one instance of LJMP has been tested too.
  174:
  175:				        putc    #'A'                ; start of test series
  176+ 1  0033			??0000:
  177+ 1			        ;jnb     SCON.1,putc_loop
  178+ 1			        ;clr     SCON.1
  179+ 1  0033	75 99 41	        mov     SBUF,#'A'
  180:
  181:				        ; If we arrive here at all, and you see the chars in the
  182:				        ; terminal, the A.a test has passed
  183:				        putc    #'a'
  184+ 1  0036			??0001:
  185+ 1			        ;jnb     SCON.1,putc_loop
  186+ 1			        ;clr     SCON.1
  187+ 1  0036	75 99 61	        mov     SBUF,#'a'
  188:
  189:	  0039	80 06		        sjmp    ta_b0               ; <SJMP rel> with very small positive rel
  190:				        putc    #'?'
  191+ 1  003B			??0002:
  192+ 1			        ;jnb     SCON.1,putc_loop
  193+ 1			        ;clr     SCON.1
  194+ 1  003B	75 99 3F	        mov     SBUF,#'?'
  195:	  003E	75 6E 01	        mov     fail,#001h
  196:	  0041			ta_b0:  putc    #'b'
  197+ 1  0041			??0003:
  198+ 1			        ;jnb     SCON.1,putc_loop
  199+ 1			        ;clr     SCON.1
  200+ 1  0041	75 99 62	        mov     SBUF,#'b'
  201:
  202:
  203:	  0044	80 05		ta_c0:  sjmp    ta_c1
  204:	  0046			ta_c3:  putc    #'c'
  205+ 1  0046			??0004:
  206+ 1			        ;jnb     SCON.1,putc_loop
  207+ 1			        ;clr     SCON.1
  208+ 1  0046	75 99 63	        mov     SBUF,#'c'
  209:	  0049	80 18		        sjmp    ta_c4
  210:	  004B	75 E0 5A	ta_c1:  mov     0e0h,#5ah           ; load A as SFR
  211:	  004E	B4 5A F5	        cjne    a,#5ah,ta_c3        ; test cjne with == args...

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



 Line  I  Addr  Code            Source

  212:	  0051	B4 7A 06	        cjne    a,#7ah,ta_c2        ; ...with != args, rel>0...
  213:				        putc    #'?'
  214+ 1  0054			??0005:
  215+ 1			        ;jnb     SCON.1,putc_loop
  216+ 1			        ;clr     SCON.1
  217+ 1  0054	75 99 3F	        mov     SBUF,#'?'
  218:	  0057	75 6E 01	        mov     fail,#001h
  219:	  005A	B4 7A E9	ta_c2:  cjne    a,#7ah,ta_c3        ; ...and with != args, rel<0
  220:				        putc    #'?'
  221+ 1  005D			??0006:
  222+ 1			        ;jnb     SCON.1,putc_loop
  223+ 1			        ;clr     SCON.1
  224+ 1  005D	75 99 3F	        mov     SBUF,#'?'
  225:	  0060	75 6E 01	        mov     fail,#001h
  226:	  0063			ta_c4:
  227:
  228:	  0063	75 60 02	        mov     dir0,#02h
  229:	  0066	D5 60 06	        djnz    dir0,ta_d1
  230:				        putc    #'?'
  231+ 1  0069			??0007:
  232+ 1			        ;jnb     SCON.1,putc_loop
  233+ 1			        ;clr     SCON.1
  234+ 1  0069	75 99 3F	        mov     SBUF,#'?'
  235:	  006C	75 6E 01	        mov     fail,#001h
  236:	  006F	D5 60 05	ta_d1:  djnz    dir0,ta_d2
  237:
  238:				        eot     'd',ta_d2
  239+ 1			        putc    #'d'
  240+ 2  0072			??0009:
  241+ 2			        ;jnb     SCON.1,putc_loop
  242+ 2			        ;clr     SCON.1
  243+ 2  0072	75 99 64	        mov     SBUF,#'d'
  244+ 1  0075	80 06		        sjmp    ??0008
  245+ 1  0077			ta_d2:  putc    #'?'
  246+ 2  0077			??0010:
  247+ 2			        ;jnb     SCON.1,putc_loop
  248+ 2			        ;clr     SCON.1
  249+ 2  0077	75 99 3F	        mov     SBUF,#'?'
  250+ 1  007A	75 6E 01	        mov     fail,#001h
  251+ 1  007D			??0008:
  252:
  253:	  007D	75 60 A5	        mov     dir0,#0a5h          ; test mov a,dir
  254:	  0080	E5 60		        mov     a,dir0
  255:	  0082	B4 A5 05	        cjne    a,#0a5h,ta_e1
  256:
  257:				        eot     'e',ta_e1
  258+ 1			        putc    #'e'
  259+ 2  0085			??0012:
  260+ 2			        ;jnb     SCON.1,putc_loop
  261+ 2			        ;clr     SCON.1
  262+ 2  0085	75 99 65	        mov     SBUF,#'e'
  263+ 1  0088	80 06		        sjmp    ??0011
  264+ 1  008A			ta_e1:  putc    #'?'
  265+ 2  008A			??0013:
  266+ 2			        ;jnb     SCON.1,putc_loop
  267+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6



 Line  I  Addr  Code            Source

  268+ 2  008A	75 99 3F	        mov     SBUF,#'?'
  269+ 1  008D	75 6E 01	        mov     fail,#001h
  270+ 1  0090			??0011:
  271:
  272:				        put_crlf                    ; end of test series
  273+ 1			        putc    #13
  274+ 2  0090			??0014:
  275+ 2			        ;jnb     SCON.1,putc_loop
  276+ 2			        ;clr     SCON.1
  277+ 2  0090	75 99 0D	        mov     SBUF,#13
  278+ 1			        putc    #10
  279+ 2  0093			??0015:
  280+ 2			        ;jnb     SCON.1,putc_loop
  281+ 2			        ;clr     SCON.1
  282+ 2  0093	75 99 0A	        mov     SBUF,#10
  283:
  284:				        ;-- Test series B ------------------------------------------------------
  285:				        ; Test CJNE plus a few aux opcodes
  286:				        ; a.- <MOV Rn, #imm>
  287:				        ; a.- <MOV a, Rn>
  288:				        ; b.- <JC rel>, <JNC rel>
  289:				        ; c.- <CJNE Rn, #imm, rel>
  290:				        ; d.- <SETB C>, <CLR C>, <CPL C>
  291:				        ; e.- <MOV @Ri, #imm>
  292:				        ; f.- <CJNE @Ri, #imm, rel>
  293:				        ; g.- <CJNE A, dir, rel>
  294:
  295:				        putc    #'B'                ; start of test series
  296+ 1  0096			??0016:
  297+ 1			        ;jnb     SCON.1,putc_loop
  298+ 1			        ;clr     SCON.1
  299+ 1  0096	75 99 42	        mov     SBUF,#'B'
  300:
  301:				tb_ma   macro   reg,val
  302:				        mov     reg,val
  303:				        mov     a,reg
  304:				        cjne    a,val,tb_a1
  305:				        endm
  306:
  307:				        tb_ma   r0,#081h
  308+ 1  0099	78 81		        mov     r0,#081h
  309+ 1  009B	E8		        mov     a,r0
  310+ 1  009C	B4 81 2F	        cjne    a,#081h,tb_a1
  311:				        tb_ma   r1,#043h
  312+ 1  009F	79 43		        mov     r1,#043h
  313+ 1  00A1	E9		        mov     a,r1
  314+ 1  00A2	B4 43 29	        cjne    a,#043h,tb_a1
  315:				        tb_ma   r2,#027h
  316+ 1  00A5	7A 27		        mov     r2,#027h
  317+ 1  00A7	EA		        mov     a,r2
  318+ 1  00A8	B4 27 23	        cjne    a,#027h,tb_a1
  319:				        tb_ma   r3,#0c2h
  320+ 1  00AB	7B C2		        mov     r3,#0c2h
  321+ 1  00AD	EB		        mov     a,r3
  322+ 1  00AE	B4 C2 1D	        cjne    a,#0c2h,tb_a1
  323:				        tb_ma   r4,#0f1h

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 7



 Line  I  Addr  Code            Source

  324+ 1  00B1	7C F1		        mov     r4,#0f1h
  325+ 1  00B3	EC		        mov     a,r4
  326+ 1  00B4	B4 F1 17	        cjne    a,#0f1h,tb_a1
  327:				        tb_ma   r5,#004h
  328+ 1  00B7	7D 04		        mov     r5,#004h
  329+ 1  00B9	ED		        mov     a,r5
  330+ 1  00BA	B4 04 11	        cjne    a,#004h,tb_a1
  331:				        tb_ma   r6,#092h
  332+ 1  00BD	7E 92		        mov     r6,#092h
  333+ 1  00BF	EE		        mov     a,r6
  334+ 1  00C0	B4 92 0B	        cjne    a,#092h,tb_a1
  335:				        tb_ma   r7,#01fh
  336+ 1  00C3	7F 1F		        mov     r7,#01fh
  337+ 1  00C5	EF		        mov     a,r7
  338+ 1  00C6	B4 1F 05	        cjne    a,#01fh,tb_a1
  339:
  340:				        eot     'a',tb_a1
  341+ 1			        putc    #'a'
  342+ 2  00C9			??0018:
  343+ 2			        ;jnb     SCON.1,putc_loop
  344+ 2			        ;clr     SCON.1
  345+ 2  00C9	75 99 61	        mov     SBUF,#'a'
  346+ 1  00CC	80 06		        sjmp    ??0017
  347+ 1  00CE			tb_a1:  putc    #'?'
  348+ 2  00CE			??0019:
  349+ 2			        ;jnb     SCON.1,putc_loop
  350+ 2			        ;clr     SCON.1
  351+ 2  00CE	75 99 3F	        mov     SBUF,#'?'
  352+ 1  00D1	75 6E 01	        mov     fail,#001h
  353+ 1  00D4			??0017:
  354:
  355:	  00D4	75 D0 80	        mov     PSW,#80h            ; <JC rel>, <JNC rel>
  356:	  00D7	40 06		        jc      tb_b0
  357:				        putc    #'?'
  358+ 1  00D9			??0020:
  359+ 1			        ;jnb     SCON.1,putc_loop
  360+ 1			        ;clr     SCON.1
  361+ 1  00D9	75 99 3F	        mov     SBUF,#'?'
  362:	  00DC	75 6E 01	        mov     fail,#001h
  363:	  00DF	50 07		tb_b0:  jnc     tb_b1
  364:	  00E1	75 D0 00	        mov     PSW,#00h
  365:	  00E4	40 02		        jc      tb_b1
  366:	  00E6	50 06		        jnc     tb_b2
  367:	  00E8			tb_b1:  putc    #'?'
  368+ 1  00E8			??0021:
  369+ 1			        ;jnb     SCON.1,putc_loop
  370+ 1			        ;clr     SCON.1
  371+ 1  00E8	75 99 3F	        mov     SBUF,#'?'
  372:	  00EB	75 6E 01	        mov     fail,#001h
  373:	  00EE			tb_b2:  putc    #'b'
  374+ 1  00EE			??0022:
  375+ 1			        ;jnb     SCON.1,putc_loop
  376+ 1			        ;clr     SCON.1
  377+ 1  00EE	75 99 62	        mov     SBUF,#'b'
  378:
  379:				tb_mc   macro   reg,val

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 8



 Line  I  Addr  Code            Source

  380:				        local   tb_mc0
  381:				        local   tb_mc1
  382:				        mov     reg,val+1
  383:				        cjne    reg,val,tb_mc0
  384:				        putc    #'?'
  385:				        mov     fail,#001h
  386:				tb_mc1: mov     reg,val
  387:				tb_mc0: cjne    reg,val,tb_mc1
  388:				        endm
  389:
  390:				        tb_mc   r0,#091h            ; first test the jumps for all Rn regs
  391+ 1  00F1	78 92		        mov     r0,#091h+1
  392+ 1  00F3	B8 91 08	        cjne    r0,#091h,??0023
  393+ 1			        putc    #'?'
  394+ 2  00F6			??0025:
  395+ 2			        ;jnb     SCON.1,putc_loop
  396+ 2			        ;clr     SCON.1
  397+ 2  00F6	75 99 3F	        mov     SBUF,#'?'
  398+ 1  00F9	75 6E 01	        mov     fail,#001h
  399+ 1  00FC	78 91		??0024: mov     r0,#091h
  400+ 1  00FE	B8 91 FB	??0023: cjne    r0,#091h,??0024
  401:				        tb_mc   r1,#0a2h
  402+ 1  0101	79 A3		        mov     r1,#0a2h+1
  403+ 1  0103	B9 A2 08	        cjne    r1,#0a2h,??0026
  404+ 1			        putc    #'?'
  405+ 2  0106			??0028:
  406+ 2			        ;jnb     SCON.1,putc_loop
  407+ 2			        ;clr     SCON.1
  408+ 2  0106	75 99 3F	        mov     SBUF,#'?'
  409+ 1  0109	75 6E 01	        mov     fail,#001h
  410+ 1  010C	79 A2		??0027: mov     r1,#0a2h
  411+ 1  010E	B9 A2 FB	??0026: cjne    r1,#0a2h,??0027
  412:				        tb_mc   r2,#0b3h
  413+ 1  0111	7A B4		        mov     r2,#0b3h+1
  414+ 1  0113	BA B3 08	        cjne    r2,#0b3h,??0029
  415+ 1			        putc    #'?'
  416+ 2  0116			??0031:
  417+ 2			        ;jnb     SCON.1,putc_loop
  418+ 2			        ;clr     SCON.1
  419+ 2  0116	75 99 3F	        mov     SBUF,#'?'
  420+ 1  0119	75 6E 01	        mov     fail,#001h
  421+ 1  011C	7A B3		??0030: mov     r2,#0b3h
  422+ 1  011E	BA B3 FB	??0029: cjne    r2,#0b3h,??0030
  423:				        tb_mc   r3,#0c4h
  424+ 1  0121	7B C5		        mov     r3,#0c4h+1
  425+ 1  0123	BB C4 08	        cjne    r3,#0c4h,??0032
  426+ 1			        putc    #'?'
  427+ 2  0126			??0034:
  428+ 2			        ;jnb     SCON.1,putc_loop
  429+ 2			        ;clr     SCON.1
  430+ 2  0126	75 99 3F	        mov     SBUF,#'?'
  431+ 1  0129	75 6E 01	        mov     fail,#001h
  432+ 1  012C	7B C4		??0033: mov     r3,#0c4h
  433+ 1  012E	BB C4 FB	??0032: cjne    r3,#0c4h,??0033
  434:				        tb_mc   r4,#0d5h
  435+ 1  0131	7C D6		        mov     r4,#0d5h+1

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 9



 Line  I  Addr  Code            Source

  436+ 1  0133	BC D5 08	        cjne    r4,#0d5h,??0035
  437+ 1			        putc    #'?'
  438+ 2  0136			??0037:
  439+ 2			        ;jnb     SCON.1,putc_loop
  440+ 2			        ;clr     SCON.1
  441+ 2  0136	75 99 3F	        mov     SBUF,#'?'
  442+ 1  0139	75 6E 01	        mov     fail,#001h
  443+ 1  013C	7C D5		??0036: mov     r4,#0d5h
  444+ 1  013E	BC D5 FB	??0035: cjne    r4,#0d5h,??0036
  445:				        tb_mc   r5,#0e6h
  446+ 1  0141	7D E7		        mov     r5,#0e6h+1
  447+ 1  0143	BD E6 08	        cjne    r5,#0e6h,??0038
  448+ 1			        putc    #'?'
  449+ 2  0146			??0040:
  450+ 2			        ;jnb     SCON.1,putc_loop
  451+ 2			        ;clr     SCON.1
  452+ 2  0146	75 99 3F	        mov     SBUF,#'?'
  453+ 1  0149	75 6E 01	        mov     fail,#001h
  454+ 1  014C	7D E6		??0039: mov     r5,#0e6h
  455+ 1  014E	BD E6 FB	??0038: cjne    r5,#0e6h,??0039
  456:				        tb_mc   r6,#0f7h
  457+ 1  0151	7E F8		        mov     r6,#0f7h+1
  458+ 1  0153	BE F7 08	        cjne    r6,#0f7h,??0041
  459+ 1			        putc    #'?'
  460+ 2  0156			??0043:
  461+ 2			        ;jnb     SCON.1,putc_loop
  462+ 2			        ;clr     SCON.1
  463+ 2  0156	75 99 3F	        mov     SBUF,#'?'
  464+ 1  0159	75 6E 01	        mov     fail,#001h
  465+ 1  015C	7E F7		??0042: mov     r6,#0f7h
  466+ 1  015E	BE F7 FB	??0041: cjne    r6,#0f7h,??0042
  467:				        tb_mc   r7,#008h
  468+ 1  0161	7F 09		        mov     r7,#008h+1
  469+ 1  0163	BF 08 08	        cjne    r7,#008h,??0044
  470+ 1			        putc    #'?'
  471+ 2  0166			??0046:
  472+ 2			        ;jnb     SCON.1,putc_loop
  473+ 2			        ;clr     SCON.1
  474+ 2  0166	75 99 3F	        mov     SBUF,#'?'
  475+ 1  0169	75 6E 01	        mov     fail,#001h
  476+ 1  016C	7F 08		??0045: mov     r7,#008h
  477+ 1  016E	BF 08 FB	??0044: cjne    r7,#008h,??0045
  478:
  479:	  0171	75 D0 00	tb_c0:  mov     PSW,#00h            ; now test the C flag with a single Rn reg
  480:	  0174	78 34		        mov     r0,#034h
  481:	  0176	B8 35 00	        cjne    r0,#035h,tb_c1
  482:	  0179	50 0F		tb_c1:  jnc     tb_c2
  483:	  017B	B8 34 00	        cjne    r0,#034h,tb_c3
  484:	  017E	40 0A		tb_c3:  jc      tb_c2
  485:	  0180	B8 33 00	        cjne    r0,#033h,tb_c4
  486:	  0183	40 05		tb_c4:  jc      tb_c2
  487:
  488:				        eot     'c',tb_c2
  489+ 1			        putc    #'c'
  490+ 2  0185			??0048:
  491+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 10



 Line  I  Addr  Code            Source

  492+ 2			        ;clr     SCON.1
  493+ 2  0185	75 99 63	        mov     SBUF,#'c'
  494+ 1  0188	80 06		        sjmp    ??0047
  495+ 1  018A			tb_c2:  putc    #'?'
  496+ 2  018A			??0049:
  497+ 2			        ;jnb     SCON.1,putc_loop
  498+ 2			        ;clr     SCON.1
  499+ 2  018A	75 99 3F	        mov     SBUF,#'?'
  500+ 1  018D	75 6E 01	        mov     fail,#001h
  501+ 1  0190			??0047:
  502:
  503:	  0190	75 D0 80	        mov     PSW,#80h            ; test C set, reset and complement
  504:	  0193	C3		        clr     c
  505:	  0194	40 0B		        jc      tb_d0
  506:	  0196	D3		        setb    c
  507:	  0197	50 08		        jnc     tb_d0
  508:	  0199	B3		        cpl     c
  509:	  019A	40 05		        jc      tb_d0
  510:
  511:				        eot     'd',tb_d0
  512+ 1			        putc    #'d'
  513+ 2  019C			??0051:
  514+ 2			        ;jnb     SCON.1,putc_loop
  515+ 2			        ;clr     SCON.1
  516+ 2  019C	75 99 64	        mov     SBUF,#'d'
  517+ 1  019F	80 06		        sjmp    ??0050
  518+ 1  01A1			tb_d0:  putc    #'?'
  519+ 2  01A1			??0052:
  520+ 2			        ;jnb     SCON.1,putc_loop
  521+ 2			        ;clr     SCON.1
  522+ 2  01A1	75 99 3F	        mov     SBUF,#'?'
  523+ 1  01A4	75 6E 01	        mov     fail,#001h
  524+ 1  01A7			??0050:
  525:
  526:				tb_me   macro   reg
  527:				        mov     reg,#dir0
  528:				        mov     dir0,#12h
  529:				        mov     a,dir0
  530:				        cjne    a,#012h,tb_e0
  531:				        mov     @reg,#0f5h
  532:				        mov     a,dir0
  533:				        cjne    a,#0f5h,tb_e0
  534:				        endm
  535:
  536:				        tb_me   r0                  ; test <mov @ri, #imm> with both regs
  537+ 1  01A7	78 60		        mov     r0,#dir0
  538+ 1  01A9	75 60 12	        mov     dir0,#12h
  539+ 1  01AC	E5 60		        mov     a,dir0
  540+ 1  01AE	B4 12 1D	        cjne    a,#012h,tb_e0
  541+ 1  01B1	76 F5		        mov     @r0,#0f5h
  542+ 1  01B3	E5 60		        mov     a,dir0
  543+ 1  01B5	B4 F5 16	        cjne    a,#0f5h,tb_e0
  544:				        tb_me   r1
  545+ 1  01B8	79 60		        mov     r1,#dir0
  546+ 1  01BA	75 60 12	        mov     dir0,#12h
  547+ 1  01BD	E5 60		        mov     a,dir0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 11



 Line  I  Addr  Code            Source

  548+ 1  01BF	B4 12 0C	        cjne    a,#012h,tb_e0
  549+ 1  01C2	77 F5		        mov     @r1,#0f5h
  550+ 1  01C4	E5 60		        mov     a,dir0
  551+ 1  01C6	B4 F5 05	        cjne    a,#0f5h,tb_e0
  552:
  553:				        eot     'e',tb_e0
  554+ 1			        putc    #'e'
  555+ 2  01C9			??0054:
  556+ 2			        ;jnb     SCON.1,putc_loop
  557+ 2			        ;clr     SCON.1
  558+ 2  01C9	75 99 65	        mov     SBUF,#'e'
  559+ 1  01CC	80 06		        sjmp    ??0053
  560+ 1  01CE			tb_e0:  putc    #'?'
  561+ 2  01CE			??0055:
  562+ 2			        ;jnb     SCON.1,putc_loop
  563+ 2			        ;clr     SCON.1
  564+ 2  01CE	75 99 3F	        mov     SBUF,#'?'
  565+ 1  01D1	75 6E 01	        mov     fail,#001h
  566+ 1  01D4			??0053:
  567:
  568:				tb_mf   macro   reg,val
  569:				        local   tb_mf0
  570:				        local   tb_mf1
  571:				        mov     reg,#30h
  572:				        mov     @reg,val+1
  573:				        cjne    @reg,val,tb_mf0
  574:				        putc    #'?'
  575:				        mov     fail,#001h
  576:				tb_mf1: mov     @reg,val
  577:				tb_mf0: cjne    @reg,val,tb_mf1
  578:				        endm
  579:
  580:				        tb_mf   r0,#12h
  581+ 1  01D4	78 30		        mov     r0,#30h
  582+ 1  01D6	76 13		        mov     @r0,#12h+1
  583+ 1  01D8	B6 12 08	        cjne    @r0,#12h,??0056
  584+ 1			        putc    #'?'
  585+ 2  01DB			??0058:
  586+ 2			        ;jnb     SCON.1,putc_loop
  587+ 2			        ;clr     SCON.1
  588+ 2  01DB	75 99 3F	        mov     SBUF,#'?'
  589+ 1  01DE	75 6E 01	        mov     fail,#001h
  590+ 1  01E1	76 12		??0057: mov     @r0,#12h
  591+ 1  01E3	B6 12 FB	??0056: cjne    @r0,#12h,??0057
  592:				        tb_mf   r1,#34h
  593+ 1  01E6	79 30		        mov     r1,#30h
  594+ 1  01E8	77 35		        mov     @r1,#34h+1
  595+ 1  01EA	B7 34 08	        cjne    @r1,#34h,??0059
  596+ 1			        putc    #'?'
  597+ 2  01ED			??0061:
  598+ 2			        ;jnb     SCON.1,putc_loop
  599+ 2			        ;clr     SCON.1
  600+ 2  01ED	75 99 3F	        mov     SBUF,#'?'
  601+ 1  01F0	75 6E 01	        mov     fail,#001h
  602+ 1  01F3	77 34		??0060: mov     @r1,#34h
  603+ 1  01F5	B7 34 FB	??0059: cjne    @r1,#34h,??0060

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 12



 Line  I  Addr  Code            Source

  604:
  605:	  01F8	78 30		tb_f0:  mov     r0,#30h             ; now test the C flag with a single Rn reg
  606:	  01FA	C3		        clr     c
  607:	  01FB	76 34		        mov     @r0,#034h
  608:	  01FD	B6 35 00	        cjne    @r0,#035h,tb_f1
  609:	  0200	50 0F		tb_f1:  jnc     tb_f2
  610:	  0202	B6 34 00	        cjne    @r0,#034h,tb_f3
  611:	  0205	40 0A		tb_f3:  jc      tb_f2
  612:	  0207	B6 33 00	        cjne    @r0,#033h,tb_f4
  613:	  020A	40 05		tb_f4:  jc      tb_f2
  614:
  615:				        eot     'f',tb_f2
  616+ 1			        putc    #'f'
  617+ 2  020C			??0063:
  618+ 2			        ;jnb     SCON.1,putc_loop
  619+ 2			        ;clr     SCON.1
  620+ 2  020C	75 99 66	        mov     SBUF,#'f'
  621+ 1  020F	80 06		        sjmp    ??0062
  622+ 1  0211			tb_f2:  putc    #'?'
  623+ 2  0211			??0064:
  624+ 2			        ;jnb     SCON.1,putc_loop
  625+ 2			        ;clr     SCON.1
  626+ 2  0211	75 99 3F	        mov     SBUF,#'?'
  627+ 1  0214	75 6E 01	        mov     fail,#001h
  628+ 1  0217			??0062:
  629:
  630:	  0217	75 60 C0	        mov     dir0,#0c0h
  631:	  021A	75 31 C1	        mov     031h,#0c1h
  632:	  021D	75 32 C2	        mov     032h,#0c2h
  633:	  0220	C3		        clr     c
  634:	  0221	74 C1		        mov     a,#0c1h
  635:	  0223	B5 31 1D	        cjne    a,031h,tb_g0
  636:	  0226	40 1B		        jc      tb_g0
  637:	  0228	B5 32 06	        cjne    a,032h,tb_g1
  638:				        putc    #'?'
  639+ 1  022B			??0065:
  640+ 1			        ;jnb     SCON.1,putc_loop
  641+ 1			        ;clr     SCON.1
  642+ 1  022B	75 99 3F	        mov     SBUF,#'?'
  643:	  022E	75 6E 01	        mov     fail,#001h
  644:	  0231	50 10		tb_g1:  jnc     tb_g0
  645:	  0233	B5 60 06	        cjne    a,dir0,tb_g2
  646:				        putc    #'$'
  647+ 1  0236			??0066:
  648+ 1			        ;jnb     SCON.1,putc_loop
  649+ 1			        ;clr     SCON.1
  650+ 1  0236	75 99 24	        mov     SBUF,#'$'
  651:	  0239	75 6E 01	        mov     fail,#001h
  652:	  023C	40 05		tb_g2:  jc      tb_g0
  653:
  654:				        eot     'g',tb_g0
  655+ 1			        putc    #'g'
  656+ 2  023E			??0068:
  657+ 2			        ;jnb     SCON.1,putc_loop
  658+ 2			        ;clr     SCON.1
  659+ 2  023E	75 99 67	        mov     SBUF,#'g'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 13



 Line  I  Addr  Code            Source

  660+ 1  0241	80 06		        sjmp    ??0067
  661+ 1  0243			tb_g0:  putc    #'?'
  662+ 2  0243			??0069:
  663+ 2			        ;jnb     SCON.1,putc_loop
  664+ 2			        ;clr     SCON.1
  665+ 2  0243	75 99 3F	        mov     SBUF,#'?'
  666+ 1  0246	75 6E 01	        mov     fail,#001h
  667+ 1  0249			??0067:
  668:
  669:				        put_crlf                    ; end of test series
  670+ 1			        putc    #13
  671+ 2  0249			??0070:
  672+ 2			        ;jnb     SCON.1,putc_loop
  673+ 2			        ;clr     SCON.1
  674+ 2  0249	75 99 0D	        mov     SBUF,#13
  675+ 1			        putc    #10
  676+ 2  024C			??0071:
  677+ 2			        ;jnb     SCON.1,putc_loop
  678+ 2			        ;clr     SCON.1
  679+ 2  024C	75 99 0A	        mov     SBUF,#10
  680:
  681:
  682:				        ;-- Test series C ------------------------------------------------------
  683:				        ; Bit operations and the rest of the conditional rel jumps
  684:				        ; The following tests will use a bit address within the IRAM
  685:				        ; a.- <JB bit, rel>, <JNB bit, rel>
  686:				        ; b.- <MOV A, #imm>
  687:				        ; c.- <JZ rel>, <JNZ rel>
  688:				        ; d.- <CLR bit>, <CPL bit>
  689:				        ; e.- <ANL C, bit>, <ORL C, bit>
  690:				        ; e.- <ANL C, /bit>, <ORL C, /bit>
  691:				        ; f.- <MOV C,bit>, <MOV bit, C>
  692:				        ; g.- <SETB bit>
  693:				        ; h.- <JBC bit>
  694:				        ; The following tests are the same as above except a bit address within
  695:				        ; SFR B is used.
  696:				        ; i.- <JB bit, rel>, <JNB bit, rel>
  697:				        ; j.- <CLR bit>, <CPL bit>
  698:				        ; k.- <ANL C, bit>, <ORL C, bit>
  699:				        ; k.- <ANL C, /bit>, <ORL C, /bit>
  700:				        ; l.- <MOV C,bit>, <MOV bit, C>
  701:				        ; m.- <SETB bit>
  702:				        ; n.- <JBC bit>
  703:
  704:				        putc    #'C'                ; start of test series
  705+ 1  024F			??0072:
  706+ 1			        ;jnb     SCON.1,putc_loop
  707+ 1			        ;clr     SCON.1
  708+ 1  024F	75 99 43	        mov     SBUF,#'C'
  709:
  710:	  0252	75 2F 80	        mov     02fh,#80h           ; We'll be testing bits 2F.7 and 2F.6
  711:	  0255	80 0E		        sjmp    tc_a0
  712:	  0257	30 7F 1C	tc_a1:  jnb     07fh,tc_a3          ; JNB jumps not on bit set
  713:	  025A	30 7E 11	        jnb     07eh,tc_a2          ; JNB jumps on bit clear
  714:				        putc    #'?'
  715+ 1  025D			??0073:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 14



 Line  I  Addr  Code            Source

  716+ 1			        ;jnb     SCON.1,putc_loop
  717+ 1			        ;clr     SCON.1
  718+ 1  025D	75 99 3F	        mov     SBUF,#'?'
  719:	  0260	75 6E 01	        mov     fail,#001h
  720:	  0263	80 11		        sjmp    tc_a3
  721:	  0265	20 7F EF	tc_a0:  jb      07fh,tc_a1          ; JB jumps on bit set
  722:				        putc    #'!'
  723+ 1  0268			??0074:
  724+ 1			        ;jnb     SCON.1,putc_loop
  725+ 1			        ;clr     SCON.1
  726+ 1  0268	75 99 21	        mov     SBUF,#'!'
  727:	  026B	75 6E 01	        mov     fail,#001h
  728:	  026E	20 7E 05	tc_a2:  jb      07eh,tc_a3          ; JB jumps not on bit clear
  729:
  730:				        eot     'a',tc_a3
  731+ 1			        putc    #'a'
  732+ 2  0271			??0076:
  733+ 2			        ;jnb     SCON.1,putc_loop
  734+ 2			        ;clr     SCON.1
  735+ 2  0271	75 99 61	        mov     SBUF,#'a'
  736+ 1  0274	80 06		        sjmp    ??0075
  737+ 1  0276			tc_a3:  putc    #'?'
  738+ 2  0276			??0077:
  739+ 2			        ;jnb     SCON.1,putc_loop
  740+ 2			        ;clr     SCON.1
  741+ 2  0276	75 99 3F	        mov     SBUF,#'?'
  742+ 1  0279	75 6E 01	        mov     fail,#001h
  743+ 1  027C			??0075:
  744:
  745:	  027C	75 E0 79	        mov     0e0h,#079h          ; init acc (as sfr) with some data
  746:	  027F	B4 79 0A	        cjne    a,#079h,tc_b1
  747:	  0282	74 5A		        mov     a,#05ah             ; now load a with imm data...
  748:	  0284	B4 5A 05	        cjne    a,#05ah,tc_b1       ; ...and make sure a got the data
  749:
  750:				        eot     'b',tc_b1
  751+ 1			        putc    #'b'
  752+ 2  0287			??0079:
  753+ 2			        ;jnb     SCON.1,putc_loop
  754+ 2			        ;clr     SCON.1
  755+ 2  0287	75 99 62	        mov     SBUF,#'b'
  756+ 1  028A	80 06		        sjmp    ??0078
  757+ 1  028C			tc_b1:  putc    #'?'
  758+ 2  028C			??0080:
  759+ 2			        ;jnb     SCON.1,putc_loop
  760+ 2			        ;clr     SCON.1
  761+ 2  028C	75 99 3F	        mov     SBUF,#'?'
  762+ 1  028F	75 6E 01	        mov     fail,#001h
  763+ 1  0292			??0078:
  764:
  765:	  0292	74 80		        mov     a,#80h
  766:	  0294	80 0E		        sjmp    tc_c0
  767:	  0296	60 1B		tc_c1:  jz      tc_c3               ; JZ jumps not on acc!=0
  768:	  0298	74 00		        mov     a,#00h
  769:	  029A	60 10		        jz      tc_c2               ; JZ jumps on acc==0
  770:				        putc    #'?'
  771+ 1  029C			??0081:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 15



 Line  I  Addr  Code            Source

  772+ 1			        ;jnb     SCON.1,putc_loop
  773+ 1			        ;clr     SCON.1
  774+ 1  029C	75 99 3F	        mov     SBUF,#'?'
  775:	  029F	75 6E 01	        mov     fail,#001h
  776:	  02A2	80 0F		        sjmp    tc_c3
  777:	  02A4	70 F0		tc_c0:  jnz     tc_c1               ; JNZ jumps on acc!=0
  778:				        putc    #'!'
  779+ 1  02A6			??0082:
  780+ 1			        ;jnb     SCON.1,putc_loop
  781+ 1			        ;clr     SCON.1
  782+ 1  02A6	75 99 21	        mov     SBUF,#'!'
  783:	  02A9	75 6E 01	        mov     fail,#001h
  784:	  02AC	70 05		tc_c2:  jnz     tc_c3               ; JNZ jumps not on acc==0
  785:
  786:				        eot     'c',tc_c3
  787+ 1			        putc    #'c'
  788+ 2  02AE			??0084:
  789+ 2			        ;jnb     SCON.1,putc_loop
  790+ 2			        ;clr     SCON.1
  791+ 2  02AE	75 99 63	        mov     SBUF,#'c'
  792+ 1  02B1	80 06		        sjmp    ??0083
  793+ 1  02B3			tc_c3:  putc    #'?'
  794+ 2  02B3			??0085:
  795+ 2			        ;jnb     SCON.1,putc_loop
  796+ 2			        ;clr     SCON.1
  797+ 2  02B3	75 99 3F	        mov     SBUF,#'?'
  798+ 1  02B6	75 6E 01	        mov     fail,#001h
  799+ 1  02B9			??0083:
  800:
  801:
  802:	  02B9	75 2F 80	        mov     02fh,#80h           ; We'll be testing bit 2F.7
  803:	  02BC	20 7F 02	        jb      07fh,tc_d1
  804:	  02BF	80 0F		        sjmp    tc_d0
  805:	  02C1	C2 7F		tc_d1:  clr     07fh
  806:	  02C3	20 7F 0A	        jb      07fh,tc_d0
  807:	  02C6	B2 7F		        cpl     07fh
  808:	  02C8	30 7F 05	        jnb     07fh,tc_d0
  809:
  810:				        eot     'd',tc_d0
  811+ 1			        putc    #'d'
  812+ 2  02CB			??0087:
  813+ 2			        ;jnb     SCON.1,putc_loop
  814+ 2			        ;clr     SCON.1
  815+ 2  02CB	75 99 64	        mov     SBUF,#'d'
  816+ 1  02CE	80 06		        sjmp    ??0086
  817+ 1  02D0			tc_d0:  putc    #'?'
  818+ 2  02D0			??0088:
  819+ 2			        ;jnb     SCON.1,putc_loop
  820+ 2			        ;clr     SCON.1
  821+ 2  02D0	75 99 3F	        mov     SBUF,#'?'
  822+ 1  02D3	75 6E 01	        mov     fail,#001h
  823+ 1  02D6			??0086:
  824:
  825:	  02D6	75 2E 08	        mov     02eh,#08h           ; We'll be testing bits 2E.3 and 2E.2
  826:	  02D9	C3		        clr     c
  827:	  02DA	82 73		        anl     c,073h              ; Test ANL in all 4 input combinations

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 16



 Line  I  Addr  Code            Source

  828:	  02DC	40 1F		        jc      tc_e0
  829:	  02DE	D3		        setb    c
  830:	  02DF	82 73		        anl     c,073h
  831:	  02E1	50 1A		        jnc     tc_e0
  832:	  02E3	B0 72		        anl     c,/072h
  833:	  02E5	50 16		        jnc     tc_e0
  834:				                                    ; CY == 1
  835:	  02E7	72 73		        orl     c,073h              ; ORL-ing with 1 should give 1
  836:	  02E9	50 12		        jnc     tc_e0
  837:	  02EB	72 72		        orl     c,072h
  838:	  02ED	50 0E		        jnc     tc_e0
  839:	  02EF	C3		        clr     c                   ; CY == 0
  840:	  02F0	72 73		        orl     c,073h              ; Now ORL c, 'bit' should give 'bit'
  841:	  02F2	50 09		        jnc     tc_e0
  842:	  02F4	A0 72		        orl     c,/072h
  843:	  02F6	50 05		        jnc     tc_e0
  844:
  845:				        eot     'e',tc_e0
  846+ 1			        putc    #'e'
  847+ 2  02F8			??0090:
  848+ 2			        ;jnb     SCON.1,putc_loop
  849+ 2			        ;clr     SCON.1
  850+ 2  02F8	75 99 65	        mov     SBUF,#'e'
  851+ 1  02FB	80 06		        sjmp    ??0089
  852+ 1  02FD			tc_e0:  putc    #'?'
  853+ 2  02FD			??0091:
  854+ 2			        ;jnb     SCON.1,putc_loop
  855+ 2			        ;clr     SCON.1
  856+ 2  02FD	75 99 3F	        mov     SBUF,#'?'
  857+ 1  0300	75 6E 01	        mov     fail,#001h
  858+ 1  0303			??0089:
  859:
  860:	  0303	75 2E 08	        mov     02eh,#08h           ; We'll be testing bits 2E.3 and 2E.2
  861:	  0306	C3		        clr     c
  862:	  0307	A2 73		        mov     c,073h
  863:	  0309	50 15		        jnc     tc_f0
  864:	  030B	A2 72		        mov     c,072h
  865:	  030D	40 11		        jc      tc_f0
  866:	  030F	C3		        clr     c
  867:	  0310	92 71		        mov     071h,c
  868:	  0312	20 71 0B	        jb      071h,tc_f0
  869:	  0315	D3		        setb    c
  870:	  0316	92 71		        mov     071h,c
  871:	  0318	30 71 05	        jnb     071h,tc_f0
  872:
  873:				        eot     'f',tc_f0
  874+ 1			        putc    #'f'
  875+ 2  031B			??0093:
  876+ 2			        ;jnb     SCON.1,putc_loop
  877+ 2			        ;clr     SCON.1
  878+ 2  031B	75 99 66	        mov     SBUF,#'f'
  879+ 1  031E	80 06		        sjmp    ??0092
  880+ 1  0320			tc_f0:  putc    #'?'
  881+ 2  0320			??0094:
  882+ 2			        ;jnb     SCON.1,putc_loop
  883+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 17



 Line  I  Addr  Code            Source

  884+ 2  0320	75 99 3F	        mov     SBUF,#'?'
  885+ 1  0323	75 6E 01	        mov     fail,#001h
  886+ 1  0326			??0092:
  887:
  888:	  0326	75 2E 00	        mov     02eh,#00h           ; We'll be testing bits 2E.3 and 2E.2
  889:	  0329	D2 73		        setb    073h
  890:	  032B	A2 73		        mov     c,073h
  891:	  032D	50 0B		        jnc     tc_g0
  892:	  032F	D2 72		        setb    072h
  893:	  0331	A2 72		        mov     c,072h
  894:	  0333	50 05		        jnc     tc_g0
  895:
  896:				        eot     'g',tc_g0
  897+ 1			        putc    #'g'
  898+ 2  0335			??0096:
  899+ 2			        ;jnb     SCON.1,putc_loop
  900+ 2			        ;clr     SCON.1
  901+ 2  0335	75 99 67	        mov     SBUF,#'g'
  902+ 1  0338	80 06		        sjmp    ??0095
  903+ 1  033A			tc_g0:  putc    #'?'
  904+ 2  033A			??0097:
  905+ 2			        ;jnb     SCON.1,putc_loop
  906+ 2			        ;clr     SCON.1
  907+ 2  033A	75 99 3F	        mov     SBUF,#'?'
  908+ 1  033D	75 6E 01	        mov     fail,#001h
  909+ 1  0340			??0095:
  910:
  911:				        ; (better read the following code in execution order)
  912:	  0340	75 2E 08	        mov     02eh,#08h           ; We'll be testing bits 2E.3 and 2E.2
  913:	  0343	80 09		        sjmp    tc_h1               ; jump forward so we can test jump backwards
  914:	  0345	A2 73		tc_h2:  mov     c,073h              ; make sure the target bit is clear
  915:	  0347	40 0F		        jc      tc_h0
  916:	  0349	10 72 0C	        jbc     072h,tc_h0          ; JBC jumps not when target bit clear
  917:	  034C	80 05		        sjmp    tc_h3
  918:	  034E	10 73 F4	tc_h1:  jbc     073h,tc_h2          ; JBC jumps when target bit set
  919:	  0351	80 05		        sjmp    tc_h0
  920:	  0353			tc_h3:
  921:
  922:				        eot     'h',tc_h0
  923+ 1			        putc    #'h'
  924+ 2  0353			??0099:
  925+ 2			        ;jnb     SCON.1,putc_loop
  926+ 2			        ;clr     SCON.1
  927+ 2  0353	75 99 68	        mov     SBUF,#'h'
  928+ 1  0356	80 06		        sjmp    ??0098
  929+ 1  0358			tc_h0:  putc    #'?'
  930+ 2  0358			??0100:
  931+ 2			        ;jnb     SCON.1,putc_loop
  932+ 2			        ;clr     SCON.1
  933+ 2  0358	75 99 3F	        mov     SBUF,#'?'
  934+ 1  035B	75 6E 01	        mov     fail,#001h
  935+ 1  035E			??0098:
  936:
  937:	  035E	75 2F 00	        mov     02fh,#00h
  938:	  0361	75 F0 80	        mov     B,#80h              ; We'll be testing bits B.7 and B.6
  939:	  0364	80 0E		        sjmp    tc_i0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 18



 Line  I  Addr  Code            Source

  940:	  0366	30 F7 1C	tc_i1:  jnb     B.7,tc_i3           ; JNB jumps not on bit set
  941:	  0369	30 F6 11	        jnb     B.6,tc_i2           ; JNB jumps on bit clear
  942:				        putc    #'?'
  943+ 1  036C			??0101:
  944+ 1			        ;jnb     SCON.1,putc_loop
  945+ 1			        ;clr     SCON.1
  946+ 1  036C	75 99 3F	        mov     SBUF,#'?'
  947:	  036F	75 6E 01	        mov     fail,#001h
  948:	  0372	80 11		        sjmp    tc_i3
  949:	  0374	20 F7 EF	tc_i0:  jb      B.7,tc_i1           ; JB jumps on bit set
  950:				        putc    #'!'
  951+ 1  0377			??0102:
  952+ 1			        ;jnb     SCON.1,putc_loop
  953+ 1			        ;clr     SCON.1
  954+ 1  0377	75 99 21	        mov     SBUF,#'!'
  955:	  037A	75 6E 01	        mov     fail,#001h
  956:	  037D	20 F6 05	tc_i2:  jb      B.6,tc_i3           ; JB jumps not on bit clear
  957:
  958:				        eot     'i',tc_i3
  959+ 1			        putc    #'i'
  960+ 2  0380			??0104:
  961+ 2			        ;jnb     SCON.1,putc_loop
  962+ 2			        ;clr     SCON.1
  963+ 2  0380	75 99 69	        mov     SBUF,#'i'
  964+ 1  0383	80 06		        sjmp    ??0103
  965+ 1  0385			tc_i3:  putc    #'?'
  966+ 2  0385			??0105:
  967+ 2			        ;jnb     SCON.1,putc_loop
  968+ 2			        ;clr     SCON.1
  969+ 2  0385	75 99 3F	        mov     SBUF,#'?'
  970+ 1  0388	75 6E 01	        mov     fail,#001h
  971+ 1  038B			??0103:
  972:
  973:	  038B	75 F0 80	        mov     B,#80h              ; We'll be testing bit B.7
  974:	  038E	20 F7 02	        jb      B.7,tc_j1
  975:	  0391	80 0F		        sjmp    tc_j0
  976:	  0393	C2 F7		tc_j1:  clr     B.7
  977:	  0395	20 F7 0A	        jb      B.7,tc_j0
  978:	  0398	B2 F7		        cpl     B.7
  979:	  039A	30 F7 05	        jnb     B.7,tc_j0
  980:
  981:				        eot     'j',tc_j0
  982+ 1			        putc    #'j'
  983+ 2  039D			??0107:
  984+ 2			        ;jnb     SCON.1,putc_loop
  985+ 2			        ;clr     SCON.1
  986+ 2  039D	75 99 6A	        mov     SBUF,#'j'
  987+ 1  03A0	80 06		        sjmp    ??0106
  988+ 1  03A2			tc_j0:  putc    #'?'
  989+ 2  03A2			??0108:
  990+ 2			        ;jnb     SCON.1,putc_loop
  991+ 2			        ;clr     SCON.1
  992+ 2  03A2	75 99 3F	        mov     SBUF,#'?'
  993+ 1  03A5	75 6E 01	        mov     fail,#001h
  994+ 1  03A8			??0106:
  995:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 19



 Line  I  Addr  Code            Source

  996:	  03A8	75 F0 08	        mov     B,#08h              ; We'll be testing bits B.3 and B.2
  997:	  03AB	C3		        clr     c
  998:	  03AC	82 F3		        anl     c,B.3               ; Test ANL in all 4 input combinations
  999:	  03AE	40 1F		        jc      tc_k0
 1000:	  03B0	D3		        setb    c
 1001:	  03B1	82 F3		        anl     c,B.3
 1002:	  03B3	50 1A		        jnc     tc_k0
 1003:	  03B5	B0 F2		        anl     c,/B.2
 1004:	  03B7	50 16		        jnc     tc_k0
 1005:				                                    ; CY == 1
 1006:	  03B9	72 F3		        orl     c,B.3               ; ORL-ing with 1 should give 1
 1007:	  03BB	50 12		        jnc     tc_k0
 1008:	  03BD	72 F2		        orl     c,B.2
 1009:	  03BF	50 0E		        jnc     tc_k0
 1010:	  03C1	C3		        clr     c                   ; CY == 0
 1011:	  03C2	72 F3		        orl     c,B.3               ; Now ORL c, 'bit' should give 'bit'
 1012:	  03C4	50 09		        jnc     tc_k0
 1013:	  03C6	A0 F2		        orl     c,/B.2
 1014:	  03C8	50 05		        jnc     tc_k0
 1015:
 1016:				        eot     'k',tc_k0
 1017+ 1			        putc    #'k'
 1018+ 2  03CA			??0110:
 1019+ 2			        ;jnb     SCON.1,putc_loop
 1020+ 2			        ;clr     SCON.1
 1021+ 2  03CA	75 99 6B	        mov     SBUF,#'k'
 1022+ 1  03CD	80 06		        sjmp    ??0109
 1023+ 1  03CF			tc_k0:  putc    #'?'
 1024+ 2  03CF			??0111:
 1025+ 2			        ;jnb     SCON.1,putc_loop
 1026+ 2			        ;clr     SCON.1
 1027+ 2  03CF	75 99 3F	        mov     SBUF,#'?'
 1028+ 1  03D2	75 6E 01	        mov     fail,#001h
 1029+ 1  03D5			??0109:
 1030:
 1031:	  03D5	75 F0 08	        mov     B,#08h              ; We'll be testing bits B.3, B.2 and B.1
 1032:	  03D8	C3		        clr     c
 1033:	  03D9	A2 F3		        mov     c,B.3
 1034:	  03DB	50 15		        jnc     tc_L0
 1035:	  03DD	A2 F2		        mov     c,B.2
 1036:	  03DF	40 11		        jc      tc_L0
 1037:	  03E1	C3		        clr     c
 1038:	  03E2	92 F1		        mov     B.1,c
 1039:	  03E4	20 F1 0B	        jb      B.1,tc_L0
 1040:	  03E7	D3		        setb    c
 1041:	  03E8	92 F1		        mov     B.1,c
 1042:	  03EA	30 F1 05	        jnb     B.1,tc_L0
 1043:
 1044:				        eot     'l',tc_L0
 1045+ 1			        putc    #'l'
 1046+ 2  03ED			??0113:
 1047+ 2			        ;jnb     SCON.1,putc_loop
 1048+ 2			        ;clr     SCON.1
 1049+ 2  03ED	75 99 6C	        mov     SBUF,#'l'
 1050+ 1  03F0	80 06		        sjmp    ??0112
 1051+ 1  03F2			tc_L0:  putc    #'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 20



 Line  I  Addr  Code            Source

 1052+ 2  03F2			??0114:
 1053+ 2			        ;jnb     SCON.1,putc_loop
 1054+ 2			        ;clr     SCON.1
 1055+ 2  03F2	75 99 3F	        mov     SBUF,#'?'
 1056+ 1  03F5	75 6E 01	        mov     fail,#001h
 1057+ 1  03F8			??0112:
 1058:
 1059:	  03F8	75 2E 00	        mov     02eh,#00h           ; We'll be testing bits B.3 and B.2
 1060:	  03FB	D2 F3		        setb    B.3
 1061:	  03FD	A2 F3		        mov     c,B.3
 1062:	  03FF	50 0B		        jnc     tc_m0
 1063:	  0401	D2 F2		        setb    B.2
 1064:	  0403	A2 F2		        mov     c,B.2
 1065:	  0405	50 05		        jnc     tc_m0
 1066:
 1067:				        eot     'm',tc_m0
 1068+ 1			        putc    #'m'
 1069+ 2  0407			??0116:
 1070+ 2			        ;jnb     SCON.1,putc_loop
 1071+ 2			        ;clr     SCON.1
 1072+ 2  0407	75 99 6D	        mov     SBUF,#'m'
 1073+ 1  040A	80 06		        sjmp    ??0115
 1074+ 1  040C			tc_m0:  putc    #'?'
 1075+ 2  040C			??0117:
 1076+ 2			        ;jnb     SCON.1,putc_loop
 1077+ 2			        ;clr     SCON.1
 1078+ 2  040C	75 99 3F	        mov     SBUF,#'?'
 1079+ 1  040F	75 6E 01	        mov     fail,#001h
 1080+ 1  0412			??0115:
 1081:
 1082:				        ; (better read the following code in execution order)
 1083:	  0412	75 F0 08	        mov     B,#08h              ; We'll be testing bits B.3 and B.2
 1084:	  0415	80 09		        sjmp    tc_n1               ; jump forward so we can test jump backwards
 1085:	  0417	A2 F3		tc_n2:  mov     c,B.3               ; make sure the target bit is clear
 1086:	  0419	40 0F		        jc      tc_n0
 1087:	  041B	10 F2 0C	        jbc     B.2,tc_n0           ; JBC jumps not when target bit clear
 1088:	  041E	80 05		        sjmp    tc_n3
 1089:	  0420	10 F3 F4	tc_n1:  jbc     B.3,tc_n2           ; JBC jumps when target bit set
 1090:	  0423	80 05		        sjmp    tc_n0
 1091:	  0425			tc_n3:
 1092:
 1093:				        eot     'n',tc_n0
 1094+ 1			        putc    #'n'
 1095+ 2  0425			??0119:
 1096+ 2			        ;jnb     SCON.1,putc_loop
 1097+ 2			        ;clr     SCON.1
 1098+ 2  0425	75 99 6E	        mov     SBUF,#'n'
 1099+ 1  0428	80 06		        sjmp    ??0118
 1100+ 1  042A			tc_n0:  putc    #'?'
 1101+ 2  042A			??0120:
 1102+ 2			        ;jnb     SCON.1,putc_loop
 1103+ 2			        ;clr     SCON.1
 1104+ 2  042A	75 99 3F	        mov     SBUF,#'?'
 1105+ 1  042D	75 6E 01	        mov     fail,#001h
 1106+ 1  0430			??0118:
 1107:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 21



 Line  I  Addr  Code            Source

 1108:
 1109:
 1110:				        put_crlf                    ; end of test series
 1111+ 1			        putc    #13
 1112+ 2  0430			??0121:
 1113+ 2			        ;jnb     SCON.1,putc_loop
 1114+ 2			        ;clr     SCON.1
 1115+ 2  0430	75 99 0D	        mov     SBUF,#13
 1116+ 1			        putc    #10
 1117+ 2  0433			??0122:
 1118+ 2			        ;jnb     SCON.1,putc_loop
 1119+ 2			        ;clr     SCON.1
 1120+ 2  0433	75 99 0A	        mov     SBUF,#10
 1121:
 1122:				        ;-- Test series D ------------------------------------------------------
 1123:				        ;
 1124:				        ; a.- <XRL A, #imm>
 1125:				        ; b.- <RLC A>
 1126:				        ; c.- <RRC A>
 1127:				        ; d.- <RL A>, <RR A>
 1128:				        ;
 1129:				        ; This test executes a few NOPs too but does NOT check for unintended
 1130:				        ; side effects; we intersperse the nops between the other tests to at
 1131:				        ; least have a chance to catch buggy behavior but that's all.
 1132:
 1133:
 1134:				        putc    #'D'                ; start of test series
 1135+ 1  0436			??0123:
 1136+ 1			        ;jnb     SCON.1,putc_loop
 1137+ 1			        ;clr     SCON.1
 1138+ 1  0436	75 99 44	        mov     SBUF,#'D'
 1139:
 1140:	  0439	74 85		        mov     a,#085h             ; test XRL A,#imm before using it in
 1141:	  043B	64 44		        xrl     a,#044h             ; subsequent tests
 1142:	  043D	60 09		        jz      td_a0
 1143:	  043F	64 C1		        xrl     a,#0c1h
 1144:	  0441	70 05		        jnz     td_a0
 1145:
 1146:				        eot     'a',td_a0
 1147+ 1			        putc    #'a'
 1148+ 2  0443			??0125:
 1149+ 2			        ;jnb     SCON.1,putc_loop
 1150+ 2			        ;clr     SCON.1
 1151+ 2  0443	75 99 61	        mov     SBUF,#'a'
 1152+ 1  0446	80 06		        sjmp    ??0124
 1153+ 1  0448			td_a0:  putc    #'?'
 1154+ 2  0448			??0126:
 1155+ 2			        ;jnb     SCON.1,putc_loop
 1156+ 2			        ;clr     SCON.1
 1157+ 2  0448	75 99 3F	        mov     SBUF,#'?'
 1158+ 1  044B	75 6E 01	        mov     fail,#001h
 1159+ 1  044E			??0124:
 1160:
 1161:	  044E	74 85		        mov     a,#085h             ; Test RLC effects on ACC, ignore CY for now
 1162:	  0450	00		        nop
 1163:	  0451	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 22



 Line  I  Addr  Code            Source

 1164:	  0452	33		        rlc     a                   ; a = (a << 1) | 0
 1165:	  0453	F5 60		        mov     dir0,a
 1166:	  0455	64 0A		        xrl     a,#00ah             ; We can't use CJNE because it modifies CY
 1167:	  0457	70 16		        jnz     td_b0               ; check shifted acc
 1168:	  0459	E5 60		        mov     a,dir0
 1169:	  045B	33		        rlc     a                   ; rotate again...
 1170:	  045C	64 15		        xrl     a,#015h             ; ...and check shifted acc with CY at bit 0
 1171:	  045E	70 0F		        jnz     td_b0
 1172:
 1173:	  0460	74 85		        mov     a,#085h             ; Now check RLC effects on CY
 1174:	  0462	00		        nop
 1175:	  0463	C3		        clr     c
 1176:	  0464	33		        rlc     a
 1177:	  0465	50 08		        jnc     td_b0
 1178:	  0467	33		        rlc     a
 1179:	  0468	40 05		        jc      td_b0               ; CY==1 moved into ACC.0
 1180:
 1181:				        eot     'b',td_b0
 1182+ 1			        putc    #'b'
 1183+ 2  046A			??0128:
 1184+ 2			        ;jnb     SCON.1,putc_loop
 1185+ 2			        ;clr     SCON.1
 1186+ 2  046A	75 99 62	        mov     SBUF,#'b'
 1187+ 1  046D	80 06		        sjmp    ??0127
 1188+ 1  046F			td_b0:  putc    #'?'
 1189+ 2  046F			??0129:
 1190+ 2			        ;jnb     SCON.1,putc_loop
 1191+ 2			        ;clr     SCON.1
 1192+ 2  046F	75 99 3F	        mov     SBUF,#'?'
 1193+ 1  0472	75 6E 01	        mov     fail,#001h
 1194+ 1  0475			??0127:
 1195:
 1196:	  0475	74 85		        mov     a,#085h             ; Test RRC effects on ACC, ignore CY for now
 1197:	  0477	C3		        clr     c
 1198:	  0478	13		        rrc     a                   ; will set CY
 1199:	  0479	F5 60		        mov     dir0,a
 1200:	  047B	00		        nop
 1201:	  047C	64 42		        xrl     a,#042h             ; We can't use CJNE because it modifies CY
 1202:	  047E	70 15		        jnz     td_c0               ; check shifted acc
 1203:	  0480	E5 60		        mov     a,dir0
 1204:	  0482	13		        rrc     a                   ; rotate again...
 1205:	  0483	64 A1		        xrl     a,#0a1h             ; ...and check shifted acc with CY at bit 7
 1206:	  0485	70 0E		        jnz     td_c0
 1207:
 1208:	  0487	74 85		        mov     a,#085h             ; Now check RRC effects on CY
 1209:	  0489	C3		        clr     c
 1210:	  048A	13		        rrc     a
 1211:	  048B	50 08		        jnc     td_c0
 1212:	  048D	13		        rrc     a
 1213:	  048E	40 05		        jc      td_c0               ; CY==1 moved into ACC.0
 1214:
 1215:				        eot     'c',td_c0
 1216+ 1			        putc    #'c'
 1217+ 2  0490			??0131:
 1218+ 2			        ;jnb     SCON.1,putc_loop
 1219+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 23



 Line  I  Addr  Code            Source

 1220+ 2  0490	75 99 63	        mov     SBUF,#'c'
 1221+ 1  0493	80 06		        sjmp    ??0130
 1222+ 1  0495			td_c0:  putc    #'?'
 1223+ 2  0495			??0132:
 1224+ 2			        ;jnb     SCON.1,putc_loop
 1225+ 2			        ;clr     SCON.1
 1226+ 2  0495	75 99 3F	        mov     SBUF,#'?'
 1227+ 1  0498	75 6E 01	        mov     fail,#001h
 1228+ 1  049B			??0130:
 1229:
 1230:	  049B	74 85		        mov     a,#085h             ; Test RL effects on ACC, ignore CY for now
 1231:	  049D	C3		        clr     c
 1232:	  049E	23		        rl      a                   ; a = (a << 1) | 0
 1233:	  049F	F5 60		        mov     dir0,a
 1234:	  04A1	64 0B		        xrl     a,#00bh             ; We can't use CJNE because it modifies CY
 1235:	  04A3	70 28		        jnz     td_d0               ; check shifted acc
 1236:	  04A5	E5 60		        mov     a,dir0
 1237:	  04A7	D3		        setb    c
 1238:	  04A8	23		        rl      a                   ; rotate again...
 1239:	  04A9	64 16		        xrl     a,#016h             ; ...and check shifted acc with CY at bit 0
 1240:	  04AB	70 20		        jnz     td_d0
 1241:
 1242:	  04AD	74 85		        mov     a,#085h             ; Test RR effects on ACC, ignore CY for now
 1243:	  04AF	C3		        clr     c
 1244:	  04B0	03		        rr      a                   ; will set CY
 1245:	  04B1	F5 60		        mov     dir0,a
 1246:	  04B3	64 C2		        xrl     a,#0c2h             ; We can't use CJNE because it modifies CY
 1247:	  04B5	70 16		        jnz     td_d0               ; check shifted acc
 1248:	  04B7	E5 60		        mov     a,dir0
 1249:	  04B9	03		        rr      a                   ; rotate again...
 1250:	  04BA	64 61		        xrl     a,#061h             ; ...and check shifted acc with CY at bit 7
 1251:	  04BC	70 0F		        jnz     td_d0
 1252:
 1253:	  04BE	74 FF		        mov     a,#0ffh             ; Now make sure RL and RR don't touch CY
 1254:	  04C0	C3		        clr     c
 1255:	  04C1	23		        rl      a
 1256:	  04C2	40 09		        jc      td_d0
 1257:	  04C4	03		        rr      a
 1258:	  04C5	03		        rr      a
 1259:	  04C6	40 05		        jc      td_d0
 1260:
 1261:				        eot     'd',td_d0
 1262+ 1			        putc    #'d'
 1263+ 2  04C8			??0134:
 1264+ 2			        ;jnb     SCON.1,putc_loop
 1265+ 2			        ;clr     SCON.1
 1266+ 2  04C8	75 99 64	        mov     SBUF,#'d'
 1267+ 1  04CB	80 06		        sjmp    ??0133
 1268+ 1  04CD			td_d0:  putc    #'?'
 1269+ 2  04CD			??0135:
 1270+ 2			        ;jnb     SCON.1,putc_loop
 1271+ 2			        ;clr     SCON.1
 1272+ 2  04CD	75 99 3F	        mov     SBUF,#'?'
 1273+ 1  04D0	75 6E 01	        mov     fail,#001h
 1274+ 1  04D3			??0133:
 1275:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 24



 Line  I  Addr  Code            Source

 1276:				        put_crlf                    ; end of test series
 1277+ 1			        putc    #13
 1278+ 2  04D3			??0136:
 1279+ 2			        ;jnb     SCON.1,putc_loop
 1280+ 2			        ;clr     SCON.1
 1281+ 2  04D3	75 99 0D	        mov     SBUF,#13
 1282+ 1			        putc    #10
 1283+ 2  04D6			??0137:
 1284+ 2			        ;jnb     SCON.1,putc_loop
 1285+ 2			        ;clr     SCON.1
 1286+ 2  04D6	75 99 0A	        mov     SBUF,#10
 1287:
 1288:				        ;-- Test series E ------------------------------------------------------
 1289:				        ; Increment
 1290:				        ; a.- <INC A>
 1291:				        ; b.- <INC Rn>
 1292:				        ; c.- <INC @Ri>
 1293:				        ; d.- <MOV dir,#imm>
 1294:				        ; e.- <INC dir>
 1295:				        ; f.- <DEC A>
 1296:				        ; g.- <DEC Rn>
 1297:				        ; h.- <DEC @Ri>
 1298:				        ; i.- <DEC dir>
 1299:
 1300:				        putc    #'E'                ; start of test series
 1301+ 1  04D9			??0138:
 1302+ 1			        ;jnb     SCON.1,putc_loop
 1303+ 1			        ;clr     SCON.1
 1304+ 1  04D9	75 99 45	        mov     SBUF,#'E'
 1305:
 1306:				te_ma   macro   target, error_loc
 1307:				        mov     target,#080h
 1308:				        inc     target
 1309:				        cjne    target,#081h,error_loc
 1310:				        mov     target,#0ffh
 1311:				        clr     c
 1312:				        inc     target
 1313:				        jc      error_loc
 1314:				        cjne    target,#000h,error_loc
 1315:				        endm
 1316:
 1317:				        te_ma   a,te_a0             ; Test <INC A>
 1318+ 1  04DC	74 80		        mov     a,#080h
 1319+ 1  04DE	04		        inc     a
 1320+ 1  04DF	B4 81 0E	        cjne    a,#081h,te_a0
 1321+ 1  04E2	74 FF		        mov     a,#0ffh
 1322+ 1  04E4	C3		        clr     c
 1323+ 1  04E5	04		        inc     a
 1324+ 1  04E6	40 08		        jc      te_a0
 1325+ 1  04E8	B4 00 05	        cjne    a,#000h,te_a0
 1326:
 1327:				        eot     'a',te_a0
 1328+ 1			        putc    #'a'
 1329+ 2  04EB			??0140:
 1330+ 2			        ;jnb     SCON.1,putc_loop
 1331+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 25



 Line  I  Addr  Code            Source

 1332+ 2  04EB	75 99 61	        mov     SBUF,#'a'
 1333+ 1  04EE	80 06		        sjmp    ??0139
 1334+ 1  04F0			te_a0:  putc    #'?'
 1335+ 2  04F0			??0141:
 1336+ 2			        ;jnb     SCON.1,putc_loop
 1337+ 2			        ;clr     SCON.1
 1338+ 2  04F0	75 99 3F	        mov     SBUF,#'?'
 1339+ 1  04F3	75 6E 01	        mov     fail,#001h
 1340+ 1  04F6			??0139:
 1341:
 1342:	  04F6	78 66		        mov     r0,#066h
 1343:
 1344:				        te_ma   r0,te_b0
 1345+ 1  04F8	78 80		        mov     r0,#080h
 1346+ 1  04FA	08		        inc     r0
 1347+ 1  04FB	B8 81 77	        cjne    r0,#081h,te_b0
 1348+ 1  04FE	78 FF		        mov     r0,#0ffh
 1349+ 1  0500	C3		        clr     c
 1350+ 1  0501	08		        inc     r0
 1351+ 1  0502	40 71		        jc      te_b0
 1352+ 1  0504	B8 00 6E	        cjne    r0,#000h,te_b0
 1353:				        te_ma   r1,te_b0
 1354+ 1  0507	79 80		        mov     r1,#080h
 1355+ 1  0509	09		        inc     r1
 1356+ 1  050A	B9 81 68	        cjne    r1,#081h,te_b0
 1357+ 1  050D	79 FF		        mov     r1,#0ffh
 1358+ 1  050F	C3		        clr     c
 1359+ 1  0510	09		        inc     r1
 1360+ 1  0511	40 62		        jc      te_b0
 1361+ 1  0513	B9 00 5F	        cjne    r1,#000h,te_b0
 1362:				        te_ma   r2,te_b0
 1363+ 1  0516	7A 80		        mov     r2,#080h
 1364+ 1  0518	0A		        inc     r2
 1365+ 1  0519	BA 81 59	        cjne    r2,#081h,te_b0
 1366+ 1  051C	7A FF		        mov     r2,#0ffh
 1367+ 1  051E	C3		        clr     c
 1368+ 1  051F	0A		        inc     r2
 1369+ 1  0520	40 53		        jc      te_b0
 1370+ 1  0522	BA 00 50	        cjne    r2,#000h,te_b0
 1371:				        te_ma   r3,te_b0
 1372+ 1  0525	7B 80		        mov     r3,#080h
 1373+ 1  0527	0B		        inc     r3
 1374+ 1  0528	BB 81 4A	        cjne    r3,#081h,te_b0
 1375+ 1  052B	7B FF		        mov     r3,#0ffh
 1376+ 1  052D	C3		        clr     c
 1377+ 1  052E	0B		        inc     r3
 1378+ 1  052F	40 44		        jc      te_b0
 1379+ 1  0531	BB 00 41	        cjne    r3,#000h,te_b0
 1380:				        te_ma   r4,te_b0
 1381+ 1  0534	7C 80		        mov     r4,#080h
 1382+ 1  0536	0C		        inc     r4
 1383+ 1  0537	BC 81 3B	        cjne    r4,#081h,te_b0
 1384+ 1  053A	7C FF		        mov     r4,#0ffh
 1385+ 1  053C	C3		        clr     c
 1386+ 1  053D	0C		        inc     r4
 1387+ 1  053E	40 35		        jc      te_b0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 26



 Line  I  Addr  Code            Source

 1388+ 1  0540	BC 00 32	        cjne    r4,#000h,te_b0
 1389:				        te_ma   r5,te_b0
 1390+ 1  0543	7D 80		        mov     r5,#080h
 1391+ 1  0545	0D		        inc     r5
 1392+ 1  0546	BD 81 2C	        cjne    r5,#081h,te_b0
 1393+ 1  0549	7D FF		        mov     r5,#0ffh
 1394+ 1  054B	C3		        clr     c
 1395+ 1  054C	0D		        inc     r5
 1396+ 1  054D	40 26		        jc      te_b0
 1397+ 1  054F	BD 00 23	        cjne    r5,#000h,te_b0
 1398:				        te_ma   r6,te_b0
 1399+ 1  0552	7E 80		        mov     r6,#080h
 1400+ 1  0554	0E		        inc     r6
 1401+ 1  0555	BE 81 1D	        cjne    r6,#081h,te_b0
 1402+ 1  0558	7E FF		        mov     r6,#0ffh
 1403+ 1  055A	C3		        clr     c
 1404+ 1  055B	0E		        inc     r6
 1405+ 1  055C	40 17		        jc      te_b0
 1406+ 1  055E	BE 00 14	        cjne    r6,#000h,te_b0
 1407:				        te_ma   r7,te_b0
 1408+ 1  0561	7F 80		        mov     r7,#080h
 1409+ 1  0563	0F		        inc     r7
 1410+ 1  0564	BF 81 0E	        cjne    r7,#081h,te_b0
 1411+ 1  0567	7F FF		        mov     r7,#0ffh
 1412+ 1  0569	C3		        clr     c
 1413+ 1  056A	0F		        inc     r7
 1414+ 1  056B	40 08		        jc      te_b0
 1415+ 1  056D	BF 00 05	        cjne    r7,#000h,te_b0
 1416:
 1417:				        eot     'b',te_b0
 1418+ 1			        putc    #'b'
 1419+ 2  0570			??0143:
 1420+ 2			        ;jnb     SCON.1,putc_loop
 1421+ 2			        ;clr     SCON.1
 1422+ 2  0570	75 99 62	        mov     SBUF,#'b'
 1423+ 1  0573	80 06		        sjmp    ??0142
 1424+ 1  0575			te_b0:  putc    #'?'
 1425+ 2  0575			??0144:
 1426+ 2			        ;jnb     SCON.1,putc_loop
 1427+ 2			        ;clr     SCON.1
 1428+ 2  0575	75 99 3F	        mov     SBUF,#'?'
 1429+ 1  0578	75 6E 01	        mov     fail,#001h
 1430+ 1  057B			??0142:
 1431:
 1432:	  057B	78 60		        mov     r0,#dir0
 1433:	  057D	79 31		        mov     r1,#031h
 1434:
 1435:				        te_ma   @r0,te_c0
 1436+ 1  057F	76 80		        mov     @r0,#080h
 1437+ 1  0581	06		        inc     @r0
 1438+ 1  0582	B6 81 1D	        cjne    @r0,#081h,te_c0
 1439+ 1  0585	76 FF		        mov     @r0,#0ffh
 1440+ 1  0587	C3		        clr     c
 1441+ 1  0588	06		        inc     @r0
 1442+ 1  0589	40 17		        jc      te_c0
 1443+ 1  058B	B6 00 14	        cjne    @r0,#000h,te_c0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 27



 Line  I  Addr  Code            Source

 1444:				        te_ma   @r1,te_c0
 1445+ 1  058E	77 80		        mov     @r1,#080h
 1446+ 1  0590	07		        inc     @r1
 1447+ 1  0591	B7 81 0E	        cjne    @r1,#081h,te_c0
 1448+ 1  0594	77 FF		        mov     @r1,#0ffh
 1449+ 1  0596	C3		        clr     c
 1450+ 1  0597	07		        inc     @r1
 1451+ 1  0598	40 08		        jc      te_c0
 1452+ 1  059A	B7 00 05	        cjne    @r1,#000h,te_c0
 1453:
 1454:				        eot     'c',te_c0
 1455+ 1			        putc    #'c'
 1456+ 2  059D			??0146:
 1457+ 2			        ;jnb     SCON.1,putc_loop
 1458+ 2			        ;clr     SCON.1
 1459+ 2  059D	75 99 63	        mov     SBUF,#'c'
 1460+ 1  05A0	80 06		        sjmp    ??0145
 1461+ 1  05A2			te_c0:  putc    #'?'
 1462+ 2  05A2			??0147:
 1463+ 2			        ;jnb     SCON.1,putc_loop
 1464+ 2			        ;clr     SCON.1
 1465+ 2  05A2	75 99 3F	        mov     SBUF,#'?'
 1466+ 1  05A5	75 6E 01	        mov     fail,#001h
 1467+ 1  05A8			??0145:
 1468:
 1469:	  05A8	75 60 34	        mov     dir0,#034h          ; Test <MOV dir,#imm> before using it in
 1470:	  05AB	E5 60		        mov     a,dir0              ; subsequent tests
 1471:	  05AD	B4 34 05	        cjne    a,#034h,te_d0
 1472:
 1473:				        eot     'd',te_d0
 1474+ 1			        putc    #'d'
 1475+ 2  05B0			??0149:
 1476+ 2			        ;jnb     SCON.1,putc_loop
 1477+ 2			        ;clr     SCON.1
 1478+ 2  05B0	75 99 64	        mov     SBUF,#'d'
 1479+ 1  05B3	80 06		        sjmp    ??0148
 1480+ 1  05B5			te_d0:  putc    #'?'
 1481+ 2  05B5			??0150:
 1482+ 2			        ;jnb     SCON.1,putc_loop
 1483+ 2			        ;clr     SCON.1
 1484+ 2  05B5	75 99 3F	        mov     SBUF,#'?'
 1485+ 1  05B8	75 6E 01	        mov     fail,#001h
 1486+ 1  05BB			??0148:
 1487:
 1488:	  05BB	75 39 80	        mov     039h,#080h
 1489:	  05BE	05 39		        inc     039h
 1490:	  05C0	E5 39		        mov     a,039h
 1491:	  05C2	B4 81 12	        cjne    a,#081h,te_e0
 1492:	  05C5	75 39 FF	        mov     039h,#0ffh
 1493:	  05C8	C3		        clr     c
 1494:	  05C9	05 39		        inc     039h
 1495:	  05CB	40 0A		        jc      te_e0
 1496:	  05CD	E5 39		        mov     a,039h
 1497:	  05CF	B4 00 05	        cjne    a,#000h,te_e0
 1498:
 1499:				        eot     'e',te_e0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 28



 Line  I  Addr  Code            Source

 1500+ 1			        putc    #'e'
 1501+ 2  05D2			??0152:
 1502+ 2			        ;jnb     SCON.1,putc_loop
 1503+ 2			        ;clr     SCON.1
 1504+ 2  05D2	75 99 65	        mov     SBUF,#'e'
 1505+ 1  05D5	80 06		        sjmp    ??0151
 1506+ 1  05D7			te_e0:  putc    #'?'
 1507+ 2  05D7			??0153:
 1508+ 2			        ;jnb     SCON.1,putc_loop
 1509+ 2			        ;clr     SCON.1
 1510+ 2  05D7	75 99 3F	        mov     SBUF,#'?'
 1511+ 1  05DA	75 6E 01	        mov     fail,#001h
 1512+ 1  05DD			??0151:
 1513:
 1514:				te_mf   macro   target, error_loc
 1515:				        mov     target,#001h
 1516:				        dec     target
 1517:				        cjne    target,#000h,error_loc
 1518:				        clr     c
 1519:				        dec     target
 1520:				        jc      error_loc
 1521:				        cjne    target,#0ffh,error_loc
 1522:				        endm
 1523:
 1524:				        te_mf   a,te_f0             ; Test <DEC A>
 1525+ 1  05DD	74 01		        mov     a,#001h
 1526+ 1  05DF	14		        dec     a
 1527+ 1  05E0	B4 00 0C	        cjne    a,#000h,te_f0
 1528+ 1  05E3	C3		        clr     c
 1529+ 1  05E4	14		        dec     a
 1530+ 1  05E5	40 08		        jc      te_f0
 1531+ 1  05E7	B4 FF 05	        cjne    a,#0ffh,te_f0
 1532:
 1533:				        eot     'f',te_f0
 1534+ 1			        putc    #'f'
 1535+ 2  05EA			??0155:
 1536+ 2			        ;jnb     SCON.1,putc_loop
 1537+ 2			        ;clr     SCON.1
 1538+ 2  05EA	75 99 66	        mov     SBUF,#'f'
 1539+ 1  05ED	80 06		        sjmp    ??0154
 1540+ 1  05EF			te_f0:  putc    #'?'
 1541+ 2  05EF			??0156:
 1542+ 2			        ;jnb     SCON.1,putc_loop
 1543+ 2			        ;clr     SCON.1
 1544+ 2  05EF	75 99 3F	        mov     SBUF,#'?'
 1545+ 1  05F2	75 6E 01	        mov     fail,#001h
 1546+ 1  05F5			??0154:
 1547:
 1548:	  05F5	78 66		        mov     r0,#066h
 1549:
 1550:				        te_mf   r0,te_g0
 1551+ 1  05F7	78 01		        mov     r0,#001h
 1552+ 1  05F9	18		        dec     r0
 1553+ 1  05FA	B8 00 67	        cjne    r0,#000h,te_g0
 1554+ 1  05FD	C3		        clr     c
 1555+ 1  05FE	18		        dec     r0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 29



 Line  I  Addr  Code            Source

 1556+ 1  05FF	40 63		        jc      te_g0
 1557+ 1  0601	B8 FF 60	        cjne    r0,#0ffh,te_g0
 1558:				        te_mf   r1,te_g0
 1559+ 1  0604	79 01		        mov     r1,#001h
 1560+ 1  0606	19		        dec     r1
 1561+ 1  0607	B9 00 5A	        cjne    r1,#000h,te_g0
 1562+ 1  060A	C3		        clr     c
 1563+ 1  060B	19		        dec     r1
 1564+ 1  060C	40 56		        jc      te_g0
 1565+ 1  060E	B9 FF 53	        cjne    r1,#0ffh,te_g0
 1566:				        te_mf   r2,te_g0
 1567+ 1  0611	7A 01		        mov     r2,#001h
 1568+ 1  0613	1A		        dec     r2
 1569+ 1  0614	BA 00 4D	        cjne    r2,#000h,te_g0
 1570+ 1  0617	C3		        clr     c
 1571+ 1  0618	1A		        dec     r2
 1572+ 1  0619	40 49		        jc      te_g0
 1573+ 1  061B	BA FF 46	        cjne    r2,#0ffh,te_g0
 1574:				        te_mf   r3,te_g0
 1575+ 1  061E	7B 01		        mov     r3,#001h
 1576+ 1  0620	1B		        dec     r3
 1577+ 1  0621	BB 00 40	        cjne    r3,#000h,te_g0
 1578+ 1  0624	C3		        clr     c
 1579+ 1  0625	1B		        dec     r3
 1580+ 1  0626	40 3C		        jc      te_g0
 1581+ 1  0628	BB FF 39	        cjne    r3,#0ffh,te_g0
 1582:				        te_mf   r4,te_g0
 1583+ 1  062B	7C 01		        mov     r4,#001h
 1584+ 1  062D	1C		        dec     r4
 1585+ 1  062E	BC 00 33	        cjne    r4,#000h,te_g0
 1586+ 1  0631	C3		        clr     c
 1587+ 1  0632	1C		        dec     r4
 1588+ 1  0633	40 2F		        jc      te_g0
 1589+ 1  0635	BC FF 2C	        cjne    r4,#0ffh,te_g0
 1590:				        te_mf   r5,te_g0
 1591+ 1  0638	7D 01		        mov     r5,#001h
 1592+ 1  063A	1D		        dec     r5
 1593+ 1  063B	BD 00 26	        cjne    r5,#000h,te_g0
 1594+ 1  063E	C3		        clr     c
 1595+ 1  063F	1D		        dec     r5
 1596+ 1  0640	40 22		        jc      te_g0
 1597+ 1  0642	BD FF 1F	        cjne    r5,#0ffh,te_g0
 1598:				        te_mf   r6,te_g0
 1599+ 1  0645	7E 01		        mov     r6,#001h
 1600+ 1  0647	1E		        dec     r6
 1601+ 1  0648	BE 00 19	        cjne    r6,#000h,te_g0
 1602+ 1  064B	C3		        clr     c
 1603+ 1  064C	1E		        dec     r6
 1604+ 1  064D	40 15		        jc      te_g0
 1605+ 1  064F	BE FF 12	        cjne    r6,#0ffh,te_g0
 1606:				        te_mf   r7,te_g0
 1607+ 1  0652	7F 01		        mov     r7,#001h
 1608+ 1  0654	1F		        dec     r7
 1609+ 1  0655	BF 00 0C	        cjne    r7,#000h,te_g0
 1610+ 1  0658	C3		        clr     c
 1611+ 1  0659	1F		        dec     r7

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 30



 Line  I  Addr  Code            Source

 1612+ 1  065A	40 08		        jc      te_g0
 1613+ 1  065C	BF FF 05	        cjne    r7,#0ffh,te_g0
 1614:
 1615:				        eot     'g',te_g0
 1616+ 1			        putc    #'g'
 1617+ 2  065F			??0158:
 1618+ 2			        ;jnb     SCON.1,putc_loop
 1619+ 2			        ;clr     SCON.1
 1620+ 2  065F	75 99 67	        mov     SBUF,#'g'
 1621+ 1  0662	80 06		        sjmp    ??0157
 1622+ 1  0664			te_g0:  putc    #'?'
 1623+ 2  0664			??0159:
 1624+ 2			        ;jnb     SCON.1,putc_loop
 1625+ 2			        ;clr     SCON.1
 1626+ 2  0664	75 99 3F	        mov     SBUF,#'?'
 1627+ 1  0667	75 6E 01	        mov     fail,#001h
 1628+ 1  066A			??0157:
 1629:
 1630:	  066A	78 60		        mov     r0,#dir0
 1631:	  066C	79 31		        mov     r1,#031h
 1632:
 1633:				        te_mf   @r0,te_h0
 1634+ 1  066E	76 01		        mov     @r0,#001h
 1635+ 1  0670	16		        dec     @r0
 1636+ 1  0671	B6 00 19	        cjne    @r0,#000h,te_h0
 1637+ 1  0674	C3		        clr     c
 1638+ 1  0675	16		        dec     @r0
 1639+ 1  0676	40 15		        jc      te_h0
 1640+ 1  0678	B6 FF 12	        cjne    @r0,#0ffh,te_h0
 1641:				        te_mf   @r1,te_h0
 1642+ 1  067B	77 01		        mov     @r1,#001h
 1643+ 1  067D	17		        dec     @r1
 1644+ 1  067E	B7 00 0C	        cjne    @r1,#000h,te_h0
 1645+ 1  0681	C3		        clr     c
 1646+ 1  0682	17		        dec     @r1
 1647+ 1  0683	40 08		        jc      te_h0
 1648+ 1  0685	B7 FF 05	        cjne    @r1,#0ffh,te_h0
 1649:
 1650:				        eot     'h',te_h0
 1651+ 1			        putc    #'h'
 1652+ 2  0688			??0161:
 1653+ 2			        ;jnb     SCON.1,putc_loop
 1654+ 2			        ;clr     SCON.1
 1655+ 2  0688	75 99 68	        mov     SBUF,#'h'
 1656+ 1  068B	80 06		        sjmp    ??0160
 1657+ 1  068D			te_h0:  putc    #'?'
 1658+ 2  068D			??0162:
 1659+ 2			        ;jnb     SCON.1,putc_loop
 1660+ 2			        ;clr     SCON.1
 1661+ 2  068D	75 99 3F	        mov     SBUF,#'?'
 1662+ 1  0690	75 6E 01	        mov     fail,#001h
 1663+ 1  0693			??0160:
 1664:
 1665:	  0693	75 39 01	        mov     039h,#001h
 1666:	  0696	15 39		        dec     039h
 1667:	  0698	E5 39		        mov     a,039h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 31



 Line  I  Addr  Code            Source

 1668:	  069A	B4 00 12	        cjne    a,#00h,te_i0
 1669:	  069D	75 39 00	        mov     039h,#000h
 1670:	  06A0	C3		        clr     c
 1671:	  06A1	15 39		        dec     039h
 1672:	  06A3	40 0A		        jc      te_i0
 1673:	  06A5	E5 39		        mov     a,039h
 1674:	  06A7	B4 FF 05	        cjne    a,#0ffh,te_i0
 1675:
 1676:				        eot     'i',te_i0
 1677+ 1			        putc    #'i'
 1678+ 2  06AA			??0164:
 1679+ 2			        ;jnb     SCON.1,putc_loop
 1680+ 2			        ;clr     SCON.1
 1681+ 2  06AA	75 99 69	        mov     SBUF,#'i'
 1682+ 1  06AD	80 06		        sjmp    ??0163
 1683+ 1  06AF			te_i0:  putc    #'?'
 1684+ 2  06AF			??0165:
 1685+ 2			        ;jnb     SCON.1,putc_loop
 1686+ 2			        ;clr     SCON.1
 1687+ 2  06AF	75 99 3F	        mov     SBUF,#'?'
 1688+ 1  06B2	75 6E 01	        mov     fail,#001h
 1689+ 1  06B5			??0163:
 1690:
 1691:				        put_crlf                    ; end of test series
 1692+ 1			        putc    #13
 1693+ 2  06B5			??0166:
 1694+ 2			        ;jnb     SCON.1,putc_loop
 1695+ 2			        ;clr     SCON.1
 1696+ 2  06B5	75 99 0D	        mov     SBUF,#13
 1697+ 1			        putc    #10
 1698+ 2  06B8			??0167:
 1699+ 2			        ;jnb     SCON.1,putc_loop
 1700+ 2			        ;clr     SCON.1
 1701+ 2  06B8	75 99 0A	        mov     SBUF,#10
 1702:
 1703:
 1704:				        ;-- Test series F ------------------------------------------------------
 1705:				        ;
 1706:				        ; a.- <MOV dir,Rn>
 1707:				        ; b.- <MOV dir,@Ri>
 1708:				        ; c.- <MOV dir,dir>
 1709:				        ; d.- <MOV Rn,dir>
 1710:				        ; e.- <MOV @Ri,dir>
 1711:				        ; f.- <MOV Rn,A>
 1712:				        ; g.- <MOV @Ri,A>
 1713:				        ; h.- <MOV dir,A>
 1714:
 1715:
 1716:				        putc    #'F'                ; start of test series
 1717+ 1  06BB			??0168:
 1718+ 1			        ;jnb     SCON.1,putc_loop
 1719+ 1			        ;clr     SCON.1
 1720+ 1  06BB	75 99 46	        mov     SBUF,#'F'
 1721:
 1722:				tf_ma   macro   rn, n, error_loc
 1723:				        mov     rn,#(091h+n)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 32



 Line  I  Addr  Code            Source

 1724:				        mov     039h,rn
 1725:				        mov     a,039h
 1726:				        cjne    a,#(091h+n),error_loc
 1727:				        endm
 1728:
 1729:				        tf_ma   r0,0,tf_a0
 1730+ 1  06BE	78 91		        mov     r0,#(091h+0)
 1731+ 1  06C0	88 39		        mov     039h,r0
 1732+ 1  06C2	E5 39		        mov     a,039h
 1733+ 1  06C4	B4 91 44	        cjne    a,#(091h+0),tf_a0
 1734:				        tf_ma   r1,1,tf_a0
 1735+ 1  06C7	79 92		        mov     r1,#(091h+1)
 1736+ 1  06C9	89 39		        mov     039h,r1
 1737+ 1  06CB	E5 39		        mov     a,039h
 1738+ 1  06CD	B4 92 3B	        cjne    a,#(091h+1),tf_a0
 1739:				        tf_ma   r2,2,tf_a0
 1740+ 1  06D0	7A 93		        mov     r2,#(091h+2)
 1741+ 1  06D2	8A 39		        mov     039h,r2
 1742+ 1  06D4	E5 39		        mov     a,039h
 1743+ 1  06D6	B4 93 32	        cjne    a,#(091h+2),tf_a0
 1744:				        tf_ma   r3,3,tf_a0
 1745+ 1  06D9	7B 94		        mov     r3,#(091h+3)
 1746+ 1  06DB	8B 39		        mov     039h,r3
 1747+ 1  06DD	E5 39		        mov     a,039h
 1748+ 1  06DF	B4 94 29	        cjne    a,#(091h+3),tf_a0
 1749:				        tf_ma   r4,4,tf_a0
 1750+ 1  06E2	7C 95		        mov     r4,#(091h+4)
 1751+ 1  06E4	8C 39		        mov     039h,r4
 1752+ 1  06E6	E5 39		        mov     a,039h
 1753+ 1  06E8	B4 95 20	        cjne    a,#(091h+4),tf_a0
 1754:				        tf_ma   r5,5,tf_a0
 1755+ 1  06EB	7D 96		        mov     r5,#(091h+5)
 1756+ 1  06ED	8D 39		        mov     039h,r5
 1757+ 1  06EF	E5 39		        mov     a,039h
 1758+ 1  06F1	B4 96 17	        cjne    a,#(091h+5),tf_a0
 1759:				        tf_ma   r6,6,tf_a0
 1760+ 1  06F4	7E 97		        mov     r6,#(091h+6)
 1761+ 1  06F6	8E 39		        mov     039h,r6
 1762+ 1  06F8	E5 39		        mov     a,039h
 1763+ 1  06FA	B4 97 0E	        cjne    a,#(091h+6),tf_a0
 1764:				        tf_ma   r7,7,tf_a0
 1765+ 1  06FD	7F 98		        mov     r7,#(091h+7)
 1766+ 1  06FF	8F 39		        mov     039h,r7
 1767+ 1  0701	E5 39		        mov     a,039h
 1768+ 1  0703	B4 98 05	        cjne    a,#(091h+7),tf_a0
 1769:
 1770:				        eot     'a',tf_a0
 1771+ 1			        putc    #'a'
 1772+ 2  0706			??0170:
 1773+ 2			        ;jnb     SCON.1,putc_loop
 1774+ 2			        ;clr     SCON.1
 1775+ 2  0706	75 99 61	        mov     SBUF,#'a'
 1776+ 1  0709	80 06		        sjmp    ??0169
 1777+ 1  070B			tf_a0:  putc    #'?'
 1778+ 2  070B			??0171:
 1779+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 33



 Line  I  Addr  Code            Source

 1780+ 2			        ;clr     SCON.1
 1781+ 2  070B	75 99 3F	        mov     SBUF,#'?'
 1782+ 1  070E	75 6E 01	        mov     fail,#001h
 1783+ 1  0711			??0169:
 1784:
 1785:				        tf_ma   @r0,0,tf_b0
 1786+ 1  0711	76 91		        mov     @r0,#(091h+0)
 1787+ 1  0713	86 39		        mov     039h,@r0
 1788+ 1  0715	E5 39		        mov     a,039h
 1789+ 1  0717	B4 91 0E	        cjne    a,#(091h+0),tf_b0
 1790:				        tf_ma   @r1,1,tf_b0
 1791+ 1  071A	77 92		        mov     @r1,#(091h+1)
 1792+ 1  071C	87 39		        mov     039h,@r1
 1793+ 1  071E	E5 39		        mov     a,039h
 1794+ 1  0720	B4 92 05	        cjne    a,#(091h+1),tf_b0
 1795:
 1796:				        eot     'b',tf_b0
 1797+ 1			        putc    #'b'
 1798+ 2  0723			??0173:
 1799+ 2			        ;jnb     SCON.1,putc_loop
 1800+ 2			        ;clr     SCON.1
 1801+ 2  0723	75 99 62	        mov     SBUF,#'b'
 1802+ 1  0726	80 06		        sjmp    ??0172
 1803+ 1  0728			tf_b0:  putc    #'?'
 1804+ 2  0728			??0174:
 1805+ 2			        ;jnb     SCON.1,putc_loop
 1806+ 2			        ;clr     SCON.1
 1807+ 2  0728	75 99 3F	        mov     SBUF,#'?'
 1808+ 1  072B	75 6E 01	        mov     fail,#001h
 1809+ 1  072E			??0172:
 1810:
 1811:	  072E	75 31 91	        mov     031h,#091h
 1812:	  0731	85 31 39	        mov     039h,031h
 1813:	  0734	E5 39		        mov     a,039h
 1814:	  0736	B4 91 05	        cjne    a,#091h,tf_c0
 1815:
 1816:				        eot     'c',tf_c0
 1817+ 1			        putc    #'c'
 1818+ 2  0739			??0176:
 1819+ 2			        ;jnb     SCON.1,putc_loop
 1820+ 2			        ;clr     SCON.1
 1821+ 2  0739	75 99 63	        mov     SBUF,#'c'
 1822+ 1  073C	80 06		        sjmp    ??0175
 1823+ 1  073E			tf_c0:  putc    #'?'
 1824+ 2  073E			??0177:
 1825+ 2			        ;jnb     SCON.1,putc_loop
 1826+ 2			        ;clr     SCON.1
 1827+ 2  073E	75 99 3F	        mov     SBUF,#'?'
 1828+ 1  0741	75 6E 01	        mov     fail,#001h
 1829+ 1  0744			??0175:
 1830:
 1831:				tf_md   macro   rn, n, error_loc
 1832:				        mov     039h,#(091h+n)
 1833:				        mov     rn,039h
 1834:				        cjne    rn,#(091h+n),error_loc
 1835:				        endm

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 34



 Line  I  Addr  Code            Source

 1836:
 1837:				        tf_md   r0,0,tf_d0
 1838+ 1  0744	75 39 91	        mov     039h,#(091h+0)
 1839+ 1  0747	A8 39		        mov     r0,039h
 1840+ 1  0749	B8 91 3D	        cjne    r0,#(091h+0),tf_d0
 1841:				        tf_md   r1,1,tf_d0
 1842+ 1  074C	75 39 92	        mov     039h,#(091h+1)
 1843+ 1  074F	A9 39		        mov     r1,039h
 1844+ 1  0751	B9 92 35	        cjne    r1,#(091h+1),tf_d0
 1845:				        tf_md   r2,2,tf_d0
 1846+ 1  0754	75 39 93	        mov     039h,#(091h+2)
 1847+ 1  0757	AA 39		        mov     r2,039h
 1848+ 1  0759	BA 93 2D	        cjne    r2,#(091h+2),tf_d0
 1849:				        tf_md   r3,3,tf_d0
 1850+ 1  075C	75 39 94	        mov     039h,#(091h+3)
 1851+ 1  075F	AB 39		        mov     r3,039h
 1852+ 1  0761	BB 94 25	        cjne    r3,#(091h+3),tf_d0
 1853:				        tf_md   r4,4,tf_d0
 1854+ 1  0764	75 39 95	        mov     039h,#(091h+4)
 1855+ 1  0767	AC 39		        mov     r4,039h
 1856+ 1  0769	BC 95 1D	        cjne    r4,#(091h+4),tf_d0
 1857:				        tf_md   r5,5,tf_d0
 1858+ 1  076C	75 39 96	        mov     039h,#(091h+5)
 1859+ 1  076F	AD 39		        mov     r5,039h
 1860+ 1  0771	BD 96 15	        cjne    r5,#(091h+5),tf_d0
 1861:				        tf_md   r6,6,tf_d0
 1862+ 1  0774	75 39 97	        mov     039h,#(091h+6)
 1863+ 1  0777	AE 39		        mov     r6,039h
 1864+ 1  0779	BE 97 0D	        cjne    r6,#(091h+6),tf_d0
 1865:				        tf_md   r7,7,tf_d0
 1866+ 1  077C	75 39 98	        mov     039h,#(091h+7)
 1867+ 1  077F	AF 39		        mov     r7,039h
 1868+ 1  0781	BF 98 05	        cjne    r7,#(091h+7),tf_d0
 1869:
 1870:				        eot     'd',tf_d0
 1871+ 1			        putc    #'d'
 1872+ 2  0784			??0179:
 1873+ 2			        ;jnb     SCON.1,putc_loop
 1874+ 2			        ;clr     SCON.1
 1875+ 2  0784	75 99 64	        mov     SBUF,#'d'
 1876+ 1  0787	80 06		        sjmp    ??0178
 1877+ 1  0789			tf_d0:  putc    #'?'
 1878+ 2  0789			??0180:
 1879+ 2			        ;jnb     SCON.1,putc_loop
 1880+ 2			        ;clr     SCON.1
 1881+ 2  0789	75 99 3F	        mov     SBUF,#'?'
 1882+ 1  078C	75 6E 01	        mov     fail,#001h
 1883+ 1  078F			??0178:
 1884:
 1885:	  078F	78 60		        mov     r0,#dir0
 1886:	  0791	79 31		        mov     r1,#031h
 1887:				        tf_md   @r0,0,tf_e0
 1888+ 1  0793	75 39 91	        mov     039h,#(091h+0)
 1889+ 1  0796	A6 39		        mov     @r0,039h
 1890+ 1  0798	B6 91 0D	        cjne    @r0,#(091h+0),tf_e0
 1891:				        tf_md   @r1,1,tf_e0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 35



 Line  I  Addr  Code            Source

 1892+ 1  079B	75 39 92	        mov     039h,#(091h+1)
 1893+ 1  079E	A7 39		        mov     @r1,039h
 1894+ 1  07A0	B7 92 05	        cjne    @r1,#(091h+1),tf_e0
 1895:
 1896:				        eot     'e',tf_e0
 1897+ 1			        putc    #'e'
 1898+ 2  07A3			??0182:
 1899+ 2			        ;jnb     SCON.1,putc_loop
 1900+ 2			        ;clr     SCON.1
 1901+ 2  07A3	75 99 65	        mov     SBUF,#'e'
 1902+ 1  07A6	80 06		        sjmp    ??0181
 1903+ 1  07A8			tf_e0:  putc    #'?'
 1904+ 2  07A8			??0183:
 1905+ 2			        ;jnb     SCON.1,putc_loop
 1906+ 2			        ;clr     SCON.1
 1907+ 2  07A8	75 99 3F	        mov     SBUF,#'?'
 1908+ 1  07AB	75 6E 01	        mov     fail,#001h
 1909+ 1  07AE			??0181:
 1910:
 1911:				tf_mf   macro   rn, n, error_loc
 1912:				        mov     a,#(091h+n)
 1913:				        mov     rn,a
 1914:				        cjne    rn,#(091h+n),error_loc
 1915:				        endm
 1916:
 1917:				        tf_mf   r0,0,tf_f0
 1918+ 1  07AE	74 91		        mov     a,#(091h+0)
 1919+ 1  07B0	F8		        mov     r0,a
 1920+ 1  07B1	B8 91 2F	        cjne    r0,#(091h+0),tf_f0
 1921:				        tf_mf   r1,1,tf_f0
 1922+ 1  07B4	74 92		        mov     a,#(091h+1)
 1923+ 1  07B6	F9		        mov     r1,a
 1924+ 1  07B7	B9 92 29	        cjne    r1,#(091h+1),tf_f0
 1925:				        tf_mf   r2,2,tf_f0
 1926+ 1  07BA	74 93		        mov     a,#(091h+2)
 1927+ 1  07BC	FA		        mov     r2,a
 1928+ 1  07BD	BA 93 23	        cjne    r2,#(091h+2),tf_f0
 1929:				        tf_mf   r3,3,tf_f0
 1930+ 1  07C0	74 94		        mov     a,#(091h+3)
 1931+ 1  07C2	FB		        mov     r3,a
 1932+ 1  07C3	BB 94 1D	        cjne    r3,#(091h+3),tf_f0
 1933:				        tf_mf   r4,4,tf_f0
 1934+ 1  07C6	74 95		        mov     a,#(091h+4)
 1935+ 1  07C8	FC		        mov     r4,a
 1936+ 1  07C9	BC 95 17	        cjne    r4,#(091h+4),tf_f0
 1937:				        tf_mf   r5,5,tf_f0
 1938+ 1  07CC	74 96		        mov     a,#(091h+5)
 1939+ 1  07CE	FD		        mov     r5,a
 1940+ 1  07CF	BD 96 11	        cjne    r5,#(091h+5),tf_f0
 1941:				        tf_mf   r6,6,tf_f0
 1942+ 1  07D2	74 97		        mov     a,#(091h+6)
 1943+ 1  07D4	FE		        mov     r6,a
 1944+ 1  07D5	BE 97 0B	        cjne    r6,#(091h+6),tf_f0
 1945:				        tf_mf   r7,7,tf_f0
 1946+ 1  07D8	74 98		        mov     a,#(091h+7)
 1947+ 1  07DA	FF		        mov     r7,a

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 36



 Line  I  Addr  Code            Source

 1948+ 1  07DB	BF 98 05	        cjne    r7,#(091h+7),tf_f0
 1949:
 1950:				        eot     'f',tf_f0
 1951+ 1			        putc    #'f'
 1952+ 2  07DE			??0185:
 1953+ 2			        ;jnb     SCON.1,putc_loop
 1954+ 2			        ;clr     SCON.1
 1955+ 2  07DE	75 99 66	        mov     SBUF,#'f'
 1956+ 1  07E1	80 06		        sjmp    ??0184
 1957+ 1  07E3			tf_f0:  putc    #'?'
 1958+ 2  07E3			??0186:
 1959+ 2			        ;jnb     SCON.1,putc_loop
 1960+ 2			        ;clr     SCON.1
 1961+ 2  07E3	75 99 3F	        mov     SBUF,#'?'
 1962+ 1  07E6	75 6E 01	        mov     fail,#001h
 1963+ 1  07E9			??0184:
 1964:
 1965:	  07E9	78 60		        mov     r0,#dir0
 1966:	  07EB	79 31		        mov     r1,#031h
 1967:				        tf_mf   @r0,0,tf_g0
 1968+ 1  07ED	74 91		        mov     a,#(091h+0)
 1969+ 1  07EF	F6		        mov     @r0,a
 1970+ 1  07F0	B6 91 0B	        cjne    @r0,#(091h+0),tf_g0
 1971:				        tf_mf   @r1,1,tf_g0
 1972+ 1  07F3	74 92		        mov     a,#(091h+1)
 1973+ 1  07F5	F7		        mov     @r1,a
 1974+ 1  07F6	B7 92 05	        cjne    @r1,#(091h+1),tf_g0
 1975:
 1976:				        eot     'g',tf_g0
 1977+ 1			        putc    #'g'
 1978+ 2  07F9			??0188:
 1979+ 2			        ;jnb     SCON.1,putc_loop
 1980+ 2			        ;clr     SCON.1
 1981+ 2  07F9	75 99 67	        mov     SBUF,#'g'
 1982+ 1  07FC	80 06		        sjmp    ??0187
 1983+ 1  07FE			tf_g0:  putc    #'?'
 1984+ 2  07FE			??0189:
 1985+ 2			        ;jnb     SCON.1,putc_loop
 1986+ 2			        ;clr     SCON.1
 1987+ 2  07FE	75 99 3F	        mov     SBUF,#'?'
 1988+ 1  0801	75 6E 01	        mov     fail,#001h
 1989+ 1  0804			??0187:
 1990:
 1991:	  0804	75 60 79	        mov     dir0,#079h
 1992:	  0807	78 00		        mov     r0,#000h
 1993:	  0809	74 34		        mov     a,#34h
 1994:	  080B	F5 60		        mov     dir0,a
 1995:	  080D	A8 60		        mov     r0,dir0
 1996:	  080F	B8 34 05	        cjne    r0,#034h,tf_h0
 1997:
 1998:				        eot     'h',tf_h0
 1999+ 1			        putc    #'h'
 2000+ 2  0812			??0191:
 2001+ 2			        ;jnb     SCON.1,putc_loop
 2002+ 2			        ;clr     SCON.1
 2003+ 2  0812	75 99 68	        mov     SBUF,#'h'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 37



 Line  I  Addr  Code            Source

 2004+ 1  0815	80 06		        sjmp    ??0190
 2005+ 1  0817			tf_h0:  putc    #'?'
 2006+ 2  0817			??0192:
 2007+ 2			        ;jnb     SCON.1,putc_loop
 2008+ 2			        ;clr     SCON.1
 2009+ 2  0817	75 99 3F	        mov     SBUF,#'?'
 2010+ 1  081A	75 6E 01	        mov     fail,#001h
 2011+ 1  081D			??0190:
 2012:
 2013:	  081D	74 00		        mov     a,#000h
 2014:
 2015:	  081F	79 31		        mov     r1,#031h
 2016:	  0821	75 31 56	        mov     031h,#056h
 2017:	  0824	78 60		        mov     r0,#dir0
 2018:	  0826	75 60 34	        mov     dir0,#034h
 2019:	  0829	E6		        mov     a,@r0
 2020:	  082A	B4 34 09	        cjne    a,#034h,tf_i0
 2021:	  082D	E7		        mov     a,@r1
 2022:	  082E	B4 56 05	        cjne    a,#056h,tf_i0
 2023:
 2024:				        eot     'i',tf_i0
 2025+ 1			        putc    #'i'
 2026+ 2  0831			??0194:
 2027+ 2			        ;jnb     SCON.1,putc_loop
 2028+ 2			        ;clr     SCON.1
 2029+ 2  0831	75 99 69	        mov     SBUF,#'i'
 2030+ 1  0834	80 06		        sjmp    ??0193
 2031+ 1  0836			tf_i0:  putc    #'?'
 2032+ 2  0836			??0195:
 2033+ 2			        ;jnb     SCON.1,putc_loop
 2034+ 2			        ;clr     SCON.1
 2035+ 2  0836	75 99 3F	        mov     SBUF,#'?'
 2036+ 1  0839	75 6E 01	        mov     fail,#001h
 2037+ 1  083C			??0193:
 2038:
 2039:				        put_crlf                    ; end of test series
 2040+ 1			        putc    #13
 2041+ 2  083C			??0196:
 2042+ 2			        ;jnb     SCON.1,putc_loop
 2043+ 2			        ;clr     SCON.1
 2044+ 2  083C	75 99 0D	        mov     SBUF,#13
 2045+ 1			        putc    #10
 2046+ 2  083F			??0197:
 2047+ 2			        ;jnb     SCON.1,putc_loop
 2048+ 2			        ;clr     SCON.1
 2049+ 2  083F	75 99 0A	        mov     SBUF,#10
 2050:
 2051:
 2052:				        ;-- Test series G ------------------------------------------------------
 2053:				        ; Note the XCG tests are specially lame even within this context.
 2054:				        ; a.- <CLR A>, <CPL A>, <SWAP A>
 2055:				        ; b.- <INC DPTR>
 2056:				        ; c.- <XCH A,dir>
 2057:				        ; d.- <XCH A,@Ri>
 2058:				        ; e.- <XCH A,Rn>
 2059:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 38



 Line  I  Addr  Code            Source

 2060:				        putc    #'G'                ; start of test series
 2061+ 1  0842			??0198:
 2062+ 1			        ;jnb     SCON.1,putc_loop
 2063+ 1			        ;clr     SCON.1
 2064+ 1  0842	75 99 47	        mov     SBUF,#'G'
 2065:
 2066:	  0845	74 55		        mov     a,#055h
 2067:	  0847	E4		        clr     a
 2068:	  0848	70 11		        jnz     tg_a0
 2069:
 2070:	  084A	74 55		        mov     a,#055h
 2071:	  084C	F4		        cpl     a
 2072:	  084D	B4 AA 0B	        cjne    a,#0aah,tg_a0
 2073:
 2074:	  0850	74 97		        mov     a,#097h
 2075:	  0852	C4		        swap    a
 2076:	  0853	B4 79 05	        cjne    a,#079h,tg_a0
 2077:
 2078:				        eot     'a',tg_a0
 2079+ 1			        putc    #'a'
 2080+ 2  0856			??0200:
 2081+ 2			        ;jnb     SCON.1,putc_loop
 2082+ 2			        ;clr     SCON.1
 2083+ 2  0856	75 99 61	        mov     SBUF,#'a'
 2084+ 1  0859	80 06		        sjmp    ??0199
 2085+ 1  085B			tg_a0:  putc    #'?'
 2086+ 2  085B			??0201:
 2087+ 2			        ;jnb     SCON.1,putc_loop
 2088+ 2			        ;clr     SCON.1
 2089+ 2  085B	75 99 3F	        mov     SBUF,#'?'
 2090+ 1  085E	75 6E 01	        mov     fail,#001h
 2091+ 1  0861			??0199:
 2092:
 2093:	  0861	75 83 12	        mov     DPH,#012h
 2094:	  0864	75 82 FD	        mov     DPL,#0fdh
 2095:	  0867	A3		        inc     dptr
 2096:	  0868	E5 83		        mov     a,DPH
 2097:	  086A	B4 12 20	        cjne    a,#012h,tg_b0
 2098:	  086D	E5 82		        mov     a,DPL
 2099:	  086F	B4 FE 1B	        cjne    a,#0feh,tg_b0
 2100:	  0872	A3		        inc     dptr
 2101:	  0873	E5 83		        mov     a,DPH
 2102:	  0875	B4 12 15	        cjne    a,#012h,tg_b0
 2103:	  0878	E5 82		        mov     a,DPL
 2104:	  087A	B4 FF 10	        cjne    a,#0ffh,tg_b0
 2105:	  087D	A3		        inc     dptr
 2106:	  087E	E5 83		        mov     a,DPH
 2107:	  0880	B4 13 0A	        cjne    a,#013h,tg_b0
 2108:	  0883	E5 82		        mov     a,DPL
 2109:	  0885	B4 00 05	        cjne    a,#000h,tg_b0
 2110:
 2111:				        eot     'b',tg_b0
 2112+ 1			        putc    #'b'
 2113+ 2  0888			??0203:
 2114+ 2			        ;jnb     SCON.1,putc_loop
 2115+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 39



 Line  I  Addr  Code            Source

 2116+ 2  0888	75 99 62	        mov     SBUF,#'b'
 2117+ 1  088B	80 06		        sjmp    ??0202
 2118+ 1  088D			tg_b0:  putc    #'?'
 2119+ 2  088D			??0204:
 2120+ 2			        ;jnb     SCON.1,putc_loop
 2121+ 2			        ;clr     SCON.1
 2122+ 2  088D	75 99 3F	        mov     SBUF,#'?'
 2123+ 1  0890	75 6E 01	        mov     fail,#001h
 2124+ 1  0893			??0202:
 2125:
 2126:				        ; c.- <XCH A,dir>
 2127:	  0893	74 34		        mov     a,#34h
 2128:	  0895	75 13 57	        mov     13h,#57h
 2129:	  0898	C5 13		        xch     a,13h
 2130:	  089A	B4 57 0A	        cjne    a,#57h,tg_c0
 2131:	  089D	E5 13		        mov     a,13h
 2132:	  089F	B4 34 05	        cjne    a,#34h,tg_c0
 2133:
 2134:				        eot     'c',tg_c0
 2135+ 1			        putc    #'c'
 2136+ 2  08A2			??0206:
 2137+ 2			        ;jnb     SCON.1,putc_loop
 2138+ 2			        ;clr     SCON.1
 2139+ 2  08A2	75 99 63	        mov     SBUF,#'c'
 2140+ 1  08A5	80 06		        sjmp    ??0205
 2141+ 1  08A7			tg_c0:  putc    #'?'
 2142+ 2  08A7			??0207:
 2143+ 2			        ;jnb     SCON.1,putc_loop
 2144+ 2			        ;clr     SCON.1
 2145+ 2  08A7	75 99 3F	        mov     SBUF,#'?'
 2146+ 1  08AA	75 6E 01	        mov     fail,#001h
 2147+ 1  08AD			??0205:
 2148:
 2149:				        ; d.- <XCH A,@Ri>
 2150:	  08AD	74 91		        mov     a,#91h
 2151:	  08AF	75 29 78	        mov     29h,#78h
 2152:	  08B2	78 29		        mov     r0,#29h
 2153:	  08B4	C6		        xch     a,@r0
 2154:	  08B5	B4 78 1A	        cjne    a,#78h,tg_d0
 2155:	  08B8	E5 29		        mov     a,29h
 2156:	  08BA	B4 91 15	        cjne    a,#91h,tg_d0
 2157:
 2158:	  08BD	74 92		        mov     a,#92h
 2159:	  08BF	75 2A 78	        mov     2ah,#78h
 2160:	  08C2	79 2A		        mov     r1,#2ah
 2161:	  08C4	C7		        xch     a,@r1
 2162:	  08C5	B4 78 0A	        cjne    a,#78h,tg_d0
 2163:	  08C8	E5 2A		        mov     a,2ah
 2164:	  08CA	B4 92 05	        cjne    a,#92h,tg_d0
 2165:
 2166:				        eot     'd',tg_d0
 2167+ 1			        putc    #'d'
 2168+ 2  08CD			??0209:
 2169+ 2			        ;jnb     SCON.1,putc_loop
 2170+ 2			        ;clr     SCON.1
 2171+ 2  08CD	75 99 64	        mov     SBUF,#'d'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 40



 Line  I  Addr  Code            Source

 2172+ 1  08D0	80 06		        sjmp    ??0208
 2173+ 1  08D2			tg_d0:  putc    #'?'
 2174+ 2  08D2			??0210:
 2175+ 2			        ;jnb     SCON.1,putc_loop
 2176+ 2			        ;clr     SCON.1
 2177+ 2  08D2	75 99 3F	        mov     SBUF,#'?'
 2178+ 1  08D5	75 6E 01	        mov     fail,#001h
 2179+ 1  08D8			??0208:
 2180:
 2181:				        ; e.- <XCHG A,Rn>
 2182:
 2183:				tg_ma   macro   rn, n, error_loc
 2184:				        mov     a,#(0c1h+n)
 2185:				        mov     rn,#(042h+n)
 2186:				        xch     a,rn
 2187:				        cjne    rn,#(0c1h+n),error_loc
 2188:				        cjne    a,#(042h+n),error_loc
 2189:				        endm
 2190:
 2191:				        tg_ma   r0, 19, tg_e0
 2192+ 1  08D8	74 D4		        mov     a,#(0c1h+19)
 2193+ 1  08DA	78 55		        mov     r0,#(042h+19)
 2194+ 1  08DC	C8		        xch     a,r0
 2195+ 1  08DD	B8 D4 55	        cjne    r0,#(0c1h+19),tg_e0
 2196+ 1  08E0	B4 55 52	        cjne    a,#(042h+19),tg_e0
 2197:				        tg_ma   r1, 18, tg_e0
 2198+ 1  08E3	74 D3		        mov     a,#(0c1h+18)
 2199+ 1  08E5	79 54		        mov     r1,#(042h+18)
 2200+ 1  08E7	C9		        xch     a,r1
 2201+ 1  08E8	B9 D3 4A	        cjne    r1,#(0c1h+18),tg_e0
 2202+ 1  08EB	B4 54 47	        cjne    a,#(042h+18),tg_e0
 2203:				        tg_ma   r2, 17, tg_e0
 2204+ 1  08EE	74 D2		        mov     a,#(0c1h+17)
 2205+ 1  08F0	7A 53		        mov     r2,#(042h+17)
 2206+ 1  08F2	CA		        xch     a,r2
 2207+ 1  08F3	BA D2 3F	        cjne    r2,#(0c1h+17),tg_e0
 2208+ 1  08F6	B4 53 3C	        cjne    a,#(042h+17),tg_e0
 2209:				        tg_ma   r3, 16, tg_e0
 2210+ 1  08F9	74 D1		        mov     a,#(0c1h+16)
 2211+ 1  08FB	7B 52		        mov     r3,#(042h+16)
 2212+ 1  08FD	CB		        xch     a,r3
 2213+ 1  08FE	BB D1 34	        cjne    r3,#(0c1h+16),tg_e0
 2214+ 1  0901	B4 52 31	        cjne    a,#(042h+16),tg_e0
 2215:				        tg_ma   r4, 15, tg_e0
 2216+ 1  0904	74 D0		        mov     a,#(0c1h+15)
 2217+ 1  0906	7C 51		        mov     r4,#(042h+15)
 2218+ 1  0908	CC		        xch     a,r4
 2219+ 1  0909	BC D0 29	        cjne    r4,#(0c1h+15),tg_e0
 2220+ 1  090C	B4 51 26	        cjne    a,#(042h+15),tg_e0
 2221:				        tg_ma   r5, 14, tg_e0
 2222+ 1  090F	74 CF		        mov     a,#(0c1h+14)
 2223+ 1  0911	7D 50		        mov     r5,#(042h+14)
 2224+ 1  0913	CD		        xch     a,r5
 2225+ 1  0914	BD CF 1E	        cjne    r5,#(0c1h+14),tg_e0
 2226+ 1  0917	B4 50 1B	        cjne    a,#(042h+14),tg_e0
 2227:				        tg_ma   r6, 13, tg_e0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 41



 Line  I  Addr  Code            Source

 2228+ 1  091A	74 CE		        mov     a,#(0c1h+13)
 2229+ 1  091C	7E 4F		        mov     r6,#(042h+13)
 2230+ 1  091E	CE		        xch     a,r6
 2231+ 1  091F	BE CE 13	        cjne    r6,#(0c1h+13),tg_e0
 2232+ 1  0922	B4 4F 10	        cjne    a,#(042h+13),tg_e0
 2233:				        tg_ma   r7, 12, tg_e0
 2234+ 1  0925	74 CD		        mov     a,#(0c1h+12)
 2235+ 1  0927	7F 4E		        mov     r7,#(042h+12)
 2236+ 1  0929	CF		        xch     a,r7
 2237+ 1  092A	BF CD 08	        cjne    r7,#(0c1h+12),tg_e0
 2238+ 1  092D	B4 4E 05	        cjne    a,#(042h+12),tg_e0
 2239:
 2240:				        eot     'e',tg_e0
 2241+ 1			        putc    #'e'
 2242+ 2  0930			??0212:
 2243+ 2			        ;jnb     SCON.1,putc_loop
 2244+ 2			        ;clr     SCON.1
 2245+ 2  0930	75 99 65	        mov     SBUF,#'e'
 2246+ 1  0933	80 06		        sjmp    ??0211
 2247+ 1  0935			tg_e0:  putc    #'?'
 2248+ 2  0935			??0213:
 2249+ 2			        ;jnb     SCON.1,putc_loop
 2250+ 2			        ;clr     SCON.1
 2251+ 2  0935	75 99 3F	        mov     SBUF,#'?'
 2252+ 1  0938	75 6E 01	        mov     fail,#001h
 2253+ 1  093B			??0211:
 2254:
 2255:
 2256:				        put_crlf                    ; end of test series
 2257+ 1			        putc    #13
 2258+ 2  093B			??0214:
 2259+ 2			        ;jnb     SCON.1,putc_loop
 2260+ 2			        ;clr     SCON.1
 2261+ 2  093B	75 99 0D	        mov     SBUF,#13
 2262+ 1			        putc    #10
 2263+ 2  093E			??0215:
 2264+ 2			        ;jnb     SCON.1,putc_loop
 2265+ 2			        ;clr     SCON.1
 2266+ 2  093E	75 99 0A	        mov     SBUF,#10
 2267:
 2268:
 2269:				        ;-- ALU opcode block test ----------------------------------------------
 2270:				        ; This set of macros is used to test families of opcodes, such as ORL,
 2271:				        ; ANL, ADD, etc. with all their addressing modes.
 2272:				        ;
 2273:				        ; a.- <OP A,dir>, <OP A,@Ri>, <OP A, Rn> (n=0,1)
 2274:				        ; b.- <OP A, Rn> (n=2,3)
 2275:				        ; c.- <OP A, Rn> (n=4,5)
 2276:				        ; d.- <OP A, Rn> (n=6,7)
 2277:				        ; e.- <OP dir,#imm>
 2278:				        ; f.- <OP A,#imm>
 2279:				        ; g.- <OP dir,A>
 2280:
 2281:				        ;store psw away for later comparison
 2282:				save_psw macro
 2283:				        mov     saved_psw,PSW

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 42



 Line  I  Addr  Code            Source

 2284:				        endm
 2285:
 2286:				        ; compare flags CY, AC and OV with expected values in <flags>
 2287:				tst_psw macro   flags,error_loc
 2288:				        mov     a,saved_psw
 2289:				        anl     a,#0c4h
 2290:				        xrl     a,#flags
 2291:				        anl     a,#0feh
 2292:				        jnz     error_loc
 2293:				        endm
 2294:
 2295:				        ; Set the CY flag to the value of the lsb of argument <flags>
 2296:				set_cy  macro   flags
 2297:				        local   cy_val
 2298:				cy_val  set     (flags and 1)
 2299:				        if      cy_val eq 1
 2300:				        setb    c
 2301:				        else
 2302:				        clr     c
 2303:				        endif
 2304:				        endm
 2305:
 2306:				        ; Test instruction <op> A, src
 2307:				        ;
 2308:				        ; flags = (<expected PSW> & 0xfe) | <input cy>
 2309:				        ; (P flag result is not tested)
 2310:				top_ma  macro   op,src,error_loc,flags
 2311:				        mov     src,#arg0
 2312:				        mov     a,#arg1
 2313:				        ifnb    <flags>
 2314:				        set_cy  flags
 2315:				        endif
 2316:				        op      a,src
 2317:				        ifnb    <flags>
 2318:				        save_psw
 2319:				        endif
 2320:				        cjne    a,#res,error_loc
 2321:				        ifnb    <flags>
 2322:				        tst_psw <flags>,error_loc
 2323:				        endif
 2324:				        endm
 2325:
 2326:				        ; Test instruction <op> dst, #arg0
 2327:				        ; (<flags> same as top_ma)
 2328:				top_mb  macro   op,dst,error_loc,flags
 2329:				        mov     dst,#arg1
 2330:				        ifnb    <flags>
 2331:				        set_cy  flags
 2332:				        endif
 2333:				        op      dst,#arg0
 2334:				        ifnb    <flags>
 2335:				        save_psw
 2336:				        endif
 2337:				        mov     ACC,dst
 2338:				        cjne    a,#res,error_loc
 2339:				        ifnb    <flags>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 43



 Line  I  Addr  Code            Source

 2340:				        tst_psw <flags>,error_loc
 2341:				        endif
 2342:				        endm
 2343:
 2344:				        ; Test instruction <op> dir, A
 2345:				        ; (<flags> same as top_ma)
 2346:				top_mc  macro   op,error_loc,flags
 2347:				        mov     dir0,#arg0
 2348:				        mov     a,#arg1
 2349:				        ifnb    <flags>
 2350:				        set_cy  flags
 2351:				        endif
 2352:				        op      dir0,a
 2353:				        ifnb    <flags>
 2354:				        save_psw
 2355:				        endif
 2356:				        mov     a,dir0
 2357:				        cjne    a,#res,error_loc
 2358:				        ifnb    <flags>
 2359:				        tst_psw <flags>,error_loc
 2360:				        endif
 2361:				        endm
 2362:
 2363:				        ; Test ALU instruction with all addressing modes.
 2364:				        ; FIXME <op> A, #imm not tested!
 2365:				        ; op : Opcode to be tested
 2366:				        ; a0, a1 : Values used as 1st and 2nd args in all addressing modes
 2367:				        ; r : Expected result
 2368:				        ; am :
 2369:				        ; flags : <Expected PSW value>&0xfe | <input cy>
 2370:				        ; (if the parameter is unused, the macro skips the flag check)
 2371:				tst_alu macro   op,a0,a1,r,am,flags
 2372:				        local   tall_0d
 2373:				        local   tall_0a
 2374:				        local   tall_0b
 2375:				        local   tall_0c
 2376:				        local   tall_1
 2377:				        local   tall_2
 2378:				        local   tall_3
 2379:				        ; Put the argument and result data into variables for easier access
 2380:				        arg0    set a0
 2381:				        arg1    set a1
 2382:				        res     set r
 2383:
 2384:				        ; Test <op> A, dir
 2385:				        top_ma  op,dir0,tall_0a,<flags>
 2386:				        ; Test <op> A, @R0
 2387:				        mov     r0,#dir0
 2388:				        top_ma  op,@r0,tall_0a,<flags>
 2389:				        ; Test <op> A, @R1
 2390:				        mov     r1,#031h
 2391:				        top_ma  op,@r1,tall_0a,<flags>
 2392:
 2393:				        ; Now test <op> A, Rn for n in 0..7
 2394:				        top_ma  op,r0,tall_0a,<flags>
 2395:				        top_ma  op,r1,tall_0a,<flags>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 44



 Line  I  Addr  Code            Source

 2396:
 2397:				        eot     'a',tall_0a
 2398:
 2399:				        top_ma  op,r2,tall_0b,<flags>
 2400:				        top_ma  op,r3,tall_0b,<flags>
 2401:
 2402:				        eot     'b',tall_0b
 2403:
 2404:				        top_ma  op,r4,tall_0c,<flags>
 2405:				        top_ma  op,r5,tall_0c,<flags>
 2406:
 2407:				        eot     'c',tall_0c
 2408:
 2409:				        top_ma  op,r6,tall_0d,<flags>
 2410:				        top_ma  op,r7,tall_0d,<flags>
 2411:
 2412:				        eot     'd',tall_0d
 2413:				        ; Ok, <op> A, {dir | @Ri | Rn} done.
 2414:
 2415:				        ; Optionally test immediate addressing modes.
 2416:
 2417:				        if      (am and 1) ne 0
 2418:				        ; Test <op> A, #arg1...
 2419:				        top_mb  op,a,tall_1,<flags>
 2420:				        eot     'e',tall_1
 2421:				        endif
 2422:
 2423:				        if      (am and 2) ne 0
 2424:				        ; ...and <op> dir, #arg1
 2425:				        top_mb  op,dir0,tall_2,<flags>
 2426:				        eot     'f',tall_2
 2427:				        endif
 2428:
 2429:				        ; Optionally test <op> dir, A
 2430:				        if      (am and 4) ne 0
 2431:				        top_mc  op,tall_3,<flags>
 2432:				        eot     'g',tall_3
 2433:				        endif
 2434:
 2435:				        endm
 2436:
 2437:
 2438:				        ;-- Test series H ------------------------------------------------------
 2439:				        ; ANL
 2440:				        ; (See comments for 'ALU opcode block test')
 2441:
 2442:				        putc    #'H'                ; start of test series
 2443+ 1  0941			??0216:
 2444+ 1			        ;jnb     SCON.1,putc_loop
 2445+ 1			        ;clr     SCON.1
 2446+ 1  0941	75 99 48	        mov     SBUF,#'H'
 2447:
 2448:				        tst_alu anl,03ch,099h,018h,07h,
 2449+ 1			        ; Put the argument and result data into variables for easier access
 2450+ 1	N      003C	        arg0    set 03ch
 2451+ 1	N      0099	        arg1    set 099h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 45



 Line  I  Addr  Code            Source

 2452+ 1	N      0018	        res     set 018h
 2453+ 1
 2454+ 1			        ; Test <op> A, dir
 2455+ 1			        top_ma  anl,dir0,??0218,<>
 2456+ 2  0944	75 60 3C	        mov     dir0,#arg0
 2457+ 2  0947	74 99		        mov     a,#arg1
 2458+ 2			        ifnb    <>
 2459+ 2			        set_cy
 2460+ 2			        endif
 2461+ 2  0949	55 60		        anl      a,dir0
 2462+ 2			        ifnb    <>
 2463+ 2			        save_psw
 2464+ 2			        endif
 2465+ 2  094B	B4 18 29	        cjne    a,#res,??0218
 2466+ 2			        ifnb    <>
 2467+ 2			        tst_psw <>,??0218
 2468+ 2			        endif
 2469+ 1			        ; Test <op> A, @R0
 2470+ 1  094E	78 60		        mov     r0,#dir0
 2471+ 1			        top_ma  anl,@r0,??0218,<>
 2472+ 2  0950	76 3C		        mov     @r0,#arg0
 2473+ 2  0952	74 99		        mov     a,#arg1
 2474+ 2			        ifnb    <>
 2475+ 2			        set_cy
 2476+ 2			        endif
 2477+ 2  0954	56		        anl      a,@r0
 2478+ 2			        ifnb    <>
 2479+ 2			        save_psw
 2480+ 2			        endif
 2481+ 2  0955	B4 18 1F	        cjne    a,#res,??0218
 2482+ 2			        ifnb    <>
 2483+ 2			        tst_psw <>,??0218
 2484+ 2			        endif
 2485+ 1			        ; Test <op> A, @R1
 2486+ 1  0958	79 31		        mov     r1,#031h
 2487+ 1			        top_ma  anl,@r1,??0218,<>
 2488+ 2  095A	77 3C		        mov     @r1,#arg0
 2489+ 2  095C	74 99		        mov     a,#arg1
 2490+ 2			        ifnb    <>
 2491+ 2			        set_cy
 2492+ 2			        endif
 2493+ 2  095E	57		        anl      a,@r1
 2494+ 2			        ifnb    <>
 2495+ 2			        save_psw
 2496+ 2			        endif
 2497+ 2  095F	B4 18 15	        cjne    a,#res,??0218
 2498+ 2			        ifnb    <>
 2499+ 2			        tst_psw <>,??0218
 2500+ 2			        endif
 2501+ 1
 2502+ 1			        ; Now test <op> A, Rn for n in 0..7
 2503+ 1			        top_ma  anl,r0,??0218,<>
 2504+ 2  0962	78 3C		        mov     r0,#arg0
 2505+ 2  0964	74 99		        mov     a,#arg1
 2506+ 2			        ifnb    <>
 2507+ 2			        set_cy

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 46



 Line  I  Addr  Code            Source

 2508+ 2			        endif
 2509+ 2  0966	58		        anl      a,r0
 2510+ 2			        ifnb    <>
 2511+ 2			        save_psw
 2512+ 2			        endif
 2513+ 2  0967	B4 18 0D	        cjne    a,#res,??0218
 2514+ 2			        ifnb    <>
 2515+ 2			        tst_psw <>,??0218
 2516+ 2			        endif
 2517+ 1			        top_ma  anl,r1,??0218,<>
 2518+ 2  096A	79 3C		        mov     r1,#arg0
 2519+ 2  096C	74 99		        mov     a,#arg1
 2520+ 2			        ifnb    <>
 2521+ 2			        set_cy
 2522+ 2			        endif
 2523+ 2  096E	59		        anl      a,r1
 2524+ 2			        ifnb    <>
 2525+ 2			        save_psw
 2526+ 2			        endif
 2527+ 2  096F	B4 18 05	        cjne    a,#res,??0218
 2528+ 2			        ifnb    <>
 2529+ 2			        tst_psw <>,??0218
 2530+ 2			        endif
 2531+ 1
 2532+ 1			        eot     'a',??0218
 2533+ 2			        putc    #'a'
 2534+ 3  0972			??0225:
 2535+ 3			        ;jnb     SCON.1,putc_loop
 2536+ 3			        ;clr     SCON.1
 2537+ 3  0972	75 99 61	        mov     SBUF,#'a'
 2538+ 2  0975	80 06		        sjmp    ??0224
 2539+ 2  0977			??0218:  putc    #'?'
 2540+ 3  0977			??0226:
 2541+ 3			        ;jnb     SCON.1,putc_loop
 2542+ 3			        ;clr     SCON.1
 2543+ 3  0977	75 99 3F	        mov     SBUF,#'?'
 2544+ 2  097A	75 6E 01	        mov     fail,#001h
 2545+ 2  097D			??0224:
 2546+ 1
 2547+ 1			        top_ma  anl,r2,??0219,<>
 2548+ 2  097D	7A 3C		        mov     r2,#arg0
 2549+ 2  097F	74 99		        mov     a,#arg1
 2550+ 2			        ifnb    <>
 2551+ 2			        set_cy
 2552+ 2			        endif
 2553+ 2  0981	5A		        anl      a,r2
 2554+ 2			        ifnb    <>
 2555+ 2			        save_psw
 2556+ 2			        endif
 2557+ 2  0982	B4 18 0D	        cjne    a,#res,??0219
 2558+ 2			        ifnb    <>
 2559+ 2			        tst_psw <>,??0219
 2560+ 2			        endif
 2561+ 1			        top_ma  anl,r3,??0219,<>
 2562+ 2  0985	7B 3C		        mov     r3,#arg0
 2563+ 2  0987	74 99		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 47



 Line  I  Addr  Code            Source

 2564+ 2			        ifnb    <>
 2565+ 2			        set_cy
 2566+ 2			        endif
 2567+ 2  0989	5B		        anl      a,r3
 2568+ 2			        ifnb    <>
 2569+ 2			        save_psw
 2570+ 2			        endif
 2571+ 2  098A	B4 18 05	        cjne    a,#res,??0219
 2572+ 2			        ifnb    <>
 2573+ 2			        tst_psw <>,??0219
 2574+ 2			        endif
 2575+ 1
 2576+ 1			        eot     'b',??0219
 2577+ 2			        putc    #'b'
 2578+ 3  098D			??0228:
 2579+ 3			        ;jnb     SCON.1,putc_loop
 2580+ 3			        ;clr     SCON.1
 2581+ 3  098D	75 99 62	        mov     SBUF,#'b'
 2582+ 2  0990	80 06		        sjmp    ??0227
 2583+ 2  0992			??0219:  putc    #'?'
 2584+ 3  0992			??0229:
 2585+ 3			        ;jnb     SCON.1,putc_loop
 2586+ 3			        ;clr     SCON.1
 2587+ 3  0992	75 99 3F	        mov     SBUF,#'?'
 2588+ 2  0995	75 6E 01	        mov     fail,#001h
 2589+ 2  0998			??0227:
 2590+ 1
 2591+ 1			        top_ma  anl,r4,??0220,<>
 2592+ 2  0998	7C 3C		        mov     r4,#arg0
 2593+ 2  099A	74 99		        mov     a,#arg1
 2594+ 2			        ifnb    <>
 2595+ 2			        set_cy
 2596+ 2			        endif
 2597+ 2  099C	5C		        anl      a,r4
 2598+ 2			        ifnb    <>
 2599+ 2			        save_psw
 2600+ 2			        endif
 2601+ 2  099D	B4 18 0D	        cjne    a,#res,??0220
 2602+ 2			        ifnb    <>
 2603+ 2			        tst_psw <>,??0220
 2604+ 2			        endif
 2605+ 1			        top_ma  anl,r5,??0220,<>
 2606+ 2  09A0	7D 3C		        mov     r5,#arg0
 2607+ 2  09A2	74 99		        mov     a,#arg1
 2608+ 2			        ifnb    <>
 2609+ 2			        set_cy
 2610+ 2			        endif
 2611+ 2  09A4	5D		        anl      a,r5
 2612+ 2			        ifnb    <>
 2613+ 2			        save_psw
 2614+ 2			        endif
 2615+ 2  09A5	B4 18 05	        cjne    a,#res,??0220
 2616+ 2			        ifnb    <>
 2617+ 2			        tst_psw <>,??0220
 2618+ 2			        endif
 2619+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 48



 Line  I  Addr  Code            Source

 2620+ 1			        eot     'c',??0220
 2621+ 2			        putc    #'c'
 2622+ 3  09A8			??0231:
 2623+ 3			        ;jnb     SCON.1,putc_loop
 2624+ 3			        ;clr     SCON.1
 2625+ 3  09A8	75 99 63	        mov     SBUF,#'c'
 2626+ 2  09AB	80 06		        sjmp    ??0230
 2627+ 2  09AD			??0220:  putc    #'?'
 2628+ 3  09AD			??0232:
 2629+ 3			        ;jnb     SCON.1,putc_loop
 2630+ 3			        ;clr     SCON.1
 2631+ 3  09AD	75 99 3F	        mov     SBUF,#'?'
 2632+ 2  09B0	75 6E 01	        mov     fail,#001h
 2633+ 2  09B3			??0230:
 2634+ 1
 2635+ 1			        top_ma  anl,r6,??0217,<>
 2636+ 2  09B3	7E 3C		        mov     r6,#arg0
 2637+ 2  09B5	74 99		        mov     a,#arg1
 2638+ 2			        ifnb    <>
 2639+ 2			        set_cy
 2640+ 2			        endif
 2641+ 2  09B7	5E		        anl      a,r6
 2642+ 2			        ifnb    <>
 2643+ 2			        save_psw
 2644+ 2			        endif
 2645+ 2  09B8	B4 18 0D	        cjne    a,#res,??0217
 2646+ 2			        ifnb    <>
 2647+ 2			        tst_psw <>,??0217
 2648+ 2			        endif
 2649+ 1			        top_ma  anl,r7,??0217,<>
 2650+ 2  09BB	7F 3C		        mov     r7,#arg0
 2651+ 2  09BD	74 99		        mov     a,#arg1
 2652+ 2			        ifnb    <>
 2653+ 2			        set_cy
 2654+ 2			        endif
 2655+ 2  09BF	5F		        anl      a,r7
 2656+ 2			        ifnb    <>
 2657+ 2			        save_psw
 2658+ 2			        endif
 2659+ 2  09C0	B4 18 05	        cjne    a,#res,??0217
 2660+ 2			        ifnb    <>
 2661+ 2			        tst_psw <>,??0217
 2662+ 2			        endif
 2663+ 1
 2664+ 1			        eot     'd',??0217
 2665+ 2			        putc    #'d'
 2666+ 3  09C3			??0234:
 2667+ 3			        ;jnb     SCON.1,putc_loop
 2668+ 3			        ;clr     SCON.1
 2669+ 3  09C3	75 99 64	        mov     SBUF,#'d'
 2670+ 2  09C6	80 06		        sjmp    ??0233
 2671+ 2  09C8			??0217:  putc    #'?'
 2672+ 3  09C8			??0235:
 2673+ 3			        ;jnb     SCON.1,putc_loop
 2674+ 3			        ;clr     SCON.1
 2675+ 3  09C8	75 99 3F	        mov     SBUF,#'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 49



 Line  I  Addr  Code            Source

 2676+ 2  09CB	75 6E 01	        mov     fail,#001h
 2677+ 2  09CE			??0233:
 2678+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 2679+ 1
 2680+ 1			        ; Optionally test immediate addressing modes.
 2681+ 1
 2682+ 1	N      FFFF	        if      (07h and 1) ne 0
 2683+ 1			        ; Test <op> A, #arg1...
 2684+ 1			        top_mb  anl,a,??0221,<>
 2685+ 2  09CE	74 99		        mov     a,#arg1
 2686+ 2			        ifnb    <>
 2687+ 2			        set_cy
 2688+ 2			        endif
 2689+ 2  09D0	54 3C		        anl      a,#arg0
 2690+ 2			        ifnb    <>
 2691+ 2			        save_psw
 2692+ 2			        endif
 2693+ 2  09D2	F5 E0		        mov     ACC,a
 2694+ 2  09D4	B4 18 05	        cjne    a,#res,??0221
 2695+ 2			        ifnb    <>
 2696+ 2			        tst_psw <>,??0221
 2697+ 2			        endif
 2698+ 1			        eot     'e',??0221
 2699+ 2			        putc    #'e'
 2700+ 3  09D7			??0237:
 2701+ 3			        ;jnb     SCON.1,putc_loop
 2702+ 3			        ;clr     SCON.1
 2703+ 3  09D7	75 99 65	        mov     SBUF,#'e'
 2704+ 2  09DA	80 06		        sjmp    ??0236
 2705+ 2  09DC			??0221:  putc    #'?'
 2706+ 3  09DC			??0238:
 2707+ 3			        ;jnb     SCON.1,putc_loop
 2708+ 3			        ;clr     SCON.1
 2709+ 3  09DC	75 99 3F	        mov     SBUF,#'?'
 2710+ 2  09DF	75 6E 01	        mov     fail,#001h
 2711+ 2  09E2			??0236:
 2712+ 1			        endif
 2713+ 1
 2714+ 1	N      FFFF	        if      (07h and 2) ne 0
 2715+ 1			        ; ...and <op> dir, #arg1
 2716+ 1			        top_mb  anl,dir0,??0222,<>
 2717+ 2  09E2	75 60 99	        mov     dir0,#arg1
 2718+ 2			        ifnb    <>
 2719+ 2			        set_cy
 2720+ 2			        endif
 2721+ 2  09E5	53 60 3C	        anl      dir0,#arg0
 2722+ 2			        ifnb    <>
 2723+ 2			        save_psw
 2724+ 2			        endif
 2725+ 2  09E8	85 60 E0	        mov     ACC,dir0
 2726+ 2  09EB	B4 18 05	        cjne    a,#res,??0222
 2727+ 2			        ifnb    <>
 2728+ 2			        tst_psw <>,??0222
 2729+ 2			        endif
 2730+ 1			        eot     'f',??0222
 2731+ 2			        putc    #'f'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 50



 Line  I  Addr  Code            Source

 2732+ 3  09EE			??0240:
 2733+ 3			        ;jnb     SCON.1,putc_loop
 2734+ 3			        ;clr     SCON.1
 2735+ 3  09EE	75 99 66	        mov     SBUF,#'f'
 2736+ 2  09F1	80 06		        sjmp    ??0239
 2737+ 2  09F3			??0222:  putc    #'?'
 2738+ 3  09F3			??0241:
 2739+ 3			        ;jnb     SCON.1,putc_loop
 2740+ 3			        ;clr     SCON.1
 2741+ 3  09F3	75 99 3F	        mov     SBUF,#'?'
 2742+ 2  09F6	75 6E 01	        mov     fail,#001h
 2743+ 2  09F9			??0239:
 2744+ 1			        endif
 2745+ 1
 2746+ 1			        ; Optionally test <op> dir, A
 2747+ 1	N      FFFF	        if      (07h and 4) ne 0
 2748+ 1			        top_mc  anl,??0223,<>
 2749+ 2  09F9	75 60 3C	        mov     dir0,#arg0
 2750+ 2  09FC	74 99		        mov     a,#arg1
 2751+ 2			        ifnb    <>
 2752+ 2			        set_cy
 2753+ 2			        endif
 2754+ 2  09FE	52 60		        anl      dir0,a
 2755+ 2			        ifnb    <>
 2756+ 2			        save_psw
 2757+ 2			        endif
 2758+ 2  0A00	E5 60		        mov     a,dir0
 2759+ 2  0A02	B4 18 05	        cjne    a,#res,??0223
 2760+ 2			        ifnb    <>
 2761+ 2			        tst_psw <>,??0223
 2762+ 2			        endif
 2763+ 1			        eot     'g',??0223
 2764+ 2			        putc    #'g'
 2765+ 3  0A05			??0243:
 2766+ 3			        ;jnb     SCON.1,putc_loop
 2767+ 3			        ;clr     SCON.1
 2768+ 3  0A05	75 99 67	        mov     SBUF,#'g'
 2769+ 2  0A08	80 06		        sjmp    ??0242
 2770+ 2  0A0A			??0223:  putc    #'?'
 2771+ 3  0A0A			??0244:
 2772+ 3			        ;jnb     SCON.1,putc_loop
 2773+ 3			        ;clr     SCON.1
 2774+ 3  0A0A	75 99 3F	        mov     SBUF,#'?'
 2775+ 2  0A0D	75 6E 01	        mov     fail,#001h
 2776+ 2  0A10			??0242:
 2777+ 1			        endif
 2778+ 1
 2779:
 2780:				        put_crlf                    ; end of test series
 2781+ 1			        putc    #13
 2782+ 2  0A10			??0245:
 2783+ 2			        ;jnb     SCON.1,putc_loop
 2784+ 2			        ;clr     SCON.1
 2785+ 2  0A10	75 99 0D	        mov     SBUF,#13
 2786+ 1			        putc    #10
 2787+ 2  0A13			??0246:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 51



 Line  I  Addr  Code            Source

 2788+ 2			        ;jnb     SCON.1,putc_loop
 2789+ 2			        ;clr     SCON.1
 2790+ 2  0A13	75 99 0A	        mov     SBUF,#10
 2791:
 2792:
 2793:				        ;-- Test series I ------------------------------------------------------
 2794:				        ; ORL
 2795:				        ; (See comments for 'ALU opcode block test')
 2796:
 2797:				        putc    #'I'                ; start of test series
 2798+ 1  0A16			??0247:
 2799+ 1			        ;jnb     SCON.1,putc_loop
 2800+ 1			        ;clr     SCON.1
 2801+ 1  0A16	75 99 49	        mov     SBUF,#'I'
 2802:
 2803:				        tst_alu orl,051h,092h,0d3h,07h,
 2804+ 1			        ; Put the argument and result data into variables for easier access
 2805+ 1	N      0051	        arg0    set 051h
 2806+ 1	N      0092	        arg1    set 092h
 2807+ 1	N      00D3	        res     set 0d3h
 2808+ 1
 2809+ 1			        ; Test <op> A, dir
 2810+ 1			        top_ma  orl,dir0,??0249,<>
 2811+ 2  0A19	75 60 51	        mov     dir0,#arg0
 2812+ 2  0A1C	74 92		        mov     a,#arg1
 2813+ 2			        ifnb    <>
 2814+ 2			        set_cy
 2815+ 2			        endif
 2816+ 2  0A1E	45 60		        orl      a,dir0
 2817+ 2			        ifnb    <>
 2818+ 2			        save_psw
 2819+ 2			        endif
 2820+ 2  0A20	B4 D3 29	        cjne    a,#res,??0249
 2821+ 2			        ifnb    <>
 2822+ 2			        tst_psw <>,??0249
 2823+ 2			        endif
 2824+ 1			        ; Test <op> A, @R0
 2825+ 1  0A23	78 60		        mov     r0,#dir0
 2826+ 1			        top_ma  orl,@r0,??0249,<>
 2827+ 2  0A25	76 51		        mov     @r0,#arg0
 2828+ 2  0A27	74 92		        mov     a,#arg1
 2829+ 2			        ifnb    <>
 2830+ 2			        set_cy
 2831+ 2			        endif
 2832+ 2  0A29	46		        orl      a,@r0
 2833+ 2			        ifnb    <>
 2834+ 2			        save_psw
 2835+ 2			        endif
 2836+ 2  0A2A	B4 D3 1F	        cjne    a,#res,??0249
 2837+ 2			        ifnb    <>
 2838+ 2			        tst_psw <>,??0249
 2839+ 2			        endif
 2840+ 1			        ; Test <op> A, @R1
 2841+ 1  0A2D	79 31		        mov     r1,#031h
 2842+ 1			        top_ma  orl,@r1,??0249,<>
 2843+ 2  0A2F	77 51		        mov     @r1,#arg0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 52



 Line  I  Addr  Code            Source

 2844+ 2  0A31	74 92		        mov     a,#arg1
 2845+ 2			        ifnb    <>
 2846+ 2			        set_cy
 2847+ 2			        endif
 2848+ 2  0A33	47		        orl      a,@r1
 2849+ 2			        ifnb    <>
 2850+ 2			        save_psw
 2851+ 2			        endif
 2852+ 2  0A34	B4 D3 15	        cjne    a,#res,??0249
 2853+ 2			        ifnb    <>
 2854+ 2			        tst_psw <>,??0249
 2855+ 2			        endif
 2856+ 1
 2857+ 1			        ; Now test <op> A, Rn for n in 0..7
 2858+ 1			        top_ma  orl,r0,??0249,<>
 2859+ 2  0A37	78 51		        mov     r0,#arg0
 2860+ 2  0A39	74 92		        mov     a,#arg1
 2861+ 2			        ifnb    <>
 2862+ 2			        set_cy
 2863+ 2			        endif
 2864+ 2  0A3B	48		        orl      a,r0
 2865+ 2			        ifnb    <>
 2866+ 2			        save_psw
 2867+ 2			        endif
 2868+ 2  0A3C	B4 D3 0D	        cjne    a,#res,??0249
 2869+ 2			        ifnb    <>
 2870+ 2			        tst_psw <>,??0249
 2871+ 2			        endif
 2872+ 1			        top_ma  orl,r1,??0249,<>
 2873+ 2  0A3F	79 51		        mov     r1,#arg0
 2874+ 2  0A41	74 92		        mov     a,#arg1
 2875+ 2			        ifnb    <>
 2876+ 2			        set_cy
 2877+ 2			        endif
 2878+ 2  0A43	49		        orl      a,r1
 2879+ 2			        ifnb    <>
 2880+ 2			        save_psw
 2881+ 2			        endif
 2882+ 2  0A44	B4 D3 05	        cjne    a,#res,??0249
 2883+ 2			        ifnb    <>
 2884+ 2			        tst_psw <>,??0249
 2885+ 2			        endif
 2886+ 1
 2887+ 1			        eot     'a',??0249
 2888+ 2			        putc    #'a'
 2889+ 3  0A47			??0256:
 2890+ 3			        ;jnb     SCON.1,putc_loop
 2891+ 3			        ;clr     SCON.1
 2892+ 3  0A47	75 99 61	        mov     SBUF,#'a'
 2893+ 2  0A4A	80 06		        sjmp    ??0255
 2894+ 2  0A4C			??0249:  putc    #'?'
 2895+ 3  0A4C			??0257:
 2896+ 3			        ;jnb     SCON.1,putc_loop
 2897+ 3			        ;clr     SCON.1
 2898+ 3  0A4C	75 99 3F	        mov     SBUF,#'?'
 2899+ 2  0A4F	75 6E 01	        mov     fail,#001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 53



 Line  I  Addr  Code            Source

 2900+ 2  0A52			??0255:
 2901+ 1
 2902+ 1			        top_ma  orl,r2,??0250,<>
 2903+ 2  0A52	7A 51		        mov     r2,#arg0
 2904+ 2  0A54	74 92		        mov     a,#arg1
 2905+ 2			        ifnb    <>
 2906+ 2			        set_cy
 2907+ 2			        endif
 2908+ 2  0A56	4A		        orl      a,r2
 2909+ 2			        ifnb    <>
 2910+ 2			        save_psw
 2911+ 2			        endif
 2912+ 2  0A57	B4 D3 0D	        cjne    a,#res,??0250
 2913+ 2			        ifnb    <>
 2914+ 2			        tst_psw <>,??0250
 2915+ 2			        endif
 2916+ 1			        top_ma  orl,r3,??0250,<>
 2917+ 2  0A5A	7B 51		        mov     r3,#arg0
 2918+ 2  0A5C	74 92		        mov     a,#arg1
 2919+ 2			        ifnb    <>
 2920+ 2			        set_cy
 2921+ 2			        endif
 2922+ 2  0A5E	4B		        orl      a,r3
 2923+ 2			        ifnb    <>
 2924+ 2			        save_psw
 2925+ 2			        endif
 2926+ 2  0A5F	B4 D3 05	        cjne    a,#res,??0250
 2927+ 2			        ifnb    <>
 2928+ 2			        tst_psw <>,??0250
 2929+ 2			        endif
 2930+ 1
 2931+ 1			        eot     'b',??0250
 2932+ 2			        putc    #'b'
 2933+ 3  0A62			??0259:
 2934+ 3			        ;jnb     SCON.1,putc_loop
 2935+ 3			        ;clr     SCON.1
 2936+ 3  0A62	75 99 62	        mov     SBUF,#'b'
 2937+ 2  0A65	80 06		        sjmp    ??0258
 2938+ 2  0A67			??0250:  putc    #'?'
 2939+ 3  0A67			??0260:
 2940+ 3			        ;jnb     SCON.1,putc_loop
 2941+ 3			        ;clr     SCON.1
 2942+ 3  0A67	75 99 3F	        mov     SBUF,#'?'
 2943+ 2  0A6A	75 6E 01	        mov     fail,#001h
 2944+ 2  0A6D			??0258:
 2945+ 1
 2946+ 1			        top_ma  orl,r4,??0251,<>
 2947+ 2  0A6D	7C 51		        mov     r4,#arg0
 2948+ 2  0A6F	74 92		        mov     a,#arg1
 2949+ 2			        ifnb    <>
 2950+ 2			        set_cy
 2951+ 2			        endif
 2952+ 2  0A71	4C		        orl      a,r4
 2953+ 2			        ifnb    <>
 2954+ 2			        save_psw
 2955+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 54



 Line  I  Addr  Code            Source

 2956+ 2  0A72	B4 D3 0D	        cjne    a,#res,??0251
 2957+ 2			        ifnb    <>
 2958+ 2			        tst_psw <>,??0251
 2959+ 2			        endif
 2960+ 1			        top_ma  orl,r5,??0251,<>
 2961+ 2  0A75	7D 51		        mov     r5,#arg0
 2962+ 2  0A77	74 92		        mov     a,#arg1
 2963+ 2			        ifnb    <>
 2964+ 2			        set_cy
 2965+ 2			        endif
 2966+ 2  0A79	4D		        orl      a,r5
 2967+ 2			        ifnb    <>
 2968+ 2			        save_psw
 2969+ 2			        endif
 2970+ 2  0A7A	B4 D3 05	        cjne    a,#res,??0251
 2971+ 2			        ifnb    <>
 2972+ 2			        tst_psw <>,??0251
 2973+ 2			        endif
 2974+ 1
 2975+ 1			        eot     'c',??0251
 2976+ 2			        putc    #'c'
 2977+ 3  0A7D			??0262:
 2978+ 3			        ;jnb     SCON.1,putc_loop
 2979+ 3			        ;clr     SCON.1
 2980+ 3  0A7D	75 99 63	        mov     SBUF,#'c'
 2981+ 2  0A80	80 06		        sjmp    ??0261
 2982+ 2  0A82			??0251:  putc    #'?'
 2983+ 3  0A82			??0263:
 2984+ 3			        ;jnb     SCON.1,putc_loop
 2985+ 3			        ;clr     SCON.1
 2986+ 3  0A82	75 99 3F	        mov     SBUF,#'?'
 2987+ 2  0A85	75 6E 01	        mov     fail,#001h
 2988+ 2  0A88			??0261:
 2989+ 1
 2990+ 1			        top_ma  orl,r6,??0248,<>
 2991+ 2  0A88	7E 51		        mov     r6,#arg0
 2992+ 2  0A8A	74 92		        mov     a,#arg1
 2993+ 2			        ifnb    <>
 2994+ 2			        set_cy
 2995+ 2			        endif
 2996+ 2  0A8C	4E		        orl      a,r6
 2997+ 2			        ifnb    <>
 2998+ 2			        save_psw
 2999+ 2			        endif
 3000+ 2  0A8D	B4 D3 0D	        cjne    a,#res,??0248
 3001+ 2			        ifnb    <>
 3002+ 2			        tst_psw <>,??0248
 3003+ 2			        endif
 3004+ 1			        top_ma  orl,r7,??0248,<>
 3005+ 2  0A90	7F 51		        mov     r7,#arg0
 3006+ 2  0A92	74 92		        mov     a,#arg1
 3007+ 2			        ifnb    <>
 3008+ 2			        set_cy
 3009+ 2			        endif
 3010+ 2  0A94	4F		        orl      a,r7
 3011+ 2			        ifnb    <>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 55



 Line  I  Addr  Code            Source

 3012+ 2			        save_psw
 3013+ 2			        endif
 3014+ 2  0A95	B4 D3 05	        cjne    a,#res,??0248
 3015+ 2			        ifnb    <>
 3016+ 2			        tst_psw <>,??0248
 3017+ 2			        endif
 3018+ 1
 3019+ 1			        eot     'd',??0248
 3020+ 2			        putc    #'d'
 3021+ 3  0A98			??0265:
 3022+ 3			        ;jnb     SCON.1,putc_loop
 3023+ 3			        ;clr     SCON.1
 3024+ 3  0A98	75 99 64	        mov     SBUF,#'d'
 3025+ 2  0A9B	80 06		        sjmp    ??0264
 3026+ 2  0A9D			??0248:  putc    #'?'
 3027+ 3  0A9D			??0266:
 3028+ 3			        ;jnb     SCON.1,putc_loop
 3029+ 3			        ;clr     SCON.1
 3030+ 3  0A9D	75 99 3F	        mov     SBUF,#'?'
 3031+ 2  0AA0	75 6E 01	        mov     fail,#001h
 3032+ 2  0AA3			??0264:
 3033+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 3034+ 1
 3035+ 1			        ; Optionally test immediate addressing modes.
 3036+ 1
 3037+ 1	N      FFFF	        if      (07h and 1) ne 0
 3038+ 1			        ; Test <op> A, #arg1...
 3039+ 1			        top_mb  orl,a,??0252,<>
 3040+ 2  0AA3	74 92		        mov     a,#arg1
 3041+ 2			        ifnb    <>
 3042+ 2			        set_cy
 3043+ 2			        endif
 3044+ 2  0AA5	44 51		        orl      a,#arg0
 3045+ 2			        ifnb    <>
 3046+ 2			        save_psw
 3047+ 2			        endif
 3048+ 2  0AA7	F5 E0		        mov     ACC,a
 3049+ 2  0AA9	B4 D3 05	        cjne    a,#res,??0252
 3050+ 2			        ifnb    <>
 3051+ 2			        tst_psw <>,??0252
 3052+ 2			        endif
 3053+ 1			        eot     'e',??0252
 3054+ 2			        putc    #'e'
 3055+ 3  0AAC			??0268:
 3056+ 3			        ;jnb     SCON.1,putc_loop
 3057+ 3			        ;clr     SCON.1
 3058+ 3  0AAC	75 99 65	        mov     SBUF,#'e'
 3059+ 2  0AAF	80 06		        sjmp    ??0267
 3060+ 2  0AB1			??0252:  putc    #'?'
 3061+ 3  0AB1			??0269:
 3062+ 3			        ;jnb     SCON.1,putc_loop
 3063+ 3			        ;clr     SCON.1
 3064+ 3  0AB1	75 99 3F	        mov     SBUF,#'?'
 3065+ 2  0AB4	75 6E 01	        mov     fail,#001h
 3066+ 2  0AB7			??0267:
 3067+ 1			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 56



 Line  I  Addr  Code            Source

 3068+ 1
 3069+ 1	N      FFFF	        if      (07h and 2) ne 0
 3070+ 1			        ; ...and <op> dir, #arg1
 3071+ 1			        top_mb  orl,dir0,??0253,<>
 3072+ 2  0AB7	75 60 92	        mov     dir0,#arg1
 3073+ 2			        ifnb    <>
 3074+ 2			        set_cy
 3075+ 2			        endif
 3076+ 2  0ABA	43 60 51	        orl      dir0,#arg0
 3077+ 2			        ifnb    <>
 3078+ 2			        save_psw
 3079+ 2			        endif
 3080+ 2  0ABD	85 60 E0	        mov     ACC,dir0
 3081+ 2  0AC0	B4 D3 05	        cjne    a,#res,??0253
 3082+ 2			        ifnb    <>
 3083+ 2			        tst_psw <>,??0253
 3084+ 2			        endif
 3085+ 1			        eot     'f',??0253
 3086+ 2			        putc    #'f'
 3087+ 3  0AC3			??0271:
 3088+ 3			        ;jnb     SCON.1,putc_loop
 3089+ 3			        ;clr     SCON.1
 3090+ 3  0AC3	75 99 66	        mov     SBUF,#'f'
 3091+ 2  0AC6	80 06		        sjmp    ??0270
 3092+ 2  0AC8			??0253:  putc    #'?'
 3093+ 3  0AC8			??0272:
 3094+ 3			        ;jnb     SCON.1,putc_loop
 3095+ 3			        ;clr     SCON.1
 3096+ 3  0AC8	75 99 3F	        mov     SBUF,#'?'
 3097+ 2  0ACB	75 6E 01	        mov     fail,#001h
 3098+ 2  0ACE			??0270:
 3099+ 1			        endif
 3100+ 1
 3101+ 1			        ; Optionally test <op> dir, A
 3102+ 1	N      FFFF	        if      (07h and 4) ne 0
 3103+ 1			        top_mc  orl,??0254,<>
 3104+ 2  0ACE	75 60 51	        mov     dir0,#arg0
 3105+ 2  0AD1	74 92		        mov     a,#arg1
 3106+ 2			        ifnb    <>
 3107+ 2			        set_cy
 3108+ 2			        endif
 3109+ 2  0AD3	42 60		        orl      dir0,a
 3110+ 2			        ifnb    <>
 3111+ 2			        save_psw
 3112+ 2			        endif
 3113+ 2  0AD5	E5 60		        mov     a,dir0
 3114+ 2  0AD7	B4 D3 05	        cjne    a,#res,??0254
 3115+ 2			        ifnb    <>
 3116+ 2			        tst_psw <>,??0254
 3117+ 2			        endif
 3118+ 1			        eot     'g',??0254
 3119+ 2			        putc    #'g'
 3120+ 3  0ADA			??0274:
 3121+ 3			        ;jnb     SCON.1,putc_loop
 3122+ 3			        ;clr     SCON.1
 3123+ 3  0ADA	75 99 67	        mov     SBUF,#'g'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 57



 Line  I  Addr  Code            Source

 3124+ 2  0ADD	80 06		        sjmp    ??0273
 3125+ 2  0ADF			??0254:  putc    #'?'
 3126+ 3  0ADF			??0275:
 3127+ 3			        ;jnb     SCON.1,putc_loop
 3128+ 3			        ;clr     SCON.1
 3129+ 3  0ADF	75 99 3F	        mov     SBUF,#'?'
 3130+ 2  0AE2	75 6E 01	        mov     fail,#001h
 3131+ 2  0AE5			??0273:
 3132+ 1			        endif
 3133+ 1
 3134:
 3135:				        put_crlf                    ; end of test series
 3136+ 1			        putc    #13
 3137+ 2  0AE5			??0276:
 3138+ 2			        ;jnb     SCON.1,putc_loop
 3139+ 2			        ;clr     SCON.1
 3140+ 2  0AE5	75 99 0D	        mov     SBUF,#13
 3141+ 1			        putc    #10
 3142+ 2  0AE8			??0277:
 3143+ 2			        ;jnb     SCON.1,putc_loop
 3144+ 2			        ;clr     SCON.1
 3145+ 2  0AE8	75 99 0A	        mov     SBUF,#10
 3146:
 3147:				        ;-- Test series J ------------------------------------------------------
 3148:				        ; XRL
 3149:				        ; (See comments for 'ALU opcode block test')
 3150:
 3151:
 3152:				        putc    #'J'                ; start of test series
 3153+ 1  0AEB			??0278:
 3154+ 1			        ;jnb     SCON.1,putc_loop
 3155+ 1			        ;clr     SCON.1
 3156+ 1  0AEB	75 99 4A	        mov     SBUF,#'J'
 3157:
 3158:				        tst_alu xrl,051h,033h,062h,07h,
 3159+ 1			        ; Put the argument and result data into variables for easier access
 3160+ 1	N      0051	        arg0    set 051h
 3161+ 1	N      0033	        arg1    set 033h
 3162+ 1	N      0062	        res     set 062h
 3163+ 1
 3164+ 1			        ; Test <op> A, dir
 3165+ 1			        top_ma  xrl,dir0,??0280,<>
 3166+ 2  0AEE	75 60 51	        mov     dir0,#arg0
 3167+ 2  0AF1	74 33		        mov     a,#arg1
 3168+ 2			        ifnb    <>
 3169+ 2			        set_cy
 3170+ 2			        endif
 3171+ 2  0AF3	65 60		        xrl      a,dir0
 3172+ 2			        ifnb    <>
 3173+ 2			        save_psw
 3174+ 2			        endif
 3175+ 2  0AF5	B4 62 29	        cjne    a,#res,??0280
 3176+ 2			        ifnb    <>
 3177+ 2			        tst_psw <>,??0280
 3178+ 2			        endif
 3179+ 1			        ; Test <op> A, @R0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 58



 Line  I  Addr  Code            Source

 3180+ 1  0AF8	78 60		        mov     r0,#dir0
 3181+ 1			        top_ma  xrl,@r0,??0280,<>
 3182+ 2  0AFA	76 51		        mov     @r0,#arg0
 3183+ 2  0AFC	74 33		        mov     a,#arg1
 3184+ 2			        ifnb    <>
 3185+ 2			        set_cy
 3186+ 2			        endif
 3187+ 2  0AFE	66		        xrl      a,@r0
 3188+ 2			        ifnb    <>
 3189+ 2			        save_psw
 3190+ 2			        endif
 3191+ 2  0AFF	B4 62 1F	        cjne    a,#res,??0280
 3192+ 2			        ifnb    <>
 3193+ 2			        tst_psw <>,??0280
 3194+ 2			        endif
 3195+ 1			        ; Test <op> A, @R1
 3196+ 1  0B02	79 31		        mov     r1,#031h
 3197+ 1			        top_ma  xrl,@r1,??0280,<>
 3198+ 2  0B04	77 51		        mov     @r1,#arg0
 3199+ 2  0B06	74 33		        mov     a,#arg1
 3200+ 2			        ifnb    <>
 3201+ 2			        set_cy
 3202+ 2			        endif
 3203+ 2  0B08	67		        xrl      a,@r1
 3204+ 2			        ifnb    <>
 3205+ 2			        save_psw
 3206+ 2			        endif
 3207+ 2  0B09	B4 62 15	        cjne    a,#res,??0280
 3208+ 2			        ifnb    <>
 3209+ 2			        tst_psw <>,??0280
 3210+ 2			        endif
 3211+ 1
 3212+ 1			        ; Now test <op> A, Rn for n in 0..7
 3213+ 1			        top_ma  xrl,r0,??0280,<>
 3214+ 2  0B0C	78 51		        mov     r0,#arg0
 3215+ 2  0B0E	74 33		        mov     a,#arg1
 3216+ 2			        ifnb    <>
 3217+ 2			        set_cy
 3218+ 2			        endif
 3219+ 2  0B10	68		        xrl      a,r0
 3220+ 2			        ifnb    <>
 3221+ 2			        save_psw
 3222+ 2			        endif
 3223+ 2  0B11	B4 62 0D	        cjne    a,#res,??0280
 3224+ 2			        ifnb    <>
 3225+ 2			        tst_psw <>,??0280
 3226+ 2			        endif
 3227+ 1			        top_ma  xrl,r1,??0280,<>
 3228+ 2  0B14	79 51		        mov     r1,#arg0
 3229+ 2  0B16	74 33		        mov     a,#arg1
 3230+ 2			        ifnb    <>
 3231+ 2			        set_cy
 3232+ 2			        endif
 3233+ 2  0B18	69		        xrl      a,r1
 3234+ 2			        ifnb    <>
 3235+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 59



 Line  I  Addr  Code            Source

 3236+ 2			        endif
 3237+ 2  0B19	B4 62 05	        cjne    a,#res,??0280
 3238+ 2			        ifnb    <>
 3239+ 2			        tst_psw <>,??0280
 3240+ 2			        endif
 3241+ 1
 3242+ 1			        eot     'a',??0280
 3243+ 2			        putc    #'a'
 3244+ 3  0B1C			??0287:
 3245+ 3			        ;jnb     SCON.1,putc_loop
 3246+ 3			        ;clr     SCON.1
 3247+ 3  0B1C	75 99 61	        mov     SBUF,#'a'
 3248+ 2  0B1F	80 06		        sjmp    ??0286
 3249+ 2  0B21			??0280:  putc    #'?'
 3250+ 3  0B21			??0288:
 3251+ 3			        ;jnb     SCON.1,putc_loop
 3252+ 3			        ;clr     SCON.1
 3253+ 3  0B21	75 99 3F	        mov     SBUF,#'?'
 3254+ 2  0B24	75 6E 01	        mov     fail,#001h
 3255+ 2  0B27			??0286:
 3256+ 1
 3257+ 1			        top_ma  xrl,r2,??0281,<>
 3258+ 2  0B27	7A 51		        mov     r2,#arg0
 3259+ 2  0B29	74 33		        mov     a,#arg1
 3260+ 2			        ifnb    <>
 3261+ 2			        set_cy
 3262+ 2			        endif
 3263+ 2  0B2B	6A		        xrl      a,r2
 3264+ 2			        ifnb    <>
 3265+ 2			        save_psw
 3266+ 2			        endif
 3267+ 2  0B2C	B4 62 0D	        cjne    a,#res,??0281
 3268+ 2			        ifnb    <>
 3269+ 2			        tst_psw <>,??0281
 3270+ 2			        endif
 3271+ 1			        top_ma  xrl,r3,??0281,<>
 3272+ 2  0B2F	7B 51		        mov     r3,#arg0
 3273+ 2  0B31	74 33		        mov     a,#arg1
 3274+ 2			        ifnb    <>
 3275+ 2			        set_cy
 3276+ 2			        endif
 3277+ 2  0B33	6B		        xrl      a,r3
 3278+ 2			        ifnb    <>
 3279+ 2			        save_psw
 3280+ 2			        endif
 3281+ 2  0B34	B4 62 05	        cjne    a,#res,??0281
 3282+ 2			        ifnb    <>
 3283+ 2			        tst_psw <>,??0281
 3284+ 2			        endif
 3285+ 1
 3286+ 1			        eot     'b',??0281
 3287+ 2			        putc    #'b'
 3288+ 3  0B37			??0290:
 3289+ 3			        ;jnb     SCON.1,putc_loop
 3290+ 3			        ;clr     SCON.1
 3291+ 3  0B37	75 99 62	        mov     SBUF,#'b'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 60



 Line  I  Addr  Code            Source

 3292+ 2  0B3A	80 06		        sjmp    ??0289
 3293+ 2  0B3C			??0281:  putc    #'?'
 3294+ 3  0B3C			??0291:
 3295+ 3			        ;jnb     SCON.1,putc_loop
 3296+ 3			        ;clr     SCON.1
 3297+ 3  0B3C	75 99 3F	        mov     SBUF,#'?'
 3298+ 2  0B3F	75 6E 01	        mov     fail,#001h
 3299+ 2  0B42			??0289:
 3300+ 1
 3301+ 1			        top_ma  xrl,r4,??0282,<>
 3302+ 2  0B42	7C 51		        mov     r4,#arg0
 3303+ 2  0B44	74 33		        mov     a,#arg1
 3304+ 2			        ifnb    <>
 3305+ 2			        set_cy
 3306+ 2			        endif
 3307+ 2  0B46	6C		        xrl      a,r4
 3308+ 2			        ifnb    <>
 3309+ 2			        save_psw
 3310+ 2			        endif
 3311+ 2  0B47	B4 62 0D	        cjne    a,#res,??0282
 3312+ 2			        ifnb    <>
 3313+ 2			        tst_psw <>,??0282
 3314+ 2			        endif
 3315+ 1			        top_ma  xrl,r5,??0282,<>
 3316+ 2  0B4A	7D 51		        mov     r5,#arg0
 3317+ 2  0B4C	74 33		        mov     a,#arg1
 3318+ 2			        ifnb    <>
 3319+ 2			        set_cy
 3320+ 2			        endif
 3321+ 2  0B4E	6D		        xrl      a,r5
 3322+ 2			        ifnb    <>
 3323+ 2			        save_psw
 3324+ 2			        endif
 3325+ 2  0B4F	B4 62 05	        cjne    a,#res,??0282
 3326+ 2			        ifnb    <>
 3327+ 2			        tst_psw <>,??0282
 3328+ 2			        endif
 3329+ 1
 3330+ 1			        eot     'c',??0282
 3331+ 2			        putc    #'c'
 3332+ 3  0B52			??0293:
 3333+ 3			        ;jnb     SCON.1,putc_loop
 3334+ 3			        ;clr     SCON.1
 3335+ 3  0B52	75 99 63	        mov     SBUF,#'c'
 3336+ 2  0B55	80 06		        sjmp    ??0292
 3337+ 2  0B57			??0282:  putc    #'?'
 3338+ 3  0B57			??0294:
 3339+ 3			        ;jnb     SCON.1,putc_loop
 3340+ 3			        ;clr     SCON.1
 3341+ 3  0B57	75 99 3F	        mov     SBUF,#'?'
 3342+ 2  0B5A	75 6E 01	        mov     fail,#001h
 3343+ 2  0B5D			??0292:
 3344+ 1
 3345+ 1			        top_ma  xrl,r6,??0279,<>
 3346+ 2  0B5D	7E 51		        mov     r6,#arg0
 3347+ 2  0B5F	74 33		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 61



 Line  I  Addr  Code            Source

 3348+ 2			        ifnb    <>
 3349+ 2			        set_cy
 3350+ 2			        endif
 3351+ 2  0B61	6E		        xrl      a,r6
 3352+ 2			        ifnb    <>
 3353+ 2			        save_psw
 3354+ 2			        endif
 3355+ 2  0B62	B4 62 0D	        cjne    a,#res,??0279
 3356+ 2			        ifnb    <>
 3357+ 2			        tst_psw <>,??0279
 3358+ 2			        endif
 3359+ 1			        top_ma  xrl,r7,??0279,<>
 3360+ 2  0B65	7F 51		        mov     r7,#arg0
 3361+ 2  0B67	74 33		        mov     a,#arg1
 3362+ 2			        ifnb    <>
 3363+ 2			        set_cy
 3364+ 2			        endif
 3365+ 2  0B69	6F		        xrl      a,r7
 3366+ 2			        ifnb    <>
 3367+ 2			        save_psw
 3368+ 2			        endif
 3369+ 2  0B6A	B4 62 05	        cjne    a,#res,??0279
 3370+ 2			        ifnb    <>
 3371+ 2			        tst_psw <>,??0279
 3372+ 2			        endif
 3373+ 1
 3374+ 1			        eot     'd',??0279
 3375+ 2			        putc    #'d'
 3376+ 3  0B6D			??0296:
 3377+ 3			        ;jnb     SCON.1,putc_loop
 3378+ 3			        ;clr     SCON.1
 3379+ 3  0B6D	75 99 64	        mov     SBUF,#'d'
 3380+ 2  0B70	80 06		        sjmp    ??0295
 3381+ 2  0B72			??0279:  putc    #'?'
 3382+ 3  0B72			??0297:
 3383+ 3			        ;jnb     SCON.1,putc_loop
 3384+ 3			        ;clr     SCON.1
 3385+ 3  0B72	75 99 3F	        mov     SBUF,#'?'
 3386+ 2  0B75	75 6E 01	        mov     fail,#001h
 3387+ 2  0B78			??0295:
 3388+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 3389+ 1
 3390+ 1			        ; Optionally test immediate addressing modes.
 3391+ 1
 3392+ 1	N      FFFF	        if      (07h and 1) ne 0
 3393+ 1			        ; Test <op> A, #arg1...
 3394+ 1			        top_mb  xrl,a,??0283,<>
 3395+ 2  0B78	74 33		        mov     a,#arg1
 3396+ 2			        ifnb    <>
 3397+ 2			        set_cy
 3398+ 2			        endif
 3399+ 2  0B7A	64 51		        xrl      a,#arg0
 3400+ 2			        ifnb    <>
 3401+ 2			        save_psw
 3402+ 2			        endif
 3403+ 2  0B7C	F5 E0		        mov     ACC,a

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 62



 Line  I  Addr  Code            Source

 3404+ 2  0B7E	B4 62 05	        cjne    a,#res,??0283
 3405+ 2			        ifnb    <>
 3406+ 2			        tst_psw <>,??0283
 3407+ 2			        endif
 3408+ 1			        eot     'e',??0283
 3409+ 2			        putc    #'e'
 3410+ 3  0B81			??0299:
 3411+ 3			        ;jnb     SCON.1,putc_loop
 3412+ 3			        ;clr     SCON.1
 3413+ 3  0B81	75 99 65	        mov     SBUF,#'e'
 3414+ 2  0B84	80 06		        sjmp    ??0298
 3415+ 2  0B86			??0283:  putc    #'?'
 3416+ 3  0B86			??0300:
 3417+ 3			        ;jnb     SCON.1,putc_loop
 3418+ 3			        ;clr     SCON.1
 3419+ 3  0B86	75 99 3F	        mov     SBUF,#'?'
 3420+ 2  0B89	75 6E 01	        mov     fail,#001h
 3421+ 2  0B8C			??0298:
 3422+ 1			        endif
 3423+ 1
 3424+ 1	N      FFFF	        if      (07h and 2) ne 0
 3425+ 1			        ; ...and <op> dir, #arg1
 3426+ 1			        top_mb  xrl,dir0,??0284,<>
 3427+ 2  0B8C	75 60 33	        mov     dir0,#arg1
 3428+ 2			        ifnb    <>
 3429+ 2			        set_cy
 3430+ 2			        endif
 3431+ 2  0B8F	63 60 51	        xrl      dir0,#arg0
 3432+ 2			        ifnb    <>
 3433+ 2			        save_psw
 3434+ 2			        endif
 3435+ 2  0B92	85 60 E0	        mov     ACC,dir0
 3436+ 2  0B95	B4 62 05	        cjne    a,#res,??0284
 3437+ 2			        ifnb    <>
 3438+ 2			        tst_psw <>,??0284
 3439+ 2			        endif
 3440+ 1			        eot     'f',??0284
 3441+ 2			        putc    #'f'
 3442+ 3  0B98			??0302:
 3443+ 3			        ;jnb     SCON.1,putc_loop
 3444+ 3			        ;clr     SCON.1
 3445+ 3  0B98	75 99 66	        mov     SBUF,#'f'
 3446+ 2  0B9B	80 06		        sjmp    ??0301
 3447+ 2  0B9D			??0284:  putc    #'?'
 3448+ 3  0B9D			??0303:
 3449+ 3			        ;jnb     SCON.1,putc_loop
 3450+ 3			        ;clr     SCON.1
 3451+ 3  0B9D	75 99 3F	        mov     SBUF,#'?'
 3452+ 2  0BA0	75 6E 01	        mov     fail,#001h
 3453+ 2  0BA3			??0301:
 3454+ 1			        endif
 3455+ 1
 3456+ 1			        ; Optionally test <op> dir, A
 3457+ 1	N      FFFF	        if      (07h and 4) ne 0
 3458+ 1			        top_mc  xrl,??0285,<>
 3459+ 2  0BA3	75 60 51	        mov     dir0,#arg0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 63



 Line  I  Addr  Code            Source

 3460+ 2  0BA6	74 33		        mov     a,#arg1
 3461+ 2			        ifnb    <>
 3462+ 2			        set_cy
 3463+ 2			        endif
 3464+ 2  0BA8	62 60		        xrl      dir0,a
 3465+ 2			        ifnb    <>
 3466+ 2			        save_psw
 3467+ 2			        endif
 3468+ 2  0BAA	E5 60		        mov     a,dir0
 3469+ 2  0BAC	B4 62 05	        cjne    a,#res,??0285
 3470+ 2			        ifnb    <>
 3471+ 2			        tst_psw <>,??0285
 3472+ 2			        endif
 3473+ 1			        eot     'g',??0285
 3474+ 2			        putc    #'g'
 3475+ 3  0BAF			??0305:
 3476+ 3			        ;jnb     SCON.1,putc_loop
 3477+ 3			        ;clr     SCON.1
 3478+ 3  0BAF	75 99 67	        mov     SBUF,#'g'
 3479+ 2  0BB2	80 06		        sjmp    ??0304
 3480+ 2  0BB4			??0285:  putc    #'?'
 3481+ 3  0BB4			??0306:
 3482+ 3			        ;jnb     SCON.1,putc_loop
 3483+ 3			        ;clr     SCON.1
 3484+ 3  0BB4	75 99 3F	        mov     SBUF,#'?'
 3485+ 2  0BB7	75 6E 01	        mov     fail,#001h
 3486+ 2  0BBA			??0304:
 3487+ 1			        endif
 3488+ 1
 3489:
 3490:				        put_crlf                    ; end of test series
 3491+ 1			        putc    #13
 3492+ 2  0BBA			??0307:
 3493+ 2			        ;jnb     SCON.1,putc_loop
 3494+ 2			        ;clr     SCON.1
 3495+ 2  0BBA	75 99 0D	        mov     SBUF,#13
 3496+ 1			        putc    #10
 3497+ 2  0BBD			??0308:
 3498+ 2			        ;jnb     SCON.1,putc_loop
 3499+ 2			        ;clr     SCON.1
 3500+ 2  0BBD	75 99 0A	        mov     SBUF,#10
 3501:
 3502:				        ;-- Test series K ------------------------------------------------------
 3503:				        ; DJNZ
 3504:				        ; a.- <DJNZ dir,rel>, <DJNZ Rn,rel> tested only with small negative rels
 3505:
 3506:				        putc    #'K'                ; start of test series
 3507+ 1  0BC0			??0309:
 3508+ 1			        ;jnb     SCON.1,putc_loop
 3509+ 1			        ;clr     SCON.1
 3510+ 1  0BC0	75 99 4B	        mov     SBUF,#'K'
 3511:
 3512:				        ;tk_ma: test DJNZ with parametrizable addressing mode
 3513:				tk_ma   macro   dst,error_loc
 3514:				        local   tk_ma0
 3515:				nloops  set     3

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 64



 Line  I  Addr  Code            Source

 3516:				        mov     dst,#nloops         ; We'll perform a fixed no. of iterations
 3517:				        mov     a,#(nloops+1)       ; A will or our control counter
 3518:				tk_ma0: dec     a
 3519:				        jz      error_loc           ; Break loop after nloops iterations
 3520:				        djnz    dst,tk_ma0          ; Test DJNZ instruction
 3521:				        cjne    a,#001,error_loc    ; Verify number of iterations is ok
 3522:				        endm
 3523:
 3524:				        tk_ma   dir0,tk_a0          ; <DJNZ dir,rel>
 3525+ 1	N      0003	nloops  set     3
 3526+ 1  0BC3	75 60 03	        mov     dir0,#nloops         ; We'll perform a fixed no. of iterations
 3527+ 1  0BC6	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3528+ 1  0BC8	14		??0310: dec     a
 3529+ 1  0BC9	60 0B		        jz      tk_a0           ; Break loop after nloops iterations
 3530+ 1  0BCB	D5 60 FA	        djnz    dir0,??0310          ; Test DJNZ instruction
 3531+ 1  0BCE	B4 01 05	        cjne    a,#001,tk_a0    ; Verify number of iterations is ok
 3532:
 3533:				        eot     'a',tk_a0
 3534+ 1			        putc    #'a'
 3535+ 2  0BD1			??0312:
 3536+ 2			        ;jnb     SCON.1,putc_loop
 3537+ 2			        ;clr     SCON.1
 3538+ 2  0BD1	75 99 61	        mov     SBUF,#'a'
 3539+ 1  0BD4	80 06		        sjmp    ??0311
 3540+ 1  0BD6			tk_a0:  putc    #'?'
 3541+ 2  0BD6			??0313:
 3542+ 2			        ;jnb     SCON.1,putc_loop
 3543+ 2			        ;clr     SCON.1
 3544+ 2  0BD6	75 99 3F	        mov     SBUF,#'?'
 3545+ 1  0BD9	75 6E 01	        mov     fail,#001h
 3546+ 1  0BDC			??0311:
 3547:
 3548:				        tk_ma   r0,tk_b0            ; <DJNZ Rn,rel>
 3549+ 1	N      0003	nloops  set     3
 3550+ 1  0BDC	78 03		        mov     r0,#nloops         ; We'll perform a fixed no. of iterations
 3551+ 1  0BDE	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3552+ 1  0BE0	14		??0314: dec     a
 3553+ 1  0BE1	60 5E		        jz      tk_b0           ; Break loop after nloops iterations
 3554+ 1  0BE3	D8 FB		        djnz    r0,??0314          ; Test DJNZ instruction
 3555+ 1  0BE5	B4 01 59	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3556:				        tk_ma   r1,tk_b0
 3557+ 1	N      0003	nloops  set     3
 3558+ 1  0BE8	79 03		        mov     r1,#nloops         ; We'll perform a fixed no. of iterations
 3559+ 1  0BEA	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3560+ 1  0BEC	14		??0315: dec     a
 3561+ 1  0BED	60 52		        jz      tk_b0           ; Break loop after nloops iterations
 3562+ 1  0BEF	D9 FB		        djnz    r1,??0315          ; Test DJNZ instruction
 3563+ 1  0BF1	B4 01 4D	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3564:				        tk_ma   r2,tk_b0
 3565+ 1	N      0003	nloops  set     3
 3566+ 1  0BF4	7A 03		        mov     r2,#nloops         ; We'll perform a fixed no. of iterations
 3567+ 1  0BF6	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3568+ 1  0BF8	14		??0316: dec     a
 3569+ 1  0BF9	60 46		        jz      tk_b0           ; Break loop after nloops iterations
 3570+ 1  0BFB	DA FB		        djnz    r2,??0316          ; Test DJNZ instruction
 3571+ 1  0BFD	B4 01 41	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 65



 Line  I  Addr  Code            Source

 3572:				        tk_ma   r3,tk_b0
 3573+ 1	N      0003	nloops  set     3
 3574+ 1  0C00	7B 03		        mov     r3,#nloops         ; We'll perform a fixed no. of iterations
 3575+ 1  0C02	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3576+ 1  0C04	14		??0317: dec     a
 3577+ 1  0C05	60 3A		        jz      tk_b0           ; Break loop after nloops iterations
 3578+ 1  0C07	DB FB		        djnz    r3,??0317          ; Test DJNZ instruction
 3579+ 1  0C09	B4 01 35	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3580:				        tk_ma   r4,tk_b0
 3581+ 1	N      0003	nloops  set     3
 3582+ 1  0C0C	7C 03		        mov     r4,#nloops         ; We'll perform a fixed no. of iterations
 3583+ 1  0C0E	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3584+ 1  0C10	14		??0318: dec     a
 3585+ 1  0C11	60 2E		        jz      tk_b0           ; Break loop after nloops iterations
 3586+ 1  0C13	DC FB		        djnz    r4,??0318          ; Test DJNZ instruction
 3587+ 1  0C15	B4 01 29	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3588:				        tk_ma   r5,tk_b0
 3589+ 1	N      0003	nloops  set     3
 3590+ 1  0C18	7D 03		        mov     r5,#nloops         ; We'll perform a fixed no. of iterations
 3591+ 1  0C1A	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3592+ 1  0C1C	14		??0319: dec     a
 3593+ 1  0C1D	60 22		        jz      tk_b0           ; Break loop after nloops iterations
 3594+ 1  0C1F	DD FB		        djnz    r5,??0319          ; Test DJNZ instruction
 3595+ 1  0C21	B4 01 1D	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3596:				        tk_ma   r6,tk_b0
 3597+ 1	N      0003	nloops  set     3
 3598+ 1  0C24	7E 03		        mov     r6,#nloops         ; We'll perform a fixed no. of iterations
 3599+ 1  0C26	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3600+ 1  0C28	14		??0320: dec     a
 3601+ 1  0C29	60 16		        jz      tk_b0           ; Break loop after nloops iterations
 3602+ 1  0C2B	DE FB		        djnz    r6,??0320          ; Test DJNZ instruction
 3603+ 1  0C2D	B4 01 11	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3604:				        tk_ma   r7,tk_b0
 3605+ 1	N      0003	nloops  set     3
 3606+ 1  0C30	7F 03		        mov     r7,#nloops         ; We'll perform a fixed no. of iterations
 3607+ 1  0C32	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3608+ 1  0C34	14		??0321: dec     a
 3609+ 1  0C35	60 0A		        jz      tk_b0           ; Break loop after nloops iterations
 3610+ 1  0C37	DF FB		        djnz    r7,??0321          ; Test DJNZ instruction
 3611+ 1  0C39	B4 01 05	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3612:
 3613:				        eot     'b',tk_b0
 3614+ 1			        putc    #'b'
 3615+ 2  0C3C			??0323:
 3616+ 2			        ;jnb     SCON.1,putc_loop
 3617+ 2			        ;clr     SCON.1
 3618+ 2  0C3C	75 99 62	        mov     SBUF,#'b'
 3619+ 1  0C3F	80 06		        sjmp    ??0322
 3620+ 1  0C41			tk_b0:  putc    #'?'
 3621+ 2  0C41			??0324:
 3622+ 2			        ;jnb     SCON.1,putc_loop
 3623+ 2			        ;clr     SCON.1
 3624+ 2  0C41	75 99 3F	        mov     SBUF,#'?'
 3625+ 1  0C44	75 6E 01	        mov     fail,#001h
 3626+ 1  0C47			??0322:
 3627:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 66



 Line  I  Addr  Code            Source

 3628:				        put_crlf                    ; end of test series
 3629+ 1			        putc    #13
 3630+ 2  0C47			??0325:
 3631+ 2			        ;jnb     SCON.1,putc_loop
 3632+ 2			        ;clr     SCON.1
 3633+ 2  0C47	75 99 0D	        mov     SBUF,#13
 3634+ 1			        putc    #10
 3635+ 2  0C4A			??0326:
 3636+ 2			        ;jnb     SCON.1,putc_loop
 3637+ 2			        ;clr     SCON.1
 3638+ 2  0C4A	75 99 0A	        mov     SBUF,#10
 3639:
 3640:
 3641:				        ;-- Test series L ------------------------------------------------------
 3642:				        ; ADD
 3643:				        ; (See comments for 'ALU opcode block test')
 3644:
 3645:
 3646:				        putc    #'L'                ; start of test series
 3647+ 1  0C4D			??0327:
 3648+ 1			        ;jnb     SCON.1,putc_loop
 3649+ 1			        ;clr     SCON.1
 3650+ 1  0C4D	75 99 4C	        mov     SBUF,#'L'
 3651:
 3652:				        putc    #'0'
 3653+ 1  0C50			??0328:
 3654+ 1			        ;jnb     SCON.1,putc_loop
 3655+ 1			        ;clr     SCON.1
 3656+ 1  0C50	75 99 30	        mov     SBUF,#'0'
 3657:				        tst_alu add,051h,033h,084h,01h,004h     ; /CY /AC  OV
 3658+ 1			        ; Put the argument and result data into variables for easier access
 3659+ 1	N      0051	        arg0    set 051h
 3660+ 1	N      0033	        arg1    set 033h
 3661+ 1	N      0084	        res     set 084h
 3662+ 1
 3663+ 1			        ; Test <op> A, dir
 3664+ 1			        top_ma  add,dir0,??0330,<004h>
 3665+ 2  0C53	75 60 51	        mov     dir0,#arg0
 3666+ 2  0C56	74 33		        mov     a,#arg1
 3667+ 2			        ifnb    <004h>
 3668+ 2			        set_cy  004h
 3669+ 3	N      0000	??0336  set     (004h and 1)
 3670+ 3	N      0000	        if      ??0336 eq 1
 3671+ 3			        setb    c
 3672+ 3			        else
 3673+ 3  0C58	C3		        clr     c
 3674+ 3			        endif
 3675+ 2			        endif
 3676+ 2  0C59	25 60		        add      a,dir0
 3677+ 2			        ifnb    <004h>
 3678+ 2			        save_psw
 3679+ 3  0C5B	85 D0 70	        mov     saved_psw,PSW
 3680+ 2			        endif
 3681+ 2  0C5E	B4 84 6B	        cjne    a,#res,??0330
 3682+ 2			        ifnb    <004h>
 3683+ 2			        tst_psw <004h>,??0330

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 67



 Line  I  Addr  Code            Source

 3684+ 3  0C61	E5 70		        mov     a,saved_psw
 3685+ 3  0C63	54 C4		        anl     a,#0c4h
 3686+ 3  0C65	64 04		        xrl     a,#004h
 3687+ 3  0C67	54 FE		        anl     a,#0feh
 3688+ 3  0C69	70 61		        jnz     ??0330
 3689+ 2			        endif
 3690+ 1			        ; Test <op> A, @R0
 3691+ 1  0C6B	78 60		        mov     r0,#dir0
 3692+ 1			        top_ma  add,@r0,??0330,<004h>
 3693+ 2  0C6D	76 51		        mov     @r0,#arg0
 3694+ 2  0C6F	74 33		        mov     a,#arg1
 3695+ 2			        ifnb    <004h>
 3696+ 2			        set_cy  004h
 3697+ 3	N      0000	??0337  set     (004h and 1)
 3698+ 3	N      0000	        if      ??0337 eq 1
 3699+ 3			        setb    c
 3700+ 3			        else
 3701+ 3  0C71	C3		        clr     c
 3702+ 3			        endif
 3703+ 2			        endif
 3704+ 2  0C72	26		        add      a,@r0
 3705+ 2			        ifnb    <004h>
 3706+ 2			        save_psw
 3707+ 3  0C73	85 D0 70	        mov     saved_psw,PSW
 3708+ 2			        endif
 3709+ 2  0C76	B4 84 53	        cjne    a,#res,??0330
 3710+ 2			        ifnb    <004h>
 3711+ 2			        tst_psw <004h>,??0330
 3712+ 3  0C79	E5 70		        mov     a,saved_psw
 3713+ 3  0C7B	54 C4		        anl     a,#0c4h
 3714+ 3  0C7D	64 04		        xrl     a,#004h
 3715+ 3  0C7F	54 FE		        anl     a,#0feh
 3716+ 3  0C81	70 49		        jnz     ??0330
 3717+ 2			        endif
 3718+ 1			        ; Test <op> A, @R1
 3719+ 1  0C83	79 31		        mov     r1,#031h
 3720+ 1			        top_ma  add,@r1,??0330,<004h>
 3721+ 2  0C85	77 51		        mov     @r1,#arg0
 3722+ 2  0C87	74 33		        mov     a,#arg1
 3723+ 2			        ifnb    <004h>
 3724+ 2			        set_cy  004h
 3725+ 3	N      0000	??0338  set     (004h and 1)
 3726+ 3	N      0000	        if      ??0338 eq 1
 3727+ 3			        setb    c
 3728+ 3			        else
 3729+ 3  0C89	C3		        clr     c
 3730+ 3			        endif
 3731+ 2			        endif
 3732+ 2  0C8A	27		        add      a,@r1
 3733+ 2			        ifnb    <004h>
 3734+ 2			        save_psw
 3735+ 3  0C8B	85 D0 70	        mov     saved_psw,PSW
 3736+ 2			        endif
 3737+ 2  0C8E	B4 84 3B	        cjne    a,#res,??0330
 3738+ 2			        ifnb    <004h>
 3739+ 2			        tst_psw <004h>,??0330

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 68



 Line  I  Addr  Code            Source

 3740+ 3  0C91	E5 70		        mov     a,saved_psw
 3741+ 3  0C93	54 C4		        anl     a,#0c4h
 3742+ 3  0C95	64 04		        xrl     a,#004h
 3743+ 3  0C97	54 FE		        anl     a,#0feh
 3744+ 3  0C99	70 31		        jnz     ??0330
 3745+ 2			        endif
 3746+ 1
 3747+ 1			        ; Now test <op> A, Rn for n in 0..7
 3748+ 1			        top_ma  add,r0,??0330,<004h>
 3749+ 2  0C9B	78 51		        mov     r0,#arg0
 3750+ 2  0C9D	74 33		        mov     a,#arg1
 3751+ 2			        ifnb    <004h>
 3752+ 2			        set_cy  004h
 3753+ 3	N      0000	??0339  set     (004h and 1)
 3754+ 3	N      0000	        if      ??0339 eq 1
 3755+ 3			        setb    c
 3756+ 3			        else
 3757+ 3  0C9F	C3		        clr     c
 3758+ 3			        endif
 3759+ 2			        endif
 3760+ 2  0CA0	28		        add      a,r0
 3761+ 2			        ifnb    <004h>
 3762+ 2			        save_psw
 3763+ 3  0CA1	85 D0 70	        mov     saved_psw,PSW
 3764+ 2			        endif
 3765+ 2  0CA4	B4 84 25	        cjne    a,#res,??0330
 3766+ 2			        ifnb    <004h>
 3767+ 2			        tst_psw <004h>,??0330
 3768+ 3  0CA7	E5 70		        mov     a,saved_psw
 3769+ 3  0CA9	54 C4		        anl     a,#0c4h
 3770+ 3  0CAB	64 04		        xrl     a,#004h
 3771+ 3  0CAD	54 FE		        anl     a,#0feh
 3772+ 3  0CAF	70 1B		        jnz     ??0330
 3773+ 2			        endif
 3774+ 1			        top_ma  add,r1,??0330,<004h>
 3775+ 2  0CB1	79 51		        mov     r1,#arg0
 3776+ 2  0CB3	74 33		        mov     a,#arg1
 3777+ 2			        ifnb    <004h>
 3778+ 2			        set_cy  004h
 3779+ 3	N      0000	??0340  set     (004h and 1)
 3780+ 3	N      0000	        if      ??0340 eq 1
 3781+ 3			        setb    c
 3782+ 3			        else
 3783+ 3  0CB5	C3		        clr     c
 3784+ 3			        endif
 3785+ 2			        endif
 3786+ 2  0CB6	29		        add      a,r1
 3787+ 2			        ifnb    <004h>
 3788+ 2			        save_psw
 3789+ 3  0CB7	85 D0 70	        mov     saved_psw,PSW
 3790+ 2			        endif
 3791+ 2  0CBA	B4 84 0F	        cjne    a,#res,??0330
 3792+ 2			        ifnb    <004h>
 3793+ 2			        tst_psw <004h>,??0330
 3794+ 3  0CBD	E5 70		        mov     a,saved_psw
 3795+ 3  0CBF	54 C4		        anl     a,#0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 69



 Line  I  Addr  Code            Source

 3796+ 3  0CC1	64 04		        xrl     a,#004h
 3797+ 3  0CC3	54 FE		        anl     a,#0feh
 3798+ 3  0CC5	70 05		        jnz     ??0330
 3799+ 2			        endif
 3800+ 1
 3801+ 1			        eot     'a',??0330
 3802+ 2			        putc    #'a'
 3803+ 3  0CC7			??0342:
 3804+ 3			        ;jnb     SCON.1,putc_loop
 3805+ 3			        ;clr     SCON.1
 3806+ 3  0CC7	75 99 61	        mov     SBUF,#'a'
 3807+ 2  0CCA	80 06		        sjmp    ??0341
 3808+ 2  0CCC			??0330:  putc    #'?'
 3809+ 3  0CCC			??0343:
 3810+ 3			        ;jnb     SCON.1,putc_loop
 3811+ 3			        ;clr     SCON.1
 3812+ 3  0CCC	75 99 3F	        mov     SBUF,#'?'
 3813+ 2  0CCF	75 6E 01	        mov     fail,#001h
 3814+ 2  0CD2			??0341:
 3815+ 1
 3816+ 1			        top_ma  add,r2,??0331,<004h>
 3817+ 2  0CD2	7A 51		        mov     r2,#arg0
 3818+ 2  0CD4	74 33		        mov     a,#arg1
 3819+ 2			        ifnb    <004h>
 3820+ 2			        set_cy  004h
 3821+ 3	N      0000	??0344  set     (004h and 1)
 3822+ 3	N      0000	        if      ??0344 eq 1
 3823+ 3			        setb    c
 3824+ 3			        else
 3825+ 3  0CD6	C3		        clr     c
 3826+ 3			        endif
 3827+ 2			        endif
 3828+ 2  0CD7	2A		        add      a,r2
 3829+ 2			        ifnb    <004h>
 3830+ 2			        save_psw
 3831+ 3  0CD8	85 D0 70	        mov     saved_psw,PSW
 3832+ 2			        endif
 3833+ 2  0CDB	B4 84 25	        cjne    a,#res,??0331
 3834+ 2			        ifnb    <004h>
 3835+ 2			        tst_psw <004h>,??0331
 3836+ 3  0CDE	E5 70		        mov     a,saved_psw
 3837+ 3  0CE0	54 C4		        anl     a,#0c4h
 3838+ 3  0CE2	64 04		        xrl     a,#004h
 3839+ 3  0CE4	54 FE		        anl     a,#0feh
 3840+ 3  0CE6	70 1B		        jnz     ??0331
 3841+ 2			        endif
 3842+ 1			        top_ma  add,r3,??0331,<004h>
 3843+ 2  0CE8	7B 51		        mov     r3,#arg0
 3844+ 2  0CEA	74 33		        mov     a,#arg1
 3845+ 2			        ifnb    <004h>
 3846+ 2			        set_cy  004h
 3847+ 3	N      0000	??0345  set     (004h and 1)
 3848+ 3	N      0000	        if      ??0345 eq 1
 3849+ 3			        setb    c
 3850+ 3			        else
 3851+ 3  0CEC	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 70



 Line  I  Addr  Code            Source

 3852+ 3			        endif
 3853+ 2			        endif
 3854+ 2  0CED	2B		        add      a,r3
 3855+ 2			        ifnb    <004h>
 3856+ 2			        save_psw
 3857+ 3  0CEE	85 D0 70	        mov     saved_psw,PSW
 3858+ 2			        endif
 3859+ 2  0CF1	B4 84 0F	        cjne    a,#res,??0331
 3860+ 2			        ifnb    <004h>
 3861+ 2			        tst_psw <004h>,??0331
 3862+ 3  0CF4	E5 70		        mov     a,saved_psw
 3863+ 3  0CF6	54 C4		        anl     a,#0c4h
 3864+ 3  0CF8	64 04		        xrl     a,#004h
 3865+ 3  0CFA	54 FE		        anl     a,#0feh
 3866+ 3  0CFC	70 05		        jnz     ??0331
 3867+ 2			        endif
 3868+ 1
 3869+ 1			        eot     'b',??0331
 3870+ 2			        putc    #'b'
 3871+ 3  0CFE			??0347:
 3872+ 3			        ;jnb     SCON.1,putc_loop
 3873+ 3			        ;clr     SCON.1
 3874+ 3  0CFE	75 99 62	        mov     SBUF,#'b'
 3875+ 2  0D01	80 06		        sjmp    ??0346
 3876+ 2  0D03			??0331:  putc    #'?'
 3877+ 3  0D03			??0348:
 3878+ 3			        ;jnb     SCON.1,putc_loop
 3879+ 3			        ;clr     SCON.1
 3880+ 3  0D03	75 99 3F	        mov     SBUF,#'?'
 3881+ 2  0D06	75 6E 01	        mov     fail,#001h
 3882+ 2  0D09			??0346:
 3883+ 1
 3884+ 1			        top_ma  add,r4,??0332,<004h>
 3885+ 2  0D09	7C 51		        mov     r4,#arg0
 3886+ 2  0D0B	74 33		        mov     a,#arg1
 3887+ 2			        ifnb    <004h>
 3888+ 2			        set_cy  004h
 3889+ 3	N      0000	??0349  set     (004h and 1)
 3890+ 3	N      0000	        if      ??0349 eq 1
 3891+ 3			        setb    c
 3892+ 3			        else
 3893+ 3  0D0D	C3		        clr     c
 3894+ 3			        endif
 3895+ 2			        endif
 3896+ 2  0D0E	2C		        add      a,r4
 3897+ 2			        ifnb    <004h>
 3898+ 2			        save_psw
 3899+ 3  0D0F	85 D0 70	        mov     saved_psw,PSW
 3900+ 2			        endif
 3901+ 2  0D12	B4 84 25	        cjne    a,#res,??0332
 3902+ 2			        ifnb    <004h>
 3903+ 2			        tst_psw <004h>,??0332
 3904+ 3  0D15	E5 70		        mov     a,saved_psw
 3905+ 3  0D17	54 C4		        anl     a,#0c4h
 3906+ 3  0D19	64 04		        xrl     a,#004h
 3907+ 3  0D1B	54 FE		        anl     a,#0feh

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 71



 Line  I  Addr  Code            Source

 3908+ 3  0D1D	70 1B		        jnz     ??0332
 3909+ 2			        endif
 3910+ 1			        top_ma  add,r5,??0332,<004h>
 3911+ 2  0D1F	7D 51		        mov     r5,#arg0
 3912+ 2  0D21	74 33		        mov     a,#arg1
 3913+ 2			        ifnb    <004h>
 3914+ 2			        set_cy  004h
 3915+ 3	N      0000	??0350  set     (004h and 1)
 3916+ 3	N      0000	        if      ??0350 eq 1
 3917+ 3			        setb    c
 3918+ 3			        else
 3919+ 3  0D23	C3		        clr     c
 3920+ 3			        endif
 3921+ 2			        endif
 3922+ 2  0D24	2D		        add      a,r5
 3923+ 2			        ifnb    <004h>
 3924+ 2			        save_psw
 3925+ 3  0D25	85 D0 70	        mov     saved_psw,PSW
 3926+ 2			        endif
 3927+ 2  0D28	B4 84 0F	        cjne    a,#res,??0332
 3928+ 2			        ifnb    <004h>
 3929+ 2			        tst_psw <004h>,??0332
 3930+ 3  0D2B	E5 70		        mov     a,saved_psw
 3931+ 3  0D2D	54 C4		        anl     a,#0c4h
 3932+ 3  0D2F	64 04		        xrl     a,#004h
 3933+ 3  0D31	54 FE		        anl     a,#0feh
 3934+ 3  0D33	70 05		        jnz     ??0332
 3935+ 2			        endif
 3936+ 1
 3937+ 1			        eot     'c',??0332
 3938+ 2			        putc    #'c'
 3939+ 3  0D35			??0352:
 3940+ 3			        ;jnb     SCON.1,putc_loop
 3941+ 3			        ;clr     SCON.1
 3942+ 3  0D35	75 99 63	        mov     SBUF,#'c'
 3943+ 2  0D38	80 06		        sjmp    ??0351
 3944+ 2  0D3A			??0332:  putc    #'?'
 3945+ 3  0D3A			??0353:
 3946+ 3			        ;jnb     SCON.1,putc_loop
 3947+ 3			        ;clr     SCON.1
 3948+ 3  0D3A	75 99 3F	        mov     SBUF,#'?'
 3949+ 2  0D3D	75 6E 01	        mov     fail,#001h
 3950+ 2  0D40			??0351:
 3951+ 1
 3952+ 1			        top_ma  add,r6,??0329,<004h>
 3953+ 2  0D40	7E 51		        mov     r6,#arg0
 3954+ 2  0D42	74 33		        mov     a,#arg1
 3955+ 2			        ifnb    <004h>
 3956+ 2			        set_cy  004h
 3957+ 3	N      0000	??0354  set     (004h and 1)
 3958+ 3	N      0000	        if      ??0354 eq 1
 3959+ 3			        setb    c
 3960+ 3			        else
 3961+ 3  0D44	C3		        clr     c
 3962+ 3			        endif
 3963+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 72



 Line  I  Addr  Code            Source

 3964+ 2  0D45	2E		        add      a,r6
 3965+ 2			        ifnb    <004h>
 3966+ 2			        save_psw
 3967+ 3  0D46	85 D0 70	        mov     saved_psw,PSW
 3968+ 2			        endif
 3969+ 2  0D49	B4 84 25	        cjne    a,#res,??0329
 3970+ 2			        ifnb    <004h>
 3971+ 2			        tst_psw <004h>,??0329
 3972+ 3  0D4C	E5 70		        mov     a,saved_psw
 3973+ 3  0D4E	54 C4		        anl     a,#0c4h
 3974+ 3  0D50	64 04		        xrl     a,#004h
 3975+ 3  0D52	54 FE		        anl     a,#0feh
 3976+ 3  0D54	70 1B		        jnz     ??0329
 3977+ 2			        endif
 3978+ 1			        top_ma  add,r7,??0329,<004h>
 3979+ 2  0D56	7F 51		        mov     r7,#arg0
 3980+ 2  0D58	74 33		        mov     a,#arg1
 3981+ 2			        ifnb    <004h>
 3982+ 2			        set_cy  004h
 3983+ 3	N      0000	??0355  set     (004h and 1)
 3984+ 3	N      0000	        if      ??0355 eq 1
 3985+ 3			        setb    c
 3986+ 3			        else
 3987+ 3  0D5A	C3		        clr     c
 3988+ 3			        endif
 3989+ 2			        endif
 3990+ 2  0D5B	2F		        add      a,r7
 3991+ 2			        ifnb    <004h>
 3992+ 2			        save_psw
 3993+ 3  0D5C	85 D0 70	        mov     saved_psw,PSW
 3994+ 2			        endif
 3995+ 2  0D5F	B4 84 0F	        cjne    a,#res,??0329
 3996+ 2			        ifnb    <004h>
 3997+ 2			        tst_psw <004h>,??0329
 3998+ 3  0D62	E5 70		        mov     a,saved_psw
 3999+ 3  0D64	54 C4		        anl     a,#0c4h
 4000+ 3  0D66	64 04		        xrl     a,#004h
 4001+ 3  0D68	54 FE		        anl     a,#0feh
 4002+ 3  0D6A	70 05		        jnz     ??0329
 4003+ 2			        endif
 4004+ 1
 4005+ 1			        eot     'd',??0329
 4006+ 2			        putc    #'d'
 4007+ 3  0D6C			??0357:
 4008+ 3			        ;jnb     SCON.1,putc_loop
 4009+ 3			        ;clr     SCON.1
 4010+ 3  0D6C	75 99 64	        mov     SBUF,#'d'
 4011+ 2  0D6F	80 06		        sjmp    ??0356
 4012+ 2  0D71			??0329:  putc    #'?'
 4013+ 3  0D71			??0358:
 4014+ 3			        ;jnb     SCON.1,putc_loop
 4015+ 3			        ;clr     SCON.1
 4016+ 3  0D71	75 99 3F	        mov     SBUF,#'?'
 4017+ 2  0D74	75 6E 01	        mov     fail,#001h
 4018+ 2  0D77			??0356:
 4019+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 73



 Line  I  Addr  Code            Source

 4020+ 1
 4021+ 1			        ; Optionally test immediate addressing modes.
 4022+ 1
 4023+ 1	N      FFFF	        if      (01h and 1) ne 0
 4024+ 1			        ; Test <op> A, #arg1...
 4025+ 1			        top_mb  add,a,??0333,<004h>
 4026+ 2  0D77	74 33		        mov     a,#arg1
 4027+ 2			        ifnb    <004h>
 4028+ 2			        set_cy  004h
 4029+ 3	N      0000	??0359  set     (004h and 1)
 4030+ 3	N      0000	        if      ??0359 eq 1
 4031+ 3			        setb    c
 4032+ 3			        else
 4033+ 3  0D79	C3		        clr     c
 4034+ 3			        endif
 4035+ 2			        endif
 4036+ 2  0D7A	24 51		        add      a,#arg0
 4037+ 2			        ifnb    <004h>
 4038+ 2			        save_psw
 4039+ 3  0D7C	85 D0 70	        mov     saved_psw,PSW
 4040+ 2			        endif
 4041+ 2  0D7F	F5 E0		        mov     ACC,a
 4042+ 2  0D81	B4 84 0F	        cjne    a,#res,??0333
 4043+ 2			        ifnb    <004h>
 4044+ 2			        tst_psw <004h>,??0333
 4045+ 3  0D84	E5 70		        mov     a,saved_psw
 4046+ 3  0D86	54 C4		        anl     a,#0c4h
 4047+ 3  0D88	64 04		        xrl     a,#004h
 4048+ 3  0D8A	54 FE		        anl     a,#0feh
 4049+ 3  0D8C	70 05		        jnz     ??0333
 4050+ 2			        endif
 4051+ 1			        eot     'e',??0333
 4052+ 2			        putc    #'e'
 4053+ 3  0D8E			??0361:
 4054+ 3			        ;jnb     SCON.1,putc_loop
 4055+ 3			        ;clr     SCON.1
 4056+ 3  0D8E	75 99 65	        mov     SBUF,#'e'
 4057+ 2  0D91	80 06		        sjmp    ??0360
 4058+ 2  0D93			??0333:  putc    #'?'
 4059+ 3  0D93			??0362:
 4060+ 3			        ;jnb     SCON.1,putc_loop
 4061+ 3			        ;clr     SCON.1
 4062+ 3  0D93	75 99 3F	        mov     SBUF,#'?'
 4063+ 2  0D96	75 6E 01	        mov     fail,#001h
 4064+ 2  0D99			??0360:
 4065+ 1			        endif
 4066+ 1
 4067+ 1	N      0000	        if      (01h and 2) ne 0
 4068+ 1			        ; ...and <op> dir, #arg1
 4069+ 1			        top_mb  add,dir0,??0334,<004h>
 4070+ 1			        eot     'f',??0334
 4071+ 1			        endif
 4072+ 1
 4073+ 1			        ; Optionally test <op> dir, A
 4074+ 1	N      0000	        if      (01h and 4) ne 0
 4075+ 1			        top_mc  add,??0335,<004h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 74



 Line  I  Addr  Code            Source

 4076+ 1			        eot     'g',??0335
 4077+ 1			        endif
 4078+ 1
 4079:				        putc    #'1'
 4080+ 1  0D99			??0363:
 4081+ 1			        ;jnb     SCON.1,putc_loop
 4082+ 1			        ;clr     SCON.1
 4083+ 1  0D99	75 99 31	        mov     SBUF,#'1'
 4084:				        tst_alu add,081h,093h,014h,01h,084h     ;  CY /AC  OV
 4085+ 1			        ; Put the argument and result data into variables for easier access
 4086+ 1	N      0081	        arg0    set 081h
 4087+ 1	N      0093	        arg1    set 093h
 4088+ 1	N      0014	        res     set 014h
 4089+ 1
 4090+ 1			        ; Test <op> A, dir
 4091+ 1			        top_ma  add,dir0,??0365,<084h>
 4092+ 2  0D9C	75 60 81	        mov     dir0,#arg0
 4093+ 2  0D9F	74 93		        mov     a,#arg1
 4094+ 2			        ifnb    <084h>
 4095+ 2			        set_cy  084h
 4096+ 3	N      0000	??0371  set     (084h and 1)
 4097+ 3	N      0000	        if      ??0371 eq 1
 4098+ 3			        setb    c
 4099+ 3			        else
 4100+ 3  0DA1	C3		        clr     c
 4101+ 3			        endif
 4102+ 2			        endif
 4103+ 2  0DA2	25 60		        add      a,dir0
 4104+ 2			        ifnb    <084h>
 4105+ 2			        save_psw
 4106+ 3  0DA4	85 D0 70	        mov     saved_psw,PSW
 4107+ 2			        endif
 4108+ 2  0DA7	B4 14 6B	        cjne    a,#res,??0365
 4109+ 2			        ifnb    <084h>
 4110+ 2			        tst_psw <084h>,??0365
 4111+ 3  0DAA	E5 70		        mov     a,saved_psw
 4112+ 3  0DAC	54 C4		        anl     a,#0c4h
 4113+ 3  0DAE	64 84		        xrl     a,#084h
 4114+ 3  0DB0	54 FE		        anl     a,#0feh
 4115+ 3  0DB2	70 61		        jnz     ??0365
 4116+ 2			        endif
 4117+ 1			        ; Test <op> A, @R0
 4118+ 1  0DB4	78 60		        mov     r0,#dir0
 4119+ 1			        top_ma  add,@r0,??0365,<084h>
 4120+ 2  0DB6	76 81		        mov     @r0,#arg0
 4121+ 2  0DB8	74 93		        mov     a,#arg1
 4122+ 2			        ifnb    <084h>
 4123+ 2			        set_cy  084h
 4124+ 3	N      0000	??0372  set     (084h and 1)
 4125+ 3	N      0000	        if      ??0372 eq 1
 4126+ 3			        setb    c
 4127+ 3			        else
 4128+ 3  0DBA	C3		        clr     c
 4129+ 3			        endif
 4130+ 2			        endif
 4131+ 2  0DBB	26		        add      a,@r0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 75



 Line  I  Addr  Code            Source

 4132+ 2			        ifnb    <084h>
 4133+ 2			        save_psw
 4134+ 3  0DBC	85 D0 70	        mov     saved_psw,PSW
 4135+ 2			        endif
 4136+ 2  0DBF	B4 14 53	        cjne    a,#res,??0365
 4137+ 2			        ifnb    <084h>
 4138+ 2			        tst_psw <084h>,??0365
 4139+ 3  0DC2	E5 70		        mov     a,saved_psw
 4140+ 3  0DC4	54 C4		        anl     a,#0c4h
 4141+ 3  0DC6	64 84		        xrl     a,#084h
 4142+ 3  0DC8	54 FE		        anl     a,#0feh
 4143+ 3  0DCA	70 49		        jnz     ??0365
 4144+ 2			        endif
 4145+ 1			        ; Test <op> A, @R1
 4146+ 1  0DCC	79 31		        mov     r1,#031h
 4147+ 1			        top_ma  add,@r1,??0365,<084h>
 4148+ 2  0DCE	77 81		        mov     @r1,#arg0
 4149+ 2  0DD0	74 93		        mov     a,#arg1
 4150+ 2			        ifnb    <084h>
 4151+ 2			        set_cy  084h
 4152+ 3	N      0000	??0373  set     (084h and 1)
 4153+ 3	N      0000	        if      ??0373 eq 1
 4154+ 3			        setb    c
 4155+ 3			        else
 4156+ 3  0DD2	C3		        clr     c
 4157+ 3			        endif
 4158+ 2			        endif
 4159+ 2  0DD3	27		        add      a,@r1
 4160+ 2			        ifnb    <084h>
 4161+ 2			        save_psw
 4162+ 3  0DD4	85 D0 70	        mov     saved_psw,PSW
 4163+ 2			        endif
 4164+ 2  0DD7	B4 14 3B	        cjne    a,#res,??0365
 4165+ 2			        ifnb    <084h>
 4166+ 2			        tst_psw <084h>,??0365
 4167+ 3  0DDA	E5 70		        mov     a,saved_psw
 4168+ 3  0DDC	54 C4		        anl     a,#0c4h
 4169+ 3  0DDE	64 84		        xrl     a,#084h
 4170+ 3  0DE0	54 FE		        anl     a,#0feh
 4171+ 3  0DE2	70 31		        jnz     ??0365
 4172+ 2			        endif
 4173+ 1
 4174+ 1			        ; Now test <op> A, Rn for n in 0..7
 4175+ 1			        top_ma  add,r0,??0365,<084h>
 4176+ 2  0DE4	78 81		        mov     r0,#arg0
 4177+ 2  0DE6	74 93		        mov     a,#arg1
 4178+ 2			        ifnb    <084h>
 4179+ 2			        set_cy  084h
 4180+ 3	N      0000	??0374  set     (084h and 1)
 4181+ 3	N      0000	        if      ??0374 eq 1
 4182+ 3			        setb    c
 4183+ 3			        else
 4184+ 3  0DE8	C3		        clr     c
 4185+ 3			        endif
 4186+ 2			        endif
 4187+ 2  0DE9	28		        add      a,r0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 76



 Line  I  Addr  Code            Source

 4188+ 2			        ifnb    <084h>
 4189+ 2			        save_psw
 4190+ 3  0DEA	85 D0 70	        mov     saved_psw,PSW
 4191+ 2			        endif
 4192+ 2  0DED	B4 14 25	        cjne    a,#res,??0365
 4193+ 2			        ifnb    <084h>
 4194+ 2			        tst_psw <084h>,??0365
 4195+ 3  0DF0	E5 70		        mov     a,saved_psw
 4196+ 3  0DF2	54 C4		        anl     a,#0c4h
 4197+ 3  0DF4	64 84		        xrl     a,#084h
 4198+ 3  0DF6	54 FE		        anl     a,#0feh
 4199+ 3  0DF8	70 1B		        jnz     ??0365
 4200+ 2			        endif
 4201+ 1			        top_ma  add,r1,??0365,<084h>
 4202+ 2  0DFA	79 81		        mov     r1,#arg0
 4203+ 2  0DFC	74 93		        mov     a,#arg1
 4204+ 2			        ifnb    <084h>
 4205+ 2			        set_cy  084h
 4206+ 3	N      0000	??0375  set     (084h and 1)
 4207+ 3	N      0000	        if      ??0375 eq 1
 4208+ 3			        setb    c
 4209+ 3			        else
 4210+ 3  0DFE	C3		        clr     c
 4211+ 3			        endif
 4212+ 2			        endif
 4213+ 2  0DFF	29		        add      a,r1
 4214+ 2			        ifnb    <084h>
 4215+ 2			        save_psw
 4216+ 3  0E00	85 D0 70	        mov     saved_psw,PSW
 4217+ 2			        endif
 4218+ 2  0E03	B4 14 0F	        cjne    a,#res,??0365
 4219+ 2			        ifnb    <084h>
 4220+ 2			        tst_psw <084h>,??0365
 4221+ 3  0E06	E5 70		        mov     a,saved_psw
 4222+ 3  0E08	54 C4		        anl     a,#0c4h
 4223+ 3  0E0A	64 84		        xrl     a,#084h
 4224+ 3  0E0C	54 FE		        anl     a,#0feh
 4225+ 3  0E0E	70 05		        jnz     ??0365
 4226+ 2			        endif
 4227+ 1
 4228+ 1			        eot     'a',??0365
 4229+ 2			        putc    #'a'
 4230+ 3  0E10			??0377:
 4231+ 3			        ;jnb     SCON.1,putc_loop
 4232+ 3			        ;clr     SCON.1
 4233+ 3  0E10	75 99 61	        mov     SBUF,#'a'
 4234+ 2  0E13	80 06		        sjmp    ??0376
 4235+ 2  0E15			??0365:  putc    #'?'
 4236+ 3  0E15			??0378:
 4237+ 3			        ;jnb     SCON.1,putc_loop
 4238+ 3			        ;clr     SCON.1
 4239+ 3  0E15	75 99 3F	        mov     SBUF,#'?'
 4240+ 2  0E18	75 6E 01	        mov     fail,#001h
 4241+ 2  0E1B			??0376:
 4242+ 1
 4243+ 1			        top_ma  add,r2,??0366,<084h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 77



 Line  I  Addr  Code            Source

 4244+ 2  0E1B	7A 81		        mov     r2,#arg0
 4245+ 2  0E1D	74 93		        mov     a,#arg1
 4246+ 2			        ifnb    <084h>
 4247+ 2			        set_cy  084h
 4248+ 3	N      0000	??0379  set     (084h and 1)
 4249+ 3	N      0000	        if      ??0379 eq 1
 4250+ 3			        setb    c
 4251+ 3			        else
 4252+ 3  0E1F	C3		        clr     c
 4253+ 3			        endif
 4254+ 2			        endif
 4255+ 2  0E20	2A		        add      a,r2
 4256+ 2			        ifnb    <084h>
 4257+ 2			        save_psw
 4258+ 3  0E21	85 D0 70	        mov     saved_psw,PSW
 4259+ 2			        endif
 4260+ 2  0E24	B4 14 25	        cjne    a,#res,??0366
 4261+ 2			        ifnb    <084h>
 4262+ 2			        tst_psw <084h>,??0366
 4263+ 3  0E27	E5 70		        mov     a,saved_psw
 4264+ 3  0E29	54 C4		        anl     a,#0c4h
 4265+ 3  0E2B	64 84		        xrl     a,#084h
 4266+ 3  0E2D	54 FE		        anl     a,#0feh
 4267+ 3  0E2F	70 1B		        jnz     ??0366
 4268+ 2			        endif
 4269+ 1			        top_ma  add,r3,??0366,<084h>
 4270+ 2  0E31	7B 81		        mov     r3,#arg0
 4271+ 2  0E33	74 93		        mov     a,#arg1
 4272+ 2			        ifnb    <084h>
 4273+ 2			        set_cy  084h
 4274+ 3	N      0000	??0380  set     (084h and 1)
 4275+ 3	N      0000	        if      ??0380 eq 1
 4276+ 3			        setb    c
 4277+ 3			        else
 4278+ 3  0E35	C3		        clr     c
 4279+ 3			        endif
 4280+ 2			        endif
 4281+ 2  0E36	2B		        add      a,r3
 4282+ 2			        ifnb    <084h>
 4283+ 2			        save_psw
 4284+ 3  0E37	85 D0 70	        mov     saved_psw,PSW
 4285+ 2			        endif
 4286+ 2  0E3A	B4 14 0F	        cjne    a,#res,??0366
 4287+ 2			        ifnb    <084h>
 4288+ 2			        tst_psw <084h>,??0366
 4289+ 3  0E3D	E5 70		        mov     a,saved_psw
 4290+ 3  0E3F	54 C4		        anl     a,#0c4h
 4291+ 3  0E41	64 84		        xrl     a,#084h
 4292+ 3  0E43	54 FE		        anl     a,#0feh
 4293+ 3  0E45	70 05		        jnz     ??0366
 4294+ 2			        endif
 4295+ 1
 4296+ 1			        eot     'b',??0366
 4297+ 2			        putc    #'b'
 4298+ 3  0E47			??0382:
 4299+ 3			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 78



 Line  I  Addr  Code            Source

 4300+ 3			        ;clr     SCON.1
 4301+ 3  0E47	75 99 62	        mov     SBUF,#'b'
 4302+ 2  0E4A	80 06		        sjmp    ??0381
 4303+ 2  0E4C			??0366:  putc    #'?'
 4304+ 3  0E4C			??0383:
 4305+ 3			        ;jnb     SCON.1,putc_loop
 4306+ 3			        ;clr     SCON.1
 4307+ 3  0E4C	75 99 3F	        mov     SBUF,#'?'
 4308+ 2  0E4F	75 6E 01	        mov     fail,#001h
 4309+ 2  0E52			??0381:
 4310+ 1
 4311+ 1			        top_ma  add,r4,??0367,<084h>
 4312+ 2  0E52	7C 81		        mov     r4,#arg0
 4313+ 2  0E54	74 93		        mov     a,#arg1
 4314+ 2			        ifnb    <084h>
 4315+ 2			        set_cy  084h
 4316+ 3	N      0000	??0384  set     (084h and 1)
 4317+ 3	N      0000	        if      ??0384 eq 1
 4318+ 3			        setb    c
 4319+ 3			        else
 4320+ 3  0E56	C3		        clr     c
 4321+ 3			        endif
 4322+ 2			        endif
 4323+ 2  0E57	2C		        add      a,r4
 4324+ 2			        ifnb    <084h>
 4325+ 2			        save_psw
 4326+ 3  0E58	85 D0 70	        mov     saved_psw,PSW
 4327+ 2			        endif
 4328+ 2  0E5B	B4 14 25	        cjne    a,#res,??0367
 4329+ 2			        ifnb    <084h>
 4330+ 2			        tst_psw <084h>,??0367
 4331+ 3  0E5E	E5 70		        mov     a,saved_psw
 4332+ 3  0E60	54 C4		        anl     a,#0c4h
 4333+ 3  0E62	64 84		        xrl     a,#084h
 4334+ 3  0E64	54 FE		        anl     a,#0feh
 4335+ 3  0E66	70 1B		        jnz     ??0367
 4336+ 2			        endif
 4337+ 1			        top_ma  add,r5,??0367,<084h>
 4338+ 2  0E68	7D 81		        mov     r5,#arg0
 4339+ 2  0E6A	74 93		        mov     a,#arg1
 4340+ 2			        ifnb    <084h>
 4341+ 2			        set_cy  084h
 4342+ 3	N      0000	??0385  set     (084h and 1)
 4343+ 3	N      0000	        if      ??0385 eq 1
 4344+ 3			        setb    c
 4345+ 3			        else
 4346+ 3  0E6C	C3		        clr     c
 4347+ 3			        endif
 4348+ 2			        endif
 4349+ 2  0E6D	2D		        add      a,r5
 4350+ 2			        ifnb    <084h>
 4351+ 2			        save_psw
 4352+ 3  0E6E	85 D0 70	        mov     saved_psw,PSW
 4353+ 2			        endif
 4354+ 2  0E71	B4 14 0F	        cjne    a,#res,??0367
 4355+ 2			        ifnb    <084h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 79



 Line  I  Addr  Code            Source

 4356+ 2			        tst_psw <084h>,??0367
 4357+ 3  0E74	E5 70		        mov     a,saved_psw
 4358+ 3  0E76	54 C4		        anl     a,#0c4h
 4359+ 3  0E78	64 84		        xrl     a,#084h
 4360+ 3  0E7A	54 FE		        anl     a,#0feh
 4361+ 3  0E7C	70 05		        jnz     ??0367
 4362+ 2			        endif
 4363+ 1
 4364+ 1			        eot     'c',??0367
 4365+ 2			        putc    #'c'
 4366+ 3  0E7E			??0387:
 4367+ 3			        ;jnb     SCON.1,putc_loop
 4368+ 3			        ;clr     SCON.1
 4369+ 3  0E7E	75 99 63	        mov     SBUF,#'c'
 4370+ 2  0E81	80 06		        sjmp    ??0386
 4371+ 2  0E83			??0367:  putc    #'?'
 4372+ 3  0E83			??0388:
 4373+ 3			        ;jnb     SCON.1,putc_loop
 4374+ 3			        ;clr     SCON.1
 4375+ 3  0E83	75 99 3F	        mov     SBUF,#'?'
 4376+ 2  0E86	75 6E 01	        mov     fail,#001h
 4377+ 2  0E89			??0386:
 4378+ 1
 4379+ 1			        top_ma  add,r6,??0364,<084h>
 4380+ 2  0E89	7E 81		        mov     r6,#arg0
 4381+ 2  0E8B	74 93		        mov     a,#arg1
 4382+ 2			        ifnb    <084h>
 4383+ 2			        set_cy  084h
 4384+ 3	N      0000	??0389  set     (084h and 1)
 4385+ 3	N      0000	        if      ??0389 eq 1
 4386+ 3			        setb    c
 4387+ 3			        else
 4388+ 3  0E8D	C3		        clr     c
 4389+ 3			        endif
 4390+ 2			        endif
 4391+ 2  0E8E	2E		        add      a,r6
 4392+ 2			        ifnb    <084h>
 4393+ 2			        save_psw
 4394+ 3  0E8F	85 D0 70	        mov     saved_psw,PSW
 4395+ 2			        endif
 4396+ 2  0E92	B4 14 25	        cjne    a,#res,??0364
 4397+ 2			        ifnb    <084h>
 4398+ 2			        tst_psw <084h>,??0364
 4399+ 3  0E95	E5 70		        mov     a,saved_psw
 4400+ 3  0E97	54 C4		        anl     a,#0c4h
 4401+ 3  0E99	64 84		        xrl     a,#084h
 4402+ 3  0E9B	54 FE		        anl     a,#0feh
 4403+ 3  0E9D	70 1B		        jnz     ??0364
 4404+ 2			        endif
 4405+ 1			        top_ma  add,r7,??0364,<084h>
 4406+ 2  0E9F	7F 81		        mov     r7,#arg0
 4407+ 2  0EA1	74 93		        mov     a,#arg1
 4408+ 2			        ifnb    <084h>
 4409+ 2			        set_cy  084h
 4410+ 3	N      0000	??0390  set     (084h and 1)
 4411+ 3	N      0000	        if      ??0390 eq 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 80



 Line  I  Addr  Code            Source

 4412+ 3			        setb    c
 4413+ 3			        else
 4414+ 3  0EA3	C3		        clr     c
 4415+ 3			        endif
 4416+ 2			        endif
 4417+ 2  0EA4	2F		        add      a,r7
 4418+ 2			        ifnb    <084h>
 4419+ 2			        save_psw
 4420+ 3  0EA5	85 D0 70	        mov     saved_psw,PSW
 4421+ 2			        endif
 4422+ 2  0EA8	B4 14 0F	        cjne    a,#res,??0364
 4423+ 2			        ifnb    <084h>
 4424+ 2			        tst_psw <084h>,??0364
 4425+ 3  0EAB	E5 70		        mov     a,saved_psw
 4426+ 3  0EAD	54 C4		        anl     a,#0c4h
 4427+ 3  0EAF	64 84		        xrl     a,#084h
 4428+ 3  0EB1	54 FE		        anl     a,#0feh
 4429+ 3  0EB3	70 05		        jnz     ??0364
 4430+ 2			        endif
 4431+ 1
 4432+ 1			        eot     'd',??0364
 4433+ 2			        putc    #'d'
 4434+ 3  0EB5			??0392:
 4435+ 3			        ;jnb     SCON.1,putc_loop
 4436+ 3			        ;clr     SCON.1
 4437+ 3  0EB5	75 99 64	        mov     SBUF,#'d'
 4438+ 2  0EB8	80 06		        sjmp    ??0391
 4439+ 2  0EBA			??0364:  putc    #'?'
 4440+ 3  0EBA			??0393:
 4441+ 3			        ;jnb     SCON.1,putc_loop
 4442+ 3			        ;clr     SCON.1
 4443+ 3  0EBA	75 99 3F	        mov     SBUF,#'?'
 4444+ 2  0EBD	75 6E 01	        mov     fail,#001h
 4445+ 2  0EC0			??0391:
 4446+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 4447+ 1
 4448+ 1			        ; Optionally test immediate addressing modes.
 4449+ 1
 4450+ 1	N      FFFF	        if      (01h and 1) ne 0
 4451+ 1			        ; Test <op> A, #arg1...
 4452+ 1			        top_mb  add,a,??0368,<084h>
 4453+ 2  0EC0	74 93		        mov     a,#arg1
 4454+ 2			        ifnb    <084h>
 4455+ 2			        set_cy  084h
 4456+ 3	N      0000	??0394  set     (084h and 1)
 4457+ 3	N      0000	        if      ??0394 eq 1
 4458+ 3			        setb    c
 4459+ 3			        else
 4460+ 3  0EC2	C3		        clr     c
 4461+ 3			        endif
 4462+ 2			        endif
 4463+ 2  0EC3	24 81		        add      a,#arg0
 4464+ 2			        ifnb    <084h>
 4465+ 2			        save_psw
 4466+ 3  0EC5	85 D0 70	        mov     saved_psw,PSW
 4467+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 81



 Line  I  Addr  Code            Source

 4468+ 2  0EC8	F5 E0		        mov     ACC,a
 4469+ 2  0ECA	B4 14 0F	        cjne    a,#res,??0368
 4470+ 2			        ifnb    <084h>
 4471+ 2			        tst_psw <084h>,??0368
 4472+ 3  0ECD	E5 70		        mov     a,saved_psw
 4473+ 3  0ECF	54 C4		        anl     a,#0c4h
 4474+ 3  0ED1	64 84		        xrl     a,#084h
 4475+ 3  0ED3	54 FE		        anl     a,#0feh
 4476+ 3  0ED5	70 05		        jnz     ??0368
 4477+ 2			        endif
 4478+ 1			        eot     'e',??0368
 4479+ 2			        putc    #'e'
 4480+ 3  0ED7			??0396:
 4481+ 3			        ;jnb     SCON.1,putc_loop
 4482+ 3			        ;clr     SCON.1
 4483+ 3  0ED7	75 99 65	        mov     SBUF,#'e'
 4484+ 2  0EDA	80 06		        sjmp    ??0395
 4485+ 2  0EDC			??0368:  putc    #'?'
 4486+ 3  0EDC			??0397:
 4487+ 3			        ;jnb     SCON.1,putc_loop
 4488+ 3			        ;clr     SCON.1
 4489+ 3  0EDC	75 99 3F	        mov     SBUF,#'?'
 4490+ 2  0EDF	75 6E 01	        mov     fail,#001h
 4491+ 2  0EE2			??0395:
 4492+ 1			        endif
 4493+ 1
 4494+ 1	N      0000	        if      (01h and 2) ne 0
 4495+ 1			        ; ...and <op> dir, #arg1
 4496+ 1			        top_mb  add,dir0,??0369,<084h>
 4497+ 1			        eot     'f',??0369
 4498+ 1			        endif
 4499+ 1
 4500+ 1			        ; Optionally test <op> dir, A
 4501+ 1	N      0000	        if      (01h and 4) ne 0
 4502+ 1			        top_mc  add,??0370,<084h>
 4503+ 1			        eot     'g',??0370
 4504+ 1			        endif
 4505+ 1
 4506:				        putc    #'2'
 4507+ 1  0EE2			??0398:
 4508+ 1			        ;jnb     SCON.1,putc_loop
 4509+ 1			        ;clr     SCON.1
 4510+ 1  0EE2	75 99 32	        mov     SBUF,#'2'
 4511:				        tst_alu add,088h,098h,020h,01h,0c4h     ;  CY  AC  OV
 4512+ 1			        ; Put the argument and result data into variables for easier access
 4513+ 1	N      0088	        arg0    set 088h
 4514+ 1	N      0098	        arg1    set 098h
 4515+ 1	N      0020	        res     set 020h
 4516+ 1
 4517+ 1			        ; Test <op> A, dir
 4518+ 1			        top_ma  add,dir0,??0400,<0c4h>
 4519+ 2  0EE5	75 60 88	        mov     dir0,#arg0
 4520+ 2  0EE8	74 98		        mov     a,#arg1
 4521+ 2			        ifnb    <0c4h>
 4522+ 2			        set_cy  0c4h
 4523+ 3	N      0000	??0406  set     (0c4h and 1)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 82



 Line  I  Addr  Code            Source

 4524+ 3	N      0000	        if      ??0406 eq 1
 4525+ 3			        setb    c
 4526+ 3			        else
 4527+ 3  0EEA	C3		        clr     c
 4528+ 3			        endif
 4529+ 2			        endif
 4530+ 2  0EEB	25 60		        add      a,dir0
 4531+ 2			        ifnb    <0c4h>
 4532+ 2			        save_psw
 4533+ 3  0EED	85 D0 70	        mov     saved_psw,PSW
 4534+ 2			        endif
 4535+ 2  0EF0	B4 20 6B	        cjne    a,#res,??0400
 4536+ 2			        ifnb    <0c4h>
 4537+ 2			        tst_psw <0c4h>,??0400
 4538+ 3  0EF3	E5 70		        mov     a,saved_psw
 4539+ 3  0EF5	54 C4		        anl     a,#0c4h
 4540+ 3  0EF7	64 C4		        xrl     a,#0c4h
 4541+ 3  0EF9	54 FE		        anl     a,#0feh
 4542+ 3  0EFB	70 61		        jnz     ??0400
 4543+ 2			        endif
 4544+ 1			        ; Test <op> A, @R0
 4545+ 1  0EFD	78 60		        mov     r0,#dir0
 4546+ 1			        top_ma  add,@r0,??0400,<0c4h>
 4547+ 2  0EFF	76 88		        mov     @r0,#arg0
 4548+ 2  0F01	74 98		        mov     a,#arg1
 4549+ 2			        ifnb    <0c4h>
 4550+ 2			        set_cy  0c4h
 4551+ 3	N      0000	??0407  set     (0c4h and 1)
 4552+ 3	N      0000	        if      ??0407 eq 1
 4553+ 3			        setb    c
 4554+ 3			        else
 4555+ 3  0F03	C3		        clr     c
 4556+ 3			        endif
 4557+ 2			        endif
 4558+ 2  0F04	26		        add      a,@r0
 4559+ 2			        ifnb    <0c4h>
 4560+ 2			        save_psw
 4561+ 3  0F05	85 D0 70	        mov     saved_psw,PSW
 4562+ 2			        endif
 4563+ 2  0F08	B4 20 53	        cjne    a,#res,??0400
 4564+ 2			        ifnb    <0c4h>
 4565+ 2			        tst_psw <0c4h>,??0400
 4566+ 3  0F0B	E5 70		        mov     a,saved_psw
 4567+ 3  0F0D	54 C4		        anl     a,#0c4h
 4568+ 3  0F0F	64 C4		        xrl     a,#0c4h
 4569+ 3  0F11	54 FE		        anl     a,#0feh
 4570+ 3  0F13	70 49		        jnz     ??0400
 4571+ 2			        endif
 4572+ 1			        ; Test <op> A, @R1
 4573+ 1  0F15	79 31		        mov     r1,#031h
 4574+ 1			        top_ma  add,@r1,??0400,<0c4h>
 4575+ 2  0F17	77 88		        mov     @r1,#arg0
 4576+ 2  0F19	74 98		        mov     a,#arg1
 4577+ 2			        ifnb    <0c4h>
 4578+ 2			        set_cy  0c4h
 4579+ 3	N      0000	??0408  set     (0c4h and 1)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 83



 Line  I  Addr  Code            Source

 4580+ 3	N      0000	        if      ??0408 eq 1
 4581+ 3			        setb    c
 4582+ 3			        else
 4583+ 3  0F1B	C3		        clr     c
 4584+ 3			        endif
 4585+ 2			        endif
 4586+ 2  0F1C	27		        add      a,@r1
 4587+ 2			        ifnb    <0c4h>
 4588+ 2			        save_psw
 4589+ 3  0F1D	85 D0 70	        mov     saved_psw,PSW
 4590+ 2			        endif
 4591+ 2  0F20	B4 20 3B	        cjne    a,#res,??0400
 4592+ 2			        ifnb    <0c4h>
 4593+ 2			        tst_psw <0c4h>,??0400
 4594+ 3  0F23	E5 70		        mov     a,saved_psw
 4595+ 3  0F25	54 C4		        anl     a,#0c4h
 4596+ 3  0F27	64 C4		        xrl     a,#0c4h
 4597+ 3  0F29	54 FE		        anl     a,#0feh
 4598+ 3  0F2B	70 31		        jnz     ??0400
 4599+ 2			        endif
 4600+ 1
 4601+ 1			        ; Now test <op> A, Rn for n in 0..7
 4602+ 1			        top_ma  add,r0,??0400,<0c4h>
 4603+ 2  0F2D	78 88		        mov     r0,#arg0
 4604+ 2  0F2F	74 98		        mov     a,#arg1
 4605+ 2			        ifnb    <0c4h>
 4606+ 2			        set_cy  0c4h
 4607+ 3	N      0000	??0409  set     (0c4h and 1)
 4608+ 3	N      0000	        if      ??0409 eq 1
 4609+ 3			        setb    c
 4610+ 3			        else
 4611+ 3  0F31	C3		        clr     c
 4612+ 3			        endif
 4613+ 2			        endif
 4614+ 2  0F32	28		        add      a,r0
 4615+ 2			        ifnb    <0c4h>
 4616+ 2			        save_psw
 4617+ 3  0F33	85 D0 70	        mov     saved_psw,PSW
 4618+ 2			        endif
 4619+ 2  0F36	B4 20 25	        cjne    a,#res,??0400
 4620+ 2			        ifnb    <0c4h>
 4621+ 2			        tst_psw <0c4h>,??0400
 4622+ 3  0F39	E5 70		        mov     a,saved_psw
 4623+ 3  0F3B	54 C4		        anl     a,#0c4h
 4624+ 3  0F3D	64 C4		        xrl     a,#0c4h
 4625+ 3  0F3F	54 FE		        anl     a,#0feh
 4626+ 3  0F41	70 1B		        jnz     ??0400
 4627+ 2			        endif
 4628+ 1			        top_ma  add,r1,??0400,<0c4h>
 4629+ 2  0F43	79 88		        mov     r1,#arg0
 4630+ 2  0F45	74 98		        mov     a,#arg1
 4631+ 2			        ifnb    <0c4h>
 4632+ 2			        set_cy  0c4h
 4633+ 3	N      0000	??0410  set     (0c4h and 1)
 4634+ 3	N      0000	        if      ??0410 eq 1
 4635+ 3			        setb    c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 84



 Line  I  Addr  Code            Source

 4636+ 3			        else
 4637+ 3  0F47	C3		        clr     c
 4638+ 3			        endif
 4639+ 2			        endif
 4640+ 2  0F48	29		        add      a,r1
 4641+ 2			        ifnb    <0c4h>
 4642+ 2			        save_psw
 4643+ 3  0F49	85 D0 70	        mov     saved_psw,PSW
 4644+ 2			        endif
 4645+ 2  0F4C	B4 20 0F	        cjne    a,#res,??0400
 4646+ 2			        ifnb    <0c4h>
 4647+ 2			        tst_psw <0c4h>,??0400
 4648+ 3  0F4F	E5 70		        mov     a,saved_psw
 4649+ 3  0F51	54 C4		        anl     a,#0c4h
 4650+ 3  0F53	64 C4		        xrl     a,#0c4h
 4651+ 3  0F55	54 FE		        anl     a,#0feh
 4652+ 3  0F57	70 05		        jnz     ??0400
 4653+ 2			        endif
 4654+ 1
 4655+ 1			        eot     'a',??0400
 4656+ 2			        putc    #'a'
 4657+ 3  0F59			??0412:
 4658+ 3			        ;jnb     SCON.1,putc_loop
 4659+ 3			        ;clr     SCON.1
 4660+ 3  0F59	75 99 61	        mov     SBUF,#'a'
 4661+ 2  0F5C	80 06		        sjmp    ??0411
 4662+ 2  0F5E			??0400:  putc    #'?'
 4663+ 3  0F5E			??0413:
 4664+ 3			        ;jnb     SCON.1,putc_loop
 4665+ 3			        ;clr     SCON.1
 4666+ 3  0F5E	75 99 3F	        mov     SBUF,#'?'
 4667+ 2  0F61	75 6E 01	        mov     fail,#001h
 4668+ 2  0F64			??0411:
 4669+ 1
 4670+ 1			        top_ma  add,r2,??0401,<0c4h>
 4671+ 2  0F64	7A 88		        mov     r2,#arg0
 4672+ 2  0F66	74 98		        mov     a,#arg1
 4673+ 2			        ifnb    <0c4h>
 4674+ 2			        set_cy  0c4h
 4675+ 3	N      0000	??0414  set     (0c4h and 1)
 4676+ 3	N      0000	        if      ??0414 eq 1
 4677+ 3			        setb    c
 4678+ 3			        else
 4679+ 3  0F68	C3		        clr     c
 4680+ 3			        endif
 4681+ 2			        endif
 4682+ 2  0F69	2A		        add      a,r2
 4683+ 2			        ifnb    <0c4h>
 4684+ 2			        save_psw
 4685+ 3  0F6A	85 D0 70	        mov     saved_psw,PSW
 4686+ 2			        endif
 4687+ 2  0F6D	B4 20 25	        cjne    a,#res,??0401
 4688+ 2			        ifnb    <0c4h>
 4689+ 2			        tst_psw <0c4h>,??0401
 4690+ 3  0F70	E5 70		        mov     a,saved_psw
 4691+ 3  0F72	54 C4		        anl     a,#0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 85



 Line  I  Addr  Code            Source

 4692+ 3  0F74	64 C4		        xrl     a,#0c4h
 4693+ 3  0F76	54 FE		        anl     a,#0feh
 4694+ 3  0F78	70 1B		        jnz     ??0401
 4695+ 2			        endif
 4696+ 1			        top_ma  add,r3,??0401,<0c4h>
 4697+ 2  0F7A	7B 88		        mov     r3,#arg0
 4698+ 2  0F7C	74 98		        mov     a,#arg1
 4699+ 2			        ifnb    <0c4h>
 4700+ 2			        set_cy  0c4h
 4701+ 3	N      0000	??0415  set     (0c4h and 1)
 4702+ 3	N      0000	        if      ??0415 eq 1
 4703+ 3			        setb    c
 4704+ 3			        else
 4705+ 3  0F7E	C3		        clr     c
 4706+ 3			        endif
 4707+ 2			        endif
 4708+ 2  0F7F	2B		        add      a,r3
 4709+ 2			        ifnb    <0c4h>
 4710+ 2			        save_psw
 4711+ 3  0F80	85 D0 70	        mov     saved_psw,PSW
 4712+ 2			        endif
 4713+ 2  0F83	B4 20 0F	        cjne    a,#res,??0401
 4714+ 2			        ifnb    <0c4h>
 4715+ 2			        tst_psw <0c4h>,??0401
 4716+ 3  0F86	E5 70		        mov     a,saved_psw
 4717+ 3  0F88	54 C4		        anl     a,#0c4h
 4718+ 3  0F8A	64 C4		        xrl     a,#0c4h
 4719+ 3  0F8C	54 FE		        anl     a,#0feh
 4720+ 3  0F8E	70 05		        jnz     ??0401
 4721+ 2			        endif
 4722+ 1
 4723+ 1			        eot     'b',??0401
 4724+ 2			        putc    #'b'
 4725+ 3  0F90			??0417:
 4726+ 3			        ;jnb     SCON.1,putc_loop
 4727+ 3			        ;clr     SCON.1
 4728+ 3  0F90	75 99 62	        mov     SBUF,#'b'
 4729+ 2  0F93	80 06		        sjmp    ??0416
 4730+ 2  0F95			??0401:  putc    #'?'
 4731+ 3  0F95			??0418:
 4732+ 3			        ;jnb     SCON.1,putc_loop
 4733+ 3			        ;clr     SCON.1
 4734+ 3  0F95	75 99 3F	        mov     SBUF,#'?'
 4735+ 2  0F98	75 6E 01	        mov     fail,#001h
 4736+ 2  0F9B			??0416:
 4737+ 1
 4738+ 1			        top_ma  add,r4,??0402,<0c4h>
 4739+ 2  0F9B	7C 88		        mov     r4,#arg0
 4740+ 2  0F9D	74 98		        mov     a,#arg1
 4741+ 2			        ifnb    <0c4h>
 4742+ 2			        set_cy  0c4h
 4743+ 3	N      0000	??0419  set     (0c4h and 1)
 4744+ 3	N      0000	        if      ??0419 eq 1
 4745+ 3			        setb    c
 4746+ 3			        else
 4747+ 3  0F9F	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 86



 Line  I  Addr  Code            Source

 4748+ 3			        endif
 4749+ 2			        endif
 4750+ 2  0FA0	2C		        add      a,r4
 4751+ 2			        ifnb    <0c4h>
 4752+ 2			        save_psw
 4753+ 3  0FA1	85 D0 70	        mov     saved_psw,PSW
 4754+ 2			        endif
 4755+ 2  0FA4	B4 20 25	        cjne    a,#res,??0402
 4756+ 2			        ifnb    <0c4h>
 4757+ 2			        tst_psw <0c4h>,??0402
 4758+ 3  0FA7	E5 70		        mov     a,saved_psw
 4759+ 3  0FA9	54 C4		        anl     a,#0c4h
 4760+ 3  0FAB	64 C4		        xrl     a,#0c4h
 4761+ 3  0FAD	54 FE		        anl     a,#0feh
 4762+ 3  0FAF	70 1B		        jnz     ??0402
 4763+ 2			        endif
 4764+ 1			        top_ma  add,r5,??0402,<0c4h>
 4765+ 2  0FB1	7D 88		        mov     r5,#arg0
 4766+ 2  0FB3	74 98		        mov     a,#arg1
 4767+ 2			        ifnb    <0c4h>
 4768+ 2			        set_cy  0c4h
 4769+ 3	N      0000	??0420  set     (0c4h and 1)
 4770+ 3	N      0000	        if      ??0420 eq 1
 4771+ 3			        setb    c
 4772+ 3			        else
 4773+ 3  0FB5	C3		        clr     c
 4774+ 3			        endif
 4775+ 2			        endif
 4776+ 2  0FB6	2D		        add      a,r5
 4777+ 2			        ifnb    <0c4h>
 4778+ 2			        save_psw
 4779+ 3  0FB7	85 D0 70	        mov     saved_psw,PSW
 4780+ 2			        endif
 4781+ 2  0FBA	B4 20 0F	        cjne    a,#res,??0402
 4782+ 2			        ifnb    <0c4h>
 4783+ 2			        tst_psw <0c4h>,??0402
 4784+ 3  0FBD	E5 70		        mov     a,saved_psw
 4785+ 3  0FBF	54 C4		        anl     a,#0c4h
 4786+ 3  0FC1	64 C4		        xrl     a,#0c4h
 4787+ 3  0FC3	54 FE		        anl     a,#0feh
 4788+ 3  0FC5	70 05		        jnz     ??0402
 4789+ 2			        endif
 4790+ 1
 4791+ 1			        eot     'c',??0402
 4792+ 2			        putc    #'c'
 4793+ 3  0FC7			??0422:
 4794+ 3			        ;jnb     SCON.1,putc_loop
 4795+ 3			        ;clr     SCON.1
 4796+ 3  0FC7	75 99 63	        mov     SBUF,#'c'
 4797+ 2  0FCA	80 06		        sjmp    ??0421
 4798+ 2  0FCC			??0402:  putc    #'?'
 4799+ 3  0FCC			??0423:
 4800+ 3			        ;jnb     SCON.1,putc_loop
 4801+ 3			        ;clr     SCON.1
 4802+ 3  0FCC	75 99 3F	        mov     SBUF,#'?'
 4803+ 2  0FCF	75 6E 01	        mov     fail,#001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 87



 Line  I  Addr  Code            Source

 4804+ 2  0FD2			??0421:
 4805+ 1
 4806+ 1			        top_ma  add,r6,??0399,<0c4h>
 4807+ 2  0FD2	7E 88		        mov     r6,#arg0
 4808+ 2  0FD4	74 98		        mov     a,#arg1
 4809+ 2			        ifnb    <0c4h>
 4810+ 2			        set_cy  0c4h
 4811+ 3	N      0000	??0424  set     (0c4h and 1)
 4812+ 3	N      0000	        if      ??0424 eq 1
 4813+ 3			        setb    c
 4814+ 3			        else
 4815+ 3  0FD6	C3		        clr     c
 4816+ 3			        endif
 4817+ 2			        endif
 4818+ 2  0FD7	2E		        add      a,r6
 4819+ 2			        ifnb    <0c4h>
 4820+ 2			        save_psw
 4821+ 3  0FD8	85 D0 70	        mov     saved_psw,PSW
 4822+ 2			        endif
 4823+ 2  0FDB	B4 20 25	        cjne    a,#res,??0399
 4824+ 2			        ifnb    <0c4h>
 4825+ 2			        tst_psw <0c4h>,??0399
 4826+ 3  0FDE	E5 70		        mov     a,saved_psw
 4827+ 3  0FE0	54 C4		        anl     a,#0c4h
 4828+ 3  0FE2	64 C4		        xrl     a,#0c4h
 4829+ 3  0FE4	54 FE		        anl     a,#0feh
 4830+ 3  0FE6	70 1B		        jnz     ??0399
 4831+ 2			        endif
 4832+ 1			        top_ma  add,r7,??0399,<0c4h>
 4833+ 2  0FE8	7F 88		        mov     r7,#arg0
 4834+ 2  0FEA	74 98		        mov     a,#arg1
 4835+ 2			        ifnb    <0c4h>
 4836+ 2			        set_cy  0c4h
 4837+ 3	N      0000	??0425  set     (0c4h and 1)
 4838+ 3	N      0000	        if      ??0425 eq 1
 4839+ 3			        setb    c
 4840+ 3			        else
 4841+ 3  0FEC	C3		        clr     c
 4842+ 3			        endif
 4843+ 2			        endif
 4844+ 2  0FED	2F		        add      a,r7
 4845+ 2			        ifnb    <0c4h>
 4846+ 2			        save_psw
 4847+ 3  0FEE	85 D0 70	        mov     saved_psw,PSW
 4848+ 2			        endif
 4849+ 2  0FF1	B4 20 0F	        cjne    a,#res,??0399
 4850+ 2			        ifnb    <0c4h>
 4851+ 2			        tst_psw <0c4h>,??0399
 4852+ 3  0FF4	E5 70		        mov     a,saved_psw
 4853+ 3  0FF6	54 C4		        anl     a,#0c4h
 4854+ 3  0FF8	64 C4		        xrl     a,#0c4h
 4855+ 3  0FFA	54 FE		        anl     a,#0feh
 4856+ 3  0FFC	70 05		        jnz     ??0399
 4857+ 2			        endif
 4858+ 1
 4859+ 1			        eot     'd',??0399

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 88



 Line  I  Addr  Code            Source

 4860+ 2			        putc    #'d'
 4861+ 3  0FFE			??0427:
 4862+ 3			        ;jnb     SCON.1,putc_loop
 4863+ 3			        ;clr     SCON.1
 4864+ 3  0FFE	75 99 64	        mov     SBUF,#'d'
 4865+ 2  1001	80 06		        sjmp    ??0426
 4866+ 2  1003			??0399:  putc    #'?'
 4867+ 3  1003			??0428:
 4868+ 3			        ;jnb     SCON.1,putc_loop
 4869+ 3			        ;clr     SCON.1
 4870+ 3  1003	75 99 3F	        mov     SBUF,#'?'
 4871+ 2  1006	75 6E 01	        mov     fail,#001h
 4872+ 2  1009			??0426:
 4873+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 4874+ 1
 4875+ 1			        ; Optionally test immediate addressing modes.
 4876+ 1
 4877+ 1	N      FFFF	        if      (01h and 1) ne 0
 4878+ 1			        ; Test <op> A, #arg1...
 4879+ 1			        top_mb  add,a,??0403,<0c4h>
 4880+ 2  1009	74 98		        mov     a,#arg1
 4881+ 2			        ifnb    <0c4h>
 4882+ 2			        set_cy  0c4h
 4883+ 3	N      0000	??0429  set     (0c4h and 1)
 4884+ 3	N      0000	        if      ??0429 eq 1
 4885+ 3			        setb    c
 4886+ 3			        else
 4887+ 3  100B	C3		        clr     c
 4888+ 3			        endif
 4889+ 2			        endif
 4890+ 2  100C	24 88		        add      a,#arg0
 4891+ 2			        ifnb    <0c4h>
 4892+ 2			        save_psw
 4893+ 3  100E	85 D0 70	        mov     saved_psw,PSW
 4894+ 2			        endif
 4895+ 2  1011	F5 E0		        mov     ACC,a
 4896+ 2  1013	B4 20 0F	        cjne    a,#res,??0403
 4897+ 2			        ifnb    <0c4h>
 4898+ 2			        tst_psw <0c4h>,??0403
 4899+ 3  1016	E5 70		        mov     a,saved_psw
 4900+ 3  1018	54 C4		        anl     a,#0c4h
 4901+ 3  101A	64 C4		        xrl     a,#0c4h
 4902+ 3  101C	54 FE		        anl     a,#0feh
 4903+ 3  101E	70 05		        jnz     ??0403
 4904+ 2			        endif
 4905+ 1			        eot     'e',??0403
 4906+ 2			        putc    #'e'
 4907+ 3  1020			??0431:
 4908+ 3			        ;jnb     SCON.1,putc_loop
 4909+ 3			        ;clr     SCON.1
 4910+ 3  1020	75 99 65	        mov     SBUF,#'e'
 4911+ 2  1023	80 06		        sjmp    ??0430
 4912+ 2  1025			??0403:  putc    #'?'
 4913+ 3  1025			??0432:
 4914+ 3			        ;jnb     SCON.1,putc_loop
 4915+ 3			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 89



 Line  I  Addr  Code            Source

 4916+ 3  1025	75 99 3F	        mov     SBUF,#'?'
 4917+ 2  1028	75 6E 01	        mov     fail,#001h
 4918+ 2  102B			??0430:
 4919+ 1			        endif
 4920+ 1
 4921+ 1	N      0000	        if      (01h and 2) ne 0
 4922+ 1			        ; ...and <op> dir, #arg1
 4923+ 1			        top_mb  add,dir0,??0404,<0c4h>
 4924+ 1			        eot     'f',??0404
 4925+ 1			        endif
 4926+ 1
 4927+ 1			        ; Optionally test <op> dir, A
 4928+ 1	N      0000	        if      (01h and 4) ne 0
 4929+ 1			        top_mc  add,??0405,<0c4h>
 4930+ 1			        eot     'g',??0405
 4931+ 1			        endif
 4932+ 1
 4933:				        putc    #'3'
 4934+ 1  102B			??0433:
 4935+ 1			        ;jnb     SCON.1,putc_loop
 4936+ 1			        ;clr     SCON.1
 4937+ 1  102B	75 99 33	        mov     SBUF,#'3'
 4938:				        tst_alu add,043h,0fbh,03eh,01h,080h     ;  CY /AC /OV
 4939+ 1			        ; Put the argument and result data into variables for easier access
 4940+ 1	N      0043	        arg0    set 043h
 4941+ 1	N      00FB	        arg1    set 0fbh
 4942+ 1	N      003E	        res     set 03eh
 4943+ 1
 4944+ 1			        ; Test <op> A, dir
 4945+ 1			        top_ma  add,dir0,??0435,<080h>
 4946+ 2  102E	75 60 43	        mov     dir0,#arg0
 4947+ 2  1031	74 FB		        mov     a,#arg1
 4948+ 2			        ifnb    <080h>
 4949+ 2			        set_cy  080h
 4950+ 3	N      0000	??0441  set     (080h and 1)
 4951+ 3	N      0000	        if      ??0441 eq 1
 4952+ 3			        setb    c
 4953+ 3			        else
 4954+ 3  1033	C3		        clr     c
 4955+ 3			        endif
 4956+ 2			        endif
 4957+ 2  1034	25 60		        add      a,dir0
 4958+ 2			        ifnb    <080h>
 4959+ 2			        save_psw
 4960+ 3  1036	85 D0 70	        mov     saved_psw,PSW
 4961+ 2			        endif
 4962+ 2  1039	B4 3E 6B	        cjne    a,#res,??0435
 4963+ 2			        ifnb    <080h>
 4964+ 2			        tst_psw <080h>,??0435
 4965+ 3  103C	E5 70		        mov     a,saved_psw
 4966+ 3  103E	54 C4		        anl     a,#0c4h
 4967+ 3  1040	64 80		        xrl     a,#080h
 4968+ 3  1042	54 FE		        anl     a,#0feh
 4969+ 3  1044	70 61		        jnz     ??0435
 4970+ 2			        endif
 4971+ 1			        ; Test <op> A, @R0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 90



 Line  I  Addr  Code            Source

 4972+ 1  1046	78 60		        mov     r0,#dir0
 4973+ 1			        top_ma  add,@r0,??0435,<080h>
 4974+ 2  1048	76 43		        mov     @r0,#arg0
 4975+ 2  104A	74 FB		        mov     a,#arg1
 4976+ 2			        ifnb    <080h>
 4977+ 2			        set_cy  080h
 4978+ 3	N      0000	??0442  set     (080h and 1)
 4979+ 3	N      0000	        if      ??0442 eq 1
 4980+ 3			        setb    c
 4981+ 3			        else
 4982+ 3  104C	C3		        clr     c
 4983+ 3			        endif
 4984+ 2			        endif
 4985+ 2  104D	26		        add      a,@r0
 4986+ 2			        ifnb    <080h>
 4987+ 2			        save_psw
 4988+ 3  104E	85 D0 70	        mov     saved_psw,PSW
 4989+ 2			        endif
 4990+ 2  1051	B4 3E 53	        cjne    a,#res,??0435
 4991+ 2			        ifnb    <080h>
 4992+ 2			        tst_psw <080h>,??0435
 4993+ 3  1054	E5 70		        mov     a,saved_psw
 4994+ 3  1056	54 C4		        anl     a,#0c4h
 4995+ 3  1058	64 80		        xrl     a,#080h
 4996+ 3  105A	54 FE		        anl     a,#0feh
 4997+ 3  105C	70 49		        jnz     ??0435
 4998+ 2			        endif
 4999+ 1			        ; Test <op> A, @R1
 5000+ 1  105E	79 31		        mov     r1,#031h
 5001+ 1			        top_ma  add,@r1,??0435,<080h>
 5002+ 2  1060	77 43		        mov     @r1,#arg0
 5003+ 2  1062	74 FB		        mov     a,#arg1
 5004+ 2			        ifnb    <080h>
 5005+ 2			        set_cy  080h
 5006+ 3	N      0000	??0443  set     (080h and 1)
 5007+ 3	N      0000	        if      ??0443 eq 1
 5008+ 3			        setb    c
 5009+ 3			        else
 5010+ 3  1064	C3		        clr     c
 5011+ 3			        endif
 5012+ 2			        endif
 5013+ 2  1065	27		        add      a,@r1
 5014+ 2			        ifnb    <080h>
 5015+ 2			        save_psw
 5016+ 3  1066	85 D0 70	        mov     saved_psw,PSW
 5017+ 2			        endif
 5018+ 2  1069	B4 3E 3B	        cjne    a,#res,??0435
 5019+ 2			        ifnb    <080h>
 5020+ 2			        tst_psw <080h>,??0435
 5021+ 3  106C	E5 70		        mov     a,saved_psw
 5022+ 3  106E	54 C4		        anl     a,#0c4h
 5023+ 3  1070	64 80		        xrl     a,#080h
 5024+ 3  1072	54 FE		        anl     a,#0feh
 5025+ 3  1074	70 31		        jnz     ??0435
 5026+ 2			        endif
 5027+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 91



 Line  I  Addr  Code            Source

 5028+ 1			        ; Now test <op> A, Rn for n in 0..7
 5029+ 1			        top_ma  add,r0,??0435,<080h>
 5030+ 2  1076	78 43		        mov     r0,#arg0
 5031+ 2  1078	74 FB		        mov     a,#arg1
 5032+ 2			        ifnb    <080h>
 5033+ 2			        set_cy  080h
 5034+ 3	N      0000	??0444  set     (080h and 1)
 5035+ 3	N      0000	        if      ??0444 eq 1
 5036+ 3			        setb    c
 5037+ 3			        else
 5038+ 3  107A	C3		        clr     c
 5039+ 3			        endif
 5040+ 2			        endif
 5041+ 2  107B	28		        add      a,r0
 5042+ 2			        ifnb    <080h>
 5043+ 2			        save_psw
 5044+ 3  107C	85 D0 70	        mov     saved_psw,PSW
 5045+ 2			        endif
 5046+ 2  107F	B4 3E 25	        cjne    a,#res,??0435
 5047+ 2			        ifnb    <080h>
 5048+ 2			        tst_psw <080h>,??0435
 5049+ 3  1082	E5 70		        mov     a,saved_psw
 5050+ 3  1084	54 C4		        anl     a,#0c4h
 5051+ 3  1086	64 80		        xrl     a,#080h
 5052+ 3  1088	54 FE		        anl     a,#0feh
 5053+ 3  108A	70 1B		        jnz     ??0435
 5054+ 2			        endif
 5055+ 1			        top_ma  add,r1,??0435,<080h>
 5056+ 2  108C	79 43		        mov     r1,#arg0
 5057+ 2  108E	74 FB		        mov     a,#arg1
 5058+ 2			        ifnb    <080h>
 5059+ 2			        set_cy  080h
 5060+ 3	N      0000	??0445  set     (080h and 1)
 5061+ 3	N      0000	        if      ??0445 eq 1
 5062+ 3			        setb    c
 5063+ 3			        else
 5064+ 3  1090	C3		        clr     c
 5065+ 3			        endif
 5066+ 2			        endif
 5067+ 2  1091	29		        add      a,r1
 5068+ 2			        ifnb    <080h>
 5069+ 2			        save_psw
 5070+ 3  1092	85 D0 70	        mov     saved_psw,PSW
 5071+ 2			        endif
 5072+ 2  1095	B4 3E 0F	        cjne    a,#res,??0435
 5073+ 2			        ifnb    <080h>
 5074+ 2			        tst_psw <080h>,??0435
 5075+ 3  1098	E5 70		        mov     a,saved_psw
 5076+ 3  109A	54 C4		        anl     a,#0c4h
 5077+ 3  109C	64 80		        xrl     a,#080h
 5078+ 3  109E	54 FE		        anl     a,#0feh
 5079+ 3  10A0	70 05		        jnz     ??0435
 5080+ 2			        endif
 5081+ 1
 5082+ 1			        eot     'a',??0435
 5083+ 2			        putc    #'a'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 92



 Line  I  Addr  Code            Source

 5084+ 3  10A2			??0447:
 5085+ 3			        ;jnb     SCON.1,putc_loop
 5086+ 3			        ;clr     SCON.1
 5087+ 3  10A2	75 99 61	        mov     SBUF,#'a'
 5088+ 2  10A5	80 06		        sjmp    ??0446
 5089+ 2  10A7			??0435:  putc    #'?'
 5090+ 3  10A7			??0448:
 5091+ 3			        ;jnb     SCON.1,putc_loop
 5092+ 3			        ;clr     SCON.1
 5093+ 3  10A7	75 99 3F	        mov     SBUF,#'?'
 5094+ 2  10AA	75 6E 01	        mov     fail,#001h
 5095+ 2  10AD			??0446:
 5096+ 1
 5097+ 1			        top_ma  add,r2,??0436,<080h>
 5098+ 2  10AD	7A 43		        mov     r2,#arg0
 5099+ 2  10AF	74 FB		        mov     a,#arg1
 5100+ 2			        ifnb    <080h>
 5101+ 2			        set_cy  080h
 5102+ 3	N      0000	??0449  set     (080h and 1)
 5103+ 3	N      0000	        if      ??0449 eq 1
 5104+ 3			        setb    c
 5105+ 3			        else
 5106+ 3  10B1	C3		        clr     c
 5107+ 3			        endif
 5108+ 2			        endif
 5109+ 2  10B2	2A		        add      a,r2
 5110+ 2			        ifnb    <080h>
 5111+ 2			        save_psw
 5112+ 3  10B3	85 D0 70	        mov     saved_psw,PSW
 5113+ 2			        endif
 5114+ 2  10B6	B4 3E 25	        cjne    a,#res,??0436
 5115+ 2			        ifnb    <080h>
 5116+ 2			        tst_psw <080h>,??0436
 5117+ 3  10B9	E5 70		        mov     a,saved_psw
 5118+ 3  10BB	54 C4		        anl     a,#0c4h
 5119+ 3  10BD	64 80		        xrl     a,#080h
 5120+ 3  10BF	54 FE		        anl     a,#0feh
 5121+ 3  10C1	70 1B		        jnz     ??0436
 5122+ 2			        endif
 5123+ 1			        top_ma  add,r3,??0436,<080h>
 5124+ 2  10C3	7B 43		        mov     r3,#arg0
 5125+ 2  10C5	74 FB		        mov     a,#arg1
 5126+ 2			        ifnb    <080h>
 5127+ 2			        set_cy  080h
 5128+ 3	N      0000	??0450  set     (080h and 1)
 5129+ 3	N      0000	        if      ??0450 eq 1
 5130+ 3			        setb    c
 5131+ 3			        else
 5132+ 3  10C7	C3		        clr     c
 5133+ 3			        endif
 5134+ 2			        endif
 5135+ 2  10C8	2B		        add      a,r3
 5136+ 2			        ifnb    <080h>
 5137+ 2			        save_psw
 5138+ 3  10C9	85 D0 70	        mov     saved_psw,PSW
 5139+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 93



 Line  I  Addr  Code            Source

 5140+ 2  10CC	B4 3E 0F	        cjne    a,#res,??0436
 5141+ 2			        ifnb    <080h>
 5142+ 2			        tst_psw <080h>,??0436
 5143+ 3  10CF	E5 70		        mov     a,saved_psw
 5144+ 3  10D1	54 C4		        anl     a,#0c4h
 5145+ 3  10D3	64 80		        xrl     a,#080h
 5146+ 3  10D5	54 FE		        anl     a,#0feh
 5147+ 3  10D7	70 05		        jnz     ??0436
 5148+ 2			        endif
 5149+ 1
 5150+ 1			        eot     'b',??0436
 5151+ 2			        putc    #'b'
 5152+ 3  10D9			??0452:
 5153+ 3			        ;jnb     SCON.1,putc_loop
 5154+ 3			        ;clr     SCON.1
 5155+ 3  10D9	75 99 62	        mov     SBUF,#'b'
 5156+ 2  10DC	80 06		        sjmp    ??0451
 5157+ 2  10DE			??0436:  putc    #'?'
 5158+ 3  10DE			??0453:
 5159+ 3			        ;jnb     SCON.1,putc_loop
 5160+ 3			        ;clr     SCON.1
 5161+ 3  10DE	75 99 3F	        mov     SBUF,#'?'
 5162+ 2  10E1	75 6E 01	        mov     fail,#001h
 5163+ 2  10E4			??0451:
 5164+ 1
 5165+ 1			        top_ma  add,r4,??0437,<080h>
 5166+ 2  10E4	7C 43		        mov     r4,#arg0
 5167+ 2  10E6	74 FB		        mov     a,#arg1
 5168+ 2			        ifnb    <080h>
 5169+ 2			        set_cy  080h
 5170+ 3	N      0000	??0454  set     (080h and 1)
 5171+ 3	N      0000	        if      ??0454 eq 1
 5172+ 3			        setb    c
 5173+ 3			        else
 5174+ 3  10E8	C3		        clr     c
 5175+ 3			        endif
 5176+ 2			        endif
 5177+ 2  10E9	2C		        add      a,r4
 5178+ 2			        ifnb    <080h>
 5179+ 2			        save_psw
 5180+ 3  10EA	85 D0 70	        mov     saved_psw,PSW
 5181+ 2			        endif
 5182+ 2  10ED	B4 3E 25	        cjne    a,#res,??0437
 5183+ 2			        ifnb    <080h>
 5184+ 2			        tst_psw <080h>,??0437
 5185+ 3  10F0	E5 70		        mov     a,saved_psw
 5186+ 3  10F2	54 C4		        anl     a,#0c4h
 5187+ 3  10F4	64 80		        xrl     a,#080h
 5188+ 3  10F6	54 FE		        anl     a,#0feh
 5189+ 3  10F8	70 1B		        jnz     ??0437
 5190+ 2			        endif
 5191+ 1			        top_ma  add,r5,??0437,<080h>
 5192+ 2  10FA	7D 43		        mov     r5,#arg0
 5193+ 2  10FC	74 FB		        mov     a,#arg1
 5194+ 2			        ifnb    <080h>
 5195+ 2			        set_cy  080h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 94



 Line  I  Addr  Code            Source

 5196+ 3	N      0000	??0455  set     (080h and 1)
 5197+ 3	N      0000	        if      ??0455 eq 1
 5198+ 3			        setb    c
 5199+ 3			        else
 5200+ 3  10FE	C3		        clr     c
 5201+ 3			        endif
 5202+ 2			        endif
 5203+ 2  10FF	2D		        add      a,r5
 5204+ 2			        ifnb    <080h>
 5205+ 2			        save_psw
 5206+ 3  1100	85 D0 70	        mov     saved_psw,PSW
 5207+ 2			        endif
 5208+ 2  1103	B4 3E 0F	        cjne    a,#res,??0437
 5209+ 2			        ifnb    <080h>
 5210+ 2			        tst_psw <080h>,??0437
 5211+ 3  1106	E5 70		        mov     a,saved_psw
 5212+ 3  1108	54 C4		        anl     a,#0c4h
 5213+ 3  110A	64 80		        xrl     a,#080h
 5214+ 3  110C	54 FE		        anl     a,#0feh
 5215+ 3  110E	70 05		        jnz     ??0437
 5216+ 2			        endif
 5217+ 1
 5218+ 1			        eot     'c',??0437
 5219+ 2			        putc    #'c'
 5220+ 3  1110			??0457:
 5221+ 3			        ;jnb     SCON.1,putc_loop
 5222+ 3			        ;clr     SCON.1
 5223+ 3  1110	75 99 63	        mov     SBUF,#'c'
 5224+ 2  1113	80 06		        sjmp    ??0456
 5225+ 2  1115			??0437:  putc    #'?'
 5226+ 3  1115			??0458:
 5227+ 3			        ;jnb     SCON.1,putc_loop
 5228+ 3			        ;clr     SCON.1
 5229+ 3  1115	75 99 3F	        mov     SBUF,#'?'
 5230+ 2  1118	75 6E 01	        mov     fail,#001h
 5231+ 2  111B			??0456:
 5232+ 1
 5233+ 1			        top_ma  add,r6,??0434,<080h>
 5234+ 2  111B	7E 43		        mov     r6,#arg0
 5235+ 2  111D	74 FB		        mov     a,#arg1
 5236+ 2			        ifnb    <080h>
 5237+ 2			        set_cy  080h
 5238+ 3	N      0000	??0459  set     (080h and 1)
 5239+ 3	N      0000	        if      ??0459 eq 1
 5240+ 3			        setb    c
 5241+ 3			        else
 5242+ 3  111F	C3		        clr     c
 5243+ 3			        endif
 5244+ 2			        endif
 5245+ 2  1120	2E		        add      a,r6
 5246+ 2			        ifnb    <080h>
 5247+ 2			        save_psw
 5248+ 3  1121	85 D0 70	        mov     saved_psw,PSW
 5249+ 2			        endif
 5250+ 2  1124	B4 3E 25	        cjne    a,#res,??0434
 5251+ 2			        ifnb    <080h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 95



 Line  I  Addr  Code            Source

 5252+ 2			        tst_psw <080h>,??0434
 5253+ 3  1127	E5 70		        mov     a,saved_psw
 5254+ 3  1129	54 C4		        anl     a,#0c4h
 5255+ 3  112B	64 80		        xrl     a,#080h
 5256+ 3  112D	54 FE		        anl     a,#0feh
 5257+ 3  112F	70 1B		        jnz     ??0434
 5258+ 2			        endif
 5259+ 1			        top_ma  add,r7,??0434,<080h>
 5260+ 2  1131	7F 43		        mov     r7,#arg0
 5261+ 2  1133	74 FB		        mov     a,#arg1
 5262+ 2			        ifnb    <080h>
 5263+ 2			        set_cy  080h
 5264+ 3	N      0000	??0460  set     (080h and 1)
 5265+ 3	N      0000	        if      ??0460 eq 1
 5266+ 3			        setb    c
 5267+ 3			        else
 5268+ 3  1135	C3		        clr     c
 5269+ 3			        endif
 5270+ 2			        endif
 5271+ 2  1136	2F		        add      a,r7
 5272+ 2			        ifnb    <080h>
 5273+ 2			        save_psw
 5274+ 3  1137	85 D0 70	        mov     saved_psw,PSW
 5275+ 2			        endif
 5276+ 2  113A	B4 3E 0F	        cjne    a,#res,??0434
 5277+ 2			        ifnb    <080h>
 5278+ 2			        tst_psw <080h>,??0434
 5279+ 3  113D	E5 70		        mov     a,saved_psw
 5280+ 3  113F	54 C4		        anl     a,#0c4h
 5281+ 3  1141	64 80		        xrl     a,#080h
 5282+ 3  1143	54 FE		        anl     a,#0feh
 5283+ 3  1145	70 05		        jnz     ??0434
 5284+ 2			        endif
 5285+ 1
 5286+ 1			        eot     'd',??0434
 5287+ 2			        putc    #'d'
 5288+ 3  1147			??0462:
 5289+ 3			        ;jnb     SCON.1,putc_loop
 5290+ 3			        ;clr     SCON.1
 5291+ 3  1147	75 99 64	        mov     SBUF,#'d'
 5292+ 2  114A	80 06		        sjmp    ??0461
 5293+ 2  114C			??0434:  putc    #'?'
 5294+ 3  114C			??0463:
 5295+ 3			        ;jnb     SCON.1,putc_loop
 5296+ 3			        ;clr     SCON.1
 5297+ 3  114C	75 99 3F	        mov     SBUF,#'?'
 5298+ 2  114F	75 6E 01	        mov     fail,#001h
 5299+ 2  1152			??0461:
 5300+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 5301+ 1
 5302+ 1			        ; Optionally test immediate addressing modes.
 5303+ 1
 5304+ 1	N      FFFF	        if      (01h and 1) ne 0
 5305+ 1			        ; Test <op> A, #arg1...
 5306+ 1			        top_mb  add,a,??0438,<080h>
 5307+ 2  1152	74 FB		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 96



 Line  I  Addr  Code            Source

 5308+ 2			        ifnb    <080h>
 5309+ 2			        set_cy  080h
 5310+ 3	N      0000	??0464  set     (080h and 1)
 5311+ 3	N      0000	        if      ??0464 eq 1
 5312+ 3			        setb    c
 5313+ 3			        else
 5314+ 3  1154	C3		        clr     c
 5315+ 3			        endif
 5316+ 2			        endif
 5317+ 2  1155	24 43		        add      a,#arg0
 5318+ 2			        ifnb    <080h>
 5319+ 2			        save_psw
 5320+ 3  1157	85 D0 70	        mov     saved_psw,PSW
 5321+ 2			        endif
 5322+ 2  115A	F5 E0		        mov     ACC,a
 5323+ 2  115C	B4 3E 0F	        cjne    a,#res,??0438
 5324+ 2			        ifnb    <080h>
 5325+ 2			        tst_psw <080h>,??0438
 5326+ 3  115F	E5 70		        mov     a,saved_psw
 5327+ 3  1161	54 C4		        anl     a,#0c4h
 5328+ 3  1163	64 80		        xrl     a,#080h
 5329+ 3  1165	54 FE		        anl     a,#0feh
 5330+ 3  1167	70 05		        jnz     ??0438
 5331+ 2			        endif
 5332+ 1			        eot     'e',??0438
 5333+ 2			        putc    #'e'
 5334+ 3  1169			??0466:
 5335+ 3			        ;jnb     SCON.1,putc_loop
 5336+ 3			        ;clr     SCON.1
 5337+ 3  1169	75 99 65	        mov     SBUF,#'e'
 5338+ 2  116C	80 06		        sjmp    ??0465
 5339+ 2  116E			??0438:  putc    #'?'
 5340+ 3  116E			??0467:
 5341+ 3			        ;jnb     SCON.1,putc_loop
 5342+ 3			        ;clr     SCON.1
 5343+ 3  116E	75 99 3F	        mov     SBUF,#'?'
 5344+ 2  1171	75 6E 01	        mov     fail,#001h
 5345+ 2  1174			??0465:
 5346+ 1			        endif
 5347+ 1
 5348+ 1	N      0000	        if      (01h and 2) ne 0
 5349+ 1			        ; ...and <op> dir, #arg1
 5350+ 1			        top_mb  add,dir0,??0439,<080h>
 5351+ 1			        eot     'f',??0439
 5352+ 1			        endif
 5353+ 1
 5354+ 1			        ; Optionally test <op> dir, A
 5355+ 1	N      0000	        if      (01h and 4) ne 0
 5356+ 1			        top_mc  add,??0440,<080h>
 5357+ 1			        eot     'g',??0440
 5358+ 1			        endif
 5359+ 1
 5360:
 5361:				        put_crlf                    ; end of test series
 5362+ 1			        putc    #13
 5363+ 2  1174			??0468:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 97



 Line  I  Addr  Code            Source

 5364+ 2			        ;jnb     SCON.1,putc_loop
 5365+ 2			        ;clr     SCON.1
 5366+ 2  1174	75 99 0D	        mov     SBUF,#13
 5367+ 1			        putc    #10
 5368+ 2  1177			??0469:
 5369+ 2			        ;jnb     SCON.1,putc_loop
 5370+ 2			        ;clr     SCON.1
 5371+ 2  1177	75 99 0A	        mov     SBUF,#10
 5372:
 5373:
 5374:				        ;-- Test series M ------------------------------------------------------
 5375:				        ; ADDC
 5376:				        ; (See comments for 'ALU opcode block test')
 5377:				        ; Note the test runs 4 times for different values of operands
 5378:
 5379:				        putc    #'M'                ; start of test series
 5380+ 1  117A			??0470:
 5381+ 1			        ;jnb     SCON.1,putc_loop
 5382+ 1			        ;clr     SCON.1
 5383+ 1  117A	75 99 4D	        mov     SBUF,#'M'
 5384:
 5385:				        putc    #'0'
 5386+ 1  117D			??0471:
 5387+ 1			        ;jnb     SCON.1,putc_loop
 5388+ 1			        ;clr     SCON.1
 5389+ 1  117D	75 99 30	        mov     SBUF,#'0'
 5390:				        tst_alu addc,051h,033h,084h,01h,004h     ; /CY /AC  OV
 5391+ 1			        ; Put the argument and result data into variables for easier access
 5392+ 1	N      0051	        arg0    set 051h
 5393+ 1	N      0033	        arg1    set 033h
 5394+ 1	N      0084	        res     set 084h
 5395+ 1
 5396+ 1			        ; Test <op> A, dir
 5397+ 1			        top_ma  addc,dir0,??0473,<004h>
 5398+ 2  1180	75 60 51	        mov     dir0,#arg0
 5399+ 2  1183	74 33		        mov     a,#arg1
 5400+ 2			        ifnb    <004h>
 5401+ 2			        set_cy  004h
 5402+ 3	N      0000	??0479  set     (004h and 1)
 5403+ 3	N      0000	        if      ??0479 eq 1
 5404+ 3			        setb    c
 5405+ 3			        else
 5406+ 3  1185	C3		        clr     c
 5407+ 3			        endif
 5408+ 2			        endif
 5409+ 2  1186	35 60		        addc      a,dir0
 5410+ 2			        ifnb    <004h>
 5411+ 2			        save_psw
 5412+ 3  1188	85 D0 70	        mov     saved_psw,PSW
 5413+ 2			        endif
 5414+ 2  118B	B4 84 6B	        cjne    a,#res,??0473
 5415+ 2			        ifnb    <004h>
 5416+ 2			        tst_psw <004h>,??0473
 5417+ 3  118E	E5 70		        mov     a,saved_psw
 5418+ 3  1190	54 C4		        anl     a,#0c4h
 5419+ 3  1192	64 04		        xrl     a,#004h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 98



 Line  I  Addr  Code            Source

 5420+ 3  1194	54 FE		        anl     a,#0feh
 5421+ 3  1196	70 61		        jnz     ??0473
 5422+ 2			        endif
 5423+ 1			        ; Test <op> A, @R0
 5424+ 1  1198	78 60		        mov     r0,#dir0
 5425+ 1			        top_ma  addc,@r0,??0473,<004h>
 5426+ 2  119A	76 51		        mov     @r0,#arg0
 5427+ 2  119C	74 33		        mov     a,#arg1
 5428+ 2			        ifnb    <004h>
 5429+ 2			        set_cy  004h
 5430+ 3	N      0000	??0480  set     (004h and 1)
 5431+ 3	N      0000	        if      ??0480 eq 1
 5432+ 3			        setb    c
 5433+ 3			        else
 5434+ 3  119E	C3		        clr     c
 5435+ 3			        endif
 5436+ 2			        endif
 5437+ 2  119F	36		        addc      a,@r0
 5438+ 2			        ifnb    <004h>
 5439+ 2			        save_psw
 5440+ 3  11A0	85 D0 70	        mov     saved_psw,PSW
 5441+ 2			        endif
 5442+ 2  11A3	B4 84 53	        cjne    a,#res,??0473
 5443+ 2			        ifnb    <004h>
 5444+ 2			        tst_psw <004h>,??0473
 5445+ 3  11A6	E5 70		        mov     a,saved_psw
 5446+ 3  11A8	54 C4		        anl     a,#0c4h
 5447+ 3  11AA	64 04		        xrl     a,#004h
 5448+ 3  11AC	54 FE		        anl     a,#0feh
 5449+ 3  11AE	70 49		        jnz     ??0473
 5450+ 2			        endif
 5451+ 1			        ; Test <op> A, @R1
 5452+ 1  11B0	79 31		        mov     r1,#031h
 5453+ 1			        top_ma  addc,@r1,??0473,<004h>
 5454+ 2  11B2	77 51		        mov     @r1,#arg0
 5455+ 2  11B4	74 33		        mov     a,#arg1
 5456+ 2			        ifnb    <004h>
 5457+ 2			        set_cy  004h
 5458+ 3	N      0000	??0481  set     (004h and 1)
 5459+ 3	N      0000	        if      ??0481 eq 1
 5460+ 3			        setb    c
 5461+ 3			        else
 5462+ 3  11B6	C3		        clr     c
 5463+ 3			        endif
 5464+ 2			        endif
 5465+ 2  11B7	37		        addc      a,@r1
 5466+ 2			        ifnb    <004h>
 5467+ 2			        save_psw
 5468+ 3  11B8	85 D0 70	        mov     saved_psw,PSW
 5469+ 2			        endif
 5470+ 2  11BB	B4 84 3B	        cjne    a,#res,??0473
 5471+ 2			        ifnb    <004h>
 5472+ 2			        tst_psw <004h>,??0473
 5473+ 3  11BE	E5 70		        mov     a,saved_psw
 5474+ 3  11C0	54 C4		        anl     a,#0c4h
 5475+ 3  11C2	64 04		        xrl     a,#004h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 99



 Line  I  Addr  Code            Source

 5476+ 3  11C4	54 FE		        anl     a,#0feh
 5477+ 3  11C6	70 31		        jnz     ??0473
 5478+ 2			        endif
 5479+ 1
 5480+ 1			        ; Now test <op> A, Rn for n in 0..7
 5481+ 1			        top_ma  addc,r0,??0473,<004h>
 5482+ 2  11C8	78 51		        mov     r0,#arg0
 5483+ 2  11CA	74 33		        mov     a,#arg1
 5484+ 2			        ifnb    <004h>
 5485+ 2			        set_cy  004h
 5486+ 3	N      0000	??0482  set     (004h and 1)
 5487+ 3	N      0000	        if      ??0482 eq 1
 5488+ 3			        setb    c
 5489+ 3			        else
 5490+ 3  11CC	C3		        clr     c
 5491+ 3			        endif
 5492+ 2			        endif
 5493+ 2  11CD	38		        addc      a,r0
 5494+ 2			        ifnb    <004h>
 5495+ 2			        save_psw
 5496+ 3  11CE	85 D0 70	        mov     saved_psw,PSW
 5497+ 2			        endif
 5498+ 2  11D1	B4 84 25	        cjne    a,#res,??0473
 5499+ 2			        ifnb    <004h>
 5500+ 2			        tst_psw <004h>,??0473
 5501+ 3  11D4	E5 70		        mov     a,saved_psw
 5502+ 3  11D6	54 C4		        anl     a,#0c4h
 5503+ 3  11D8	64 04		        xrl     a,#004h
 5504+ 3  11DA	54 FE		        anl     a,#0feh
 5505+ 3  11DC	70 1B		        jnz     ??0473
 5506+ 2			        endif
 5507+ 1			        top_ma  addc,r1,??0473,<004h>
 5508+ 2  11DE	79 51		        mov     r1,#arg0
 5509+ 2  11E0	74 33		        mov     a,#arg1
 5510+ 2			        ifnb    <004h>
 5511+ 2			        set_cy  004h
 5512+ 3	N      0000	??0483  set     (004h and 1)
 5513+ 3	N      0000	        if      ??0483 eq 1
 5514+ 3			        setb    c
 5515+ 3			        else
 5516+ 3  11E2	C3		        clr     c
 5517+ 3			        endif
 5518+ 2			        endif
 5519+ 2  11E3	39		        addc      a,r1
 5520+ 2			        ifnb    <004h>
 5521+ 2			        save_psw
 5522+ 3  11E4	85 D0 70	        mov     saved_psw,PSW
 5523+ 2			        endif
 5524+ 2  11E7	B4 84 0F	        cjne    a,#res,??0473
 5525+ 2			        ifnb    <004h>
 5526+ 2			        tst_psw <004h>,??0473
 5527+ 3  11EA	E5 70		        mov     a,saved_psw
 5528+ 3  11EC	54 C4		        anl     a,#0c4h
 5529+ 3  11EE	64 04		        xrl     a,#004h
 5530+ 3  11F0	54 FE		        anl     a,#0feh
 5531+ 3  11F2	70 05		        jnz     ??0473

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 100



 Line  I  Addr  Code            Source

 5532+ 2			        endif
 5533+ 1
 5534+ 1			        eot     'a',??0473
 5535+ 2			        putc    #'a'
 5536+ 3  11F4			??0485:
 5537+ 3			        ;jnb     SCON.1,putc_loop
 5538+ 3			        ;clr     SCON.1
 5539+ 3  11F4	75 99 61	        mov     SBUF,#'a'
 5540+ 2  11F7	80 06		        sjmp    ??0484
 5541+ 2  11F9			??0473:  putc    #'?'
 5542+ 3  11F9			??0486:
 5543+ 3			        ;jnb     SCON.1,putc_loop
 5544+ 3			        ;clr     SCON.1
 5545+ 3  11F9	75 99 3F	        mov     SBUF,#'?'
 5546+ 2  11FC	75 6E 01	        mov     fail,#001h
 5547+ 2  11FF			??0484:
 5548+ 1
 5549+ 1			        top_ma  addc,r2,??0474,<004h>
 5550+ 2  11FF	7A 51		        mov     r2,#arg0
 5551+ 2  1201	74 33		        mov     a,#arg1
 5552+ 2			        ifnb    <004h>
 5553+ 2			        set_cy  004h
 5554+ 3	N      0000	??0487  set     (004h and 1)
 5555+ 3	N      0000	        if      ??0487 eq 1
 5556+ 3			        setb    c
 5557+ 3			        else
 5558+ 3  1203	C3		        clr     c
 5559+ 3			        endif
 5560+ 2			        endif
 5561+ 2  1204	3A		        addc      a,r2
 5562+ 2			        ifnb    <004h>
 5563+ 2			        save_psw
 5564+ 3  1205	85 D0 70	        mov     saved_psw,PSW
 5565+ 2			        endif
 5566+ 2  1208	B4 84 25	        cjne    a,#res,??0474
 5567+ 2			        ifnb    <004h>
 5568+ 2			        tst_psw <004h>,??0474
 5569+ 3  120B	E5 70		        mov     a,saved_psw
 5570+ 3  120D	54 C4		        anl     a,#0c4h
 5571+ 3  120F	64 04		        xrl     a,#004h
 5572+ 3  1211	54 FE		        anl     a,#0feh
 5573+ 3  1213	70 1B		        jnz     ??0474
 5574+ 2			        endif
 5575+ 1			        top_ma  addc,r3,??0474,<004h>
 5576+ 2  1215	7B 51		        mov     r3,#arg0
 5577+ 2  1217	74 33		        mov     a,#arg1
 5578+ 2			        ifnb    <004h>
 5579+ 2			        set_cy  004h
 5580+ 3	N      0000	??0488  set     (004h and 1)
 5581+ 3	N      0000	        if      ??0488 eq 1
 5582+ 3			        setb    c
 5583+ 3			        else
 5584+ 3  1219	C3		        clr     c
 5585+ 3			        endif
 5586+ 2			        endif
 5587+ 2  121A	3B		        addc      a,r3

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 101



 Line  I  Addr  Code            Source

 5588+ 2			        ifnb    <004h>
 5589+ 2			        save_psw
 5590+ 3  121B	85 D0 70	        mov     saved_psw,PSW
 5591+ 2			        endif
 5592+ 2  121E	B4 84 0F	        cjne    a,#res,??0474
 5593+ 2			        ifnb    <004h>
 5594+ 2			        tst_psw <004h>,??0474
 5595+ 3  1221	E5 70		        mov     a,saved_psw
 5596+ 3  1223	54 C4		        anl     a,#0c4h
 5597+ 3  1225	64 04		        xrl     a,#004h
 5598+ 3  1227	54 FE		        anl     a,#0feh
 5599+ 3  1229	70 05		        jnz     ??0474
 5600+ 2			        endif
 5601+ 1
 5602+ 1			        eot     'b',??0474
 5603+ 2			        putc    #'b'
 5604+ 3  122B			??0490:
 5605+ 3			        ;jnb     SCON.1,putc_loop
 5606+ 3			        ;clr     SCON.1
 5607+ 3  122B	75 99 62	        mov     SBUF,#'b'
 5608+ 2  122E	80 06		        sjmp    ??0489
 5609+ 2  1230			??0474:  putc    #'?'
 5610+ 3  1230			??0491:
 5611+ 3			        ;jnb     SCON.1,putc_loop
 5612+ 3			        ;clr     SCON.1
 5613+ 3  1230	75 99 3F	        mov     SBUF,#'?'
 5614+ 2  1233	75 6E 01	        mov     fail,#001h
 5615+ 2  1236			??0489:
 5616+ 1
 5617+ 1			        top_ma  addc,r4,??0475,<004h>
 5618+ 2  1236	7C 51		        mov     r4,#arg0
 5619+ 2  1238	74 33		        mov     a,#arg1
 5620+ 2			        ifnb    <004h>
 5621+ 2			        set_cy  004h
 5622+ 3	N      0000	??0492  set     (004h and 1)
 5623+ 3	N      0000	        if      ??0492 eq 1
 5624+ 3			        setb    c
 5625+ 3			        else
 5626+ 3  123A	C3		        clr     c
 5627+ 3			        endif
 5628+ 2			        endif
 5629+ 2  123B	3C		        addc      a,r4
 5630+ 2			        ifnb    <004h>
 5631+ 2			        save_psw
 5632+ 3  123C	85 D0 70	        mov     saved_psw,PSW
 5633+ 2			        endif
 5634+ 2  123F	B4 84 25	        cjne    a,#res,??0475
 5635+ 2			        ifnb    <004h>
 5636+ 2			        tst_psw <004h>,??0475
 5637+ 3  1242	E5 70		        mov     a,saved_psw
 5638+ 3  1244	54 C4		        anl     a,#0c4h
 5639+ 3  1246	64 04		        xrl     a,#004h
 5640+ 3  1248	54 FE		        anl     a,#0feh
 5641+ 3  124A	70 1B		        jnz     ??0475
 5642+ 2			        endif
 5643+ 1			        top_ma  addc,r5,??0475,<004h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 102



 Line  I  Addr  Code            Source

 5644+ 2  124C	7D 51		        mov     r5,#arg0
 5645+ 2  124E	74 33		        mov     a,#arg1
 5646+ 2			        ifnb    <004h>
 5647+ 2			        set_cy  004h
 5648+ 3	N      0000	??0493  set     (004h and 1)
 5649+ 3	N      0000	        if      ??0493 eq 1
 5650+ 3			        setb    c
 5651+ 3			        else
 5652+ 3  1250	C3		        clr     c
 5653+ 3			        endif
 5654+ 2			        endif
 5655+ 2  1251	3D		        addc      a,r5
 5656+ 2			        ifnb    <004h>
 5657+ 2			        save_psw
 5658+ 3  1252	85 D0 70	        mov     saved_psw,PSW
 5659+ 2			        endif
 5660+ 2  1255	B4 84 0F	        cjne    a,#res,??0475
 5661+ 2			        ifnb    <004h>
 5662+ 2			        tst_psw <004h>,??0475
 5663+ 3  1258	E5 70		        mov     a,saved_psw
 5664+ 3  125A	54 C4		        anl     a,#0c4h
 5665+ 3  125C	64 04		        xrl     a,#004h
 5666+ 3  125E	54 FE		        anl     a,#0feh
 5667+ 3  1260	70 05		        jnz     ??0475
 5668+ 2			        endif
 5669+ 1
 5670+ 1			        eot     'c',??0475
 5671+ 2			        putc    #'c'
 5672+ 3  1262			??0495:
 5673+ 3			        ;jnb     SCON.1,putc_loop
 5674+ 3			        ;clr     SCON.1
 5675+ 3  1262	75 99 63	        mov     SBUF,#'c'
 5676+ 2  1265	80 06		        sjmp    ??0494
 5677+ 2  1267			??0475:  putc    #'?'
 5678+ 3  1267			??0496:
 5679+ 3			        ;jnb     SCON.1,putc_loop
 5680+ 3			        ;clr     SCON.1
 5681+ 3  1267	75 99 3F	        mov     SBUF,#'?'
 5682+ 2  126A	75 6E 01	        mov     fail,#001h
 5683+ 2  126D			??0494:
 5684+ 1
 5685+ 1			        top_ma  addc,r6,??0472,<004h>
 5686+ 2  126D	7E 51		        mov     r6,#arg0
 5687+ 2  126F	74 33		        mov     a,#arg1
 5688+ 2			        ifnb    <004h>
 5689+ 2			        set_cy  004h
 5690+ 3	N      0000	??0497  set     (004h and 1)
 5691+ 3	N      0000	        if      ??0497 eq 1
 5692+ 3			        setb    c
 5693+ 3			        else
 5694+ 3  1271	C3		        clr     c
 5695+ 3			        endif
 5696+ 2			        endif
 5697+ 2  1272	3E		        addc      a,r6
 5698+ 2			        ifnb    <004h>
 5699+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 103



 Line  I  Addr  Code            Source

 5700+ 3  1273	85 D0 70	        mov     saved_psw,PSW
 5701+ 2			        endif
 5702+ 2  1276	B4 84 25	        cjne    a,#res,??0472
 5703+ 2			        ifnb    <004h>
 5704+ 2			        tst_psw <004h>,??0472
 5705+ 3  1279	E5 70		        mov     a,saved_psw
 5706+ 3  127B	54 C4		        anl     a,#0c4h
 5707+ 3  127D	64 04		        xrl     a,#004h
 5708+ 3  127F	54 FE		        anl     a,#0feh
 5709+ 3  1281	70 1B		        jnz     ??0472
 5710+ 2			        endif
 5711+ 1			        top_ma  addc,r7,??0472,<004h>
 5712+ 2  1283	7F 51		        mov     r7,#arg0
 5713+ 2  1285	74 33		        mov     a,#arg1
 5714+ 2			        ifnb    <004h>
 5715+ 2			        set_cy  004h
 5716+ 3	N      0000	??0498  set     (004h and 1)
 5717+ 3	N      0000	        if      ??0498 eq 1
 5718+ 3			        setb    c
 5719+ 3			        else
 5720+ 3  1287	C3		        clr     c
 5721+ 3			        endif
 5722+ 2			        endif
 5723+ 2  1288	3F		        addc      a,r7
 5724+ 2			        ifnb    <004h>
 5725+ 2			        save_psw
 5726+ 3  1289	85 D0 70	        mov     saved_psw,PSW
 5727+ 2			        endif
 5728+ 2  128C	B4 84 0F	        cjne    a,#res,??0472
 5729+ 2			        ifnb    <004h>
 5730+ 2			        tst_psw <004h>,??0472
 5731+ 3  128F	E5 70		        mov     a,saved_psw
 5732+ 3  1291	54 C4		        anl     a,#0c4h
 5733+ 3  1293	64 04		        xrl     a,#004h
 5734+ 3  1295	54 FE		        anl     a,#0feh
 5735+ 3  1297	70 05		        jnz     ??0472
 5736+ 2			        endif
 5737+ 1
 5738+ 1			        eot     'd',??0472
 5739+ 2			        putc    #'d'
 5740+ 3  1299			??0500:
 5741+ 3			        ;jnb     SCON.1,putc_loop
 5742+ 3			        ;clr     SCON.1
 5743+ 3  1299	75 99 64	        mov     SBUF,#'d'
 5744+ 2  129C	80 06		        sjmp    ??0499
 5745+ 2  129E			??0472:  putc    #'?'
 5746+ 3  129E			??0501:
 5747+ 3			        ;jnb     SCON.1,putc_loop
 5748+ 3			        ;clr     SCON.1
 5749+ 3  129E	75 99 3F	        mov     SBUF,#'?'
 5750+ 2  12A1	75 6E 01	        mov     fail,#001h
 5751+ 2  12A4			??0499:
 5752+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 5753+ 1
 5754+ 1			        ; Optionally test immediate addressing modes.
 5755+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 104



 Line  I  Addr  Code            Source

 5756+ 1	N      FFFF	        if      (01h and 1) ne 0
 5757+ 1			        ; Test <op> A, #arg1...
 5758+ 1			        top_mb  addc,a,??0476,<004h>
 5759+ 2  12A4	74 33		        mov     a,#arg1
 5760+ 2			        ifnb    <004h>
 5761+ 2			        set_cy  004h
 5762+ 3	N      0000	??0502  set     (004h and 1)
 5763+ 3	N      0000	        if      ??0502 eq 1
 5764+ 3			        setb    c
 5765+ 3			        else
 5766+ 3  12A6	C3		        clr     c
 5767+ 3			        endif
 5768+ 2			        endif
 5769+ 2  12A7	34 51		        addc      a,#arg0
 5770+ 2			        ifnb    <004h>
 5771+ 2			        save_psw
 5772+ 3  12A9	85 D0 70	        mov     saved_psw,PSW
 5773+ 2			        endif
 5774+ 2  12AC	F5 E0		        mov     ACC,a
 5775+ 2  12AE	B4 84 0F	        cjne    a,#res,??0476
 5776+ 2			        ifnb    <004h>
 5777+ 2			        tst_psw <004h>,??0476
 5778+ 3  12B1	E5 70		        mov     a,saved_psw
 5779+ 3  12B3	54 C4		        anl     a,#0c4h
 5780+ 3  12B5	64 04		        xrl     a,#004h
 5781+ 3  12B7	54 FE		        anl     a,#0feh
 5782+ 3  12B9	70 05		        jnz     ??0476
 5783+ 2			        endif
 5784+ 1			        eot     'e',??0476
 5785+ 2			        putc    #'e'
 5786+ 3  12BB			??0504:
 5787+ 3			        ;jnb     SCON.1,putc_loop
 5788+ 3			        ;clr     SCON.1
 5789+ 3  12BB	75 99 65	        mov     SBUF,#'e'
 5790+ 2  12BE	80 06		        sjmp    ??0503
 5791+ 2  12C0			??0476:  putc    #'?'
 5792+ 3  12C0			??0505:
 5793+ 3			        ;jnb     SCON.1,putc_loop
 5794+ 3			        ;clr     SCON.1
 5795+ 3  12C0	75 99 3F	        mov     SBUF,#'?'
 5796+ 2  12C3	75 6E 01	        mov     fail,#001h
 5797+ 2  12C6			??0503:
 5798+ 1			        endif
 5799+ 1
 5800+ 1	N      0000	        if      (01h and 2) ne 0
 5801+ 1			        ; ...and <op> dir, #arg1
 5802+ 1			        top_mb  addc,dir0,??0477,<004h>
 5803+ 1			        eot     'f',??0477
 5804+ 1			        endif
 5805+ 1
 5806+ 1			        ; Optionally test <op> dir, A
 5807+ 1	N      0000	        if      (01h and 4) ne 0
 5808+ 1			        top_mc  addc,??0478,<004h>
 5809+ 1			        eot     'g',??0478
 5810+ 1			        endif
 5811+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 105



 Line  I  Addr  Code            Source

 5812:				        putc    #'1'
 5813+ 1  12C6			??0506:
 5814+ 1			        ;jnb     SCON.1,putc_loop
 5815+ 1			        ;clr     SCON.1
 5816+ 1  12C6	75 99 31	        mov     SBUF,#'1'
 5817:				        tst_alu addc,081h,093h,014h,01h,084h     ;  CY /AC  OV
 5818+ 1			        ; Put the argument and result data into variables for easier access
 5819+ 1	N      0081	        arg0    set 081h
 5820+ 1	N      0093	        arg1    set 093h
 5821+ 1	N      0014	        res     set 014h
 5822+ 1
 5823+ 1			        ; Test <op> A, dir
 5824+ 1			        top_ma  addc,dir0,??0508,<084h>
 5825+ 2  12C9	75 60 81	        mov     dir0,#arg0
 5826+ 2  12CC	74 93		        mov     a,#arg1
 5827+ 2			        ifnb    <084h>
 5828+ 2			        set_cy  084h
 5829+ 3	N      0000	??0514  set     (084h and 1)
 5830+ 3	N      0000	        if      ??0514 eq 1
 5831+ 3			        setb    c
 5832+ 3			        else
 5833+ 3  12CE	C3		        clr     c
 5834+ 3			        endif
 5835+ 2			        endif
 5836+ 2  12CF	35 60		        addc      a,dir0
 5837+ 2			        ifnb    <084h>
 5838+ 2			        save_psw
 5839+ 3  12D1	85 D0 70	        mov     saved_psw,PSW
 5840+ 2			        endif
 5841+ 2  12D4	B4 14 6B	        cjne    a,#res,??0508
 5842+ 2			        ifnb    <084h>
 5843+ 2			        tst_psw <084h>,??0508
 5844+ 3  12D7	E5 70		        mov     a,saved_psw
 5845+ 3  12D9	54 C4		        anl     a,#0c4h
 5846+ 3  12DB	64 84		        xrl     a,#084h
 5847+ 3  12DD	54 FE		        anl     a,#0feh
 5848+ 3  12DF	70 61		        jnz     ??0508
 5849+ 2			        endif
 5850+ 1			        ; Test <op> A, @R0
 5851+ 1  12E1	78 60		        mov     r0,#dir0
 5852+ 1			        top_ma  addc,@r0,??0508,<084h>
 5853+ 2  12E3	76 81		        mov     @r0,#arg0
 5854+ 2  12E5	74 93		        mov     a,#arg1
 5855+ 2			        ifnb    <084h>
 5856+ 2			        set_cy  084h
 5857+ 3	N      0000	??0515  set     (084h and 1)
 5858+ 3	N      0000	        if      ??0515 eq 1
 5859+ 3			        setb    c
 5860+ 3			        else
 5861+ 3  12E7	C3		        clr     c
 5862+ 3			        endif
 5863+ 2			        endif
 5864+ 2  12E8	36		        addc      a,@r0
 5865+ 2			        ifnb    <084h>
 5866+ 2			        save_psw
 5867+ 3  12E9	85 D0 70	        mov     saved_psw,PSW

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 106



 Line  I  Addr  Code            Source

 5868+ 2			        endif
 5869+ 2  12EC	B4 14 53	        cjne    a,#res,??0508
 5870+ 2			        ifnb    <084h>
 5871+ 2			        tst_psw <084h>,??0508
 5872+ 3  12EF	E5 70		        mov     a,saved_psw
 5873+ 3  12F1	54 C4		        anl     a,#0c4h
 5874+ 3  12F3	64 84		        xrl     a,#084h
 5875+ 3  12F5	54 FE		        anl     a,#0feh
 5876+ 3  12F7	70 49		        jnz     ??0508
 5877+ 2			        endif
 5878+ 1			        ; Test <op> A, @R1
 5879+ 1  12F9	79 31		        mov     r1,#031h
 5880+ 1			        top_ma  addc,@r1,??0508,<084h>
 5881+ 2  12FB	77 81		        mov     @r1,#arg0
 5882+ 2  12FD	74 93		        mov     a,#arg1
 5883+ 2			        ifnb    <084h>
 5884+ 2			        set_cy  084h
 5885+ 3	N      0000	??0516  set     (084h and 1)
 5886+ 3	N      0000	        if      ??0516 eq 1
 5887+ 3			        setb    c
 5888+ 3			        else
 5889+ 3  12FF	C3		        clr     c
 5890+ 3			        endif
 5891+ 2			        endif
 5892+ 2  1300	37		        addc      a,@r1
 5893+ 2			        ifnb    <084h>
 5894+ 2			        save_psw
 5895+ 3  1301	85 D0 70	        mov     saved_psw,PSW
 5896+ 2			        endif
 5897+ 2  1304	B4 14 3B	        cjne    a,#res,??0508
 5898+ 2			        ifnb    <084h>
 5899+ 2			        tst_psw <084h>,??0508
 5900+ 3  1307	E5 70		        mov     a,saved_psw
 5901+ 3  1309	54 C4		        anl     a,#0c4h
 5902+ 3  130B	64 84		        xrl     a,#084h
 5903+ 3  130D	54 FE		        anl     a,#0feh
 5904+ 3  130F	70 31		        jnz     ??0508
 5905+ 2			        endif
 5906+ 1
 5907+ 1			        ; Now test <op> A, Rn for n in 0..7
 5908+ 1			        top_ma  addc,r0,??0508,<084h>
 5909+ 2  1311	78 81		        mov     r0,#arg0
 5910+ 2  1313	74 93		        mov     a,#arg1
 5911+ 2			        ifnb    <084h>
 5912+ 2			        set_cy  084h
 5913+ 3	N      0000	??0517  set     (084h and 1)
 5914+ 3	N      0000	        if      ??0517 eq 1
 5915+ 3			        setb    c
 5916+ 3			        else
 5917+ 3  1315	C3		        clr     c
 5918+ 3			        endif
 5919+ 2			        endif
 5920+ 2  1316	38		        addc      a,r0
 5921+ 2			        ifnb    <084h>
 5922+ 2			        save_psw
 5923+ 3  1317	85 D0 70	        mov     saved_psw,PSW

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 107



 Line  I  Addr  Code            Source

 5924+ 2			        endif
 5925+ 2  131A	B4 14 25	        cjne    a,#res,??0508
 5926+ 2			        ifnb    <084h>
 5927+ 2			        tst_psw <084h>,??0508
 5928+ 3  131D	E5 70		        mov     a,saved_psw
 5929+ 3  131F	54 C4		        anl     a,#0c4h
 5930+ 3  1321	64 84		        xrl     a,#084h
 5931+ 3  1323	54 FE		        anl     a,#0feh
 5932+ 3  1325	70 1B		        jnz     ??0508
 5933+ 2			        endif
 5934+ 1			        top_ma  addc,r1,??0508,<084h>
 5935+ 2  1327	79 81		        mov     r1,#arg0
 5936+ 2  1329	74 93		        mov     a,#arg1
 5937+ 2			        ifnb    <084h>
 5938+ 2			        set_cy  084h
 5939+ 3	N      0000	??0518  set     (084h and 1)
 5940+ 3	N      0000	        if      ??0518 eq 1
 5941+ 3			        setb    c
 5942+ 3			        else
 5943+ 3  132B	C3		        clr     c
 5944+ 3			        endif
 5945+ 2			        endif
 5946+ 2  132C	39		        addc      a,r1
 5947+ 2			        ifnb    <084h>
 5948+ 2			        save_psw
 5949+ 3  132D	85 D0 70	        mov     saved_psw,PSW
 5950+ 2			        endif
 5951+ 2  1330	B4 14 0F	        cjne    a,#res,??0508
 5952+ 2			        ifnb    <084h>
 5953+ 2			        tst_psw <084h>,??0508
 5954+ 3  1333	E5 70		        mov     a,saved_psw
 5955+ 3  1335	54 C4		        anl     a,#0c4h
 5956+ 3  1337	64 84		        xrl     a,#084h
 5957+ 3  1339	54 FE		        anl     a,#0feh
 5958+ 3  133B	70 05		        jnz     ??0508
 5959+ 2			        endif
 5960+ 1
 5961+ 1			        eot     'a',??0508
 5962+ 2			        putc    #'a'
 5963+ 3  133D			??0520:
 5964+ 3			        ;jnb     SCON.1,putc_loop
 5965+ 3			        ;clr     SCON.1
 5966+ 3  133D	75 99 61	        mov     SBUF,#'a'
 5967+ 2  1340	80 06		        sjmp    ??0519
 5968+ 2  1342			??0508:  putc    #'?'
 5969+ 3  1342			??0521:
 5970+ 3			        ;jnb     SCON.1,putc_loop
 5971+ 3			        ;clr     SCON.1
 5972+ 3  1342	75 99 3F	        mov     SBUF,#'?'
 5973+ 2  1345	75 6E 01	        mov     fail,#001h
 5974+ 2  1348			??0519:
 5975+ 1
 5976+ 1			        top_ma  addc,r2,??0509,<084h>
 5977+ 2  1348	7A 81		        mov     r2,#arg0
 5978+ 2  134A	74 93		        mov     a,#arg1
 5979+ 2			        ifnb    <084h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 108



 Line  I  Addr  Code            Source

 5980+ 2			        set_cy  084h
 5981+ 3	N      0000	??0522  set     (084h and 1)
 5982+ 3	N      0000	        if      ??0522 eq 1
 5983+ 3			        setb    c
 5984+ 3			        else
 5985+ 3  134C	C3		        clr     c
 5986+ 3			        endif
 5987+ 2			        endif
 5988+ 2  134D	3A		        addc      a,r2
 5989+ 2			        ifnb    <084h>
 5990+ 2			        save_psw
 5991+ 3  134E	85 D0 70	        mov     saved_psw,PSW
 5992+ 2			        endif
 5993+ 2  1351	B4 14 25	        cjne    a,#res,??0509
 5994+ 2			        ifnb    <084h>
 5995+ 2			        tst_psw <084h>,??0509
 5996+ 3  1354	E5 70		        mov     a,saved_psw
 5997+ 3  1356	54 C4		        anl     a,#0c4h
 5998+ 3  1358	64 84		        xrl     a,#084h
 5999+ 3  135A	54 FE		        anl     a,#0feh
 6000+ 3  135C	70 1B		        jnz     ??0509
 6001+ 2			        endif
 6002+ 1			        top_ma  addc,r3,??0509,<084h>
 6003+ 2  135E	7B 81		        mov     r3,#arg0
 6004+ 2  1360	74 93		        mov     a,#arg1
 6005+ 2			        ifnb    <084h>
 6006+ 2			        set_cy  084h
 6007+ 3	N      0000	??0523  set     (084h and 1)
 6008+ 3	N      0000	        if      ??0523 eq 1
 6009+ 3			        setb    c
 6010+ 3			        else
 6011+ 3  1362	C3		        clr     c
 6012+ 3			        endif
 6013+ 2			        endif
 6014+ 2  1363	3B		        addc      a,r3
 6015+ 2			        ifnb    <084h>
 6016+ 2			        save_psw
 6017+ 3  1364	85 D0 70	        mov     saved_psw,PSW
 6018+ 2			        endif
 6019+ 2  1367	B4 14 0F	        cjne    a,#res,??0509
 6020+ 2			        ifnb    <084h>
 6021+ 2			        tst_psw <084h>,??0509
 6022+ 3  136A	E5 70		        mov     a,saved_psw
 6023+ 3  136C	54 C4		        anl     a,#0c4h
 6024+ 3  136E	64 84		        xrl     a,#084h
 6025+ 3  1370	54 FE		        anl     a,#0feh
 6026+ 3  1372	70 05		        jnz     ??0509
 6027+ 2			        endif
 6028+ 1
 6029+ 1			        eot     'b',??0509
 6030+ 2			        putc    #'b'
 6031+ 3  1374			??0525:
 6032+ 3			        ;jnb     SCON.1,putc_loop
 6033+ 3			        ;clr     SCON.1
 6034+ 3  1374	75 99 62	        mov     SBUF,#'b'
 6035+ 2  1377	80 06		        sjmp    ??0524

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 109



 Line  I  Addr  Code            Source

 6036+ 2  1379			??0509:  putc    #'?'
 6037+ 3  1379			??0526:
 6038+ 3			        ;jnb     SCON.1,putc_loop
 6039+ 3			        ;clr     SCON.1
 6040+ 3  1379	75 99 3F	        mov     SBUF,#'?'
 6041+ 2  137C	75 6E 01	        mov     fail,#001h
 6042+ 2  137F			??0524:
 6043+ 1
 6044+ 1			        top_ma  addc,r4,??0510,<084h>
 6045+ 2  137F	7C 81		        mov     r4,#arg0
 6046+ 2  1381	74 93		        mov     a,#arg1
 6047+ 2			        ifnb    <084h>
 6048+ 2			        set_cy  084h
 6049+ 3	N      0000	??0527  set     (084h and 1)
 6050+ 3	N      0000	        if      ??0527 eq 1
 6051+ 3			        setb    c
 6052+ 3			        else
 6053+ 3  1383	C3		        clr     c
 6054+ 3			        endif
 6055+ 2			        endif
 6056+ 2  1384	3C		        addc      a,r4
 6057+ 2			        ifnb    <084h>
 6058+ 2			        save_psw
 6059+ 3  1385	85 D0 70	        mov     saved_psw,PSW
 6060+ 2			        endif
 6061+ 2  1388	B4 14 25	        cjne    a,#res,??0510
 6062+ 2			        ifnb    <084h>
 6063+ 2			        tst_psw <084h>,??0510
 6064+ 3  138B	E5 70		        mov     a,saved_psw
 6065+ 3  138D	54 C4		        anl     a,#0c4h
 6066+ 3  138F	64 84		        xrl     a,#084h
 6067+ 3  1391	54 FE		        anl     a,#0feh
 6068+ 3  1393	70 1B		        jnz     ??0510
 6069+ 2			        endif
 6070+ 1			        top_ma  addc,r5,??0510,<084h>
 6071+ 2  1395	7D 81		        mov     r5,#arg0
 6072+ 2  1397	74 93		        mov     a,#arg1
 6073+ 2			        ifnb    <084h>
 6074+ 2			        set_cy  084h
 6075+ 3	N      0000	??0528  set     (084h and 1)
 6076+ 3	N      0000	        if      ??0528 eq 1
 6077+ 3			        setb    c
 6078+ 3			        else
 6079+ 3  1399	C3		        clr     c
 6080+ 3			        endif
 6081+ 2			        endif
 6082+ 2  139A	3D		        addc      a,r5
 6083+ 2			        ifnb    <084h>
 6084+ 2			        save_psw
 6085+ 3  139B	85 D0 70	        mov     saved_psw,PSW
 6086+ 2			        endif
 6087+ 2  139E	B4 14 0F	        cjne    a,#res,??0510
 6088+ 2			        ifnb    <084h>
 6089+ 2			        tst_psw <084h>,??0510
 6090+ 3  13A1	E5 70		        mov     a,saved_psw
 6091+ 3  13A3	54 C4		        anl     a,#0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 110



 Line  I  Addr  Code            Source

 6092+ 3  13A5	64 84		        xrl     a,#084h
 6093+ 3  13A7	54 FE		        anl     a,#0feh
 6094+ 3  13A9	70 05		        jnz     ??0510
 6095+ 2			        endif
 6096+ 1
 6097+ 1			        eot     'c',??0510
 6098+ 2			        putc    #'c'
 6099+ 3  13AB			??0530:
 6100+ 3			        ;jnb     SCON.1,putc_loop
 6101+ 3			        ;clr     SCON.1
 6102+ 3  13AB	75 99 63	        mov     SBUF,#'c'
 6103+ 2  13AE	80 06		        sjmp    ??0529
 6104+ 2  13B0			??0510:  putc    #'?'
 6105+ 3  13B0			??0531:
 6106+ 3			        ;jnb     SCON.1,putc_loop
 6107+ 3			        ;clr     SCON.1
 6108+ 3  13B0	75 99 3F	        mov     SBUF,#'?'
 6109+ 2  13B3	75 6E 01	        mov     fail,#001h
 6110+ 2  13B6			??0529:
 6111+ 1
 6112+ 1			        top_ma  addc,r6,??0507,<084h>
 6113+ 2  13B6	7E 81		        mov     r6,#arg0
 6114+ 2  13B8	74 93		        mov     a,#arg1
 6115+ 2			        ifnb    <084h>
 6116+ 2			        set_cy  084h
 6117+ 3	N      0000	??0532  set     (084h and 1)
 6118+ 3	N      0000	        if      ??0532 eq 1
 6119+ 3			        setb    c
 6120+ 3			        else
 6121+ 3  13BA	C3		        clr     c
 6122+ 3			        endif
 6123+ 2			        endif
 6124+ 2  13BB	3E		        addc      a,r6
 6125+ 2			        ifnb    <084h>
 6126+ 2			        save_psw
 6127+ 3  13BC	85 D0 70	        mov     saved_psw,PSW
 6128+ 2			        endif
 6129+ 2  13BF	B4 14 25	        cjne    a,#res,??0507
 6130+ 2			        ifnb    <084h>
 6131+ 2			        tst_psw <084h>,??0507
 6132+ 3  13C2	E5 70		        mov     a,saved_psw
 6133+ 3  13C4	54 C4		        anl     a,#0c4h
 6134+ 3  13C6	64 84		        xrl     a,#084h
 6135+ 3  13C8	54 FE		        anl     a,#0feh
 6136+ 3  13CA	70 1B		        jnz     ??0507
 6137+ 2			        endif
 6138+ 1			        top_ma  addc,r7,??0507,<084h>
 6139+ 2  13CC	7F 81		        mov     r7,#arg0
 6140+ 2  13CE	74 93		        mov     a,#arg1
 6141+ 2			        ifnb    <084h>
 6142+ 2			        set_cy  084h
 6143+ 3	N      0000	??0533  set     (084h and 1)
 6144+ 3	N      0000	        if      ??0533 eq 1
 6145+ 3			        setb    c
 6146+ 3			        else
 6147+ 3  13D0	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 111



 Line  I  Addr  Code            Source

 6148+ 3			        endif
 6149+ 2			        endif
 6150+ 2  13D1	3F		        addc      a,r7
 6151+ 2			        ifnb    <084h>
 6152+ 2			        save_psw
 6153+ 3  13D2	85 D0 70	        mov     saved_psw,PSW
 6154+ 2			        endif
 6155+ 2  13D5	B4 14 0F	        cjne    a,#res,??0507
 6156+ 2			        ifnb    <084h>
 6157+ 2			        tst_psw <084h>,??0507
 6158+ 3  13D8	E5 70		        mov     a,saved_psw
 6159+ 3  13DA	54 C4		        anl     a,#0c4h
 6160+ 3  13DC	64 84		        xrl     a,#084h
 6161+ 3  13DE	54 FE		        anl     a,#0feh
 6162+ 3  13E0	70 05		        jnz     ??0507
 6163+ 2			        endif
 6164+ 1
 6165+ 1			        eot     'd',??0507
 6166+ 2			        putc    #'d'
 6167+ 3  13E2			??0535:
 6168+ 3			        ;jnb     SCON.1,putc_loop
 6169+ 3			        ;clr     SCON.1
 6170+ 3  13E2	75 99 64	        mov     SBUF,#'d'
 6171+ 2  13E5	80 06		        sjmp    ??0534
 6172+ 2  13E7			??0507:  putc    #'?'
 6173+ 3  13E7			??0536:
 6174+ 3			        ;jnb     SCON.1,putc_loop
 6175+ 3			        ;clr     SCON.1
 6176+ 3  13E7	75 99 3F	        mov     SBUF,#'?'
 6177+ 2  13EA	75 6E 01	        mov     fail,#001h
 6178+ 2  13ED			??0534:
 6179+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 6180+ 1
 6181+ 1			        ; Optionally test immediate addressing modes.
 6182+ 1
 6183+ 1	N      FFFF	        if      (01h and 1) ne 0
 6184+ 1			        ; Test <op> A, #arg1...
 6185+ 1			        top_mb  addc,a,??0511,<084h>
 6186+ 2  13ED	74 93		        mov     a,#arg1
 6187+ 2			        ifnb    <084h>
 6188+ 2			        set_cy  084h
 6189+ 3	N      0000	??0537  set     (084h and 1)
 6190+ 3	N      0000	        if      ??0537 eq 1
 6191+ 3			        setb    c
 6192+ 3			        else
 6193+ 3  13EF	C3		        clr     c
 6194+ 3			        endif
 6195+ 2			        endif
 6196+ 2  13F0	34 81		        addc      a,#arg0
 6197+ 2			        ifnb    <084h>
 6198+ 2			        save_psw
 6199+ 3  13F2	85 D0 70	        mov     saved_psw,PSW
 6200+ 2			        endif
 6201+ 2  13F5	F5 E0		        mov     ACC,a
 6202+ 2  13F7	B4 14 0F	        cjne    a,#res,??0511
 6203+ 2			        ifnb    <084h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 112



 Line  I  Addr  Code            Source

 6204+ 2			        tst_psw <084h>,??0511
 6205+ 3  13FA	E5 70		        mov     a,saved_psw
 6206+ 3  13FC	54 C4		        anl     a,#0c4h
 6207+ 3  13FE	64 84		        xrl     a,#084h
 6208+ 3  1400	54 FE		        anl     a,#0feh
 6209+ 3  1402	70 05		        jnz     ??0511
 6210+ 2			        endif
 6211+ 1			        eot     'e',??0511
 6212+ 2			        putc    #'e'
 6213+ 3  1404			??0539:
 6214+ 3			        ;jnb     SCON.1,putc_loop
 6215+ 3			        ;clr     SCON.1
 6216+ 3  1404	75 99 65	        mov     SBUF,#'e'
 6217+ 2  1407	80 06		        sjmp    ??0538
 6218+ 2  1409			??0511:  putc    #'?'
 6219+ 3  1409			??0540:
 6220+ 3			        ;jnb     SCON.1,putc_loop
 6221+ 3			        ;clr     SCON.1
 6222+ 3  1409	75 99 3F	        mov     SBUF,#'?'
 6223+ 2  140C	75 6E 01	        mov     fail,#001h
 6224+ 2  140F			??0538:
 6225+ 1			        endif
 6226+ 1
 6227+ 1	N      0000	        if      (01h and 2) ne 0
 6228+ 1			        ; ...and <op> dir, #arg1
 6229+ 1			        top_mb  addc,dir0,??0512,<084h>
 6230+ 1			        eot     'f',??0512
 6231+ 1			        endif
 6232+ 1
 6233+ 1			        ; Optionally test <op> dir, A
 6234+ 1	N      0000	        if      (01h and 4) ne 0
 6235+ 1			        top_mc  addc,??0513,<084h>
 6236+ 1			        eot     'g',??0513
 6237+ 1			        endif
 6238+ 1
 6239:				        putc    #'2'
 6240+ 1  140F			??0541:
 6241+ 1			        ;jnb     SCON.1,putc_loop
 6242+ 1			        ;clr     SCON.1
 6243+ 1  140F	75 99 32	        mov     SBUF,#'2'
 6244:				        tst_alu addc,088h,098h,020h,01h,0c4h     ;  CY  AC  OV
 6245+ 1			        ; Put the argument and result data into variables for easier access
 6246+ 1	N      0088	        arg0    set 088h
 6247+ 1	N      0098	        arg1    set 098h
 6248+ 1	N      0020	        res     set 020h
 6249+ 1
 6250+ 1			        ; Test <op> A, dir
 6251+ 1			        top_ma  addc,dir0,??0543,<0c4h>
 6252+ 2  1412	75 60 88	        mov     dir0,#arg0
 6253+ 2  1415	74 98		        mov     a,#arg1
 6254+ 2			        ifnb    <0c4h>
 6255+ 2			        set_cy  0c4h
 6256+ 3	N      0000	??0549  set     (0c4h and 1)
 6257+ 3	N      0000	        if      ??0549 eq 1
 6258+ 3			        setb    c
 6259+ 3			        else

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 113



 Line  I  Addr  Code            Source

 6260+ 3  1417	C3		        clr     c
 6261+ 3			        endif
 6262+ 2			        endif
 6263+ 2  1418	35 60		        addc      a,dir0
 6264+ 2			        ifnb    <0c4h>
 6265+ 2			        save_psw
 6266+ 3  141A	85 D0 70	        mov     saved_psw,PSW
 6267+ 2			        endif
 6268+ 2  141D	B4 20 6B	        cjne    a,#res,??0543
 6269+ 2			        ifnb    <0c4h>
 6270+ 2			        tst_psw <0c4h>,??0543
 6271+ 3  1420	E5 70		        mov     a,saved_psw
 6272+ 3  1422	54 C4		        anl     a,#0c4h
 6273+ 3  1424	64 C4		        xrl     a,#0c4h
 6274+ 3  1426	54 FE		        anl     a,#0feh
 6275+ 3  1428	70 61		        jnz     ??0543
 6276+ 2			        endif
 6277+ 1			        ; Test <op> A, @R0
 6278+ 1  142A	78 60		        mov     r0,#dir0
 6279+ 1			        top_ma  addc,@r0,??0543,<0c4h>
 6280+ 2  142C	76 88		        mov     @r0,#arg0
 6281+ 2  142E	74 98		        mov     a,#arg1
 6282+ 2			        ifnb    <0c4h>
 6283+ 2			        set_cy  0c4h
 6284+ 3	N      0000	??0550  set     (0c4h and 1)
 6285+ 3	N      0000	        if      ??0550 eq 1
 6286+ 3			        setb    c
 6287+ 3			        else
 6288+ 3  1430	C3		        clr     c
 6289+ 3			        endif
 6290+ 2			        endif
 6291+ 2  1431	36		        addc      a,@r0
 6292+ 2			        ifnb    <0c4h>
 6293+ 2			        save_psw
 6294+ 3  1432	85 D0 70	        mov     saved_psw,PSW
 6295+ 2			        endif
 6296+ 2  1435	B4 20 53	        cjne    a,#res,??0543
 6297+ 2			        ifnb    <0c4h>
 6298+ 2			        tst_psw <0c4h>,??0543
 6299+ 3  1438	E5 70		        mov     a,saved_psw
 6300+ 3  143A	54 C4		        anl     a,#0c4h
 6301+ 3  143C	64 C4		        xrl     a,#0c4h
 6302+ 3  143E	54 FE		        anl     a,#0feh
 6303+ 3  1440	70 49		        jnz     ??0543
 6304+ 2			        endif
 6305+ 1			        ; Test <op> A, @R1
 6306+ 1  1442	79 31		        mov     r1,#031h
 6307+ 1			        top_ma  addc,@r1,??0543,<0c4h>
 6308+ 2  1444	77 88		        mov     @r1,#arg0
 6309+ 2  1446	74 98		        mov     a,#arg1
 6310+ 2			        ifnb    <0c4h>
 6311+ 2			        set_cy  0c4h
 6312+ 3	N      0000	??0551  set     (0c4h and 1)
 6313+ 3	N      0000	        if      ??0551 eq 1
 6314+ 3			        setb    c
 6315+ 3			        else

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 114



 Line  I  Addr  Code            Source

 6316+ 3  1448	C3		        clr     c
 6317+ 3			        endif
 6318+ 2			        endif
 6319+ 2  1449	37		        addc      a,@r1
 6320+ 2			        ifnb    <0c4h>
 6321+ 2			        save_psw
 6322+ 3  144A	85 D0 70	        mov     saved_psw,PSW
 6323+ 2			        endif
 6324+ 2  144D	B4 20 3B	        cjne    a,#res,??0543
 6325+ 2			        ifnb    <0c4h>
 6326+ 2			        tst_psw <0c4h>,??0543
 6327+ 3  1450	E5 70		        mov     a,saved_psw
 6328+ 3  1452	54 C4		        anl     a,#0c4h
 6329+ 3  1454	64 C4		        xrl     a,#0c4h
 6330+ 3  1456	54 FE		        anl     a,#0feh
 6331+ 3  1458	70 31		        jnz     ??0543
 6332+ 2			        endif
 6333+ 1
 6334+ 1			        ; Now test <op> A, Rn for n in 0..7
 6335+ 1			        top_ma  addc,r0,??0543,<0c4h>
 6336+ 2  145A	78 88		        mov     r0,#arg0
 6337+ 2  145C	74 98		        mov     a,#arg1
 6338+ 2			        ifnb    <0c4h>
 6339+ 2			        set_cy  0c4h
 6340+ 3	N      0000	??0552  set     (0c4h and 1)
 6341+ 3	N      0000	        if      ??0552 eq 1
 6342+ 3			        setb    c
 6343+ 3			        else
 6344+ 3  145E	C3		        clr     c
 6345+ 3			        endif
 6346+ 2			        endif
 6347+ 2  145F	38		        addc      a,r0
 6348+ 2			        ifnb    <0c4h>
 6349+ 2			        save_psw
 6350+ 3  1460	85 D0 70	        mov     saved_psw,PSW
 6351+ 2			        endif
 6352+ 2  1463	B4 20 25	        cjne    a,#res,??0543
 6353+ 2			        ifnb    <0c4h>
 6354+ 2			        tst_psw <0c4h>,??0543
 6355+ 3  1466	E5 70		        mov     a,saved_psw
 6356+ 3  1468	54 C4		        anl     a,#0c4h
 6357+ 3  146A	64 C4		        xrl     a,#0c4h
 6358+ 3  146C	54 FE		        anl     a,#0feh
 6359+ 3  146E	70 1B		        jnz     ??0543
 6360+ 2			        endif
 6361+ 1			        top_ma  addc,r1,??0543,<0c4h>
 6362+ 2  1470	79 88		        mov     r1,#arg0
 6363+ 2  1472	74 98		        mov     a,#arg1
 6364+ 2			        ifnb    <0c4h>
 6365+ 2			        set_cy  0c4h
 6366+ 3	N      0000	??0553  set     (0c4h and 1)
 6367+ 3	N      0000	        if      ??0553 eq 1
 6368+ 3			        setb    c
 6369+ 3			        else
 6370+ 3  1474	C3		        clr     c
 6371+ 3			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 115



 Line  I  Addr  Code            Source

 6372+ 2			        endif
 6373+ 2  1475	39		        addc      a,r1
 6374+ 2			        ifnb    <0c4h>
 6375+ 2			        save_psw
 6376+ 3  1476	85 D0 70	        mov     saved_psw,PSW
 6377+ 2			        endif
 6378+ 2  1479	B4 20 0F	        cjne    a,#res,??0543
 6379+ 2			        ifnb    <0c4h>
 6380+ 2			        tst_psw <0c4h>,??0543
 6381+ 3  147C	E5 70		        mov     a,saved_psw
 6382+ 3  147E	54 C4		        anl     a,#0c4h
 6383+ 3  1480	64 C4		        xrl     a,#0c4h
 6384+ 3  1482	54 FE		        anl     a,#0feh
 6385+ 3  1484	70 05		        jnz     ??0543
 6386+ 2			        endif
 6387+ 1
 6388+ 1			        eot     'a',??0543
 6389+ 2			        putc    #'a'
 6390+ 3  1486			??0555:
 6391+ 3			        ;jnb     SCON.1,putc_loop
 6392+ 3			        ;clr     SCON.1
 6393+ 3  1486	75 99 61	        mov     SBUF,#'a'
 6394+ 2  1489	80 06		        sjmp    ??0554
 6395+ 2  148B			??0543:  putc    #'?'
 6396+ 3  148B			??0556:
 6397+ 3			        ;jnb     SCON.1,putc_loop
 6398+ 3			        ;clr     SCON.1
 6399+ 3  148B	75 99 3F	        mov     SBUF,#'?'
 6400+ 2  148E	75 6E 01	        mov     fail,#001h
 6401+ 2  1491			??0554:
 6402+ 1
 6403+ 1			        top_ma  addc,r2,??0544,<0c4h>
 6404+ 2  1491	7A 88		        mov     r2,#arg0
 6405+ 2  1493	74 98		        mov     a,#arg1
 6406+ 2			        ifnb    <0c4h>
 6407+ 2			        set_cy  0c4h
 6408+ 3	N      0000	??0557  set     (0c4h and 1)
 6409+ 3	N      0000	        if      ??0557 eq 1
 6410+ 3			        setb    c
 6411+ 3			        else
 6412+ 3  1495	C3		        clr     c
 6413+ 3			        endif
 6414+ 2			        endif
 6415+ 2  1496	3A		        addc      a,r2
 6416+ 2			        ifnb    <0c4h>
 6417+ 2			        save_psw
 6418+ 3  1497	85 D0 70	        mov     saved_psw,PSW
 6419+ 2			        endif
 6420+ 2  149A	B4 20 25	        cjne    a,#res,??0544
 6421+ 2			        ifnb    <0c4h>
 6422+ 2			        tst_psw <0c4h>,??0544
 6423+ 3  149D	E5 70		        mov     a,saved_psw
 6424+ 3  149F	54 C4		        anl     a,#0c4h
 6425+ 3  14A1	64 C4		        xrl     a,#0c4h
 6426+ 3  14A3	54 FE		        anl     a,#0feh
 6427+ 3  14A5	70 1B		        jnz     ??0544

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 116



 Line  I  Addr  Code            Source

 6428+ 2			        endif
 6429+ 1			        top_ma  addc,r3,??0544,<0c4h>
 6430+ 2  14A7	7B 88		        mov     r3,#arg0
 6431+ 2  14A9	74 98		        mov     a,#arg1
 6432+ 2			        ifnb    <0c4h>
 6433+ 2			        set_cy  0c4h
 6434+ 3	N      0000	??0558  set     (0c4h and 1)
 6435+ 3	N      0000	        if      ??0558 eq 1
 6436+ 3			        setb    c
 6437+ 3			        else
 6438+ 3  14AB	C3		        clr     c
 6439+ 3			        endif
 6440+ 2			        endif
 6441+ 2  14AC	3B		        addc      a,r3
 6442+ 2			        ifnb    <0c4h>
 6443+ 2			        save_psw
 6444+ 3  14AD	85 D0 70	        mov     saved_psw,PSW
 6445+ 2			        endif
 6446+ 2  14B0	B4 20 0F	        cjne    a,#res,??0544
 6447+ 2			        ifnb    <0c4h>
 6448+ 2			        tst_psw <0c4h>,??0544
 6449+ 3  14B3	E5 70		        mov     a,saved_psw
 6450+ 3  14B5	54 C4		        anl     a,#0c4h
 6451+ 3  14B7	64 C4		        xrl     a,#0c4h
 6452+ 3  14B9	54 FE		        anl     a,#0feh
 6453+ 3  14BB	70 05		        jnz     ??0544
 6454+ 2			        endif
 6455+ 1
 6456+ 1			        eot     'b',??0544
 6457+ 2			        putc    #'b'
 6458+ 3  14BD			??0560:
 6459+ 3			        ;jnb     SCON.1,putc_loop
 6460+ 3			        ;clr     SCON.1
 6461+ 3  14BD	75 99 62	        mov     SBUF,#'b'
 6462+ 2  14C0	80 06		        sjmp    ??0559
 6463+ 2  14C2			??0544:  putc    #'?'
 6464+ 3  14C2			??0561:
 6465+ 3			        ;jnb     SCON.1,putc_loop
 6466+ 3			        ;clr     SCON.1
 6467+ 3  14C2	75 99 3F	        mov     SBUF,#'?'
 6468+ 2  14C5	75 6E 01	        mov     fail,#001h
 6469+ 2  14C8			??0559:
 6470+ 1
 6471+ 1			        top_ma  addc,r4,??0545,<0c4h>
 6472+ 2  14C8	7C 88		        mov     r4,#arg0
 6473+ 2  14CA	74 98		        mov     a,#arg1
 6474+ 2			        ifnb    <0c4h>
 6475+ 2			        set_cy  0c4h
 6476+ 3	N      0000	??0562  set     (0c4h and 1)
 6477+ 3	N      0000	        if      ??0562 eq 1
 6478+ 3			        setb    c
 6479+ 3			        else
 6480+ 3  14CC	C3		        clr     c
 6481+ 3			        endif
 6482+ 2			        endif
 6483+ 2  14CD	3C		        addc      a,r4

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 117



 Line  I  Addr  Code            Source

 6484+ 2			        ifnb    <0c4h>
 6485+ 2			        save_psw
 6486+ 3  14CE	85 D0 70	        mov     saved_psw,PSW
 6487+ 2			        endif
 6488+ 2  14D1	B4 20 25	        cjne    a,#res,??0545
 6489+ 2			        ifnb    <0c4h>
 6490+ 2			        tst_psw <0c4h>,??0545
 6491+ 3  14D4	E5 70		        mov     a,saved_psw
 6492+ 3  14D6	54 C4		        anl     a,#0c4h
 6493+ 3  14D8	64 C4		        xrl     a,#0c4h
 6494+ 3  14DA	54 FE		        anl     a,#0feh
 6495+ 3  14DC	70 1B		        jnz     ??0545
 6496+ 2			        endif
 6497+ 1			        top_ma  addc,r5,??0545,<0c4h>
 6498+ 2  14DE	7D 88		        mov     r5,#arg0
 6499+ 2  14E0	74 98		        mov     a,#arg1
 6500+ 2			        ifnb    <0c4h>
 6501+ 2			        set_cy  0c4h
 6502+ 3	N      0000	??0563  set     (0c4h and 1)
 6503+ 3	N      0000	        if      ??0563 eq 1
 6504+ 3			        setb    c
 6505+ 3			        else
 6506+ 3  14E2	C3		        clr     c
 6507+ 3			        endif
 6508+ 2			        endif
 6509+ 2  14E3	3D		        addc      a,r5
 6510+ 2			        ifnb    <0c4h>
 6511+ 2			        save_psw
 6512+ 3  14E4	85 D0 70	        mov     saved_psw,PSW
 6513+ 2			        endif
 6514+ 2  14E7	B4 20 0F	        cjne    a,#res,??0545
 6515+ 2			        ifnb    <0c4h>
 6516+ 2			        tst_psw <0c4h>,??0545
 6517+ 3  14EA	E5 70		        mov     a,saved_psw
 6518+ 3  14EC	54 C4		        anl     a,#0c4h
 6519+ 3  14EE	64 C4		        xrl     a,#0c4h
 6520+ 3  14F0	54 FE		        anl     a,#0feh
 6521+ 3  14F2	70 05		        jnz     ??0545
 6522+ 2			        endif
 6523+ 1
 6524+ 1			        eot     'c',??0545
 6525+ 2			        putc    #'c'
 6526+ 3  14F4			??0565:
 6527+ 3			        ;jnb     SCON.1,putc_loop
 6528+ 3			        ;clr     SCON.1
 6529+ 3  14F4	75 99 63	        mov     SBUF,#'c'
 6530+ 2  14F7	80 06		        sjmp    ??0564
 6531+ 2  14F9			??0545:  putc    #'?'
 6532+ 3  14F9			??0566:
 6533+ 3			        ;jnb     SCON.1,putc_loop
 6534+ 3			        ;clr     SCON.1
 6535+ 3  14F9	75 99 3F	        mov     SBUF,#'?'
 6536+ 2  14FC	75 6E 01	        mov     fail,#001h
 6537+ 2  14FF			??0564:
 6538+ 1
 6539+ 1			        top_ma  addc,r6,??0542,<0c4h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 118



 Line  I  Addr  Code            Source

 6540+ 2  14FF	7E 88		        mov     r6,#arg0
 6541+ 2  1501	74 98		        mov     a,#arg1
 6542+ 2			        ifnb    <0c4h>
 6543+ 2			        set_cy  0c4h
 6544+ 3	N      0000	??0567  set     (0c4h and 1)
 6545+ 3	N      0000	        if      ??0567 eq 1
 6546+ 3			        setb    c
 6547+ 3			        else
 6548+ 3  1503	C3		        clr     c
 6549+ 3			        endif
 6550+ 2			        endif
 6551+ 2  1504	3E		        addc      a,r6
 6552+ 2			        ifnb    <0c4h>
 6553+ 2			        save_psw
 6554+ 3  1505	85 D0 70	        mov     saved_psw,PSW
 6555+ 2			        endif
 6556+ 2  1508	B4 20 25	        cjne    a,#res,??0542
 6557+ 2			        ifnb    <0c4h>
 6558+ 2			        tst_psw <0c4h>,??0542
 6559+ 3  150B	E5 70		        mov     a,saved_psw
 6560+ 3  150D	54 C4		        anl     a,#0c4h
 6561+ 3  150F	64 C4		        xrl     a,#0c4h
 6562+ 3  1511	54 FE		        anl     a,#0feh
 6563+ 3  1513	70 1B		        jnz     ??0542
 6564+ 2			        endif
 6565+ 1			        top_ma  addc,r7,??0542,<0c4h>
 6566+ 2  1515	7F 88		        mov     r7,#arg0
 6567+ 2  1517	74 98		        mov     a,#arg1
 6568+ 2			        ifnb    <0c4h>
 6569+ 2			        set_cy  0c4h
 6570+ 3	N      0000	??0568  set     (0c4h and 1)
 6571+ 3	N      0000	        if      ??0568 eq 1
 6572+ 3			        setb    c
 6573+ 3			        else
 6574+ 3  1519	C3		        clr     c
 6575+ 3			        endif
 6576+ 2			        endif
 6577+ 2  151A	3F		        addc      a,r7
 6578+ 2			        ifnb    <0c4h>
 6579+ 2			        save_psw
 6580+ 3  151B	85 D0 70	        mov     saved_psw,PSW
 6581+ 2			        endif
 6582+ 2  151E	B4 20 0F	        cjne    a,#res,??0542
 6583+ 2			        ifnb    <0c4h>
 6584+ 2			        tst_psw <0c4h>,??0542
 6585+ 3  1521	E5 70		        mov     a,saved_psw
 6586+ 3  1523	54 C4		        anl     a,#0c4h
 6587+ 3  1525	64 C4		        xrl     a,#0c4h
 6588+ 3  1527	54 FE		        anl     a,#0feh
 6589+ 3  1529	70 05		        jnz     ??0542
 6590+ 2			        endif
 6591+ 1
 6592+ 1			        eot     'd',??0542
 6593+ 2			        putc    #'d'
 6594+ 3  152B			??0570:
 6595+ 3			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 119



 Line  I  Addr  Code            Source

 6596+ 3			        ;clr     SCON.1
 6597+ 3  152B	75 99 64	        mov     SBUF,#'d'
 6598+ 2  152E	80 06		        sjmp    ??0569
 6599+ 2  1530			??0542:  putc    #'?'
 6600+ 3  1530			??0571:
 6601+ 3			        ;jnb     SCON.1,putc_loop
 6602+ 3			        ;clr     SCON.1
 6603+ 3  1530	75 99 3F	        mov     SBUF,#'?'
 6604+ 2  1533	75 6E 01	        mov     fail,#001h
 6605+ 2  1536			??0569:
 6606+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 6607+ 1
 6608+ 1			        ; Optionally test immediate addressing modes.
 6609+ 1
 6610+ 1	N      FFFF	        if      (01h and 1) ne 0
 6611+ 1			        ; Test <op> A, #arg1...
 6612+ 1			        top_mb  addc,a,??0546,<0c4h>
 6613+ 2  1536	74 98		        mov     a,#arg1
 6614+ 2			        ifnb    <0c4h>
 6615+ 2			        set_cy  0c4h
 6616+ 3	N      0000	??0572  set     (0c4h and 1)
 6617+ 3	N      0000	        if      ??0572 eq 1
 6618+ 3			        setb    c
 6619+ 3			        else
 6620+ 3  1538	C3		        clr     c
 6621+ 3			        endif
 6622+ 2			        endif
 6623+ 2  1539	34 88		        addc      a,#arg0
 6624+ 2			        ifnb    <0c4h>
 6625+ 2			        save_psw
 6626+ 3  153B	85 D0 70	        mov     saved_psw,PSW
 6627+ 2			        endif
 6628+ 2  153E	F5 E0		        mov     ACC,a
 6629+ 2  1540	B4 20 0F	        cjne    a,#res,??0546
 6630+ 2			        ifnb    <0c4h>
 6631+ 2			        tst_psw <0c4h>,??0546
 6632+ 3  1543	E5 70		        mov     a,saved_psw
 6633+ 3  1545	54 C4		        anl     a,#0c4h
 6634+ 3  1547	64 C4		        xrl     a,#0c4h
 6635+ 3  1549	54 FE		        anl     a,#0feh
 6636+ 3  154B	70 05		        jnz     ??0546
 6637+ 2			        endif
 6638+ 1			        eot     'e',??0546
 6639+ 2			        putc    #'e'
 6640+ 3  154D			??0574:
 6641+ 3			        ;jnb     SCON.1,putc_loop
 6642+ 3			        ;clr     SCON.1
 6643+ 3  154D	75 99 65	        mov     SBUF,#'e'
 6644+ 2  1550	80 06		        sjmp    ??0573
 6645+ 2  1552			??0546:  putc    #'?'
 6646+ 3  1552			??0575:
 6647+ 3			        ;jnb     SCON.1,putc_loop
 6648+ 3			        ;clr     SCON.1
 6649+ 3  1552	75 99 3F	        mov     SBUF,#'?'
 6650+ 2  1555	75 6E 01	        mov     fail,#001h
 6651+ 2  1558			??0573:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 120



 Line  I  Addr  Code            Source

 6652+ 1			        endif
 6653+ 1
 6654+ 1	N      0000	        if      (01h and 2) ne 0
 6655+ 1			        ; ...and <op> dir, #arg1
 6656+ 1			        top_mb  addc,dir0,??0547,<0c4h>
 6657+ 1			        eot     'f',??0547
 6658+ 1			        endif
 6659+ 1
 6660+ 1			        ; Optionally test <op> dir, A
 6661+ 1	N      0000	        if      (01h and 4) ne 0
 6662+ 1			        top_mc  addc,??0548,<0c4h>
 6663+ 1			        eot     'g',??0548
 6664+ 1			        endif
 6665+ 1
 6666:				        putc    #'3'
 6667+ 1  1558			??0576:
 6668+ 1			        ;jnb     SCON.1,putc_loop
 6669+ 1			        ;clr     SCON.1
 6670+ 1  1558	75 99 33	        mov     SBUF,#'3'
 6671:				        tst_alu addc,088h,098h,021h,01h,0c5h     ;  CY  AC  OV (CY input)
 6672+ 1			        ; Put the argument and result data into variables for easier access
 6673+ 1	N      0088	        arg0    set 088h
 6674+ 1	N      0098	        arg1    set 098h
 6675+ 1	N      0021	        res     set 021h
 6676+ 1
 6677+ 1			        ; Test <op> A, dir
 6678+ 1			        top_ma  addc,dir0,??0578,<0c5h>
 6679+ 2  155B	75 60 88	        mov     dir0,#arg0
 6680+ 2  155E	74 98		        mov     a,#arg1
 6681+ 2			        ifnb    <0c5h>
 6682+ 2			        set_cy  0c5h
 6683+ 3	N      0001	??0584  set     (0c5h and 1)
 6684+ 3	N      FFFF	        if      ??0584 eq 1
 6685+ 3  1560	D3		        setb    c
 6686+ 3			        else
 6687+ 3			        clr     c
 6688+ 3			        endif
 6689+ 2			        endif
 6690+ 2  1561	35 60		        addc      a,dir0
 6691+ 2			        ifnb    <0c5h>
 6692+ 2			        save_psw
 6693+ 3  1563	85 D0 70	        mov     saved_psw,PSW
 6694+ 2			        endif
 6695+ 2  1566	B4 21 6B	        cjne    a,#res,??0578
 6696+ 2			        ifnb    <0c5h>
 6697+ 2			        tst_psw <0c5h>,??0578
 6698+ 3  1569	E5 70		        mov     a,saved_psw
 6699+ 3  156B	54 C4		        anl     a,#0c4h
 6700+ 3  156D	64 C5		        xrl     a,#0c5h
 6701+ 3  156F	54 FE		        anl     a,#0feh
 6702+ 3  1571	70 61		        jnz     ??0578
 6703+ 2			        endif
 6704+ 1			        ; Test <op> A, @R0
 6705+ 1  1573	78 60		        mov     r0,#dir0
 6706+ 1			        top_ma  addc,@r0,??0578,<0c5h>
 6707+ 2  1575	76 88		        mov     @r0,#arg0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 121



 Line  I  Addr  Code            Source

 6708+ 2  1577	74 98		        mov     a,#arg1
 6709+ 2			        ifnb    <0c5h>
 6710+ 2			        set_cy  0c5h
 6711+ 3	N      0001	??0585  set     (0c5h and 1)
 6712+ 3	N      FFFF	        if      ??0585 eq 1
 6713+ 3  1579	D3		        setb    c
 6714+ 3			        else
 6715+ 3			        clr     c
 6716+ 3			        endif
 6717+ 2			        endif
 6718+ 2  157A	36		        addc      a,@r0
 6719+ 2			        ifnb    <0c5h>
 6720+ 2			        save_psw
 6721+ 3  157B	85 D0 70	        mov     saved_psw,PSW
 6722+ 2			        endif
 6723+ 2  157E	B4 21 53	        cjne    a,#res,??0578
 6724+ 2			        ifnb    <0c5h>
 6725+ 2			        tst_psw <0c5h>,??0578
 6726+ 3  1581	E5 70		        mov     a,saved_psw
 6727+ 3  1583	54 C4		        anl     a,#0c4h
 6728+ 3  1585	64 C5		        xrl     a,#0c5h
 6729+ 3  1587	54 FE		        anl     a,#0feh
 6730+ 3  1589	70 49		        jnz     ??0578
 6731+ 2			        endif
 6732+ 1			        ; Test <op> A, @R1
 6733+ 1  158B	79 31		        mov     r1,#031h
 6734+ 1			        top_ma  addc,@r1,??0578,<0c5h>
 6735+ 2  158D	77 88		        mov     @r1,#arg0
 6736+ 2  158F	74 98		        mov     a,#arg1
 6737+ 2			        ifnb    <0c5h>
 6738+ 2			        set_cy  0c5h
 6739+ 3	N      0001	??0586  set     (0c5h and 1)
 6740+ 3	N      FFFF	        if      ??0586 eq 1
 6741+ 3  1591	D3		        setb    c
 6742+ 3			        else
 6743+ 3			        clr     c
 6744+ 3			        endif
 6745+ 2			        endif
 6746+ 2  1592	37		        addc      a,@r1
 6747+ 2			        ifnb    <0c5h>
 6748+ 2			        save_psw
 6749+ 3  1593	85 D0 70	        mov     saved_psw,PSW
 6750+ 2			        endif
 6751+ 2  1596	B4 21 3B	        cjne    a,#res,??0578
 6752+ 2			        ifnb    <0c5h>
 6753+ 2			        tst_psw <0c5h>,??0578
 6754+ 3  1599	E5 70		        mov     a,saved_psw
 6755+ 3  159B	54 C4		        anl     a,#0c4h
 6756+ 3  159D	64 C5		        xrl     a,#0c5h
 6757+ 3  159F	54 FE		        anl     a,#0feh
 6758+ 3  15A1	70 31		        jnz     ??0578
 6759+ 2			        endif
 6760+ 1
 6761+ 1			        ; Now test <op> A, Rn for n in 0..7
 6762+ 1			        top_ma  addc,r0,??0578,<0c5h>
 6763+ 2  15A3	78 88		        mov     r0,#arg0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 122



 Line  I  Addr  Code            Source

 6764+ 2  15A5	74 98		        mov     a,#arg1
 6765+ 2			        ifnb    <0c5h>
 6766+ 2			        set_cy  0c5h
 6767+ 3	N      0001	??0587  set     (0c5h and 1)
 6768+ 3	N      FFFF	        if      ??0587 eq 1
 6769+ 3  15A7	D3		        setb    c
 6770+ 3			        else
 6771+ 3			        clr     c
 6772+ 3			        endif
 6773+ 2			        endif
 6774+ 2  15A8	38		        addc      a,r0
 6775+ 2			        ifnb    <0c5h>
 6776+ 2			        save_psw
 6777+ 3  15A9	85 D0 70	        mov     saved_psw,PSW
 6778+ 2			        endif
 6779+ 2  15AC	B4 21 25	        cjne    a,#res,??0578
 6780+ 2			        ifnb    <0c5h>
 6781+ 2			        tst_psw <0c5h>,??0578
 6782+ 3  15AF	E5 70		        mov     a,saved_psw
 6783+ 3  15B1	54 C4		        anl     a,#0c4h
 6784+ 3  15B3	64 C5		        xrl     a,#0c5h
 6785+ 3  15B5	54 FE		        anl     a,#0feh
 6786+ 3  15B7	70 1B		        jnz     ??0578
 6787+ 2			        endif
 6788+ 1			        top_ma  addc,r1,??0578,<0c5h>
 6789+ 2  15B9	79 88		        mov     r1,#arg0
 6790+ 2  15BB	74 98		        mov     a,#arg1
 6791+ 2			        ifnb    <0c5h>
 6792+ 2			        set_cy  0c5h
 6793+ 3	N      0001	??0588  set     (0c5h and 1)
 6794+ 3	N      FFFF	        if      ??0588 eq 1
 6795+ 3  15BD	D3		        setb    c
 6796+ 3			        else
 6797+ 3			        clr     c
 6798+ 3			        endif
 6799+ 2			        endif
 6800+ 2  15BE	39		        addc      a,r1
 6801+ 2			        ifnb    <0c5h>
 6802+ 2			        save_psw
 6803+ 3  15BF	85 D0 70	        mov     saved_psw,PSW
 6804+ 2			        endif
 6805+ 2  15C2	B4 21 0F	        cjne    a,#res,??0578
 6806+ 2			        ifnb    <0c5h>
 6807+ 2			        tst_psw <0c5h>,??0578
 6808+ 3  15C5	E5 70		        mov     a,saved_psw
 6809+ 3  15C7	54 C4		        anl     a,#0c4h
 6810+ 3  15C9	64 C5		        xrl     a,#0c5h
 6811+ 3  15CB	54 FE		        anl     a,#0feh
 6812+ 3  15CD	70 05		        jnz     ??0578
 6813+ 2			        endif
 6814+ 1
 6815+ 1			        eot     'a',??0578
 6816+ 2			        putc    #'a'
 6817+ 3  15CF			??0590:
 6818+ 3			        ;jnb     SCON.1,putc_loop
 6819+ 3			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 123



 Line  I  Addr  Code            Source

 6820+ 3  15CF	75 99 61	        mov     SBUF,#'a'
 6821+ 2  15D2	80 06		        sjmp    ??0589
 6822+ 2  15D4			??0578:  putc    #'?'
 6823+ 3  15D4			??0591:
 6824+ 3			        ;jnb     SCON.1,putc_loop
 6825+ 3			        ;clr     SCON.1
 6826+ 3  15D4	75 99 3F	        mov     SBUF,#'?'
 6827+ 2  15D7	75 6E 01	        mov     fail,#001h
 6828+ 2  15DA			??0589:
 6829+ 1
 6830+ 1			        top_ma  addc,r2,??0579,<0c5h>
 6831+ 2  15DA	7A 88		        mov     r2,#arg0
 6832+ 2  15DC	74 98		        mov     a,#arg1
 6833+ 2			        ifnb    <0c5h>
 6834+ 2			        set_cy  0c5h
 6835+ 3	N      0001	??0592  set     (0c5h and 1)
 6836+ 3	N      FFFF	        if      ??0592 eq 1
 6837+ 3  15DE	D3		        setb    c
 6838+ 3			        else
 6839+ 3			        clr     c
 6840+ 3			        endif
 6841+ 2			        endif
 6842+ 2  15DF	3A		        addc      a,r2
 6843+ 2			        ifnb    <0c5h>
 6844+ 2			        save_psw
 6845+ 3  15E0	85 D0 70	        mov     saved_psw,PSW
 6846+ 2			        endif
 6847+ 2  15E3	B4 21 25	        cjne    a,#res,??0579
 6848+ 2			        ifnb    <0c5h>
 6849+ 2			        tst_psw <0c5h>,??0579
 6850+ 3  15E6	E5 70		        mov     a,saved_psw
 6851+ 3  15E8	54 C4		        anl     a,#0c4h
 6852+ 3  15EA	64 C5		        xrl     a,#0c5h
 6853+ 3  15EC	54 FE		        anl     a,#0feh
 6854+ 3  15EE	70 1B		        jnz     ??0579
 6855+ 2			        endif
 6856+ 1			        top_ma  addc,r3,??0579,<0c5h>
 6857+ 2  15F0	7B 88		        mov     r3,#arg0
 6858+ 2  15F2	74 98		        mov     a,#arg1
 6859+ 2			        ifnb    <0c5h>
 6860+ 2			        set_cy  0c5h
 6861+ 3	N      0001	??0593  set     (0c5h and 1)
 6862+ 3	N      FFFF	        if      ??0593 eq 1
 6863+ 3  15F4	D3		        setb    c
 6864+ 3			        else
 6865+ 3			        clr     c
 6866+ 3			        endif
 6867+ 2			        endif
 6868+ 2  15F5	3B		        addc      a,r3
 6869+ 2			        ifnb    <0c5h>
 6870+ 2			        save_psw
 6871+ 3  15F6	85 D0 70	        mov     saved_psw,PSW
 6872+ 2			        endif
 6873+ 2  15F9	B4 21 0F	        cjne    a,#res,??0579
 6874+ 2			        ifnb    <0c5h>
 6875+ 2			        tst_psw <0c5h>,??0579

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 124



 Line  I  Addr  Code            Source

 6876+ 3  15FC	E5 70		        mov     a,saved_psw
 6877+ 3  15FE	54 C4		        anl     a,#0c4h
 6878+ 3  1600	64 C5		        xrl     a,#0c5h
 6879+ 3  1602	54 FE		        anl     a,#0feh
 6880+ 3  1604	70 05		        jnz     ??0579
 6881+ 2			        endif
 6882+ 1
 6883+ 1			        eot     'b',??0579
 6884+ 2			        putc    #'b'
 6885+ 3  1606			??0595:
 6886+ 3			        ;jnb     SCON.1,putc_loop
 6887+ 3			        ;clr     SCON.1
 6888+ 3  1606	75 99 62	        mov     SBUF,#'b'
 6889+ 2  1609	80 06		        sjmp    ??0594
 6890+ 2  160B			??0579:  putc    #'?'
 6891+ 3  160B			??0596:
 6892+ 3			        ;jnb     SCON.1,putc_loop
 6893+ 3			        ;clr     SCON.1
 6894+ 3  160B	75 99 3F	        mov     SBUF,#'?'
 6895+ 2  160E	75 6E 01	        mov     fail,#001h
 6896+ 2  1611			??0594:
 6897+ 1
 6898+ 1			        top_ma  addc,r4,??0580,<0c5h>
 6899+ 2  1611	7C 88		        mov     r4,#arg0
 6900+ 2  1613	74 98		        mov     a,#arg1
 6901+ 2			        ifnb    <0c5h>
 6902+ 2			        set_cy  0c5h
 6903+ 3	N      0001	??0597  set     (0c5h and 1)
 6904+ 3	N      FFFF	        if      ??0597 eq 1
 6905+ 3  1615	D3		        setb    c
 6906+ 3			        else
 6907+ 3			        clr     c
 6908+ 3			        endif
 6909+ 2			        endif
 6910+ 2  1616	3C		        addc      a,r4
 6911+ 2			        ifnb    <0c5h>
 6912+ 2			        save_psw
 6913+ 3  1617	85 D0 70	        mov     saved_psw,PSW
 6914+ 2			        endif
 6915+ 2  161A	B4 21 25	        cjne    a,#res,??0580
 6916+ 2			        ifnb    <0c5h>
 6917+ 2			        tst_psw <0c5h>,??0580
 6918+ 3  161D	E5 70		        mov     a,saved_psw
 6919+ 3  161F	54 C4		        anl     a,#0c4h
 6920+ 3  1621	64 C5		        xrl     a,#0c5h
 6921+ 3  1623	54 FE		        anl     a,#0feh
 6922+ 3  1625	70 1B		        jnz     ??0580
 6923+ 2			        endif
 6924+ 1			        top_ma  addc,r5,??0580,<0c5h>
 6925+ 2  1627	7D 88		        mov     r5,#arg0
 6926+ 2  1629	74 98		        mov     a,#arg1
 6927+ 2			        ifnb    <0c5h>
 6928+ 2			        set_cy  0c5h
 6929+ 3	N      0001	??0598  set     (0c5h and 1)
 6930+ 3	N      FFFF	        if      ??0598 eq 1
 6931+ 3  162B	D3		        setb    c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 125



 Line  I  Addr  Code            Source

 6932+ 3			        else
 6933+ 3			        clr     c
 6934+ 3			        endif
 6935+ 2			        endif
 6936+ 2  162C	3D		        addc      a,r5
 6937+ 2			        ifnb    <0c5h>
 6938+ 2			        save_psw
 6939+ 3  162D	85 D0 70	        mov     saved_psw,PSW
 6940+ 2			        endif
 6941+ 2  1630	B4 21 0F	        cjne    a,#res,??0580
 6942+ 2			        ifnb    <0c5h>
 6943+ 2			        tst_psw <0c5h>,??0580
 6944+ 3  1633	E5 70		        mov     a,saved_psw
 6945+ 3  1635	54 C4		        anl     a,#0c4h
 6946+ 3  1637	64 C5		        xrl     a,#0c5h
 6947+ 3  1639	54 FE		        anl     a,#0feh
 6948+ 3  163B	70 05		        jnz     ??0580
 6949+ 2			        endif
 6950+ 1
 6951+ 1			        eot     'c',??0580
 6952+ 2			        putc    #'c'
 6953+ 3  163D			??0600:
 6954+ 3			        ;jnb     SCON.1,putc_loop
 6955+ 3			        ;clr     SCON.1
 6956+ 3  163D	75 99 63	        mov     SBUF,#'c'
 6957+ 2  1640	80 06		        sjmp    ??0599
 6958+ 2  1642			??0580:  putc    #'?'
 6959+ 3  1642			??0601:
 6960+ 3			        ;jnb     SCON.1,putc_loop
 6961+ 3			        ;clr     SCON.1
 6962+ 3  1642	75 99 3F	        mov     SBUF,#'?'
 6963+ 2  1645	75 6E 01	        mov     fail,#001h
 6964+ 2  1648			??0599:
 6965+ 1
 6966+ 1			        top_ma  addc,r6,??0577,<0c5h>
 6967+ 2  1648	7E 88		        mov     r6,#arg0
 6968+ 2  164A	74 98		        mov     a,#arg1
 6969+ 2			        ifnb    <0c5h>
 6970+ 2			        set_cy  0c5h
 6971+ 3	N      0001	??0602  set     (0c5h and 1)
 6972+ 3	N      FFFF	        if      ??0602 eq 1
 6973+ 3  164C	D3		        setb    c
 6974+ 3			        else
 6975+ 3			        clr     c
 6976+ 3			        endif
 6977+ 2			        endif
 6978+ 2  164D	3E		        addc      a,r6
 6979+ 2			        ifnb    <0c5h>
 6980+ 2			        save_psw
 6981+ 3  164E	85 D0 70	        mov     saved_psw,PSW
 6982+ 2			        endif
 6983+ 2  1651	B4 21 25	        cjne    a,#res,??0577
 6984+ 2			        ifnb    <0c5h>
 6985+ 2			        tst_psw <0c5h>,??0577
 6986+ 3  1654	E5 70		        mov     a,saved_psw
 6987+ 3  1656	54 C4		        anl     a,#0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 126



 Line  I  Addr  Code            Source

 6988+ 3  1658	64 C5		        xrl     a,#0c5h
 6989+ 3  165A	54 FE		        anl     a,#0feh
 6990+ 3  165C	70 1B		        jnz     ??0577
 6991+ 2			        endif
 6992+ 1			        top_ma  addc,r7,??0577,<0c5h>
 6993+ 2  165E	7F 88		        mov     r7,#arg0
 6994+ 2  1660	74 98		        mov     a,#arg1
 6995+ 2			        ifnb    <0c5h>
 6996+ 2			        set_cy  0c5h
 6997+ 3	N      0001	??0603  set     (0c5h and 1)
 6998+ 3	N      FFFF	        if      ??0603 eq 1
 6999+ 3  1662	D3		        setb    c
 7000+ 3			        else
 7001+ 3			        clr     c
 7002+ 3			        endif
 7003+ 2			        endif
 7004+ 2  1663	3F		        addc      a,r7
 7005+ 2			        ifnb    <0c5h>
 7006+ 2			        save_psw
 7007+ 3  1664	85 D0 70	        mov     saved_psw,PSW
 7008+ 2			        endif
 7009+ 2  1667	B4 21 0F	        cjne    a,#res,??0577
 7010+ 2			        ifnb    <0c5h>
 7011+ 2			        tst_psw <0c5h>,??0577
 7012+ 3  166A	E5 70		        mov     a,saved_psw
 7013+ 3  166C	54 C4		        anl     a,#0c4h
 7014+ 3  166E	64 C5		        xrl     a,#0c5h
 7015+ 3  1670	54 FE		        anl     a,#0feh
 7016+ 3  1672	70 05		        jnz     ??0577
 7017+ 2			        endif
 7018+ 1
 7019+ 1			        eot     'd',??0577
 7020+ 2			        putc    #'d'
 7021+ 3  1674			??0605:
 7022+ 3			        ;jnb     SCON.1,putc_loop
 7023+ 3			        ;clr     SCON.1
 7024+ 3  1674	75 99 64	        mov     SBUF,#'d'
 7025+ 2  1677	80 06		        sjmp    ??0604
 7026+ 2  1679			??0577:  putc    #'?'
 7027+ 3  1679			??0606:
 7028+ 3			        ;jnb     SCON.1,putc_loop
 7029+ 3			        ;clr     SCON.1
 7030+ 3  1679	75 99 3F	        mov     SBUF,#'?'
 7031+ 2  167C	75 6E 01	        mov     fail,#001h
 7032+ 2  167F			??0604:
 7033+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 7034+ 1
 7035+ 1			        ; Optionally test immediate addressing modes.
 7036+ 1
 7037+ 1	N      FFFF	        if      (01h and 1) ne 0
 7038+ 1			        ; Test <op> A, #arg1...
 7039+ 1			        top_mb  addc,a,??0581,<0c5h>
 7040+ 2  167F	74 98		        mov     a,#arg1
 7041+ 2			        ifnb    <0c5h>
 7042+ 2			        set_cy  0c5h
 7043+ 3	N      0001	??0607  set     (0c5h and 1)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 127



 Line  I  Addr  Code            Source

 7044+ 3	N      FFFF	        if      ??0607 eq 1
 7045+ 3  1681	D3		        setb    c
 7046+ 3			        else
 7047+ 3			        clr     c
 7048+ 3			        endif
 7049+ 2			        endif
 7050+ 2  1682	34 88		        addc      a,#arg0
 7051+ 2			        ifnb    <0c5h>
 7052+ 2			        save_psw
 7053+ 3  1684	85 D0 70	        mov     saved_psw,PSW
 7054+ 2			        endif
 7055+ 2  1687	F5 E0		        mov     ACC,a
 7056+ 2  1689	B4 21 0F	        cjne    a,#res,??0581
 7057+ 2			        ifnb    <0c5h>
 7058+ 2			        tst_psw <0c5h>,??0581
 7059+ 3  168C	E5 70		        mov     a,saved_psw
 7060+ 3  168E	54 C4		        anl     a,#0c4h
 7061+ 3  1690	64 C5		        xrl     a,#0c5h
 7062+ 3  1692	54 FE		        anl     a,#0feh
 7063+ 3  1694	70 05		        jnz     ??0581
 7064+ 2			        endif
 7065+ 1			        eot     'e',??0581
 7066+ 2			        putc    #'e'
 7067+ 3  1696			??0609:
 7068+ 3			        ;jnb     SCON.1,putc_loop
 7069+ 3			        ;clr     SCON.1
 7070+ 3  1696	75 99 65	        mov     SBUF,#'e'
 7071+ 2  1699	80 06		        sjmp    ??0608
 7072+ 2  169B			??0581:  putc    #'?'
 7073+ 3  169B			??0610:
 7074+ 3			        ;jnb     SCON.1,putc_loop
 7075+ 3			        ;clr     SCON.1
 7076+ 3  169B	75 99 3F	        mov     SBUF,#'?'
 7077+ 2  169E	75 6E 01	        mov     fail,#001h
 7078+ 2  16A1			??0608:
 7079+ 1			        endif
 7080+ 1
 7081+ 1	N      0000	        if      (01h and 2) ne 0
 7082+ 1			        ; ...and <op> dir, #arg1
 7083+ 1			        top_mb  addc,dir0,??0582,<0c5h>
 7084+ 1			        eot     'f',??0582
 7085+ 1			        endif
 7086+ 1
 7087+ 1			        ; Optionally test <op> dir, A
 7088+ 1	N      0000	        if      (01h and 4) ne 0
 7089+ 1			        top_mc  addc,??0583,<0c5h>
 7090+ 1			        eot     'g',??0583
 7091+ 1			        endif
 7092+ 1
 7093:				        putc    #'4'
 7094+ 1  16A1			??0611:
 7095+ 1			        ;jnb     SCON.1,putc_loop
 7096+ 1			        ;clr     SCON.1
 7097+ 1  16A1	75 99 34	        mov     SBUF,#'4'
 7098:				        tst_alu addc,043h,0fbh,03fh,01h,081h     ;  CY /AC /OV (CY input)
 7099+ 1			        ; Put the argument and result data into variables for easier access

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 128



 Line  I  Addr  Code            Source

 7100+ 1	N      0043	        arg0    set 043h
 7101+ 1	N      00FB	        arg1    set 0fbh
 7102+ 1	N      003F	        res     set 03fh
 7103+ 1
 7104+ 1			        ; Test <op> A, dir
 7105+ 1			        top_ma  addc,dir0,??0613,<081h>
 7106+ 2  16A4	75 60 43	        mov     dir0,#arg0
 7107+ 2  16A7	74 FB		        mov     a,#arg1
 7108+ 2			        ifnb    <081h>
 7109+ 2			        set_cy  081h
 7110+ 3	N      0001	??0619  set     (081h and 1)
 7111+ 3	N      FFFF	        if      ??0619 eq 1
 7112+ 3  16A9	D3		        setb    c
 7113+ 3			        else
 7114+ 3			        clr     c
 7115+ 3			        endif
 7116+ 2			        endif
 7117+ 2  16AA	35 60		        addc      a,dir0
 7118+ 2			        ifnb    <081h>
 7119+ 2			        save_psw
 7120+ 3  16AC	85 D0 70	        mov     saved_psw,PSW
 7121+ 2			        endif
 7122+ 2  16AF	B4 3F 6B	        cjne    a,#res,??0613
 7123+ 2			        ifnb    <081h>
 7124+ 2			        tst_psw <081h>,??0613
 7125+ 3  16B2	E5 70		        mov     a,saved_psw
 7126+ 3  16B4	54 C4		        anl     a,#0c4h
 7127+ 3  16B6	64 81		        xrl     a,#081h
 7128+ 3  16B8	54 FE		        anl     a,#0feh
 7129+ 3  16BA	70 61		        jnz     ??0613
 7130+ 2			        endif
 7131+ 1			        ; Test <op> A, @R0
 7132+ 1  16BC	78 60		        mov     r0,#dir0
 7133+ 1			        top_ma  addc,@r0,??0613,<081h>
 7134+ 2  16BE	76 43		        mov     @r0,#arg0
 7135+ 2  16C0	74 FB		        mov     a,#arg1
 7136+ 2			        ifnb    <081h>
 7137+ 2			        set_cy  081h
 7138+ 3	N      0001	??0620  set     (081h and 1)
 7139+ 3	N      FFFF	        if      ??0620 eq 1
 7140+ 3  16C2	D3		        setb    c
 7141+ 3			        else
 7142+ 3			        clr     c
 7143+ 3			        endif
 7144+ 2			        endif
 7145+ 2  16C3	36		        addc      a,@r0
 7146+ 2			        ifnb    <081h>
 7147+ 2			        save_psw
 7148+ 3  16C4	85 D0 70	        mov     saved_psw,PSW
 7149+ 2			        endif
 7150+ 2  16C7	B4 3F 53	        cjne    a,#res,??0613
 7151+ 2			        ifnb    <081h>
 7152+ 2			        tst_psw <081h>,??0613
 7153+ 3  16CA	E5 70		        mov     a,saved_psw
 7154+ 3  16CC	54 C4		        anl     a,#0c4h
 7155+ 3  16CE	64 81		        xrl     a,#081h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 129



 Line  I  Addr  Code            Source

 7156+ 3  16D0	54 FE		        anl     a,#0feh
 7157+ 3  16D2	70 49		        jnz     ??0613
 7158+ 2			        endif
 7159+ 1			        ; Test <op> A, @R1
 7160+ 1  16D4	79 31		        mov     r1,#031h
 7161+ 1			        top_ma  addc,@r1,??0613,<081h>
 7162+ 2  16D6	77 43		        mov     @r1,#arg0
 7163+ 2  16D8	74 FB		        mov     a,#arg1
 7164+ 2			        ifnb    <081h>
 7165+ 2			        set_cy  081h
 7166+ 3	N      0001	??0621  set     (081h and 1)
 7167+ 3	N      FFFF	        if      ??0621 eq 1
 7168+ 3  16DA	D3		        setb    c
 7169+ 3			        else
 7170+ 3			        clr     c
 7171+ 3			        endif
 7172+ 2			        endif
 7173+ 2  16DB	37		        addc      a,@r1
 7174+ 2			        ifnb    <081h>
 7175+ 2			        save_psw
 7176+ 3  16DC	85 D0 70	        mov     saved_psw,PSW
 7177+ 2			        endif
 7178+ 2  16DF	B4 3F 3B	        cjne    a,#res,??0613
 7179+ 2			        ifnb    <081h>
 7180+ 2			        tst_psw <081h>,??0613
 7181+ 3  16E2	E5 70		        mov     a,saved_psw
 7182+ 3  16E4	54 C4		        anl     a,#0c4h
 7183+ 3  16E6	64 81		        xrl     a,#081h
 7184+ 3  16E8	54 FE		        anl     a,#0feh
 7185+ 3  16EA	70 31		        jnz     ??0613
 7186+ 2			        endif
 7187+ 1
 7188+ 1			        ; Now test <op> A, Rn for n in 0..7
 7189+ 1			        top_ma  addc,r0,??0613,<081h>
 7190+ 2  16EC	78 43		        mov     r0,#arg0
 7191+ 2  16EE	74 FB		        mov     a,#arg1
 7192+ 2			        ifnb    <081h>
 7193+ 2			        set_cy  081h
 7194+ 3	N      0001	??0622  set     (081h and 1)
 7195+ 3	N      FFFF	        if      ??0622 eq 1
 7196+ 3  16F0	D3		        setb    c
 7197+ 3			        else
 7198+ 3			        clr     c
 7199+ 3			        endif
 7200+ 2			        endif
 7201+ 2  16F1	38		        addc      a,r0
 7202+ 2			        ifnb    <081h>
 7203+ 2			        save_psw
 7204+ 3  16F2	85 D0 70	        mov     saved_psw,PSW
 7205+ 2			        endif
 7206+ 2  16F5	B4 3F 25	        cjne    a,#res,??0613
 7207+ 2			        ifnb    <081h>
 7208+ 2			        tst_psw <081h>,??0613
 7209+ 3  16F8	E5 70		        mov     a,saved_psw
 7210+ 3  16FA	54 C4		        anl     a,#0c4h
 7211+ 3  16FC	64 81		        xrl     a,#081h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 130



 Line  I  Addr  Code            Source

 7212+ 3  16FE	54 FE		        anl     a,#0feh
 7213+ 3  1700	70 1B		        jnz     ??0613
 7214+ 2			        endif
 7215+ 1			        top_ma  addc,r1,??0613,<081h>
 7216+ 2  1702	79 43		        mov     r1,#arg0
 7217+ 2  1704	74 FB		        mov     a,#arg1
 7218+ 2			        ifnb    <081h>
 7219+ 2			        set_cy  081h
 7220+ 3	N      0001	??0623  set     (081h and 1)
 7221+ 3	N      FFFF	        if      ??0623 eq 1
 7222+ 3  1706	D3		        setb    c
 7223+ 3			        else
 7224+ 3			        clr     c
 7225+ 3			        endif
 7226+ 2			        endif
 7227+ 2  1707	39		        addc      a,r1
 7228+ 2			        ifnb    <081h>
 7229+ 2			        save_psw
 7230+ 3  1708	85 D0 70	        mov     saved_psw,PSW
 7231+ 2			        endif
 7232+ 2  170B	B4 3F 0F	        cjne    a,#res,??0613
 7233+ 2			        ifnb    <081h>
 7234+ 2			        tst_psw <081h>,??0613
 7235+ 3  170E	E5 70		        mov     a,saved_psw
 7236+ 3  1710	54 C4		        anl     a,#0c4h
 7237+ 3  1712	64 81		        xrl     a,#081h
 7238+ 3  1714	54 FE		        anl     a,#0feh
 7239+ 3  1716	70 05		        jnz     ??0613
 7240+ 2			        endif
 7241+ 1
 7242+ 1			        eot     'a',??0613
 7243+ 2			        putc    #'a'
 7244+ 3  1718			??0625:
 7245+ 3			        ;jnb     SCON.1,putc_loop
 7246+ 3			        ;clr     SCON.1
 7247+ 3  1718	75 99 61	        mov     SBUF,#'a'
 7248+ 2  171B	80 06		        sjmp    ??0624
 7249+ 2  171D			??0613:  putc    #'?'
 7250+ 3  171D			??0626:
 7251+ 3			        ;jnb     SCON.1,putc_loop
 7252+ 3			        ;clr     SCON.1
 7253+ 3  171D	75 99 3F	        mov     SBUF,#'?'
 7254+ 2  1720	75 6E 01	        mov     fail,#001h
 7255+ 2  1723			??0624:
 7256+ 1
 7257+ 1			        top_ma  addc,r2,??0614,<081h>
 7258+ 2  1723	7A 43		        mov     r2,#arg0
 7259+ 2  1725	74 FB		        mov     a,#arg1
 7260+ 2			        ifnb    <081h>
 7261+ 2			        set_cy  081h
 7262+ 3	N      0001	??0627  set     (081h and 1)
 7263+ 3	N      FFFF	        if      ??0627 eq 1
 7264+ 3  1727	D3		        setb    c
 7265+ 3			        else
 7266+ 3			        clr     c
 7267+ 3			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 131



 Line  I  Addr  Code            Source

 7268+ 2			        endif
 7269+ 2  1728	3A		        addc      a,r2
 7270+ 2			        ifnb    <081h>
 7271+ 2			        save_psw
 7272+ 3  1729	85 D0 70	        mov     saved_psw,PSW
 7273+ 2			        endif
 7274+ 2  172C	B4 3F 25	        cjne    a,#res,??0614
 7275+ 2			        ifnb    <081h>
 7276+ 2			        tst_psw <081h>,??0614
 7277+ 3  172F	E5 70		        mov     a,saved_psw
 7278+ 3  1731	54 C4		        anl     a,#0c4h
 7279+ 3  1733	64 81		        xrl     a,#081h
 7280+ 3  1735	54 FE		        anl     a,#0feh
 7281+ 3  1737	70 1B		        jnz     ??0614
 7282+ 2			        endif
 7283+ 1			        top_ma  addc,r3,??0614,<081h>
 7284+ 2  1739	7B 43		        mov     r3,#arg0
 7285+ 2  173B	74 FB		        mov     a,#arg1
 7286+ 2			        ifnb    <081h>
 7287+ 2			        set_cy  081h
 7288+ 3	N      0001	??0628  set     (081h and 1)
 7289+ 3	N      FFFF	        if      ??0628 eq 1
 7290+ 3  173D	D3		        setb    c
 7291+ 3			        else
 7292+ 3			        clr     c
 7293+ 3			        endif
 7294+ 2			        endif
 7295+ 2  173E	3B		        addc      a,r3
 7296+ 2			        ifnb    <081h>
 7297+ 2			        save_psw
 7298+ 3  173F	85 D0 70	        mov     saved_psw,PSW
 7299+ 2			        endif
 7300+ 2  1742	B4 3F 0F	        cjne    a,#res,??0614
 7301+ 2			        ifnb    <081h>
 7302+ 2			        tst_psw <081h>,??0614
 7303+ 3  1745	E5 70		        mov     a,saved_psw
 7304+ 3  1747	54 C4		        anl     a,#0c4h
 7305+ 3  1749	64 81		        xrl     a,#081h
 7306+ 3  174B	54 FE		        anl     a,#0feh
 7307+ 3  174D	70 05		        jnz     ??0614
 7308+ 2			        endif
 7309+ 1
 7310+ 1			        eot     'b',??0614
 7311+ 2			        putc    #'b'
 7312+ 3  174F			??0630:
 7313+ 3			        ;jnb     SCON.1,putc_loop
 7314+ 3			        ;clr     SCON.1
 7315+ 3  174F	75 99 62	        mov     SBUF,#'b'
 7316+ 2  1752	80 06		        sjmp    ??0629
 7317+ 2  1754			??0614:  putc    #'?'
 7318+ 3  1754			??0631:
 7319+ 3			        ;jnb     SCON.1,putc_loop
 7320+ 3			        ;clr     SCON.1
 7321+ 3  1754	75 99 3F	        mov     SBUF,#'?'
 7322+ 2  1757	75 6E 01	        mov     fail,#001h
 7323+ 2  175A			??0629:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 132



 Line  I  Addr  Code            Source

 7324+ 1
 7325+ 1			        top_ma  addc,r4,??0615,<081h>
 7326+ 2  175A	7C 43		        mov     r4,#arg0
 7327+ 2  175C	74 FB		        mov     a,#arg1
 7328+ 2			        ifnb    <081h>
 7329+ 2			        set_cy  081h
 7330+ 3	N      0001	??0632  set     (081h and 1)
 7331+ 3	N      FFFF	        if      ??0632 eq 1
 7332+ 3  175E	D3		        setb    c
 7333+ 3			        else
 7334+ 3			        clr     c
 7335+ 3			        endif
 7336+ 2			        endif
 7337+ 2  175F	3C		        addc      a,r4
 7338+ 2			        ifnb    <081h>
 7339+ 2			        save_psw
 7340+ 3  1760	85 D0 70	        mov     saved_psw,PSW
 7341+ 2			        endif
 7342+ 2  1763	B4 3F 25	        cjne    a,#res,??0615
 7343+ 2			        ifnb    <081h>
 7344+ 2			        tst_psw <081h>,??0615
 7345+ 3  1766	E5 70		        mov     a,saved_psw
 7346+ 3  1768	54 C4		        anl     a,#0c4h
 7347+ 3  176A	64 81		        xrl     a,#081h
 7348+ 3  176C	54 FE		        anl     a,#0feh
 7349+ 3  176E	70 1B		        jnz     ??0615
 7350+ 2			        endif
 7351+ 1			        top_ma  addc,r5,??0615,<081h>
 7352+ 2  1770	7D 43		        mov     r5,#arg0
 7353+ 2  1772	74 FB		        mov     a,#arg1
 7354+ 2			        ifnb    <081h>
 7355+ 2			        set_cy  081h
 7356+ 3	N      0001	??0633  set     (081h and 1)
 7357+ 3	N      FFFF	        if      ??0633 eq 1
 7358+ 3  1774	D3		        setb    c
 7359+ 3			        else
 7360+ 3			        clr     c
 7361+ 3			        endif
 7362+ 2			        endif
 7363+ 2  1775	3D		        addc      a,r5
 7364+ 2			        ifnb    <081h>
 7365+ 2			        save_psw
 7366+ 3  1776	85 D0 70	        mov     saved_psw,PSW
 7367+ 2			        endif
 7368+ 2  1779	B4 3F 0F	        cjne    a,#res,??0615
 7369+ 2			        ifnb    <081h>
 7370+ 2			        tst_psw <081h>,??0615
 7371+ 3  177C	E5 70		        mov     a,saved_psw
 7372+ 3  177E	54 C4		        anl     a,#0c4h
 7373+ 3  1780	64 81		        xrl     a,#081h
 7374+ 3  1782	54 FE		        anl     a,#0feh
 7375+ 3  1784	70 05		        jnz     ??0615
 7376+ 2			        endif
 7377+ 1
 7378+ 1			        eot     'c',??0615
 7379+ 2			        putc    #'c'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 133



 Line  I  Addr  Code            Source

 7380+ 3  1786			??0635:
 7381+ 3			        ;jnb     SCON.1,putc_loop
 7382+ 3			        ;clr     SCON.1
 7383+ 3  1786	75 99 63	        mov     SBUF,#'c'
 7384+ 2  1789	80 06		        sjmp    ??0634
 7385+ 2  178B			??0615:  putc    #'?'
 7386+ 3  178B			??0636:
 7387+ 3			        ;jnb     SCON.1,putc_loop
 7388+ 3			        ;clr     SCON.1
 7389+ 3  178B	75 99 3F	        mov     SBUF,#'?'
 7390+ 2  178E	75 6E 01	        mov     fail,#001h
 7391+ 2  1791			??0634:
 7392+ 1
 7393+ 1			        top_ma  addc,r6,??0612,<081h>
 7394+ 2  1791	7E 43		        mov     r6,#arg0
 7395+ 2  1793	74 FB		        mov     a,#arg1
 7396+ 2			        ifnb    <081h>
 7397+ 2			        set_cy  081h
 7398+ 3	N      0001	??0637  set     (081h and 1)
 7399+ 3	N      FFFF	        if      ??0637 eq 1
 7400+ 3  1795	D3		        setb    c
 7401+ 3			        else
 7402+ 3			        clr     c
 7403+ 3			        endif
 7404+ 2			        endif
 7405+ 2  1796	3E		        addc      a,r6
 7406+ 2			        ifnb    <081h>
 7407+ 2			        save_psw
 7408+ 3  1797	85 D0 70	        mov     saved_psw,PSW
 7409+ 2			        endif
 7410+ 2  179A	B4 3F 25	        cjne    a,#res,??0612
 7411+ 2			        ifnb    <081h>
 7412+ 2			        tst_psw <081h>,??0612
 7413+ 3  179D	E5 70		        mov     a,saved_psw
 7414+ 3  179F	54 C4		        anl     a,#0c4h
 7415+ 3  17A1	64 81		        xrl     a,#081h
 7416+ 3  17A3	54 FE		        anl     a,#0feh
 7417+ 3  17A5	70 1B		        jnz     ??0612
 7418+ 2			        endif
 7419+ 1			        top_ma  addc,r7,??0612,<081h>
 7420+ 2  17A7	7F 43		        mov     r7,#arg0
 7421+ 2  17A9	74 FB		        mov     a,#arg1
 7422+ 2			        ifnb    <081h>
 7423+ 2			        set_cy  081h
 7424+ 3	N      0001	??0638  set     (081h and 1)
 7425+ 3	N      FFFF	        if      ??0638 eq 1
 7426+ 3  17AB	D3		        setb    c
 7427+ 3			        else
 7428+ 3			        clr     c
 7429+ 3			        endif
 7430+ 2			        endif
 7431+ 2  17AC	3F		        addc      a,r7
 7432+ 2			        ifnb    <081h>
 7433+ 2			        save_psw
 7434+ 3  17AD	85 D0 70	        mov     saved_psw,PSW
 7435+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 134



 Line  I  Addr  Code            Source

 7436+ 2  17B0	B4 3F 0F	        cjne    a,#res,??0612
 7437+ 2			        ifnb    <081h>
 7438+ 2			        tst_psw <081h>,??0612
 7439+ 3  17B3	E5 70		        mov     a,saved_psw
 7440+ 3  17B5	54 C4		        anl     a,#0c4h
 7441+ 3  17B7	64 81		        xrl     a,#081h
 7442+ 3  17B9	54 FE		        anl     a,#0feh
 7443+ 3  17BB	70 05		        jnz     ??0612
 7444+ 2			        endif
 7445+ 1
 7446+ 1			        eot     'd',??0612
 7447+ 2			        putc    #'d'
 7448+ 3  17BD			??0640:
 7449+ 3			        ;jnb     SCON.1,putc_loop
 7450+ 3			        ;clr     SCON.1
 7451+ 3  17BD	75 99 64	        mov     SBUF,#'d'
 7452+ 2  17C0	80 06		        sjmp    ??0639
 7453+ 2  17C2			??0612:  putc    #'?'
 7454+ 3  17C2			??0641:
 7455+ 3			        ;jnb     SCON.1,putc_loop
 7456+ 3			        ;clr     SCON.1
 7457+ 3  17C2	75 99 3F	        mov     SBUF,#'?'
 7458+ 2  17C5	75 6E 01	        mov     fail,#001h
 7459+ 2  17C8			??0639:
 7460+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 7461+ 1
 7462+ 1			        ; Optionally test immediate addressing modes.
 7463+ 1
 7464+ 1	N      FFFF	        if      (01h and 1) ne 0
 7465+ 1			        ; Test <op> A, #arg1...
 7466+ 1			        top_mb  addc,a,??0616,<081h>
 7467+ 2  17C8	74 FB		        mov     a,#arg1
 7468+ 2			        ifnb    <081h>
 7469+ 2			        set_cy  081h
 7470+ 3	N      0001	??0642  set     (081h and 1)
 7471+ 3	N      FFFF	        if      ??0642 eq 1
 7472+ 3  17CA	D3		        setb    c
 7473+ 3			        else
 7474+ 3			        clr     c
 7475+ 3			        endif
 7476+ 2			        endif
 7477+ 2  17CB	34 43		        addc      a,#arg0
 7478+ 2			        ifnb    <081h>
 7479+ 2			        save_psw
 7480+ 3  17CD	85 D0 70	        mov     saved_psw,PSW
 7481+ 2			        endif
 7482+ 2  17D0	F5 E0		        mov     ACC,a
 7483+ 2  17D2	B4 3F 0F	        cjne    a,#res,??0616
 7484+ 2			        ifnb    <081h>
 7485+ 2			        tst_psw <081h>,??0616
 7486+ 3  17D5	E5 70		        mov     a,saved_psw
 7487+ 3  17D7	54 C4		        anl     a,#0c4h
 7488+ 3  17D9	64 81		        xrl     a,#081h
 7489+ 3  17DB	54 FE		        anl     a,#0feh
 7490+ 3  17DD	70 05		        jnz     ??0616
 7491+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 135



 Line  I  Addr  Code            Source

 7492+ 1			        eot     'e',??0616
 7493+ 2			        putc    #'e'
 7494+ 3  17DF			??0644:
 7495+ 3			        ;jnb     SCON.1,putc_loop
 7496+ 3			        ;clr     SCON.1
 7497+ 3  17DF	75 99 65	        mov     SBUF,#'e'
 7498+ 2  17E2	80 06		        sjmp    ??0643
 7499+ 2  17E4			??0616:  putc    #'?'
 7500+ 3  17E4			??0645:
 7501+ 3			        ;jnb     SCON.1,putc_loop
 7502+ 3			        ;clr     SCON.1
 7503+ 3  17E4	75 99 3F	        mov     SBUF,#'?'
 7504+ 2  17E7	75 6E 01	        mov     fail,#001h
 7505+ 2  17EA			??0643:
 7506+ 1			        endif
 7507+ 1
 7508+ 1	N      0000	        if      (01h and 2) ne 0
 7509+ 1			        ; ...and <op> dir, #arg1
 7510+ 1			        top_mb  addc,dir0,??0617,<081h>
 7511+ 1			        eot     'f',??0617
 7512+ 1			        endif
 7513+ 1
 7514+ 1			        ; Optionally test <op> dir, A
 7515+ 1	N      0000	        if      (01h and 4) ne 0
 7516+ 1			        top_mc  addc,??0618,<081h>
 7517+ 1			        eot     'g',??0618
 7518+ 1			        endif
 7519+ 1
 7520:
 7521:
 7522:				        put_crlf                    ; end of test series
 7523+ 1			        putc    #13
 7524+ 2  17EA			??0646:
 7525+ 2			        ;jnb     SCON.1,putc_loop
 7526+ 2			        ;clr     SCON.1
 7527+ 2  17EA	75 99 0D	        mov     SBUF,#13
 7528+ 1			        putc    #10
 7529+ 2  17ED			??0647:
 7530+ 2			        ;jnb     SCON.1,putc_loop
 7531+ 2			        ;clr     SCON.1
 7532+ 2  17ED	75 99 0A	        mov     SBUF,#10
 7533:
 7534:
 7535:				        ;-- Test series N ------------------------------------------------------
 7536:				        ; SUBB
 7537:				        ; (See comments for 'ALU opcode block test')
 7538:				        ; Note the test runs 4 times for different values of operands
 7539:
 7540:				        putc    #'N'                ; start of test series
 7541+ 1  17F0			??0648:
 7542+ 1			        ;jnb     SCON.1,putc_loop
 7543+ 1			        ;clr     SCON.1
 7544+ 1  17F0	75 99 4E	        mov     SBUF,#'N'
 7545:
 7546:				        putc    #'0'
 7547+ 1  17F3			??0649:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 136



 Line  I  Addr  Code            Source

 7548+ 1			        ;jnb     SCON.1,putc_loop
 7549+ 1			        ;clr     SCON.1
 7550+ 1  17F3	75 99 30	        mov     SBUF,#'0'
 7551:				        tst_alu subb,070h,073h,003h,01h,000h     ; /CY /AC /OV
 7552+ 1			        ; Put the argument and result data into variables for easier access
 7553+ 1	N      0070	        arg0    set 070h
 7554+ 1	N      0073	        arg1    set 073h
 7555+ 1	N      0003	        res     set 003h
 7556+ 1
 7557+ 1			        ; Test <op> A, dir
 7558+ 1			        top_ma  subb,dir0,??0651,<000h>
 7559+ 2  17F6	75 60 70	        mov     dir0,#arg0
 7560+ 2  17F9	74 73		        mov     a,#arg1
 7561+ 2			        ifnb    <000h>
 7562+ 2			        set_cy  000h
 7563+ 3	N      0000	??0657  set     (000h and 1)
 7564+ 3	N      0000	        if      ??0657 eq 1
 7565+ 3			        setb    c
 7566+ 3			        else
 7567+ 3  17FB	C3		        clr     c
 7568+ 3			        endif
 7569+ 2			        endif
 7570+ 2  17FC	95 60		        subb      a,dir0
 7571+ 2			        ifnb    <000h>
 7572+ 2			        save_psw
 7573+ 3  17FE	85 D0 70	        mov     saved_psw,PSW
 7574+ 2			        endif
 7575+ 2  1801	B4 03 6B	        cjne    a,#res,??0651
 7576+ 2			        ifnb    <000h>
 7577+ 2			        tst_psw <000h>,??0651
 7578+ 3  1804	E5 70		        mov     a,saved_psw
 7579+ 3  1806	54 C4		        anl     a,#0c4h
 7580+ 3  1808	64 00		        xrl     a,#000h
 7581+ 3  180A	54 FE		        anl     a,#0feh
 7582+ 3  180C	70 61		        jnz     ??0651
 7583+ 2			        endif
 7584+ 1			        ; Test <op> A, @R0
 7585+ 1  180E	78 60		        mov     r0,#dir0
 7586+ 1			        top_ma  subb,@r0,??0651,<000h>
 7587+ 2  1810	76 70		        mov     @r0,#arg0
 7588+ 2  1812	74 73		        mov     a,#arg1
 7589+ 2			        ifnb    <000h>
 7590+ 2			        set_cy  000h
 7591+ 3	N      0000	??0658  set     (000h and 1)
 7592+ 3	N      0000	        if      ??0658 eq 1
 7593+ 3			        setb    c
 7594+ 3			        else
 7595+ 3  1814	C3		        clr     c
 7596+ 3			        endif
 7597+ 2			        endif
 7598+ 2  1815	96		        subb      a,@r0
 7599+ 2			        ifnb    <000h>
 7600+ 2			        save_psw
 7601+ 3  1816	85 D0 70	        mov     saved_psw,PSW
 7602+ 2			        endif
 7603+ 2  1819	B4 03 53	        cjne    a,#res,??0651

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 137



 Line  I  Addr  Code            Source

 7604+ 2			        ifnb    <000h>
 7605+ 2			        tst_psw <000h>,??0651
 7606+ 3  181C	E5 70		        mov     a,saved_psw
 7607+ 3  181E	54 C4		        anl     a,#0c4h
 7608+ 3  1820	64 00		        xrl     a,#000h
 7609+ 3  1822	54 FE		        anl     a,#0feh
 7610+ 3  1824	70 49		        jnz     ??0651
 7611+ 2			        endif
 7612+ 1			        ; Test <op> A, @R1
 7613+ 1  1826	79 31		        mov     r1,#031h
 7614+ 1			        top_ma  subb,@r1,??0651,<000h>
 7615+ 2  1828	77 70		        mov     @r1,#arg0
 7616+ 2  182A	74 73		        mov     a,#arg1
 7617+ 2			        ifnb    <000h>
 7618+ 2			        set_cy  000h
 7619+ 3	N      0000	??0659  set     (000h and 1)
 7620+ 3	N      0000	        if      ??0659 eq 1
 7621+ 3			        setb    c
 7622+ 3			        else
 7623+ 3  182C	C3		        clr     c
 7624+ 3			        endif
 7625+ 2			        endif
 7626+ 2  182D	97		        subb      a,@r1
 7627+ 2			        ifnb    <000h>
 7628+ 2			        save_psw
 7629+ 3  182E	85 D0 70	        mov     saved_psw,PSW
 7630+ 2			        endif
 7631+ 2  1831	B4 03 3B	        cjne    a,#res,??0651
 7632+ 2			        ifnb    <000h>
 7633+ 2			        tst_psw <000h>,??0651
 7634+ 3  1834	E5 70		        mov     a,saved_psw
 7635+ 3  1836	54 C4		        anl     a,#0c4h
 7636+ 3  1838	64 00		        xrl     a,#000h
 7637+ 3  183A	54 FE		        anl     a,#0feh
 7638+ 3  183C	70 31		        jnz     ??0651
 7639+ 2			        endif
 7640+ 1
 7641+ 1			        ; Now test <op> A, Rn for n in 0..7
 7642+ 1			        top_ma  subb,r0,??0651,<000h>
 7643+ 2  183E	78 70		        mov     r0,#arg0
 7644+ 2  1840	74 73		        mov     a,#arg1
 7645+ 2			        ifnb    <000h>
 7646+ 2			        set_cy  000h
 7647+ 3	N      0000	??0660  set     (000h and 1)
 7648+ 3	N      0000	        if      ??0660 eq 1
 7649+ 3			        setb    c
 7650+ 3			        else
 7651+ 3  1842	C3		        clr     c
 7652+ 3			        endif
 7653+ 2			        endif
 7654+ 2  1843	98		        subb      a,r0
 7655+ 2			        ifnb    <000h>
 7656+ 2			        save_psw
 7657+ 3  1844	85 D0 70	        mov     saved_psw,PSW
 7658+ 2			        endif
 7659+ 2  1847	B4 03 25	        cjne    a,#res,??0651

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 138



 Line  I  Addr  Code            Source

 7660+ 2			        ifnb    <000h>
 7661+ 2			        tst_psw <000h>,??0651
 7662+ 3  184A	E5 70		        mov     a,saved_psw
 7663+ 3  184C	54 C4		        anl     a,#0c4h
 7664+ 3  184E	64 00		        xrl     a,#000h
 7665+ 3  1850	54 FE		        anl     a,#0feh
 7666+ 3  1852	70 1B		        jnz     ??0651
 7667+ 2			        endif
 7668+ 1			        top_ma  subb,r1,??0651,<000h>
 7669+ 2  1854	79 70		        mov     r1,#arg0
 7670+ 2  1856	74 73		        mov     a,#arg1
 7671+ 2			        ifnb    <000h>
 7672+ 2			        set_cy  000h
 7673+ 3	N      0000	??0661  set     (000h and 1)
 7674+ 3	N      0000	        if      ??0661 eq 1
 7675+ 3			        setb    c
 7676+ 3			        else
 7677+ 3  1858	C3		        clr     c
 7678+ 3			        endif
 7679+ 2			        endif
 7680+ 2  1859	99		        subb      a,r1
 7681+ 2			        ifnb    <000h>
 7682+ 2			        save_psw
 7683+ 3  185A	85 D0 70	        mov     saved_psw,PSW
 7684+ 2			        endif
 7685+ 2  185D	B4 03 0F	        cjne    a,#res,??0651
 7686+ 2			        ifnb    <000h>
 7687+ 2			        tst_psw <000h>,??0651
 7688+ 3  1860	E5 70		        mov     a,saved_psw
 7689+ 3  1862	54 C4		        anl     a,#0c4h
 7690+ 3  1864	64 00		        xrl     a,#000h
 7691+ 3  1866	54 FE		        anl     a,#0feh
 7692+ 3  1868	70 05		        jnz     ??0651
 7693+ 2			        endif
 7694+ 1
 7695+ 1			        eot     'a',??0651
 7696+ 2			        putc    #'a'
 7697+ 3  186A			??0663:
 7698+ 3			        ;jnb     SCON.1,putc_loop
 7699+ 3			        ;clr     SCON.1
 7700+ 3  186A	75 99 61	        mov     SBUF,#'a'
 7701+ 2  186D	80 06		        sjmp    ??0662
 7702+ 2  186F			??0651:  putc    #'?'
 7703+ 3  186F			??0664:
 7704+ 3			        ;jnb     SCON.1,putc_loop
 7705+ 3			        ;clr     SCON.1
 7706+ 3  186F	75 99 3F	        mov     SBUF,#'?'
 7707+ 2  1872	75 6E 01	        mov     fail,#001h
 7708+ 2  1875			??0662:
 7709+ 1
 7710+ 1			        top_ma  subb,r2,??0652,<000h>
 7711+ 2  1875	7A 70		        mov     r2,#arg0
 7712+ 2  1877	74 73		        mov     a,#arg1
 7713+ 2			        ifnb    <000h>
 7714+ 2			        set_cy  000h
 7715+ 3	N      0000	??0665  set     (000h and 1)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 139



 Line  I  Addr  Code            Source

 7716+ 3	N      0000	        if      ??0665 eq 1
 7717+ 3			        setb    c
 7718+ 3			        else
 7719+ 3  1879	C3		        clr     c
 7720+ 3			        endif
 7721+ 2			        endif
 7722+ 2  187A	9A		        subb      a,r2
 7723+ 2			        ifnb    <000h>
 7724+ 2			        save_psw
 7725+ 3  187B	85 D0 70	        mov     saved_psw,PSW
 7726+ 2			        endif
 7727+ 2  187E	B4 03 25	        cjne    a,#res,??0652
 7728+ 2			        ifnb    <000h>
 7729+ 2			        tst_psw <000h>,??0652
 7730+ 3  1881	E5 70		        mov     a,saved_psw
 7731+ 3  1883	54 C4		        anl     a,#0c4h
 7732+ 3  1885	64 00		        xrl     a,#000h
 7733+ 3  1887	54 FE		        anl     a,#0feh
 7734+ 3  1889	70 1B		        jnz     ??0652
 7735+ 2			        endif
 7736+ 1			        top_ma  subb,r3,??0652,<000h>
 7737+ 2  188B	7B 70		        mov     r3,#arg0
 7738+ 2  188D	74 73		        mov     a,#arg1
 7739+ 2			        ifnb    <000h>
 7740+ 2			        set_cy  000h
 7741+ 3	N      0000	??0666  set     (000h and 1)
 7742+ 3	N      0000	        if      ??0666 eq 1
 7743+ 3			        setb    c
 7744+ 3			        else
 7745+ 3  188F	C3		        clr     c
 7746+ 3			        endif
 7747+ 2			        endif
 7748+ 2  1890	9B		        subb      a,r3
 7749+ 2			        ifnb    <000h>
 7750+ 2			        save_psw
 7751+ 3  1891	85 D0 70	        mov     saved_psw,PSW
 7752+ 2			        endif
 7753+ 2  1894	B4 03 0F	        cjne    a,#res,??0652
 7754+ 2			        ifnb    <000h>
 7755+ 2			        tst_psw <000h>,??0652
 7756+ 3  1897	E5 70		        mov     a,saved_psw
 7757+ 3  1899	54 C4		        anl     a,#0c4h
 7758+ 3  189B	64 00		        xrl     a,#000h
 7759+ 3  189D	54 FE		        anl     a,#0feh
 7760+ 3  189F	70 05		        jnz     ??0652
 7761+ 2			        endif
 7762+ 1
 7763+ 1			        eot     'b',??0652
 7764+ 2			        putc    #'b'
 7765+ 3  18A1			??0668:
 7766+ 3			        ;jnb     SCON.1,putc_loop
 7767+ 3			        ;clr     SCON.1
 7768+ 3  18A1	75 99 62	        mov     SBUF,#'b'
 7769+ 2  18A4	80 06		        sjmp    ??0667
 7770+ 2  18A6			??0652:  putc    #'?'
 7771+ 3  18A6			??0669:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 140



 Line  I  Addr  Code            Source

 7772+ 3			        ;jnb     SCON.1,putc_loop
 7773+ 3			        ;clr     SCON.1
 7774+ 3  18A6	75 99 3F	        mov     SBUF,#'?'
 7775+ 2  18A9	75 6E 01	        mov     fail,#001h
 7776+ 2  18AC			??0667:
 7777+ 1
 7778+ 1			        top_ma  subb,r4,??0653,<000h>
 7779+ 2  18AC	7C 70		        mov     r4,#arg0
 7780+ 2  18AE	74 73		        mov     a,#arg1
 7781+ 2			        ifnb    <000h>
 7782+ 2			        set_cy  000h
 7783+ 3	N      0000	??0670  set     (000h and 1)
 7784+ 3	N      0000	        if      ??0670 eq 1
 7785+ 3			        setb    c
 7786+ 3			        else
 7787+ 3  18B0	C3		        clr     c
 7788+ 3			        endif
 7789+ 2			        endif
 7790+ 2  18B1	9C		        subb      a,r4
 7791+ 2			        ifnb    <000h>
 7792+ 2			        save_psw
 7793+ 3  18B2	85 D0 70	        mov     saved_psw,PSW
 7794+ 2			        endif
 7795+ 2  18B5	B4 03 25	        cjne    a,#res,??0653
 7796+ 2			        ifnb    <000h>
 7797+ 2			        tst_psw <000h>,??0653
 7798+ 3  18B8	E5 70		        mov     a,saved_psw
 7799+ 3  18BA	54 C4		        anl     a,#0c4h
 7800+ 3  18BC	64 00		        xrl     a,#000h
 7801+ 3  18BE	54 FE		        anl     a,#0feh
 7802+ 3  18C0	70 1B		        jnz     ??0653
 7803+ 2			        endif
 7804+ 1			        top_ma  subb,r5,??0653,<000h>
 7805+ 2  18C2	7D 70		        mov     r5,#arg0
 7806+ 2  18C4	74 73		        mov     a,#arg1
 7807+ 2			        ifnb    <000h>
 7808+ 2			        set_cy  000h
 7809+ 3	N      0000	??0671  set     (000h and 1)
 7810+ 3	N      0000	        if      ??0671 eq 1
 7811+ 3			        setb    c
 7812+ 3			        else
 7813+ 3  18C6	C3		        clr     c
 7814+ 3			        endif
 7815+ 2			        endif
 7816+ 2  18C7	9D		        subb      a,r5
 7817+ 2			        ifnb    <000h>
 7818+ 2			        save_psw
 7819+ 3  18C8	85 D0 70	        mov     saved_psw,PSW
 7820+ 2			        endif
 7821+ 2  18CB	B4 03 0F	        cjne    a,#res,??0653
 7822+ 2			        ifnb    <000h>
 7823+ 2			        tst_psw <000h>,??0653
 7824+ 3  18CE	E5 70		        mov     a,saved_psw
 7825+ 3  18D0	54 C4		        anl     a,#0c4h
 7826+ 3  18D2	64 00		        xrl     a,#000h
 7827+ 3  18D4	54 FE		        anl     a,#0feh

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 141



 Line  I  Addr  Code            Source

 7828+ 3  18D6	70 05		        jnz     ??0653
 7829+ 2			        endif
 7830+ 1
 7831+ 1			        eot     'c',??0653
 7832+ 2			        putc    #'c'
 7833+ 3  18D8			??0673:
 7834+ 3			        ;jnb     SCON.1,putc_loop
 7835+ 3			        ;clr     SCON.1
 7836+ 3  18D8	75 99 63	        mov     SBUF,#'c'
 7837+ 2  18DB	80 06		        sjmp    ??0672
 7838+ 2  18DD			??0653:  putc    #'?'
 7839+ 3  18DD			??0674:
 7840+ 3			        ;jnb     SCON.1,putc_loop
 7841+ 3			        ;clr     SCON.1
 7842+ 3  18DD	75 99 3F	        mov     SBUF,#'?'
 7843+ 2  18E0	75 6E 01	        mov     fail,#001h
 7844+ 2  18E3			??0672:
 7845+ 1
 7846+ 1			        top_ma  subb,r6,??0650,<000h>
 7847+ 2  18E3	7E 70		        mov     r6,#arg0
 7848+ 2  18E5	74 73		        mov     a,#arg1
 7849+ 2			        ifnb    <000h>
 7850+ 2			        set_cy  000h
 7851+ 3	N      0000	??0675  set     (000h and 1)
 7852+ 3	N      0000	        if      ??0675 eq 1
 7853+ 3			        setb    c
 7854+ 3			        else
 7855+ 3  18E7	C3		        clr     c
 7856+ 3			        endif
 7857+ 2			        endif
 7858+ 2  18E8	9E		        subb      a,r6
 7859+ 2			        ifnb    <000h>
 7860+ 2			        save_psw
 7861+ 3  18E9	85 D0 70	        mov     saved_psw,PSW
 7862+ 2			        endif
 7863+ 2  18EC	B4 03 25	        cjne    a,#res,??0650
 7864+ 2			        ifnb    <000h>
 7865+ 2			        tst_psw <000h>,??0650
 7866+ 3  18EF	E5 70		        mov     a,saved_psw
 7867+ 3  18F1	54 C4		        anl     a,#0c4h
 7868+ 3  18F3	64 00		        xrl     a,#000h
 7869+ 3  18F5	54 FE		        anl     a,#0feh
 7870+ 3  18F7	70 1B		        jnz     ??0650
 7871+ 2			        endif
 7872+ 1			        top_ma  subb,r7,??0650,<000h>
 7873+ 2  18F9	7F 70		        mov     r7,#arg0
 7874+ 2  18FB	74 73		        mov     a,#arg1
 7875+ 2			        ifnb    <000h>
 7876+ 2			        set_cy  000h
 7877+ 3	N      0000	??0676  set     (000h and 1)
 7878+ 3	N      0000	        if      ??0676 eq 1
 7879+ 3			        setb    c
 7880+ 3			        else
 7881+ 3  18FD	C3		        clr     c
 7882+ 3			        endif
 7883+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 142



 Line  I  Addr  Code            Source

 7884+ 2  18FE	9F		        subb      a,r7
 7885+ 2			        ifnb    <000h>
 7886+ 2			        save_psw
 7887+ 3  18FF	85 D0 70	        mov     saved_psw,PSW
 7888+ 2			        endif
 7889+ 2  1902	B4 03 0F	        cjne    a,#res,??0650
 7890+ 2			        ifnb    <000h>
 7891+ 2			        tst_psw <000h>,??0650
 7892+ 3  1905	E5 70		        mov     a,saved_psw
 7893+ 3  1907	54 C4		        anl     a,#0c4h
 7894+ 3  1909	64 00		        xrl     a,#000h
 7895+ 3  190B	54 FE		        anl     a,#0feh
 7896+ 3  190D	70 05		        jnz     ??0650
 7897+ 2			        endif
 7898+ 1
 7899+ 1			        eot     'd',??0650
 7900+ 2			        putc    #'d'
 7901+ 3  190F			??0678:
 7902+ 3			        ;jnb     SCON.1,putc_loop
 7903+ 3			        ;clr     SCON.1
 7904+ 3  190F	75 99 64	        mov     SBUF,#'d'
 7905+ 2  1912	80 06		        sjmp    ??0677
 7906+ 2  1914			??0650:  putc    #'?'
 7907+ 3  1914			??0679:
 7908+ 3			        ;jnb     SCON.1,putc_loop
 7909+ 3			        ;clr     SCON.1
 7910+ 3  1914	75 99 3F	        mov     SBUF,#'?'
 7911+ 2  1917	75 6E 01	        mov     fail,#001h
 7912+ 2  191A			??0677:
 7913+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 7914+ 1
 7915+ 1			        ; Optionally test immediate addressing modes.
 7916+ 1
 7917+ 1	N      FFFF	        if      (01h and 1) ne 0
 7918+ 1			        ; Test <op> A, #arg1...
 7919+ 1			        top_mb  subb,a,??0654,<000h>
 7920+ 2  191A	74 73		        mov     a,#arg1
 7921+ 2			        ifnb    <000h>
 7922+ 2			        set_cy  000h
 7923+ 3	N      0000	??0680  set     (000h and 1)
 7924+ 3	N      0000	        if      ??0680 eq 1
 7925+ 3			        setb    c
 7926+ 3			        else
 7927+ 3  191C	C3		        clr     c
 7928+ 3			        endif
 7929+ 2			        endif
 7930+ 2  191D	94 70		        subb      a,#arg0
 7931+ 2			        ifnb    <000h>
 7932+ 2			        save_psw
 7933+ 3  191F	85 D0 70	        mov     saved_psw,PSW
 7934+ 2			        endif
 7935+ 2  1922	F5 E0		        mov     ACC,a
 7936+ 2  1924	B4 03 0F	        cjne    a,#res,??0654
 7937+ 2			        ifnb    <000h>
 7938+ 2			        tst_psw <000h>,??0654
 7939+ 3  1927	E5 70		        mov     a,saved_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 143



 Line  I  Addr  Code            Source

 7940+ 3  1929	54 C4		        anl     a,#0c4h
 7941+ 3  192B	64 00		        xrl     a,#000h
 7942+ 3  192D	54 FE		        anl     a,#0feh
 7943+ 3  192F	70 05		        jnz     ??0654
 7944+ 2			        endif
 7945+ 1			        eot     'e',??0654
 7946+ 2			        putc    #'e'
 7947+ 3  1931			??0682:
 7948+ 3			        ;jnb     SCON.1,putc_loop
 7949+ 3			        ;clr     SCON.1
 7950+ 3  1931	75 99 65	        mov     SBUF,#'e'
 7951+ 2  1934	80 06		        sjmp    ??0681
 7952+ 2  1936			??0654:  putc    #'?'
 7953+ 3  1936			??0683:
 7954+ 3			        ;jnb     SCON.1,putc_loop
 7955+ 3			        ;clr     SCON.1
 7956+ 3  1936	75 99 3F	        mov     SBUF,#'?'
 7957+ 2  1939	75 6E 01	        mov     fail,#001h
 7958+ 2  193C			??0681:
 7959+ 1			        endif
 7960+ 1
 7961+ 1	N      0000	        if      (01h and 2) ne 0
 7962+ 1			        ; ...and <op> dir, #arg1
 7963+ 1			        top_mb  subb,dir0,??0655,<000h>
 7964+ 1			        eot     'f',??0655
 7965+ 1			        endif
 7966+ 1
 7967+ 1			        ; Optionally test <op> dir, A
 7968+ 1	N      0000	        if      (01h and 4) ne 0
 7969+ 1			        top_mc  subb,??0656,<000h>
 7970+ 1			        eot     'g',??0656
 7971+ 1			        endif
 7972+ 1
 7973:				        putc    #'1'
 7974+ 1  193C			??0684:
 7975+ 1			        ;jnb     SCON.1,putc_loop
 7976+ 1			        ;clr     SCON.1
 7977+ 1  193C	75 99 31	        mov     SBUF,#'1'
 7978:				        tst_alu subb,070h,073h,002h,01h,001h     ; /CY /AC /OV (CY input)
 7979+ 1			        ; Put the argument and result data into variables for easier access
 7980+ 1	N      0070	        arg0    set 070h
 7981+ 1	N      0073	        arg1    set 073h
 7982+ 1	N      0002	        res     set 002h
 7983+ 1
 7984+ 1			        ; Test <op> A, dir
 7985+ 1			        top_ma  subb,dir0,??0686,<001h>
 7986+ 2  193F	75 60 70	        mov     dir0,#arg0
 7987+ 2  1942	74 73		        mov     a,#arg1
 7988+ 2			        ifnb    <001h>
 7989+ 2			        set_cy  001h
 7990+ 3	N      0001	??0692  set     (001h and 1)
 7991+ 3	N      FFFF	        if      ??0692 eq 1
 7992+ 3  1944	D3		        setb    c
 7993+ 3			        else
 7994+ 3			        clr     c
 7995+ 3			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 144



 Line  I  Addr  Code            Source

 7996+ 2			        endif
 7997+ 2  1945	95 60		        subb      a,dir0
 7998+ 2			        ifnb    <001h>
 7999+ 2			        save_psw
 8000+ 3  1947	85 D0 70	        mov     saved_psw,PSW
 8001+ 2			        endif
 8002+ 2  194A	B4 02 6B	        cjne    a,#res,??0686
 8003+ 2			        ifnb    <001h>
 8004+ 2			        tst_psw <001h>,??0686
 8005+ 3  194D	E5 70		        mov     a,saved_psw
 8006+ 3  194F	54 C4		        anl     a,#0c4h
 8007+ 3  1951	64 01		        xrl     a,#001h
 8008+ 3  1953	54 FE		        anl     a,#0feh
 8009+ 3  1955	70 61		        jnz     ??0686
 8010+ 2			        endif
 8011+ 1			        ; Test <op> A, @R0
 8012+ 1  1957	78 60		        mov     r0,#dir0
 8013+ 1			        top_ma  subb,@r0,??0686,<001h>
 8014+ 2  1959	76 70		        mov     @r0,#arg0
 8015+ 2  195B	74 73		        mov     a,#arg1
 8016+ 2			        ifnb    <001h>
 8017+ 2			        set_cy  001h
 8018+ 3	N      0001	??0693  set     (001h and 1)
 8019+ 3	N      FFFF	        if      ??0693 eq 1
 8020+ 3  195D	D3		        setb    c
 8021+ 3			        else
 8022+ 3			        clr     c
 8023+ 3			        endif
 8024+ 2			        endif
 8025+ 2  195E	96		        subb      a,@r0
 8026+ 2			        ifnb    <001h>
 8027+ 2			        save_psw
 8028+ 3  195F	85 D0 70	        mov     saved_psw,PSW
 8029+ 2			        endif
 8030+ 2  1962	B4 02 53	        cjne    a,#res,??0686
 8031+ 2			        ifnb    <001h>
 8032+ 2			        tst_psw <001h>,??0686
 8033+ 3  1965	E5 70		        mov     a,saved_psw
 8034+ 3  1967	54 C4		        anl     a,#0c4h
 8035+ 3  1969	64 01		        xrl     a,#001h
 8036+ 3  196B	54 FE		        anl     a,#0feh
 8037+ 3  196D	70 49		        jnz     ??0686
 8038+ 2			        endif
 8039+ 1			        ; Test <op> A, @R1
 8040+ 1  196F	79 31		        mov     r1,#031h
 8041+ 1			        top_ma  subb,@r1,??0686,<001h>
 8042+ 2  1971	77 70		        mov     @r1,#arg0
 8043+ 2  1973	74 73		        mov     a,#arg1
 8044+ 2			        ifnb    <001h>
 8045+ 2			        set_cy  001h
 8046+ 3	N      0001	??0694  set     (001h and 1)
 8047+ 3	N      FFFF	        if      ??0694 eq 1
 8048+ 3  1975	D3		        setb    c
 8049+ 3			        else
 8050+ 3			        clr     c
 8051+ 3			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 145



 Line  I  Addr  Code            Source

 8052+ 2			        endif
 8053+ 2  1976	97		        subb      a,@r1
 8054+ 2			        ifnb    <001h>
 8055+ 2			        save_psw
 8056+ 3  1977	85 D0 70	        mov     saved_psw,PSW
 8057+ 2			        endif
 8058+ 2  197A	B4 02 3B	        cjne    a,#res,??0686
 8059+ 2			        ifnb    <001h>
 8060+ 2			        tst_psw <001h>,??0686
 8061+ 3  197D	E5 70		        mov     a,saved_psw
 8062+ 3  197F	54 C4		        anl     a,#0c4h
 8063+ 3  1981	64 01		        xrl     a,#001h
 8064+ 3  1983	54 FE		        anl     a,#0feh
 8065+ 3  1985	70 31		        jnz     ??0686
 8066+ 2			        endif
 8067+ 1
 8068+ 1			        ; Now test <op> A, Rn for n in 0..7
 8069+ 1			        top_ma  subb,r0,??0686,<001h>
 8070+ 2  1987	78 70		        mov     r0,#arg0
 8071+ 2  1989	74 73		        mov     a,#arg1
 8072+ 2			        ifnb    <001h>
 8073+ 2			        set_cy  001h
 8074+ 3	N      0001	??0695  set     (001h and 1)
 8075+ 3	N      FFFF	        if      ??0695 eq 1
 8076+ 3  198B	D3		        setb    c
 8077+ 3			        else
 8078+ 3			        clr     c
 8079+ 3			        endif
 8080+ 2			        endif
 8081+ 2  198C	98		        subb      a,r0
 8082+ 2			        ifnb    <001h>
 8083+ 2			        save_psw
 8084+ 3  198D	85 D0 70	        mov     saved_psw,PSW
 8085+ 2			        endif
 8086+ 2  1990	B4 02 25	        cjne    a,#res,??0686
 8087+ 2			        ifnb    <001h>
 8088+ 2			        tst_psw <001h>,??0686
 8089+ 3  1993	E5 70		        mov     a,saved_psw
 8090+ 3  1995	54 C4		        anl     a,#0c4h
 8091+ 3  1997	64 01		        xrl     a,#001h
 8092+ 3  1999	54 FE		        anl     a,#0feh
 8093+ 3  199B	70 1B		        jnz     ??0686
 8094+ 2			        endif
 8095+ 1			        top_ma  subb,r1,??0686,<001h>
 8096+ 2  199D	79 70		        mov     r1,#arg0
 8097+ 2  199F	74 73		        mov     a,#arg1
 8098+ 2			        ifnb    <001h>
 8099+ 2			        set_cy  001h
 8100+ 3	N      0001	??0696  set     (001h and 1)
 8101+ 3	N      FFFF	        if      ??0696 eq 1
 8102+ 3  19A1	D3		        setb    c
 8103+ 3			        else
 8104+ 3			        clr     c
 8105+ 3			        endif
 8106+ 2			        endif
 8107+ 2  19A2	99		        subb      a,r1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 146



 Line  I  Addr  Code            Source

 8108+ 2			        ifnb    <001h>
 8109+ 2			        save_psw
 8110+ 3  19A3	85 D0 70	        mov     saved_psw,PSW
 8111+ 2			        endif
 8112+ 2  19A6	B4 02 0F	        cjne    a,#res,??0686
 8113+ 2			        ifnb    <001h>
 8114+ 2			        tst_psw <001h>,??0686
 8115+ 3  19A9	E5 70		        mov     a,saved_psw
 8116+ 3  19AB	54 C4		        anl     a,#0c4h
 8117+ 3  19AD	64 01		        xrl     a,#001h
 8118+ 3  19AF	54 FE		        anl     a,#0feh
 8119+ 3  19B1	70 05		        jnz     ??0686
 8120+ 2			        endif
 8121+ 1
 8122+ 1			        eot     'a',??0686
 8123+ 2			        putc    #'a'
 8124+ 3  19B3			??0698:
 8125+ 3			        ;jnb     SCON.1,putc_loop
 8126+ 3			        ;clr     SCON.1
 8127+ 3  19B3	75 99 61	        mov     SBUF,#'a'
 8128+ 2  19B6	80 06		        sjmp    ??0697
 8129+ 2  19B8			??0686:  putc    #'?'
 8130+ 3  19B8			??0699:
 8131+ 3			        ;jnb     SCON.1,putc_loop
 8132+ 3			        ;clr     SCON.1
 8133+ 3  19B8	75 99 3F	        mov     SBUF,#'?'
 8134+ 2  19BB	75 6E 01	        mov     fail,#001h
 8135+ 2  19BE			??0697:
 8136+ 1
 8137+ 1			        top_ma  subb,r2,??0687,<001h>
 8138+ 2  19BE	7A 70		        mov     r2,#arg0
 8139+ 2  19C0	74 73		        mov     a,#arg1
 8140+ 2			        ifnb    <001h>
 8141+ 2			        set_cy  001h
 8142+ 3	N      0001	??0700  set     (001h and 1)
 8143+ 3	N      FFFF	        if      ??0700 eq 1
 8144+ 3  19C2	D3		        setb    c
 8145+ 3			        else
 8146+ 3			        clr     c
 8147+ 3			        endif
 8148+ 2			        endif
 8149+ 2  19C3	9A		        subb      a,r2
 8150+ 2			        ifnb    <001h>
 8151+ 2			        save_psw
 8152+ 3  19C4	85 D0 70	        mov     saved_psw,PSW
 8153+ 2			        endif
 8154+ 2  19C7	B4 02 25	        cjne    a,#res,??0687
 8155+ 2			        ifnb    <001h>
 8156+ 2			        tst_psw <001h>,??0687
 8157+ 3  19CA	E5 70		        mov     a,saved_psw
 8158+ 3  19CC	54 C4		        anl     a,#0c4h
 8159+ 3  19CE	64 01		        xrl     a,#001h
 8160+ 3  19D0	54 FE		        anl     a,#0feh
 8161+ 3  19D2	70 1B		        jnz     ??0687
 8162+ 2			        endif
 8163+ 1			        top_ma  subb,r3,??0687,<001h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 147



 Line  I  Addr  Code            Source

 8164+ 2  19D4	7B 70		        mov     r3,#arg0
 8165+ 2  19D6	74 73		        mov     a,#arg1
 8166+ 2			        ifnb    <001h>
 8167+ 2			        set_cy  001h
 8168+ 3	N      0001	??0701  set     (001h and 1)
 8169+ 3	N      FFFF	        if      ??0701 eq 1
 8170+ 3  19D8	D3		        setb    c
 8171+ 3			        else
 8172+ 3			        clr     c
 8173+ 3			        endif
 8174+ 2			        endif
 8175+ 2  19D9	9B		        subb      a,r3
 8176+ 2			        ifnb    <001h>
 8177+ 2			        save_psw
 8178+ 3  19DA	85 D0 70	        mov     saved_psw,PSW
 8179+ 2			        endif
 8180+ 2  19DD	B4 02 0F	        cjne    a,#res,??0687
 8181+ 2			        ifnb    <001h>
 8182+ 2			        tst_psw <001h>,??0687
 8183+ 3  19E0	E5 70		        mov     a,saved_psw
 8184+ 3  19E2	54 C4		        anl     a,#0c4h
 8185+ 3  19E4	64 01		        xrl     a,#001h
 8186+ 3  19E6	54 FE		        anl     a,#0feh
 8187+ 3  19E8	70 05		        jnz     ??0687
 8188+ 2			        endif
 8189+ 1
 8190+ 1			        eot     'b',??0687
 8191+ 2			        putc    #'b'
 8192+ 3  19EA			??0703:
 8193+ 3			        ;jnb     SCON.1,putc_loop
 8194+ 3			        ;clr     SCON.1
 8195+ 3  19EA	75 99 62	        mov     SBUF,#'b'
 8196+ 2  19ED	80 06		        sjmp    ??0702
 8197+ 2  19EF			??0687:  putc    #'?'
 8198+ 3  19EF			??0704:
 8199+ 3			        ;jnb     SCON.1,putc_loop
 8200+ 3			        ;clr     SCON.1
 8201+ 3  19EF	75 99 3F	        mov     SBUF,#'?'
 8202+ 2  19F2	75 6E 01	        mov     fail,#001h
 8203+ 2  19F5			??0702:
 8204+ 1
 8205+ 1			        top_ma  subb,r4,??0688,<001h>
 8206+ 2  19F5	7C 70		        mov     r4,#arg0
 8207+ 2  19F7	74 73		        mov     a,#arg1
 8208+ 2			        ifnb    <001h>
 8209+ 2			        set_cy  001h
 8210+ 3	N      0001	??0705  set     (001h and 1)
 8211+ 3	N      FFFF	        if      ??0705 eq 1
 8212+ 3  19F9	D3		        setb    c
 8213+ 3			        else
 8214+ 3			        clr     c
 8215+ 3			        endif
 8216+ 2			        endif
 8217+ 2  19FA	9C		        subb      a,r4
 8218+ 2			        ifnb    <001h>
 8219+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 148



 Line  I  Addr  Code            Source

 8220+ 3  19FB	85 D0 70	        mov     saved_psw,PSW
 8221+ 2			        endif
 8222+ 2  19FE	B4 02 25	        cjne    a,#res,??0688
 8223+ 2			        ifnb    <001h>
 8224+ 2			        tst_psw <001h>,??0688
 8225+ 3  1A01	E5 70		        mov     a,saved_psw
 8226+ 3  1A03	54 C4		        anl     a,#0c4h
 8227+ 3  1A05	64 01		        xrl     a,#001h
 8228+ 3  1A07	54 FE		        anl     a,#0feh
 8229+ 3  1A09	70 1B		        jnz     ??0688
 8230+ 2			        endif
 8231+ 1			        top_ma  subb,r5,??0688,<001h>
 8232+ 2  1A0B	7D 70		        mov     r5,#arg0
 8233+ 2  1A0D	74 73		        mov     a,#arg1
 8234+ 2			        ifnb    <001h>
 8235+ 2			        set_cy  001h
 8236+ 3	N      0001	??0706  set     (001h and 1)
 8237+ 3	N      FFFF	        if      ??0706 eq 1
 8238+ 3  1A0F	D3		        setb    c
 8239+ 3			        else
 8240+ 3			        clr     c
 8241+ 3			        endif
 8242+ 2			        endif
 8243+ 2  1A10	9D		        subb      a,r5
 8244+ 2			        ifnb    <001h>
 8245+ 2			        save_psw
 8246+ 3  1A11	85 D0 70	        mov     saved_psw,PSW
 8247+ 2			        endif
 8248+ 2  1A14	B4 02 0F	        cjne    a,#res,??0688
 8249+ 2			        ifnb    <001h>
 8250+ 2			        tst_psw <001h>,??0688
 8251+ 3  1A17	E5 70		        mov     a,saved_psw
 8252+ 3  1A19	54 C4		        anl     a,#0c4h
 8253+ 3  1A1B	64 01		        xrl     a,#001h
 8254+ 3  1A1D	54 FE		        anl     a,#0feh
 8255+ 3  1A1F	70 05		        jnz     ??0688
 8256+ 2			        endif
 8257+ 1
 8258+ 1			        eot     'c',??0688
 8259+ 2			        putc    #'c'
 8260+ 3  1A21			??0708:
 8261+ 3			        ;jnb     SCON.1,putc_loop
 8262+ 3			        ;clr     SCON.1
 8263+ 3  1A21	75 99 63	        mov     SBUF,#'c'
 8264+ 2  1A24	80 06		        sjmp    ??0707
 8265+ 2  1A26			??0688:  putc    #'?'
 8266+ 3  1A26			??0709:
 8267+ 3			        ;jnb     SCON.1,putc_loop
 8268+ 3			        ;clr     SCON.1
 8269+ 3  1A26	75 99 3F	        mov     SBUF,#'?'
 8270+ 2  1A29	75 6E 01	        mov     fail,#001h
 8271+ 2  1A2C			??0707:
 8272+ 1
 8273+ 1			        top_ma  subb,r6,??0685,<001h>
 8274+ 2  1A2C	7E 70		        mov     r6,#arg0
 8275+ 2  1A2E	74 73		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 149



 Line  I  Addr  Code            Source

 8276+ 2			        ifnb    <001h>
 8277+ 2			        set_cy  001h
 8278+ 3	N      0001	??0710  set     (001h and 1)
 8279+ 3	N      FFFF	        if      ??0710 eq 1
 8280+ 3  1A30	D3		        setb    c
 8281+ 3			        else
 8282+ 3			        clr     c
 8283+ 3			        endif
 8284+ 2			        endif
 8285+ 2  1A31	9E		        subb      a,r6
 8286+ 2			        ifnb    <001h>
 8287+ 2			        save_psw
 8288+ 3  1A32	85 D0 70	        mov     saved_psw,PSW
 8289+ 2			        endif
 8290+ 2  1A35	B4 02 25	        cjne    a,#res,??0685
 8291+ 2			        ifnb    <001h>
 8292+ 2			        tst_psw <001h>,??0685
 8293+ 3  1A38	E5 70		        mov     a,saved_psw
 8294+ 3  1A3A	54 C4		        anl     a,#0c4h
 8295+ 3  1A3C	64 01		        xrl     a,#001h
 8296+ 3  1A3E	54 FE		        anl     a,#0feh
 8297+ 3  1A40	70 1B		        jnz     ??0685
 8298+ 2			        endif
 8299+ 1			        top_ma  subb,r7,??0685,<001h>
 8300+ 2  1A42	7F 70		        mov     r7,#arg0
 8301+ 2  1A44	74 73		        mov     a,#arg1
 8302+ 2			        ifnb    <001h>
 8303+ 2			        set_cy  001h
 8304+ 3	N      0001	??0711  set     (001h and 1)
 8305+ 3	N      FFFF	        if      ??0711 eq 1
 8306+ 3  1A46	D3		        setb    c
 8307+ 3			        else
 8308+ 3			        clr     c
 8309+ 3			        endif
 8310+ 2			        endif
 8311+ 2  1A47	9F		        subb      a,r7
 8312+ 2			        ifnb    <001h>
 8313+ 2			        save_psw
 8314+ 3  1A48	85 D0 70	        mov     saved_psw,PSW
 8315+ 2			        endif
 8316+ 2  1A4B	B4 02 0F	        cjne    a,#res,??0685
 8317+ 2			        ifnb    <001h>
 8318+ 2			        tst_psw <001h>,??0685
 8319+ 3  1A4E	E5 70		        mov     a,saved_psw
 8320+ 3  1A50	54 C4		        anl     a,#0c4h
 8321+ 3  1A52	64 01		        xrl     a,#001h
 8322+ 3  1A54	54 FE		        anl     a,#0feh
 8323+ 3  1A56	70 05		        jnz     ??0685
 8324+ 2			        endif
 8325+ 1
 8326+ 1			        eot     'd',??0685
 8327+ 2			        putc    #'d'
 8328+ 3  1A58			??0713:
 8329+ 3			        ;jnb     SCON.1,putc_loop
 8330+ 3			        ;clr     SCON.1
 8331+ 3  1A58	75 99 64	        mov     SBUF,#'d'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 150



 Line  I  Addr  Code            Source

 8332+ 2  1A5B	80 06		        sjmp    ??0712
 8333+ 2  1A5D			??0685:  putc    #'?'
 8334+ 3  1A5D			??0714:
 8335+ 3			        ;jnb     SCON.1,putc_loop
 8336+ 3			        ;clr     SCON.1
 8337+ 3  1A5D	75 99 3F	        mov     SBUF,#'?'
 8338+ 2  1A60	75 6E 01	        mov     fail,#001h
 8339+ 2  1A63			??0712:
 8340+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 8341+ 1
 8342+ 1			        ; Optionally test immediate addressing modes.
 8343+ 1
 8344+ 1	N      FFFF	        if      (01h and 1) ne 0
 8345+ 1			        ; Test <op> A, #arg1...
 8346+ 1			        top_mb  subb,a,??0689,<001h>
 8347+ 2  1A63	74 73		        mov     a,#arg1
 8348+ 2			        ifnb    <001h>
 8349+ 2			        set_cy  001h
 8350+ 3	N      0001	??0715  set     (001h and 1)
 8351+ 3	N      FFFF	        if      ??0715 eq 1
 8352+ 3  1A65	D3		        setb    c
 8353+ 3			        else
 8354+ 3			        clr     c
 8355+ 3			        endif
 8356+ 2			        endif
 8357+ 2  1A66	94 70		        subb      a,#arg0
 8358+ 2			        ifnb    <001h>
 8359+ 2			        save_psw
 8360+ 3  1A68	85 D0 70	        mov     saved_psw,PSW
 8361+ 2			        endif
 8362+ 2  1A6B	F5 E0		        mov     ACC,a
 8363+ 2  1A6D	B4 02 0F	        cjne    a,#res,??0689
 8364+ 2			        ifnb    <001h>
 8365+ 2			        tst_psw <001h>,??0689
 8366+ 3  1A70	E5 70		        mov     a,saved_psw
 8367+ 3  1A72	54 C4		        anl     a,#0c4h
 8368+ 3  1A74	64 01		        xrl     a,#001h
 8369+ 3  1A76	54 FE		        anl     a,#0feh
 8370+ 3  1A78	70 05		        jnz     ??0689
 8371+ 2			        endif
 8372+ 1			        eot     'e',??0689
 8373+ 2			        putc    #'e'
 8374+ 3  1A7A			??0717:
 8375+ 3			        ;jnb     SCON.1,putc_loop
 8376+ 3			        ;clr     SCON.1
 8377+ 3  1A7A	75 99 65	        mov     SBUF,#'e'
 8378+ 2  1A7D	80 06		        sjmp    ??0716
 8379+ 2  1A7F			??0689:  putc    #'?'
 8380+ 3  1A7F			??0718:
 8381+ 3			        ;jnb     SCON.1,putc_loop
 8382+ 3			        ;clr     SCON.1
 8383+ 3  1A7F	75 99 3F	        mov     SBUF,#'?'
 8384+ 2  1A82	75 6E 01	        mov     fail,#001h
 8385+ 2  1A85			??0716:
 8386+ 1			        endif
 8387+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 151



 Line  I  Addr  Code            Source

 8388+ 1	N      0000	        if      (01h and 2) ne 0
 8389+ 1			        ; ...and <op> dir, #arg1
 8390+ 1			        top_mb  subb,dir0,??0690,<001h>
 8391+ 1			        eot     'f',??0690
 8392+ 1			        endif
 8393+ 1
 8394+ 1			        ; Optionally test <op> dir, A
 8395+ 1	N      0000	        if      (01h and 4) ne 0
 8396+ 1			        top_mc  subb,??0691,<001h>
 8397+ 1			        eot     'g',??0691
 8398+ 1			        endif
 8399+ 1
 8400:				        putc    #'2'
 8401+ 1  1A85			??0719:
 8402+ 1			        ;jnb     SCON.1,putc_loop
 8403+ 1			        ;clr     SCON.1
 8404+ 1  1A85	75 99 32	        mov     SBUF,#'2'
 8405:				        tst_alu subb,0c3h,0c5h,002h,01h,000h     ; /CY  AC /OV
 8406+ 1			        ; Put the argument and result data into variables for easier access
 8407+ 1	N      00C3	        arg0    set 0c3h
 8408+ 1	N      00C5	        arg1    set 0c5h
 8409+ 1	N      0002	        res     set 002h
 8410+ 1
 8411+ 1			        ; Test <op> A, dir
 8412+ 1			        top_ma  subb,dir0,??0721,<000h>
 8413+ 2  1A88	75 60 C3	        mov     dir0,#arg0
 8414+ 2  1A8B	74 C5		        mov     a,#arg1
 8415+ 2			        ifnb    <000h>
 8416+ 2			        set_cy  000h
 8417+ 3	N      0000	??0727  set     (000h and 1)
 8418+ 3	N      0000	        if      ??0727 eq 1
 8419+ 3			        setb    c
 8420+ 3			        else
 8421+ 3  1A8D	C3		        clr     c
 8422+ 3			        endif
 8423+ 2			        endif
 8424+ 2  1A8E	95 60		        subb      a,dir0
 8425+ 2			        ifnb    <000h>
 8426+ 2			        save_psw
 8427+ 3  1A90	85 D0 70	        mov     saved_psw,PSW
 8428+ 2			        endif
 8429+ 2  1A93	B4 02 6B	        cjne    a,#res,??0721
 8430+ 2			        ifnb    <000h>
 8431+ 2			        tst_psw <000h>,??0721
 8432+ 3  1A96	E5 70		        mov     a,saved_psw
 8433+ 3  1A98	54 C4		        anl     a,#0c4h
 8434+ 3  1A9A	64 00		        xrl     a,#000h
 8435+ 3  1A9C	54 FE		        anl     a,#0feh
 8436+ 3  1A9E	70 61		        jnz     ??0721
 8437+ 2			        endif
 8438+ 1			        ; Test <op> A, @R0
 8439+ 1  1AA0	78 60		        mov     r0,#dir0
 8440+ 1			        top_ma  subb,@r0,??0721,<000h>
 8441+ 2  1AA2	76 C3		        mov     @r0,#arg0
 8442+ 2  1AA4	74 C5		        mov     a,#arg1
 8443+ 2			        ifnb    <000h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 152



 Line  I  Addr  Code            Source

 8444+ 2			        set_cy  000h
 8445+ 3	N      0000	??0728  set     (000h and 1)
 8446+ 3	N      0000	        if      ??0728 eq 1
 8447+ 3			        setb    c
 8448+ 3			        else
 8449+ 3  1AA6	C3		        clr     c
 8450+ 3			        endif
 8451+ 2			        endif
 8452+ 2  1AA7	96		        subb      a,@r0
 8453+ 2			        ifnb    <000h>
 8454+ 2			        save_psw
 8455+ 3  1AA8	85 D0 70	        mov     saved_psw,PSW
 8456+ 2			        endif
 8457+ 2  1AAB	B4 02 53	        cjne    a,#res,??0721
 8458+ 2			        ifnb    <000h>
 8459+ 2			        tst_psw <000h>,??0721
 8460+ 3  1AAE	E5 70		        mov     a,saved_psw
 8461+ 3  1AB0	54 C4		        anl     a,#0c4h
 8462+ 3  1AB2	64 00		        xrl     a,#000h
 8463+ 3  1AB4	54 FE		        anl     a,#0feh
 8464+ 3  1AB6	70 49		        jnz     ??0721
 8465+ 2			        endif
 8466+ 1			        ; Test <op> A, @R1
 8467+ 1  1AB8	79 31		        mov     r1,#031h
 8468+ 1			        top_ma  subb,@r1,??0721,<000h>
 8469+ 2  1ABA	77 C3		        mov     @r1,#arg0
 8470+ 2  1ABC	74 C5		        mov     a,#arg1
 8471+ 2			        ifnb    <000h>
 8472+ 2			        set_cy  000h
 8473+ 3	N      0000	??0729  set     (000h and 1)
 8474+ 3	N      0000	        if      ??0729 eq 1
 8475+ 3			        setb    c
 8476+ 3			        else
 8477+ 3  1ABE	C3		        clr     c
 8478+ 3			        endif
 8479+ 2			        endif
 8480+ 2  1ABF	97		        subb      a,@r1
 8481+ 2			        ifnb    <000h>
 8482+ 2			        save_psw
 8483+ 3  1AC0	85 D0 70	        mov     saved_psw,PSW
 8484+ 2			        endif
 8485+ 2  1AC3	B4 02 3B	        cjne    a,#res,??0721
 8486+ 2			        ifnb    <000h>
 8487+ 2			        tst_psw <000h>,??0721
 8488+ 3  1AC6	E5 70		        mov     a,saved_psw
 8489+ 3  1AC8	54 C4		        anl     a,#0c4h
 8490+ 3  1ACA	64 00		        xrl     a,#000h
 8491+ 3  1ACC	54 FE		        anl     a,#0feh
 8492+ 3  1ACE	70 31		        jnz     ??0721
 8493+ 2			        endif
 8494+ 1
 8495+ 1			        ; Now test <op> A, Rn for n in 0..7
 8496+ 1			        top_ma  subb,r0,??0721,<000h>
 8497+ 2  1AD0	78 C3		        mov     r0,#arg0
 8498+ 2  1AD2	74 C5		        mov     a,#arg1
 8499+ 2			        ifnb    <000h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 153



 Line  I  Addr  Code            Source

 8500+ 2			        set_cy  000h
 8501+ 3	N      0000	??0730  set     (000h and 1)
 8502+ 3	N      0000	        if      ??0730 eq 1
 8503+ 3			        setb    c
 8504+ 3			        else
 8505+ 3  1AD4	C3		        clr     c
 8506+ 3			        endif
 8507+ 2			        endif
 8508+ 2  1AD5	98		        subb      a,r0
 8509+ 2			        ifnb    <000h>
 8510+ 2			        save_psw
 8511+ 3  1AD6	85 D0 70	        mov     saved_psw,PSW
 8512+ 2			        endif
 8513+ 2  1AD9	B4 02 25	        cjne    a,#res,??0721
 8514+ 2			        ifnb    <000h>
 8515+ 2			        tst_psw <000h>,??0721
 8516+ 3  1ADC	E5 70		        mov     a,saved_psw
 8517+ 3  1ADE	54 C4		        anl     a,#0c4h
 8518+ 3  1AE0	64 00		        xrl     a,#000h
 8519+ 3  1AE2	54 FE		        anl     a,#0feh
 8520+ 3  1AE4	70 1B		        jnz     ??0721
 8521+ 2			        endif
 8522+ 1			        top_ma  subb,r1,??0721,<000h>
 8523+ 2  1AE6	79 C3		        mov     r1,#arg0
 8524+ 2  1AE8	74 C5		        mov     a,#arg1
 8525+ 2			        ifnb    <000h>
 8526+ 2			        set_cy  000h
 8527+ 3	N      0000	??0731  set     (000h and 1)
 8528+ 3	N      0000	        if      ??0731 eq 1
 8529+ 3			        setb    c
 8530+ 3			        else
 8531+ 3  1AEA	C3		        clr     c
 8532+ 3			        endif
 8533+ 2			        endif
 8534+ 2  1AEB	99		        subb      a,r1
 8535+ 2			        ifnb    <000h>
 8536+ 2			        save_psw
 8537+ 3  1AEC	85 D0 70	        mov     saved_psw,PSW
 8538+ 2			        endif
 8539+ 2  1AEF	B4 02 0F	        cjne    a,#res,??0721
 8540+ 2			        ifnb    <000h>
 8541+ 2			        tst_psw <000h>,??0721
 8542+ 3  1AF2	E5 70		        mov     a,saved_psw
 8543+ 3  1AF4	54 C4		        anl     a,#0c4h
 8544+ 3  1AF6	64 00		        xrl     a,#000h
 8545+ 3  1AF8	54 FE		        anl     a,#0feh
 8546+ 3  1AFA	70 05		        jnz     ??0721
 8547+ 2			        endif
 8548+ 1
 8549+ 1			        eot     'a',??0721
 8550+ 2			        putc    #'a'
 8551+ 3  1AFC			??0733:
 8552+ 3			        ;jnb     SCON.1,putc_loop
 8553+ 3			        ;clr     SCON.1
 8554+ 3  1AFC	75 99 61	        mov     SBUF,#'a'
 8555+ 2  1AFF	80 06		        sjmp    ??0732

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 154



 Line  I  Addr  Code            Source

 8556+ 2  1B01			??0721:  putc    #'?'
 8557+ 3  1B01			??0734:
 8558+ 3			        ;jnb     SCON.1,putc_loop
 8559+ 3			        ;clr     SCON.1
 8560+ 3  1B01	75 99 3F	        mov     SBUF,#'?'
 8561+ 2  1B04	75 6E 01	        mov     fail,#001h
 8562+ 2  1B07			??0732:
 8563+ 1
 8564+ 1			        top_ma  subb,r2,??0722,<000h>
 8565+ 2  1B07	7A C3		        mov     r2,#arg0
 8566+ 2  1B09	74 C5		        mov     a,#arg1
 8567+ 2			        ifnb    <000h>
 8568+ 2			        set_cy  000h
 8569+ 3	N      0000	??0735  set     (000h and 1)
 8570+ 3	N      0000	        if      ??0735 eq 1
 8571+ 3			        setb    c
 8572+ 3			        else
 8573+ 3  1B0B	C3		        clr     c
 8574+ 3			        endif
 8575+ 2			        endif
 8576+ 2  1B0C	9A		        subb      a,r2
 8577+ 2			        ifnb    <000h>
 8578+ 2			        save_psw
 8579+ 3  1B0D	85 D0 70	        mov     saved_psw,PSW
 8580+ 2			        endif
 8581+ 2  1B10	B4 02 25	        cjne    a,#res,??0722
 8582+ 2			        ifnb    <000h>
 8583+ 2			        tst_psw <000h>,??0722
 8584+ 3  1B13	E5 70		        mov     a,saved_psw
 8585+ 3  1B15	54 C4		        anl     a,#0c4h
 8586+ 3  1B17	64 00		        xrl     a,#000h
 8587+ 3  1B19	54 FE		        anl     a,#0feh
 8588+ 3  1B1B	70 1B		        jnz     ??0722
 8589+ 2			        endif
 8590+ 1			        top_ma  subb,r3,??0722,<000h>
 8591+ 2  1B1D	7B C3		        mov     r3,#arg0
 8592+ 2  1B1F	74 C5		        mov     a,#arg1
 8593+ 2			        ifnb    <000h>
 8594+ 2			        set_cy  000h
 8595+ 3	N      0000	??0736  set     (000h and 1)
 8596+ 3	N      0000	        if      ??0736 eq 1
 8597+ 3			        setb    c
 8598+ 3			        else
 8599+ 3  1B21	C3		        clr     c
 8600+ 3			        endif
 8601+ 2			        endif
 8602+ 2  1B22	9B		        subb      a,r3
 8603+ 2			        ifnb    <000h>
 8604+ 2			        save_psw
 8605+ 3  1B23	85 D0 70	        mov     saved_psw,PSW
 8606+ 2			        endif
 8607+ 2  1B26	B4 02 0F	        cjne    a,#res,??0722
 8608+ 2			        ifnb    <000h>
 8609+ 2			        tst_psw <000h>,??0722
 8610+ 3  1B29	E5 70		        mov     a,saved_psw
 8611+ 3  1B2B	54 C4		        anl     a,#0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 155



 Line  I  Addr  Code            Source

 8612+ 3  1B2D	64 00		        xrl     a,#000h
 8613+ 3  1B2F	54 FE		        anl     a,#0feh
 8614+ 3  1B31	70 05		        jnz     ??0722
 8615+ 2			        endif
 8616+ 1
 8617+ 1			        eot     'b',??0722
 8618+ 2			        putc    #'b'
 8619+ 3  1B33			??0738:
 8620+ 3			        ;jnb     SCON.1,putc_loop
 8621+ 3			        ;clr     SCON.1
 8622+ 3  1B33	75 99 62	        mov     SBUF,#'b'
 8623+ 2  1B36	80 06		        sjmp    ??0737
 8624+ 2  1B38			??0722:  putc    #'?'
 8625+ 3  1B38			??0739:
 8626+ 3			        ;jnb     SCON.1,putc_loop
 8627+ 3			        ;clr     SCON.1
 8628+ 3  1B38	75 99 3F	        mov     SBUF,#'?'
 8629+ 2  1B3B	75 6E 01	        mov     fail,#001h
 8630+ 2  1B3E			??0737:
 8631+ 1
 8632+ 1			        top_ma  subb,r4,??0723,<000h>
 8633+ 2  1B3E	7C C3		        mov     r4,#arg0
 8634+ 2  1B40	74 C5		        mov     a,#arg1
 8635+ 2			        ifnb    <000h>
 8636+ 2			        set_cy  000h
 8637+ 3	N      0000	??0740  set     (000h and 1)
 8638+ 3	N      0000	        if      ??0740 eq 1
 8639+ 3			        setb    c
 8640+ 3			        else
 8641+ 3  1B42	C3		        clr     c
 8642+ 3			        endif
 8643+ 2			        endif
 8644+ 2  1B43	9C		        subb      a,r4
 8645+ 2			        ifnb    <000h>
 8646+ 2			        save_psw
 8647+ 3  1B44	85 D0 70	        mov     saved_psw,PSW
 8648+ 2			        endif
 8649+ 2  1B47	B4 02 25	        cjne    a,#res,??0723
 8650+ 2			        ifnb    <000h>
 8651+ 2			        tst_psw <000h>,??0723
 8652+ 3  1B4A	E5 70		        mov     a,saved_psw
 8653+ 3  1B4C	54 C4		        anl     a,#0c4h
 8654+ 3  1B4E	64 00		        xrl     a,#000h
 8655+ 3  1B50	54 FE		        anl     a,#0feh
 8656+ 3  1B52	70 1B		        jnz     ??0723
 8657+ 2			        endif
 8658+ 1			        top_ma  subb,r5,??0723,<000h>
 8659+ 2  1B54	7D C3		        mov     r5,#arg0
 8660+ 2  1B56	74 C5		        mov     a,#arg1
 8661+ 2			        ifnb    <000h>
 8662+ 2			        set_cy  000h
 8663+ 3	N      0000	??0741  set     (000h and 1)
 8664+ 3	N      0000	        if      ??0741 eq 1
 8665+ 3			        setb    c
 8666+ 3			        else
 8667+ 3  1B58	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 156



 Line  I  Addr  Code            Source

 8668+ 3			        endif
 8669+ 2			        endif
 8670+ 2  1B59	9D		        subb      a,r5
 8671+ 2			        ifnb    <000h>
 8672+ 2			        save_psw
 8673+ 3  1B5A	85 D0 70	        mov     saved_psw,PSW
 8674+ 2			        endif
 8675+ 2  1B5D	B4 02 0F	        cjne    a,#res,??0723
 8676+ 2			        ifnb    <000h>
 8677+ 2			        tst_psw <000h>,??0723
 8678+ 3  1B60	E5 70		        mov     a,saved_psw
 8679+ 3  1B62	54 C4		        anl     a,#0c4h
 8680+ 3  1B64	64 00		        xrl     a,#000h
 8681+ 3  1B66	54 FE		        anl     a,#0feh
 8682+ 3  1B68	70 05		        jnz     ??0723
 8683+ 2			        endif
 8684+ 1
 8685+ 1			        eot     'c',??0723
 8686+ 2			        putc    #'c'
 8687+ 3  1B6A			??0743:
 8688+ 3			        ;jnb     SCON.1,putc_loop
 8689+ 3			        ;clr     SCON.1
 8690+ 3  1B6A	75 99 63	        mov     SBUF,#'c'
 8691+ 2  1B6D	80 06		        sjmp    ??0742
 8692+ 2  1B6F			??0723:  putc    #'?'
 8693+ 3  1B6F			??0744:
 8694+ 3			        ;jnb     SCON.1,putc_loop
 8695+ 3			        ;clr     SCON.1
 8696+ 3  1B6F	75 99 3F	        mov     SBUF,#'?'
 8697+ 2  1B72	75 6E 01	        mov     fail,#001h
 8698+ 2  1B75			??0742:
 8699+ 1
 8700+ 1			        top_ma  subb,r6,??0720,<000h>
 8701+ 2  1B75	7E C3		        mov     r6,#arg0
 8702+ 2  1B77	74 C5		        mov     a,#arg1
 8703+ 2			        ifnb    <000h>
 8704+ 2			        set_cy  000h
 8705+ 3	N      0000	??0745  set     (000h and 1)
 8706+ 3	N      0000	        if      ??0745 eq 1
 8707+ 3			        setb    c
 8708+ 3			        else
 8709+ 3  1B79	C3		        clr     c
 8710+ 3			        endif
 8711+ 2			        endif
 8712+ 2  1B7A	9E		        subb      a,r6
 8713+ 2			        ifnb    <000h>
 8714+ 2			        save_psw
 8715+ 3  1B7B	85 D0 70	        mov     saved_psw,PSW
 8716+ 2			        endif
 8717+ 2  1B7E	B4 02 25	        cjne    a,#res,??0720
 8718+ 2			        ifnb    <000h>
 8719+ 2			        tst_psw <000h>,??0720
 8720+ 3  1B81	E5 70		        mov     a,saved_psw
 8721+ 3  1B83	54 C4		        anl     a,#0c4h
 8722+ 3  1B85	64 00		        xrl     a,#000h
 8723+ 3  1B87	54 FE		        anl     a,#0feh

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 157



 Line  I  Addr  Code            Source

 8724+ 3  1B89	70 1B		        jnz     ??0720
 8725+ 2			        endif
 8726+ 1			        top_ma  subb,r7,??0720,<000h>
 8727+ 2  1B8B	7F C3		        mov     r7,#arg0
 8728+ 2  1B8D	74 C5		        mov     a,#arg1
 8729+ 2			        ifnb    <000h>
 8730+ 2			        set_cy  000h
 8731+ 3	N      0000	??0746  set     (000h and 1)
 8732+ 3	N      0000	        if      ??0746 eq 1
 8733+ 3			        setb    c
 8734+ 3			        else
 8735+ 3  1B8F	C3		        clr     c
 8736+ 3			        endif
 8737+ 2			        endif
 8738+ 2  1B90	9F		        subb      a,r7
 8739+ 2			        ifnb    <000h>
 8740+ 2			        save_psw
 8741+ 3  1B91	85 D0 70	        mov     saved_psw,PSW
 8742+ 2			        endif
 8743+ 2  1B94	B4 02 0F	        cjne    a,#res,??0720
 8744+ 2			        ifnb    <000h>
 8745+ 2			        tst_psw <000h>,??0720
 8746+ 3  1B97	E5 70		        mov     a,saved_psw
 8747+ 3  1B99	54 C4		        anl     a,#0c4h
 8748+ 3  1B9B	64 00		        xrl     a,#000h
 8749+ 3  1B9D	54 FE		        anl     a,#0feh
 8750+ 3  1B9F	70 05		        jnz     ??0720
 8751+ 2			        endif
 8752+ 1
 8753+ 1			        eot     'd',??0720
 8754+ 2			        putc    #'d'
 8755+ 3  1BA1			??0748:
 8756+ 3			        ;jnb     SCON.1,putc_loop
 8757+ 3			        ;clr     SCON.1
 8758+ 3  1BA1	75 99 64	        mov     SBUF,#'d'
 8759+ 2  1BA4	80 06		        sjmp    ??0747
 8760+ 2  1BA6			??0720:  putc    #'?'
 8761+ 3  1BA6			??0749:
 8762+ 3			        ;jnb     SCON.1,putc_loop
 8763+ 3			        ;clr     SCON.1
 8764+ 3  1BA6	75 99 3F	        mov     SBUF,#'?'
 8765+ 2  1BA9	75 6E 01	        mov     fail,#001h
 8766+ 2  1BAC			??0747:
 8767+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 8768+ 1
 8769+ 1			        ; Optionally test immediate addressing modes.
 8770+ 1
 8771+ 1	N      FFFF	        if      (01h and 1) ne 0
 8772+ 1			        ; Test <op> A, #arg1...
 8773+ 1			        top_mb  subb,a,??0724,<000h>
 8774+ 2  1BAC	74 C5		        mov     a,#arg1
 8775+ 2			        ifnb    <000h>
 8776+ 2			        set_cy  000h
 8777+ 3	N      0000	??0750  set     (000h and 1)
 8778+ 3	N      0000	        if      ??0750 eq 1
 8779+ 3			        setb    c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 158



 Line  I  Addr  Code            Source

 8780+ 3			        else
 8781+ 3  1BAE	C3		        clr     c
 8782+ 3			        endif
 8783+ 2			        endif
 8784+ 2  1BAF	94 C3		        subb      a,#arg0
 8785+ 2			        ifnb    <000h>
 8786+ 2			        save_psw
 8787+ 3  1BB1	85 D0 70	        mov     saved_psw,PSW
 8788+ 2			        endif
 8789+ 2  1BB4	F5 E0		        mov     ACC,a
 8790+ 2  1BB6	B4 02 0F	        cjne    a,#res,??0724
 8791+ 2			        ifnb    <000h>
 8792+ 2			        tst_psw <000h>,??0724
 8793+ 3  1BB9	E5 70		        mov     a,saved_psw
 8794+ 3  1BBB	54 C4		        anl     a,#0c4h
 8795+ 3  1BBD	64 00		        xrl     a,#000h
 8796+ 3  1BBF	54 FE		        anl     a,#0feh
 8797+ 3  1BC1	70 05		        jnz     ??0724
 8798+ 2			        endif
 8799+ 1			        eot     'e',??0724
 8800+ 2			        putc    #'e'
 8801+ 3  1BC3			??0752:
 8802+ 3			        ;jnb     SCON.1,putc_loop
 8803+ 3			        ;clr     SCON.1
 8804+ 3  1BC3	75 99 65	        mov     SBUF,#'e'
 8805+ 2  1BC6	80 06		        sjmp    ??0751
 8806+ 2  1BC8			??0724:  putc    #'?'
 8807+ 3  1BC8			??0753:
 8808+ 3			        ;jnb     SCON.1,putc_loop
 8809+ 3			        ;clr     SCON.1
 8810+ 3  1BC8	75 99 3F	        mov     SBUF,#'?'
 8811+ 2  1BCB	75 6E 01	        mov     fail,#001h
 8812+ 2  1BCE			??0751:
 8813+ 1			        endif
 8814+ 1
 8815+ 1	N      0000	        if      (01h and 2) ne 0
 8816+ 1			        ; ...and <op> dir, #arg1
 8817+ 1			        top_mb  subb,dir0,??0725,<000h>
 8818+ 1			        eot     'f',??0725
 8819+ 1			        endif
 8820+ 1
 8821+ 1			        ; Optionally test <op> dir, A
 8822+ 1	N      0000	        if      (01h and 4) ne 0
 8823+ 1			        top_mc  subb,??0726,<000h>
 8824+ 1			        eot     'g',??0726
 8825+ 1			        endif
 8826+ 1
 8827:				        putc    #'3'
 8828+ 1  1BCE			??0754:
 8829+ 1			        ;jnb     SCON.1,putc_loop
 8830+ 1			        ;clr     SCON.1
 8831+ 1  1BCE	75 99 33	        mov     SBUF,#'3'
 8832:				        tst_alu subb,0c3h,0c5h,001h,01h,001h     ; /CY  AC  OV (CY input)
 8833+ 1			        ; Put the argument and result data into variables for easier access
 8834+ 1	N      00C3	        arg0    set 0c3h
 8835+ 1	N      00C5	        arg1    set 0c5h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 159



 Line  I  Addr  Code            Source

 8836+ 1	N      0001	        res     set 001h
 8837+ 1
 8838+ 1			        ; Test <op> A, dir
 8839+ 1			        top_ma  subb,dir0,??0756,<001h>
 8840+ 2  1BD1	75 60 C3	        mov     dir0,#arg0
 8841+ 2  1BD4	74 C5		        mov     a,#arg1
 8842+ 2			        ifnb    <001h>
 8843+ 2			        set_cy  001h
 8844+ 3	N      0001	??0762  set     (001h and 1)
 8845+ 3	N      FFFF	        if      ??0762 eq 1
 8846+ 3  1BD6	D3		        setb    c
 8847+ 3			        else
 8848+ 3			        clr     c
 8849+ 3			        endif
 8850+ 2			        endif
 8851+ 2  1BD7	95 60		        subb      a,dir0
 8852+ 2			        ifnb    <001h>
 8853+ 2			        save_psw
 8854+ 3  1BD9	85 D0 70	        mov     saved_psw,PSW
 8855+ 2			        endif
 8856+ 2  1BDC	B4 01 6B	        cjne    a,#res,??0756
 8857+ 2			        ifnb    <001h>
 8858+ 2			        tst_psw <001h>,??0756
 8859+ 3  1BDF	E5 70		        mov     a,saved_psw
 8860+ 3  1BE1	54 C4		        anl     a,#0c4h
 8861+ 3  1BE3	64 01		        xrl     a,#001h
 8862+ 3  1BE5	54 FE		        anl     a,#0feh
 8863+ 3  1BE7	70 61		        jnz     ??0756
 8864+ 2			        endif
 8865+ 1			        ; Test <op> A, @R0
 8866+ 1  1BE9	78 60		        mov     r0,#dir0
 8867+ 1			        top_ma  subb,@r0,??0756,<001h>
 8868+ 2  1BEB	76 C3		        mov     @r0,#arg0
 8869+ 2  1BED	74 C5		        mov     a,#arg1
 8870+ 2			        ifnb    <001h>
 8871+ 2			        set_cy  001h
 8872+ 3	N      0001	??0763  set     (001h and 1)
 8873+ 3	N      FFFF	        if      ??0763 eq 1
 8874+ 3  1BEF	D3		        setb    c
 8875+ 3			        else
 8876+ 3			        clr     c
 8877+ 3			        endif
 8878+ 2			        endif
 8879+ 2  1BF0	96		        subb      a,@r0
 8880+ 2			        ifnb    <001h>
 8881+ 2			        save_psw
 8882+ 3  1BF1	85 D0 70	        mov     saved_psw,PSW
 8883+ 2			        endif
 8884+ 2  1BF4	B4 01 53	        cjne    a,#res,??0756
 8885+ 2			        ifnb    <001h>
 8886+ 2			        tst_psw <001h>,??0756
 8887+ 3  1BF7	E5 70		        mov     a,saved_psw
 8888+ 3  1BF9	54 C4		        anl     a,#0c4h
 8889+ 3  1BFB	64 01		        xrl     a,#001h
 8890+ 3  1BFD	54 FE		        anl     a,#0feh
 8891+ 3  1BFF	70 49		        jnz     ??0756

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 160



 Line  I  Addr  Code            Source

 8892+ 2			        endif
 8893+ 1			        ; Test <op> A, @R1
 8894+ 1  1C01	79 31		        mov     r1,#031h
 8895+ 1			        top_ma  subb,@r1,??0756,<001h>
 8896+ 2  1C03	77 C3		        mov     @r1,#arg0
 8897+ 2  1C05	74 C5		        mov     a,#arg1
 8898+ 2			        ifnb    <001h>
 8899+ 2			        set_cy  001h
 8900+ 3	N      0001	??0764  set     (001h and 1)
 8901+ 3	N      FFFF	        if      ??0764 eq 1
 8902+ 3  1C07	D3		        setb    c
 8903+ 3			        else
 8904+ 3			        clr     c
 8905+ 3			        endif
 8906+ 2			        endif
 8907+ 2  1C08	97		        subb      a,@r1
 8908+ 2			        ifnb    <001h>
 8909+ 2			        save_psw
 8910+ 3  1C09	85 D0 70	        mov     saved_psw,PSW
 8911+ 2			        endif
 8912+ 2  1C0C	B4 01 3B	        cjne    a,#res,??0756
 8913+ 2			        ifnb    <001h>
 8914+ 2			        tst_psw <001h>,??0756
 8915+ 3  1C0F	E5 70		        mov     a,saved_psw
 8916+ 3  1C11	54 C4		        anl     a,#0c4h
 8917+ 3  1C13	64 01		        xrl     a,#001h
 8918+ 3  1C15	54 FE		        anl     a,#0feh
 8919+ 3  1C17	70 31		        jnz     ??0756
 8920+ 2			        endif
 8921+ 1
 8922+ 1			        ; Now test <op> A, Rn for n in 0..7
 8923+ 1			        top_ma  subb,r0,??0756,<001h>
 8924+ 2  1C19	78 C3		        mov     r0,#arg0
 8925+ 2  1C1B	74 C5		        mov     a,#arg1
 8926+ 2			        ifnb    <001h>
 8927+ 2			        set_cy  001h
 8928+ 3	N      0001	??0765  set     (001h and 1)
 8929+ 3	N      FFFF	        if      ??0765 eq 1
 8930+ 3  1C1D	D3		        setb    c
 8931+ 3			        else
 8932+ 3			        clr     c
 8933+ 3			        endif
 8934+ 2			        endif
 8935+ 2  1C1E	98		        subb      a,r0
 8936+ 2			        ifnb    <001h>
 8937+ 2			        save_psw
 8938+ 3  1C1F	85 D0 70	        mov     saved_psw,PSW
 8939+ 2			        endif
 8940+ 2  1C22	B4 01 25	        cjne    a,#res,??0756
 8941+ 2			        ifnb    <001h>
 8942+ 2			        tst_psw <001h>,??0756
 8943+ 3  1C25	E5 70		        mov     a,saved_psw
 8944+ 3  1C27	54 C4		        anl     a,#0c4h
 8945+ 3  1C29	64 01		        xrl     a,#001h
 8946+ 3  1C2B	54 FE		        anl     a,#0feh
 8947+ 3  1C2D	70 1B		        jnz     ??0756

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 161



 Line  I  Addr  Code            Source

 8948+ 2			        endif
 8949+ 1			        top_ma  subb,r1,??0756,<001h>
 8950+ 2  1C2F	79 C3		        mov     r1,#arg0
 8951+ 2  1C31	74 C5		        mov     a,#arg1
 8952+ 2			        ifnb    <001h>
 8953+ 2			        set_cy  001h
 8954+ 3	N      0001	??0766  set     (001h and 1)
 8955+ 3	N      FFFF	        if      ??0766 eq 1
 8956+ 3  1C33	D3		        setb    c
 8957+ 3			        else
 8958+ 3			        clr     c
 8959+ 3			        endif
 8960+ 2			        endif
 8961+ 2  1C34	99		        subb      a,r1
 8962+ 2			        ifnb    <001h>
 8963+ 2			        save_psw
 8964+ 3  1C35	85 D0 70	        mov     saved_psw,PSW
 8965+ 2			        endif
 8966+ 2  1C38	B4 01 0F	        cjne    a,#res,??0756
 8967+ 2			        ifnb    <001h>
 8968+ 2			        tst_psw <001h>,??0756
 8969+ 3  1C3B	E5 70		        mov     a,saved_psw
 8970+ 3  1C3D	54 C4		        anl     a,#0c4h
 8971+ 3  1C3F	64 01		        xrl     a,#001h
 8972+ 3  1C41	54 FE		        anl     a,#0feh
 8973+ 3  1C43	70 05		        jnz     ??0756
 8974+ 2			        endif
 8975+ 1
 8976+ 1			        eot     'a',??0756
 8977+ 2			        putc    #'a'
 8978+ 3  1C45			??0768:
 8979+ 3			        ;jnb     SCON.1,putc_loop
 8980+ 3			        ;clr     SCON.1
 8981+ 3  1C45	75 99 61	        mov     SBUF,#'a'
 8982+ 2  1C48	80 06		        sjmp    ??0767
 8983+ 2  1C4A			??0756:  putc    #'?'
 8984+ 3  1C4A			??0769:
 8985+ 3			        ;jnb     SCON.1,putc_loop
 8986+ 3			        ;clr     SCON.1
 8987+ 3  1C4A	75 99 3F	        mov     SBUF,#'?'
 8988+ 2  1C4D	75 6E 01	        mov     fail,#001h
 8989+ 2  1C50			??0767:
 8990+ 1
 8991+ 1			        top_ma  subb,r2,??0757,<001h>
 8992+ 2  1C50	7A C3		        mov     r2,#arg0
 8993+ 2  1C52	74 C5		        mov     a,#arg1
 8994+ 2			        ifnb    <001h>
 8995+ 2			        set_cy  001h
 8996+ 3	N      0001	??0770  set     (001h and 1)
 8997+ 3	N      FFFF	        if      ??0770 eq 1
 8998+ 3  1C54	D3		        setb    c
 8999+ 3			        else
 9000+ 3			        clr     c
 9001+ 3			        endif
 9002+ 2			        endif
 9003+ 2  1C55	9A		        subb      a,r2

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 162



 Line  I  Addr  Code            Source

 9004+ 2			        ifnb    <001h>
 9005+ 2			        save_psw
 9006+ 3  1C56	85 D0 70	        mov     saved_psw,PSW
 9007+ 2			        endif
 9008+ 2  1C59	B4 01 25	        cjne    a,#res,??0757
 9009+ 2			        ifnb    <001h>
 9010+ 2			        tst_psw <001h>,??0757
 9011+ 3  1C5C	E5 70		        mov     a,saved_psw
 9012+ 3  1C5E	54 C4		        anl     a,#0c4h
 9013+ 3  1C60	64 01		        xrl     a,#001h
 9014+ 3  1C62	54 FE		        anl     a,#0feh
 9015+ 3  1C64	70 1B		        jnz     ??0757
 9016+ 2			        endif
 9017+ 1			        top_ma  subb,r3,??0757,<001h>
 9018+ 2  1C66	7B C3		        mov     r3,#arg0
 9019+ 2  1C68	74 C5		        mov     a,#arg1
 9020+ 2			        ifnb    <001h>
 9021+ 2			        set_cy  001h
 9022+ 3	N      0001	??0771  set     (001h and 1)
 9023+ 3	N      FFFF	        if      ??0771 eq 1
 9024+ 3  1C6A	D3		        setb    c
 9025+ 3			        else
 9026+ 3			        clr     c
 9027+ 3			        endif
 9028+ 2			        endif
 9029+ 2  1C6B	9B		        subb      a,r3
 9030+ 2			        ifnb    <001h>
 9031+ 2			        save_psw
 9032+ 3  1C6C	85 D0 70	        mov     saved_psw,PSW
 9033+ 2			        endif
 9034+ 2  1C6F	B4 01 0F	        cjne    a,#res,??0757
 9035+ 2			        ifnb    <001h>
 9036+ 2			        tst_psw <001h>,??0757
 9037+ 3  1C72	E5 70		        mov     a,saved_psw
 9038+ 3  1C74	54 C4		        anl     a,#0c4h
 9039+ 3  1C76	64 01		        xrl     a,#001h
 9040+ 3  1C78	54 FE		        anl     a,#0feh
 9041+ 3  1C7A	70 05		        jnz     ??0757
 9042+ 2			        endif
 9043+ 1
 9044+ 1			        eot     'b',??0757
 9045+ 2			        putc    #'b'
 9046+ 3  1C7C			??0773:
 9047+ 3			        ;jnb     SCON.1,putc_loop
 9048+ 3			        ;clr     SCON.1
 9049+ 3  1C7C	75 99 62	        mov     SBUF,#'b'
 9050+ 2  1C7F	80 06		        sjmp    ??0772
 9051+ 2  1C81			??0757:  putc    #'?'
 9052+ 3  1C81			??0774:
 9053+ 3			        ;jnb     SCON.1,putc_loop
 9054+ 3			        ;clr     SCON.1
 9055+ 3  1C81	75 99 3F	        mov     SBUF,#'?'
 9056+ 2  1C84	75 6E 01	        mov     fail,#001h
 9057+ 2  1C87			??0772:
 9058+ 1
 9059+ 1			        top_ma  subb,r4,??0758,<001h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 163



 Line  I  Addr  Code            Source

 9060+ 2  1C87	7C C3		        mov     r4,#arg0
 9061+ 2  1C89	74 C5		        mov     a,#arg1
 9062+ 2			        ifnb    <001h>
 9063+ 2			        set_cy  001h
 9064+ 3	N      0001	??0775  set     (001h and 1)
 9065+ 3	N      FFFF	        if      ??0775 eq 1
 9066+ 3  1C8B	D3		        setb    c
 9067+ 3			        else
 9068+ 3			        clr     c
 9069+ 3			        endif
 9070+ 2			        endif
 9071+ 2  1C8C	9C		        subb      a,r4
 9072+ 2			        ifnb    <001h>
 9073+ 2			        save_psw
 9074+ 3  1C8D	85 D0 70	        mov     saved_psw,PSW
 9075+ 2			        endif
 9076+ 2  1C90	B4 01 25	        cjne    a,#res,??0758
 9077+ 2			        ifnb    <001h>
 9078+ 2			        tst_psw <001h>,??0758
 9079+ 3  1C93	E5 70		        mov     a,saved_psw
 9080+ 3  1C95	54 C4		        anl     a,#0c4h
 9081+ 3  1C97	64 01		        xrl     a,#001h
 9082+ 3  1C99	54 FE		        anl     a,#0feh
 9083+ 3  1C9B	70 1B		        jnz     ??0758
 9084+ 2			        endif
 9085+ 1			        top_ma  subb,r5,??0758,<001h>
 9086+ 2  1C9D	7D C3		        mov     r5,#arg0
 9087+ 2  1C9F	74 C5		        mov     a,#arg1
 9088+ 2			        ifnb    <001h>
 9089+ 2			        set_cy  001h
 9090+ 3	N      0001	??0776  set     (001h and 1)
 9091+ 3	N      FFFF	        if      ??0776 eq 1
 9092+ 3  1CA1	D3		        setb    c
 9093+ 3			        else
 9094+ 3			        clr     c
 9095+ 3			        endif
 9096+ 2			        endif
 9097+ 2  1CA2	9D		        subb      a,r5
 9098+ 2			        ifnb    <001h>
 9099+ 2			        save_psw
 9100+ 3  1CA3	85 D0 70	        mov     saved_psw,PSW
 9101+ 2			        endif
 9102+ 2  1CA6	B4 01 0F	        cjne    a,#res,??0758
 9103+ 2			        ifnb    <001h>
 9104+ 2			        tst_psw <001h>,??0758
 9105+ 3  1CA9	E5 70		        mov     a,saved_psw
 9106+ 3  1CAB	54 C4		        anl     a,#0c4h
 9107+ 3  1CAD	64 01		        xrl     a,#001h
 9108+ 3  1CAF	54 FE		        anl     a,#0feh
 9109+ 3  1CB1	70 05		        jnz     ??0758
 9110+ 2			        endif
 9111+ 1
 9112+ 1			        eot     'c',??0758
 9113+ 2			        putc    #'c'
 9114+ 3  1CB3			??0778:
 9115+ 3			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 164



 Line  I  Addr  Code            Source

 9116+ 3			        ;clr     SCON.1
 9117+ 3  1CB3	75 99 63	        mov     SBUF,#'c'
 9118+ 2  1CB6	80 06		        sjmp    ??0777
 9119+ 2  1CB8			??0758:  putc    #'?'
 9120+ 3  1CB8			??0779:
 9121+ 3			        ;jnb     SCON.1,putc_loop
 9122+ 3			        ;clr     SCON.1
 9123+ 3  1CB8	75 99 3F	        mov     SBUF,#'?'
 9124+ 2  1CBB	75 6E 01	        mov     fail,#001h
 9125+ 2  1CBE			??0777:
 9126+ 1
 9127+ 1			        top_ma  subb,r6,??0755,<001h>
 9128+ 2  1CBE	7E C3		        mov     r6,#arg0
 9129+ 2  1CC0	74 C5		        mov     a,#arg1
 9130+ 2			        ifnb    <001h>
 9131+ 2			        set_cy  001h
 9132+ 3	N      0001	??0780  set     (001h and 1)
 9133+ 3	N      FFFF	        if      ??0780 eq 1
 9134+ 3  1CC2	D3		        setb    c
 9135+ 3			        else
 9136+ 3			        clr     c
 9137+ 3			        endif
 9138+ 2			        endif
 9139+ 2  1CC3	9E		        subb      a,r6
 9140+ 2			        ifnb    <001h>
 9141+ 2			        save_psw
 9142+ 3  1CC4	85 D0 70	        mov     saved_psw,PSW
 9143+ 2			        endif
 9144+ 2  1CC7	B4 01 25	        cjne    a,#res,??0755
 9145+ 2			        ifnb    <001h>
 9146+ 2			        tst_psw <001h>,??0755
 9147+ 3  1CCA	E5 70		        mov     a,saved_psw
 9148+ 3  1CCC	54 C4		        anl     a,#0c4h
 9149+ 3  1CCE	64 01		        xrl     a,#001h
 9150+ 3  1CD0	54 FE		        anl     a,#0feh
 9151+ 3  1CD2	70 1B		        jnz     ??0755
 9152+ 2			        endif
 9153+ 1			        top_ma  subb,r7,??0755,<001h>
 9154+ 2  1CD4	7F C3		        mov     r7,#arg0
 9155+ 2  1CD6	74 C5		        mov     a,#arg1
 9156+ 2			        ifnb    <001h>
 9157+ 2			        set_cy  001h
 9158+ 3	N      0001	??0781  set     (001h and 1)
 9159+ 3	N      FFFF	        if      ??0781 eq 1
 9160+ 3  1CD8	D3		        setb    c
 9161+ 3			        else
 9162+ 3			        clr     c
 9163+ 3			        endif
 9164+ 2			        endif
 9165+ 2  1CD9	9F		        subb      a,r7
 9166+ 2			        ifnb    <001h>
 9167+ 2			        save_psw
 9168+ 3  1CDA	85 D0 70	        mov     saved_psw,PSW
 9169+ 2			        endif
 9170+ 2  1CDD	B4 01 0F	        cjne    a,#res,??0755
 9171+ 2			        ifnb    <001h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 165



 Line  I  Addr  Code            Source

 9172+ 2			        tst_psw <001h>,??0755
 9173+ 3  1CE0	E5 70		        mov     a,saved_psw
 9174+ 3  1CE2	54 C4		        anl     a,#0c4h
 9175+ 3  1CE4	64 01		        xrl     a,#001h
 9176+ 3  1CE6	54 FE		        anl     a,#0feh
 9177+ 3  1CE8	70 05		        jnz     ??0755
 9178+ 2			        endif
 9179+ 1
 9180+ 1			        eot     'd',??0755
 9181+ 2			        putc    #'d'
 9182+ 3  1CEA			??0783:
 9183+ 3			        ;jnb     SCON.1,putc_loop
 9184+ 3			        ;clr     SCON.1
 9185+ 3  1CEA	75 99 64	        mov     SBUF,#'d'
 9186+ 2  1CED	80 06		        sjmp    ??0782
 9187+ 2  1CEF			??0755:  putc    #'?'
 9188+ 3  1CEF			??0784:
 9189+ 3			        ;jnb     SCON.1,putc_loop
 9190+ 3			        ;clr     SCON.1
 9191+ 3  1CEF	75 99 3F	        mov     SBUF,#'?'
 9192+ 2  1CF2	75 6E 01	        mov     fail,#001h
 9193+ 2  1CF5			??0782:
 9194+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 9195+ 1
 9196+ 1			        ; Optionally test immediate addressing modes.
 9197+ 1
 9198+ 1	N      FFFF	        if      (01h and 1) ne 0
 9199+ 1			        ; Test <op> A, #arg1...
 9200+ 1			        top_mb  subb,a,??0759,<001h>
 9201+ 2  1CF5	74 C5		        mov     a,#arg1
 9202+ 2			        ifnb    <001h>
 9203+ 2			        set_cy  001h
 9204+ 3	N      0001	??0785  set     (001h and 1)
 9205+ 3	N      FFFF	        if      ??0785 eq 1
 9206+ 3  1CF7	D3		        setb    c
 9207+ 3			        else
 9208+ 3			        clr     c
 9209+ 3			        endif
 9210+ 2			        endif
 9211+ 2  1CF8	94 C3		        subb      a,#arg0
 9212+ 2			        ifnb    <001h>
 9213+ 2			        save_psw
 9214+ 3  1CFA	85 D0 70	        mov     saved_psw,PSW
 9215+ 2			        endif
 9216+ 2  1CFD	F5 E0		        mov     ACC,a
 9217+ 2  1CFF	B4 01 0F	        cjne    a,#res,??0759
 9218+ 2			        ifnb    <001h>
 9219+ 2			        tst_psw <001h>,??0759
 9220+ 3  1D02	E5 70		        mov     a,saved_psw
 9221+ 3  1D04	54 C4		        anl     a,#0c4h
 9222+ 3  1D06	64 01		        xrl     a,#001h
 9223+ 3  1D08	54 FE		        anl     a,#0feh
 9224+ 3  1D0A	70 05		        jnz     ??0759
 9225+ 2			        endif
 9226+ 1			        eot     'e',??0759
 9227+ 2			        putc    #'e'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 166



 Line  I  Addr  Code            Source

 9228+ 3  1D0C			??0787:
 9229+ 3			        ;jnb     SCON.1,putc_loop
 9230+ 3			        ;clr     SCON.1
 9231+ 3  1D0C	75 99 65	        mov     SBUF,#'e'
 9232+ 2  1D0F	80 06		        sjmp    ??0786
 9233+ 2  1D11			??0759:  putc    #'?'
 9234+ 3  1D11			??0788:
 9235+ 3			        ;jnb     SCON.1,putc_loop
 9236+ 3			        ;clr     SCON.1
 9237+ 3  1D11	75 99 3F	        mov     SBUF,#'?'
 9238+ 2  1D14	75 6E 01	        mov     fail,#001h
 9239+ 2  1D17			??0786:
 9240+ 1			        endif
 9241+ 1
 9242+ 1	N      0000	        if      (01h and 2) ne 0
 9243+ 1			        ; ...and <op> dir, #arg1
 9244+ 1			        top_mb  subb,dir0,??0760,<001h>
 9245+ 1			        eot     'f',??0760
 9246+ 1			        endif
 9247+ 1
 9248+ 1			        ; Optionally test <op> dir, A
 9249+ 1	N      0000	        if      (01h and 4) ne 0
 9250+ 1			        top_mc  subb,??0761,<001h>
 9251+ 1			        eot     'g',??0761
 9252+ 1			        endif
 9253+ 1
 9254:
 9255:				        ; FIXME subb tests are specially weak
 9256:
 9257:				        put_crlf                    ; end of test series
 9258+ 1			        putc    #13
 9259+ 2  1D17			??0789:
 9260+ 2			        ;jnb     SCON.1,putc_loop
 9261+ 2			        ;clr     SCON.1
 9262+ 2  1D17	75 99 0D	        mov     SBUF,#13
 9263+ 1			        putc    #10
 9264+ 2  1D1A			??0790:
 9265+ 2			        ;jnb     SCON.1,putc_loop
 9266+ 2			        ;clr     SCON.1
 9267+ 2  1D1A	75 99 0A	        mov     SBUF,#10
 9268:
 9269:
 9270:				        ;-- Test series O ------------------------------------------------------
 9271:				        ; PUSH and POP
 9272:				        ; a.- <PUSH dir (IRAM)>
 9273:				        ; b.- <POP dir (IRAM)>
 9274:				        ; c.- <PUSH dir (SFR)>
 9275:				        ; d.- <POP dir (SFR)>
 9276:
 9277:				        putc    #'O'                ; start of test series
 9278+ 1  1D1D			??0791:
 9279+ 1			        ;jnb     SCON.1,putc_loop
 9280+ 1			        ;clr     SCON.1
 9281+ 1  1D1D	75 99 4F	        mov     SBUF,#'O'
 9282:
 9283:				        ; <PUSH dir (IRAM)>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 167



 Line  I  Addr  Code            Source

 9284:	  1D20	75 81 9F	        mov     SP,#stack0          ; prepare SP...
 9285:	  1D23	75 60 12	        mov     dir0,#012h          ; ...and data to be pushed
 9286:	  1D26	78 A0		        mov     r0,#(stack0+1)      ; r0->stack so we can verify data is pushed
 9287:	  1D28	76 00		        mov     @r0,#000h           ; clear target stack location
 9288:	  1D2A	C0 60		        push    dir0                ; <PUSH dir>
 9289:	  1D2C	E6		        mov     a,@r0               ; verify data has been pushed
 9290:	  1D2D	B4 12 0A	        cjne    a,#012h,to_a0
 9291:	  1D30	E5 81		        mov     a,SP                ; verify SP has been incremented
 9292:	  1D32	B4 A0 05	        cjne    a,#(stack0+1),to_a0
 9293:
 9294:				        eot     'a',to_a0
 9295+ 1			        putc    #'a'
 9296+ 2  1D35			??0793:
 9297+ 2			        ;jnb     SCON.1,putc_loop
 9298+ 2			        ;clr     SCON.1
 9299+ 2  1D35	75 99 61	        mov     SBUF,#'a'
 9300+ 1  1D38	80 06		        sjmp    ??0792
 9301+ 1  1D3A			to_a0:  putc    #'?'
 9302+ 2  1D3A			??0794:
 9303+ 2			        ;jnb     SCON.1,putc_loop
 9304+ 2			        ;clr     SCON.1
 9305+ 2  1D3A	75 99 3F	        mov     SBUF,#'?'
 9306+ 1  1D3D	75 6E 01	        mov     fail,#001h
 9307+ 1  1D40			??0792:
 9308:
 9309:				        ; <POP dir (IRAM)> We'll use the data that was pushed previously
 9310:	  1D40	75 61 00	        mov     dir1,#000h          ; clear POP target
 9311:	  1D43	E4		        clr     a
 9312:	  1D44	D0 61		        pop     dir1                ; <POP dir>
 9313:	  1D46	79 61		        mov     r1,#dir1            ; verify data has been popped
 9314:	  1D48	E7		        mov     a,@r1
 9315:	  1D49	B4 12 0A	        cjne    a,#012h,to_b0
 9316:	  1D4C	E5 81		        mov     a,SP                ; verify SP has been decremented
 9317:	  1D4E	B4 9F 05	        cjne    a,#stack0,to_b0
 9318:
 9319:				        eot     'b',to_b0
 9320+ 1			        putc    #'b'
 9321+ 2  1D51			??0796:
 9322+ 2			        ;jnb     SCON.1,putc_loop
 9323+ 2			        ;clr     SCON.1
 9324+ 2  1D51	75 99 62	        mov     SBUF,#'b'
 9325+ 1  1D54	80 06		        sjmp    ??0795
 9326+ 1  1D56			to_b0:  putc    #'?'
 9327+ 2  1D56			??0797:
 9328+ 2			        ;jnb     SCON.1,putc_loop
 9329+ 2			        ;clr     SCON.1
 9330+ 2  1D56	75 99 3F	        mov     SBUF,#'?'
 9331+ 1  1D59	75 6E 01	        mov     fail,#001h
 9332+ 1  1D5C			??0795:
 9333:
 9334:				        ; <PUSH dir (SFR)>
 9335:	  1D5C	75 81 9F	        mov     SP,#stack0          ; prepare SP...
 9336:	  1D5F	75 F0 42	        mov     B,#042h             ; ...and data to be pushed
 9337:	  1D62	78 A0		        mov     r0,#(stack0+1)      ; r0->stack so we can verify data is pushed
 9338:	  1D64	76 00		        mov     @r0,#000h           ; clear target stack location
 9339:	  1D66	C0 F0		        push    B                   ; <PUSH dir>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 168



 Line  I  Addr  Code            Source

 9340:	  1D68	E6		        mov     a,@r0               ; verify data has been pushed
 9341:	  1D69	B4 42 0A	        cjne    a,#042h,to_c0
 9342:	  1D6C	E5 81		        mov     a,SP                ; verify SP has been incremented
 9343:	  1D6E	B4 A0 05	        cjne    a,#(stack0+1),to_c0
 9344:
 9345:				        eot     'c',to_c0
 9346+ 1			        putc    #'c'
 9347+ 2  1D71			??0799:
 9348+ 2			        ;jnb     SCON.1,putc_loop
 9349+ 2			        ;clr     SCON.1
 9350+ 2  1D71	75 99 63	        mov     SBUF,#'c'
 9351+ 1  1D74	80 06		        sjmp    ??0798
 9352+ 1  1D76			to_c0:  putc    #'?'
 9353+ 2  1D76			??0800:
 9354+ 2			        ;jnb     SCON.1,putc_loop
 9355+ 2			        ;clr     SCON.1
 9356+ 2  1D76	75 99 3F	        mov     SBUF,#'?'
 9357+ 1  1D79	75 6E 01	        mov     fail,#001h
 9358+ 1  1D7C			??0798:
 9359:
 9360:				        ; <POP dir (SFR)> We'll use the data that was pushed previously
 9361:	  1D7C	75 F0 00	        mov     B,#000h             ; clear POP target
 9362:	  1D7F	E4		        clr     a
 9363:	  1D80	D0 F0		        pop     B                   ; <POP dir>
 9364:	  1D82	E5 F0		        mov     a,B                 ; verify data has been popped
 9365:	  1D84	B4 42 0A	        cjne    a,#042h,to_d0
 9366:	  1D87	E5 81		        mov     a,SP                ; verify SP has been decremented
 9367:	  1D89	B4 9F 05	        cjne    a,#stack0,to_d0
 9368:
 9369:				        eot     'd',to_d0
 9370+ 1			        putc    #'d'
 9371+ 2  1D8C			??0802:
 9372+ 2			        ;jnb     SCON.1,putc_loop
 9373+ 2			        ;clr     SCON.1
 9374+ 2  1D8C	75 99 64	        mov     SBUF,#'d'
 9375+ 1  1D8F	80 06		        sjmp    ??0801
 9376+ 1  1D91			to_d0:  putc    #'?'
 9377+ 2  1D91			??0803:
 9378+ 2			        ;jnb     SCON.1,putc_loop
 9379+ 2			        ;clr     SCON.1
 9380+ 2  1D91	75 99 3F	        mov     SBUF,#'?'
 9381+ 1  1D94	75 6E 01	        mov     fail,#001h
 9382+ 1  1D97			??0801:
 9383:
 9384:				        put_crlf                    ; end of test series
 9385+ 1			        putc    #13
 9386+ 2  1D97			??0804:
 9387+ 2			        ;jnb     SCON.1,putc_loop
 9388+ 2			        ;clr     SCON.1
 9389+ 2  1D97	75 99 0D	        mov     SBUF,#13
 9390+ 1			        putc    #10
 9391+ 2  1D9A			??0805:
 9392+ 2			        ;jnb     SCON.1,putc_loop
 9393+ 2			        ;clr     SCON.1
 9394+ 2  1D9A	75 99 0A	        mov     SBUF,#10
 9395:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 169



 Line  I  Addr  Code            Source

 9396:				        ;-- Test series P ------------------------------------------------------
 9397:				        ; Access to XRAM -- note that current tests are bare-bone minimal!
 9398:				        ; a.- <MOV DPTR, #16>
 9399:				        ; b.- <MOVX @DPTR, A>, <MOVX A, @DPTR>
 9400:				        ; c.- <MOVX @Ri, A>
 9401:				        ; d.- <MOVX A, @Ri>
 9402:
 9403:				        putc    #'P'                ; start of test series
 9404+ 1  1D9D			??0806:
 9405+ 1			        ;jnb     SCON.1,putc_loop
 9406+ 1			        ;clr     SCON.1
 9407+ 1  1D9D	75 99 50	        mov     SBUF,#'P'
 9408:
 9409:				        ; a.- <MOV DPTR, #16>
 9410:	  1DA0	75 83 65	        mov     DPH,#065h           ; initialize DPTR with known value...
 9411:	  1DA3	75 82 43	        mov     DPL,#043h
 9412:
 9413:	  1DA6	90 01 23	        mov     DPTR,#0123h         ; ...then load it through MOV...
 9414:	  1DA9	E5 83		        mov     a,DPH               ; ...and verify the load
 9415:	  1DAB	B4 01 0A	        cjne    a,#01h,tp_a0
 9416:	  1DAE	E5 82		        mov     a,DPL
 9417:	  1DB0	B4 23 05	        cjne    a,#23h,tp_a0
 9418:
 9419:				        eot     'a',tp_a0
 9420+ 1			        putc    #'a'
 9421+ 2  1DB3			??0808:
 9422+ 2			        ;jnb     SCON.1,putc_loop
 9423+ 2			        ;clr     SCON.1
 9424+ 2  1DB3	75 99 61	        mov     SBUF,#'a'
 9425+ 1  1DB6	80 06		        sjmp    ??0807
 9426+ 1  1DB8			tp_a0:  putc    #'?'
 9427+ 2  1DB8			??0809:
 9428+ 2			        ;jnb     SCON.1,putc_loop
 9429+ 2			        ;clr     SCON.1
 9430+ 2  1DB8	75 99 3F	        mov     SBUF,#'?'
 9431+ 1  1DBB	75 6E 01	        mov     fail,#001h
 9432+ 1  1DBE			??0807:
 9433:
 9434:
 9435:				        ; b.- <MOVX @DPTR, A>, <MOVX A, @DPTR>
 9436:				        ; We have no independent means to verify XRAM writes or reads, other
 9437:				        ; than the very instructions we're testing. So we should store a data
 9438:				        ; pattern on XRAM that is difficult to get back 'by chance'.
 9439:				        ; Ideally we would try all areas of XRAM, back-to-back operations, etc.
 9440:				        ; For the time being a simple word store will suffice.
 9441:	  1DBE	90 00 13	        mov     DPTR,#0013h         ; Store 55h, aah at XRAM[0013h]...
 9442:	  1DC1	74 55		        mov     A,#55h
 9443:	  1DC3	F0		        movx    @DPTR,a
 9444:	  1DC4	A3		        inc     DPTR
 9445:	  1DC5	F4		        cpl     a
 9446:	  1DC6	F0		        movx    @DPTR,a
 9447:
 9448:	  1DC7	90 00 13	        mov     DPTR,#0013h         ; ...then verify the store
 9449:	  1DCA	E0		        movx    a,@DPTR
 9450:	  1DCB	B4 55 0A	        cjne    a,#55h,tp_b0
 9451:	  1DCE	A3		        inc     DPTR

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 170



 Line  I  Addr  Code            Source

 9452:	  1DCF	E0		        movx    a,@DPTR
 9453:	  1DD0	B4 AA 05	        cjne    a,#0aah,tp_b0
 9454:
 9455:				        eot     'b',tp_b0
 9456+ 1			        putc    #'b'
 9457+ 2  1DD3			??0811:
 9458+ 2			        ;jnb     SCON.1,putc_loop
 9459+ 2			        ;clr     SCON.1
 9460+ 2  1DD3	75 99 62	        mov     SBUF,#'b'
 9461+ 1  1DD6	80 06		        sjmp    ??0810
 9462+ 1  1DD8			tp_b0:  putc    #'?'
 9463+ 2  1DD8			??0812:
 9464+ 2			        ;jnb     SCON.1,putc_loop
 9465+ 2			        ;clr     SCON.1
 9466+ 2  1DD8	75 99 3F	        mov     SBUF,#'?'
 9467+ 1  1DDB	75 6E 01	        mov     fail,#001h
 9468+ 1  1DDE			??0810:
 9469:
 9470:				        ; c.- <MOVX @Ri, A>
 9471:	  1DDE	74 79		        mov     a,#79h              ; Let [0013h] = 79h and [0014h] = 97h
 9472:	  1DE0	90 00 13	        mov     dptr,#0013h
 9473:	  1DE3	78 13		        mov     r0,#13h             ;
 9474:	  1DE5	79 14		        mov     r1,#14h             ; Write using @Ri...
 9475:	  1DE7	F2		        movx    @r0,a
 9476:	  1DE8	14		        dec     a
 9477:	  1DE9	E0		        movx    a,@DPTR             ; ...verify using DPTR
 9478:	  1DEA	B4 79 0D	        cjne    a,#79h,tp_c0
 9479:	  1DED	A3		        inc     DPTR
 9480:	  1DEE	74 97		        mov     a,#97h
 9481:	  1DF0	F3		        movx    @r1,a
 9482:	  1DF1	E0		        movx    a,@DPTR
 9483:	  1DF2	B4 97 05	        cjne    a,#097h,tp_c0
 9484:
 9485:				        eot     'c',tp_c0
 9486+ 1			        putc    #'c'
 9487+ 2  1DF5			??0814:
 9488+ 2			        ;jnb     SCON.1,putc_loop
 9489+ 2			        ;clr     SCON.1
 9490+ 2  1DF5	75 99 63	        mov     SBUF,#'c'
 9491+ 1  1DF8	80 06		        sjmp    ??0813
 9492+ 1  1DFA			tp_c0:  putc    #'?'
 9493+ 2  1DFA			??0815:
 9494+ 2			        ;jnb     SCON.1,putc_loop
 9495+ 2			        ;clr     SCON.1
 9496+ 2  1DFA	75 99 3F	        mov     SBUF,#'?'
 9497+ 1  1DFD	75 6E 01	        mov     fail,#001h
 9498+ 1  1E00			??0813:
 9499:
 9500:				        ; d.- <MOVX A, @Ri>
 9501:	  1E00	74 79		        mov     a,#79h              ; Let [0013h] = 79h and [0014h] = 97h
 9502:	  1E02	90 00 13	        mov     dptr,#0013h
 9503:	  1E05	78 13		        mov     r0,#13h
 9504:	  1E07	79 14		        mov     r1,#14h
 9505:	  1E09	F0		        movx    @DPTR,a             ; Write using DPTR...
 9506:	  1E0A	14		        dec a
 9507:	  1E0B	E2		        movx    a,@r0               ; ... verify using @Ri

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 171



 Line  I  Addr  Code            Source

 9508:	  1E0C	B4 79 0E	        cjne    a,#79h,tp_d0
 9509:	  1E0F	74 97		        mov     a,#97h
 9510:	  1E11	A3		        inc     DPTR
 9511:	  1E12	F0		        movx    @DPTR,a
 9512:	  1E13	14		        dec a
 9513:	  1E14	E3		        movx    a,@r1
 9514:	  1E15	B4 97 05	        cjne    a,#097h,tp_d0
 9515:
 9516:				        eot     'd',tp_d0
 9517+ 1			        putc    #'d'
 9518+ 2  1E18			??0817:
 9519+ 2			        ;jnb     SCON.1,putc_loop
 9520+ 2			        ;clr     SCON.1
 9521+ 2  1E18	75 99 64	        mov     SBUF,#'d'
 9522+ 1  1E1B	80 06		        sjmp    ??0816
 9523+ 1  1E1D			tp_d0:  putc    #'?'
 9524+ 2  1E1D			??0818:
 9525+ 2			        ;jnb     SCON.1,putc_loop
 9526+ 2			        ;clr     SCON.1
 9527+ 2  1E1D	75 99 3F	        mov     SBUF,#'?'
 9528+ 1  1E20	75 6E 01	        mov     fail,#001h
 9529+ 1  1E23			??0816:
 9530:
 9531:				        put_crlf                    ; end of test series
 9532+ 1			        putc    #13
 9533+ 2  1E23			??0819:
 9534+ 2			        ;jnb     SCON.1,putc_loop
 9535+ 2			        ;clr     SCON.1
 9536+ 2  1E23	75 99 0D	        mov     SBUF,#13
 9537+ 1			        putc    #10
 9538+ 2  1E26			??0820:
 9539+ 2			        ;jnb     SCON.1,putc_loop
 9540+ 2			        ;clr     SCON.1
 9541+ 2  1E26	75 99 0A	        mov     SBUF,#10
 9542:
 9543:				        ;-- Test series Q ------------------------------------------------------
 9544:				        ; MOVC instructions
 9545:				        ; a.- <MOVC A, @A + PC>
 9546:				        ; b.- <MOVC A, @A + DPTR>
 9547:
 9548:				        putc    #'Q'                ; start of test series
 9549+ 1  1E29			??0821:
 9550+ 1			        ;jnb     SCON.1,putc_loop
 9551+ 1			        ;clr     SCON.1
 9552+ 1  1E29	75 99 51	        mov     SBUF,#'Q'
 9553:
 9554:				        ; a.- <MOVC A, @A + PC>
 9555:	  1E2C	74 03		        mov     a,#03h              ; we'll read the 4th byte in the table...
 9556:	  1E2E	24 02		        add     a,#02h              ; ...and must account for intervening sjmp
 9557:	  1E30	83		        movc    a,@a+PC
 9558:	  1E31	80 04		        sjmp    tq0
 9559:
 9560:	  1E33	07 13 19 21	tq1:    db      07h, 13h, 19h, 21h
 9561:	  1E37	B4 21 05	tq0:    cjne    a,#21h,tq_a0
 9562:
 9563:				        eot     'a',tq_a0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 172



 Line  I  Addr  Code            Source

 9564+ 1			        putc    #'a'
 9565+ 2  1E3A			??0823:
 9566+ 2			        ;jnb     SCON.1,putc_loop
 9567+ 2			        ;clr     SCON.1
 9568+ 2  1E3A	75 99 61	        mov     SBUF,#'a'
 9569+ 1  1E3D	80 06		        sjmp    ??0822
 9570+ 1  1E3F			tq_a0:  putc    #'?'
 9571+ 2  1E3F			??0824:
 9572+ 2			        ;jnb     SCON.1,putc_loop
 9573+ 2			        ;clr     SCON.1
 9574+ 2  1E3F	75 99 3F	        mov     SBUF,#'?'
 9575+ 1  1E42	75 6E 01	        mov     fail,#001h
 9576+ 1  1E45			??0822:
 9577:
 9578:				        ; b.- <MOVC A, @A + DPTR>
 9579:	  1E45	90 1E 33	        mov   DPTR,#tq1
 9580:
 9581:	  1E48	74 00		        mov   a,#00h
 9582:	  1E4A	93		        movc  a,@a+DPTR
 9583:	  1E4B	B4 07 17	        cjne  a,#07h,tq_b0
 9584:
 9585:	  1E4E	74 01		        mov   a,#01h
 9586:	  1E50	93		        movc  a,@a+DPTR
 9587:	  1E51	B4 13 11	        cjne  a,#13h,tq_b0
 9588:
 9589:	  1E54	74 02		        mov   a,#02h
 9590:	  1E56	93		        movc  a,@a+DPTR
 9591:	  1E57	B4 19 0B	        cjne  a,#19h,tq_b0
 9592:
 9593:	  1E5A	74 03		        mov   a,#03h
 9594:	  1E5C	93		        movc  a,@a+DPTR
 9595:	  1E5D	B4 21 05	        cjne  a,#21h,tq_b0
 9596:
 9597:				        eot     'b',tq_b0
 9598+ 1			        putc    #'b'
 9599+ 2  1E60			??0826:
 9600+ 2			        ;jnb     SCON.1,putc_loop
 9601+ 2			        ;clr     SCON.1
 9602+ 2  1E60	75 99 62	        mov     SBUF,#'b'
 9603+ 1  1E63	80 06		        sjmp    ??0825
 9604+ 1  1E65			tq_b0:  putc    #'?'
 9605+ 2  1E65			??0827:
 9606+ 2			        ;jnb     SCON.1,putc_loop
 9607+ 2			        ;clr     SCON.1
 9608+ 2  1E65	75 99 3F	        mov     SBUF,#'?'
 9609+ 1  1E68	75 6E 01	        mov     fail,#001h
 9610+ 1  1E6B			??0825:
 9611:
 9612:				        put_crlf                    ; end of test series
 9613+ 1			        putc    #13
 9614+ 2  1E6B			??0828:
 9615+ 2			        ;jnb     SCON.1,putc_loop
 9616+ 2			        ;clr     SCON.1
 9617+ 2  1E6B	75 99 0D	        mov     SBUF,#13
 9618+ 1			        putc    #10
 9619+ 2  1E6E			??0829:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 173



 Line  I  Addr  Code            Source

 9620+ 2			        ;jnb     SCON.1,putc_loop
 9621+ 2			        ;clr     SCON.1
 9622+ 2  1E6E	75 99 0A	        mov     SBUF,#10
 9623:
 9624:
 9625:				        ;-- Test series R ------------------------------------------------------
 9626:				        ; ACALL, LCALL, JMP @A+DPTR, LJMP, AJMP instructions
 9627:				        ; a.- <ACALL addr8>     <-- uses LJMP too
 9628:				        ; b.- <LCALL addr16>    <-- uses LJMP too
 9629:				        ; c.- <JMP @A+DPTR>
 9630:				        ; d.- <LJMP addr16>
 9631:				        ; e.- <AJMP addr8>
 9632:				        ;
 9633:				        ; Biggest limitations:
 9634:				        ; .- Jumps to same page (== H addr byte) tested only at one page.
 9635:				        ;
 9636:				        ; Note RET is NOT tested here! we don't return from these calls, just
 9637:				        ; use them as jumps.
 9638:				        ;
 9639:
 9640:				        putc    #'R'                ; start of test series
 9641+ 1  1E71			??0830:
 9642+ 1			        ;jnb     SCON.1,putc_loop
 9643+ 1			        ;clr     SCON.1
 9644+ 1  1E71	75 99 52	        mov     SBUF,#'R'
 9645:
 9646:	  1E74	75 81 4F	        mov     SP,#4fh             ; Initialize SP...
 9647:	  1E77	75 50 00	        mov     50h,#00h            ; ...and clear stack area
 9648:	  1E7A	75 51 00	        mov     51h,#00h
 9649:	  1E7D	75 52 00	        mov     52h,#00h
 9650:	  1E80	75 53 00	        mov     53h,#00h
 9651:
 9652:				        ; a.- <ACALL addr8>
 9653:				        ; We should test all code pages eventually...
 9654:	  1E83	D1 87		        acall   tr_sub0             ; Do the call...
 9655:	  1E85	80 14		tr_rv0: sjmp    tr_a0
 9656:	  1E87			tr_sub0:
 9657:	  1E87	E5 81		        mov     A,SP
 9658:	  1E89	B4 51 0F	        cjne    A,#51h,tr_a0       ; ...verify the SP value...
 9659:	  1E8C	E5 50		        mov     A,50h
 9660:	  1E8E	B4 85 0A	        cjne    A,#LOW(tr_rv0),tr_a0 ; ...and verify the pushed ret address
 9661:	  1E91	E5 51		        mov     A,51h
 9662:	  1E93	B4 1E 05	        cjne    A,#HIGH(tr_rv0),tr_a0
 9663:
 9664:				        eot     'a',tr_a0
 9665+ 1			        putc    #'a'
 9666+ 2  1E96			??0832:
 9667+ 2			        ;jnb     SCON.1,putc_loop
 9668+ 2			        ;clr     SCON.1
 9669+ 2  1E96	75 99 61	        mov     SBUF,#'a'
 9670+ 1  1E99	80 06		        sjmp    ??0831
 9671+ 1  1E9B			tr_a0:  putc    #'?'
 9672+ 2  1E9B			??0833:
 9673+ 2			        ;jnb     SCON.1,putc_loop
 9674+ 2			        ;clr     SCON.1
 9675+ 2  1E9B	75 99 3F	        mov     SBUF,#'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 174



 Line  I  Addr  Code            Source

 9676+ 1  1E9E	75 6E 01	        mov     fail,#001h
 9677+ 1  1EA1			??0831:
 9678:
 9679:				        ; b.- <LCALL addr16>
 9680:	  1EA1	12 80 0C	        lcall   tr_sub1             ; Do the call...
 9681:	  1EA4	80 06		tr_rv1: sjmp    tr_b0
 9682:	  1EA6	00		tr_rv2: nop
 9683:				        eot     'b',tr_b0
 9684+ 1			        putc    #'b'
 9685+ 2  1EA7			??0835:
 9686+ 2			        ;jnb     SCON.1,putc_loop
 9687+ 2			        ;clr     SCON.1
 9688+ 2  1EA7	75 99 62	        mov     SBUF,#'b'
 9689+ 1  1EAA	80 06		        sjmp    ??0834
 9690+ 1  1EAC			tr_b0:  putc    #'?'
 9691+ 2  1EAC			??0836:
 9692+ 2			        ;jnb     SCON.1,putc_loop
 9693+ 2			        ;clr     SCON.1
 9694+ 2  1EAC	75 99 3F	        mov     SBUF,#'?'
 9695+ 1  1EAF	75 6E 01	        mov     fail,#001h
 9696+ 1  1EB2			??0834:
 9697:
 9698:
 9699:				        ; c.- <JMP @A+DPTR>
 9700:				        ; Note that tr_sub2 is at 8000h so that we test the A+DPTR carry
 9701:				        ; propagation. Any address xx00h would do.
 9702:	  1EB2	90 7F CD	        mov     DPTR,#(tr_sub2-33h) ; Prepare DPTR and A so that their sum
 9703:	  1EB5	74 33		        mov     a,#33h              ; gives the target address.
 9704:	  1EB7	73		        jmp     @a+DPTR
 9705:	  1EB8	02 1E CA	        jmp     tr_c0
 9706:	  1EBB	00		        nop
 9707:	  1EBC	00		        nop
 9708:	  1EBD	74 00		tr_rv3: mov     a,#00h
 9709:	  1EBF	74 00		        mov     a,#00h
 9710:	  1EC1	74 00		        mov     a,#00h
 9711:	  1EC3	74 00		        mov     a,#00h
 9712:
 9713:				        eot     'c',tr_c0
 9714+ 1			        putc    #'c'
 9715+ 2  1EC5			??0838:
 9716+ 2			        ;jnb     SCON.1,putc_loop
 9717+ 2			        ;clr     SCON.1
 9718+ 2  1EC5	75 99 63	        mov     SBUF,#'c'
 9719+ 1  1EC8	80 06		        sjmp    ??0837
 9720+ 1  1ECA			tr_c0:  putc    #'?'
 9721+ 2  1ECA			??0839:
 9722+ 2			        ;jnb     SCON.1,putc_loop
 9723+ 2			        ;clr     SCON.1
 9724+ 2  1ECA	75 99 3F	        mov     SBUF,#'?'
 9725+ 1  1ECD	75 6E 01	        mov     fail,#001h
 9726+ 1  1ED0			??0837:
 9727:
 9728:				        ; d.- <LJMP addr16>
 9729:	  1ED0	02 80 06	        ljmp    tr_sub3
 9730:	  1ED3	02 1E DF	        jmp     tr_d0
 9731:	  1ED6	00		        nop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 175



 Line  I  Addr  Code            Source

 9732:	  1ED7	00		        nop
 9733:	  1ED8	00		tr_rv4: nop
 9734:	  1ED9	00		        nop
 9735:				        eot     'd',tr_d0
 9736+ 1			        putc    #'d'
 9737+ 2  1EDA			??0841:
 9738+ 2			        ;jnb     SCON.1,putc_loop
 9739+ 2			        ;clr     SCON.1
 9740+ 2  1EDA	75 99 64	        mov     SBUF,#'d'
 9741+ 1  1EDD	80 06		        sjmp    ??0840
 9742+ 1  1EDF			tr_d0:  putc    #'?'
 9743+ 2  1EDF			??0842:
 9744+ 2			        ;jnb     SCON.1,putc_loop
 9745+ 2			        ;clr     SCON.1
 9746+ 2  1EDF	75 99 3F	        mov     SBUF,#'?'
 9747+ 1  1EE2	75 6E 01	        mov     fail,#001h
 9748+ 1  1EE5			??0840:
 9749:
 9750:				        ; e.- <AJMP addr8>
 9751:				        ; We should test all code pages eventually...
 9752:	  1EE5	74 00		        mov     a,#00h
 9753:	  1EE7	C1 EB		        ajmp    tr_ajmp0            ; Do the jump...
 9754:	  1EE9	80 02		        sjmp    tr_rv5
 9755:	  1EEB			tr_ajmp0:
 9756:	  1EEB	74 42		        mov     a,#042h
 9757:	  1EED			tr_rv5:
 9758:	  1EED	B4 42 06	        cjne    A,#42h,tr_e0       ; ...and make sure we've actually been there
 9759:	  1EF0	00		        nop
 9760:
 9761:				        eot     'e',tr_e0
 9762+ 1			        putc    #'e'
 9763+ 2  1EF1			??0844:
 9764+ 2			        ;jnb     SCON.1,putc_loop
 9765+ 2			        ;clr     SCON.1
 9766+ 2  1EF1	75 99 65	        mov     SBUF,#'e'
 9767+ 1  1EF4	80 06		        sjmp    ??0843
 9768+ 1  1EF6			tr_e0:  putc    #'?'
 9769+ 2  1EF6			??0845:
 9770+ 2			        ;jnb     SCON.1,putc_loop
 9771+ 2			        ;clr     SCON.1
 9772+ 2  1EF6	75 99 3F	        mov     SBUF,#'?'
 9773+ 1  1EF9	75 6E 01	        mov     fail,#001h
 9774+ 1  1EFC			??0843:
 9775:
 9776:				        put_crlf                    ; end of test series
 9777+ 1			        putc    #13
 9778+ 2  1EFC			??0846:
 9779+ 2			        ;jnb     SCON.1,putc_loop
 9780+ 2			        ;clr     SCON.1
 9781+ 2  1EFC	75 99 0D	        mov     SBUF,#13
 9782+ 1			        putc    #10
 9783+ 2  1EFF			??0847:
 9784+ 2			        ;jnb     SCON.1,putc_loop
 9785+ 2			        ;clr     SCON.1
 9786+ 2  1EFF	75 99 0A	        mov     SBUF,#10
 9787:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 176



 Line  I  Addr  Code            Source

 9788:
 9789:				        ;-- Test series S ------------------------------------------------------
 9790:				        ; RET, RETI instructions
 9791:				        ; a.- <RET>
 9792:				        ; b.- <RETI>
 9793:				        ;
 9794:				        ; RETs to different code pages (!= H addr byte) not tested!
 9795:				        ; Interrupt flag stuff not tested, only RET functionality
 9796:
 9797:				        putc    #'S'                ; start of test series
 9798+ 1  1F02			??0848:
 9799+ 1			        ;jnb     SCON.1,putc_loop
 9800+ 1			        ;clr     SCON.1
 9801+ 1  1F02	75 99 53	        mov     SBUF,#'S'
 9802:
 9803:
 9804:				        ; a.- <RET>
 9805:	  1F05	75 81 4F	        mov     SP,#4fh             ; Initialize SP...
 9806:	  1F08	75 4F 1F	        mov     4fh,#HIGH(s_sub0)   ; ...and load stack area with return
 9807:	  1F0B	75 4E 19	        mov     4eh,#LOW(s_sub0)    ; addresses to be tested
 9808:	  1F0E	75 4D 1F	        mov     4dh,#HIGH(s_sub1)
 9809:	  1F11	75 4C 23	        mov     4ch,#LOW(s_sub1)
 9810:
 9811:	  1F14	22		        ret                         ; Do the ret...
 9812:	  1F15	80 16		        sjmp    ts_a0
 9813:	  1F17	74 00		        mov     A,#00h
 9814:	  1F19	E5 81		s_sub0: mov     A,SP
 9815:	  1F1B	B4 4D 0F	        cjne    A,#4dh,ts_a0       ; ... and verify the SP value
 9816:
 9817:	  1F1E	22		        ret                         ; Do another ret...
 9818:	  1F1F	80 0C		        sjmp    ts_a0
 9819:	  1F21	74 00		        mov     A,#00h
 9820:	  1F23	E5 81		s_sub1: mov     A,SP
 9821:	  1F25	B4 4B 05	        cjne    A,#4bh,ts_a0       ; ... and verify the SP value
 9822:
 9823:				        eot     'a',ts_a0
 9824+ 1			        putc    #'a'
 9825+ 2  1F28			??0850:
 9826+ 2			        ;jnb     SCON.1,putc_loop
 9827+ 2			        ;clr     SCON.1
 9828+ 2  1F28	75 99 61	        mov     SBUF,#'a'
 9829+ 1  1F2B	80 06		        sjmp    ??0849
 9830+ 1  1F2D			ts_a0:  putc    #'?'
 9831+ 2  1F2D			??0851:
 9832+ 2			        ;jnb     SCON.1,putc_loop
 9833+ 2			        ;clr     SCON.1
 9834+ 2  1F2D	75 99 3F	        mov     SBUF,#'?'
 9835+ 1  1F30	75 6E 01	        mov     fail,#001h
 9836+ 1  1F33			??0849:
 9837:
 9838:
 9839:				        ; a.- <RETI>
 9840:	  1F33	75 81 4F	        mov     SP,#4fh             ; Initialize SP...
 9841:	  1F36	75 4F 1F	        mov     4fh,#HIGH(s_sub2)   ; ...and load stack area with return
 9842:	  1F39	75 4E 47	        mov     4eh,#LOW(s_sub2)    ; addresses to be tested
 9843:	  1F3C	75 4D 1F	        mov     4dh,#HIGH(s_sub3)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 177



 Line  I  Addr  Code            Source

 9844:	  1F3F	75 4C 51	        mov     4ch,#LOW(s_sub3)
 9845:
 9846:	  1F42	22		        ret                         ; Do the ret...
 9847:	  1F43	80 E8		        sjmp    ts_a0
 9848:	  1F45	74 00		        mov     A,#00h
 9849:	  1F47	E5 81		s_sub2: mov     A,SP
 9850:	  1F49	B4 4D 0F	        cjne    A,#4dh,ts_b0       ; ... and verify the SP value
 9851:
 9852:	  1F4C	22		        ret                         ; Do another ret...
 9853:	  1F4D	80 DE		        sjmp    ts_a0
 9854:	  1F4F	74 00		        mov     A,#00h
 9855:	  1F51	E5 81		s_sub3: mov     A,SP
 9856:	  1F53	B4 4B 05	        cjne    A,#4bh,ts_b0       ; ... and verify the SP value
 9857:
 9858:				        eot     'b',ts_b0
 9859+ 1			        putc    #'b'
 9860+ 2  1F56			??0853:
 9861+ 2			        ;jnb     SCON.1,putc_loop
 9862+ 2			        ;clr     SCON.1
 9863+ 2  1F56	75 99 62	        mov     SBUF,#'b'
 9864+ 1  1F59	80 06		        sjmp    ??0852
 9865+ 1  1F5B			ts_b0:  putc    #'?'
 9866+ 2  1F5B			??0854:
 9867+ 2			        ;jnb     SCON.1,putc_loop
 9868+ 2			        ;clr     SCON.1
 9869+ 2  1F5B	75 99 3F	        mov     SBUF,#'?'
 9870+ 1  1F5E	75 6E 01	        mov     fail,#001h
 9871+ 1  1F61			??0852:
 9872:
 9873:				        ; Lots of things can go badly and we wouldn't know with this test...
 9874:				        put_crlf                    ; end of test series
 9875+ 1			        putc    #13
 9876+ 2  1F61			??0855:
 9877+ 2			        ;jnb     SCON.1,putc_loop
 9878+ 2			        ;clr     SCON.1
 9879+ 2  1F61	75 99 0D	        mov     SBUF,#13
 9880+ 1			        putc    #10
 9881+ 2  1F64			??0856:
 9882+ 2			        ;jnb     SCON.1,putc_loop
 9883+ 2			        ;clr     SCON.1
 9884+ 2  1F64	75 99 0A	        mov     SBUF,#10
 9885:
 9886:				        ;-- Test series T ------------------------------------------------------
 9887:				        ; MUL, DIV instructions
 9888:				        ; a.- <DIV>
 9889:				        ; b.- <MUL>
 9890:				        ;
 9891:
 9892:				        putc    #'T'                ; start of test series
 9893+ 1  1F67			??0857:
 9894+ 1			        ;jnb     SCON.1,putc_loop
 9895+ 1			        ;clr     SCON.1
 9896+ 1  1F67	75 99 54	        mov     SBUF,#'T'
 9897:
 9898:				        ; a.- <DIV>
 9899:	  1F6A	75 F0 07	        mov     B,#07h              ; First of all, make sure B can be read back

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 178



 Line  I  Addr  Code            Source

 9900:	  1F6D	74 13		        mov     A,#13h
 9901:	  1F6F	E5 F0		        mov     A,B
 9902:	  1F71	B4 07 37	        cjne    A,#07h,tt_a0
 9903:
 9904:				        ; Now do a few representative DIVs using a table. The table has the
 9905:				        ; following format:
 9906:				        ; denominator, numerator, overflow, quotient, remainder
 9907:				        ; Where 'overflow' is 00h or 04h.
 9908:
 9909:				        ; DPTR will point to the start of the table, r0 will be the current data
 9910:				        ; byte offset and r1 the number of test cases remaiining.
 9911:	  1F74	90 1F B3	        mov     DPTR,#tt_a_tab
 9912:	  1F77	78 00		        mov     r0,#00h
 9913:	  1F79	79 09		        mov     r1,#((tt_a_tab_end-tt_a_tab)/5)
 9914:
 9915:	  1F7B			tt_a_loop:
 9916:	  1F7B	E8		        mov     a,r0
 9917:	  1F7C	08		        inc     r0
 9918:	  1F7D	93		        movc    a,@a+DPTR
 9919:	  1F7E	F5 F0		        mov     B,a
 9920:	  1F80	E8		        mov     a,r0
 9921:	  1F81	08		        inc     r0
 9922:	  1F82	93		        movc    a,@a+DPTR
 9923:	  1F83	84		        div     ab
 9924:	  1F84	F5 60		        mov     dir0,a
 9925:
 9926:	  1F86	E8		        mov     a,r0                ; Get expected OV flag
 9927:	  1F87	08		        inc     r0
 9928:	  1F88	93		        movc    a,@a+DPTR
 9929:	  1F89	70 15		        jnz     tt_a_divzero        ; If OV expected, skip verification of
 9930:	  1F8B	E5 D0		        mov     a,PSW               ; quotient and remainder
 9931:	  1F8D	54 04		        anl     a,#04h
 9932:	  1F8F	70 1A		        jnz     tt_a0
 9933:
 9934:	  1F91	E8		        mov     a,r0                ; Verify quotient...
 9935:	  1F92	08		        inc     r0
 9936:	  1F93	93		        movc    a,@a+DPTR
 9937:	  1F94	B5 60 14	        cjne    a,dir0,tt_a0
 9938:	  1F97	E8		        mov     a,r0                ; ...and verify remainder
 9939:	  1F98	08		        inc     r0
 9940:	  1F99	93		        movc    a,@a+DPTR
 9941:	  1F9A	B5 F0 0E	        cjne    a,B,tt_a0
 9942:	  1F9D	02 1F A2	        jmp     tt_a_next
 9943:
 9944:	  1FA0			tt_a_divzero:
 9945:	  1FA0	08		        inc     r0
 9946:	  1FA1	08		        inc     r0
 9947:	  1FA2			tt_a_next:
 9948:	  1FA2	19		        dec     r1                  ; go for next test vector, if any
 9949:	  1FA3	E9		        mov     a,r1
 9950:	  1FA4	70 D5		        jnz     tt_a_loop
 9951:
 9952:				        eot     'a',tt_a0
 9953+ 1			        putc    #'a'
 9954+ 2  1FA6			??0859:
 9955+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 179



 Line  I  Addr  Code            Source

 9956+ 2			        ;clr     SCON.1
 9957+ 2  1FA6	75 99 61	        mov     SBUF,#'a'
 9958+ 1  1FA9	80 06		        sjmp    ??0858
 9959+ 1  1FAB			tt_a0:  putc    #'?'
 9960+ 2  1FAB			??0860:
 9961+ 2			        ;jnb     SCON.1,putc_loop
 9962+ 2			        ;clr     SCON.1
 9963+ 2  1FAB	75 99 3F	        mov     SBUF,#'?'
 9964+ 1  1FAE	75 6E 01	        mov     fail,#001h
 9965+ 1  1FB1			??0858:
 9966:	  1FB1	80 2D		        sjmp    tt_a_tab_end
 9967:
 9968:	  1FB3			tt_a_tab:
 9969:	  1FB3	07 13 00 02	        db      7,19,0,2,5
	  1FB7	05
 9970:	  1FB8	07 11 00 02	        db      7,17,0,2,3
	  1FBC	03
 9971:	  1FBD	07 0D 00 01	        db      7,13,0,1,6
	  1FC1	06
 9972:	  1FC2	0D 11 00 01	        db      13,17,0,1,4
	  1FC6	04
 9973:	  1FC7	11 0D 00 00	        db      17,13,0,0,13
	  1FCB	0D
 9974:	  1FCC	00 0D 04 00	        db      0,13,4,0,13
	  1FD0	0D
 9975:	  1FD1	80 87 00 01	        db      80h,87h,0,1,7
	  1FD5	07
 9976:	  1FD6	01 FF 00 FF	        db      1,255,0,255,0
	  1FDA	00
 9977:	  1FDB	02 FF 00 7F	        db      2,255,0,127,1
	  1FDF	01
 9978:	  1FE0			tt_a_tab_end:
 9979:
 9980:				        ; b.- <MUL>
 9981:
 9982:				        ; Do with MUL the same we just did with DIV. The test data table has
 9983:				        ; the following format:
 9984:				        ; denominator, numerator, product high byte, product low byte.
 9985:
 9986:				        ; DPTR will point to the start of the table, r0 will be the current data
 9987:				        ; byte offset and r1 the number of test cases remaiining.
 9988:	  1FE0	90 20 21	        mov     DPTR,#tt_b_tab
 9989:	  1FE3	78 00		        mov     r0,#00h
 9990:	  1FE5	79 09		        mov     r1,#((tt_b_tab_end-tt_b_tab)/4)
 9991:
 9992:	  1FE7			tt_b_loop:
 9993:	  1FE7	E8		        mov     a,r0                ; Load B with test data...
 9994:	  1FE8	08		        inc     r0
 9995:	  1FE9	93		        movc    a,@a+DPTR
 9996:	  1FEA	F5 F0		        mov     B,a
 9997:	  1FEC	E8		        mov     a,r0                ; ...then load A with test data...
 9998:	  1FED	08		        inc     r0
 9999:	  1FEE	93		        movc    a,@a+DPTR
10000:	  1FEF	A4		        mul     ab                  ; and do the MUL
10001:	  1FF0	F5 60		        mov     dir0,a              ; Save A for later checks
10002:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 180



 Line  I  Addr  Code            Source

10003:	  1FF2	E8		        mov     a,r0                ; Verify product high byte
10004:				        ;inc     r0
10005:	  1FF3	93		        movc    a,@a+DPTR
10006:	  1FF4	60 08		        jz      tt_b_noovf
10007:
10008:	  1FF6	E5 D0		        mov     a,PSW               ; overflow expected
10009:	  1FF8	54 04		        anl     a,#04h
10010:	  1FFA	60 1D		        jz      tt_b0
10011:	  1FFC	80 06		        sjmp    tt_b_0
10012:
10013:	  1FFE			tt_b_noovf:
10014:	  1FFE	E5 D0		        mov     a,PSW               ; no overflow expected
10015:	  2000	54 04		        anl     a,#04h
10016:	  2002	70 15		        jnz     tt_b0
10017:
10018:	  2004			tt_b_0:
10019:	  2004	E8		        mov     a,r0                ; Verify product high byte
10020:	  2005	08		        inc     r0
10021:	  2006	93		        movc    a,@a+DPTR
10022:	  2007	B5 F0 0F	        cjne    a,B,tt_b0
10023:	  200A	E8		        mov     a,r0                ; ...and verify low byte
10024:	  200B	08		        inc     r0
10025:	  200C	93		        movc    a,@a+DPTR
10026:	  200D	B5 60 09	        cjne    a,dir0,tt_b0
10027:
10028:	  2010	19		        dec     r1                  ; go for next test vector, if any
10029:	  2011	E9		        mov     a,r1
10030:	  2012	70 D3		        jnz     tt_b_loop
10031:
10032:				        eot     'b',tt_b0
10033+ 1			        putc    #'b'
10034+ 2  2014			??0862:
10035+ 2			        ;jnb     SCON.1,putc_loop
10036+ 2			        ;clr     SCON.1
10037+ 2  2014	75 99 62	        mov     SBUF,#'b'
10038+ 1  2017	80 06		        sjmp    ??0861
10039+ 1  2019			tt_b0:  putc    #'?'
10040+ 2  2019			??0863:
10041+ 2			        ;jnb     SCON.1,putc_loop
10042+ 2			        ;clr     SCON.1
10043+ 2  2019	75 99 3F	        mov     SBUF,#'?'
10044+ 1  201C	75 6E 01	        mov     fail,#001h
10045+ 1  201F			??0861:
10046:	  201F	80 24		        sjmp    tt_b_tab_end
10047:
10048:	  2021			tt_b_tab:
10049:	  2021	07 13 00 85	        db      7,19,0,133
10050:	  2025	07 11 00 77	        db      7,17,0,119
10051:	  2029	07 0D 00 5B	        db      7,13,0,91
10052:	  202D	0D 11 00 DD	        db      13,17,0,221
10053:	  2031	11 0D 00 DD	        db      17,13,0,221
10054:	  2035	00 0D 00 00	        db      0,13,0,0
10055:	  2039	80 87 43 80	        db      80h,87h,43h,80h
10056:	  203D	01 FF 00 FF	        db      1,255,0,255
10057:	  2041	02 FF 01 FE	        db      2,255,01h,0feh
10058:	  2045			tt_b_tab_end:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 181



 Line  I  Addr  Code            Source

10059:
10060:				        put_crlf                    ; end of test series
10061+ 1			        putc    #13
10062+ 2  2045			??0864:
10063+ 2			        ;jnb     SCON.1,putc_loop
10064+ 2			        ;clr     SCON.1
10065+ 2  2045	75 99 0D	        mov     SBUF,#13
10066+ 1			        putc    #10
10067+ 2  2048			??0865:
10068+ 2			        ;jnb     SCON.1,putc_loop
10069+ 2			        ;clr     SCON.1
10070+ 2  2048	75 99 0A	        mov     SBUF,#10
10071:
10072:
10073:
10074:				        ;-- Test series U ------------------------------------------------------
10075:				        ; Register banks
10076:				        ; a.- Write to register, read from indirect address.
10077:				        ; a.- Write to indirect address, read from register.
10078:				        ;
10079:
10080:				        putc    #'U'                ; start of test series
10081+ 1  204B			??0866:
10082+ 1			        ;jnb     SCON.1,putc_loop
10083+ 1			        ;clr     SCON.1
10084+ 1  204B	75 99 55	        mov     SBUF,#'U'
10085:
10086:
10087:	  204E	75 D0 00	        mov     PSW,#00h            ; Test bank 0
10088:	  2051	74 01		        mov     a,#00h + 1
10089:	  2053	12 20 70	        call    tu_a_test
10090:
10091:	  2056	75 D0 08	        mov     PSW,#08h            ; Test bank 1
10092:	  2059	74 09		        mov     a,#08h + 1
10093:	  205B	12 20 70	        call    tu_a_test
10094:
10095:	  205E	75 D0 10	        mov     PSW,#10h            ; Test bank 2
10096:	  2061	74 11		        mov     a,#10h + 1
10097:	  2063	12 20 70	        call    tu_a_test
10098:
10099:	  2066	75 D0 18	        mov     PSW,#18h            ; Test bank 3
10100:	  2069	74 19		        mov     a,#18h + 1
10101:	  206B	12 20 70	        call    tu_a_test
10102:
10103:	  206E	80 1E		        sjmp    tu_a_done
10104:
10105:	  2070			tu_a_test:
10106:	  2070	F8		        mov     r0,a                ; R0 points to R1 in the selected bank.
10107:
10108:	  2071	79 12		        mov     r1,#12h             ; Write to registers R1 and R7
10109:	  2073	7F 34		        mov     r7,#34h
10110:
10111:	  2075	E6		        mov     a,@r0               ; Check R1
10112:	  2076	B4 12 1B	        cjne    a,#12h,tu_a0
10113:	  2079	74 56		        mov     a,#56h              ; Ok, now write to R1 with reg addressing...
10114:	  207B	F6		        mov     @r0,a               ; ...and check by reading in indirect.

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 182



 Line  I  Addr  Code            Source

10115:	  207C	B9 56 15	        cjne    r1,#56h,tu_a0
10116:
10117:	  207F	E8		        mov     a,r0                ; Set R0 to point to R7 in selected bank
10118:	  2080	24 06		        add     a,#06h
10119:	  2082	F8		        mov     r0,a
10120:	  2083	E6		        mov     a,@r0               ; Check R7
10121:	  2084	B4 34 0D	        cjne    a,#34h,tu_a0
10122:
10123:	  2087	74 78		        mov     a,#78h              ; Ok, now write to R7 with reg addressing...
10124:	  2089	F6		        mov     @r0,a               ; ...and check by reading in indirect.
10125:	  208A	B4 78 07	        cjne    a,#78h,tu_a0
10126:
10127:	  208D	22		        ret
10128:
10129:	  208E			tu_a_done:
10130:	  208E	00		        nop
10131:				        eot     'a',tu_a0
10132+ 1			        putc    #'a'
10133+ 2  208F			??0868:
10134+ 2			        ;jnb     SCON.1,putc_loop
10135+ 2			        ;clr     SCON.1
10136+ 2  208F	75 99 61	        mov     SBUF,#'a'
10137+ 1  2092	80 06		        sjmp    ??0867
10138+ 1  2094			tu_a0:  putc    #'?'
10139+ 2  2094			??0869:
10140+ 2			        ;jnb     SCON.1,putc_loop
10141+ 2			        ;clr     SCON.1
10142+ 2  2094	75 99 3F	        mov     SBUF,#'?'
10143+ 1  2097	75 6E 01	        mov     fail,#001h
10144+ 1  209A			??0867:
10145:
10146:				        put_crlf                    ; end of test series
10147+ 1			        putc    #13
10148+ 2  209A			??0870:
10149+ 2			        ;jnb     SCON.1,putc_loop
10150+ 2			        ;clr     SCON.1
10151+ 2  209A	75 99 0D	        mov     SBUF,#13
10152+ 1			        putc    #10
10153+ 2  209D			??0871:
10154+ 2			        ;jnb     SCON.1,putc_loop
10155+ 2			        ;clr     SCON.1
10156+ 2  209D	75 99 0A	        mov     SBUF,#10
10157:
10158:
10159:				        ;-- Test series V ------------------------------------------------------
10160:				        ; NOP and potentially unimplemented opcodes (DA and XCHD).
10161:				        ; In order to make sure an instruction does nothing we would have to
10162:				        ; check everything: IRAM, XRAM and SFRs. We will leave that to the
10163:				        ; zexall-style tester. In this test we rely on the cosimulation with
10164:				        ; software simulator B51.
10165:				        ;
10166:				        ; a.- Opcode 0A5h
10167:				        ; b.- DA
10168:				        ; c.- XCHD A, @Ri
10169:
10170:				        putc    #'V'                ; start of test series

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 183



 Line  I  Addr  Code            Source

10171+ 1  20A0			??0872:
10172+ 1			        ;jnb     SCON.1,putc_loop
10173+ 1			        ;clr     SCON.1
10174+ 1  20A0	75 99 56	        mov     SBUF,#'V'
10175:
10176:
10177:				        ; a.- <0A5>
10178:	  20A3	A5		        db      0a5h                ; Put opcode right there...
10179:	  20A4	00		        nop                         ; and do no check at all -- rely on B51.
10180:				        ; we'll catch any unintended side effects by comparing the logs.
10181:				        ; Obviously this is no good for any core other then light52...
10182:
10183:				        eot     'a',tv_a0
10184+ 1			        putc    #'a'
10185+ 2  20A5			??0874:
10186+ 2			        ;jnb     SCON.1,putc_loop
10187+ 2			        ;clr     SCON.1
10188+ 2  20A5	75 99 61	        mov     SBUF,#'a'
10189+ 1  20A8	80 06		        sjmp    ??0873
10190+ 1  20AA			tv_a0:  putc    #'?'
10191+ 2  20AA			??0875:
10192+ 2			        ;jnb     SCON.1,putc_loop
10193+ 2			        ;clr     SCON.1
10194+ 2  20AA	75 99 3F	        mov     SBUF,#'?'
10195+ 1  20AD	75 6E 01	        mov     fail,#001h
10196+ 1  20B0			??0873:
10197:
10198:				        ; b.- <DA>
10199:				        ifdef   BCD
10200:				        ; DA implemented in CPU
10201:				        mov     psw,#000h           ; Al>9, AC=0
10202:				        mov     a,#01ah
10203:				        da      a
10204:				        mov     saved_psw,psw
10205:				        cjne    a,#020h,tv_b0
10206:				        mov     a,saved_psw
10207:				        cjne    a,#001h,tv_b0
10208:
10209:				        mov     psw,#040h           ; Al<9, AC=1
10210:				        mov     a,#012h
10211:				        da      a
10212:				        mov     saved_psw,psw
10213:				        cjne    a,#018h,tv_b0
10214:				        mov     a,saved_psw
10215:				        cjne    a,#040h,tv_b0
10216:
10217:				        mov     psw,#040h           ; Al>9, AC=1 (hardly possible in BCD)
10218:				        mov     a,#01ah
10219:				        da      a
10220:				        mov     saved_psw,psw
10221:				        cjne    a,#020h,tv_b0
10222:				        mov     a,saved_psw
10223:				        cjne    a,#041h,tv_b0
10224:
10225:				        mov     psw,#0c0h           ; AC=CY=1
10226:				        mov     a,#000h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 184



 Line  I  Addr  Code            Source

10227:				        da      a
10228:				        mov     saved_psw,psw
10229:				        cjne    a,#066h,tv_b0
10230:				        mov     a,saved_psw
10231:				        cjne    a,#0c0h,tv_b0
10232:
10233:				        mov     psw,#040h           ; DA generates carry
10234:				        mov     a,#0fah
10235:				        da      a
10236:				        mov     saved_psw,psw
10237:				        cjne    a,#060h,tv_b0
10238:				        mov     a,saved_psw
10239:				        cjne    a,#0c0h,tv_b0
10240:
10241:				        else
10242:				        ; DA unimplemented in CPU
10243:	  20B0	74 1A		        mov     a,#01ah             ; This would be adjusted by DA to 020h...
10244:	  20B2	D4		        da      a                   ; ...make sure it isn't
10245:	  20B3	B4 1A 06	        cjne    a,#01ah,tv_b0
10246:	  20B6	00		        nop
10247:				        endif
10248:
10249:				        eot     'b',tv_b0
10250+ 1			        putc    #'b'
10251+ 2  20B7			??0877:
10252+ 2			        ;jnb     SCON.1,putc_loop
10253+ 2			        ;clr     SCON.1
10254+ 2  20B7	75 99 62	        mov     SBUF,#'b'
10255+ 1  20BA	80 06		        sjmp    ??0876
10256+ 1  20BC			tv_b0:  putc    #'?'
10257+ 2  20BC			??0878:
10258+ 2			        ;jnb     SCON.1,putc_loop
10259+ 2			        ;clr     SCON.1
10260+ 2  20BC	75 99 3F	        mov     SBUF,#'?'
10261+ 1  20BF	75 6E 01	        mov     fail,#001h
10262+ 1  20C2			??0876:
10263:
10264:				        ; c.- XCHD a,@ri
10265:				        ifdef   BCD
10266:				        ; XCHD implemented in CPU, test opcode.
10267:				        mov     r0,#031h
10268:				        mov     r1,#032h
10269:				        mov     a,#042h
10270:				        mov     @r0,a
10271:				        inc     a
10272:				        mov     @r1,a
10273:				        mov     a,#76h
10274:				        xchd    a,@r0
10275:				        cjne    a,#072h,tv_c0
10276:				        mov     a,31h
10277:				        cjne    a,#046h,tv_c0
10278:				        mov     a,#79h
10279:				        xchd    a,@r1
10280:				        cjne    a,#073h,tv_c0
10281:				        mov     a,32h
10282:				        cjne    a,#049h,tv_c0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 185



 Line  I  Addr  Code            Source

10283:				        else
10284:				        ; XCHD unimplemented, make sure the nibbles aren't exchanged.
10285:	  20C2	78 31		        mov     r0,#031h
10286:	  20C4	79 32		        mov     r1,#032h
10287:	  20C6	74 42		        mov     a,#042h
10288:	  20C8	F6		        mov     @r0,a
10289:	  20C9	F7		        mov     @r1,a
10290:	  20CA	74 76		        mov     a,#76h
10291:	  20CC	D6		        xchd    a,@r0
10292:	  20CD	B4 76 0B	        cjne    a,#076h,tv_c0
10293:	  20D0	74 76		        mov     a,#76h
10294:	  20D2	D7		        xchd    a,@r1
10295:	  20D3	B4 76 05	        cjne    a,#076h,tv_c0
10296:				        endif
10297:
10298:				        eot     'c',tv_c0
10299+ 1			        putc    #'c'
10300+ 2  20D6			??0880:
10301+ 2			        ;jnb     SCON.1,putc_loop
10302+ 2			        ;clr     SCON.1
10303+ 2  20D6	75 99 63	        mov     SBUF,#'c'
10304+ 1  20D9	80 06		        sjmp    ??0879
10305+ 1  20DB			tv_c0:  putc    #'?'
10306+ 2  20DB			??0881:
10307+ 2			        ;jnb     SCON.1,putc_loop
10308+ 2			        ;clr     SCON.1
10309+ 2  20DB	75 99 3F	        mov     SBUF,#'?'
10310+ 1  20DE	75 6E 01	        mov     fail,#001h
10311+ 1  20E1			??0879:
10312:
10313:				        put_crlf                    ; end of test series
10314+ 1			        putc    #13
10315+ 2  20E1			??0882:
10316+ 2			        ;jnb     SCON.1,putc_loop
10317+ 2			        ;clr     SCON.1
10318+ 2  20E1	75 99 0D	        mov     SBUF,#13
10319+ 1			        putc    #10
10320+ 2  20E4			??0883:
10321+ 2			        ;jnb     SCON.1,putc_loop
10322+ 2			        ;clr     SCON.1
10323+ 2  20E4	75 99 0A	        mov     SBUF,#10
10324:
10325:
10326:				        ;-- Template for test series -------------------------------------------
10327:
10328:				        ;-- Test series X ------------------------------------------------------
10329:				        ;
10330:				        ; a.-
10331:
10332:				        ;putc    #'X'                ; start of test series
10333:				        ;put_crlf                    ; end of test series
10334:
10335:				        ;-----------------------------------------------------------------------
10336:
10337:				        ; Test cases finished. Now print completion message dependent on the
10338:				        ; value of the fail flag.

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 186



 Line  I  Addr  Code            Source

10339:
10340:	  20E7	E5 6E		        mov     a,fail
10341:	  20E9	70 1A		        jnz     test_failed
10342:
10343:				        put_crlf
10344+ 1			        putc    #13
10345+ 2  20EB			??0884:
10346+ 2			        ;jnb     SCON.1,putc_loop
10347+ 2			        ;clr     SCON.1
10348+ 2  20EB	75 99 0D	        mov     SBUF,#13
10349+ 1			        putc    #10
10350+ 2  20EE			??0885:
10351+ 2			        ;jnb     SCON.1,putc_loop
10352+ 2			        ;clr     SCON.1
10353+ 2  20EE	75 99 0A	        mov     SBUF,#10
10354:				        putc    #'P'
10355+ 1  20F1			??0886:
10356+ 1			        ;jnb     SCON.1,putc_loop
10357+ 1			        ;clr     SCON.1
10358+ 1  20F1	75 99 50	        mov     SBUF,#'P'
10359:				        putc    #'A'
10360+ 1  20F4			??0887:
10361+ 1			        ;jnb     SCON.1,putc_loop
10362+ 1			        ;clr     SCON.1
10363+ 1  20F4	75 99 41	        mov     SBUF,#'A'
10364:				        putc    #'S'
10365+ 1  20F7			??0888:
10366+ 1			        ;jnb     SCON.1,putc_loop
10367+ 1			        ;clr     SCON.1
10368+ 1  20F7	75 99 53	        mov     SBUF,#'S'
10369:				        putc    #'S'
10370+ 1  20FA			??0889:
10371+ 1			        ;jnb     SCON.1,putc_loop
10372+ 1			        ;clr     SCON.1
10373+ 1  20FA	75 99 53	        mov     SBUF,#'S'
10374:				        put_crlf
10375+ 1			        putc    #13
10376+ 2  20FD			??0890:
10377+ 2			        ;jnb     SCON.1,putc_loop
10378+ 2			        ;clr     SCON.1
10379+ 2  20FD	75 99 0D	        mov     SBUF,#13
10380+ 1			        putc    #10
10381+ 2  2100			??0891:
10382+ 2			        ;jnb     SCON.1,putc_loop
10383+ 2			        ;clr     SCON.1
10384+ 2  2100	75 99 0A	        mov     SBUF,#10
10385:	  2103	80 1A		        sjmp    quit
10386:
10387:	  2105			test_failed:
10388:				        put_crlf
10389+ 1			        putc    #13
10390+ 2  2105			??0892:
10391+ 2			        ;jnb     SCON.1,putc_loop
10392+ 2			        ;clr     SCON.1
10393+ 2  2105	75 99 0D	        mov     SBUF,#13
10394+ 1			        putc    #10

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 187



 Line  I  Addr  Code            Source

10395+ 2  2108			??0893:
10396+ 2			        ;jnb     SCON.1,putc_loop
10397+ 2			        ;clr     SCON.1
10398+ 2  2108	75 99 0A	        mov     SBUF,#10
10399:				        putc    #'F'
10400+ 1  210B			??0894:
10401+ 1			        ;jnb     SCON.1,putc_loop
10402+ 1			        ;clr     SCON.1
10403+ 1  210B	75 99 46	        mov     SBUF,#'F'
10404:				        putc    #'A'
10405+ 1  210E			??0895:
10406+ 1			        ;jnb     SCON.1,putc_loop
10407+ 1			        ;clr     SCON.1
10408+ 1  210E	75 99 41	        mov     SBUF,#'A'
10409:				        putc    #'I'
10410+ 1  2111			??0896:
10411+ 1			        ;jnb     SCON.1,putc_loop
10412+ 1			        ;clr     SCON.1
10413+ 1  2111	75 99 49	        mov     SBUF,#'I'
10414:				        putc    #'L'
10415+ 1  2114			??0897:
10416+ 1			        ;jnb     SCON.1,putc_loop
10417+ 1			        ;clr     SCON.1
10418+ 1  2114	75 99 4C	        mov     SBUF,#'L'
10419:				        put_crlf
10420+ 1			        putc    #13
10421+ 2  2117			??0898:
10422+ 2			        ;jnb     SCON.1,putc_loop
10423+ 2			        ;clr     SCON.1
10424+ 2  2117	75 99 0D	        mov     SBUF,#13
10425+ 1			        putc    #10
10426+ 2  211A			??0899:
10427+ 2			        ;jnb     SCON.1,putc_loop
10428+ 2			        ;clr     SCON.1
10429+ 2  211A	75 99 0A	        mov     SBUF,#10
10430:	  211D	80 00		        sjmp    quit
10431:
10432:				        ;-- End of test program, enter single-instruction endless loop
10433:	  211F	21 1F		quit:   ajmp    $
10434:
10435:
10436:				        ; We'll place a few test routines in the 2nd half of the code space so
10437:				        ; we can test long jumps and calls onto different code pages.
10438:		N      8000	        org     8000h
10439:
10440:				        ; tr_sub2: part of the JMP @A+DPTR test.
10441:				        ; HAS TO BE in 8000h so we can test the A+DPTR carry propagation!
10442:	  8000			tr_sub2:
10443:	  8000	02 1E BD	        jmp     tr_rv3
10444:	  8003	02 1E CA	        jmp     tr_c0
10445:				        ; Make sure the assumption we'll make in the test is actually valid
10446:		N      0000	        if      LOW(tr_sub2) ne 0
10447:				        $error("Label 'tr_sub2' must be at an address multiple of 256 to properly test JMP @A+DPTR")
10448:				        endif
10449:
10450:				        ; tr_sub3: part of the LJMP test.

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 188



 Line  I  Addr  Code            Source

10451:	  8006			tr_sub3:
10452:	  8006	02 1E D8	        jmp     tr_rv4
10453:	  8009	02 1E DF	        jmp     tr_d0
10454:
10455:				        ; tr_sub1: part of the LCALL test.
10456:	  800C			tr_sub1:
10457:	  800C	E5 81		        mov     A,SP
10458:	  800E	B4 53 0D	        cjne    A,#53h,tr_sub1_fail ; ...verify the SP value...
10459:	  8011	E5 52		        mov     A,52h               ; ...and verify the pushed ret address
10460:	  8013	B4 A4 08	        cjne    A,#LOW(tr_rv1),tr_sub1_fail
10461:	  8016	E5 53		        mov     A,53h
10462:	  8018	B4 1E 03	        cjne    A,#HIGH(tr_rv1),tr_sub1_fail
10463:	  801B	02 1E A6	        ljmp    tr_rv2
10464:	  801E			tr_sub1_fail:
10465:	  801E	02 1E AC	        ljmp    tr_b0
10466:
10467:
10468:				        end





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 189





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0000				  CODE	    0033	 176
??0001				  CODE	    0036	 184
??0002				  CODE	    003B	 191
??0003				  CODE	    0041	 197
??0004				  CODE	    0046	 205
??0005				  CODE	    0054	 214
??0006				  CODE	    005D	 221
??0007				  CODE	    0069	 231
??0008				  CODE	    007D	 251
??0009				  CODE	    0072	 240
??0010				  CODE	    0077	 246
??0011				  CODE	    0090	 270
??0012				  CODE	    0085	 259
??0013				  CODE	    008A	 265
??0014				  CODE	    0090	 274
??0015				  CODE	    0093	 279
??0016				  CODE	    0096	 296
??0017				  CODE	    00D4	 353
??0018				  CODE	    00C9	 342
??0019				  CODE	    00CE	 348
??0020				  CODE	    00D9	 358
??0021				  CODE	    00E8	 368
??0022				  CODE	    00EE	 374
??0023				  CODE	    00FE	 400
??0024				  CODE	    00FC	 399
??0025				  CODE	    00F6	 394
??0026				  CODE	    010E	 411
??0027				  CODE	    010C	 410
??0028				  CODE	    0106	 405
??0029				  CODE	    011E	 422
??0030				  CODE	    011C	 421
??0031				  CODE	    0116	 416
??0032				  CODE	    012E	 433
??0033				  CODE	    012C	 432
??0034				  CODE	    0126	 427
??0035				  CODE	    013E	 444
??0036				  CODE	    013C	 443
??0037				  CODE	    0136	 438
??0038				  CODE	    014E	 455
??0039				  CODE	    014C	 454
??0040				  CODE	    0146	 449
??0041				  CODE	    015E	 466
??0042				  CODE	    015C	 465
??0043				  CODE	    0156	 460
??0044				  CODE	    016E	 477
??0045				  CODE	    016C	 476
??0046				  CODE	    0166	 471
??0047				  CODE	    0190	 501
??0048				  CODE	    0185	 490
??0049				  CODE	    018A	 496

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 190



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0050				  CODE	    01A7	 524
??0051				  CODE	    019C	 513
??0052				  CODE	    01A1	 519
??0053				  CODE	    01D4	 566
??0054				  CODE	    01C9	 555
??0055				  CODE	    01CE	 561
??0056				  CODE	    01E3	 591
??0057				  CODE	    01E1	 590
??0058				  CODE	    01DB	 585
??0059				  CODE	    01F5	 603
??0060				  CODE	    01F3	 602
??0061				  CODE	    01ED	 597
??0062				  CODE	    0217	 628
??0063				  CODE	    020C	 617
??0064				  CODE	    0211	 623
??0065				  CODE	    022B	 639
??0066				  CODE	    0236	 647
??0067				  CODE	    0249	 667
??0068				  CODE	    023E	 656
??0069				  CODE	    0243	 662
??0070				  CODE	    0249	 671
??0071				  CODE	    024C	 676
??0072				  CODE	    024F	 705
??0073				  CODE	    025D	 715
??0074				  CODE	    0268	 723
??0075				  CODE	    027C	 743
??0076				  CODE	    0271	 732
??0077				  CODE	    0276	 738
??0078				  CODE	    0292	 763
??0079				  CODE	    0287	 752
??0080				  CODE	    028C	 758
??0081				  CODE	    029C	 771
??0082				  CODE	    02A6	 779
??0083				  CODE	    02B9	 799
??0084				  CODE	    02AE	 788
??0085				  CODE	    02B3	 794
??0086				  CODE	    02D6	 823
??0087				  CODE	    02CB	 812
??0088				  CODE	    02D0	 818
??0089				  CODE	    0303	 858
??0090				  CODE	    02F8	 847
??0091				  CODE	    02FD	 853
??0092				  CODE	    0326	 886
??0093				  CODE	    031B	 875
??0094				  CODE	    0320	 881
??0095				  CODE	    0340	 909
??0096				  CODE	    0335	 898
??0097				  CODE	    033A	 904
??0098				  CODE	    035E	 935
??0099				  CODE	    0353	 924
??0100				  CODE	    0358	 930
??0101				  CODE	    036C	 943
??0102				  CODE	    0377	 951
??0103				  CODE	    038B	 971
??0104				  CODE	    0380	 960
??0105				  CODE	    0385	 966

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 191



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0106				  CODE	    03A8	 994
??0107				  CODE	    039D	 983
??0108				  CODE	    03A2	 989
??0109				  CODE	    03D5	1029
??0110				  CODE	    03CA	1018
??0111				  CODE	    03CF	1024
??0112				  CODE	    03F8	1057
??0113				  CODE	    03ED	1046
??0114				  CODE	    03F2	1052
??0115				  CODE	    0412	1080
??0116				  CODE	    0407	1069
??0117				  CODE	    040C	1075
??0118				  CODE	    0430	1106
??0119				  CODE	    0425	1095
??0120				  CODE	    042A	1101
??0121				  CODE	    0430	1112
??0122				  CODE	    0433	1117
??0123				  CODE	    0436	1135
??0124				  CODE	    044E	1159
??0125				  CODE	    0443	1148
??0126				  CODE	    0448	1154
??0127				  CODE	    0475	1194
??0128				  CODE	    046A	1183
??0129				  CODE	    046F	1189
??0130				  CODE	    049B	1228
??0131				  CODE	    0490	1217
??0132				  CODE	    0495	1223
??0133				  CODE	    04D3	1274
??0134				  CODE	    04C8	1263
??0135				  CODE	    04CD	1269
??0136				  CODE	    04D3	1278
??0137				  CODE	    04D6	1283
??0138				  CODE	    04D9	1301
??0139				  CODE	    04F6	1340
??0140				  CODE	    04EB	1329
??0141				  CODE	    04F0	1335
??0142				  CODE	    057B	1430
??0143				  CODE	    0570	1419
??0144				  CODE	    0575	1425
??0145				  CODE	    05A8	1467
??0146				  CODE	    059D	1456
??0147				  CODE	    05A2	1462
??0148				  CODE	    05BB	1486
??0149				  CODE	    05B0	1475
??0150				  CODE	    05B5	1481
??0151				  CODE	    05DD	1512
??0152				  CODE	    05D2	1501
??0153				  CODE	    05D7	1507
??0154				  CODE	    05F5	1546
??0155				  CODE	    05EA	1535
??0156				  CODE	    05EF	1541
??0157				  CODE	    066A	1628
??0158				  CODE	    065F	1617
??0159				  CODE	    0664	1623
??0160				  CODE	    0693	1663
??0161				  CODE	    0688	1652

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 192



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0162				  CODE	    068D	1658
??0163				  CODE	    06B5	1689
??0164				  CODE	    06AA	1678
??0165				  CODE	    06AF	1684
??0166				  CODE	    06B5	1693
??0167				  CODE	    06B8	1698
??0168				  CODE	    06BB	1717
??0169				  CODE	    0711	1783
??0170				  CODE	    0706	1772
??0171				  CODE	    070B	1778
??0172				  CODE	    072E	1809
??0173				  CODE	    0723	1798
??0174				  CODE	    0728	1804
??0175				  CODE	    0744	1829
??0176				  CODE	    0739	1818
??0177				  CODE	    073E	1824
??0178				  CODE	    078F	1883
??0179				  CODE	    0784	1872
??0180				  CODE	    0789	1878
??0181				  CODE	    07AE	1909
??0182				  CODE	    07A3	1898
??0183				  CODE	    07A8	1904
??0184				  CODE	    07E9	1963
??0185				  CODE	    07DE	1952
??0186				  CODE	    07E3	1958
??0187				  CODE	    0804	1989
??0188				  CODE	    07F9	1978
??0189				  CODE	    07FE	1984
??0190				  CODE	    081D	2011
??0191				  CODE	    0812	2000
??0192				  CODE	    0817	2006
??0193				  CODE	    083C	2037
??0194				  CODE	    0831	2026
??0195				  CODE	    0836	2032
??0196				  CODE	    083C	2041
??0197				  CODE	    083F	2046
??0198				  CODE	    0842	2061
??0199				  CODE	    0861	2091
??0200				  CODE	    0856	2080
??0201				  CODE	    085B	2086
??0202				  CODE	    0893	2124
??0203				  CODE	    0888	2113
??0204				  CODE	    088D	2119
??0205				  CODE	    08AD	2147
??0206				  CODE	    08A2	2136
??0207				  CODE	    08A7	2142
??0208				  CODE	    08D8	2179
??0209				  CODE	    08CD	2168
??0210				  CODE	    08D2	2174
??0211				  CODE	    093B	2253
??0212				  CODE	    0930	2242
??0213				  CODE	    0935	2248
??0214				  CODE	    093B	2258
??0215				  CODE	    093E	2263
??0216				  CODE	    0941	2443
??0217				  CODE	    09C8	2671

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 193



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0218				  CODE	    0977	2539
??0219				  CODE	    0992	2583
??0220				  CODE	    09AD	2627
??0221				  CODE	    09DC	2705
??0222				  CODE	    09F3	2737
??0223				  CODE	    0A0A	2770
??0224				  CODE	    097D	2545
??0225				  CODE	    0972	2534
??0226				  CODE	    0977	2540
??0227				  CODE	    0998	2589
??0228				  CODE	    098D	2578
??0229				  CODE	    0992	2584
??0230				  CODE	    09B3	2633
??0231				  CODE	    09A8	2622
??0232				  CODE	    09AD	2628
??0233				  CODE	    09CE	2677
??0234				  CODE	    09C3	2666
??0235				  CODE	    09C8	2672
??0236				  CODE	    09E2	2711
??0237				  CODE	    09D7	2700
??0238				  CODE	    09DC	2706
??0239				  CODE	    09F9	2743
??0240				  CODE	    09EE	2732
??0241				  CODE	    09F3	2738
??0242				  CODE	    0A10	2776
??0243				  CODE	    0A05	2765
??0244				  CODE	    0A0A	2771
??0245				  CODE	    0A10	2782
??0246				  CODE	    0A13	2787
??0247				  CODE	    0A16	2798
??0248				  CODE	    0A9D	3026
??0249				  CODE	    0A4C	2894
??0250				  CODE	    0A67	2938
??0251				  CODE	    0A82	2982
??0252				  CODE	    0AB1	3060
??0253				  CODE	    0AC8	3092
??0254				  CODE	    0ADF	3125
??0255				  CODE	    0A52	2900
??0256				  CODE	    0A47	2889
??0257				  CODE	    0A4C	2895
??0258				  CODE	    0A6D	2944
??0259				  CODE	    0A62	2933
??0260				  CODE	    0A67	2939
??0261				  CODE	    0A88	2988
??0262				  CODE	    0A7D	2977
??0263				  CODE	    0A82	2983
??0264				  CODE	    0AA3	3032
??0265				  CODE	    0A98	3021
??0266				  CODE	    0A9D	3027
??0267				  CODE	    0AB7	3066
??0268				  CODE	    0AAC	3055
??0269				  CODE	    0AB1	3061
??0270				  CODE	    0ACE	3098
??0271				  CODE	    0AC3	3087
??0272				  CODE	    0AC8	3093
??0273				  CODE	    0AE5	3131

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 194



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0274				  CODE	    0ADA	3120
??0275				  CODE	    0ADF	3126
??0276				  CODE	    0AE5	3137
??0277				  CODE	    0AE8	3142
??0278				  CODE	    0AEB	3153
??0279				  CODE	    0B72	3381
??0280				  CODE	    0B21	3249
??0281				  CODE	    0B3C	3293
??0282				  CODE	    0B57	3337
??0283				  CODE	    0B86	3415
??0284				  CODE	    0B9D	3447
??0285				  CODE	    0BB4	3480
??0286				  CODE	    0B27	3255
??0287				  CODE	    0B1C	3244
??0288				  CODE	    0B21	3250
??0289				  CODE	    0B42	3299
??0290				  CODE	    0B37	3288
??0291				  CODE	    0B3C	3294
??0292				  CODE	    0B5D	3343
??0293				  CODE	    0B52	3332
??0294				  CODE	    0B57	3338
??0295				  CODE	    0B78	3387
??0296				  CODE	    0B6D	3376
??0297				  CODE	    0B72	3382
??0298				  CODE	    0B8C	3421
??0299				  CODE	    0B81	3410
??0300				  CODE	    0B86	3416
??0301				  CODE	    0BA3	3453
??0302				  CODE	    0B98	3442
??0303				  CODE	    0B9D	3448
??0304				  CODE	    0BBA	3486
??0305				  CODE	    0BAF	3475
??0306				  CODE	    0BB4	3481
??0307				  CODE	    0BBA	3492
??0308				  CODE	    0BBD	3497
??0309				  CODE	    0BC0	3507
??0310				  CODE	    0BC8	3528
??0311				  CODE	    0BDC	3546
??0312				  CODE	    0BD1	3535
??0313				  CODE	    0BD6	3541
??0314				  CODE	    0BE0	3552
??0315				  CODE	    0BEC	3560
??0316				  CODE	    0BF8	3568
??0317				  CODE	    0C04	3576
??0318				  CODE	    0C10	3584
??0319				  CODE	    0C1C	3592
??0320				  CODE	    0C28	3600
??0321				  CODE	    0C34	3608
??0322				  CODE	    0C47	3626
??0323				  CODE	    0C3C	3615
??0324				  CODE	    0C41	3621
??0325				  CODE	    0C47	3630
??0326				  CODE	    0C4A	3635
??0327				  CODE	    0C4D	3647
??0328				  CODE	    0C50	3653
??0329				  CODE	    0D71	4012

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 195



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0330				  CODE	    0CCC	3808
??0331				  CODE	    0D03	3876
??0332				  CODE	    0D3A	3944
??0333				  CODE	    0D93	4058
??0336				  NUMBER    0000	3669
??0337				  NUMBER    0000	3697
??0338				  NUMBER    0000	3725
??0339				  NUMBER    0000	3753
??0340				  NUMBER    0000	3779
??0341				  CODE	    0CD2	3814
??0342				  CODE	    0CC7	3803
??0343				  CODE	    0CCC	3809
??0344				  NUMBER    0000	3821
??0345				  NUMBER    0000	3847
??0346				  CODE	    0D09	3882
??0347				  CODE	    0CFE	3871
??0348				  CODE	    0D03	3877
??0349				  NUMBER    0000	3889
??0350				  NUMBER    0000	3915
??0351				  CODE	    0D40	3950
??0352				  CODE	    0D35	3939
??0353				  CODE	    0D3A	3945
??0354				  NUMBER    0000	3957
??0355				  NUMBER    0000	3983
??0356				  CODE	    0D77	4018
??0357				  CODE	    0D6C	4007
??0358				  CODE	    0D71	4013
??0359				  NUMBER    0000	4029
??0360				  CODE	    0D99	4064
??0361				  CODE	    0D8E	4053
??0362				  CODE	    0D93	4059
??0363				  CODE	    0D99	4080
??0364				  CODE	    0EBA	4439
??0365				  CODE	    0E15	4235
??0366				  CODE	    0E4C	4303
??0367				  CODE	    0E83	4371
??0368				  CODE	    0EDC	4485
??0371				  NUMBER    0000	4096
??0372				  NUMBER    0000	4124
??0373				  NUMBER    0000	4152
??0374				  NUMBER    0000	4180
??0375				  NUMBER    0000	4206
??0376				  CODE	    0E1B	4241
??0377				  CODE	    0E10	4230
??0378				  CODE	    0E15	4236
??0379				  NUMBER    0000	4248
??0380				  NUMBER    0000	4274
??0381				  CODE	    0E52	4309
??0382				  CODE	    0E47	4298
??0383				  CODE	    0E4C	4304
??0384				  NUMBER    0000	4316
??0385				  NUMBER    0000	4342
??0386				  CODE	    0E89	4377
??0387				  CODE	    0E7E	4366
??0388				  CODE	    0E83	4372
??0389				  NUMBER    0000	4384

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 196



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0390				  NUMBER    0000	4410
??0391				  CODE	    0EC0	4445
??0392				  CODE	    0EB5	4434
??0393				  CODE	    0EBA	4440
??0394				  NUMBER    0000	4456
??0395				  CODE	    0EE2	4491
??0396				  CODE	    0ED7	4480
??0397				  CODE	    0EDC	4486
??0398				  CODE	    0EE2	4507
??0399				  CODE	    1003	4866
??0400				  CODE	    0F5E	4662
??0401				  CODE	    0F95	4730
??0402				  CODE	    0FCC	4798
??0403				  CODE	    1025	4912
??0406				  NUMBER    0000	4523
??0407				  NUMBER    0000	4551
??0408				  NUMBER    0000	4579
??0409				  NUMBER    0000	4607
??0410				  NUMBER    0000	4633
??0411				  CODE	    0F64	4668
??0412				  CODE	    0F59	4657
??0413				  CODE	    0F5E	4663
??0414				  NUMBER    0000	4675
??0415				  NUMBER    0000	4701
??0416				  CODE	    0F9B	4736
??0417				  CODE	    0F90	4725
??0418				  CODE	    0F95	4731
??0419				  NUMBER    0000	4743
??0420				  NUMBER    0000	4769
??0421				  CODE	    0FD2	4804
??0422				  CODE	    0FC7	4793
??0423				  CODE	    0FCC	4799
??0424				  NUMBER    0000	4811
??0425				  NUMBER    0000	4837
??0426				  CODE	    1009	4872
??0427				  CODE	    0FFE	4861
??0428				  CODE	    1003	4867
??0429				  NUMBER    0000	4883
??0430				  CODE	    102B	4918
??0431				  CODE	    1020	4907
??0432				  CODE	    1025	4913
??0433				  CODE	    102B	4934
??0434				  CODE	    114C	5293
??0435				  CODE	    10A7	5089
??0436				  CODE	    10DE	5157
??0437				  CODE	    1115	5225
??0438				  CODE	    116E	5339
??0441				  NUMBER    0000	4950
??0442				  NUMBER    0000	4978
??0443				  NUMBER    0000	5006
??0444				  NUMBER    0000	5034
??0445				  NUMBER    0000	5060
??0446				  CODE	    10AD	5095
??0447				  CODE	    10A2	5084
??0448				  CODE	    10A7	5090
??0449				  NUMBER    0000	5102

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 197



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0450				  NUMBER    0000	5128
??0451				  CODE	    10E4	5163
??0452				  CODE	    10D9	5152
??0453				  CODE	    10DE	5158
??0454				  NUMBER    0000	5170
??0455				  NUMBER    0000	5196
??0456				  CODE	    111B	5231
??0457				  CODE	    1110	5220
??0458				  CODE	    1115	5226
??0459				  NUMBER    0000	5238
??0460				  NUMBER    0000	5264
??0461				  CODE	    1152	5299
??0462				  CODE	    1147	5288
??0463				  CODE	    114C	5294
??0464				  NUMBER    0000	5310
??0465				  CODE	    1174	5345
??0466				  CODE	    1169	5334
??0467				  CODE	    116E	5340
??0468				  CODE	    1174	5363
??0469				  CODE	    1177	5368
??0470				  CODE	    117A	5380
??0471				  CODE	    117D	5386
??0472				  CODE	    129E	5745
??0473				  CODE	    11F9	5541
??0474				  CODE	    1230	5609
??0475				  CODE	    1267	5677
??0476				  CODE	    12C0	5791
??0479				  NUMBER    0000	5402
??0480				  NUMBER    0000	5430
??0481				  NUMBER    0000	5458
??0482				  NUMBER    0000	5486
??0483				  NUMBER    0000	5512
??0484				  CODE	    11FF	5547
??0485				  CODE	    11F4	5536
??0486				  CODE	    11F9	5542
??0487				  NUMBER    0000	5554
??0488				  NUMBER    0000	5580
??0489				  CODE	    1236	5615
??0490				  CODE	    122B	5604
??0491				  CODE	    1230	5610
??0492				  NUMBER    0000	5622
??0493				  NUMBER    0000	5648
??0494				  CODE	    126D	5683
??0495				  CODE	    1262	5672
??0496				  CODE	    1267	5678
??0497				  NUMBER    0000	5690
??0498				  NUMBER    0000	5716
??0499				  CODE	    12A4	5751
??0500				  CODE	    1299	5740
??0501				  CODE	    129E	5746
??0502				  NUMBER    0000	5762
??0503				  CODE	    12C6	5797
??0504				  CODE	    12BB	5786
??0505				  CODE	    12C0	5792
??0506				  CODE	    12C6	5813
??0507				  CODE	    13E7	6172

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 198



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0508				  CODE	    1342	5968
??0509				  CODE	    1379	6036
??0510				  CODE	    13B0	6104
??0511				  CODE	    1409	6218
??0514				  NUMBER    0000	5829
??0515				  NUMBER    0000	5857
??0516				  NUMBER    0000	5885
??0517				  NUMBER    0000	5913
??0518				  NUMBER    0000	5939
??0519				  CODE	    1348	5974
??0520				  CODE	    133D	5963
??0521				  CODE	    1342	5969
??0522				  NUMBER    0000	5981
??0523				  NUMBER    0000	6007
??0524				  CODE	    137F	6042
??0525				  CODE	    1374	6031
??0526				  CODE	    1379	6037
??0527				  NUMBER    0000	6049
??0528				  NUMBER    0000	6075
??0529				  CODE	    13B6	6110
??0530				  CODE	    13AB	6099
??0531				  CODE	    13B0	6105
??0532				  NUMBER    0000	6117
??0533				  NUMBER    0000	6143
??0534				  CODE	    13ED	6178
??0535				  CODE	    13E2	6167
??0536				  CODE	    13E7	6173
??0537				  NUMBER    0000	6189
??0538				  CODE	    140F	6224
??0539				  CODE	    1404	6213
??0540				  CODE	    1409	6219
??0541				  CODE	    140F	6240
??0542				  CODE	    1530	6599
??0543				  CODE	    148B	6395
??0544				  CODE	    14C2	6463
??0545				  CODE	    14F9	6531
??0546				  CODE	    1552	6645
??0549				  NUMBER    0000	6256
??0550				  NUMBER    0000	6284
??0551				  NUMBER    0000	6312
??0552				  NUMBER    0000	6340
??0553				  NUMBER    0000	6366
??0554				  CODE	    1491	6401
??0555				  CODE	    1486	6390
??0556				  CODE	    148B	6396
??0557				  NUMBER    0000	6408
??0558				  NUMBER    0000	6434
??0559				  CODE	    14C8	6469
??0560				  CODE	    14BD	6458
??0561				  CODE	    14C2	6464
??0562				  NUMBER    0000	6476
??0563				  NUMBER    0000	6502
??0564				  CODE	    14FF	6537
??0565				  CODE	    14F4	6526
??0566				  CODE	    14F9	6532
??0567				  NUMBER    0000	6544

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 199



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0568				  NUMBER    0000	6570
??0569				  CODE	    1536	6605
??0570				  CODE	    152B	6594
??0571				  CODE	    1530	6600
??0572				  NUMBER    0000	6616
??0573				  CODE	    1558	6651
??0574				  CODE	    154D	6640
??0575				  CODE	    1552	6646
??0576				  CODE	    1558	6667
??0577				  CODE	    1679	7026
??0578				  CODE	    15D4	6822
??0579				  CODE	    160B	6890
??0580				  CODE	    1642	6958
??0581				  CODE	    169B	7072
??0584				  NUMBER    0001	6683
??0585				  NUMBER    0001	6711
??0586				  NUMBER    0001	6739
??0587				  NUMBER    0001	6767
??0588				  NUMBER    0001	6793
??0589				  CODE	    15DA	6828
??0590				  CODE	    15CF	6817
??0591				  CODE	    15D4	6823
??0592				  NUMBER    0001	6835
??0593				  NUMBER    0001	6861
??0594				  CODE	    1611	6896
??0595				  CODE	    1606	6885
??0596				  CODE	    160B	6891
??0597				  NUMBER    0001	6903
??0598				  NUMBER    0001	6929
??0599				  CODE	    1648	6964
??0600				  CODE	    163D	6953
??0601				  CODE	    1642	6959
??0602				  NUMBER    0001	6971
??0603				  NUMBER    0001	6997
??0604				  CODE	    167F	7032
??0605				  CODE	    1674	7021
??0606				  CODE	    1679	7027
??0607				  NUMBER    0001	7043
??0608				  CODE	    16A1	7078
??0609				  CODE	    1696	7067
??0610				  CODE	    169B	7073
??0611				  CODE	    16A1	7094
??0612				  CODE	    17C2	7453
??0613				  CODE	    171D	7249
??0614				  CODE	    1754	7317
??0615				  CODE	    178B	7385
??0616				  CODE	    17E4	7499
??0619				  NUMBER    0001	7110
??0620				  NUMBER    0001	7138
??0621				  NUMBER    0001	7166
??0622				  NUMBER    0001	7194
??0623				  NUMBER    0001	7220
??0624				  CODE	    1723	7255
??0625				  CODE	    1718	7244
??0626				  CODE	    171D	7250
??0627				  NUMBER    0001	7262

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 200



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0628				  NUMBER    0001	7288
??0629				  CODE	    175A	7323
??0630				  CODE	    174F	7312
??0631				  CODE	    1754	7318
??0632				  NUMBER    0001	7330
??0633				  NUMBER    0001	7356
??0634				  CODE	    1791	7391
??0635				  CODE	    1786	7380
??0636				  CODE	    178B	7386
??0637				  NUMBER    0001	7398
??0638				  NUMBER    0001	7424
??0639				  CODE	    17C8	7459
??0640				  CODE	    17BD	7448
??0641				  CODE	    17C2	7454
??0642				  NUMBER    0001	7470
??0643				  CODE	    17EA	7505
??0644				  CODE	    17DF	7494
??0645				  CODE	    17E4	7500
??0646				  CODE	    17EA	7524
??0647				  CODE	    17ED	7529
??0648				  CODE	    17F0	7541
??0649				  CODE	    17F3	7547
??0650				  CODE	    1914	7906
??0651				  CODE	    186F	7702
??0652				  CODE	    18A6	7770
??0653				  CODE	    18DD	7838
??0654				  CODE	    1936	7952
??0657				  NUMBER    0000	7563
??0658				  NUMBER    0000	7591
??0659				  NUMBER    0000	7619
??0660				  NUMBER    0000	7647
??0661				  NUMBER    0000	7673
??0662				  CODE	    1875	7708
??0663				  CODE	    186A	7697
??0664				  CODE	    186F	7703
??0665				  NUMBER    0000	7715
??0666				  NUMBER    0000	7741
??0667				  CODE	    18AC	7776
??0668				  CODE	    18A1	7765
??0669				  CODE	    18A6	7771
??0670				  NUMBER    0000	7783
??0671				  NUMBER    0000	7809
??0672				  CODE	    18E3	7844
??0673				  CODE	    18D8	7833
??0674				  CODE	    18DD	7839
??0675				  NUMBER    0000	7851
??0676				  NUMBER    0000	7877
??0677				  CODE	    191A	7912
??0678				  CODE	    190F	7901
??0679				  CODE	    1914	7907
??0680				  NUMBER    0000	7923
??0681				  CODE	    193C	7958
??0682				  CODE	    1931	7947
??0683				  CODE	    1936	7953
??0684				  CODE	    193C	7974
??0685				  CODE	    1A5D	8333

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 201



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0686				  CODE	    19B8	8129
??0687				  CODE	    19EF	8197
??0688				  CODE	    1A26	8265
??0689				  CODE	    1A7F	8379
??0692				  NUMBER    0001	7990
??0693				  NUMBER    0001	8018
??0694				  NUMBER    0001	8046
??0695				  NUMBER    0001	8074
??0696				  NUMBER    0001	8100
??0697				  CODE	    19BE	8135
??0698				  CODE	    19B3	8124
??0699				  CODE	    19B8	8130
??0700				  NUMBER    0001	8142
??0701				  NUMBER    0001	8168
??0702				  CODE	    19F5	8203
??0703				  CODE	    19EA	8192
??0704				  CODE	    19EF	8198
??0705				  NUMBER    0001	8210
??0706				  NUMBER    0001	8236
??0707				  CODE	    1A2C	8271
??0708				  CODE	    1A21	8260
??0709				  CODE	    1A26	8266
??0710				  NUMBER    0001	8278
??0711				  NUMBER    0001	8304
??0712				  CODE	    1A63	8339
??0713				  CODE	    1A58	8328
??0714				  CODE	    1A5D	8334
??0715				  NUMBER    0001	8350
??0716				  CODE	    1A85	8385
??0717				  CODE	    1A7A	8374
??0718				  CODE	    1A7F	8380
??0719				  CODE	    1A85	8401
??0720				  CODE	    1BA6	8760
??0721				  CODE	    1B01	8556
??0722				  CODE	    1B38	8624
??0723				  CODE	    1B6F	8692
??0724				  CODE	    1BC8	8806
??0727				  NUMBER    0000	8417
??0728				  NUMBER    0000	8445
??0729				  NUMBER    0000	8473
??0730				  NUMBER    0000	8501
??0731				  NUMBER    0000	8527
??0732				  CODE	    1B07	8562
??0733				  CODE	    1AFC	8551
??0734				  CODE	    1B01	8557
??0735				  NUMBER    0000	8569
??0736				  NUMBER    0000	8595
??0737				  CODE	    1B3E	8630
??0738				  CODE	    1B33	8619
??0739				  CODE	    1B38	8625
??0740				  NUMBER    0000	8637
??0741				  NUMBER    0000	8663
??0742				  CODE	    1B75	8698
??0743				  CODE	    1B6A	8687
??0744				  CODE	    1B6F	8693
??0745				  NUMBER    0000	8705

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 202



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0746				  NUMBER    0000	8731
??0747				  CODE	    1BAC	8766
??0748				  CODE	    1BA1	8755
??0749				  CODE	    1BA6	8761
??0750				  NUMBER    0000	8777
??0751				  CODE	    1BCE	8812
??0752				  CODE	    1BC3	8801
??0753				  CODE	    1BC8	8807
??0754				  CODE	    1BCE	8828
??0755				  CODE	    1CEF	9187
??0756				  CODE	    1C4A	8983
??0757				  CODE	    1C81	9051
??0758				  CODE	    1CB8	9119
??0759				  CODE	    1D11	9233
??0762				  NUMBER    0001	8844
??0763				  NUMBER    0001	8872
??0764				  NUMBER    0001	8900
??0765				  NUMBER    0001	8928
??0766				  NUMBER    0001	8954
??0767				  CODE	    1C50	8989
??0768				  CODE	    1C45	8978
??0769				  CODE	    1C4A	8984
??0770				  NUMBER    0001	8996
??0771				  NUMBER    0001	9022
??0772				  CODE	    1C87	9057
??0773				  CODE	    1C7C	9046
??0774				  CODE	    1C81	9052
??0775				  NUMBER    0001	9064
??0776				  NUMBER    0001	9090
??0777				  CODE	    1CBE	9125
??0778				  CODE	    1CB3	9114
??0779				  CODE	    1CB8	9120
??0780				  NUMBER    0001	9132
??0781				  NUMBER    0001	9158
??0782				  CODE	    1CF5	9193
??0783				  CODE	    1CEA	9182
??0784				  CODE	    1CEF	9188
??0785				  NUMBER    0001	9204
??0786				  CODE	    1D17	9239
??0787				  CODE	    1D0C	9228
??0788				  CODE	    1D11	9234
??0789				  CODE	    1D17	9259
??0790				  CODE	    1D1A	9264
??0791				  CODE	    1D1D	9278
??0792				  CODE	    1D40	9307
??0793				  CODE	    1D35	9296
??0794				  CODE	    1D3A	9302
??0795				  CODE	    1D5C	9332
??0796				  CODE	    1D51	9321
??0797				  CODE	    1D56	9327
??0798				  CODE	    1D7C	9358
??0799				  CODE	    1D71	9347
??0800				  CODE	    1D76	9353
??0801				  CODE	    1D97	9382
??0802				  CODE	    1D8C	9371
??0803				  CODE	    1D91	9377

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 203



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0804				  CODE	    1D97	9386
??0805				  CODE	    1D9A	9391
??0806				  CODE	    1D9D	9404
??0807				  CODE	    1DBE	9432
??0808				  CODE	    1DB3	9421
??0809				  CODE	    1DB8	9427
??0810				  CODE	    1DDE	9468
??0811				  CODE	    1DD3	9457
??0812				  CODE	    1DD8	9463
??0813				  CODE	    1E00	9498
??0814				  CODE	    1DF5	9487
??0815				  CODE	    1DFA	9493
??0816				  CODE	    1E23	9529
??0817				  CODE	    1E18	9518
??0818				  CODE	    1E1D	9524
??0819				  CODE	    1E23	9533
??0820				  CODE	    1E26	9538
??0821				  CODE	    1E29	9549
??0822				  CODE	    1E45	9576
??0823				  CODE	    1E3A	9565
??0824				  CODE	    1E3F	9571
??0825				  CODE	    1E6B	9610
??0826				  CODE	    1E60	9599
??0827				  CODE	    1E65	9605
??0828				  CODE	    1E6B	9614
??0829				  CODE	    1E6E	9619
??0830				  CODE	    1E71	9641
??0831				  CODE	    1EA1	9677
??0832				  CODE	    1E96	9666
??0833				  CODE	    1E9B	9672
??0834				  CODE	    1EB2	9696
??0835				  CODE	    1EA7	9685
??0836				  CODE	    1EAC	9691
??0837				  CODE	    1ED0	9726
??0838				  CODE	    1EC5	9715
??0839				  CODE	    1ECA	9721
??0840				  CODE	    1EE5	9748
??0841				  CODE	    1EDA	9737
??0842				  CODE	    1EDF	9743
??0843				  CODE	    1EFC	9774
??0844				  CODE	    1EF1	9763
??0845				  CODE	    1EF6	9769
??0846				  CODE	    1EFC	9778
??0847				  CODE	    1EFF	9783
??0848				  CODE	    1F02	9798
??0849				  CODE	    1F33	9836
??0850				  CODE	    1F28	9825
??0851				  CODE	    1F2D	9831
??0852				  CODE	    1F61	9871
??0853				  CODE	    1F56	9860
??0854				  CODE	    1F5B	9866
??0855				  CODE	    1F61	9876
??0856				  CODE	    1F64	9881
??0857				  CODE	    1F67	9893
??0858				  CODE	    1FB1	9965
??0859				  CODE	    1FA6	9954

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 204



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0860				  CODE	    1FAB	9960
??0861				  CODE	    201F       10045
??0862				  CODE	    2014       10034
??0863				  CODE	    2019       10040
??0864				  CODE	    2045       10062
??0865				  CODE	    2048       10067
??0866				  CODE	    204B       10081
??0867				  CODE	    209A       10144
??0868				  CODE	    208F       10133
??0869				  CODE	    2094       10139
??0870				  CODE	    209A       10148
??0871				  CODE	    209D       10153
??0872				  CODE	    20A0       10171
??0873				  CODE	    20B0       10196
??0874				  CODE	    20A5       10185
??0875				  CODE	    20AA       10191
??0876				  CODE	    20C2       10262
??0877				  CODE	    20B7       10251
??0878				  CODE	    20BC       10257
??0879				  CODE	    20E1       10311
??0880				  CODE	    20D6       10300
??0881				  CODE	    20DB       10306
??0882				  CODE	    20E1       10315
??0883				  CODE	    20E4       10320
??0884				  CODE	    20EB       10345
??0885				  CODE	    20EE       10350
??0886				  CODE	    20F1       10355
??0887				  CODE	    20F4       10360
??0888				  CODE	    20F7       10365
??0889				  CODE	    20FA       10370
??0890				  CODE	    20FD       10376
??0891				  CODE	    2100       10381
??0892				  CODE	    2105       10390
??0893				  CODE	    2108       10395
??0894				  CODE	    210B       10400
??0895				  CODE	    210E       10405
??0896				  CODE	    2111       10410
??0897				  CODE	    2114       10415
??0898				  CODE	    2117       10421
??0899				  CODE	    211A       10426
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6	  86
ACC				  DATA	      E0	  57
ARG0				  NUMBER    00C3	2450
ARG1				  NUMBER    00C5	2451
B				  DATA	      F0	  58
CY				  BIT	      D7	  87
DIR0				  NUMBER    0060	 100
DIR1				  NUMBER    0061	 101
DPH				  DATA	      83	  40
DPL				  DATA	      82	  39
EA				  BIT	      AF	  72
EOT				  MACRO	        	 130
ES				  BIT	      AC	  70
ET0				  BIT	      A9	  67

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 205



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
EX0				  BIT	      A8	  66
EXTI0				  CODE	    0003	  91
EXTI1				  CODE	    0013	  93
EXTINT0				  DATA	      C0	  55
F0				  BIT	      D5	  85
FAIL				  NUMBER    006E	 102
IE				  DATA	      A8	  52
NLOOPS				  NUMBER    0003	3525
OV				  BIT	      D2	  82
P				  BIT	      D0	  81
P0				  DATA	      80	  37
P1				  DATA	      90	  48
P2				  DATA	      A0	  51
P3				  DATA	      B0	  53
PSW				  DATA	      D0	  56
PUTC				  MACRO	        	 111
PUT_CRLF			  MACRO	        	 120
QUIT				  CODE	    211F       10433
RES				  NUMBER    0001	2452
RESET				  CODE	    0000	  90
RS0				  BIT	      D3	  83
RS1				  BIT	      D4	  84
RXIRQ				  BIT	      99	  76
RXRDY				  BIT	      9D	  78
SAVED_PSW			  NUMBER    0070	 103
SAVE_PSW			  MACRO	        	2282
SBUF				  DATA	      99	  50
SCON				  DATA	      98	  49
SET_CY				  MACRO	        	2296
SINT				  CODE	    0023	  95
SP				  DATA	      81	  38
STACK0				  NUMBER    009F	 104
START				  CODE	    0030	 152
S_SUB0				  CODE	    1F19	9814
S_SUB1				  CODE	    1F23	9820
S_SUB2				  CODE	    1F47	9849
S_SUB3				  CODE	    1F51	9855
T0ARL				  BIT	      8C	  62
T0CEN				  BIT	      8D	  63
T0IRQ				  BIT	      88	  61
TA_B0				  CODE	    0041	 196
TA_C0				  CODE	    0044	 203
TA_C1				  CODE	    004B	 210
TA_C2				  CODE	    005A	 219
TA_C3				  CODE	    0046	 204
TA_C4				  CODE	    0063	 226
TA_D1				  CODE	    006F	 236
TA_D2				  CODE	    0077	 245
TA_E1				  CODE	    008A	 264
TB_A1				  CODE	    00CE	 347
TB_B0				  CODE	    00DF	 363
TB_B1				  CODE	    00E8	 367
TB_B2				  CODE	    00EE	 373
TB_C0				  CODE	    0171	 479
TB_C1				  CODE	    0179	 482
TB_C2				  CODE	    018A	 495

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 206



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TB_C3				  CODE	    017E	 484
TB_C4				  CODE	    0183	 486
TB_D0				  CODE	    01A1	 518
TB_E0				  CODE	    01CE	 560
TB_F0				  CODE	    01F8	 605
TB_F1				  CODE	    0200	 609
TB_F2				  CODE	    0211	 622
TB_F3				  CODE	    0205	 611
TB_F4				  CODE	    020A	 613
TB_G0				  CODE	    0243	 661
TB_G1				  CODE	    0231	 644
TB_G2				  CODE	    023C	 652
TB_MA				  MACRO	        	 301
TB_MC				  MACRO	        	 379
TB_ME				  MACRO	        	 526
TB_MF				  MACRO	        	 568
TCH				  DATA	      8F	  47
TCL				  DATA	      8E	  46
TC_A0				  CODE	    0265	 721
TC_A1				  CODE	    0257	 712
TC_A2				  CODE	    026E	 728
TC_A3				  CODE	    0276	 737
TC_B1				  CODE	    028C	 757
TC_C0				  CODE	    02A4	 777
TC_C1				  CODE	    0296	 767
TC_C2				  CODE	    02AC	 784
TC_C3				  CODE	    02B3	 793
TC_D0				  CODE	    02D0	 817
TC_D1				  CODE	    02C1	 805
TC_E0				  CODE	    02FD	 852
TC_F0				  CODE	    0320	 880
TC_G0				  CODE	    033A	 903
TC_H0				  CODE	    0358	 929
TC_H1				  CODE	    034E	 918
TC_H2				  CODE	    0345	 914
TC_H3				  CODE	    0353	 920
TC_I0				  CODE	    0374	 949
TC_I1				  CODE	    0366	 940
TC_I2				  CODE	    037D	 956
TC_I3				  CODE	    0385	 965
TC_J0				  CODE	    03A2	 988
TC_J1				  CODE	    0393	 976
TC_K0				  CODE	    03CF	1023
TC_L0				  CODE	    03F2	1051
TC_M0				  CODE	    040C	1074
TC_N0				  CODE	    042A	1100
TC_N1				  CODE	    0420	1089
TC_N2				  CODE	    0417	1085
TC_N3				  CODE	    0425	1091
TD_A0				  CODE	    0448	1153
TD_B0				  CODE	    046F	1188
TD_C0				  CODE	    0495	1222
TD_D0				  CODE	    04CD	1268
TEST_FAILED			  CODE	    2105       10387
TE_A0				  CODE	    04F0	1334
TE_B0				  CODE	    0575	1424

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 207



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TE_C0				  CODE	    05A2	1461
TE_D0				  CODE	    05B5	1480
TE_E0				  CODE	    05D7	1506
TE_F0				  CODE	    05EF	1540
TE_G0				  CODE	    0664	1622
TE_H0				  CODE	    068D	1657
TE_I0				  CODE	    06AF	1683
TE_MA				  MACRO	        	1306
TE_MF				  MACRO	        	1514
TF_A0				  CODE	    070B	1777
TF_B0				  CODE	    0728	1803
TF_C0				  CODE	    073E	1823
TF_D0				  CODE	    0789	1877
TF_E0				  CODE	    07A8	1903
TF_F0				  CODE	    07E3	1957
TF_G0				  CODE	    07FE	1983
TF_H0				  CODE	    0817	2005
TF_I0				  CODE	    0836	2031
TF_MA				  MACRO	        	1722
TF_MD				  MACRO	        	1831
TF_MF				  MACRO	        	1911
TG_A0				  CODE	    085B	2085
TG_B0				  CODE	    088D	2118
TG_C0				  CODE	    08A7	2141
TG_D0				  CODE	    08D2	2173
TG_E0				  CODE	    0935	2247
TG_MA				  MACRO	        	2183
TH				  DATA	      8D	  45
TIMER0				  CODE	    000B	  92
TIMER1				  CODE	    001B	  94
TIMER2				  CODE	    002B	  96
TK_A0				  CODE	    0BD6	3540
TK_B0				  CODE	    0C41	3620
TK_MA				  MACRO	        	3513
TL				  DATA	      8C	  44
TOP_MA				  MACRO	        	2310
TOP_MB				  MACRO	        	2328
TOP_MC				  MACRO	        	2346
TO_A0				  CODE	    1D3A	9301
TO_B0				  CODE	    1D56	9326
TO_C0				  CODE	    1D76	9352
TO_D0				  CODE	    1D91	9376
TP_A0				  CODE	    1DB8	9426
TP_B0				  CODE	    1DD8	9462
TP_C0				  CODE	    1DFA	9492
TP_D0				  CODE	    1E1D	9523
TQ0				  CODE	    1E37	9561
TQ1				  CODE	    1E33	9560
TQ_A0				  CODE	    1E3F	9570
TQ_B0				  CODE	    1E65	9604
TR_A0				  CODE	    1E9B	9671
TR_AJMP0			  CODE	    1EEB	9755
TR_B0				  CODE	    1EAC	9690
TR_C0				  CODE	    1ECA	9720
TR_D0				  CODE	    1EDF	9742
TR_E0				  CODE	    1EF6	9768

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 208



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TR_RV0				  CODE	    1E85	9655
TR_RV1				  CODE	    1EA4	9681
TR_RV2				  CODE	    1EA6	9682
TR_RV3				  CODE	    1EBD	9708
TR_RV4				  CODE	    1ED8	9733
TR_RV5				  CODE	    1EED	9757
TR_SUB0				  CODE	    1E87	9656
TR_SUB1				  CODE	    800C       10456
TR_SUB1_FAIL			  CODE	    801E       10464
TR_SUB2				  CODE	    8000       10442
TR_SUB3				  CODE	    8006       10451
TSTAT				  DATA	      88	  42
TST_ALU				  MACRO	        	2371
TST_PSW				  MACRO	        	2287
TS_A0				  CODE	    1F2D	9830
TS_B0				  CODE	    1F5B	9865
TT_A0				  CODE	    1FAB	9959
TT_A_DIVZERO			  CODE	    1FA0	9944
TT_A_LOOP			  CODE	    1F7B	9915
TT_A_NEXT			  CODE	    1FA2	9947
TT_A_TAB			  CODE	    1FB3	9968
TT_A_TAB_END			  CODE	    1FE0	9978
TT_B0				  CODE	    2019       10039
TT_B_0				  CODE	    2004       10018
TT_B_LOOP			  CODE	    1FE7	9992
TT_B_NOOVF			  CODE	    1FFE       10013
TT_B_TAB			  CODE	    2021       10048
TT_B_TAB_END			  CODE	    2045       10058
TU_A0				  CODE	    2094       10138
TU_A_DONE			  CODE	    208E       10129
TU_A_TEST			  CODE	    2070       10105
TV_A0				  CODE	    20AA       10190
TV_B0				  CODE	    20BC       10256
TV_C0				  CODE	    20DB       10305
TXIRQ				  BIT	      98	  75
TXRDY				  BIT	      9C	  77
