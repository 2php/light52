
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	src\tb51_cpu.a51
	Object File:	bin\tb51_cpu.hex
	List File:	lst\tb51_cpu.lst



 Line  I  Addr  Code            Source

    1:				;-------------------------------------------------------------------------------
    2:				; tb51_cpu.a51 -- MCS51 instruction set test bench.
    3:				;-------------------------------------------------------------------------------
    4:				; This program is meant to verify the basic operation of an MCS51 CPU
    5:				; instruction set implementation.
    6:				; It is far too weak to rely on it exclusively but it can help detect gross
    7:				; implementation errors (overclocked CPUs, timing errors in FPGA cores, that
    8:				; kind of thing).
    9:				;
   10:				; The program is not yet ready to run on actual hardware (UART interface).
   11:				;
   12:				; For a full verification of the instruction set, an instruction set exerciser
   13:				; such as 'zexall' for the Z80 would be more suitable. This one is too weak.
   14:				;
   15:				; The program is meant to run in actual hardware or on a simulated environment.
   16:				; In the latter case you can use the co-simulation features of the light52
   17:				; project to pinpoint bugs.
   18:				;
   19:				; FIXME add assembly option to run tests in an (possibly infinite) loop.
   20:				;-------------------------------------------------------------------------------
   21:				; Major limitations:
   22:				;   1.- PSW is not checked for undue changes.
   23:				;   2.- <#imm> instructions are tested with one imm value only.
   24:				;   3.- <rel> jumps tested with small values (not near corner values).
   25:				;   4.- <bit> tested on 1 byte only, on 2 bits only.
   26:				;   5.- BCD instructions (DA, XCHG) not tested at all.
   27:				;
   28:				; Note there are too many limitations to list. Use this test bench as a first
   29:				; approximation only. If your CPU fails this test, it must be dead!
   30:				;-------------------------------------------------------------------------------
   31:
   32:				        ;-- Parameters common to all tests -------------------------------------
   33:
   34:		N      0060	dir0    set     060h                ; Address used in direct addressing tests
   35:		N      0061	dir1    set     061h                ; Address used in direct addressing tests
   36:		N      006E	fail    set     06eh                ; (IDATA) set to 1 upon test failure
   37:		N      0070	saved_psw set   070h                ; (IDATA) temp store for PSW value
   38:		N      009F	stack0  set     09fh                ; (IDATA) stack addr used for push/pop tests
   39:
   40:
   41:				        ;-- Macros common to all tests -----------------------------------------
   42:
   43:				        ; putc: send character to console (UART)

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   44:				        ; If you change this macro, make sure it DOES NOT MODIFY PSW!
   45:				putc    macro   character
   46:				        local   putc_loop
   47:				putc_loop:
   48:				        ;jnb     SCON.1,putc_loop
   49:				        ;clr     SCON.1
   50:				        mov     SBUF,character
   51:				        endm
   52:
   53:				        ; put_crlf: send CR+LF to console
   54:				put_crlf macro
   55:				        putc    #13
   56:				        putc    #10
   57:				        endm
   58:
   59:				        ;eot char, label: 'end of test' to be used at the end of all tests.
   60:				        ; If you run into this macro it will print character 'char' and
   61:				        ; continue.
   62:				        ; If you jump to label 'label', it will instead print char '?' and
   63:				        ; will set variable 'fail' to 1, then it will continue.
   64:				eot     macro   char,label
   65:				        local   skip
   66:				        putc    #char
   67:				        sjmp    skip
   68:				label:  putc    #'?'
   69:				        mov     fail,#001h
   70:				skip:
   71:				        endm
   72:
   73:				        ;-- Reset & interrupt vectors ------------------------------------------
   74:
   75:		N      0000	        org     00h
   76:	  0000	02 00 30	        ljmp    start               ;
   77:		N      0003	        org     03h
   78:		N      000B	        org     0bh
   79:		N      0013	        org     13h
   80:		N      001B	        org     1bh
   81:		N      0023	        org     23h
   82:
   83:
   84:				        ;-- Main test program --------------------------------------------------
   85:		N      0030	        org     30h
   86:	  0030			start:
   87:				        ; Initialize serial port
   88:	  0030	75 89 20	        mov     TMOD,#20h           ; C/T = 0, Mode = 2
   89:	  0033	75 8D FD	        mov     TH1,#0fdh           ; 9600 bauds @11.xxx MHz
   90:	  0036	75 88 40	        mov     TCON,#40h           ; Enable T1
   91:	  0039	75 98 52	        mov     SCON,#52h           ; 8/N/1, TI enabled
   92:
   93:				        ; Clear failure flag
   94:	  003C	75 6E 00	        mov     fail,#000h
   95:
   96:
   97:				        ;-- Test series A ------------------------------------------------------
   98:				        ; Test the basic opcodes needed in later tests:
   99:				        ; a.- Serial port initialization is OK

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

  100:				        ; a.- Bootstrap instructions work as used
  101:				        ; b.- <SJMP rel> (small positive rel only)
  102:				        ; c.- ACC can be loaded with direct mode addressing (as an SFR)
  103:				        ; c.- <CJNE a,#imm,rel>
  104:				        ; d.- <DJNZ dir, rel> (small positive rel only)
  105:				        ; e.- <MOV  a,dir>
  106:				        ; Note that one instance of LJMP has been tested too.
  107:
  108:				        putc    #'A'                ; start of test series
  109+ 1  003F			??0000:
  110+ 1			        ;jnb     SCON.1,putc_loop
  111+ 1			        ;clr     SCON.1
  112+ 1  003F	75 99 41	        mov     SBUF,#'A'
  113:
  114:				        ; If we arrive here at all, and you see the chars in the
  115:				        ; terminal, the A.a test has passed
  116:				        putc    #'a'
  117+ 1  0042			??0001:
  118+ 1			        ;jnb     SCON.1,putc_loop
  119+ 1			        ;clr     SCON.1
  120+ 1  0042	75 99 61	        mov     SBUF,#'a'
  121:
  122:	  0045	80 06		        sjmp    ta_b0               ; <SJMP rel> with very small positive rel
  123:				        putc    #'?'
  124+ 1  0047			??0002:
  125+ 1			        ;jnb     SCON.1,putc_loop
  126+ 1			        ;clr     SCON.1
  127+ 1  0047	75 99 3F	        mov     SBUF,#'?'
  128:	  004A	75 6E 01	        mov     fail,#001h
  129:	  004D			ta_b0:  putc    #'b'
  130+ 1  004D			??0003:
  131+ 1			        ;jnb     SCON.1,putc_loop
  132+ 1			        ;clr     SCON.1
  133+ 1  004D	75 99 62	        mov     SBUF,#'b'
  134:
  135:
  136:	  0050	80 05		ta_c0:  sjmp    ta_c1
  137:	  0052			ta_c3:  putc    #'c'
  138+ 1  0052			??0004:
  139+ 1			        ;jnb     SCON.1,putc_loop
  140+ 1			        ;clr     SCON.1
  141+ 1  0052	75 99 63	        mov     SBUF,#'c'
  142:	  0055	80 18		        sjmp    ta_c4
  143:	  0057	75 E0 5A	ta_c1:  mov     0e0h,#5ah           ; load A as SFR
  144:	  005A	B4 5A F5	        cjne    a,#5ah,ta_c3        ; test cjne with == args...
  145:	  005D	B4 7A 06	        cjne    a,#7ah,ta_c2        ; ...with != args, rel>0...
  146:				        putc    #'?'
  147+ 1  0060			??0005:
  148+ 1			        ;jnb     SCON.1,putc_loop
  149+ 1			        ;clr     SCON.1
  150+ 1  0060	75 99 3F	        mov     SBUF,#'?'
  151:	  0063	75 6E 01	        mov     fail,#001h
  152:	  0066	B4 7A E9	ta_c2:  cjne    a,#7ah,ta_c3        ; ...and with != args, rel<0
  153:				        putc    #'?'
  154+ 1  0069			??0006:
  155+ 1			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

  156+ 1			        ;clr     SCON.1
  157+ 1  0069	75 99 3F	        mov     SBUF,#'?'
  158:	  006C	75 6E 01	        mov     fail,#001h
  159:	  006F			ta_c4:
  160:
  161:	  006F	75 60 02	        mov     dir0,#02h
  162:	  0072	D5 60 06	        djnz    dir0,ta_d1
  163:				        putc    #'?'
  164+ 1  0075			??0007:
  165+ 1			        ;jnb     SCON.1,putc_loop
  166+ 1			        ;clr     SCON.1
  167+ 1  0075	75 99 3F	        mov     SBUF,#'?'
  168:	  0078	75 6E 01	        mov     fail,#001h
  169:	  007B	D5 60 05	ta_d1:  djnz    dir0,ta_d2
  170:
  171:				        eot     'd',ta_d2
  172+ 1			        putc    #'d'
  173+ 2  007E			??0009:
  174+ 2			        ;jnb     SCON.1,putc_loop
  175+ 2			        ;clr     SCON.1
  176+ 2  007E	75 99 64	        mov     SBUF,#'d'
  177+ 1  0081	80 06		        sjmp    ??0008
  178+ 1  0083			ta_d2:  putc    #'?'
  179+ 2  0083			??0010:
  180+ 2			        ;jnb     SCON.1,putc_loop
  181+ 2			        ;clr     SCON.1
  182+ 2  0083	75 99 3F	        mov     SBUF,#'?'
  183+ 1  0086	75 6E 01	        mov     fail,#001h
  184+ 1  0089			??0008:
  185:
  186:	  0089	75 60 A5	        mov     dir0,#0a5h          ; test mov a,dir
  187:	  008C	E5 60		        mov     a,dir0
  188:	  008E	B4 A5 05	        cjne    a,#0a5h,ta_e1
  189:
  190:				        eot     'e',ta_e1
  191+ 1			        putc    #'e'
  192+ 2  0091			??0012:
  193+ 2			        ;jnb     SCON.1,putc_loop
  194+ 2			        ;clr     SCON.1
  195+ 2  0091	75 99 65	        mov     SBUF,#'e'
  196+ 1  0094	80 06		        sjmp    ??0011
  197+ 1  0096			ta_e1:  putc    #'?'
  198+ 2  0096			??0013:
  199+ 2			        ;jnb     SCON.1,putc_loop
  200+ 2			        ;clr     SCON.1
  201+ 2  0096	75 99 3F	        mov     SBUF,#'?'
  202+ 1  0099	75 6E 01	        mov     fail,#001h
  203+ 1  009C			??0011:
  204:
  205:				        put_crlf                    ; end of test series
  206+ 1			        putc    #13
  207+ 2  009C			??0014:
  208+ 2			        ;jnb     SCON.1,putc_loop
  209+ 2			        ;clr     SCON.1
  210+ 2  009C	75 99 0D	        mov     SBUF,#13
  211+ 1			        putc    #10

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



 Line  I  Addr  Code            Source

  212+ 2  009F			??0015:
  213+ 2			        ;jnb     SCON.1,putc_loop
  214+ 2			        ;clr     SCON.1
  215+ 2  009F	75 99 0A	        mov     SBUF,#10
  216:
  217:				        ;-- Test series B ------------------------------------------------------
  218:				        ; Test CJNE plus a few aux opcodes
  219:				        ; a.- <MOV Rn, #imm>
  220:				        ; a.- <MOV a, Rn>
  221:				        ; b.- <JC rel>, <JNC rel>
  222:				        ; c.- <CJNE Rn, #imm, rel>
  223:				        ; d.- <SETB C>, <CLR C>, <CPL C>
  224:				        ; e.- <MOV @Ri, #imm>
  225:				        ; f.- <CJNE @Ri, #imm, rel>
  226:				        ; g.- <CJNE A, dir, rel>
  227:
  228:				        putc    #'B'                ; start of test series
  229+ 1  00A2			??0016:
  230+ 1			        ;jnb     SCON.1,putc_loop
  231+ 1			        ;clr     SCON.1
  232+ 1  00A2	75 99 42	        mov     SBUF,#'B'
  233:
  234:				tb_ma   macro   reg,val
  235:				        mov     reg,val
  236:				        mov     a,reg
  237:				        cjne    a,val,tb_a1
  238:				        endm
  239:
  240:				        tb_ma   r0,#081h
  241+ 1  00A5	78 81		        mov     r0,#081h
  242+ 1  00A7	E8		        mov     a,r0
  243+ 1  00A8	B4 81 2F	        cjne    a,#081h,tb_a1
  244:				        tb_ma   r1,#043h
  245+ 1  00AB	79 43		        mov     r1,#043h
  246+ 1  00AD	E9		        mov     a,r1
  247+ 1  00AE	B4 43 29	        cjne    a,#043h,tb_a1
  248:				        tb_ma   r2,#027h
  249+ 1  00B1	7A 27		        mov     r2,#027h
  250+ 1  00B3	EA		        mov     a,r2
  251+ 1  00B4	B4 27 23	        cjne    a,#027h,tb_a1
  252:				        tb_ma   r3,#0c2h
  253+ 1  00B7	7B C2		        mov     r3,#0c2h
  254+ 1  00B9	EB		        mov     a,r3
  255+ 1  00BA	B4 C2 1D	        cjne    a,#0c2h,tb_a1
  256:				        tb_ma   r4,#0f1h
  257+ 1  00BD	7C F1		        mov     r4,#0f1h
  258+ 1  00BF	EC		        mov     a,r4
  259+ 1  00C0	B4 F1 17	        cjne    a,#0f1h,tb_a1
  260:				        tb_ma   r5,#004h
  261+ 1  00C3	7D 04		        mov     r5,#004h
  262+ 1  00C5	ED		        mov     a,r5
  263+ 1  00C6	B4 04 11	        cjne    a,#004h,tb_a1
  264:				        tb_ma   r6,#092h
  265+ 1  00C9	7E 92		        mov     r6,#092h
  266+ 1  00CB	EE		        mov     a,r6
  267+ 1  00CC	B4 92 0B	        cjne    a,#092h,tb_a1

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6



 Line  I  Addr  Code            Source

  268:				        tb_ma   r7,#01fh
  269+ 1  00CF	7F 1F		        mov     r7,#01fh
  270+ 1  00D1	EF		        mov     a,r7
  271+ 1  00D2	B4 1F 05	        cjne    a,#01fh,tb_a1
  272:
  273:				        eot     'a',tb_a1
  274+ 1			        putc    #'a'
  275+ 2  00D5			??0018:
  276+ 2			        ;jnb     SCON.1,putc_loop
  277+ 2			        ;clr     SCON.1
  278+ 2  00D5	75 99 61	        mov     SBUF,#'a'
  279+ 1  00D8	80 06		        sjmp    ??0017
  280+ 1  00DA			tb_a1:  putc    #'?'
  281+ 2  00DA			??0019:
  282+ 2			        ;jnb     SCON.1,putc_loop
  283+ 2			        ;clr     SCON.1
  284+ 2  00DA	75 99 3F	        mov     SBUF,#'?'
  285+ 1  00DD	75 6E 01	        mov     fail,#001h
  286+ 1  00E0			??0017:
  287:
  288:	  00E0	75 D0 80	        mov     PSW,#80h            ; <JC rel>, <JNC rel>
  289:	  00E3	40 06		        jc      tb_b0
  290:				        putc    #'?'
  291+ 1  00E5			??0020:
  292+ 1			        ;jnb     SCON.1,putc_loop
  293+ 1			        ;clr     SCON.1
  294+ 1  00E5	75 99 3F	        mov     SBUF,#'?'
  295:	  00E8	75 6E 01	        mov     fail,#001h
  296:	  00EB	50 07		tb_b0:  jnc     tb_b1
  297:	  00ED	75 D0 00	        mov     PSW,#00h
  298:	  00F0	40 02		        jc      tb_b1
  299:	  00F2	50 06		        jnc     tb_b2
  300:	  00F4			tb_b1:  putc    #'?'
  301+ 1  00F4			??0021:
  302+ 1			        ;jnb     SCON.1,putc_loop
  303+ 1			        ;clr     SCON.1
  304+ 1  00F4	75 99 3F	        mov     SBUF,#'?'
  305:	  00F7	75 6E 01	        mov     fail,#001h
  306:	  00FA			tb_b2:  putc    #'b'
  307+ 1  00FA			??0022:
  308+ 1			        ;jnb     SCON.1,putc_loop
  309+ 1			        ;clr     SCON.1
  310+ 1  00FA	75 99 62	        mov     SBUF,#'b'
  311:
  312:				tb_mc   macro   reg,val
  313:				        local   tb_mc0
  314:				        local   tb_mc1
  315:				        mov     reg,val+1
  316:				        cjne    reg,val,tb_mc0
  317:				        putc    #'?'
  318:				        mov     fail,#001h
  319:				tb_mc1: mov     reg,val
  320:				tb_mc0: cjne    reg,val,tb_mc1
  321:				        endm
  322:
  323:				        tb_mc   r0,#091h            ; first test the jumps for all Rn regs

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 7



 Line  I  Addr  Code            Source

  324+ 1  00FD	78 92		        mov     r0,#091h+1
  325+ 1  00FF	B8 91 08	        cjne    r0,#091h,??0023
  326+ 1			        putc    #'?'
  327+ 2  0102			??0025:
  328+ 2			        ;jnb     SCON.1,putc_loop
  329+ 2			        ;clr     SCON.1
  330+ 2  0102	75 99 3F	        mov     SBUF,#'?'
  331+ 1  0105	75 6E 01	        mov     fail,#001h
  332+ 1  0108	78 91		??0024: mov     r0,#091h
  333+ 1  010A	B8 91 FB	??0023: cjne    r0,#091h,??0024
  334:				        tb_mc   r1,#0a2h
  335+ 1  010D	79 A3		        mov     r1,#0a2h+1
  336+ 1  010F	B9 A2 08	        cjne    r1,#0a2h,??0026
  337+ 1			        putc    #'?'
  338+ 2  0112			??0028:
  339+ 2			        ;jnb     SCON.1,putc_loop
  340+ 2			        ;clr     SCON.1
  341+ 2  0112	75 99 3F	        mov     SBUF,#'?'
  342+ 1  0115	75 6E 01	        mov     fail,#001h
  343+ 1  0118	79 A2		??0027: mov     r1,#0a2h
  344+ 1  011A	B9 A2 FB	??0026: cjne    r1,#0a2h,??0027
  345:				        tb_mc   r2,#0b3h
  346+ 1  011D	7A B4		        mov     r2,#0b3h+1
  347+ 1  011F	BA B3 08	        cjne    r2,#0b3h,??0029
  348+ 1			        putc    #'?'
  349+ 2  0122			??0031:
  350+ 2			        ;jnb     SCON.1,putc_loop
  351+ 2			        ;clr     SCON.1
  352+ 2  0122	75 99 3F	        mov     SBUF,#'?'
  353+ 1  0125	75 6E 01	        mov     fail,#001h
  354+ 1  0128	7A B3		??0030: mov     r2,#0b3h
  355+ 1  012A	BA B3 FB	??0029: cjne    r2,#0b3h,??0030
  356:				        tb_mc   r3,#0c4h
  357+ 1  012D	7B C5		        mov     r3,#0c4h+1
  358+ 1  012F	BB C4 08	        cjne    r3,#0c4h,??0032
  359+ 1			        putc    #'?'
  360+ 2  0132			??0034:
  361+ 2			        ;jnb     SCON.1,putc_loop
  362+ 2			        ;clr     SCON.1
  363+ 2  0132	75 99 3F	        mov     SBUF,#'?'
  364+ 1  0135	75 6E 01	        mov     fail,#001h
  365+ 1  0138	7B C4		??0033: mov     r3,#0c4h
  366+ 1  013A	BB C4 FB	??0032: cjne    r3,#0c4h,??0033
  367:				        tb_mc   r4,#0d5h
  368+ 1  013D	7C D6		        mov     r4,#0d5h+1
  369+ 1  013F	BC D5 08	        cjne    r4,#0d5h,??0035
  370+ 1			        putc    #'?'
  371+ 2  0142			??0037:
  372+ 2			        ;jnb     SCON.1,putc_loop
  373+ 2			        ;clr     SCON.1
  374+ 2  0142	75 99 3F	        mov     SBUF,#'?'
  375+ 1  0145	75 6E 01	        mov     fail,#001h
  376+ 1  0148	7C D5		??0036: mov     r4,#0d5h
  377+ 1  014A	BC D5 FB	??0035: cjne    r4,#0d5h,??0036
  378:				        tb_mc   r5,#0e6h
  379+ 1  014D	7D E7		        mov     r5,#0e6h+1

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 8



 Line  I  Addr  Code            Source

  380+ 1  014F	BD E6 08	        cjne    r5,#0e6h,??0038
  381+ 1			        putc    #'?'
  382+ 2  0152			??0040:
  383+ 2			        ;jnb     SCON.1,putc_loop
  384+ 2			        ;clr     SCON.1
  385+ 2  0152	75 99 3F	        mov     SBUF,#'?'
  386+ 1  0155	75 6E 01	        mov     fail,#001h
  387+ 1  0158	7D E6		??0039: mov     r5,#0e6h
  388+ 1  015A	BD E6 FB	??0038: cjne    r5,#0e6h,??0039
  389:				        tb_mc   r6,#0f7h
  390+ 1  015D	7E F8		        mov     r6,#0f7h+1
  391+ 1  015F	BE F7 08	        cjne    r6,#0f7h,??0041
  392+ 1			        putc    #'?'
  393+ 2  0162			??0043:
  394+ 2			        ;jnb     SCON.1,putc_loop
  395+ 2			        ;clr     SCON.1
  396+ 2  0162	75 99 3F	        mov     SBUF,#'?'
  397+ 1  0165	75 6E 01	        mov     fail,#001h
  398+ 1  0168	7E F7		??0042: mov     r6,#0f7h
  399+ 1  016A	BE F7 FB	??0041: cjne    r6,#0f7h,??0042
  400:				        tb_mc   r7,#008h
  401+ 1  016D	7F 09		        mov     r7,#008h+1
  402+ 1  016F	BF 08 08	        cjne    r7,#008h,??0044
  403+ 1			        putc    #'?'
  404+ 2  0172			??0046:
  405+ 2			        ;jnb     SCON.1,putc_loop
  406+ 2			        ;clr     SCON.1
  407+ 2  0172	75 99 3F	        mov     SBUF,#'?'
  408+ 1  0175	75 6E 01	        mov     fail,#001h
  409+ 1  0178	7F 08		??0045: mov     r7,#008h
  410+ 1  017A	BF 08 FB	??0044: cjne    r7,#008h,??0045
  411:
  412:	  017D	75 D0 00	tb_c0:  mov     PSW,#00h            ; now test the C flag with a single Rn reg
  413:	  0180	78 34		        mov     r0,#034h
  414:	  0182	B8 35 00	        cjne    r0,#035h,tb_c1
  415:	  0185	50 0F		tb_c1:  jnc     tb_c2
  416:	  0187	B8 34 00	        cjne    r0,#034h,tb_c3
  417:	  018A	40 0A		tb_c3:  jc      tb_c2
  418:	  018C	B8 33 00	        cjne    r0,#033h,tb_c4
  419:	  018F	40 05		tb_c4:  jc      tb_c2
  420:
  421:				        eot     'c',tb_c2
  422+ 1			        putc    #'c'
  423+ 2  0191			??0048:
  424+ 2			        ;jnb     SCON.1,putc_loop
  425+ 2			        ;clr     SCON.1
  426+ 2  0191	75 99 63	        mov     SBUF,#'c'
  427+ 1  0194	80 06		        sjmp    ??0047
  428+ 1  0196			tb_c2:  putc    #'?'
  429+ 2  0196			??0049:
  430+ 2			        ;jnb     SCON.1,putc_loop
  431+ 2			        ;clr     SCON.1
  432+ 2  0196	75 99 3F	        mov     SBUF,#'?'
  433+ 1  0199	75 6E 01	        mov     fail,#001h
  434+ 1  019C			??0047:
  435:

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 9



 Line  I  Addr  Code            Source

  436:	  019C	75 D0 80	        mov     PSW,#80h            ; test C set, reset and complement
  437:	  019F	C3		        clr     c
  438:	  01A0	40 0B		        jc      tb_d0
  439:	  01A2	D3		        setb    c
  440:	  01A3	50 08		        jnc     tb_d0
  441:	  01A5	B3		        cpl     c
  442:	  01A6	40 05		        jc      tb_d0
  443:
  444:				        eot     'd',tb_d0
  445+ 1			        putc    #'d'
  446+ 2  01A8			??0051:
  447+ 2			        ;jnb     SCON.1,putc_loop
  448+ 2			        ;clr     SCON.1
  449+ 2  01A8	75 99 64	        mov     SBUF,#'d'
  450+ 1  01AB	80 06		        sjmp    ??0050
  451+ 1  01AD			tb_d0:  putc    #'?'
  452+ 2  01AD			??0052:
  453+ 2			        ;jnb     SCON.1,putc_loop
  454+ 2			        ;clr     SCON.1
  455+ 2  01AD	75 99 3F	        mov     SBUF,#'?'
  456+ 1  01B0	75 6E 01	        mov     fail,#001h
  457+ 1  01B3			??0050:
  458:
  459:				tb_me   macro   reg
  460:				        mov     reg,#dir0
  461:				        mov     dir0,#12h
  462:				        mov     a,dir0
  463:				        cjne    a,#012h,tb_e0
  464:				        mov     @reg,#0f5h
  465:				        mov     a,dir0
  466:				        cjne    a,#0f5h,tb_e0
  467:				        endm
  468:
  469:				        tb_me   r0                  ; test <mov @ri, #imm> with both regs
  470+ 1  01B3	78 60		        mov     r0,#dir0
  471+ 1  01B5	75 60 12	        mov     dir0,#12h
  472+ 1  01B8	E5 60		        mov     a,dir0
  473+ 1  01BA	B4 12 1D	        cjne    a,#012h,tb_e0
  474+ 1  01BD	76 F5		        mov     @r0,#0f5h
  475+ 1  01BF	E5 60		        mov     a,dir0
  476+ 1  01C1	B4 F5 16	        cjne    a,#0f5h,tb_e0
  477:				        tb_me   r1
  478+ 1  01C4	79 60		        mov     r1,#dir0
  479+ 1  01C6	75 60 12	        mov     dir0,#12h
  480+ 1  01C9	E5 60		        mov     a,dir0
  481+ 1  01CB	B4 12 0C	        cjne    a,#012h,tb_e0
  482+ 1  01CE	77 F5		        mov     @r1,#0f5h
  483+ 1  01D0	E5 60		        mov     a,dir0
  484+ 1  01D2	B4 F5 05	        cjne    a,#0f5h,tb_e0
  485:
  486:				        eot     'e',tb_e0
  487+ 1			        putc    #'e'
  488+ 2  01D5			??0054:
  489+ 2			        ;jnb     SCON.1,putc_loop
  490+ 2			        ;clr     SCON.1
  491+ 2  01D5	75 99 65	        mov     SBUF,#'e'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 10



 Line  I  Addr  Code            Source

  492+ 1  01D8	80 06		        sjmp    ??0053
  493+ 1  01DA			tb_e0:  putc    #'?'
  494+ 2  01DA			??0055:
  495+ 2			        ;jnb     SCON.1,putc_loop
  496+ 2			        ;clr     SCON.1
  497+ 2  01DA	75 99 3F	        mov     SBUF,#'?'
  498+ 1  01DD	75 6E 01	        mov     fail,#001h
  499+ 1  01E0			??0053:
  500:
  501:				tb_mf   macro   reg,val
  502:				        local   tb_mf0
  503:				        local   tb_mf1
  504:				        mov     reg,#30h
  505:				        mov     @reg,val+1
  506:				        cjne    @reg,val,tb_mf0
  507:				        putc    #'?'
  508:				        mov     fail,#001h
  509:				tb_mf1: mov     @reg,val
  510:				tb_mf0: cjne    @reg,val,tb_mf1
  511:				        endm
  512:
  513:				        tb_mf   r0,#12h
  514+ 1  01E0	78 30		        mov     r0,#30h
  515+ 1  01E2	76 13		        mov     @r0,#12h+1
  516+ 1  01E4	B6 12 08	        cjne    @r0,#12h,??0056
  517+ 1			        putc    #'?'
  518+ 2  01E7			??0058:
  519+ 2			        ;jnb     SCON.1,putc_loop
  520+ 2			        ;clr     SCON.1
  521+ 2  01E7	75 99 3F	        mov     SBUF,#'?'
  522+ 1  01EA	75 6E 01	        mov     fail,#001h
  523+ 1  01ED	76 12		??0057: mov     @r0,#12h
  524+ 1  01EF	B6 12 FB	??0056: cjne    @r0,#12h,??0057
  525:				        tb_mf   r1,#34h
  526+ 1  01F2	79 30		        mov     r1,#30h
  527+ 1  01F4	77 35		        mov     @r1,#34h+1
  528+ 1  01F6	B7 34 08	        cjne    @r1,#34h,??0059
  529+ 1			        putc    #'?'
  530+ 2  01F9			??0061:
  531+ 2			        ;jnb     SCON.1,putc_loop
  532+ 2			        ;clr     SCON.1
  533+ 2  01F9	75 99 3F	        mov     SBUF,#'?'
  534+ 1  01FC	75 6E 01	        mov     fail,#001h
  535+ 1  01FF	77 34		??0060: mov     @r1,#34h
  536+ 1  0201	B7 34 FB	??0059: cjne    @r1,#34h,??0060
  537:
  538:	  0204	78 30		tb_f0:  mov     r0,#30h             ; now test the C flag with a single Rn reg
  539:	  0206	C3		        clr     c
  540:	  0207	76 34		        mov     @r0,#034h
  541:	  0209	B6 35 00	        cjne    @r0,#035h,tb_f1
  542:	  020C	50 0F		tb_f1:  jnc     tb_f2
  543:	  020E	B6 34 00	        cjne    @r0,#034h,tb_f3
  544:	  0211	40 0A		tb_f3:  jc      tb_f2
  545:	  0213	B6 33 00	        cjne    @r0,#033h,tb_f4
  546:	  0216	40 05		tb_f4:  jc      tb_f2
  547:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 11



 Line  I  Addr  Code            Source

  548:				        eot     'f',tb_f2
  549+ 1			        putc    #'f'
  550+ 2  0218			??0063:
  551+ 2			        ;jnb     SCON.1,putc_loop
  552+ 2			        ;clr     SCON.1
  553+ 2  0218	75 99 66	        mov     SBUF,#'f'
  554+ 1  021B	80 06		        sjmp    ??0062
  555+ 1  021D			tb_f2:  putc    #'?'
  556+ 2  021D			??0064:
  557+ 2			        ;jnb     SCON.1,putc_loop
  558+ 2			        ;clr     SCON.1
  559+ 2  021D	75 99 3F	        mov     SBUF,#'?'
  560+ 1  0220	75 6E 01	        mov     fail,#001h
  561+ 1  0223			??0062:
  562:
  563:	  0223	75 60 C0	        mov     dir0,#0c0h
  564:	  0226	75 31 C1	        mov     031h,#0c1h
  565:	  0229	75 32 C2	        mov     032h,#0c2h
  566:	  022C	C3		        clr     c
  567:	  022D	74 C1		        mov     a,#0c1h
  568:	  022F	B5 31 1D	        cjne    a,031h,tb_g0
  569:	  0232	40 1B		        jc      tb_g0
  570:	  0234	B5 32 06	        cjne    a,032h,tb_g1
  571:				        putc    #'?'
  572+ 1  0237			??0065:
  573+ 1			        ;jnb     SCON.1,putc_loop
  574+ 1			        ;clr     SCON.1
  575+ 1  0237	75 99 3F	        mov     SBUF,#'?'
  576:	  023A	75 6E 01	        mov     fail,#001h
  577:	  023D	50 10		tb_g1:  jnc     tb_g0
  578:	  023F	B5 60 06	        cjne    a,dir0,tb_g2
  579:				        putc    #'$'
  580+ 1  0242			??0066:
  581+ 1			        ;jnb     SCON.1,putc_loop
  582+ 1			        ;clr     SCON.1
  583+ 1  0242	75 99 24	        mov     SBUF,#'$'
  584:	  0245	75 6E 01	        mov     fail,#001h
  585:	  0248	40 05		tb_g2:  jc      tb_g0
  586:
  587:				        eot     'g',tb_g0
  588+ 1			        putc    #'g'
  589+ 2  024A			??0068:
  590+ 2			        ;jnb     SCON.1,putc_loop
  591+ 2			        ;clr     SCON.1
  592+ 2  024A	75 99 67	        mov     SBUF,#'g'
  593+ 1  024D	80 06		        sjmp    ??0067
  594+ 1  024F			tb_g0:  putc    #'?'
  595+ 2  024F			??0069:
  596+ 2			        ;jnb     SCON.1,putc_loop
  597+ 2			        ;clr     SCON.1
  598+ 2  024F	75 99 3F	        mov     SBUF,#'?'
  599+ 1  0252	75 6E 01	        mov     fail,#001h
  600+ 1  0255			??0067:
  601:
  602:				        put_crlf                    ; end of test series
  603+ 1			        putc    #13

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 12



 Line  I  Addr  Code            Source

  604+ 2  0255			??0070:
  605+ 2			        ;jnb     SCON.1,putc_loop
  606+ 2			        ;clr     SCON.1
  607+ 2  0255	75 99 0D	        mov     SBUF,#13
  608+ 1			        putc    #10
  609+ 2  0258			??0071:
  610+ 2			        ;jnb     SCON.1,putc_loop
  611+ 2			        ;clr     SCON.1
  612+ 2  0258	75 99 0A	        mov     SBUF,#10
  613:
  614:
  615:				        ;-- Test series C ------------------------------------------------------
  616:				        ; Bit operations and the rest of the conditional rel jumps
  617:				        ; The following tests will use a bit address within the IRAM
  618:				        ; a.- <JB bit, rel>, <JNB bit, rel>
  619:				        ; b.- <MOV A, #imm>
  620:				        ; c.- <JZ rel>, <JNZ rel>
  621:				        ; d.- <CLR bit>, <CPL bit>
  622:				        ; e.- <ANL C, bit>, <ORL C, bit>
  623:				        ; e.- <ANL C, /bit>, <ORL C, /bit>
  624:				        ; f.- <MOV C,bit>, <MOV bit, C>
  625:				        ; g.- <SETB bit>
  626:				        ; h.- <JBC bit>
  627:				        ; The following tests are the same as above except a bit address within
  628:				        ; SFR B is used.
  629:				        ; i.- <JB bit, rel>, <JNB bit, rel>
  630:				        ; j.- <CLR bit>, <CPL bit>
  631:				        ; k.- <ANL C, bit>, <ORL C, bit>
  632:				        ; k.- <ANL C, /bit>, <ORL C, /bit>
  633:				        ; l.- <MOV C,bit>, <MOV bit, C>
  634:				        ; m.- <SETB bit>
  635:				        ; n.- <JBC bit>
  636:
  637:				        putc    #'C'                ; start of test series
  638+ 1  025B			??0072:
  639+ 1			        ;jnb     SCON.1,putc_loop
  640+ 1			        ;clr     SCON.1
  641+ 1  025B	75 99 43	        mov     SBUF,#'C'
  642:
  643:	  025E	75 2F 80	        mov     02fh,#80h           ; We'll be testing bits 2F.7 and 2F.6
  644:	  0261	80 0E		        sjmp    tc_a0
  645:	  0263	30 7F 1C	tc_a1:  jnb     07fh,tc_a3          ; JNB jumps not on bit set
  646:	  0266	30 7E 11	        jnb     07eh,tc_a2          ; JNB jumps on bit clear
  647:				        putc    #'?'
  648+ 1  0269			??0073:
  649+ 1			        ;jnb     SCON.1,putc_loop
  650+ 1			        ;clr     SCON.1
  651+ 1  0269	75 99 3F	        mov     SBUF,#'?'
  652:	  026C	75 6E 01	        mov     fail,#001h
  653:	  026F	80 11		        sjmp    tc_a3
  654:	  0271	20 7F EF	tc_a0:  jb      07fh,tc_a1          ; JB jumps on bit set
  655:				        putc    #'!'
  656+ 1  0274			??0074:
  657+ 1			        ;jnb     SCON.1,putc_loop
  658+ 1			        ;clr     SCON.1
  659+ 1  0274	75 99 21	        mov     SBUF,#'!'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 13



 Line  I  Addr  Code            Source

  660:	  0277	75 6E 01	        mov     fail,#001h
  661:	  027A	20 7E 05	tc_a2:  jb      07eh,tc_a3          ; JB jumps not on bit clear
  662:
  663:				        eot     'a',tc_a3
  664+ 1			        putc    #'a'
  665+ 2  027D			??0076:
  666+ 2			        ;jnb     SCON.1,putc_loop
  667+ 2			        ;clr     SCON.1
  668+ 2  027D	75 99 61	        mov     SBUF,#'a'
  669+ 1  0280	80 06		        sjmp    ??0075
  670+ 1  0282			tc_a3:  putc    #'?'
  671+ 2  0282			??0077:
  672+ 2			        ;jnb     SCON.1,putc_loop
  673+ 2			        ;clr     SCON.1
  674+ 2  0282	75 99 3F	        mov     SBUF,#'?'
  675+ 1  0285	75 6E 01	        mov     fail,#001h
  676+ 1  0288			??0075:
  677:
  678:	  0288	75 E0 79	        mov     0e0h,#079h          ; init acc (as sfr) with some data
  679:	  028B	B4 79 0A	        cjne    a,#079h,tc_b1
  680:	  028E	74 5A		        mov     a,#05ah             ; now load a with imm data...
  681:	  0290	B4 5A 05	        cjne    a,#05ah,tc_b1       ; ...and make sure a got the data
  682:
  683:				        eot     'b',tc_b1
  684+ 1			        putc    #'b'
  685+ 2  0293			??0079:
  686+ 2			        ;jnb     SCON.1,putc_loop
  687+ 2			        ;clr     SCON.1
  688+ 2  0293	75 99 62	        mov     SBUF,#'b'
  689+ 1  0296	80 06		        sjmp    ??0078
  690+ 1  0298			tc_b1:  putc    #'?'
  691+ 2  0298			??0080:
  692+ 2			        ;jnb     SCON.1,putc_loop
  693+ 2			        ;clr     SCON.1
  694+ 2  0298	75 99 3F	        mov     SBUF,#'?'
  695+ 1  029B	75 6E 01	        mov     fail,#001h
  696+ 1  029E			??0078:
  697:
  698:	  029E	74 80		        mov     a,#80h
  699:	  02A0	80 0E		        sjmp    tc_c0
  700:	  02A2	60 1B		tc_c1:  jz      tc_c3               ; JZ jumps not on acc!=0
  701:	  02A4	74 00		        mov     a,#00h
  702:	  02A6	60 10		        jz      tc_c2               ; JZ jumps on acc==0
  703:				        putc    #'?'
  704+ 1  02A8			??0081:
  705+ 1			        ;jnb     SCON.1,putc_loop
  706+ 1			        ;clr     SCON.1
  707+ 1  02A8	75 99 3F	        mov     SBUF,#'?'
  708:	  02AB	75 6E 01	        mov     fail,#001h
  709:	  02AE	80 0F		        sjmp    tc_c3
  710:	  02B0	70 F0		tc_c0:  jnz     tc_c1               ; JNZ jumps on acc!=0
  711:				        putc    #'!'
  712+ 1  02B2			??0082:
  713+ 1			        ;jnb     SCON.1,putc_loop
  714+ 1			        ;clr     SCON.1
  715+ 1  02B2	75 99 21	        mov     SBUF,#'!'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 14



 Line  I  Addr  Code            Source

  716:	  02B5	75 6E 01	        mov     fail,#001h
  717:	  02B8	70 05		tc_c2:  jnz     tc_c3               ; JNZ jumps not on acc==0
  718:
  719:				        eot     'c',tc_c3
  720+ 1			        putc    #'c'
  721+ 2  02BA			??0084:
  722+ 2			        ;jnb     SCON.1,putc_loop
  723+ 2			        ;clr     SCON.1
  724+ 2  02BA	75 99 63	        mov     SBUF,#'c'
  725+ 1  02BD	80 06		        sjmp    ??0083
  726+ 1  02BF			tc_c3:  putc    #'?'
  727+ 2  02BF			??0085:
  728+ 2			        ;jnb     SCON.1,putc_loop
  729+ 2			        ;clr     SCON.1
  730+ 2  02BF	75 99 3F	        mov     SBUF,#'?'
  731+ 1  02C2	75 6E 01	        mov     fail,#001h
  732+ 1  02C5			??0083:
  733:
  734:
  735:	  02C5	75 2F 80	        mov     02fh,#80h           ; We'll be testing bit 2F.7
  736:	  02C8	20 7F 02	        jb      07fh,tc_d1
  737:	  02CB	80 0F		        sjmp    tc_d0
  738:	  02CD	C2 7F		tc_d1:  clr     07fh
  739:	  02CF	20 7F 0A	        jb      07fh,tc_d0
  740:	  02D2	B2 7F		        cpl     07fh
  741:	  02D4	30 7F 05	        jnb     07fh,tc_d0
  742:
  743:				        eot     'd',tc_d0
  744+ 1			        putc    #'d'
  745+ 2  02D7			??0087:
  746+ 2			        ;jnb     SCON.1,putc_loop
  747+ 2			        ;clr     SCON.1
  748+ 2  02D7	75 99 64	        mov     SBUF,#'d'
  749+ 1  02DA	80 06		        sjmp    ??0086
  750+ 1  02DC			tc_d0:  putc    #'?'
  751+ 2  02DC			??0088:
  752+ 2			        ;jnb     SCON.1,putc_loop
  753+ 2			        ;clr     SCON.1
  754+ 2  02DC	75 99 3F	        mov     SBUF,#'?'
  755+ 1  02DF	75 6E 01	        mov     fail,#001h
  756+ 1  02E2			??0086:
  757:
  758:	  02E2	75 2E 08	        mov     02eh,#08h           ; We'll be testing bits 2E.3 and 2E.2
  759:	  02E5	C3		        clr     c
  760:	  02E6	82 73		        anl     c,073h              ; Test ANL in all 4 input combinations
  761:	  02E8	40 1F		        jc      tc_e0
  762:	  02EA	D3		        setb    c
  763:	  02EB	82 73		        anl     c,073h
  764:	  02ED	50 1A		        jnc     tc_e0
  765:	  02EF	B0 72		        anl     c,/072h
  766:	  02F1	50 16		        jnc     tc_e0
  767:				                                    ; CY == 1
  768:	  02F3	72 73		        orl     c,073h              ; ORL-ing with 1 should give 1
  769:	  02F5	50 12		        jnc     tc_e0
  770:	  02F7	72 72		        orl     c,072h
  771:	  02F9	50 0E		        jnc     tc_e0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 15



 Line  I  Addr  Code            Source

  772:	  02FB	C3		        clr     c                   ; CY == 0
  773:	  02FC	72 73		        orl     c,073h              ; Now ORL c, 'bit' should give 'bit'
  774:	  02FE	50 09		        jnc     tc_e0
  775:	  0300	A0 72		        orl     c,/072h
  776:	  0302	50 05		        jnc     tc_e0
  777:
  778:				        eot     'e',tc_e0
  779+ 1			        putc    #'e'
  780+ 2  0304			??0090:
  781+ 2			        ;jnb     SCON.1,putc_loop
  782+ 2			        ;clr     SCON.1
  783+ 2  0304	75 99 65	        mov     SBUF,#'e'
  784+ 1  0307	80 06		        sjmp    ??0089
  785+ 1  0309			tc_e0:  putc    #'?'
  786+ 2  0309			??0091:
  787+ 2			        ;jnb     SCON.1,putc_loop
  788+ 2			        ;clr     SCON.1
  789+ 2  0309	75 99 3F	        mov     SBUF,#'?'
  790+ 1  030C	75 6E 01	        mov     fail,#001h
  791+ 1  030F			??0089:
  792:
  793:	  030F	75 2E 08	        mov     02eh,#08h           ; We'll be testing bits 2E.3 and 2E.2
  794:	  0312	C3		        clr     c
  795:	  0313	A2 73		        mov     c,073h
  796:	  0315	50 15		        jnc     tc_f0
  797:	  0317	A2 72		        mov     c,072h
  798:	  0319	40 11		        jc      tc_f0
  799:	  031B	C3		        clr     c
  800:	  031C	92 71		        mov     071h,c
  801:	  031E	20 71 0B	        jb      071h,tc_f0
  802:	  0321	D3		        setb    c
  803:	  0322	92 71		        mov     071h,c
  804:	  0324	30 71 05	        jnb     071h,tc_f0
  805:
  806:				        eot     'f',tc_f0
  807+ 1			        putc    #'f'
  808+ 2  0327			??0093:
  809+ 2			        ;jnb     SCON.1,putc_loop
  810+ 2			        ;clr     SCON.1
  811+ 2  0327	75 99 66	        mov     SBUF,#'f'
  812+ 1  032A	80 06		        sjmp    ??0092
  813+ 1  032C			tc_f0:  putc    #'?'
  814+ 2  032C			??0094:
  815+ 2			        ;jnb     SCON.1,putc_loop
  816+ 2			        ;clr     SCON.1
  817+ 2  032C	75 99 3F	        mov     SBUF,#'?'
  818+ 1  032F	75 6E 01	        mov     fail,#001h
  819+ 1  0332			??0092:
  820:
  821:	  0332	75 2E 00	        mov     02eh,#00h           ; We'll be testing bits 2E.3 and 2E.2
  822:	  0335	D2 73		        setb    073h
  823:	  0337	A2 73		        mov     c,073h
  824:	  0339	50 0B		        jnc     tc_g0
  825:	  033B	D2 72		        setb    072h
  826:	  033D	A2 72		        mov     c,072h
  827:	  033F	50 05		        jnc     tc_g0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 16



 Line  I  Addr  Code            Source

  828:
  829:				        eot     'g',tc_g0
  830+ 1			        putc    #'g'
  831+ 2  0341			??0096:
  832+ 2			        ;jnb     SCON.1,putc_loop
  833+ 2			        ;clr     SCON.1
  834+ 2  0341	75 99 67	        mov     SBUF,#'g'
  835+ 1  0344	80 06		        sjmp    ??0095
  836+ 1  0346			tc_g0:  putc    #'?'
  837+ 2  0346			??0097:
  838+ 2			        ;jnb     SCON.1,putc_loop
  839+ 2			        ;clr     SCON.1
  840+ 2  0346	75 99 3F	        mov     SBUF,#'?'
  841+ 1  0349	75 6E 01	        mov     fail,#001h
  842+ 1  034C			??0095:
  843:
  844:				        ; (better read the following code in execution order)
  845:	  034C	75 2E 08	        mov     02eh,#08h           ; We'll be testing bits 2E.3 and 2E.2
  846:	  034F	80 09		        sjmp    tc_h1               ; jump forward so we can test jump backwards
  847:	  0351	A2 73		tc_h2:  mov     c,073h              ; make sure the target bit is clear
  848:	  0353	40 0F		        jc      tc_h0
  849:	  0355	10 72 0C	        jbc     072h,tc_h0          ; JBC jumps not when target bit clear
  850:	  0358	80 05		        sjmp    tc_h3
  851:	  035A	10 73 F4	tc_h1:  jbc     073h,tc_h2          ; JBC jumps when target bit set
  852:	  035D	80 05		        sjmp    tc_h0
  853:	  035F			tc_h3:
  854:
  855:				        eot     'h',tc_h0
  856+ 1			        putc    #'h'
  857+ 2  035F			??0099:
  858+ 2			        ;jnb     SCON.1,putc_loop
  859+ 2			        ;clr     SCON.1
  860+ 2  035F	75 99 68	        mov     SBUF,#'h'
  861+ 1  0362	80 06		        sjmp    ??0098
  862+ 1  0364			tc_h0:  putc    #'?'
  863+ 2  0364			??0100:
  864+ 2			        ;jnb     SCON.1,putc_loop
  865+ 2			        ;clr     SCON.1
  866+ 2  0364	75 99 3F	        mov     SBUF,#'?'
  867+ 1  0367	75 6E 01	        mov     fail,#001h
  868+ 1  036A			??0098:
  869:
  870:	  036A	75 2F 00	        mov     02fh,#00h
  871:	  036D	75 F0 80	        mov     B,#80h              ; We'll be testing bits B.7 and B.6
  872:	  0370	80 0E		        sjmp    tc_i0
  873:	  0372	30 F7 1C	tc_i1:  jnb     B.7,tc_i3           ; JNB jumps not on bit set
  874:	  0375	30 F6 11	        jnb     B.6,tc_i2           ; JNB jumps on bit clear
  875:				        putc    #'?'
  876+ 1  0378			??0101:
  877+ 1			        ;jnb     SCON.1,putc_loop
  878+ 1			        ;clr     SCON.1
  879+ 1  0378	75 99 3F	        mov     SBUF,#'?'
  880:	  037B	75 6E 01	        mov     fail,#001h
  881:	  037E	80 11		        sjmp    tc_i3
  882:	  0380	20 F7 EF	tc_i0:  jb      B.7,tc_i1           ; JB jumps on bit set
  883:				        putc    #'!'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 17



 Line  I  Addr  Code            Source

  884+ 1  0383			??0102:
  885+ 1			        ;jnb     SCON.1,putc_loop
  886+ 1			        ;clr     SCON.1
  887+ 1  0383	75 99 21	        mov     SBUF,#'!'
  888:	  0386	75 6E 01	        mov     fail,#001h
  889:	  0389	20 F6 05	tc_i2:  jb      B.6,tc_i3           ; JB jumps not on bit clear
  890:
  891:				        eot     'i',tc_i3
  892+ 1			        putc    #'i'
  893+ 2  038C			??0104:
  894+ 2			        ;jnb     SCON.1,putc_loop
  895+ 2			        ;clr     SCON.1
  896+ 2  038C	75 99 69	        mov     SBUF,#'i'
  897+ 1  038F	80 06		        sjmp    ??0103
  898+ 1  0391			tc_i3:  putc    #'?'
  899+ 2  0391			??0105:
  900+ 2			        ;jnb     SCON.1,putc_loop
  901+ 2			        ;clr     SCON.1
  902+ 2  0391	75 99 3F	        mov     SBUF,#'?'
  903+ 1  0394	75 6E 01	        mov     fail,#001h
  904+ 1  0397			??0103:
  905:
  906:	  0397	75 F0 80	        mov     B,#80h              ; We'll be testing bit B.7
  907:	  039A	20 F7 02	        jb      B.7,tc_j1
  908:	  039D	80 0F		        sjmp    tc_j0
  909:	  039F	C2 F7		tc_j1:  clr     B.7
  910:	  03A1	20 F7 0A	        jb      B.7,tc_j0
  911:	  03A4	B2 F7		        cpl     B.7
  912:	  03A6	30 F7 05	        jnb     B.7,tc_j0
  913:
  914:				        eot     'j',tc_j0
  915+ 1			        putc    #'j'
  916+ 2  03A9			??0107:
  917+ 2			        ;jnb     SCON.1,putc_loop
  918+ 2			        ;clr     SCON.1
  919+ 2  03A9	75 99 6A	        mov     SBUF,#'j'
  920+ 1  03AC	80 06		        sjmp    ??0106
  921+ 1  03AE			tc_j0:  putc    #'?'
  922+ 2  03AE			??0108:
  923+ 2			        ;jnb     SCON.1,putc_loop
  924+ 2			        ;clr     SCON.1
  925+ 2  03AE	75 99 3F	        mov     SBUF,#'?'
  926+ 1  03B1	75 6E 01	        mov     fail,#001h
  927+ 1  03B4			??0106:
  928:
  929:	  03B4	75 F0 08	        mov     B,#08h              ; We'll be testing bits B.3 and B.2
  930:	  03B7	C3		        clr     c
  931:	  03B8	82 F3		        anl     c,B.3               ; Test ANL in all 4 input combinations
  932:	  03BA	40 1F		        jc      tc_k0
  933:	  03BC	D3		        setb    c
  934:	  03BD	82 F3		        anl     c,B.3
  935:	  03BF	50 1A		        jnc     tc_k0
  936:	  03C1	B0 F2		        anl     c,/B.2
  937:	  03C3	50 16		        jnc     tc_k0
  938:				                                    ; CY == 1
  939:	  03C5	72 F3		        orl     c,B.3               ; ORL-ing with 1 should give 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 18



 Line  I  Addr  Code            Source

  940:	  03C7	50 12		        jnc     tc_k0
  941:	  03C9	72 F2		        orl     c,B.2
  942:	  03CB	50 0E		        jnc     tc_k0
  943:	  03CD	C3		        clr     c                   ; CY == 0
  944:	  03CE	72 F3		        orl     c,B.3               ; Now ORL c, 'bit' should give 'bit'
  945:	  03D0	50 09		        jnc     tc_k0
  946:	  03D2	A0 F2		        orl     c,/B.2
  947:	  03D4	50 05		        jnc     tc_k0
  948:
  949:				        eot     'k',tc_k0
  950+ 1			        putc    #'k'
  951+ 2  03D6			??0110:
  952+ 2			        ;jnb     SCON.1,putc_loop
  953+ 2			        ;clr     SCON.1
  954+ 2  03D6	75 99 6B	        mov     SBUF,#'k'
  955+ 1  03D9	80 06		        sjmp    ??0109
  956+ 1  03DB			tc_k0:  putc    #'?'
  957+ 2  03DB			??0111:
  958+ 2			        ;jnb     SCON.1,putc_loop
  959+ 2			        ;clr     SCON.1
  960+ 2  03DB	75 99 3F	        mov     SBUF,#'?'
  961+ 1  03DE	75 6E 01	        mov     fail,#001h
  962+ 1  03E1			??0109:
  963:
  964:	  03E1	75 F0 08	        mov     B,#08h              ; We'll be testing bits B.3, B.2 and B.1
  965:	  03E4	C3		        clr     c
  966:	  03E5	A2 F3		        mov     c,B.3
  967:	  03E7	50 15		        jnc     tc_L0
  968:	  03E9	A2 F2		        mov     c,B.2
  969:	  03EB	40 11		        jc      tc_L0
  970:	  03ED	C3		        clr     c
  971:	  03EE	92 F1		        mov     B.1,c
  972:	  03F0	20 F1 0B	        jb      B.1,tc_L0
  973:	  03F3	D3		        setb    c
  974:	  03F4	92 F1		        mov     B.1,c
  975:	  03F6	30 F1 05	        jnb     B.1,tc_L0
  976:
  977:				        eot     'l',tc_L0
  978+ 1			        putc    #'l'
  979+ 2  03F9			??0113:
  980+ 2			        ;jnb     SCON.1,putc_loop
  981+ 2			        ;clr     SCON.1
  982+ 2  03F9	75 99 6C	        mov     SBUF,#'l'
  983+ 1  03FC	80 06		        sjmp    ??0112
  984+ 1  03FE			tc_L0:  putc    #'?'
  985+ 2  03FE			??0114:
  986+ 2			        ;jnb     SCON.1,putc_loop
  987+ 2			        ;clr     SCON.1
  988+ 2  03FE	75 99 3F	        mov     SBUF,#'?'
  989+ 1  0401	75 6E 01	        mov     fail,#001h
  990+ 1  0404			??0112:
  991:
  992:	  0404	75 2E 00	        mov     02eh,#00h           ; We'll be testing bits B.3 and B.2
  993:	  0407	D2 F3		        setb    B.3
  994:	  0409	A2 F3		        mov     c,B.3
  995:	  040B	50 0B		        jnc     tc_m0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 19



 Line  I  Addr  Code            Source

  996:	  040D	D2 F2		        setb    B.2
  997:	  040F	A2 F2		        mov     c,B.2
  998:	  0411	50 05		        jnc     tc_m0
  999:
 1000:				        eot     'm',tc_m0
 1001+ 1			        putc    #'m'
 1002+ 2  0413			??0116:
 1003+ 2			        ;jnb     SCON.1,putc_loop
 1004+ 2			        ;clr     SCON.1
 1005+ 2  0413	75 99 6D	        mov     SBUF,#'m'
 1006+ 1  0416	80 06		        sjmp    ??0115
 1007+ 1  0418			tc_m0:  putc    #'?'
 1008+ 2  0418			??0117:
 1009+ 2			        ;jnb     SCON.1,putc_loop
 1010+ 2			        ;clr     SCON.1
 1011+ 2  0418	75 99 3F	        mov     SBUF,#'?'
 1012+ 1  041B	75 6E 01	        mov     fail,#001h
 1013+ 1  041E			??0115:
 1014:
 1015:				        ; (better read the following code in execution order)
 1016:	  041E	75 F0 08	        mov     B,#08h              ; We'll be testing bits B.3 and B.2
 1017:	  0421	80 09		        sjmp    tc_n1               ; jump forward so we can test jump backwards
 1018:	  0423	A2 F3		tc_n2:  mov     c,B.3               ; make sure the target bit is clear
 1019:	  0425	40 0F		        jc      tc_n0
 1020:	  0427	10 F2 0C	        jbc     B.2,tc_n0           ; JBC jumps not when target bit clear
 1021:	  042A	80 05		        sjmp    tc_n3
 1022:	  042C	10 F3 F4	tc_n1:  jbc     B.3,tc_n2           ; JBC jumps when target bit set
 1023:	  042F	80 05		        sjmp    tc_n0
 1024:	  0431			tc_n3:
 1025:
 1026:				        eot     'n',tc_n0
 1027+ 1			        putc    #'n'
 1028+ 2  0431			??0119:
 1029+ 2			        ;jnb     SCON.1,putc_loop
 1030+ 2			        ;clr     SCON.1
 1031+ 2  0431	75 99 6E	        mov     SBUF,#'n'
 1032+ 1  0434	80 06		        sjmp    ??0118
 1033+ 1  0436			tc_n0:  putc    #'?'
 1034+ 2  0436			??0120:
 1035+ 2			        ;jnb     SCON.1,putc_loop
 1036+ 2			        ;clr     SCON.1
 1037+ 2  0436	75 99 3F	        mov     SBUF,#'?'
 1038+ 1  0439	75 6E 01	        mov     fail,#001h
 1039+ 1  043C			??0118:
 1040:
 1041:
 1042:
 1043:				        put_crlf                    ; end of test series
 1044+ 1			        putc    #13
 1045+ 2  043C			??0121:
 1046+ 2			        ;jnb     SCON.1,putc_loop
 1047+ 2			        ;clr     SCON.1
 1048+ 2  043C	75 99 0D	        mov     SBUF,#13
 1049+ 1			        putc    #10
 1050+ 2  043F			??0122:
 1051+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 20



 Line  I  Addr  Code            Source

 1052+ 2			        ;clr     SCON.1
 1053+ 2  043F	75 99 0A	        mov     SBUF,#10
 1054:
 1055:				        ;-- Test series D ------------------------------------------------------
 1056:				        ;
 1057:				        ; a.- <XRL A, #imm>
 1058:				        ; b.- <RLC A>
 1059:				        ; c.- <RRC A>
 1060:				        ; d.- <RL A>, <RR A>
 1061:				        ;
 1062:				        ; This test executes a few NOPs too but does NOT check for unintended
 1063:				        ; side effects; we intersperse the nops between the other tests to at
 1064:				        ; least have a chance to catch buggy behavior but that's all.
 1065:
 1066:
 1067:				        putc    #'D'                ; start of test series
 1068+ 1  0442			??0123:
 1069+ 1			        ;jnb     SCON.1,putc_loop
 1070+ 1			        ;clr     SCON.1
 1071+ 1  0442	75 99 44	        mov     SBUF,#'D'
 1072:
 1073:	  0445	74 85		        mov     a,#085h             ; test XRL A,#imm before using it in
 1074:	  0447	64 44		        xrl     a,#044h             ; subsequent tests
 1075:	  0449	60 09		        jz      td_a0
 1076:	  044B	64 C1		        xrl     a,#0c1h
 1077:	  044D	70 05		        jnz     td_a0
 1078:
 1079:				        eot     'a',td_a0
 1080+ 1			        putc    #'a'
 1081+ 2  044F			??0125:
 1082+ 2			        ;jnb     SCON.1,putc_loop
 1083+ 2			        ;clr     SCON.1
 1084+ 2  044F	75 99 61	        mov     SBUF,#'a'
 1085+ 1  0452	80 06		        sjmp    ??0124
 1086+ 1  0454			td_a0:  putc    #'?'
 1087+ 2  0454			??0126:
 1088+ 2			        ;jnb     SCON.1,putc_loop
 1089+ 2			        ;clr     SCON.1
 1090+ 2  0454	75 99 3F	        mov     SBUF,#'?'
 1091+ 1  0457	75 6E 01	        mov     fail,#001h
 1092+ 1  045A			??0124:
 1093:
 1094:	  045A	74 85		        mov     a,#085h             ; Test RLC effects on ACC, ignore CY for now
 1095:	  045C	00		        nop
 1096:	  045D	C3		        clr     c
 1097:	  045E	33		        rlc     a                   ; a = (a << 1) | 0
 1098:	  045F	F5 60		        mov     dir0,a
 1099:	  0461	64 0A		        xrl     a,#00ah             ; We can't use CJNE because it modifies CY
 1100:	  0463	70 16		        jnz     td_b0               ; check shifted acc
 1101:	  0465	E5 60		        mov     a,dir0
 1102:	  0467	33		        rlc     a                   ; rotate again...
 1103:	  0468	64 15		        xrl     a,#015h             ; ...and check shifted acc with CY at bit 0
 1104:	  046A	70 0F		        jnz     td_b0
 1105:
 1106:	  046C	74 85		        mov     a,#085h             ; Now check RLC effects on CY
 1107:	  046E	00		        nop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 21



 Line  I  Addr  Code            Source

 1108:	  046F	C3		        clr     c
 1109:	  0470	33		        rlc     a
 1110:	  0471	50 08		        jnc     td_b0
 1111:	  0473	33		        rlc     a
 1112:	  0474	40 05		        jc      td_b0               ; CY==1 moved into ACC.0
 1113:
 1114:				        eot     'b',td_b0
 1115+ 1			        putc    #'b'
 1116+ 2  0476			??0128:
 1117+ 2			        ;jnb     SCON.1,putc_loop
 1118+ 2			        ;clr     SCON.1
 1119+ 2  0476	75 99 62	        mov     SBUF,#'b'
 1120+ 1  0479	80 06		        sjmp    ??0127
 1121+ 1  047B			td_b0:  putc    #'?'
 1122+ 2  047B			??0129:
 1123+ 2			        ;jnb     SCON.1,putc_loop
 1124+ 2			        ;clr     SCON.1
 1125+ 2  047B	75 99 3F	        mov     SBUF,#'?'
 1126+ 1  047E	75 6E 01	        mov     fail,#001h
 1127+ 1  0481			??0127:
 1128:
 1129:	  0481	74 85		        mov     a,#085h             ; Test RRC effects on ACC, ignore CY for now
 1130:	  0483	C3		        clr     c
 1131:	  0484	13		        rrc     a                   ; will set CY
 1132:	  0485	F5 60		        mov     dir0,a
 1133:	  0487	00		        nop
 1134:	  0488	64 42		        xrl     a,#042h             ; We can't use CJNE because it modifies CY
 1135:	  048A	70 15		        jnz     td_c0               ; check shifted acc
 1136:	  048C	E5 60		        mov     a,dir0
 1137:	  048E	13		        rrc     a                   ; rotate again...
 1138:	  048F	64 A1		        xrl     a,#0a1h             ; ...and check shifted acc with CY at bit 7
 1139:	  0491	70 0E		        jnz     td_c0
 1140:
 1141:	  0493	74 85		        mov     a,#085h             ; Now check RRC effects on CY
 1142:	  0495	C3		        clr     c
 1143:	  0496	13		        rrc     a
 1144:	  0497	50 08		        jnc     td_c0
 1145:	  0499	13		        rrc     a
 1146:	  049A	40 05		        jc      td_c0               ; CY==1 moved into ACC.0
 1147:
 1148:				        eot     'c',td_c0
 1149+ 1			        putc    #'c'
 1150+ 2  049C			??0131:
 1151+ 2			        ;jnb     SCON.1,putc_loop
 1152+ 2			        ;clr     SCON.1
 1153+ 2  049C	75 99 63	        mov     SBUF,#'c'
 1154+ 1  049F	80 06		        sjmp    ??0130
 1155+ 1  04A1			td_c0:  putc    #'?'
 1156+ 2  04A1			??0132:
 1157+ 2			        ;jnb     SCON.1,putc_loop
 1158+ 2			        ;clr     SCON.1
 1159+ 2  04A1	75 99 3F	        mov     SBUF,#'?'
 1160+ 1  04A4	75 6E 01	        mov     fail,#001h
 1161+ 1  04A7			??0130:
 1162:
 1163:	  04A7	74 85		        mov     a,#085h             ; Test RL effects on ACC, ignore CY for now

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 22



 Line  I  Addr  Code            Source

 1164:	  04A9	C3		        clr     c
 1165:	  04AA	23		        rl      a                   ; a = (a << 1) | 0
 1166:	  04AB	F5 60		        mov     dir0,a
 1167:	  04AD	64 0B		        xrl     a,#00bh             ; We can't use CJNE because it modifies CY
 1168:	  04AF	70 28		        jnz     td_d0               ; check shifted acc
 1169:	  04B1	E5 60		        mov     a,dir0
 1170:	  04B3	D3		        setb    c
 1171:	  04B4	23		        rl      a                   ; rotate again...
 1172:	  04B5	64 16		        xrl     a,#016h             ; ...and check shifted acc with CY at bit 0
 1173:	  04B7	70 20		        jnz     td_d0
 1174:
 1175:	  04B9	74 85		        mov     a,#085h             ; Test RR effects on ACC, ignore CY for now
 1176:	  04BB	C3		        clr     c
 1177:	  04BC	03		        rr      a                   ; will set CY
 1178:	  04BD	F5 60		        mov     dir0,a
 1179:	  04BF	64 C2		        xrl     a,#0c2h             ; We can't use CJNE because it modifies CY
 1180:	  04C1	70 16		        jnz     td_d0               ; check shifted acc
 1181:	  04C3	E5 60		        mov     a,dir0
 1182:	  04C5	03		        rr      a                   ; rotate again...
 1183:	  04C6	64 61		        xrl     a,#061h             ; ...and check shifted acc with CY at bit 7
 1184:	  04C8	70 0F		        jnz     td_d0
 1185:
 1186:	  04CA	74 FF		        mov     a,#0ffh             ; Now make sure RL and RR don't touch CY
 1187:	  04CC	C3		        clr     c
 1188:	  04CD	23		        rl      a
 1189:	  04CE	40 09		        jc      td_d0
 1190:	  04D0	03		        rr      a
 1191:	  04D1	03		        rr      a
 1192:	  04D2	40 05		        jc      td_d0
 1193:
 1194:				        eot     'd',td_d0
 1195+ 1			        putc    #'d'
 1196+ 2  04D4			??0134:
 1197+ 2			        ;jnb     SCON.1,putc_loop
 1198+ 2			        ;clr     SCON.1
 1199+ 2  04D4	75 99 64	        mov     SBUF,#'d'
 1200+ 1  04D7	80 06		        sjmp    ??0133
 1201+ 1  04D9			td_d0:  putc    #'?'
 1202+ 2  04D9			??0135:
 1203+ 2			        ;jnb     SCON.1,putc_loop
 1204+ 2			        ;clr     SCON.1
 1205+ 2  04D9	75 99 3F	        mov     SBUF,#'?'
 1206+ 1  04DC	75 6E 01	        mov     fail,#001h
 1207+ 1  04DF			??0133:
 1208:
 1209:				        put_crlf                    ; end of test series
 1210+ 1			        putc    #13
 1211+ 2  04DF			??0136:
 1212+ 2			        ;jnb     SCON.1,putc_loop
 1213+ 2			        ;clr     SCON.1
 1214+ 2  04DF	75 99 0D	        mov     SBUF,#13
 1215+ 1			        putc    #10
 1216+ 2  04E2			??0137:
 1217+ 2			        ;jnb     SCON.1,putc_loop
 1218+ 2			        ;clr     SCON.1
 1219+ 2  04E2	75 99 0A	        mov     SBUF,#10

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 23



 Line  I  Addr  Code            Source

 1220:
 1221:				        ;-- Test series E ------------------------------------------------------
 1222:				        ; Increment
 1223:				        ; a.- <INC A>
 1224:				        ; b.- <INC Rn>
 1225:				        ; c.- <INC @Ri>
 1226:				        ; d.- <MOV dir,#imm>
 1227:				        ; e.- <INC dir>
 1228:				        ; f.- <DEC A>
 1229:				        ; g.- <DEC Rn>
 1230:				        ; h.- <DEC @Ri>
 1231:				        ; i.- <DEC dir>
 1232:
 1233:				        putc    #'E'                ; start of test series
 1234+ 1  04E5			??0138:
 1235+ 1			        ;jnb     SCON.1,putc_loop
 1236+ 1			        ;clr     SCON.1
 1237+ 1  04E5	75 99 45	        mov     SBUF,#'E'
 1238:
 1239:				te_ma   macro   target, error_loc
 1240:				        mov     target,#080h
 1241:				        inc     target
 1242:				        cjne    target,#081h,error_loc
 1243:				        mov     target,#0ffh
 1244:				        clr     c
 1245:				        inc     target
 1246:				        jc      error_loc
 1247:				        cjne    target,#000h,error_loc
 1248:				        endm
 1249:
 1250:				        te_ma   a,te_a0             ; Test <INC A>
 1251+ 1  04E8	74 80		        mov     a,#080h
 1252+ 1  04EA	04		        inc     a
 1253+ 1  04EB	B4 81 0E	        cjne    a,#081h,te_a0
 1254+ 1  04EE	74 FF		        mov     a,#0ffh
 1255+ 1  04F0	C3		        clr     c
 1256+ 1  04F1	04		        inc     a
 1257+ 1  04F2	40 08		        jc      te_a0
 1258+ 1  04F4	B4 00 05	        cjne    a,#000h,te_a0
 1259:
 1260:				        eot     'a',te_a0
 1261+ 1			        putc    #'a'
 1262+ 2  04F7			??0140:
 1263+ 2			        ;jnb     SCON.1,putc_loop
 1264+ 2			        ;clr     SCON.1
 1265+ 2  04F7	75 99 61	        mov     SBUF,#'a'
 1266+ 1  04FA	80 06		        sjmp    ??0139
 1267+ 1  04FC			te_a0:  putc    #'?'
 1268+ 2  04FC			??0141:
 1269+ 2			        ;jnb     SCON.1,putc_loop
 1270+ 2			        ;clr     SCON.1
 1271+ 2  04FC	75 99 3F	        mov     SBUF,#'?'
 1272+ 1  04FF	75 6E 01	        mov     fail,#001h
 1273+ 1  0502			??0139:
 1274:
 1275:	  0502	78 66		        mov     r0,#066h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 24



 Line  I  Addr  Code            Source

 1276:
 1277:				        te_ma   r0,te_b0
 1278+ 1  0504	78 80		        mov     r0,#080h
 1279+ 1  0506	08		        inc     r0
 1280+ 1  0507	B8 81 77	        cjne    r0,#081h,te_b0
 1281+ 1  050A	78 FF		        mov     r0,#0ffh
 1282+ 1  050C	C3		        clr     c
 1283+ 1  050D	08		        inc     r0
 1284+ 1  050E	40 71		        jc      te_b0
 1285+ 1  0510	B8 00 6E	        cjne    r0,#000h,te_b0
 1286:				        te_ma   r1,te_b0
 1287+ 1  0513	79 80		        mov     r1,#080h
 1288+ 1  0515	09		        inc     r1
 1289+ 1  0516	B9 81 68	        cjne    r1,#081h,te_b0
 1290+ 1  0519	79 FF		        mov     r1,#0ffh
 1291+ 1  051B	C3		        clr     c
 1292+ 1  051C	09		        inc     r1
 1293+ 1  051D	40 62		        jc      te_b0
 1294+ 1  051F	B9 00 5F	        cjne    r1,#000h,te_b0
 1295:				        te_ma   r2,te_b0
 1296+ 1  0522	7A 80		        mov     r2,#080h
 1297+ 1  0524	0A		        inc     r2
 1298+ 1  0525	BA 81 59	        cjne    r2,#081h,te_b0
 1299+ 1  0528	7A FF		        mov     r2,#0ffh
 1300+ 1  052A	C3		        clr     c
 1301+ 1  052B	0A		        inc     r2
 1302+ 1  052C	40 53		        jc      te_b0
 1303+ 1  052E	BA 00 50	        cjne    r2,#000h,te_b0
 1304:				        te_ma   r3,te_b0
 1305+ 1  0531	7B 80		        mov     r3,#080h
 1306+ 1  0533	0B		        inc     r3
 1307+ 1  0534	BB 81 4A	        cjne    r3,#081h,te_b0
 1308+ 1  0537	7B FF		        mov     r3,#0ffh
 1309+ 1  0539	C3		        clr     c
 1310+ 1  053A	0B		        inc     r3
 1311+ 1  053B	40 44		        jc      te_b0
 1312+ 1  053D	BB 00 41	        cjne    r3,#000h,te_b0
 1313:				        te_ma   r4,te_b0
 1314+ 1  0540	7C 80		        mov     r4,#080h
 1315+ 1  0542	0C		        inc     r4
 1316+ 1  0543	BC 81 3B	        cjne    r4,#081h,te_b0
 1317+ 1  0546	7C FF		        mov     r4,#0ffh
 1318+ 1  0548	C3		        clr     c
 1319+ 1  0549	0C		        inc     r4
 1320+ 1  054A	40 35		        jc      te_b0
 1321+ 1  054C	BC 00 32	        cjne    r4,#000h,te_b0
 1322:				        te_ma   r5,te_b0
 1323+ 1  054F	7D 80		        mov     r5,#080h
 1324+ 1  0551	0D		        inc     r5
 1325+ 1  0552	BD 81 2C	        cjne    r5,#081h,te_b0
 1326+ 1  0555	7D FF		        mov     r5,#0ffh
 1327+ 1  0557	C3		        clr     c
 1328+ 1  0558	0D		        inc     r5
 1329+ 1  0559	40 26		        jc      te_b0
 1330+ 1  055B	BD 00 23	        cjne    r5,#000h,te_b0
 1331:				        te_ma   r6,te_b0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 25



 Line  I  Addr  Code            Source

 1332+ 1  055E	7E 80		        mov     r6,#080h
 1333+ 1  0560	0E		        inc     r6
 1334+ 1  0561	BE 81 1D	        cjne    r6,#081h,te_b0
 1335+ 1  0564	7E FF		        mov     r6,#0ffh
 1336+ 1  0566	C3		        clr     c
 1337+ 1  0567	0E		        inc     r6
 1338+ 1  0568	40 17		        jc      te_b0
 1339+ 1  056A	BE 00 14	        cjne    r6,#000h,te_b0
 1340:				        te_ma   r7,te_b0
 1341+ 1  056D	7F 80		        mov     r7,#080h
 1342+ 1  056F	0F		        inc     r7
 1343+ 1  0570	BF 81 0E	        cjne    r7,#081h,te_b0
 1344+ 1  0573	7F FF		        mov     r7,#0ffh
 1345+ 1  0575	C3		        clr     c
 1346+ 1  0576	0F		        inc     r7
 1347+ 1  0577	40 08		        jc      te_b0
 1348+ 1  0579	BF 00 05	        cjne    r7,#000h,te_b0
 1349:
 1350:				        eot     'b',te_b0
 1351+ 1			        putc    #'b'
 1352+ 2  057C			??0143:
 1353+ 2			        ;jnb     SCON.1,putc_loop
 1354+ 2			        ;clr     SCON.1
 1355+ 2  057C	75 99 62	        mov     SBUF,#'b'
 1356+ 1  057F	80 06		        sjmp    ??0142
 1357+ 1  0581			te_b0:  putc    #'?'
 1358+ 2  0581			??0144:
 1359+ 2			        ;jnb     SCON.1,putc_loop
 1360+ 2			        ;clr     SCON.1
 1361+ 2  0581	75 99 3F	        mov     SBUF,#'?'
 1362+ 1  0584	75 6E 01	        mov     fail,#001h
 1363+ 1  0587			??0142:
 1364:
 1365:	  0587	78 60		        mov     r0,#dir0
 1366:	  0589	79 31		        mov     r1,#031h
 1367:
 1368:				        te_ma   @r0,te_c0
 1369+ 1  058B	76 80		        mov     @r0,#080h
 1370+ 1  058D	06		        inc     @r0
 1371+ 1  058E	B6 81 1D	        cjne    @r0,#081h,te_c0
 1372+ 1  0591	76 FF		        mov     @r0,#0ffh
 1373+ 1  0593	C3		        clr     c
 1374+ 1  0594	06		        inc     @r0
 1375+ 1  0595	40 17		        jc      te_c0
 1376+ 1  0597	B6 00 14	        cjne    @r0,#000h,te_c0
 1377:				        te_ma   @r1,te_c0
 1378+ 1  059A	77 80		        mov     @r1,#080h
 1379+ 1  059C	07		        inc     @r1
 1380+ 1  059D	B7 81 0E	        cjne    @r1,#081h,te_c0
 1381+ 1  05A0	77 FF		        mov     @r1,#0ffh
 1382+ 1  05A2	C3		        clr     c
 1383+ 1  05A3	07		        inc     @r1
 1384+ 1  05A4	40 08		        jc      te_c0
 1385+ 1  05A6	B7 00 05	        cjne    @r1,#000h,te_c0
 1386:
 1387:				        eot     'c',te_c0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 26



 Line  I  Addr  Code            Source

 1388+ 1			        putc    #'c'
 1389+ 2  05A9			??0146:
 1390+ 2			        ;jnb     SCON.1,putc_loop
 1391+ 2			        ;clr     SCON.1
 1392+ 2  05A9	75 99 63	        mov     SBUF,#'c'
 1393+ 1  05AC	80 06		        sjmp    ??0145
 1394+ 1  05AE			te_c0:  putc    #'?'
 1395+ 2  05AE			??0147:
 1396+ 2			        ;jnb     SCON.1,putc_loop
 1397+ 2			        ;clr     SCON.1
 1398+ 2  05AE	75 99 3F	        mov     SBUF,#'?'
 1399+ 1  05B1	75 6E 01	        mov     fail,#001h
 1400+ 1  05B4			??0145:
 1401:
 1402:	  05B4	75 60 34	        mov     dir0,#034h          ; Test <MOV dir,#imm> before using it in
 1403:	  05B7	E5 60		        mov     a,dir0              ; subsequent tests
 1404:	  05B9	B4 34 05	        cjne    a,#034h,te_d0
 1405:
 1406:				        eot     'd',te_d0
 1407+ 1			        putc    #'d'
 1408+ 2  05BC			??0149:
 1409+ 2			        ;jnb     SCON.1,putc_loop
 1410+ 2			        ;clr     SCON.1
 1411+ 2  05BC	75 99 64	        mov     SBUF,#'d'
 1412+ 1  05BF	80 06		        sjmp    ??0148
 1413+ 1  05C1			te_d0:  putc    #'?'
 1414+ 2  05C1			??0150:
 1415+ 2			        ;jnb     SCON.1,putc_loop
 1416+ 2			        ;clr     SCON.1
 1417+ 2  05C1	75 99 3F	        mov     SBUF,#'?'
 1418+ 1  05C4	75 6E 01	        mov     fail,#001h
 1419+ 1  05C7			??0148:
 1420:
 1421:	  05C7	75 39 80	        mov     039h,#080h
 1422:	  05CA	05 39		        inc     039h
 1423:	  05CC	E5 39		        mov     a,039h
 1424:	  05CE	B4 81 12	        cjne    a,#081h,te_e0
 1425:	  05D1	75 39 FF	        mov     039h,#0ffh
 1426:	  05D4	C3		        clr     c
 1427:	  05D5	05 39		        inc     039h
 1428:	  05D7	40 0A		        jc      te_e0
 1429:	  05D9	E5 39		        mov     a,039h
 1430:	  05DB	B4 00 05	        cjne    a,#000h,te_e0
 1431:
 1432:				        eot     'e',te_e0
 1433+ 1			        putc    #'e'
 1434+ 2  05DE			??0152:
 1435+ 2			        ;jnb     SCON.1,putc_loop
 1436+ 2			        ;clr     SCON.1
 1437+ 2  05DE	75 99 65	        mov     SBUF,#'e'
 1438+ 1  05E1	80 06		        sjmp    ??0151
 1439+ 1  05E3			te_e0:  putc    #'?'
 1440+ 2  05E3			??0153:
 1441+ 2			        ;jnb     SCON.1,putc_loop
 1442+ 2			        ;clr     SCON.1
 1443+ 2  05E3	75 99 3F	        mov     SBUF,#'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 27



 Line  I  Addr  Code            Source

 1444+ 1  05E6	75 6E 01	        mov     fail,#001h
 1445+ 1  05E9			??0151:
 1446:
 1447:				te_mf   macro   target, error_loc
 1448:				        mov     target,#001h
 1449:				        dec     target
 1450:				        cjne    target,#000h,error_loc
 1451:				        clr     c
 1452:				        dec     target
 1453:				        jc      error_loc
 1454:				        cjne    target,#0ffh,error_loc
 1455:				        endm
 1456:
 1457:				        te_ma   a,te_f0             ; Test <INC A>
 1458+ 1  05E9	74 80		        mov     a,#080h
 1459+ 1  05EB	04		        inc     a
 1460+ 1  05EC	B4 81 0E	        cjne    a,#081h,te_f0
 1461+ 1  05EF	74 FF		        mov     a,#0ffh
 1462+ 1  05F1	C3		        clr     c
 1463+ 1  05F2	04		        inc     a
 1464+ 1  05F3	40 08		        jc      te_f0
 1465+ 1  05F5	B4 00 05	        cjne    a,#000h,te_f0
 1466:
 1467:				        eot     'f',te_f0
 1468+ 1			        putc    #'f'
 1469+ 2  05F8			??0155:
 1470+ 2			        ;jnb     SCON.1,putc_loop
 1471+ 2			        ;clr     SCON.1
 1472+ 2  05F8	75 99 66	        mov     SBUF,#'f'
 1473+ 1  05FB	80 06		        sjmp    ??0154
 1474+ 1  05FD			te_f0:  putc    #'?'
 1475+ 2  05FD			??0156:
 1476+ 2			        ;jnb     SCON.1,putc_loop
 1477+ 2			        ;clr     SCON.1
 1478+ 2  05FD	75 99 3F	        mov     SBUF,#'?'
 1479+ 1  0600	75 6E 01	        mov     fail,#001h
 1480+ 1  0603			??0154:
 1481:
 1482:	  0603	78 66		        mov     r0,#066h
 1483:
 1484:				        te_ma   r0,te_g0
 1485+ 1  0605	78 80		        mov     r0,#080h
 1486+ 1  0607	08		        inc     r0
 1487+ 1  0608	B8 81 77	        cjne    r0,#081h,te_g0
 1488+ 1  060B	78 FF		        mov     r0,#0ffh
 1489+ 1  060D	C3		        clr     c
 1490+ 1  060E	08		        inc     r0
 1491+ 1  060F	40 71		        jc      te_g0
 1492+ 1  0611	B8 00 6E	        cjne    r0,#000h,te_g0
 1493:				        te_ma   r1,te_g0
 1494+ 1  0614	79 80		        mov     r1,#080h
 1495+ 1  0616	09		        inc     r1
 1496+ 1  0617	B9 81 68	        cjne    r1,#081h,te_g0
 1497+ 1  061A	79 FF		        mov     r1,#0ffh
 1498+ 1  061C	C3		        clr     c
 1499+ 1  061D	09		        inc     r1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 28



 Line  I  Addr  Code            Source

 1500+ 1  061E	40 62		        jc      te_g0
 1501+ 1  0620	B9 00 5F	        cjne    r1,#000h,te_g0
 1502:				        te_ma   r2,te_g0
 1503+ 1  0623	7A 80		        mov     r2,#080h
 1504+ 1  0625	0A		        inc     r2
 1505+ 1  0626	BA 81 59	        cjne    r2,#081h,te_g0
 1506+ 1  0629	7A FF		        mov     r2,#0ffh
 1507+ 1  062B	C3		        clr     c
 1508+ 1  062C	0A		        inc     r2
 1509+ 1  062D	40 53		        jc      te_g0
 1510+ 1  062F	BA 00 50	        cjne    r2,#000h,te_g0
 1511:				        te_ma   r3,te_g0
 1512+ 1  0632	7B 80		        mov     r3,#080h
 1513+ 1  0634	0B		        inc     r3
 1514+ 1  0635	BB 81 4A	        cjne    r3,#081h,te_g0
 1515+ 1  0638	7B FF		        mov     r3,#0ffh
 1516+ 1  063A	C3		        clr     c
 1517+ 1  063B	0B		        inc     r3
 1518+ 1  063C	40 44		        jc      te_g0
 1519+ 1  063E	BB 00 41	        cjne    r3,#000h,te_g0
 1520:				        te_ma   r4,te_g0
 1521+ 1  0641	7C 80		        mov     r4,#080h
 1522+ 1  0643	0C		        inc     r4
 1523+ 1  0644	BC 81 3B	        cjne    r4,#081h,te_g0
 1524+ 1  0647	7C FF		        mov     r4,#0ffh
 1525+ 1  0649	C3		        clr     c
 1526+ 1  064A	0C		        inc     r4
 1527+ 1  064B	40 35		        jc      te_g0
 1528+ 1  064D	BC 00 32	        cjne    r4,#000h,te_g0
 1529:				        te_ma   r5,te_g0
 1530+ 1  0650	7D 80		        mov     r5,#080h
 1531+ 1  0652	0D		        inc     r5
 1532+ 1  0653	BD 81 2C	        cjne    r5,#081h,te_g0
 1533+ 1  0656	7D FF		        mov     r5,#0ffh
 1534+ 1  0658	C3		        clr     c
 1535+ 1  0659	0D		        inc     r5
 1536+ 1  065A	40 26		        jc      te_g0
 1537+ 1  065C	BD 00 23	        cjne    r5,#000h,te_g0
 1538:				        te_ma   r6,te_g0
 1539+ 1  065F	7E 80		        mov     r6,#080h
 1540+ 1  0661	0E		        inc     r6
 1541+ 1  0662	BE 81 1D	        cjne    r6,#081h,te_g0
 1542+ 1  0665	7E FF		        mov     r6,#0ffh
 1543+ 1  0667	C3		        clr     c
 1544+ 1  0668	0E		        inc     r6
 1545+ 1  0669	40 17		        jc      te_g0
 1546+ 1  066B	BE 00 14	        cjne    r6,#000h,te_g0
 1547:				        te_ma   r7,te_g0
 1548+ 1  066E	7F 80		        mov     r7,#080h
 1549+ 1  0670	0F		        inc     r7
 1550+ 1  0671	BF 81 0E	        cjne    r7,#081h,te_g0
 1551+ 1  0674	7F FF		        mov     r7,#0ffh
 1552+ 1  0676	C3		        clr     c
 1553+ 1  0677	0F		        inc     r7
 1554+ 1  0678	40 08		        jc      te_g0
 1555+ 1  067A	BF 00 05	        cjne    r7,#000h,te_g0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 29



 Line  I  Addr  Code            Source

 1556:
 1557:				        eot     'g',te_g0
 1558+ 1			        putc    #'g'
 1559+ 2  067D			??0158:
 1560+ 2			        ;jnb     SCON.1,putc_loop
 1561+ 2			        ;clr     SCON.1
 1562+ 2  067D	75 99 67	        mov     SBUF,#'g'
 1563+ 1  0680	80 06		        sjmp    ??0157
 1564+ 1  0682			te_g0:  putc    #'?'
 1565+ 2  0682			??0159:
 1566+ 2			        ;jnb     SCON.1,putc_loop
 1567+ 2			        ;clr     SCON.1
 1568+ 2  0682	75 99 3F	        mov     SBUF,#'?'
 1569+ 1  0685	75 6E 01	        mov     fail,#001h
 1570+ 1  0688			??0157:
 1571:
 1572:	  0688	78 60		        mov     r0,#dir0
 1573:	  068A	79 31		        mov     r1,#031h
 1574:
 1575:				        te_ma   @r0,te_h0
 1576+ 1  068C	76 80		        mov     @r0,#080h
 1577+ 1  068E	06		        inc     @r0
 1578+ 1  068F	B6 81 1D	        cjne    @r0,#081h,te_h0
 1579+ 1  0692	76 FF		        mov     @r0,#0ffh
 1580+ 1  0694	C3		        clr     c
 1581+ 1  0695	06		        inc     @r0
 1582+ 1  0696	40 17		        jc      te_h0
 1583+ 1  0698	B6 00 14	        cjne    @r0,#000h,te_h0
 1584:				        te_ma   @r1,te_h0
 1585+ 1  069B	77 80		        mov     @r1,#080h
 1586+ 1  069D	07		        inc     @r1
 1587+ 1  069E	B7 81 0E	        cjne    @r1,#081h,te_h0
 1588+ 1  06A1	77 FF		        mov     @r1,#0ffh
 1589+ 1  06A3	C3		        clr     c
 1590+ 1  06A4	07		        inc     @r1
 1591+ 1  06A5	40 08		        jc      te_h0
 1592+ 1  06A7	B7 00 05	        cjne    @r1,#000h,te_h0
 1593:
 1594:				        eot     'h',te_h0
 1595+ 1			        putc    #'h'
 1596+ 2  06AA			??0161:
 1597+ 2			        ;jnb     SCON.1,putc_loop
 1598+ 2			        ;clr     SCON.1
 1599+ 2  06AA	75 99 68	        mov     SBUF,#'h'
 1600+ 1  06AD	80 06		        sjmp    ??0160
 1601+ 1  06AF			te_h0:  putc    #'?'
 1602+ 2  06AF			??0162:
 1603+ 2			        ;jnb     SCON.1,putc_loop
 1604+ 2			        ;clr     SCON.1
 1605+ 2  06AF	75 99 3F	        mov     SBUF,#'?'
 1606+ 1  06B2	75 6E 01	        mov     fail,#001h
 1607+ 1  06B5			??0160:
 1608:
 1609:	  06B5	75 60 34	        mov     dir0,#034h          ; Test <MOV dir,#imm> before using it in
 1610:	  06B8	E5 60		        mov     a,dir0              ; subsequent tests
 1611:	  06BA	B4 34 05	        cjne    a,#034h,te_i0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 30



 Line  I  Addr  Code            Source

 1612:
 1613:				        eot     'i',te_i0
 1614+ 1			        putc    #'i'
 1615+ 2  06BD			??0164:
 1616+ 2			        ;jnb     SCON.1,putc_loop
 1617+ 2			        ;clr     SCON.1
 1618+ 2  06BD	75 99 69	        mov     SBUF,#'i'
 1619+ 1  06C0	80 06		        sjmp    ??0163
 1620+ 1  06C2			te_i0:  putc    #'?'
 1621+ 2  06C2			??0165:
 1622+ 2			        ;jnb     SCON.1,putc_loop
 1623+ 2			        ;clr     SCON.1
 1624+ 2  06C2	75 99 3F	        mov     SBUF,#'?'
 1625+ 1  06C5	75 6E 01	        mov     fail,#001h
 1626+ 1  06C8			??0163:
 1627:
 1628:				        put_crlf                    ; end of test series
 1629+ 1			        putc    #13
 1630+ 2  06C8			??0166:
 1631+ 2			        ;jnb     SCON.1,putc_loop
 1632+ 2			        ;clr     SCON.1
 1633+ 2  06C8	75 99 0D	        mov     SBUF,#13
 1634+ 1			        putc    #10
 1635+ 2  06CB			??0167:
 1636+ 2			        ;jnb     SCON.1,putc_loop
 1637+ 2			        ;clr     SCON.1
 1638+ 2  06CB	75 99 0A	        mov     SBUF,#10
 1639:
 1640:
 1641:				        ;-- Test series F ------------------------------------------------------
 1642:				        ;
 1643:				        ; a.- <MOV dir,Rn>
 1644:				        ; b.- <MOV dir,@Ri>
 1645:				        ; c.- <MOV dir,dir>
 1646:				        ; d.- <MOV Rn,dir>
 1647:				        ; e.- <MOV @Ri,dir>
 1648:				        ; f.- <MOV Rn,A>
 1649:				        ; g.- <MOV @Ri,A>
 1650:				        ; h.- <MOV dir,A>
 1651:
 1652:
 1653:				        putc    #'F'                ; start of test series
 1654+ 1  06CE			??0168:
 1655+ 1			        ;jnb     SCON.1,putc_loop
 1656+ 1			        ;clr     SCON.1
 1657+ 1  06CE	75 99 46	        mov     SBUF,#'F'
 1658:
 1659:				tf_ma   macro   rn, n, error_loc
 1660:				        mov     rn,#(091h+n)
 1661:				        mov     039h,rn
 1662:				        mov     a,039h
 1663:				        cjne    a,#(091h+n),error_loc
 1664:				        endm
 1665:
 1666:				        tf_ma   r0,0,tf_a0
 1667+ 1  06D1	78 91		        mov     r0,#(091h+0)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 31



 Line  I  Addr  Code            Source

 1668+ 1  06D3	88 39		        mov     039h,r0
 1669+ 1  06D5	E5 39		        mov     a,039h
 1670+ 1  06D7	B4 91 44	        cjne    a,#(091h+0),tf_a0
 1671:				        tf_ma   r1,1,tf_a0
 1672+ 1  06DA	79 92		        mov     r1,#(091h+1)
 1673+ 1  06DC	89 39		        mov     039h,r1
 1674+ 1  06DE	E5 39		        mov     a,039h
 1675+ 1  06E0	B4 92 3B	        cjne    a,#(091h+1),tf_a0
 1676:				        tf_ma   r2,2,tf_a0
 1677+ 1  06E3	7A 93		        mov     r2,#(091h+2)
 1678+ 1  06E5	8A 39		        mov     039h,r2
 1679+ 1  06E7	E5 39		        mov     a,039h
 1680+ 1  06E9	B4 93 32	        cjne    a,#(091h+2),tf_a0
 1681:				        tf_ma   r3,3,tf_a0
 1682+ 1  06EC	7B 94		        mov     r3,#(091h+3)
 1683+ 1  06EE	8B 39		        mov     039h,r3
 1684+ 1  06F0	E5 39		        mov     a,039h
 1685+ 1  06F2	B4 94 29	        cjne    a,#(091h+3),tf_a0
 1686:				        tf_ma   r4,4,tf_a0
 1687+ 1  06F5	7C 95		        mov     r4,#(091h+4)
 1688+ 1  06F7	8C 39		        mov     039h,r4
 1689+ 1  06F9	E5 39		        mov     a,039h
 1690+ 1  06FB	B4 95 20	        cjne    a,#(091h+4),tf_a0
 1691:				        tf_ma   r5,5,tf_a0
 1692+ 1  06FE	7D 96		        mov     r5,#(091h+5)
 1693+ 1  0700	8D 39		        mov     039h,r5
 1694+ 1  0702	E5 39		        mov     a,039h
 1695+ 1  0704	B4 96 17	        cjne    a,#(091h+5),tf_a0
 1696:				        tf_ma   r6,6,tf_a0
 1697+ 1  0707	7E 97		        mov     r6,#(091h+6)
 1698+ 1  0709	8E 39		        mov     039h,r6
 1699+ 1  070B	E5 39		        mov     a,039h
 1700+ 1  070D	B4 97 0E	        cjne    a,#(091h+6),tf_a0
 1701:				        tf_ma   r7,7,tf_a0
 1702+ 1  0710	7F 98		        mov     r7,#(091h+7)
 1703+ 1  0712	8F 39		        mov     039h,r7
 1704+ 1  0714	E5 39		        mov     a,039h
 1705+ 1  0716	B4 98 05	        cjne    a,#(091h+7),tf_a0
 1706:
 1707:				        eot     'a',tf_a0
 1708+ 1			        putc    #'a'
 1709+ 2  0719			??0170:
 1710+ 2			        ;jnb     SCON.1,putc_loop
 1711+ 2			        ;clr     SCON.1
 1712+ 2  0719	75 99 61	        mov     SBUF,#'a'
 1713+ 1  071C	80 06		        sjmp    ??0169
 1714+ 1  071E			tf_a0:  putc    #'?'
 1715+ 2  071E			??0171:
 1716+ 2			        ;jnb     SCON.1,putc_loop
 1717+ 2			        ;clr     SCON.1
 1718+ 2  071E	75 99 3F	        mov     SBUF,#'?'
 1719+ 1  0721	75 6E 01	        mov     fail,#001h
 1720+ 1  0724			??0169:
 1721:
 1722:				        tf_ma   @r0,0,tf_b0
 1723+ 1  0724	76 91		        mov     @r0,#(091h+0)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 32



 Line  I  Addr  Code            Source

 1724+ 1  0726	86 39		        mov     039h,@r0
 1725+ 1  0728	E5 39		        mov     a,039h
 1726+ 1  072A	B4 91 0E	        cjne    a,#(091h+0),tf_b0
 1727:				        tf_ma   @r1,1,tf_b0
 1728+ 1  072D	77 92		        mov     @r1,#(091h+1)
 1729+ 1  072F	87 39		        mov     039h,@r1
 1730+ 1  0731	E5 39		        mov     a,039h
 1731+ 1  0733	B4 92 05	        cjne    a,#(091h+1),tf_b0
 1732:
 1733:				        eot     'b',tf_b0
 1734+ 1			        putc    #'b'
 1735+ 2  0736			??0173:
 1736+ 2			        ;jnb     SCON.1,putc_loop
 1737+ 2			        ;clr     SCON.1
 1738+ 2  0736	75 99 62	        mov     SBUF,#'b'
 1739+ 1  0739	80 06		        sjmp    ??0172
 1740+ 1  073B			tf_b0:  putc    #'?'
 1741+ 2  073B			??0174:
 1742+ 2			        ;jnb     SCON.1,putc_loop
 1743+ 2			        ;clr     SCON.1
 1744+ 2  073B	75 99 3F	        mov     SBUF,#'?'
 1745+ 1  073E	75 6E 01	        mov     fail,#001h
 1746+ 1  0741			??0172:
 1747:
 1748:	  0741	75 31 91	        mov     031h,#091h
 1749:	  0744	85 31 39	        mov     039h,031h
 1750:	  0747	E5 39		        mov     a,039h
 1751:	  0749	B4 91 05	        cjne    a,#091h,tf_c0
 1752:
 1753:				        eot     'c',tf_c0
 1754+ 1			        putc    #'c'
 1755+ 2  074C			??0176:
 1756+ 2			        ;jnb     SCON.1,putc_loop
 1757+ 2			        ;clr     SCON.1
 1758+ 2  074C	75 99 63	        mov     SBUF,#'c'
 1759+ 1  074F	80 06		        sjmp    ??0175
 1760+ 1  0751			tf_c0:  putc    #'?'
 1761+ 2  0751			??0177:
 1762+ 2			        ;jnb     SCON.1,putc_loop
 1763+ 2			        ;clr     SCON.1
 1764+ 2  0751	75 99 3F	        mov     SBUF,#'?'
 1765+ 1  0754	75 6E 01	        mov     fail,#001h
 1766+ 1  0757			??0175:
 1767:
 1768:				tf_md   macro   rn, n, error_loc
 1769:				        mov     039h,#(091h+n)
 1770:				        mov     rn,039h
 1771:				        cjne    rn,#(091h+n),error_loc
 1772:				        endm
 1773:
 1774:				        tf_md   r0,0,tf_d0
 1775+ 1  0757	75 39 91	        mov     039h,#(091h+0)
 1776+ 1  075A	A8 39		        mov     r0,039h
 1777+ 1  075C	B8 91 3D	        cjne    r0,#(091h+0),tf_d0
 1778:				        tf_md   r1,1,tf_d0
 1779+ 1  075F	75 39 92	        mov     039h,#(091h+1)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 33



 Line  I  Addr  Code            Source

 1780+ 1  0762	A9 39		        mov     r1,039h
 1781+ 1  0764	B9 92 35	        cjne    r1,#(091h+1),tf_d0
 1782:				        tf_md   r2,2,tf_d0
 1783+ 1  0767	75 39 93	        mov     039h,#(091h+2)
 1784+ 1  076A	AA 39		        mov     r2,039h
 1785+ 1  076C	BA 93 2D	        cjne    r2,#(091h+2),tf_d0
 1786:				        tf_md   r3,3,tf_d0
 1787+ 1  076F	75 39 94	        mov     039h,#(091h+3)
 1788+ 1  0772	AB 39		        mov     r3,039h
 1789+ 1  0774	BB 94 25	        cjne    r3,#(091h+3),tf_d0
 1790:				        tf_md   r4,4,tf_d0
 1791+ 1  0777	75 39 95	        mov     039h,#(091h+4)
 1792+ 1  077A	AC 39		        mov     r4,039h
 1793+ 1  077C	BC 95 1D	        cjne    r4,#(091h+4),tf_d0
 1794:				        tf_md   r5,5,tf_d0
 1795+ 1  077F	75 39 96	        mov     039h,#(091h+5)
 1796+ 1  0782	AD 39		        mov     r5,039h
 1797+ 1  0784	BD 96 15	        cjne    r5,#(091h+5),tf_d0
 1798:				        tf_md   r6,6,tf_d0
 1799+ 1  0787	75 39 97	        mov     039h,#(091h+6)
 1800+ 1  078A	AE 39		        mov     r6,039h
 1801+ 1  078C	BE 97 0D	        cjne    r6,#(091h+6),tf_d0
 1802:				        tf_md   r7,7,tf_d0
 1803+ 1  078F	75 39 98	        mov     039h,#(091h+7)
 1804+ 1  0792	AF 39		        mov     r7,039h
 1805+ 1  0794	BF 98 05	        cjne    r7,#(091h+7),tf_d0
 1806:
 1807:				        eot     'd',tf_d0
 1808+ 1			        putc    #'d'
 1809+ 2  0797			??0179:
 1810+ 2			        ;jnb     SCON.1,putc_loop
 1811+ 2			        ;clr     SCON.1
 1812+ 2  0797	75 99 64	        mov     SBUF,#'d'
 1813+ 1  079A	80 06		        sjmp    ??0178
 1814+ 1  079C			tf_d0:  putc    #'?'
 1815+ 2  079C			??0180:
 1816+ 2			        ;jnb     SCON.1,putc_loop
 1817+ 2			        ;clr     SCON.1
 1818+ 2  079C	75 99 3F	        mov     SBUF,#'?'
 1819+ 1  079F	75 6E 01	        mov     fail,#001h
 1820+ 1  07A2			??0178:
 1821:
 1822:	  07A2	78 60		        mov     r0,#dir0
 1823:	  07A4	79 31		        mov     r1,#031h
 1824:				        tf_md   @r0,0,tf_e0
 1825+ 1  07A6	75 39 91	        mov     039h,#(091h+0)
 1826+ 1  07A9	A6 39		        mov     @r0,039h
 1827+ 1  07AB	B6 91 0D	        cjne    @r0,#(091h+0),tf_e0
 1828:				        tf_md   @r1,1,tf_e0
 1829+ 1  07AE	75 39 92	        mov     039h,#(091h+1)
 1830+ 1  07B1	A7 39		        mov     @r1,039h
 1831+ 1  07B3	B7 92 05	        cjne    @r1,#(091h+1),tf_e0
 1832:
 1833:				        eot     'e',tf_e0
 1834+ 1			        putc    #'e'
 1835+ 2  07B6			??0182:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 34



 Line  I  Addr  Code            Source

 1836+ 2			        ;jnb     SCON.1,putc_loop
 1837+ 2			        ;clr     SCON.1
 1838+ 2  07B6	75 99 65	        mov     SBUF,#'e'
 1839+ 1  07B9	80 06		        sjmp    ??0181
 1840+ 1  07BB			tf_e0:  putc    #'?'
 1841+ 2  07BB			??0183:
 1842+ 2			        ;jnb     SCON.1,putc_loop
 1843+ 2			        ;clr     SCON.1
 1844+ 2  07BB	75 99 3F	        mov     SBUF,#'?'
 1845+ 1  07BE	75 6E 01	        mov     fail,#001h
 1846+ 1  07C1			??0181:
 1847:
 1848:				tf_mf   macro   rn, n, error_loc
 1849:				        mov     a,#(091h+n)
 1850:				        mov     rn,a
 1851:				        cjne    rn,#(091h+n),error_loc
 1852:				        endm
 1853:
 1854:				        tf_mf   r0,0,tf_f0
 1855+ 1  07C1	74 91		        mov     a,#(091h+0)
 1856+ 1  07C3	F8		        mov     r0,a
 1857+ 1  07C4	B8 91 2F	        cjne    r0,#(091h+0),tf_f0
 1858:				        tf_mf   r1,1,tf_f0
 1859+ 1  07C7	74 92		        mov     a,#(091h+1)
 1860+ 1  07C9	F9		        mov     r1,a
 1861+ 1  07CA	B9 92 29	        cjne    r1,#(091h+1),tf_f0
 1862:				        tf_mf   r2,2,tf_f0
 1863+ 1  07CD	74 93		        mov     a,#(091h+2)
 1864+ 1  07CF	FA		        mov     r2,a
 1865+ 1  07D0	BA 93 23	        cjne    r2,#(091h+2),tf_f0
 1866:				        tf_mf   r3,3,tf_f0
 1867+ 1  07D3	74 94		        mov     a,#(091h+3)
 1868+ 1  07D5	FB		        mov     r3,a
 1869+ 1  07D6	BB 94 1D	        cjne    r3,#(091h+3),tf_f0
 1870:				        tf_mf   r5,4,tf_f0
 1871+ 1  07D9	74 95		        mov     a,#(091h+4)
 1872+ 1  07DB	FD		        mov     r5,a
 1873+ 1  07DC	BD 95 17	        cjne    r5,#(091h+4),tf_f0
 1874:				        tf_mf   r5,5,tf_f0
 1875+ 1  07DF	74 96		        mov     a,#(091h+5)
 1876+ 1  07E1	FD		        mov     r5,a
 1877+ 1  07E2	BD 96 11	        cjne    r5,#(091h+5),tf_f0
 1878:				        tf_mf   r6,6,tf_f0
 1879+ 1  07E5	74 97		        mov     a,#(091h+6)
 1880+ 1  07E7	FE		        mov     r6,a
 1881+ 1  07E8	BE 97 0B	        cjne    r6,#(091h+6),tf_f0
 1882:				        tf_mf   r7,7,tf_f0
 1883+ 1  07EB	74 98		        mov     a,#(091h+7)
 1884+ 1  07ED	FF		        mov     r7,a
 1885+ 1  07EE	BF 98 05	        cjne    r7,#(091h+7),tf_f0
 1886:
 1887:				        eot     'f',tf_f0
 1888+ 1			        putc    #'f'
 1889+ 2  07F1			??0185:
 1890+ 2			        ;jnb     SCON.1,putc_loop
 1891+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 35



 Line  I  Addr  Code            Source

 1892+ 2  07F1	75 99 66	        mov     SBUF,#'f'
 1893+ 1  07F4	80 06		        sjmp    ??0184
 1894+ 1  07F6			tf_f0:  putc    #'?'
 1895+ 2  07F6			??0186:
 1896+ 2			        ;jnb     SCON.1,putc_loop
 1897+ 2			        ;clr     SCON.1
 1898+ 2  07F6	75 99 3F	        mov     SBUF,#'?'
 1899+ 1  07F9	75 6E 01	        mov     fail,#001h
 1900+ 1  07FC			??0184:
 1901:
 1902:	  07FC	78 60		        mov     r0,#dir0
 1903:	  07FE	79 31		        mov     r1,#031h
 1904:				        tf_mf   @r0,0,tf_g0
 1905+ 1  0800	74 91		        mov     a,#(091h+0)
 1906+ 1  0802	F6		        mov     @r0,a
 1907+ 1  0803	B6 91 0B	        cjne    @r0,#(091h+0),tf_g0
 1908:				        tf_mf   @r1,1,tf_g0
 1909+ 1  0806	74 92		        mov     a,#(091h+1)
 1910+ 1  0808	F7		        mov     @r1,a
 1911+ 1  0809	B7 92 05	        cjne    @r1,#(091h+1),tf_g0
 1912:
 1913:				        eot     'g',tf_g0
 1914+ 1			        putc    #'g'
 1915+ 2  080C			??0188:
 1916+ 2			        ;jnb     SCON.1,putc_loop
 1917+ 2			        ;clr     SCON.1
 1918+ 2  080C	75 99 67	        mov     SBUF,#'g'
 1919+ 1  080F	80 06		        sjmp    ??0187
 1920+ 1  0811			tf_g0:  putc    #'?'
 1921+ 2  0811			??0189:
 1922+ 2			        ;jnb     SCON.1,putc_loop
 1923+ 2			        ;clr     SCON.1
 1924+ 2  0811	75 99 3F	        mov     SBUF,#'?'
 1925+ 1  0814	75 6E 01	        mov     fail,#001h
 1926+ 1  0817			??0187:
 1927:
 1928:	  0817	75 60 79	        mov     dir0,#079h
 1929:	  081A	78 00		        mov     r0,#000h
 1930:	  081C	74 34		        mov     a,#34h
 1931:	  081E	F5 60		        mov     dir0,a
 1932:	  0820	A8 60		        mov     r0,dir0
 1933:	  0822	B8 34 05	        cjne    r0,#034h,tf_h0
 1934:
 1935:				        eot     'h',tf_h0
 1936+ 1			        putc    #'h'
 1937+ 2  0825			??0191:
 1938+ 2			        ;jnb     SCON.1,putc_loop
 1939+ 2			        ;clr     SCON.1
 1940+ 2  0825	75 99 68	        mov     SBUF,#'h'
 1941+ 1  0828	80 06		        sjmp    ??0190
 1942+ 1  082A			tf_h0:  putc    #'?'
 1943+ 2  082A			??0192:
 1944+ 2			        ;jnb     SCON.1,putc_loop
 1945+ 2			        ;clr     SCON.1
 1946+ 2  082A	75 99 3F	        mov     SBUF,#'?'
 1947+ 1  082D	75 6E 01	        mov     fail,#001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 36



 Line  I  Addr  Code            Source

 1948+ 1  0830			??0190:
 1949:
 1950:	  0830	74 00		        mov     a,#000h
 1951:
 1952:	  0832	79 31		        mov     r1,#031h
 1953:	  0834	75 31 56	        mov     031h,#056h
 1954:	  0837	78 60		        mov     r0,#dir0
 1955:	  0839	75 60 34	        mov     dir0,#034h
 1956:	  083C	E6		        mov     a,@r0
 1957:	  083D	B4 34 09	        cjne    a,#034h,tf_i0
 1958:	  0840	E7		        mov     a,@r1
 1959:	  0841	B4 56 05	        cjne    a,#056h,tf_i0
 1960:
 1961:				        eot     'i',tf_i0
 1962+ 1			        putc    #'i'
 1963+ 2  0844			??0194:
 1964+ 2			        ;jnb     SCON.1,putc_loop
 1965+ 2			        ;clr     SCON.1
 1966+ 2  0844	75 99 69	        mov     SBUF,#'i'
 1967+ 1  0847	80 06		        sjmp    ??0193
 1968+ 1  0849			tf_i0:  putc    #'?'
 1969+ 2  0849			??0195:
 1970+ 2			        ;jnb     SCON.1,putc_loop
 1971+ 2			        ;clr     SCON.1
 1972+ 2  0849	75 99 3F	        mov     SBUF,#'?'
 1973+ 1  084C	75 6E 01	        mov     fail,#001h
 1974+ 1  084F			??0193:
 1975:
 1976:				        put_crlf                    ; end of test series
 1977+ 1			        putc    #13
 1978+ 2  084F			??0196:
 1979+ 2			        ;jnb     SCON.1,putc_loop
 1980+ 2			        ;clr     SCON.1
 1981+ 2  084F	75 99 0D	        mov     SBUF,#13
 1982+ 1			        putc    #10
 1983+ 2  0852			??0197:
 1984+ 2			        ;jnb     SCON.1,putc_loop
 1985+ 2			        ;clr     SCON.1
 1986+ 2  0852	75 99 0A	        mov     SBUF,#10
 1987:
 1988:
 1989:				        ;-- Test series G ------------------------------------------------------
 1990:				        ; Note the XCG tests are specially lame even within this context.
 1991:				        ; a.- <CLR A>, <CPL A>, <SWAP A>
 1992:				        ; b.- <INC DPTR>
 1993:				        ; c.- <XCH A,dir>
 1994:				        ; d.- <XCH A,@Ri>
 1995:				        ; e.- <XCH A,Rn>
 1996:
 1997:				        putc    #'G'                ; start of test series
 1998+ 1  0855			??0198:
 1999+ 1			        ;jnb     SCON.1,putc_loop
 2000+ 1			        ;clr     SCON.1
 2001+ 1  0855	75 99 47	        mov     SBUF,#'G'
 2002:
 2003:	  0858	74 55		        mov     a,#055h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 37



 Line  I  Addr  Code            Source

 2004:	  085A	E4		        clr     a
 2005:	  085B	70 11		        jnz     tg_a0
 2006:
 2007:	  085D	74 55		        mov     a,#055h
 2008:	  085F	F4		        cpl     a
 2009:	  0860	B4 AA 0B	        cjne    a,#0aah,tg_a0
 2010:
 2011:	  0863	74 97		        mov     a,#097h
 2012:	  0865	C4		        swap    a
 2013:	  0866	B4 79 05	        cjne    a,#079h,tg_a0
 2014:
 2015:				        eot     'a',tg_a0
 2016+ 1			        putc    #'a'
 2017+ 2  0869			??0200:
 2018+ 2			        ;jnb     SCON.1,putc_loop
 2019+ 2			        ;clr     SCON.1
 2020+ 2  0869	75 99 61	        mov     SBUF,#'a'
 2021+ 1  086C	80 06		        sjmp    ??0199
 2022+ 1  086E			tg_a0:  putc    #'?'
 2023+ 2  086E			??0201:
 2024+ 2			        ;jnb     SCON.1,putc_loop
 2025+ 2			        ;clr     SCON.1
 2026+ 2  086E	75 99 3F	        mov     SBUF,#'?'
 2027+ 1  0871	75 6E 01	        mov     fail,#001h
 2028+ 1  0874			??0199:
 2029:
 2030:	  0874	75 83 12	        mov     DPH,#012h
 2031:	  0877	75 82 FD	        mov     DPL,#0fdh
 2032:	  087A	A3		        inc     dptr
 2033:	  087B	E5 83		        mov     a,DPH
 2034:	  087D	B4 12 20	        cjne    a,#012h,tg_b0
 2035:	  0880	E5 82		        mov     a,DPL
 2036:	  0882	B4 FE 1B	        cjne    a,#0feh,tg_b0
 2037:	  0885	A3		        inc     dptr
 2038:	  0886	E5 83		        mov     a,DPH
 2039:	  0888	B4 12 15	        cjne    a,#012h,tg_b0
 2040:	  088B	E5 82		        mov     a,DPL
 2041:	  088D	B4 FF 10	        cjne    a,#0ffh,tg_b0
 2042:	  0890	A3		        inc     dptr
 2043:	  0891	E5 83		        mov     a,DPH
 2044:	  0893	B4 13 0A	        cjne    a,#013h,tg_b0
 2045:	  0896	E5 82		        mov     a,DPL
 2046:	  0898	B4 00 05	        cjne    a,#000h,tg_b0
 2047:
 2048:				        eot     'b',tg_b0
 2049+ 1			        putc    #'b'
 2050+ 2  089B			??0203:
 2051+ 2			        ;jnb     SCON.1,putc_loop
 2052+ 2			        ;clr     SCON.1
 2053+ 2  089B	75 99 62	        mov     SBUF,#'b'
 2054+ 1  089E	80 06		        sjmp    ??0202
 2055+ 1  08A0			tg_b0:  putc    #'?'
 2056+ 2  08A0			??0204:
 2057+ 2			        ;jnb     SCON.1,putc_loop
 2058+ 2			        ;clr     SCON.1
 2059+ 2  08A0	75 99 3F	        mov     SBUF,#'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 38



 Line  I  Addr  Code            Source

 2060+ 1  08A3	75 6E 01	        mov     fail,#001h
 2061+ 1  08A6			??0202:
 2062:
 2063:				        ; c.- <XCH A,dir>
 2064:	  08A6	74 34		        mov     a,#34h
 2065:	  08A8	75 13 57	        mov     13h,#57h
 2066:	  08AB	C5 13		        xch     a,13h
 2067:	  08AD	B4 57 0A	        cjne    a,#57h,tg_c0
 2068:	  08B0	E5 13		        mov     a,13h
 2069:	  08B2	B4 34 05	        cjne    a,#34h,tg_c0
 2070:
 2071:				        eot     'c',tg_c0
 2072+ 1			        putc    #'c'
 2073+ 2  08B5			??0206:
 2074+ 2			        ;jnb     SCON.1,putc_loop
 2075+ 2			        ;clr     SCON.1
 2076+ 2  08B5	75 99 63	        mov     SBUF,#'c'
 2077+ 1  08B8	80 06		        sjmp    ??0205
 2078+ 1  08BA			tg_c0:  putc    #'?'
 2079+ 2  08BA			??0207:
 2080+ 2			        ;jnb     SCON.1,putc_loop
 2081+ 2			        ;clr     SCON.1
 2082+ 2  08BA	75 99 3F	        mov     SBUF,#'?'
 2083+ 1  08BD	75 6E 01	        mov     fail,#001h
 2084+ 1  08C0			??0205:
 2085:
 2086:				        ; d.- <XCH A,@Ri>
 2087:	  08C0	74 91		        mov     a,#91h
 2088:	  08C2	75 29 78	        mov     29h,#78h
 2089:	  08C5	79 29		        mov     r1,#29h
 2090:	  08C7	C7		        xch     a,@r1
 2091:	  08C8	B4 78 0A	        cjne    a,#78h,tg_d0
 2092:	  08CB	E5 29		        mov     a,29h
 2093:	  08CD	B4 91 05	        cjne    a,#91h,tg_d0
 2094:
 2095:				        eot     'd',tg_d0
 2096+ 1			        putc    #'d'
 2097+ 2  08D0			??0209:
 2098+ 2			        ;jnb     SCON.1,putc_loop
 2099+ 2			        ;clr     SCON.1
 2100+ 2  08D0	75 99 64	        mov     SBUF,#'d'
 2101+ 1  08D3	80 06		        sjmp    ??0208
 2102+ 1  08D5			tg_d0:  putc    #'?'
 2103+ 2  08D5			??0210:
 2104+ 2			        ;jnb     SCON.1,putc_loop
 2105+ 2			        ;clr     SCON.1
 2106+ 2  08D5	75 99 3F	        mov     SBUF,#'?'
 2107+ 1  08D8	75 6E 01	        mov     fail,#001h
 2108+ 1  08DB			??0208:
 2109:
 2110:				        ; e.- <XCHG A,Rn>
 2111:	  08DB	74 43		        mov     a,#43h
 2112:	  08DD	7E A2		        mov     r6,#0a2h
 2113:	  08DF	CE		        xch     a,r6
 2114:	  08E0	B4 A2 09	        cjne    a,#0a2h,tg_e0
 2115:	  08E3	EE		        mov     a,r6

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 39



 Line  I  Addr  Code            Source

 2116:	  08E4	B4 43 05	        cjne    a,#43h,tg_e0
 2117:
 2118:				        eot     'e',tg_e0
 2119+ 1			        putc    #'e'
 2120+ 2  08E7			??0212:
 2121+ 2			        ;jnb     SCON.1,putc_loop
 2122+ 2			        ;clr     SCON.1
 2123+ 2  08E7	75 99 65	        mov     SBUF,#'e'
 2124+ 1  08EA	80 06		        sjmp    ??0211
 2125+ 1  08EC			tg_e0:  putc    #'?'
 2126+ 2  08EC			??0213:
 2127+ 2			        ;jnb     SCON.1,putc_loop
 2128+ 2			        ;clr     SCON.1
 2129+ 2  08EC	75 99 3F	        mov     SBUF,#'?'
 2130+ 1  08EF	75 6E 01	        mov     fail,#001h
 2131+ 1  08F2			??0211:
 2132:
 2133:
 2134:				        put_crlf                    ; end of test series
 2135+ 1			        putc    #13
 2136+ 2  08F2			??0214:
 2137+ 2			        ;jnb     SCON.1,putc_loop
 2138+ 2			        ;clr     SCON.1
 2139+ 2  08F2	75 99 0D	        mov     SBUF,#13
 2140+ 1			        putc    #10
 2141+ 2  08F5			??0215:
 2142+ 2			        ;jnb     SCON.1,putc_loop
 2143+ 2			        ;clr     SCON.1
 2144+ 2  08F5	75 99 0A	        mov     SBUF,#10
 2145:
 2146:
 2147:				        ;-- ALU opcode block test ----------------------------------------------
 2148:				        ; This set of macros is used to test families of opcodes, such as ORL,
 2149:				        ; ANL, ADD, etc. with all their addressing modes.
 2150:				        ;
 2151:				        ; a.- <OP A,dir>, <OP A,@Ri>, <OP A, Rn> (n=0,1)
 2152:				        ; b.- <OP A, Rn> (n=2,3)
 2153:				        ; c.- <OP A, Rn> (n=4,5)
 2154:				        ; d.- <OP A, Rn> (n=6,7)
 2155:				        ; e.- <OP dir,#imm>, <OP A,#imm>
 2156:				        ; f.- <OP dir,A>
 2157:
 2158:				        ;save_psw:
 2159:				save_psw macro
 2160:				        mov     saved_psw,PSW
 2161:				        endm
 2162:
 2163:				tst_psw macro   flags,error_loc
 2164:				        mov     a,saved_psw
 2165:				        anl     a,#0c4h
 2166:				        xrl     a,#flags
 2167:				        anl     a,#0feh
 2168:				        jnz     error_loc
 2169:				        endm
 2170:
 2171:				set_cy  macro   flags

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 40



 Line  I  Addr  Code            Source

 2172:				        local   cy_val
 2173:				cy_val  set     (flags and 1)
 2174:				        if      cy_val eq 1
 2175:				        setb    c
 2176:				        else
 2177:				        clr     c
 2178:				        endif
 2179:				        endm
 2180:
 2181:				top_ma  macro   op,src,error_loc,flags
 2182:				        mov     src,#arg0
 2183:				        mov     a,#arg1
 2184:				        ifnb    <flags>
 2185:				        set_cy  flags
 2186:				        endif
 2187:				        op      a,src
 2188:				        ifnb    <flags>
 2189:				        save_psw
 2190:				        endif
 2191:				        cjne    a,#res,error_loc
 2192:				        ifnb    <flags>
 2193:				        tst_psw <flags>,error_loc
 2194:				        endif
 2195:				        endm
 2196:
 2197:				top_mb  macro   op,dst,error_loc,flags
 2198:				        mov     dst,#arg0
 2199:				        ifnb    <flags>
 2200:				        set_cy  flags
 2201:				        endif
 2202:				        op      dst,#arg1
 2203:				        ifnb    <flags>
 2204:				        save_psw
 2205:				        endif
 2206:				        mov     ACC,dst
 2207:				        cjne    a,#res,error_loc
 2208:				        ifnb    <flags>
 2209:				        tst_psw <flags>,error_loc
 2210:				        endif
 2211:				        endm
 2212:
 2213:				top_mc  macro   op,error_loc,flags
 2214:				        mov     dir0,#arg0
 2215:				        mov     a,#arg1
 2216:				        ifnb    <flags>
 2217:				        set_cy  flags
 2218:				        endif
 2219:				        op      dir0,a
 2220:				        ifnb    <flags>
 2221:				        save_psw
 2222:				        endif
 2223:				        mov     a,dir0
 2224:				        cjne    a,#res,error_loc
 2225:				        ifnb    <flags>
 2226:				        tst_psw <flags>,error_loc
 2227:				        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 41



 Line  I  Addr  Code            Source

 2228:				        endm
 2229:
 2230:
 2231:				tst_alu macro   op,a0,a1,r,flags
 2232:				        local   tall_0d
 2233:				        local   tall_0a
 2234:				        local   tall_0b
 2235:				        local   tall_0c
 2236:				        local   tall_1
 2237:				        local   tall_2
 2238:
 2239:				        arg0    set a0
 2240:				        arg1    set a1
 2241:				        res     set r
 2242:
 2243:				        top_ma  op,dir0,tall_0a,<flags>
 2244:				        mov     r0,#dir0
 2245:				        top_ma  op,@r0,tall_0a,<flags>
 2246:				        mov     r1,#031h
 2247:				        top_ma  op,@r1,tall_0a,<flags>
 2248:
 2249:				        top_ma  op,r0,tall_0a,<flags>
 2250:				        top_ma  op,r1,tall_0a,<flags>
 2251:
 2252:				        eot     'a',tall_0a
 2253:
 2254:				        top_ma  op,r2,tall_0b,<flags>
 2255:				        top_ma  op,r3,tall_0b,<flags>
 2256:
 2257:				        eot     'b',tall_0b
 2258:
 2259:				        top_ma  op,r4,tall_0c,<flags>
 2260:				        top_ma  op,r5,tall_0c,<flags>
 2261:
 2262:				        eot     'c',tall_0c
 2263:
 2264:				        top_ma  op,r6,tall_0d,<flags>
 2265:				        top_ma  op,r7,tall_0d,<flags>
 2266:
 2267:				        eot     'd',tall_0d
 2268:
 2269:				        ifb     <flags>
 2270:
 2271:				        top_mb  op,a,tall_1,<flags>
 2272:				        top_mb  op,dir0,tall_1,<flags>
 2273:
 2274:				        eot     'e',tall_1
 2275:
 2276:				        top_mc  op,tall_2,<flags>
 2277:
 2278:				        eot     'f',tall_2
 2279:				        endif
 2280:				        endm
 2281:
 2282:
 2283:				        ;-- Test series H ------------------------------------------------------

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 42



 Line  I  Addr  Code            Source

 2284:				        ; ANL
 2285:				        ; (See comments for 'ALU opcode block test')
 2286:
 2287:				        putc    #'H'                ; start of test series
 2288+ 1  08F8			??0216:
 2289+ 1			        ;jnb     SCON.1,putc_loop
 2290+ 1			        ;clr     SCON.1
 2291+ 1  08F8	75 99 48	        mov     SBUF,#'H'
 2292:
 2293:				        tst_alu anl,03ch,099h,018h,
 2294+ 1
 2295+ 1	N      003C	        arg0    set 03ch
 2296+ 1	N      0099	        arg1    set 099h
 2297+ 1	N      0018	        res     set 018h
 2298+ 1
 2299+ 1			        top_ma  anl,dir0,??0218,<>
 2300+ 2  08FB	75 60 3C	        mov     dir0,#arg0
 2301+ 2  08FE	74 99		        mov     a,#arg1
 2302+ 2			        ifnb    <>
 2303+ 2			        set_cy
 2304+ 2			        endif
 2305+ 2  0900	55 60		        anl      a,dir0
 2306+ 2			        ifnb    <>
 2307+ 2			        save_psw
 2308+ 2			        endif
 2309+ 2  0902	B4 18 29	        cjne    a,#res,??0218
 2310+ 2			        ifnb    <>
 2311+ 2			        tst_psw <>,??0218
 2312+ 2			        endif
 2313+ 1  0905	78 60		        mov     r0,#dir0
 2314+ 1			        top_ma  anl,@r0,??0218,<>
 2315+ 2  0907	76 3C		        mov     @r0,#arg0
 2316+ 2  0909	74 99		        mov     a,#arg1
 2317+ 2			        ifnb    <>
 2318+ 2			        set_cy
 2319+ 2			        endif
 2320+ 2  090B	56		        anl      a,@r0
 2321+ 2			        ifnb    <>
 2322+ 2			        save_psw
 2323+ 2			        endif
 2324+ 2  090C	B4 18 1F	        cjne    a,#res,??0218
 2325+ 2			        ifnb    <>
 2326+ 2			        tst_psw <>,??0218
 2327+ 2			        endif
 2328+ 1  090F	79 31		        mov     r1,#031h
 2329+ 1			        top_ma  anl,@r1,??0218,<>
 2330+ 2  0911	77 3C		        mov     @r1,#arg0
 2331+ 2  0913	74 99		        mov     a,#arg1
 2332+ 2			        ifnb    <>
 2333+ 2			        set_cy
 2334+ 2			        endif
 2335+ 2  0915	57		        anl      a,@r1
 2336+ 2			        ifnb    <>
 2337+ 2			        save_psw
 2338+ 2			        endif
 2339+ 2  0916	B4 18 15	        cjne    a,#res,??0218

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 43



 Line  I  Addr  Code            Source

 2340+ 2			        ifnb    <>
 2341+ 2			        tst_psw <>,??0218
 2342+ 2			        endif
 2343+ 1
 2344+ 1			        top_ma  anl,r0,??0218,<>
 2345+ 2  0919	78 3C		        mov     r0,#arg0
 2346+ 2  091B	74 99		        mov     a,#arg1
 2347+ 2			        ifnb    <>
 2348+ 2			        set_cy
 2349+ 2			        endif
 2350+ 2  091D	58		        anl      a,r0
 2351+ 2			        ifnb    <>
 2352+ 2			        save_psw
 2353+ 2			        endif
 2354+ 2  091E	B4 18 0D	        cjne    a,#res,??0218
 2355+ 2			        ifnb    <>
 2356+ 2			        tst_psw <>,??0218
 2357+ 2			        endif
 2358+ 1			        top_ma  anl,r1,??0218,<>
 2359+ 2  0921	79 3C		        mov     r1,#arg0
 2360+ 2  0923	74 99		        mov     a,#arg1
 2361+ 2			        ifnb    <>
 2362+ 2			        set_cy
 2363+ 2			        endif
 2364+ 2  0925	59		        anl      a,r1
 2365+ 2			        ifnb    <>
 2366+ 2			        save_psw
 2367+ 2			        endif
 2368+ 2  0926	B4 18 05	        cjne    a,#res,??0218
 2369+ 2			        ifnb    <>
 2370+ 2			        tst_psw <>,??0218
 2371+ 2			        endif
 2372+ 1
 2373+ 1			        eot     'a',??0218
 2374+ 2			        putc    #'a'
 2375+ 3  0929			??0224:
 2376+ 3			        ;jnb     SCON.1,putc_loop
 2377+ 3			        ;clr     SCON.1
 2378+ 3  0929	75 99 61	        mov     SBUF,#'a'
 2379+ 2  092C	80 06		        sjmp    ??0223
 2380+ 2  092E			??0218:  putc    #'?'
 2381+ 3  092E			??0225:
 2382+ 3			        ;jnb     SCON.1,putc_loop
 2383+ 3			        ;clr     SCON.1
 2384+ 3  092E	75 99 3F	        mov     SBUF,#'?'
 2385+ 2  0931	75 6E 01	        mov     fail,#001h
 2386+ 2  0934			??0223:
 2387+ 1
 2388+ 1			        top_ma  anl,r2,??0219,<>
 2389+ 2  0934	7A 3C		        mov     r2,#arg0
 2390+ 2  0936	74 99		        mov     a,#arg1
 2391+ 2			        ifnb    <>
 2392+ 2			        set_cy
 2393+ 2			        endif
 2394+ 2  0938	5A		        anl      a,r2
 2395+ 2			        ifnb    <>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 44



 Line  I  Addr  Code            Source

 2396+ 2			        save_psw
 2397+ 2			        endif
 2398+ 2  0939	B4 18 0D	        cjne    a,#res,??0219
 2399+ 2			        ifnb    <>
 2400+ 2			        tst_psw <>,??0219
 2401+ 2			        endif
 2402+ 1			        top_ma  anl,r3,??0219,<>
 2403+ 2  093C	7B 3C		        mov     r3,#arg0
 2404+ 2  093E	74 99		        mov     a,#arg1
 2405+ 2			        ifnb    <>
 2406+ 2			        set_cy
 2407+ 2			        endif
 2408+ 2  0940	5B		        anl      a,r3
 2409+ 2			        ifnb    <>
 2410+ 2			        save_psw
 2411+ 2			        endif
 2412+ 2  0941	B4 18 05	        cjne    a,#res,??0219
 2413+ 2			        ifnb    <>
 2414+ 2			        tst_psw <>,??0219
 2415+ 2			        endif
 2416+ 1
 2417+ 1			        eot     'b',??0219
 2418+ 2			        putc    #'b'
 2419+ 3  0944			??0227:
 2420+ 3			        ;jnb     SCON.1,putc_loop
 2421+ 3			        ;clr     SCON.1
 2422+ 3  0944	75 99 62	        mov     SBUF,#'b'
 2423+ 2  0947	80 06		        sjmp    ??0226
 2424+ 2  0949			??0219:  putc    #'?'
 2425+ 3  0949			??0228:
 2426+ 3			        ;jnb     SCON.1,putc_loop
 2427+ 3			        ;clr     SCON.1
 2428+ 3  0949	75 99 3F	        mov     SBUF,#'?'
 2429+ 2  094C	75 6E 01	        mov     fail,#001h
 2430+ 2  094F			??0226:
 2431+ 1
 2432+ 1			        top_ma  anl,r4,??0220,<>
 2433+ 2  094F	7C 3C		        mov     r4,#arg0
 2434+ 2  0951	74 99		        mov     a,#arg1
 2435+ 2			        ifnb    <>
 2436+ 2			        set_cy
 2437+ 2			        endif
 2438+ 2  0953	5C		        anl      a,r4
 2439+ 2			        ifnb    <>
 2440+ 2			        save_psw
 2441+ 2			        endif
 2442+ 2  0954	B4 18 0D	        cjne    a,#res,??0220
 2443+ 2			        ifnb    <>
 2444+ 2			        tst_psw <>,??0220
 2445+ 2			        endif
 2446+ 1			        top_ma  anl,r5,??0220,<>
 2447+ 2  0957	7D 3C		        mov     r5,#arg0
 2448+ 2  0959	74 99		        mov     a,#arg1
 2449+ 2			        ifnb    <>
 2450+ 2			        set_cy
 2451+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 45



 Line  I  Addr  Code            Source

 2452+ 2  095B	5D		        anl      a,r5
 2453+ 2			        ifnb    <>
 2454+ 2			        save_psw
 2455+ 2			        endif
 2456+ 2  095C	B4 18 05	        cjne    a,#res,??0220
 2457+ 2			        ifnb    <>
 2458+ 2			        tst_psw <>,??0220
 2459+ 2			        endif
 2460+ 1
 2461+ 1			        eot     'c',??0220
 2462+ 2			        putc    #'c'
 2463+ 3  095F			??0230:
 2464+ 3			        ;jnb     SCON.1,putc_loop
 2465+ 3			        ;clr     SCON.1
 2466+ 3  095F	75 99 63	        mov     SBUF,#'c'
 2467+ 2  0962	80 06		        sjmp    ??0229
 2468+ 2  0964			??0220:  putc    #'?'
 2469+ 3  0964			??0231:
 2470+ 3			        ;jnb     SCON.1,putc_loop
 2471+ 3			        ;clr     SCON.1
 2472+ 3  0964	75 99 3F	        mov     SBUF,#'?'
 2473+ 2  0967	75 6E 01	        mov     fail,#001h
 2474+ 2  096A			??0229:
 2475+ 1
 2476+ 1			        top_ma  anl,r6,??0217,<>
 2477+ 2  096A	7E 3C		        mov     r6,#arg0
 2478+ 2  096C	74 99		        mov     a,#arg1
 2479+ 2			        ifnb    <>
 2480+ 2			        set_cy
 2481+ 2			        endif
 2482+ 2  096E	5E		        anl      a,r6
 2483+ 2			        ifnb    <>
 2484+ 2			        save_psw
 2485+ 2			        endif
 2486+ 2  096F	B4 18 0D	        cjne    a,#res,??0217
 2487+ 2			        ifnb    <>
 2488+ 2			        tst_psw <>,??0217
 2489+ 2			        endif
 2490+ 1			        top_ma  anl,r7,??0217,<>
 2491+ 2  0972	7F 3C		        mov     r7,#arg0
 2492+ 2  0974	74 99		        mov     a,#arg1
 2493+ 2			        ifnb    <>
 2494+ 2			        set_cy
 2495+ 2			        endif
 2496+ 2  0976	5F		        anl      a,r7
 2497+ 2			        ifnb    <>
 2498+ 2			        save_psw
 2499+ 2			        endif
 2500+ 2  0977	B4 18 05	        cjne    a,#res,??0217
 2501+ 2			        ifnb    <>
 2502+ 2			        tst_psw <>,??0217
 2503+ 2			        endif
 2504+ 1
 2505+ 1			        eot     'd',??0217
 2506+ 2			        putc    #'d'
 2507+ 3  097A			??0233:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 46



 Line  I  Addr  Code            Source

 2508+ 3			        ;jnb     SCON.1,putc_loop
 2509+ 3			        ;clr     SCON.1
 2510+ 3  097A	75 99 64	        mov     SBUF,#'d'
 2511+ 2  097D	80 06		        sjmp    ??0232
 2512+ 2  097F			??0217:  putc    #'?'
 2513+ 3  097F			??0234:
 2514+ 3			        ;jnb     SCON.1,putc_loop
 2515+ 3			        ;clr     SCON.1
 2516+ 3  097F	75 99 3F	        mov     SBUF,#'?'
 2517+ 2  0982	75 6E 01	        mov     fail,#001h
 2518+ 2  0985			??0232:
 2519+ 1
 2520+ 1			        ifb     <>
 2521+ 1
 2522+ 1			        top_mb  anl,a,??0221,<>
 2523+ 2  0985	74 3C		        mov     a,#arg0
 2524+ 2			        ifnb    <>
 2525+ 2			        set_cy
 2526+ 2			        endif
 2527+ 2  0987	54 99		        anl      a,#arg1
 2528+ 2			        ifnb    <>
 2529+ 2			        save_psw
 2530+ 2			        endif
 2531+ 2  0989	F5 E0		        mov     ACC,a
 2532+ 2  098B	B4 18 11	        cjne    a,#res,??0221
 2533+ 2			        ifnb    <>
 2534+ 2			        tst_psw <>,??0221
 2535+ 2			        endif
 2536+ 1			        top_mb  anl,dir0,??0221,<>
 2537+ 2  098E	75 60 3C	        mov     dir0,#arg0
 2538+ 2			        ifnb    <>
 2539+ 2			        set_cy
 2540+ 2			        endif
 2541+ 2  0991	53 60 99	        anl      dir0,#arg1
 2542+ 2			        ifnb    <>
 2543+ 2			        save_psw
 2544+ 2			        endif
 2545+ 2  0994	85 60 E0	        mov     ACC,dir0
 2546+ 2  0997	B4 18 05	        cjne    a,#res,??0221
 2547+ 2			        ifnb    <>
 2548+ 2			        tst_psw <>,??0221
 2549+ 2			        endif
 2550+ 1
 2551+ 1			        eot     'e',??0221
 2552+ 2			        putc    #'e'
 2553+ 3  099A			??0236:
 2554+ 3			        ;jnb     SCON.1,putc_loop
 2555+ 3			        ;clr     SCON.1
 2556+ 3  099A	75 99 65	        mov     SBUF,#'e'
 2557+ 2  099D	80 06		        sjmp    ??0235
 2558+ 2  099F			??0221:  putc    #'?'
 2559+ 3  099F			??0237:
 2560+ 3			        ;jnb     SCON.1,putc_loop
 2561+ 3			        ;clr     SCON.1
 2562+ 3  099F	75 99 3F	        mov     SBUF,#'?'
 2563+ 2  09A2	75 6E 01	        mov     fail,#001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 47



 Line  I  Addr  Code            Source

 2564+ 2  09A5			??0235:
 2565+ 1
 2566+ 1			        top_mc  anl,??0222,<>
 2567+ 2  09A5	75 60 3C	        mov     dir0,#arg0
 2568+ 2  09A8	74 99		        mov     a,#arg1
 2569+ 2			        ifnb    <>
 2570+ 2			        set_cy
 2571+ 2			        endif
 2572+ 2  09AA	52 60		        anl      dir0,a
 2573+ 2			        ifnb    <>
 2574+ 2			        save_psw
 2575+ 2			        endif
 2576+ 2  09AC	E5 60		        mov     a,dir0
 2577+ 2  09AE	B4 18 05	        cjne    a,#res,??0222
 2578+ 2			        ifnb    <>
 2579+ 2			        tst_psw <>,??0222
 2580+ 2			        endif
 2581+ 1
 2582+ 1			        eot     'f',??0222
 2583+ 2			        putc    #'f'
 2584+ 3  09B1			??0239:
 2585+ 3			        ;jnb     SCON.1,putc_loop
 2586+ 3			        ;clr     SCON.1
 2587+ 3  09B1	75 99 66	        mov     SBUF,#'f'
 2588+ 2  09B4	80 06		        sjmp    ??0238
 2589+ 2  09B6			??0222:  putc    #'?'
 2590+ 3  09B6			??0240:
 2591+ 3			        ;jnb     SCON.1,putc_loop
 2592+ 3			        ;clr     SCON.1
 2593+ 3  09B6	75 99 3F	        mov     SBUF,#'?'
 2594+ 2  09B9	75 6E 01	        mov     fail,#001h
 2595+ 2  09BC			??0238:
 2596+ 1			        endif
 2597:
 2598:				        put_crlf                    ; end of test series
 2599+ 1			        putc    #13
 2600+ 2  09BC			??0241:
 2601+ 2			        ;jnb     SCON.1,putc_loop
 2602+ 2			        ;clr     SCON.1
 2603+ 2  09BC	75 99 0D	        mov     SBUF,#13
 2604+ 1			        putc    #10
 2605+ 2  09BF			??0242:
 2606+ 2			        ;jnb     SCON.1,putc_loop
 2607+ 2			        ;clr     SCON.1
 2608+ 2  09BF	75 99 0A	        mov     SBUF,#10
 2609:
 2610:
 2611:				        ;-- Test series I ------------------------------------------------------
 2612:				        ; ORL
 2613:				        ; (See comments for 'ALU opcode block test')
 2614:
 2615:				        putc    #'I'                ; start of test series
 2616+ 1  09C2			??0243:
 2617+ 1			        ;jnb     SCON.1,putc_loop
 2618+ 1			        ;clr     SCON.1
 2619+ 1  09C2	75 99 49	        mov     SBUF,#'I'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 48



 Line  I  Addr  Code            Source

 2620:
 2621:				        tst_alu orl,051h,092h,0d3h,
 2622+ 1
 2623+ 1	N      0051	        arg0    set 051h
 2624+ 1	N      0092	        arg1    set 092h
 2625+ 1	N      00D3	        res     set 0d3h
 2626+ 1
 2627+ 1			        top_ma  orl,dir0,??0245,<>
 2628+ 2  09C5	75 60 51	        mov     dir0,#arg0
 2629+ 2  09C8	74 92		        mov     a,#arg1
 2630+ 2			        ifnb    <>
 2631+ 2			        set_cy
 2632+ 2			        endif
 2633+ 2  09CA	45 60		        orl      a,dir0
 2634+ 2			        ifnb    <>
 2635+ 2			        save_psw
 2636+ 2			        endif
 2637+ 2  09CC	B4 D3 29	        cjne    a,#res,??0245
 2638+ 2			        ifnb    <>
 2639+ 2			        tst_psw <>,??0245
 2640+ 2			        endif
 2641+ 1  09CF	78 60		        mov     r0,#dir0
 2642+ 1			        top_ma  orl,@r0,??0245,<>
 2643+ 2  09D1	76 51		        mov     @r0,#arg0
 2644+ 2  09D3	74 92		        mov     a,#arg1
 2645+ 2			        ifnb    <>
 2646+ 2			        set_cy
 2647+ 2			        endif
 2648+ 2  09D5	46		        orl      a,@r0
 2649+ 2			        ifnb    <>
 2650+ 2			        save_psw
 2651+ 2			        endif
 2652+ 2  09D6	B4 D3 1F	        cjne    a,#res,??0245
 2653+ 2			        ifnb    <>
 2654+ 2			        tst_psw <>,??0245
 2655+ 2			        endif
 2656+ 1  09D9	79 31		        mov     r1,#031h
 2657+ 1			        top_ma  orl,@r1,??0245,<>
 2658+ 2  09DB	77 51		        mov     @r1,#arg0
 2659+ 2  09DD	74 92		        mov     a,#arg1
 2660+ 2			        ifnb    <>
 2661+ 2			        set_cy
 2662+ 2			        endif
 2663+ 2  09DF	47		        orl      a,@r1
 2664+ 2			        ifnb    <>
 2665+ 2			        save_psw
 2666+ 2			        endif
 2667+ 2  09E0	B4 D3 15	        cjne    a,#res,??0245
 2668+ 2			        ifnb    <>
 2669+ 2			        tst_psw <>,??0245
 2670+ 2			        endif
 2671+ 1
 2672+ 1			        top_ma  orl,r0,??0245,<>
 2673+ 2  09E3	78 51		        mov     r0,#arg0
 2674+ 2  09E5	74 92		        mov     a,#arg1
 2675+ 2			        ifnb    <>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 49



 Line  I  Addr  Code            Source

 2676+ 2			        set_cy
 2677+ 2			        endif
 2678+ 2  09E7	48		        orl      a,r0
 2679+ 2			        ifnb    <>
 2680+ 2			        save_psw
 2681+ 2			        endif
 2682+ 2  09E8	B4 D3 0D	        cjne    a,#res,??0245
 2683+ 2			        ifnb    <>
 2684+ 2			        tst_psw <>,??0245
 2685+ 2			        endif
 2686+ 1			        top_ma  orl,r1,??0245,<>
 2687+ 2  09EB	79 51		        mov     r1,#arg0
 2688+ 2  09ED	74 92		        mov     a,#arg1
 2689+ 2			        ifnb    <>
 2690+ 2			        set_cy
 2691+ 2			        endif
 2692+ 2  09EF	49		        orl      a,r1
 2693+ 2			        ifnb    <>
 2694+ 2			        save_psw
 2695+ 2			        endif
 2696+ 2  09F0	B4 D3 05	        cjne    a,#res,??0245
 2697+ 2			        ifnb    <>
 2698+ 2			        tst_psw <>,??0245
 2699+ 2			        endif
 2700+ 1
 2701+ 1			        eot     'a',??0245
 2702+ 2			        putc    #'a'
 2703+ 3  09F3			??0251:
 2704+ 3			        ;jnb     SCON.1,putc_loop
 2705+ 3			        ;clr     SCON.1
 2706+ 3  09F3	75 99 61	        mov     SBUF,#'a'
 2707+ 2  09F6	80 06		        sjmp    ??0250
 2708+ 2  09F8			??0245:  putc    #'?'
 2709+ 3  09F8			??0252:
 2710+ 3			        ;jnb     SCON.1,putc_loop
 2711+ 3			        ;clr     SCON.1
 2712+ 3  09F8	75 99 3F	        mov     SBUF,#'?'
 2713+ 2  09FB	75 6E 01	        mov     fail,#001h
 2714+ 2  09FE			??0250:
 2715+ 1
 2716+ 1			        top_ma  orl,r2,??0246,<>
 2717+ 2  09FE	7A 51		        mov     r2,#arg0
 2718+ 2  0A00	74 92		        mov     a,#arg1
 2719+ 2			        ifnb    <>
 2720+ 2			        set_cy
 2721+ 2			        endif
 2722+ 2  0A02	4A		        orl      a,r2
 2723+ 2			        ifnb    <>
 2724+ 2			        save_psw
 2725+ 2			        endif
 2726+ 2  0A03	B4 D3 0D	        cjne    a,#res,??0246
 2727+ 2			        ifnb    <>
 2728+ 2			        tst_psw <>,??0246
 2729+ 2			        endif
 2730+ 1			        top_ma  orl,r3,??0246,<>
 2731+ 2  0A06	7B 51		        mov     r3,#arg0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 50



 Line  I  Addr  Code            Source

 2732+ 2  0A08	74 92		        mov     a,#arg1
 2733+ 2			        ifnb    <>
 2734+ 2			        set_cy
 2735+ 2			        endif
 2736+ 2  0A0A	4B		        orl      a,r3
 2737+ 2			        ifnb    <>
 2738+ 2			        save_psw
 2739+ 2			        endif
 2740+ 2  0A0B	B4 D3 05	        cjne    a,#res,??0246
 2741+ 2			        ifnb    <>
 2742+ 2			        tst_psw <>,??0246
 2743+ 2			        endif
 2744+ 1
 2745+ 1			        eot     'b',??0246
 2746+ 2			        putc    #'b'
 2747+ 3  0A0E			??0254:
 2748+ 3			        ;jnb     SCON.1,putc_loop
 2749+ 3			        ;clr     SCON.1
 2750+ 3  0A0E	75 99 62	        mov     SBUF,#'b'
 2751+ 2  0A11	80 06		        sjmp    ??0253
 2752+ 2  0A13			??0246:  putc    #'?'
 2753+ 3  0A13			??0255:
 2754+ 3			        ;jnb     SCON.1,putc_loop
 2755+ 3			        ;clr     SCON.1
 2756+ 3  0A13	75 99 3F	        mov     SBUF,#'?'
 2757+ 2  0A16	75 6E 01	        mov     fail,#001h
 2758+ 2  0A19			??0253:
 2759+ 1
 2760+ 1			        top_ma  orl,r4,??0247,<>
 2761+ 2  0A19	7C 51		        mov     r4,#arg0
 2762+ 2  0A1B	74 92		        mov     a,#arg1
 2763+ 2			        ifnb    <>
 2764+ 2			        set_cy
 2765+ 2			        endif
 2766+ 2  0A1D	4C		        orl      a,r4
 2767+ 2			        ifnb    <>
 2768+ 2			        save_psw
 2769+ 2			        endif
 2770+ 2  0A1E	B4 D3 0D	        cjne    a,#res,??0247
 2771+ 2			        ifnb    <>
 2772+ 2			        tst_psw <>,??0247
 2773+ 2			        endif
 2774+ 1			        top_ma  orl,r5,??0247,<>
 2775+ 2  0A21	7D 51		        mov     r5,#arg0
 2776+ 2  0A23	74 92		        mov     a,#arg1
 2777+ 2			        ifnb    <>
 2778+ 2			        set_cy
 2779+ 2			        endif
 2780+ 2  0A25	4D		        orl      a,r5
 2781+ 2			        ifnb    <>
 2782+ 2			        save_psw
 2783+ 2			        endif
 2784+ 2  0A26	B4 D3 05	        cjne    a,#res,??0247
 2785+ 2			        ifnb    <>
 2786+ 2			        tst_psw <>,??0247
 2787+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 51



 Line  I  Addr  Code            Source

 2788+ 1
 2789+ 1			        eot     'c',??0247
 2790+ 2			        putc    #'c'
 2791+ 3  0A29			??0257:
 2792+ 3			        ;jnb     SCON.1,putc_loop
 2793+ 3			        ;clr     SCON.1
 2794+ 3  0A29	75 99 63	        mov     SBUF,#'c'
 2795+ 2  0A2C	80 06		        sjmp    ??0256
 2796+ 2  0A2E			??0247:  putc    #'?'
 2797+ 3  0A2E			??0258:
 2798+ 3			        ;jnb     SCON.1,putc_loop
 2799+ 3			        ;clr     SCON.1
 2800+ 3  0A2E	75 99 3F	        mov     SBUF,#'?'
 2801+ 2  0A31	75 6E 01	        mov     fail,#001h
 2802+ 2  0A34			??0256:
 2803+ 1
 2804+ 1			        top_ma  orl,r6,??0244,<>
 2805+ 2  0A34	7E 51		        mov     r6,#arg0
 2806+ 2  0A36	74 92		        mov     a,#arg1
 2807+ 2			        ifnb    <>
 2808+ 2			        set_cy
 2809+ 2			        endif
 2810+ 2  0A38	4E		        orl      a,r6
 2811+ 2			        ifnb    <>
 2812+ 2			        save_psw
 2813+ 2			        endif
 2814+ 2  0A39	B4 D3 0D	        cjne    a,#res,??0244
 2815+ 2			        ifnb    <>
 2816+ 2			        tst_psw <>,??0244
 2817+ 2			        endif
 2818+ 1			        top_ma  orl,r7,??0244,<>
 2819+ 2  0A3C	7F 51		        mov     r7,#arg0
 2820+ 2  0A3E	74 92		        mov     a,#arg1
 2821+ 2			        ifnb    <>
 2822+ 2			        set_cy
 2823+ 2			        endif
 2824+ 2  0A40	4F		        orl      a,r7
 2825+ 2			        ifnb    <>
 2826+ 2			        save_psw
 2827+ 2			        endif
 2828+ 2  0A41	B4 D3 05	        cjne    a,#res,??0244
 2829+ 2			        ifnb    <>
 2830+ 2			        tst_psw <>,??0244
 2831+ 2			        endif
 2832+ 1
 2833+ 1			        eot     'd',??0244
 2834+ 2			        putc    #'d'
 2835+ 3  0A44			??0260:
 2836+ 3			        ;jnb     SCON.1,putc_loop
 2837+ 3			        ;clr     SCON.1
 2838+ 3  0A44	75 99 64	        mov     SBUF,#'d'
 2839+ 2  0A47	80 06		        sjmp    ??0259
 2840+ 2  0A49			??0244:  putc    #'?'
 2841+ 3  0A49			??0261:
 2842+ 3			        ;jnb     SCON.1,putc_loop
 2843+ 3			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 52



 Line  I  Addr  Code            Source

 2844+ 3  0A49	75 99 3F	        mov     SBUF,#'?'
 2845+ 2  0A4C	75 6E 01	        mov     fail,#001h
 2846+ 2  0A4F			??0259:
 2847+ 1
 2848+ 1			        ifb     <>
 2849+ 1
 2850+ 1			        top_mb  orl,a,??0248,<>
 2851+ 2  0A4F	74 51		        mov     a,#arg0
 2852+ 2			        ifnb    <>
 2853+ 2			        set_cy
 2854+ 2			        endif
 2855+ 2  0A51	44 92		        orl      a,#arg1
 2856+ 2			        ifnb    <>
 2857+ 2			        save_psw
 2858+ 2			        endif
 2859+ 2  0A53	F5 E0		        mov     ACC,a
 2860+ 2  0A55	B4 D3 11	        cjne    a,#res,??0248
 2861+ 2			        ifnb    <>
 2862+ 2			        tst_psw <>,??0248
 2863+ 2			        endif
 2864+ 1			        top_mb  orl,dir0,??0248,<>
 2865+ 2  0A58	75 60 51	        mov     dir0,#arg0
 2866+ 2			        ifnb    <>
 2867+ 2			        set_cy
 2868+ 2			        endif
 2869+ 2  0A5B	43 60 92	        orl      dir0,#arg1
 2870+ 2			        ifnb    <>
 2871+ 2			        save_psw
 2872+ 2			        endif
 2873+ 2  0A5E	85 60 E0	        mov     ACC,dir0
 2874+ 2  0A61	B4 D3 05	        cjne    a,#res,??0248
 2875+ 2			        ifnb    <>
 2876+ 2			        tst_psw <>,??0248
 2877+ 2			        endif
 2878+ 1
 2879+ 1			        eot     'e',??0248
 2880+ 2			        putc    #'e'
 2881+ 3  0A64			??0263:
 2882+ 3			        ;jnb     SCON.1,putc_loop
 2883+ 3			        ;clr     SCON.1
 2884+ 3  0A64	75 99 65	        mov     SBUF,#'e'
 2885+ 2  0A67	80 06		        sjmp    ??0262
 2886+ 2  0A69			??0248:  putc    #'?'
 2887+ 3  0A69			??0264:
 2888+ 3			        ;jnb     SCON.1,putc_loop
 2889+ 3			        ;clr     SCON.1
 2890+ 3  0A69	75 99 3F	        mov     SBUF,#'?'
 2891+ 2  0A6C	75 6E 01	        mov     fail,#001h
 2892+ 2  0A6F			??0262:
 2893+ 1
 2894+ 1			        top_mc  orl,??0249,<>
 2895+ 2  0A6F	75 60 51	        mov     dir0,#arg0
 2896+ 2  0A72	74 92		        mov     a,#arg1
 2897+ 2			        ifnb    <>
 2898+ 2			        set_cy
 2899+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 53



 Line  I  Addr  Code            Source

 2900+ 2  0A74	42 60		        orl      dir0,a
 2901+ 2			        ifnb    <>
 2902+ 2			        save_psw
 2903+ 2			        endif
 2904+ 2  0A76	E5 60		        mov     a,dir0
 2905+ 2  0A78	B4 D3 05	        cjne    a,#res,??0249
 2906+ 2			        ifnb    <>
 2907+ 2			        tst_psw <>,??0249
 2908+ 2			        endif
 2909+ 1
 2910+ 1			        eot     'f',??0249
 2911+ 2			        putc    #'f'
 2912+ 3  0A7B			??0266:
 2913+ 3			        ;jnb     SCON.1,putc_loop
 2914+ 3			        ;clr     SCON.1
 2915+ 3  0A7B	75 99 66	        mov     SBUF,#'f'
 2916+ 2  0A7E	80 06		        sjmp    ??0265
 2917+ 2  0A80			??0249:  putc    #'?'
 2918+ 3  0A80			??0267:
 2919+ 3			        ;jnb     SCON.1,putc_loop
 2920+ 3			        ;clr     SCON.1
 2921+ 3  0A80	75 99 3F	        mov     SBUF,#'?'
 2922+ 2  0A83	75 6E 01	        mov     fail,#001h
 2923+ 2  0A86			??0265:
 2924+ 1			        endif
 2925:
 2926:				        put_crlf                    ; end of test series
 2927+ 1			        putc    #13
 2928+ 2  0A86			??0268:
 2929+ 2			        ;jnb     SCON.1,putc_loop
 2930+ 2			        ;clr     SCON.1
 2931+ 2  0A86	75 99 0D	        mov     SBUF,#13
 2932+ 1			        putc    #10
 2933+ 2  0A89			??0269:
 2934+ 2			        ;jnb     SCON.1,putc_loop
 2935+ 2			        ;clr     SCON.1
 2936+ 2  0A89	75 99 0A	        mov     SBUF,#10
 2937:
 2938:				        ;-- Test series J ------------------------------------------------------
 2939:				        ; XRL
 2940:				        ; (See comments for 'ALU opcode block test')
 2941:
 2942:
 2943:				        putc    #'J'                ; start of test series
 2944+ 1  0A8C			??0270:
 2945+ 1			        ;jnb     SCON.1,putc_loop
 2946+ 1			        ;clr     SCON.1
 2947+ 1  0A8C	75 99 4A	        mov     SBUF,#'J'
 2948:
 2949:				        tst_alu xrl,051h,033h,062h,
 2950+ 1
 2951+ 1	N      0051	        arg0    set 051h
 2952+ 1	N      0033	        arg1    set 033h
 2953+ 1	N      0062	        res     set 062h
 2954+ 1
 2955+ 1			        top_ma  xrl,dir0,??0272,<>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 54



 Line  I  Addr  Code            Source

 2956+ 2  0A8F	75 60 51	        mov     dir0,#arg0
 2957+ 2  0A92	74 33		        mov     a,#arg1
 2958+ 2			        ifnb    <>
 2959+ 2			        set_cy
 2960+ 2			        endif
 2961+ 2  0A94	65 60		        xrl      a,dir0
 2962+ 2			        ifnb    <>
 2963+ 2			        save_psw
 2964+ 2			        endif
 2965+ 2  0A96	B4 62 29	        cjne    a,#res,??0272
 2966+ 2			        ifnb    <>
 2967+ 2			        tst_psw <>,??0272
 2968+ 2			        endif
 2969+ 1  0A99	78 60		        mov     r0,#dir0
 2970+ 1			        top_ma  xrl,@r0,??0272,<>
 2971+ 2  0A9B	76 51		        mov     @r0,#arg0
 2972+ 2  0A9D	74 33		        mov     a,#arg1
 2973+ 2			        ifnb    <>
 2974+ 2			        set_cy
 2975+ 2			        endif
 2976+ 2  0A9F	66		        xrl      a,@r0
 2977+ 2			        ifnb    <>
 2978+ 2			        save_psw
 2979+ 2			        endif
 2980+ 2  0AA0	B4 62 1F	        cjne    a,#res,??0272
 2981+ 2			        ifnb    <>
 2982+ 2			        tst_psw <>,??0272
 2983+ 2			        endif
 2984+ 1  0AA3	79 31		        mov     r1,#031h
 2985+ 1			        top_ma  xrl,@r1,??0272,<>
 2986+ 2  0AA5	77 51		        mov     @r1,#arg0
 2987+ 2  0AA7	74 33		        mov     a,#arg1
 2988+ 2			        ifnb    <>
 2989+ 2			        set_cy
 2990+ 2			        endif
 2991+ 2  0AA9	67		        xrl      a,@r1
 2992+ 2			        ifnb    <>
 2993+ 2			        save_psw
 2994+ 2			        endif
 2995+ 2  0AAA	B4 62 15	        cjne    a,#res,??0272
 2996+ 2			        ifnb    <>
 2997+ 2			        tst_psw <>,??0272
 2998+ 2			        endif
 2999+ 1
 3000+ 1			        top_ma  xrl,r0,??0272,<>
 3001+ 2  0AAD	78 51		        mov     r0,#arg0
 3002+ 2  0AAF	74 33		        mov     a,#arg1
 3003+ 2			        ifnb    <>
 3004+ 2			        set_cy
 3005+ 2			        endif
 3006+ 2  0AB1	68		        xrl      a,r0
 3007+ 2			        ifnb    <>
 3008+ 2			        save_psw
 3009+ 2			        endif
 3010+ 2  0AB2	B4 62 0D	        cjne    a,#res,??0272
 3011+ 2			        ifnb    <>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 55



 Line  I  Addr  Code            Source

 3012+ 2			        tst_psw <>,??0272
 3013+ 2			        endif
 3014+ 1			        top_ma  xrl,r1,??0272,<>
 3015+ 2  0AB5	79 51		        mov     r1,#arg0
 3016+ 2  0AB7	74 33		        mov     a,#arg1
 3017+ 2			        ifnb    <>
 3018+ 2			        set_cy
 3019+ 2			        endif
 3020+ 2  0AB9	69		        xrl      a,r1
 3021+ 2			        ifnb    <>
 3022+ 2			        save_psw
 3023+ 2			        endif
 3024+ 2  0ABA	B4 62 05	        cjne    a,#res,??0272
 3025+ 2			        ifnb    <>
 3026+ 2			        tst_psw <>,??0272
 3027+ 2			        endif
 3028+ 1
 3029+ 1			        eot     'a',??0272
 3030+ 2			        putc    #'a'
 3031+ 3  0ABD			??0278:
 3032+ 3			        ;jnb     SCON.1,putc_loop
 3033+ 3			        ;clr     SCON.1
 3034+ 3  0ABD	75 99 61	        mov     SBUF,#'a'
 3035+ 2  0AC0	80 06		        sjmp    ??0277
 3036+ 2  0AC2			??0272:  putc    #'?'
 3037+ 3  0AC2			??0279:
 3038+ 3			        ;jnb     SCON.1,putc_loop
 3039+ 3			        ;clr     SCON.1
 3040+ 3  0AC2	75 99 3F	        mov     SBUF,#'?'
 3041+ 2  0AC5	75 6E 01	        mov     fail,#001h
 3042+ 2  0AC8			??0277:
 3043+ 1
 3044+ 1			        top_ma  xrl,r2,??0273,<>
 3045+ 2  0AC8	7A 51		        mov     r2,#arg0
 3046+ 2  0ACA	74 33		        mov     a,#arg1
 3047+ 2			        ifnb    <>
 3048+ 2			        set_cy
 3049+ 2			        endif
 3050+ 2  0ACC	6A		        xrl      a,r2
 3051+ 2			        ifnb    <>
 3052+ 2			        save_psw
 3053+ 2			        endif
 3054+ 2  0ACD	B4 62 0D	        cjne    a,#res,??0273
 3055+ 2			        ifnb    <>
 3056+ 2			        tst_psw <>,??0273
 3057+ 2			        endif
 3058+ 1			        top_ma  xrl,r3,??0273,<>
 3059+ 2  0AD0	7B 51		        mov     r3,#arg0
 3060+ 2  0AD2	74 33		        mov     a,#arg1
 3061+ 2			        ifnb    <>
 3062+ 2			        set_cy
 3063+ 2			        endif
 3064+ 2  0AD4	6B		        xrl      a,r3
 3065+ 2			        ifnb    <>
 3066+ 2			        save_psw
 3067+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 56



 Line  I  Addr  Code            Source

 3068+ 2  0AD5	B4 62 05	        cjne    a,#res,??0273
 3069+ 2			        ifnb    <>
 3070+ 2			        tst_psw <>,??0273
 3071+ 2			        endif
 3072+ 1
 3073+ 1			        eot     'b',??0273
 3074+ 2			        putc    #'b'
 3075+ 3  0AD8			??0281:
 3076+ 3			        ;jnb     SCON.1,putc_loop
 3077+ 3			        ;clr     SCON.1
 3078+ 3  0AD8	75 99 62	        mov     SBUF,#'b'
 3079+ 2  0ADB	80 06		        sjmp    ??0280
 3080+ 2  0ADD			??0273:  putc    #'?'
 3081+ 3  0ADD			??0282:
 3082+ 3			        ;jnb     SCON.1,putc_loop
 3083+ 3			        ;clr     SCON.1
 3084+ 3  0ADD	75 99 3F	        mov     SBUF,#'?'
 3085+ 2  0AE0	75 6E 01	        mov     fail,#001h
 3086+ 2  0AE3			??0280:
 3087+ 1
 3088+ 1			        top_ma  xrl,r4,??0274,<>
 3089+ 2  0AE3	7C 51		        mov     r4,#arg0
 3090+ 2  0AE5	74 33		        mov     a,#arg1
 3091+ 2			        ifnb    <>
 3092+ 2			        set_cy
 3093+ 2			        endif
 3094+ 2  0AE7	6C		        xrl      a,r4
 3095+ 2			        ifnb    <>
 3096+ 2			        save_psw
 3097+ 2			        endif
 3098+ 2  0AE8	B4 62 0D	        cjne    a,#res,??0274
 3099+ 2			        ifnb    <>
 3100+ 2			        tst_psw <>,??0274
 3101+ 2			        endif
 3102+ 1			        top_ma  xrl,r5,??0274,<>
 3103+ 2  0AEB	7D 51		        mov     r5,#arg0
 3104+ 2  0AED	74 33		        mov     a,#arg1
 3105+ 2			        ifnb    <>
 3106+ 2			        set_cy
 3107+ 2			        endif
 3108+ 2  0AEF	6D		        xrl      a,r5
 3109+ 2			        ifnb    <>
 3110+ 2			        save_psw
 3111+ 2			        endif
 3112+ 2  0AF0	B4 62 05	        cjne    a,#res,??0274
 3113+ 2			        ifnb    <>
 3114+ 2			        tst_psw <>,??0274
 3115+ 2			        endif
 3116+ 1
 3117+ 1			        eot     'c',??0274
 3118+ 2			        putc    #'c'
 3119+ 3  0AF3			??0284:
 3120+ 3			        ;jnb     SCON.1,putc_loop
 3121+ 3			        ;clr     SCON.1
 3122+ 3  0AF3	75 99 63	        mov     SBUF,#'c'
 3123+ 2  0AF6	80 06		        sjmp    ??0283

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 57



 Line  I  Addr  Code            Source

 3124+ 2  0AF8			??0274:  putc    #'?'
 3125+ 3  0AF8			??0285:
 3126+ 3			        ;jnb     SCON.1,putc_loop
 3127+ 3			        ;clr     SCON.1
 3128+ 3  0AF8	75 99 3F	        mov     SBUF,#'?'
 3129+ 2  0AFB	75 6E 01	        mov     fail,#001h
 3130+ 2  0AFE			??0283:
 3131+ 1
 3132+ 1			        top_ma  xrl,r6,??0271,<>
 3133+ 2  0AFE	7E 51		        mov     r6,#arg0
 3134+ 2  0B00	74 33		        mov     a,#arg1
 3135+ 2			        ifnb    <>
 3136+ 2			        set_cy
 3137+ 2			        endif
 3138+ 2  0B02	6E		        xrl      a,r6
 3139+ 2			        ifnb    <>
 3140+ 2			        save_psw
 3141+ 2			        endif
 3142+ 2  0B03	B4 62 0D	        cjne    a,#res,??0271
 3143+ 2			        ifnb    <>
 3144+ 2			        tst_psw <>,??0271
 3145+ 2			        endif
 3146+ 1			        top_ma  xrl,r7,??0271,<>
 3147+ 2  0B06	7F 51		        mov     r7,#arg0
 3148+ 2  0B08	74 33		        mov     a,#arg1
 3149+ 2			        ifnb    <>
 3150+ 2			        set_cy
 3151+ 2			        endif
 3152+ 2  0B0A	6F		        xrl      a,r7
 3153+ 2			        ifnb    <>
 3154+ 2			        save_psw
 3155+ 2			        endif
 3156+ 2  0B0B	B4 62 05	        cjne    a,#res,??0271
 3157+ 2			        ifnb    <>
 3158+ 2			        tst_psw <>,??0271
 3159+ 2			        endif
 3160+ 1
 3161+ 1			        eot     'd',??0271
 3162+ 2			        putc    #'d'
 3163+ 3  0B0E			??0287:
 3164+ 3			        ;jnb     SCON.1,putc_loop
 3165+ 3			        ;clr     SCON.1
 3166+ 3  0B0E	75 99 64	        mov     SBUF,#'d'
 3167+ 2  0B11	80 06		        sjmp    ??0286
 3168+ 2  0B13			??0271:  putc    #'?'
 3169+ 3  0B13			??0288:
 3170+ 3			        ;jnb     SCON.1,putc_loop
 3171+ 3			        ;clr     SCON.1
 3172+ 3  0B13	75 99 3F	        mov     SBUF,#'?'
 3173+ 2  0B16	75 6E 01	        mov     fail,#001h
 3174+ 2  0B19			??0286:
 3175+ 1
 3176+ 1			        ifb     <>
 3177+ 1
 3178+ 1			        top_mb  xrl,a,??0275,<>
 3179+ 2  0B19	74 51		        mov     a,#arg0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 58



 Line  I  Addr  Code            Source

 3180+ 2			        ifnb    <>
 3181+ 2			        set_cy
 3182+ 2			        endif
 3183+ 2  0B1B	64 33		        xrl      a,#arg1
 3184+ 2			        ifnb    <>
 3185+ 2			        save_psw
 3186+ 2			        endif
 3187+ 2  0B1D	F5 E0		        mov     ACC,a
 3188+ 2  0B1F	B4 62 11	        cjne    a,#res,??0275
 3189+ 2			        ifnb    <>
 3190+ 2			        tst_psw <>,??0275
 3191+ 2			        endif
 3192+ 1			        top_mb  xrl,dir0,??0275,<>
 3193+ 2  0B22	75 60 51	        mov     dir0,#arg0
 3194+ 2			        ifnb    <>
 3195+ 2			        set_cy
 3196+ 2			        endif
 3197+ 2  0B25	63 60 33	        xrl      dir0,#arg1
 3198+ 2			        ifnb    <>
 3199+ 2			        save_psw
 3200+ 2			        endif
 3201+ 2  0B28	85 60 E0	        mov     ACC,dir0
 3202+ 2  0B2B	B4 62 05	        cjne    a,#res,??0275
 3203+ 2			        ifnb    <>
 3204+ 2			        tst_psw <>,??0275
 3205+ 2			        endif
 3206+ 1
 3207+ 1			        eot     'e',??0275
 3208+ 2			        putc    #'e'
 3209+ 3  0B2E			??0290:
 3210+ 3			        ;jnb     SCON.1,putc_loop
 3211+ 3			        ;clr     SCON.1
 3212+ 3  0B2E	75 99 65	        mov     SBUF,#'e'
 3213+ 2  0B31	80 06		        sjmp    ??0289
 3214+ 2  0B33			??0275:  putc    #'?'
 3215+ 3  0B33			??0291:
 3216+ 3			        ;jnb     SCON.1,putc_loop
 3217+ 3			        ;clr     SCON.1
 3218+ 3  0B33	75 99 3F	        mov     SBUF,#'?'
 3219+ 2  0B36	75 6E 01	        mov     fail,#001h
 3220+ 2  0B39			??0289:
 3221+ 1
 3222+ 1			        top_mc  xrl,??0276,<>
 3223+ 2  0B39	75 60 51	        mov     dir0,#arg0
 3224+ 2  0B3C	74 33		        mov     a,#arg1
 3225+ 2			        ifnb    <>
 3226+ 2			        set_cy
 3227+ 2			        endif
 3228+ 2  0B3E	62 60		        xrl      dir0,a
 3229+ 2			        ifnb    <>
 3230+ 2			        save_psw
 3231+ 2			        endif
 3232+ 2  0B40	E5 60		        mov     a,dir0
 3233+ 2  0B42	B4 62 05	        cjne    a,#res,??0276
 3234+ 2			        ifnb    <>
 3235+ 2			        tst_psw <>,??0276

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 59



 Line  I  Addr  Code            Source

 3236+ 2			        endif
 3237+ 1
 3238+ 1			        eot     'f',??0276
 3239+ 2			        putc    #'f'
 3240+ 3  0B45			??0293:
 3241+ 3			        ;jnb     SCON.1,putc_loop
 3242+ 3			        ;clr     SCON.1
 3243+ 3  0B45	75 99 66	        mov     SBUF,#'f'
 3244+ 2  0B48	80 06		        sjmp    ??0292
 3245+ 2  0B4A			??0276:  putc    #'?'
 3246+ 3  0B4A			??0294:
 3247+ 3			        ;jnb     SCON.1,putc_loop
 3248+ 3			        ;clr     SCON.1
 3249+ 3  0B4A	75 99 3F	        mov     SBUF,#'?'
 3250+ 2  0B4D	75 6E 01	        mov     fail,#001h
 3251+ 2  0B50			??0292:
 3252+ 1			        endif
 3253:
 3254:				        put_crlf                    ; end of test series
 3255+ 1			        putc    #13
 3256+ 2  0B50			??0295:
 3257+ 2			        ;jnb     SCON.1,putc_loop
 3258+ 2			        ;clr     SCON.1
 3259+ 2  0B50	75 99 0D	        mov     SBUF,#13
 3260+ 1			        putc    #10
 3261+ 2  0B53			??0296:
 3262+ 2			        ;jnb     SCON.1,putc_loop
 3263+ 2			        ;clr     SCON.1
 3264+ 2  0B53	75 99 0A	        mov     SBUF,#10
 3265:
 3266:				        ;-- Test series K ------------------------------------------------------
 3267:				        ; DJNZ
 3268:				        ; a.- <DJNZ dir,rel>, <DJNZ Rn,rel> tested only with small negative rels
 3269:
 3270:				        putc    #'K'                ; start of test series
 3271+ 1  0B56			??0297:
 3272+ 1			        ;jnb     SCON.1,putc_loop
 3273+ 1			        ;clr     SCON.1
 3274+ 1  0B56	75 99 4B	        mov     SBUF,#'K'
 3275:
 3276:				        ;tk_ma: test DJNZ with parametrizable addressing mode
 3277:				tk_ma   macro   dst,error_loc
 3278:				        local   tk_ma0
 3279:				nloops  set     3
 3280:				        mov     dst,#nloops         ; We'll perform a fixed no. of iterations
 3281:				        mov     a,#(nloops+1)       ; A will or our control counter
 3282:				tk_ma0: dec     a
 3283:				        jz      error_loc           ; Break loop after nloops iterations
 3284:				        djnz    dst,tk_ma0          ; Test DJNZ instruction
 3285:				        cjne    a,#001,error_loc    ; Verify number of iterations is ok
 3286:				        endm
 3287:
 3288:				        tk_ma   dir0,tk_a0          ; <DJNZ dir,rel>
 3289+ 1	N      0003	nloops  set     3
 3290+ 1  0B59	75 60 03	        mov     dir0,#nloops         ; We'll perform a fixed no. of iterations
 3291+ 1  0B5C	74 04		        mov     a,#(nloops+1)       ; A will or our control counter

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 60



 Line  I  Addr  Code            Source

 3292+ 1  0B5E	14		??0298: dec     a
 3293+ 1  0B5F	60 0B		        jz      tk_a0           ; Break loop after nloops iterations
 3294+ 1  0B61	D5 60 FA	        djnz    dir0,??0298          ; Test DJNZ instruction
 3295+ 1  0B64	B4 01 05	        cjne    a,#001,tk_a0    ; Verify number of iterations is ok
 3296:
 3297:				        eot     'a',tk_a0
 3298+ 1			        putc    #'a'
 3299+ 2  0B67			??0300:
 3300+ 2			        ;jnb     SCON.1,putc_loop
 3301+ 2			        ;clr     SCON.1
 3302+ 2  0B67	75 99 61	        mov     SBUF,#'a'
 3303+ 1  0B6A	80 06		        sjmp    ??0299
 3304+ 1  0B6C			tk_a0:  putc    #'?'
 3305+ 2  0B6C			??0301:
 3306+ 2			        ;jnb     SCON.1,putc_loop
 3307+ 2			        ;clr     SCON.1
 3308+ 2  0B6C	75 99 3F	        mov     SBUF,#'?'
 3309+ 1  0B6F	75 6E 01	        mov     fail,#001h
 3310+ 1  0B72			??0299:
 3311:
 3312:				        tk_ma   r0,tk_b0            ; <DJNZ Rn,rel>
 3313+ 1	N      0003	nloops  set     3
 3314+ 1  0B72	78 03		        mov     r0,#nloops         ; We'll perform a fixed no. of iterations
 3315+ 1  0B74	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3316+ 1  0B76	14		??0302: dec     a
 3317+ 1  0B77	60 5E		        jz      tk_b0           ; Break loop after nloops iterations
 3318+ 1  0B79	D8 FB		        djnz    r0,??0302          ; Test DJNZ instruction
 3319+ 1  0B7B	B4 01 59	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3320:				        tk_ma   r1,tk_b0
 3321+ 1	N      0003	nloops  set     3
 3322+ 1  0B7E	79 03		        mov     r1,#nloops         ; We'll perform a fixed no. of iterations
 3323+ 1  0B80	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3324+ 1  0B82	14		??0303: dec     a
 3325+ 1  0B83	60 52		        jz      tk_b0           ; Break loop after nloops iterations
 3326+ 1  0B85	D9 FB		        djnz    r1,??0303          ; Test DJNZ instruction
 3327+ 1  0B87	B4 01 4D	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3328:				        tk_ma   r2,tk_b0
 3329+ 1	N      0003	nloops  set     3
 3330+ 1  0B8A	7A 03		        mov     r2,#nloops         ; We'll perform a fixed no. of iterations
 3331+ 1  0B8C	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3332+ 1  0B8E	14		??0304: dec     a
 3333+ 1  0B8F	60 46		        jz      tk_b0           ; Break loop after nloops iterations
 3334+ 1  0B91	DA FB		        djnz    r2,??0304          ; Test DJNZ instruction
 3335+ 1  0B93	B4 01 41	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3336:				        tk_ma   r3,tk_b0
 3337+ 1	N      0003	nloops  set     3
 3338+ 1  0B96	7B 03		        mov     r3,#nloops         ; We'll perform a fixed no. of iterations
 3339+ 1  0B98	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3340+ 1  0B9A	14		??0305: dec     a
 3341+ 1  0B9B	60 3A		        jz      tk_b0           ; Break loop after nloops iterations
 3342+ 1  0B9D	DB FB		        djnz    r3,??0305          ; Test DJNZ instruction
 3343+ 1  0B9F	B4 01 35	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3344:				        tk_ma   r4,tk_b0
 3345+ 1	N      0003	nloops  set     3
 3346+ 1  0BA2	7C 03		        mov     r4,#nloops         ; We'll perform a fixed no. of iterations
 3347+ 1  0BA4	74 04		        mov     a,#(nloops+1)       ; A will or our control counter

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 61



 Line  I  Addr  Code            Source

 3348+ 1  0BA6	14		??0306: dec     a
 3349+ 1  0BA7	60 2E		        jz      tk_b0           ; Break loop after nloops iterations
 3350+ 1  0BA9	DC FB		        djnz    r4,??0306          ; Test DJNZ instruction
 3351+ 1  0BAB	B4 01 29	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3352:				        tk_ma   r5,tk_b0
 3353+ 1	N      0003	nloops  set     3
 3354+ 1  0BAE	7D 03		        mov     r5,#nloops         ; We'll perform a fixed no. of iterations
 3355+ 1  0BB0	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3356+ 1  0BB2	14		??0307: dec     a
 3357+ 1  0BB3	60 22		        jz      tk_b0           ; Break loop after nloops iterations
 3358+ 1  0BB5	DD FB		        djnz    r5,??0307          ; Test DJNZ instruction
 3359+ 1  0BB7	B4 01 1D	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3360:				        tk_ma   r6,tk_b0
 3361+ 1	N      0003	nloops  set     3
 3362+ 1  0BBA	7E 03		        mov     r6,#nloops         ; We'll perform a fixed no. of iterations
 3363+ 1  0BBC	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3364+ 1  0BBE	14		??0308: dec     a
 3365+ 1  0BBF	60 16		        jz      tk_b0           ; Break loop after nloops iterations
 3366+ 1  0BC1	DE FB		        djnz    r6,??0308          ; Test DJNZ instruction
 3367+ 1  0BC3	B4 01 11	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3368:				        tk_ma   r7,tk_b0
 3369+ 1	N      0003	nloops  set     3
 3370+ 1  0BC6	7F 03		        mov     r7,#nloops         ; We'll perform a fixed no. of iterations
 3371+ 1  0BC8	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3372+ 1  0BCA	14		??0309: dec     a
 3373+ 1  0BCB	60 0A		        jz      tk_b0           ; Break loop after nloops iterations
 3374+ 1  0BCD	DF FB		        djnz    r7,??0309          ; Test DJNZ instruction
 3375+ 1  0BCF	B4 01 05	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3376:
 3377:				        eot     'b',tk_b0
 3378+ 1			        putc    #'b'
 3379+ 2  0BD2			??0311:
 3380+ 2			        ;jnb     SCON.1,putc_loop
 3381+ 2			        ;clr     SCON.1
 3382+ 2  0BD2	75 99 62	        mov     SBUF,#'b'
 3383+ 1  0BD5	80 06		        sjmp    ??0310
 3384+ 1  0BD7			tk_b0:  putc    #'?'
 3385+ 2  0BD7			??0312:
 3386+ 2			        ;jnb     SCON.1,putc_loop
 3387+ 2			        ;clr     SCON.1
 3388+ 2  0BD7	75 99 3F	        mov     SBUF,#'?'
 3389+ 1  0BDA	75 6E 01	        mov     fail,#001h
 3390+ 1  0BDD			??0310:
 3391:
 3392:				        put_crlf                    ; end of test series
 3393+ 1			        putc    #13
 3394+ 2  0BDD			??0313:
 3395+ 2			        ;jnb     SCON.1,putc_loop
 3396+ 2			        ;clr     SCON.1
 3397+ 2  0BDD	75 99 0D	        mov     SBUF,#13
 3398+ 1			        putc    #10
 3399+ 2  0BE0			??0314:
 3400+ 2			        ;jnb     SCON.1,putc_loop
 3401+ 2			        ;clr     SCON.1
 3402+ 2  0BE0	75 99 0A	        mov     SBUF,#10
 3403:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 62



 Line  I  Addr  Code            Source

 3404:
 3405:				        ;-- Test series L ------------------------------------------------------
 3406:				        ; ADD
 3407:				        ; (See comments for 'ALU opcode block test')
 3408:
 3409:
 3410:				        putc    #'L'                ; start of test series
 3411+ 1  0BE3			??0315:
 3412+ 1			        ;jnb     SCON.1,putc_loop
 3413+ 1			        ;clr     SCON.1
 3414+ 1  0BE3	75 99 4C	        mov     SBUF,#'L'
 3415:
 3416:				        putc    #'0'
 3417+ 1  0BE6			??0316:
 3418+ 1			        ;jnb     SCON.1,putc_loop
 3419+ 1			        ;clr     SCON.1
 3420+ 1  0BE6	75 99 30	        mov     SBUF,#'0'
 3421:				        tst_alu add,051h,033h,084h,004h     ; /CY /AC  OV
 3422+ 1
 3423+ 1	N      0051	        arg0    set 051h
 3424+ 1	N      0033	        arg1    set 033h
 3425+ 1	N      0084	        res     set 084h
 3426+ 1
 3427+ 1			        top_ma  add,dir0,??0318,<004h>
 3428+ 2  0BE9	75 60 51	        mov     dir0,#arg0
 3429+ 2  0BEC	74 33		        mov     a,#arg1
 3430+ 2			        ifnb    <004h>
 3431+ 2			        set_cy  004h
 3432+ 3	N      0000	??0323  set     (004h and 1)
 3433+ 3	N      0000	        if      ??0323 eq 1
 3434+ 3			        setb    c
 3435+ 3			        else
 3436+ 3  0BEE	C3		        clr     c
 3437+ 3			        endif
 3438+ 2			        endif
 3439+ 2  0BEF	25 60		        add      a,dir0
 3440+ 2			        ifnb    <004h>
 3441+ 2			        save_psw
 3442+ 3  0BF1	85 D0 70	        mov     saved_psw,PSW
 3443+ 2			        endif
 3444+ 2  0BF4	B4 84 6B	        cjne    a,#res,??0318
 3445+ 2			        ifnb    <004h>
 3446+ 2			        tst_psw <004h>,??0318
 3447+ 3  0BF7	E5 70		        mov     a,saved_psw
 3448+ 3  0BF9	54 C4		        anl     a,#0c4h
 3449+ 3  0BFB	64 04		        xrl     a,#004h
 3450+ 3  0BFD	54 FE		        anl     a,#0feh
 3451+ 3  0BFF	70 61		        jnz     ??0318
 3452+ 2			        endif
 3453+ 1  0C01	78 60		        mov     r0,#dir0
 3454+ 1			        top_ma  add,@r0,??0318,<004h>
 3455+ 2  0C03	76 51		        mov     @r0,#arg0
 3456+ 2  0C05	74 33		        mov     a,#arg1
 3457+ 2			        ifnb    <004h>
 3458+ 2			        set_cy  004h
 3459+ 3	N      0000	??0324  set     (004h and 1)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 63



 Line  I  Addr  Code            Source

 3460+ 3	N      0000	        if      ??0324 eq 1
 3461+ 3			        setb    c
 3462+ 3			        else
 3463+ 3  0C07	C3		        clr     c
 3464+ 3			        endif
 3465+ 2			        endif
 3466+ 2  0C08	26		        add      a,@r0
 3467+ 2			        ifnb    <004h>
 3468+ 2			        save_psw
 3469+ 3  0C09	85 D0 70	        mov     saved_psw,PSW
 3470+ 2			        endif
 3471+ 2  0C0C	B4 84 53	        cjne    a,#res,??0318
 3472+ 2			        ifnb    <004h>
 3473+ 2			        tst_psw <004h>,??0318
 3474+ 3  0C0F	E5 70		        mov     a,saved_psw
 3475+ 3  0C11	54 C4		        anl     a,#0c4h
 3476+ 3  0C13	64 04		        xrl     a,#004h
 3477+ 3  0C15	54 FE		        anl     a,#0feh
 3478+ 3  0C17	70 49		        jnz     ??0318
 3479+ 2			        endif
 3480+ 1  0C19	79 31		        mov     r1,#031h
 3481+ 1			        top_ma  add,@r1,??0318,<004h>
 3482+ 2  0C1B	77 51		        mov     @r1,#arg0
 3483+ 2  0C1D	74 33		        mov     a,#arg1
 3484+ 2			        ifnb    <004h>
 3485+ 2			        set_cy  004h
 3486+ 3	N      0000	??0325  set     (004h and 1)
 3487+ 3	N      0000	        if      ??0325 eq 1
 3488+ 3			        setb    c
 3489+ 3			        else
 3490+ 3  0C1F	C3		        clr     c
 3491+ 3			        endif
 3492+ 2			        endif
 3493+ 2  0C20	27		        add      a,@r1
 3494+ 2			        ifnb    <004h>
 3495+ 2			        save_psw
 3496+ 3  0C21	85 D0 70	        mov     saved_psw,PSW
 3497+ 2			        endif
 3498+ 2  0C24	B4 84 3B	        cjne    a,#res,??0318
 3499+ 2			        ifnb    <004h>
 3500+ 2			        tst_psw <004h>,??0318
 3501+ 3  0C27	E5 70		        mov     a,saved_psw
 3502+ 3  0C29	54 C4		        anl     a,#0c4h
 3503+ 3  0C2B	64 04		        xrl     a,#004h
 3504+ 3  0C2D	54 FE		        anl     a,#0feh
 3505+ 3  0C2F	70 31		        jnz     ??0318
 3506+ 2			        endif
 3507+ 1
 3508+ 1			        top_ma  add,r0,??0318,<004h>
 3509+ 2  0C31	78 51		        mov     r0,#arg0
 3510+ 2  0C33	74 33		        mov     a,#arg1
 3511+ 2			        ifnb    <004h>
 3512+ 2			        set_cy  004h
 3513+ 3	N      0000	??0326  set     (004h and 1)
 3514+ 3	N      0000	        if      ??0326 eq 1
 3515+ 3			        setb    c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 64



 Line  I  Addr  Code            Source

 3516+ 3			        else
 3517+ 3  0C35	C3		        clr     c
 3518+ 3			        endif
 3519+ 2			        endif
 3520+ 2  0C36	28		        add      a,r0
 3521+ 2			        ifnb    <004h>
 3522+ 2			        save_psw
 3523+ 3  0C37	85 D0 70	        mov     saved_psw,PSW
 3524+ 2			        endif
 3525+ 2  0C3A	B4 84 25	        cjne    a,#res,??0318
 3526+ 2			        ifnb    <004h>
 3527+ 2			        tst_psw <004h>,??0318
 3528+ 3  0C3D	E5 70		        mov     a,saved_psw
 3529+ 3  0C3F	54 C4		        anl     a,#0c4h
 3530+ 3  0C41	64 04		        xrl     a,#004h
 3531+ 3  0C43	54 FE		        anl     a,#0feh
 3532+ 3  0C45	70 1B		        jnz     ??0318
 3533+ 2			        endif
 3534+ 1			        top_ma  add,r1,??0318,<004h>
 3535+ 2  0C47	79 51		        mov     r1,#arg0
 3536+ 2  0C49	74 33		        mov     a,#arg1
 3537+ 2			        ifnb    <004h>
 3538+ 2			        set_cy  004h
 3539+ 3	N      0000	??0327  set     (004h and 1)
 3540+ 3	N      0000	        if      ??0327 eq 1
 3541+ 3			        setb    c
 3542+ 3			        else
 3543+ 3  0C4B	C3		        clr     c
 3544+ 3			        endif
 3545+ 2			        endif
 3546+ 2  0C4C	29		        add      a,r1
 3547+ 2			        ifnb    <004h>
 3548+ 2			        save_psw
 3549+ 3  0C4D	85 D0 70	        mov     saved_psw,PSW
 3550+ 2			        endif
 3551+ 2  0C50	B4 84 0F	        cjne    a,#res,??0318
 3552+ 2			        ifnb    <004h>
 3553+ 2			        tst_psw <004h>,??0318
 3554+ 3  0C53	E5 70		        mov     a,saved_psw
 3555+ 3  0C55	54 C4		        anl     a,#0c4h
 3556+ 3  0C57	64 04		        xrl     a,#004h
 3557+ 3  0C59	54 FE		        anl     a,#0feh
 3558+ 3  0C5B	70 05		        jnz     ??0318
 3559+ 2			        endif
 3560+ 1
 3561+ 1			        eot     'a',??0318
 3562+ 2			        putc    #'a'
 3563+ 3  0C5D			??0329:
 3564+ 3			        ;jnb     SCON.1,putc_loop
 3565+ 3			        ;clr     SCON.1
 3566+ 3  0C5D	75 99 61	        mov     SBUF,#'a'
 3567+ 2  0C60	80 06		        sjmp    ??0328
 3568+ 2  0C62			??0318:  putc    #'?'
 3569+ 3  0C62			??0330:
 3570+ 3			        ;jnb     SCON.1,putc_loop
 3571+ 3			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 65



 Line  I  Addr  Code            Source

 3572+ 3  0C62	75 99 3F	        mov     SBUF,#'?'
 3573+ 2  0C65	75 6E 01	        mov     fail,#001h
 3574+ 2  0C68			??0328:
 3575+ 1
 3576+ 1			        top_ma  add,r2,??0319,<004h>
 3577+ 2  0C68	7A 51		        mov     r2,#arg0
 3578+ 2  0C6A	74 33		        mov     a,#arg1
 3579+ 2			        ifnb    <004h>
 3580+ 2			        set_cy  004h
 3581+ 3	N      0000	??0331  set     (004h and 1)
 3582+ 3	N      0000	        if      ??0331 eq 1
 3583+ 3			        setb    c
 3584+ 3			        else
 3585+ 3  0C6C	C3		        clr     c
 3586+ 3			        endif
 3587+ 2			        endif
 3588+ 2  0C6D	2A		        add      a,r2
 3589+ 2			        ifnb    <004h>
 3590+ 2			        save_psw
 3591+ 3  0C6E	85 D0 70	        mov     saved_psw,PSW
 3592+ 2			        endif
 3593+ 2  0C71	B4 84 25	        cjne    a,#res,??0319
 3594+ 2			        ifnb    <004h>
 3595+ 2			        tst_psw <004h>,??0319
 3596+ 3  0C74	E5 70		        mov     a,saved_psw
 3597+ 3  0C76	54 C4		        anl     a,#0c4h
 3598+ 3  0C78	64 04		        xrl     a,#004h
 3599+ 3  0C7A	54 FE		        anl     a,#0feh
 3600+ 3  0C7C	70 1B		        jnz     ??0319
 3601+ 2			        endif
 3602+ 1			        top_ma  add,r3,??0319,<004h>
 3603+ 2  0C7E	7B 51		        mov     r3,#arg0
 3604+ 2  0C80	74 33		        mov     a,#arg1
 3605+ 2			        ifnb    <004h>
 3606+ 2			        set_cy  004h
 3607+ 3	N      0000	??0332  set     (004h and 1)
 3608+ 3	N      0000	        if      ??0332 eq 1
 3609+ 3			        setb    c
 3610+ 3			        else
 3611+ 3  0C82	C3		        clr     c
 3612+ 3			        endif
 3613+ 2			        endif
 3614+ 2  0C83	2B		        add      a,r3
 3615+ 2			        ifnb    <004h>
 3616+ 2			        save_psw
 3617+ 3  0C84	85 D0 70	        mov     saved_psw,PSW
 3618+ 2			        endif
 3619+ 2  0C87	B4 84 0F	        cjne    a,#res,??0319
 3620+ 2			        ifnb    <004h>
 3621+ 2			        tst_psw <004h>,??0319
 3622+ 3  0C8A	E5 70		        mov     a,saved_psw
 3623+ 3  0C8C	54 C4		        anl     a,#0c4h
 3624+ 3  0C8E	64 04		        xrl     a,#004h
 3625+ 3  0C90	54 FE		        anl     a,#0feh
 3626+ 3  0C92	70 05		        jnz     ??0319
 3627+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 66



 Line  I  Addr  Code            Source

 3628+ 1
 3629+ 1			        eot     'b',??0319
 3630+ 2			        putc    #'b'
 3631+ 3  0C94			??0334:
 3632+ 3			        ;jnb     SCON.1,putc_loop
 3633+ 3			        ;clr     SCON.1
 3634+ 3  0C94	75 99 62	        mov     SBUF,#'b'
 3635+ 2  0C97	80 06		        sjmp    ??0333
 3636+ 2  0C99			??0319:  putc    #'?'
 3637+ 3  0C99			??0335:
 3638+ 3			        ;jnb     SCON.1,putc_loop
 3639+ 3			        ;clr     SCON.1
 3640+ 3  0C99	75 99 3F	        mov     SBUF,#'?'
 3641+ 2  0C9C	75 6E 01	        mov     fail,#001h
 3642+ 2  0C9F			??0333:
 3643+ 1
 3644+ 1			        top_ma  add,r4,??0320,<004h>
 3645+ 2  0C9F	7C 51		        mov     r4,#arg0
 3646+ 2  0CA1	74 33		        mov     a,#arg1
 3647+ 2			        ifnb    <004h>
 3648+ 2			        set_cy  004h
 3649+ 3	N      0000	??0336  set     (004h and 1)
 3650+ 3	N      0000	        if      ??0336 eq 1
 3651+ 3			        setb    c
 3652+ 3			        else
 3653+ 3  0CA3	C3		        clr     c
 3654+ 3			        endif
 3655+ 2			        endif
 3656+ 2  0CA4	2C		        add      a,r4
 3657+ 2			        ifnb    <004h>
 3658+ 2			        save_psw
 3659+ 3  0CA5	85 D0 70	        mov     saved_psw,PSW
 3660+ 2			        endif
 3661+ 2  0CA8	B4 84 25	        cjne    a,#res,??0320
 3662+ 2			        ifnb    <004h>
 3663+ 2			        tst_psw <004h>,??0320
 3664+ 3  0CAB	E5 70		        mov     a,saved_psw
 3665+ 3  0CAD	54 C4		        anl     a,#0c4h
 3666+ 3  0CAF	64 04		        xrl     a,#004h
 3667+ 3  0CB1	54 FE		        anl     a,#0feh
 3668+ 3  0CB3	70 1B		        jnz     ??0320
 3669+ 2			        endif
 3670+ 1			        top_ma  add,r5,??0320,<004h>
 3671+ 2  0CB5	7D 51		        mov     r5,#arg0
 3672+ 2  0CB7	74 33		        mov     a,#arg1
 3673+ 2			        ifnb    <004h>
 3674+ 2			        set_cy  004h
 3675+ 3	N      0000	??0337  set     (004h and 1)
 3676+ 3	N      0000	        if      ??0337 eq 1
 3677+ 3			        setb    c
 3678+ 3			        else
 3679+ 3  0CB9	C3		        clr     c
 3680+ 3			        endif
 3681+ 2			        endif
 3682+ 2  0CBA	2D		        add      a,r5
 3683+ 2			        ifnb    <004h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 67



 Line  I  Addr  Code            Source

 3684+ 2			        save_psw
 3685+ 3  0CBB	85 D0 70	        mov     saved_psw,PSW
 3686+ 2			        endif
 3687+ 2  0CBE	B4 84 0F	        cjne    a,#res,??0320
 3688+ 2			        ifnb    <004h>
 3689+ 2			        tst_psw <004h>,??0320
 3690+ 3  0CC1	E5 70		        mov     a,saved_psw
 3691+ 3  0CC3	54 C4		        anl     a,#0c4h
 3692+ 3  0CC5	64 04		        xrl     a,#004h
 3693+ 3  0CC7	54 FE		        anl     a,#0feh
 3694+ 3  0CC9	70 05		        jnz     ??0320
 3695+ 2			        endif
 3696+ 1
 3697+ 1			        eot     'c',??0320
 3698+ 2			        putc    #'c'
 3699+ 3  0CCB			??0339:
 3700+ 3			        ;jnb     SCON.1,putc_loop
 3701+ 3			        ;clr     SCON.1
 3702+ 3  0CCB	75 99 63	        mov     SBUF,#'c'
 3703+ 2  0CCE	80 06		        sjmp    ??0338
 3704+ 2  0CD0			??0320:  putc    #'?'
 3705+ 3  0CD0			??0340:
 3706+ 3			        ;jnb     SCON.1,putc_loop
 3707+ 3			        ;clr     SCON.1
 3708+ 3  0CD0	75 99 3F	        mov     SBUF,#'?'
 3709+ 2  0CD3	75 6E 01	        mov     fail,#001h
 3710+ 2  0CD6			??0338:
 3711+ 1
 3712+ 1			        top_ma  add,r6,??0317,<004h>
 3713+ 2  0CD6	7E 51		        mov     r6,#arg0
 3714+ 2  0CD8	74 33		        mov     a,#arg1
 3715+ 2			        ifnb    <004h>
 3716+ 2			        set_cy  004h
 3717+ 3	N      0000	??0341  set     (004h and 1)
 3718+ 3	N      0000	        if      ??0341 eq 1
 3719+ 3			        setb    c
 3720+ 3			        else
 3721+ 3  0CDA	C3		        clr     c
 3722+ 3			        endif
 3723+ 2			        endif
 3724+ 2  0CDB	2E		        add      a,r6
 3725+ 2			        ifnb    <004h>
 3726+ 2			        save_psw
 3727+ 3  0CDC	85 D0 70	        mov     saved_psw,PSW
 3728+ 2			        endif
 3729+ 2  0CDF	B4 84 25	        cjne    a,#res,??0317
 3730+ 2			        ifnb    <004h>
 3731+ 2			        tst_psw <004h>,??0317
 3732+ 3  0CE2	E5 70		        mov     a,saved_psw
 3733+ 3  0CE4	54 C4		        anl     a,#0c4h
 3734+ 3  0CE6	64 04		        xrl     a,#004h
 3735+ 3  0CE8	54 FE		        anl     a,#0feh
 3736+ 3  0CEA	70 1B		        jnz     ??0317
 3737+ 2			        endif
 3738+ 1			        top_ma  add,r7,??0317,<004h>
 3739+ 2  0CEC	7F 51		        mov     r7,#arg0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 68



 Line  I  Addr  Code            Source

 3740+ 2  0CEE	74 33		        mov     a,#arg1
 3741+ 2			        ifnb    <004h>
 3742+ 2			        set_cy  004h
 3743+ 3	N      0000	??0342  set     (004h and 1)
 3744+ 3	N      0000	        if      ??0342 eq 1
 3745+ 3			        setb    c
 3746+ 3			        else
 3747+ 3  0CF0	C3		        clr     c
 3748+ 3			        endif
 3749+ 2			        endif
 3750+ 2  0CF1	2F		        add      a,r7
 3751+ 2			        ifnb    <004h>
 3752+ 2			        save_psw
 3753+ 3  0CF2	85 D0 70	        mov     saved_psw,PSW
 3754+ 2			        endif
 3755+ 2  0CF5	B4 84 0F	        cjne    a,#res,??0317
 3756+ 2			        ifnb    <004h>
 3757+ 2			        tst_psw <004h>,??0317
 3758+ 3  0CF8	E5 70		        mov     a,saved_psw
 3759+ 3  0CFA	54 C4		        anl     a,#0c4h
 3760+ 3  0CFC	64 04		        xrl     a,#004h
 3761+ 3  0CFE	54 FE		        anl     a,#0feh
 3762+ 3  0D00	70 05		        jnz     ??0317
 3763+ 2			        endif
 3764+ 1
 3765+ 1			        eot     'd',??0317
 3766+ 2			        putc    #'d'
 3767+ 3  0D02			??0344:
 3768+ 3			        ;jnb     SCON.1,putc_loop
 3769+ 3			        ;clr     SCON.1
 3770+ 3  0D02	75 99 64	        mov     SBUF,#'d'
 3771+ 2  0D05	80 06		        sjmp    ??0343
 3772+ 2  0D07			??0317:  putc    #'?'
 3773+ 3  0D07			??0345:
 3774+ 3			        ;jnb     SCON.1,putc_loop
 3775+ 3			        ;clr     SCON.1
 3776+ 3  0D07	75 99 3F	        mov     SBUF,#'?'
 3777+ 2  0D0A	75 6E 01	        mov     fail,#001h
 3778+ 2  0D0D			??0343:
 3779+ 1
 3780+ 1			        ifb     <004h>
 3781+ 1
 3782+ 1			        top_mb  add,a,??0321,<004h>
 3783+ 1			        top_mb  add,dir0,??0321,<004h>
 3784+ 1
 3785+ 1			        eot     'e',??0321
 3786+ 1
 3787+ 1			        top_mc  add,??0322,<004h>
 3788+ 1
 3789+ 1			        eot     'f',??0322
 3790+ 1			        endif
 3791:				        putc    #'1'
 3792+ 1  0D0D			??0346:
 3793+ 1			        ;jnb     SCON.1,putc_loop
 3794+ 1			        ;clr     SCON.1
 3795+ 1  0D0D	75 99 31	        mov     SBUF,#'1'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 69



 Line  I  Addr  Code            Source

 3796:				        tst_alu add,081h,093h,014h,084h     ;  CY /AC  OV
 3797+ 1
 3798+ 1	N      0081	        arg0    set 081h
 3799+ 1	N      0093	        arg1    set 093h
 3800+ 1	N      0014	        res     set 014h
 3801+ 1
 3802+ 1			        top_ma  add,dir0,??0348,<084h>
 3803+ 2  0D10	75 60 81	        mov     dir0,#arg0
 3804+ 2  0D13	74 93		        mov     a,#arg1
 3805+ 2			        ifnb    <084h>
 3806+ 2			        set_cy  084h
 3807+ 3	N      0000	??0353  set     (084h and 1)
 3808+ 3	N      0000	        if      ??0353 eq 1
 3809+ 3			        setb    c
 3810+ 3			        else
 3811+ 3  0D15	C3		        clr     c
 3812+ 3			        endif
 3813+ 2			        endif
 3814+ 2  0D16	25 60		        add      a,dir0
 3815+ 2			        ifnb    <084h>
 3816+ 2			        save_psw
 3817+ 3  0D18	85 D0 70	        mov     saved_psw,PSW
 3818+ 2			        endif
 3819+ 2  0D1B	B4 14 6B	        cjne    a,#res,??0348
 3820+ 2			        ifnb    <084h>
 3821+ 2			        tst_psw <084h>,??0348
 3822+ 3  0D1E	E5 70		        mov     a,saved_psw
 3823+ 3  0D20	54 C4		        anl     a,#0c4h
 3824+ 3  0D22	64 84		        xrl     a,#084h
 3825+ 3  0D24	54 FE		        anl     a,#0feh
 3826+ 3  0D26	70 61		        jnz     ??0348
 3827+ 2			        endif
 3828+ 1  0D28	78 60		        mov     r0,#dir0
 3829+ 1			        top_ma  add,@r0,??0348,<084h>
 3830+ 2  0D2A	76 81		        mov     @r0,#arg0
 3831+ 2  0D2C	74 93		        mov     a,#arg1
 3832+ 2			        ifnb    <084h>
 3833+ 2			        set_cy  084h
 3834+ 3	N      0000	??0354  set     (084h and 1)
 3835+ 3	N      0000	        if      ??0354 eq 1
 3836+ 3			        setb    c
 3837+ 3			        else
 3838+ 3  0D2E	C3		        clr     c
 3839+ 3			        endif
 3840+ 2			        endif
 3841+ 2  0D2F	26		        add      a,@r0
 3842+ 2			        ifnb    <084h>
 3843+ 2			        save_psw
 3844+ 3  0D30	85 D0 70	        mov     saved_psw,PSW
 3845+ 2			        endif
 3846+ 2  0D33	B4 14 53	        cjne    a,#res,??0348
 3847+ 2			        ifnb    <084h>
 3848+ 2			        tst_psw <084h>,??0348
 3849+ 3  0D36	E5 70		        mov     a,saved_psw
 3850+ 3  0D38	54 C4		        anl     a,#0c4h
 3851+ 3  0D3A	64 84		        xrl     a,#084h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 70



 Line  I  Addr  Code            Source

 3852+ 3  0D3C	54 FE		        anl     a,#0feh
 3853+ 3  0D3E	70 49		        jnz     ??0348
 3854+ 2			        endif
 3855+ 1  0D40	79 31		        mov     r1,#031h
 3856+ 1			        top_ma  add,@r1,??0348,<084h>
 3857+ 2  0D42	77 81		        mov     @r1,#arg0
 3858+ 2  0D44	74 93		        mov     a,#arg1
 3859+ 2			        ifnb    <084h>
 3860+ 2			        set_cy  084h
 3861+ 3	N      0000	??0355  set     (084h and 1)
 3862+ 3	N      0000	        if      ??0355 eq 1
 3863+ 3			        setb    c
 3864+ 3			        else
 3865+ 3  0D46	C3		        clr     c
 3866+ 3			        endif
 3867+ 2			        endif
 3868+ 2  0D47	27		        add      a,@r1
 3869+ 2			        ifnb    <084h>
 3870+ 2			        save_psw
 3871+ 3  0D48	85 D0 70	        mov     saved_psw,PSW
 3872+ 2			        endif
 3873+ 2  0D4B	B4 14 3B	        cjne    a,#res,??0348
 3874+ 2			        ifnb    <084h>
 3875+ 2			        tst_psw <084h>,??0348
 3876+ 3  0D4E	E5 70		        mov     a,saved_psw
 3877+ 3  0D50	54 C4		        anl     a,#0c4h
 3878+ 3  0D52	64 84		        xrl     a,#084h
 3879+ 3  0D54	54 FE		        anl     a,#0feh
 3880+ 3  0D56	70 31		        jnz     ??0348
 3881+ 2			        endif
 3882+ 1
 3883+ 1			        top_ma  add,r0,??0348,<084h>
 3884+ 2  0D58	78 81		        mov     r0,#arg0
 3885+ 2  0D5A	74 93		        mov     a,#arg1
 3886+ 2			        ifnb    <084h>
 3887+ 2			        set_cy  084h
 3888+ 3	N      0000	??0356  set     (084h and 1)
 3889+ 3	N      0000	        if      ??0356 eq 1
 3890+ 3			        setb    c
 3891+ 3			        else
 3892+ 3  0D5C	C3		        clr     c
 3893+ 3			        endif
 3894+ 2			        endif
 3895+ 2  0D5D	28		        add      a,r0
 3896+ 2			        ifnb    <084h>
 3897+ 2			        save_psw
 3898+ 3  0D5E	85 D0 70	        mov     saved_psw,PSW
 3899+ 2			        endif
 3900+ 2  0D61	B4 14 25	        cjne    a,#res,??0348
 3901+ 2			        ifnb    <084h>
 3902+ 2			        tst_psw <084h>,??0348
 3903+ 3  0D64	E5 70		        mov     a,saved_psw
 3904+ 3  0D66	54 C4		        anl     a,#0c4h
 3905+ 3  0D68	64 84		        xrl     a,#084h
 3906+ 3  0D6A	54 FE		        anl     a,#0feh
 3907+ 3  0D6C	70 1B		        jnz     ??0348

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 71



 Line  I  Addr  Code            Source

 3908+ 2			        endif
 3909+ 1			        top_ma  add,r1,??0348,<084h>
 3910+ 2  0D6E	79 81		        mov     r1,#arg0
 3911+ 2  0D70	74 93		        mov     a,#arg1
 3912+ 2			        ifnb    <084h>
 3913+ 2			        set_cy  084h
 3914+ 3	N      0000	??0357  set     (084h and 1)
 3915+ 3	N      0000	        if      ??0357 eq 1
 3916+ 3			        setb    c
 3917+ 3			        else
 3918+ 3  0D72	C3		        clr     c
 3919+ 3			        endif
 3920+ 2			        endif
 3921+ 2  0D73	29		        add      a,r1
 3922+ 2			        ifnb    <084h>
 3923+ 2			        save_psw
 3924+ 3  0D74	85 D0 70	        mov     saved_psw,PSW
 3925+ 2			        endif
 3926+ 2  0D77	B4 14 0F	        cjne    a,#res,??0348
 3927+ 2			        ifnb    <084h>
 3928+ 2			        tst_psw <084h>,??0348
 3929+ 3  0D7A	E5 70		        mov     a,saved_psw
 3930+ 3  0D7C	54 C4		        anl     a,#0c4h
 3931+ 3  0D7E	64 84		        xrl     a,#084h
 3932+ 3  0D80	54 FE		        anl     a,#0feh
 3933+ 3  0D82	70 05		        jnz     ??0348
 3934+ 2			        endif
 3935+ 1
 3936+ 1			        eot     'a',??0348
 3937+ 2			        putc    #'a'
 3938+ 3  0D84			??0359:
 3939+ 3			        ;jnb     SCON.1,putc_loop
 3940+ 3			        ;clr     SCON.1
 3941+ 3  0D84	75 99 61	        mov     SBUF,#'a'
 3942+ 2  0D87	80 06		        sjmp    ??0358
 3943+ 2  0D89			??0348:  putc    #'?'
 3944+ 3  0D89			??0360:
 3945+ 3			        ;jnb     SCON.1,putc_loop
 3946+ 3			        ;clr     SCON.1
 3947+ 3  0D89	75 99 3F	        mov     SBUF,#'?'
 3948+ 2  0D8C	75 6E 01	        mov     fail,#001h
 3949+ 2  0D8F			??0358:
 3950+ 1
 3951+ 1			        top_ma  add,r2,??0349,<084h>
 3952+ 2  0D8F	7A 81		        mov     r2,#arg0
 3953+ 2  0D91	74 93		        mov     a,#arg1
 3954+ 2			        ifnb    <084h>
 3955+ 2			        set_cy  084h
 3956+ 3	N      0000	??0361  set     (084h and 1)
 3957+ 3	N      0000	        if      ??0361 eq 1
 3958+ 3			        setb    c
 3959+ 3			        else
 3960+ 3  0D93	C3		        clr     c
 3961+ 3			        endif
 3962+ 2			        endif
 3963+ 2  0D94	2A		        add      a,r2

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 72



 Line  I  Addr  Code            Source

 3964+ 2			        ifnb    <084h>
 3965+ 2			        save_psw
 3966+ 3  0D95	85 D0 70	        mov     saved_psw,PSW
 3967+ 2			        endif
 3968+ 2  0D98	B4 14 25	        cjne    a,#res,??0349
 3969+ 2			        ifnb    <084h>
 3970+ 2			        tst_psw <084h>,??0349
 3971+ 3  0D9B	E5 70		        mov     a,saved_psw
 3972+ 3  0D9D	54 C4		        anl     a,#0c4h
 3973+ 3  0D9F	64 84		        xrl     a,#084h
 3974+ 3  0DA1	54 FE		        anl     a,#0feh
 3975+ 3  0DA3	70 1B		        jnz     ??0349
 3976+ 2			        endif
 3977+ 1			        top_ma  add,r3,??0349,<084h>
 3978+ 2  0DA5	7B 81		        mov     r3,#arg0
 3979+ 2  0DA7	74 93		        mov     a,#arg1
 3980+ 2			        ifnb    <084h>
 3981+ 2			        set_cy  084h
 3982+ 3	N      0000	??0362  set     (084h and 1)
 3983+ 3	N      0000	        if      ??0362 eq 1
 3984+ 3			        setb    c
 3985+ 3			        else
 3986+ 3  0DA9	C3		        clr     c
 3987+ 3			        endif
 3988+ 2			        endif
 3989+ 2  0DAA	2B		        add      a,r3
 3990+ 2			        ifnb    <084h>
 3991+ 2			        save_psw
 3992+ 3  0DAB	85 D0 70	        mov     saved_psw,PSW
 3993+ 2			        endif
 3994+ 2  0DAE	B4 14 0F	        cjne    a,#res,??0349
 3995+ 2			        ifnb    <084h>
 3996+ 2			        tst_psw <084h>,??0349
 3997+ 3  0DB1	E5 70		        mov     a,saved_psw
 3998+ 3  0DB3	54 C4		        anl     a,#0c4h
 3999+ 3  0DB5	64 84		        xrl     a,#084h
 4000+ 3  0DB7	54 FE		        anl     a,#0feh
 4001+ 3  0DB9	70 05		        jnz     ??0349
 4002+ 2			        endif
 4003+ 1
 4004+ 1			        eot     'b',??0349
 4005+ 2			        putc    #'b'
 4006+ 3  0DBB			??0364:
 4007+ 3			        ;jnb     SCON.1,putc_loop
 4008+ 3			        ;clr     SCON.1
 4009+ 3  0DBB	75 99 62	        mov     SBUF,#'b'
 4010+ 2  0DBE	80 06		        sjmp    ??0363
 4011+ 2  0DC0			??0349:  putc    #'?'
 4012+ 3  0DC0			??0365:
 4013+ 3			        ;jnb     SCON.1,putc_loop
 4014+ 3			        ;clr     SCON.1
 4015+ 3  0DC0	75 99 3F	        mov     SBUF,#'?'
 4016+ 2  0DC3	75 6E 01	        mov     fail,#001h
 4017+ 2  0DC6			??0363:
 4018+ 1
 4019+ 1			        top_ma  add,r4,??0350,<084h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 73



 Line  I  Addr  Code            Source

 4020+ 2  0DC6	7C 81		        mov     r4,#arg0
 4021+ 2  0DC8	74 93		        mov     a,#arg1
 4022+ 2			        ifnb    <084h>
 4023+ 2			        set_cy  084h
 4024+ 3	N      0000	??0366  set     (084h and 1)
 4025+ 3	N      0000	        if      ??0366 eq 1
 4026+ 3			        setb    c
 4027+ 3			        else
 4028+ 3  0DCA	C3		        clr     c
 4029+ 3			        endif
 4030+ 2			        endif
 4031+ 2  0DCB	2C		        add      a,r4
 4032+ 2			        ifnb    <084h>
 4033+ 2			        save_psw
 4034+ 3  0DCC	85 D0 70	        mov     saved_psw,PSW
 4035+ 2			        endif
 4036+ 2  0DCF	B4 14 25	        cjne    a,#res,??0350
 4037+ 2			        ifnb    <084h>
 4038+ 2			        tst_psw <084h>,??0350
 4039+ 3  0DD2	E5 70		        mov     a,saved_psw
 4040+ 3  0DD4	54 C4		        anl     a,#0c4h
 4041+ 3  0DD6	64 84		        xrl     a,#084h
 4042+ 3  0DD8	54 FE		        anl     a,#0feh
 4043+ 3  0DDA	70 1B		        jnz     ??0350
 4044+ 2			        endif
 4045+ 1			        top_ma  add,r5,??0350,<084h>
 4046+ 2  0DDC	7D 81		        mov     r5,#arg0
 4047+ 2  0DDE	74 93		        mov     a,#arg1
 4048+ 2			        ifnb    <084h>
 4049+ 2			        set_cy  084h
 4050+ 3	N      0000	??0367  set     (084h and 1)
 4051+ 3	N      0000	        if      ??0367 eq 1
 4052+ 3			        setb    c
 4053+ 3			        else
 4054+ 3  0DE0	C3		        clr     c
 4055+ 3			        endif
 4056+ 2			        endif
 4057+ 2  0DE1	2D		        add      a,r5
 4058+ 2			        ifnb    <084h>
 4059+ 2			        save_psw
 4060+ 3  0DE2	85 D0 70	        mov     saved_psw,PSW
 4061+ 2			        endif
 4062+ 2  0DE5	B4 14 0F	        cjne    a,#res,??0350
 4063+ 2			        ifnb    <084h>
 4064+ 2			        tst_psw <084h>,??0350
 4065+ 3  0DE8	E5 70		        mov     a,saved_psw
 4066+ 3  0DEA	54 C4		        anl     a,#0c4h
 4067+ 3  0DEC	64 84		        xrl     a,#084h
 4068+ 3  0DEE	54 FE		        anl     a,#0feh
 4069+ 3  0DF0	70 05		        jnz     ??0350
 4070+ 2			        endif
 4071+ 1
 4072+ 1			        eot     'c',??0350
 4073+ 2			        putc    #'c'
 4074+ 3  0DF2			??0369:
 4075+ 3			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 74



 Line  I  Addr  Code            Source

 4076+ 3			        ;clr     SCON.1
 4077+ 3  0DF2	75 99 63	        mov     SBUF,#'c'
 4078+ 2  0DF5	80 06		        sjmp    ??0368
 4079+ 2  0DF7			??0350:  putc    #'?'
 4080+ 3  0DF7			??0370:
 4081+ 3			        ;jnb     SCON.1,putc_loop
 4082+ 3			        ;clr     SCON.1
 4083+ 3  0DF7	75 99 3F	        mov     SBUF,#'?'
 4084+ 2  0DFA	75 6E 01	        mov     fail,#001h
 4085+ 2  0DFD			??0368:
 4086+ 1
 4087+ 1			        top_ma  add,r6,??0347,<084h>
 4088+ 2  0DFD	7E 81		        mov     r6,#arg0
 4089+ 2  0DFF	74 93		        mov     a,#arg1
 4090+ 2			        ifnb    <084h>
 4091+ 2			        set_cy  084h
 4092+ 3	N      0000	??0371  set     (084h and 1)
 4093+ 3	N      0000	        if      ??0371 eq 1
 4094+ 3			        setb    c
 4095+ 3			        else
 4096+ 3  0E01	C3		        clr     c
 4097+ 3			        endif
 4098+ 2			        endif
 4099+ 2  0E02	2E		        add      a,r6
 4100+ 2			        ifnb    <084h>
 4101+ 2			        save_psw
 4102+ 3  0E03	85 D0 70	        mov     saved_psw,PSW
 4103+ 2			        endif
 4104+ 2  0E06	B4 14 25	        cjne    a,#res,??0347
 4105+ 2			        ifnb    <084h>
 4106+ 2			        tst_psw <084h>,??0347
 4107+ 3  0E09	E5 70		        mov     a,saved_psw
 4108+ 3  0E0B	54 C4		        anl     a,#0c4h
 4109+ 3  0E0D	64 84		        xrl     a,#084h
 4110+ 3  0E0F	54 FE		        anl     a,#0feh
 4111+ 3  0E11	70 1B		        jnz     ??0347
 4112+ 2			        endif
 4113+ 1			        top_ma  add,r7,??0347,<084h>
 4114+ 2  0E13	7F 81		        mov     r7,#arg0
 4115+ 2  0E15	74 93		        mov     a,#arg1
 4116+ 2			        ifnb    <084h>
 4117+ 2			        set_cy  084h
 4118+ 3	N      0000	??0372  set     (084h and 1)
 4119+ 3	N      0000	        if      ??0372 eq 1
 4120+ 3			        setb    c
 4121+ 3			        else
 4122+ 3  0E17	C3		        clr     c
 4123+ 3			        endif
 4124+ 2			        endif
 4125+ 2  0E18	2F		        add      a,r7
 4126+ 2			        ifnb    <084h>
 4127+ 2			        save_psw
 4128+ 3  0E19	85 D0 70	        mov     saved_psw,PSW
 4129+ 2			        endif
 4130+ 2  0E1C	B4 14 0F	        cjne    a,#res,??0347
 4131+ 2			        ifnb    <084h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 75



 Line  I  Addr  Code            Source

 4132+ 2			        tst_psw <084h>,??0347
 4133+ 3  0E1F	E5 70		        mov     a,saved_psw
 4134+ 3  0E21	54 C4		        anl     a,#0c4h
 4135+ 3  0E23	64 84		        xrl     a,#084h
 4136+ 3  0E25	54 FE		        anl     a,#0feh
 4137+ 3  0E27	70 05		        jnz     ??0347
 4138+ 2			        endif
 4139+ 1
 4140+ 1			        eot     'd',??0347
 4141+ 2			        putc    #'d'
 4142+ 3  0E29			??0374:
 4143+ 3			        ;jnb     SCON.1,putc_loop
 4144+ 3			        ;clr     SCON.1
 4145+ 3  0E29	75 99 64	        mov     SBUF,#'d'
 4146+ 2  0E2C	80 06		        sjmp    ??0373
 4147+ 2  0E2E			??0347:  putc    #'?'
 4148+ 3  0E2E			??0375:
 4149+ 3			        ;jnb     SCON.1,putc_loop
 4150+ 3			        ;clr     SCON.1
 4151+ 3  0E2E	75 99 3F	        mov     SBUF,#'?'
 4152+ 2  0E31	75 6E 01	        mov     fail,#001h
 4153+ 2  0E34			??0373:
 4154+ 1
 4155+ 1			        ifb     <084h>
 4156+ 1
 4157+ 1			        top_mb  add,a,??0351,<084h>
 4158+ 1			        top_mb  add,dir0,??0351,<084h>
 4159+ 1
 4160+ 1			        eot     'e',??0351
 4161+ 1
 4162+ 1			        top_mc  add,??0352,<084h>
 4163+ 1
 4164+ 1			        eot     'f',??0352
 4165+ 1			        endif
 4166:				        putc    #'2'
 4167+ 1  0E34			??0376:
 4168+ 1			        ;jnb     SCON.1,putc_loop
 4169+ 1			        ;clr     SCON.1
 4170+ 1  0E34	75 99 32	        mov     SBUF,#'2'
 4171:				        tst_alu add,088h,098h,020h,0c4h     ;  CY  AC  OV
 4172+ 1
 4173+ 1	N      0088	        arg0    set 088h
 4174+ 1	N      0098	        arg1    set 098h
 4175+ 1	N      0020	        res     set 020h
 4176+ 1
 4177+ 1			        top_ma  add,dir0,??0378,<0c4h>
 4178+ 2  0E37	75 60 88	        mov     dir0,#arg0
 4179+ 2  0E3A	74 98		        mov     a,#arg1
 4180+ 2			        ifnb    <0c4h>
 4181+ 2			        set_cy  0c4h
 4182+ 3	N      0000	??0383  set     (0c4h and 1)
 4183+ 3	N      0000	        if      ??0383 eq 1
 4184+ 3			        setb    c
 4185+ 3			        else
 4186+ 3  0E3C	C3		        clr     c
 4187+ 3			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 76



 Line  I  Addr  Code            Source

 4188+ 2			        endif
 4189+ 2  0E3D	25 60		        add      a,dir0
 4190+ 2			        ifnb    <0c4h>
 4191+ 2			        save_psw
 4192+ 3  0E3F	85 D0 70	        mov     saved_psw,PSW
 4193+ 2			        endif
 4194+ 2  0E42	B4 20 6B	        cjne    a,#res,??0378
 4195+ 2			        ifnb    <0c4h>
 4196+ 2			        tst_psw <0c4h>,??0378
 4197+ 3  0E45	E5 70		        mov     a,saved_psw
 4198+ 3  0E47	54 C4		        anl     a,#0c4h
 4199+ 3  0E49	64 C4		        xrl     a,#0c4h
 4200+ 3  0E4B	54 FE		        anl     a,#0feh
 4201+ 3  0E4D	70 61		        jnz     ??0378
 4202+ 2			        endif
 4203+ 1  0E4F	78 60		        mov     r0,#dir0
 4204+ 1			        top_ma  add,@r0,??0378,<0c4h>
 4205+ 2  0E51	76 88		        mov     @r0,#arg0
 4206+ 2  0E53	74 98		        mov     a,#arg1
 4207+ 2			        ifnb    <0c4h>
 4208+ 2			        set_cy  0c4h
 4209+ 3	N      0000	??0384  set     (0c4h and 1)
 4210+ 3	N      0000	        if      ??0384 eq 1
 4211+ 3			        setb    c
 4212+ 3			        else
 4213+ 3  0E55	C3		        clr     c
 4214+ 3			        endif
 4215+ 2			        endif
 4216+ 2  0E56	26		        add      a,@r0
 4217+ 2			        ifnb    <0c4h>
 4218+ 2			        save_psw
 4219+ 3  0E57	85 D0 70	        mov     saved_psw,PSW
 4220+ 2			        endif
 4221+ 2  0E5A	B4 20 53	        cjne    a,#res,??0378
 4222+ 2			        ifnb    <0c4h>
 4223+ 2			        tst_psw <0c4h>,??0378
 4224+ 3  0E5D	E5 70		        mov     a,saved_psw
 4225+ 3  0E5F	54 C4		        anl     a,#0c4h
 4226+ 3  0E61	64 C4		        xrl     a,#0c4h
 4227+ 3  0E63	54 FE		        anl     a,#0feh
 4228+ 3  0E65	70 49		        jnz     ??0378
 4229+ 2			        endif
 4230+ 1  0E67	79 31		        mov     r1,#031h
 4231+ 1			        top_ma  add,@r1,??0378,<0c4h>
 4232+ 2  0E69	77 88		        mov     @r1,#arg0
 4233+ 2  0E6B	74 98		        mov     a,#arg1
 4234+ 2			        ifnb    <0c4h>
 4235+ 2			        set_cy  0c4h
 4236+ 3	N      0000	??0385  set     (0c4h and 1)
 4237+ 3	N      0000	        if      ??0385 eq 1
 4238+ 3			        setb    c
 4239+ 3			        else
 4240+ 3  0E6D	C3		        clr     c
 4241+ 3			        endif
 4242+ 2			        endif
 4243+ 2  0E6E	27		        add      a,@r1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 77



 Line  I  Addr  Code            Source

 4244+ 2			        ifnb    <0c4h>
 4245+ 2			        save_psw
 4246+ 3  0E6F	85 D0 70	        mov     saved_psw,PSW
 4247+ 2			        endif
 4248+ 2  0E72	B4 20 3B	        cjne    a,#res,??0378
 4249+ 2			        ifnb    <0c4h>
 4250+ 2			        tst_psw <0c4h>,??0378
 4251+ 3  0E75	E5 70		        mov     a,saved_psw
 4252+ 3  0E77	54 C4		        anl     a,#0c4h
 4253+ 3  0E79	64 C4		        xrl     a,#0c4h
 4254+ 3  0E7B	54 FE		        anl     a,#0feh
 4255+ 3  0E7D	70 31		        jnz     ??0378
 4256+ 2			        endif
 4257+ 1
 4258+ 1			        top_ma  add,r0,??0378,<0c4h>
 4259+ 2  0E7F	78 88		        mov     r0,#arg0
 4260+ 2  0E81	74 98		        mov     a,#arg1
 4261+ 2			        ifnb    <0c4h>
 4262+ 2			        set_cy  0c4h
 4263+ 3	N      0000	??0386  set     (0c4h and 1)
 4264+ 3	N      0000	        if      ??0386 eq 1
 4265+ 3			        setb    c
 4266+ 3			        else
 4267+ 3  0E83	C3		        clr     c
 4268+ 3			        endif
 4269+ 2			        endif
 4270+ 2  0E84	28		        add      a,r0
 4271+ 2			        ifnb    <0c4h>
 4272+ 2			        save_psw
 4273+ 3  0E85	85 D0 70	        mov     saved_psw,PSW
 4274+ 2			        endif
 4275+ 2  0E88	B4 20 25	        cjne    a,#res,??0378
 4276+ 2			        ifnb    <0c4h>
 4277+ 2			        tst_psw <0c4h>,??0378
 4278+ 3  0E8B	E5 70		        mov     a,saved_psw
 4279+ 3  0E8D	54 C4		        anl     a,#0c4h
 4280+ 3  0E8F	64 C4		        xrl     a,#0c4h
 4281+ 3  0E91	54 FE		        anl     a,#0feh
 4282+ 3  0E93	70 1B		        jnz     ??0378
 4283+ 2			        endif
 4284+ 1			        top_ma  add,r1,??0378,<0c4h>
 4285+ 2  0E95	79 88		        mov     r1,#arg0
 4286+ 2  0E97	74 98		        mov     a,#arg1
 4287+ 2			        ifnb    <0c4h>
 4288+ 2			        set_cy  0c4h
 4289+ 3	N      0000	??0387  set     (0c4h and 1)
 4290+ 3	N      0000	        if      ??0387 eq 1
 4291+ 3			        setb    c
 4292+ 3			        else
 4293+ 3  0E99	C3		        clr     c
 4294+ 3			        endif
 4295+ 2			        endif
 4296+ 2  0E9A	29		        add      a,r1
 4297+ 2			        ifnb    <0c4h>
 4298+ 2			        save_psw
 4299+ 3  0E9B	85 D0 70	        mov     saved_psw,PSW

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 78



 Line  I  Addr  Code            Source

 4300+ 2			        endif
 4301+ 2  0E9E	B4 20 0F	        cjne    a,#res,??0378
 4302+ 2			        ifnb    <0c4h>
 4303+ 2			        tst_psw <0c4h>,??0378
 4304+ 3  0EA1	E5 70		        mov     a,saved_psw
 4305+ 3  0EA3	54 C4		        anl     a,#0c4h
 4306+ 3  0EA5	64 C4		        xrl     a,#0c4h
 4307+ 3  0EA7	54 FE		        anl     a,#0feh
 4308+ 3  0EA9	70 05		        jnz     ??0378
 4309+ 2			        endif
 4310+ 1
 4311+ 1			        eot     'a',??0378
 4312+ 2			        putc    #'a'
 4313+ 3  0EAB			??0389:
 4314+ 3			        ;jnb     SCON.1,putc_loop
 4315+ 3			        ;clr     SCON.1
 4316+ 3  0EAB	75 99 61	        mov     SBUF,#'a'
 4317+ 2  0EAE	80 06		        sjmp    ??0388
 4318+ 2  0EB0			??0378:  putc    #'?'
 4319+ 3  0EB0			??0390:
 4320+ 3			        ;jnb     SCON.1,putc_loop
 4321+ 3			        ;clr     SCON.1
 4322+ 3  0EB0	75 99 3F	        mov     SBUF,#'?'
 4323+ 2  0EB3	75 6E 01	        mov     fail,#001h
 4324+ 2  0EB6			??0388:
 4325+ 1
 4326+ 1			        top_ma  add,r2,??0379,<0c4h>
 4327+ 2  0EB6	7A 88		        mov     r2,#arg0
 4328+ 2  0EB8	74 98		        mov     a,#arg1
 4329+ 2			        ifnb    <0c4h>
 4330+ 2			        set_cy  0c4h
 4331+ 3	N      0000	??0391  set     (0c4h and 1)
 4332+ 3	N      0000	        if      ??0391 eq 1
 4333+ 3			        setb    c
 4334+ 3			        else
 4335+ 3  0EBA	C3		        clr     c
 4336+ 3			        endif
 4337+ 2			        endif
 4338+ 2  0EBB	2A		        add      a,r2
 4339+ 2			        ifnb    <0c4h>
 4340+ 2			        save_psw
 4341+ 3  0EBC	85 D0 70	        mov     saved_psw,PSW
 4342+ 2			        endif
 4343+ 2  0EBF	B4 20 25	        cjne    a,#res,??0379
 4344+ 2			        ifnb    <0c4h>
 4345+ 2			        tst_psw <0c4h>,??0379
 4346+ 3  0EC2	E5 70		        mov     a,saved_psw
 4347+ 3  0EC4	54 C4		        anl     a,#0c4h
 4348+ 3  0EC6	64 C4		        xrl     a,#0c4h
 4349+ 3  0EC8	54 FE		        anl     a,#0feh
 4350+ 3  0ECA	70 1B		        jnz     ??0379
 4351+ 2			        endif
 4352+ 1			        top_ma  add,r3,??0379,<0c4h>
 4353+ 2  0ECC	7B 88		        mov     r3,#arg0
 4354+ 2  0ECE	74 98		        mov     a,#arg1
 4355+ 2			        ifnb    <0c4h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 79



 Line  I  Addr  Code            Source

 4356+ 2			        set_cy  0c4h
 4357+ 3	N      0000	??0392  set     (0c4h and 1)
 4358+ 3	N      0000	        if      ??0392 eq 1
 4359+ 3			        setb    c
 4360+ 3			        else
 4361+ 3  0ED0	C3		        clr     c
 4362+ 3			        endif
 4363+ 2			        endif
 4364+ 2  0ED1	2B		        add      a,r3
 4365+ 2			        ifnb    <0c4h>
 4366+ 2			        save_psw
 4367+ 3  0ED2	85 D0 70	        mov     saved_psw,PSW
 4368+ 2			        endif
 4369+ 2  0ED5	B4 20 0F	        cjne    a,#res,??0379
 4370+ 2			        ifnb    <0c4h>
 4371+ 2			        tst_psw <0c4h>,??0379
 4372+ 3  0ED8	E5 70		        mov     a,saved_psw
 4373+ 3  0EDA	54 C4		        anl     a,#0c4h
 4374+ 3  0EDC	64 C4		        xrl     a,#0c4h
 4375+ 3  0EDE	54 FE		        anl     a,#0feh
 4376+ 3  0EE0	70 05		        jnz     ??0379
 4377+ 2			        endif
 4378+ 1
 4379+ 1			        eot     'b',??0379
 4380+ 2			        putc    #'b'
 4381+ 3  0EE2			??0394:
 4382+ 3			        ;jnb     SCON.1,putc_loop
 4383+ 3			        ;clr     SCON.1
 4384+ 3  0EE2	75 99 62	        mov     SBUF,#'b'
 4385+ 2  0EE5	80 06		        sjmp    ??0393
 4386+ 2  0EE7			??0379:  putc    #'?'
 4387+ 3  0EE7			??0395:
 4388+ 3			        ;jnb     SCON.1,putc_loop
 4389+ 3			        ;clr     SCON.1
 4390+ 3  0EE7	75 99 3F	        mov     SBUF,#'?'
 4391+ 2  0EEA	75 6E 01	        mov     fail,#001h
 4392+ 2  0EED			??0393:
 4393+ 1
 4394+ 1			        top_ma  add,r4,??0380,<0c4h>
 4395+ 2  0EED	7C 88		        mov     r4,#arg0
 4396+ 2  0EEF	74 98		        mov     a,#arg1
 4397+ 2			        ifnb    <0c4h>
 4398+ 2			        set_cy  0c4h
 4399+ 3	N      0000	??0396  set     (0c4h and 1)
 4400+ 3	N      0000	        if      ??0396 eq 1
 4401+ 3			        setb    c
 4402+ 3			        else
 4403+ 3  0EF1	C3		        clr     c
 4404+ 3			        endif
 4405+ 2			        endif
 4406+ 2  0EF2	2C		        add      a,r4
 4407+ 2			        ifnb    <0c4h>
 4408+ 2			        save_psw
 4409+ 3  0EF3	85 D0 70	        mov     saved_psw,PSW
 4410+ 2			        endif
 4411+ 2  0EF6	B4 20 25	        cjne    a,#res,??0380

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 80



 Line  I  Addr  Code            Source

 4412+ 2			        ifnb    <0c4h>
 4413+ 2			        tst_psw <0c4h>,??0380
 4414+ 3  0EF9	E5 70		        mov     a,saved_psw
 4415+ 3  0EFB	54 C4		        anl     a,#0c4h
 4416+ 3  0EFD	64 C4		        xrl     a,#0c4h
 4417+ 3  0EFF	54 FE		        anl     a,#0feh
 4418+ 3  0F01	70 1B		        jnz     ??0380
 4419+ 2			        endif
 4420+ 1			        top_ma  add,r5,??0380,<0c4h>
 4421+ 2  0F03	7D 88		        mov     r5,#arg0
 4422+ 2  0F05	74 98		        mov     a,#arg1
 4423+ 2			        ifnb    <0c4h>
 4424+ 2			        set_cy  0c4h
 4425+ 3	N      0000	??0397  set     (0c4h and 1)
 4426+ 3	N      0000	        if      ??0397 eq 1
 4427+ 3			        setb    c
 4428+ 3			        else
 4429+ 3  0F07	C3		        clr     c
 4430+ 3			        endif
 4431+ 2			        endif
 4432+ 2  0F08	2D		        add      a,r5
 4433+ 2			        ifnb    <0c4h>
 4434+ 2			        save_psw
 4435+ 3  0F09	85 D0 70	        mov     saved_psw,PSW
 4436+ 2			        endif
 4437+ 2  0F0C	B4 20 0F	        cjne    a,#res,??0380
 4438+ 2			        ifnb    <0c4h>
 4439+ 2			        tst_psw <0c4h>,??0380
 4440+ 3  0F0F	E5 70		        mov     a,saved_psw
 4441+ 3  0F11	54 C4		        anl     a,#0c4h
 4442+ 3  0F13	64 C4		        xrl     a,#0c4h
 4443+ 3  0F15	54 FE		        anl     a,#0feh
 4444+ 3  0F17	70 05		        jnz     ??0380
 4445+ 2			        endif
 4446+ 1
 4447+ 1			        eot     'c',??0380
 4448+ 2			        putc    #'c'
 4449+ 3  0F19			??0399:
 4450+ 3			        ;jnb     SCON.1,putc_loop
 4451+ 3			        ;clr     SCON.1
 4452+ 3  0F19	75 99 63	        mov     SBUF,#'c'
 4453+ 2  0F1C	80 06		        sjmp    ??0398
 4454+ 2  0F1E			??0380:  putc    #'?'
 4455+ 3  0F1E			??0400:
 4456+ 3			        ;jnb     SCON.1,putc_loop
 4457+ 3			        ;clr     SCON.1
 4458+ 3  0F1E	75 99 3F	        mov     SBUF,#'?'
 4459+ 2  0F21	75 6E 01	        mov     fail,#001h
 4460+ 2  0F24			??0398:
 4461+ 1
 4462+ 1			        top_ma  add,r6,??0377,<0c4h>
 4463+ 2  0F24	7E 88		        mov     r6,#arg0
 4464+ 2  0F26	74 98		        mov     a,#arg1
 4465+ 2			        ifnb    <0c4h>
 4466+ 2			        set_cy  0c4h
 4467+ 3	N      0000	??0401  set     (0c4h and 1)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 81



 Line  I  Addr  Code            Source

 4468+ 3	N      0000	        if      ??0401 eq 1
 4469+ 3			        setb    c
 4470+ 3			        else
 4471+ 3  0F28	C3		        clr     c
 4472+ 3			        endif
 4473+ 2			        endif
 4474+ 2  0F29	2E		        add      a,r6
 4475+ 2			        ifnb    <0c4h>
 4476+ 2			        save_psw
 4477+ 3  0F2A	85 D0 70	        mov     saved_psw,PSW
 4478+ 2			        endif
 4479+ 2  0F2D	B4 20 25	        cjne    a,#res,??0377
 4480+ 2			        ifnb    <0c4h>
 4481+ 2			        tst_psw <0c4h>,??0377
 4482+ 3  0F30	E5 70		        mov     a,saved_psw
 4483+ 3  0F32	54 C4		        anl     a,#0c4h
 4484+ 3  0F34	64 C4		        xrl     a,#0c4h
 4485+ 3  0F36	54 FE		        anl     a,#0feh
 4486+ 3  0F38	70 1B		        jnz     ??0377
 4487+ 2			        endif
 4488+ 1			        top_ma  add,r7,??0377,<0c4h>
 4489+ 2  0F3A	7F 88		        mov     r7,#arg0
 4490+ 2  0F3C	74 98		        mov     a,#arg1
 4491+ 2			        ifnb    <0c4h>
 4492+ 2			        set_cy  0c4h
 4493+ 3	N      0000	??0402  set     (0c4h and 1)
 4494+ 3	N      0000	        if      ??0402 eq 1
 4495+ 3			        setb    c
 4496+ 3			        else
 4497+ 3  0F3E	C3		        clr     c
 4498+ 3			        endif
 4499+ 2			        endif
 4500+ 2  0F3F	2F		        add      a,r7
 4501+ 2			        ifnb    <0c4h>
 4502+ 2			        save_psw
 4503+ 3  0F40	85 D0 70	        mov     saved_psw,PSW
 4504+ 2			        endif
 4505+ 2  0F43	B4 20 0F	        cjne    a,#res,??0377
 4506+ 2			        ifnb    <0c4h>
 4507+ 2			        tst_psw <0c4h>,??0377
 4508+ 3  0F46	E5 70		        mov     a,saved_psw
 4509+ 3  0F48	54 C4		        anl     a,#0c4h
 4510+ 3  0F4A	64 C4		        xrl     a,#0c4h
 4511+ 3  0F4C	54 FE		        anl     a,#0feh
 4512+ 3  0F4E	70 05		        jnz     ??0377
 4513+ 2			        endif
 4514+ 1
 4515+ 1			        eot     'd',??0377
 4516+ 2			        putc    #'d'
 4517+ 3  0F50			??0404:
 4518+ 3			        ;jnb     SCON.1,putc_loop
 4519+ 3			        ;clr     SCON.1
 4520+ 3  0F50	75 99 64	        mov     SBUF,#'d'
 4521+ 2  0F53	80 06		        sjmp    ??0403
 4522+ 2  0F55			??0377:  putc    #'?'
 4523+ 3  0F55			??0405:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 82



 Line  I  Addr  Code            Source

 4524+ 3			        ;jnb     SCON.1,putc_loop
 4525+ 3			        ;clr     SCON.1
 4526+ 3  0F55	75 99 3F	        mov     SBUF,#'?'
 4527+ 2  0F58	75 6E 01	        mov     fail,#001h
 4528+ 2  0F5B			??0403:
 4529+ 1
 4530+ 1			        ifb     <0c4h>
 4531+ 1
 4532+ 1			        top_mb  add,a,??0381,<0c4h>
 4533+ 1			        top_mb  add,dir0,??0381,<0c4h>
 4534+ 1
 4535+ 1			        eot     'e',??0381
 4536+ 1
 4537+ 1			        top_mc  add,??0382,<0c4h>
 4538+ 1
 4539+ 1			        eot     'f',??0382
 4540+ 1			        endif
 4541:
 4542:				        put_crlf                    ; end of test series
 4543+ 1			        putc    #13
 4544+ 2  0F5B			??0406:
 4545+ 2			        ;jnb     SCON.1,putc_loop
 4546+ 2			        ;clr     SCON.1
 4547+ 2  0F5B	75 99 0D	        mov     SBUF,#13
 4548+ 1			        putc    #10
 4549+ 2  0F5E			??0407:
 4550+ 2			        ;jnb     SCON.1,putc_loop
 4551+ 2			        ;clr     SCON.1
 4552+ 2  0F5E	75 99 0A	        mov     SBUF,#10
 4553:
 4554:
 4555:				        ;-- Test series M ------------------------------------------------------
 4556:				        ; ADDC
 4557:				        ; (See comments for 'ALU opcode block test')
 4558:				        ; Note the test runs 4 times for different values of operands
 4559:
 4560:				        putc    #'M'                ; start of test series
 4561+ 1  0F61			??0408:
 4562+ 1			        ;jnb     SCON.1,putc_loop
 4563+ 1			        ;clr     SCON.1
 4564+ 1  0F61	75 99 4D	        mov     SBUF,#'M'
 4565:
 4566:				        putc    #'0'
 4567+ 1  0F64			??0409:
 4568+ 1			        ;jnb     SCON.1,putc_loop
 4569+ 1			        ;clr     SCON.1
 4570+ 1  0F64	75 99 30	        mov     SBUF,#'0'
 4571:				        tst_alu addc,051h,033h,084h,004h     ; /CY /AC  OV
 4572+ 1
 4573+ 1	N      0051	        arg0    set 051h
 4574+ 1	N      0033	        arg1    set 033h
 4575+ 1	N      0084	        res     set 084h
 4576+ 1
 4577+ 1			        top_ma  addc,dir0,??0411,<004h>
 4578+ 2  0F67	75 60 51	        mov     dir0,#arg0
 4579+ 2  0F6A	74 33		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 83



 Line  I  Addr  Code            Source

 4580+ 2			        ifnb    <004h>
 4581+ 2			        set_cy  004h
 4582+ 3	N      0000	??0416  set     (004h and 1)
 4583+ 3	N      0000	        if      ??0416 eq 1
 4584+ 3			        setb    c
 4585+ 3			        else
 4586+ 3  0F6C	C3		        clr     c
 4587+ 3			        endif
 4588+ 2			        endif
 4589+ 2  0F6D	35 60		        addc      a,dir0
 4590+ 2			        ifnb    <004h>
 4591+ 2			        save_psw
 4592+ 3  0F6F	85 D0 70	        mov     saved_psw,PSW
 4593+ 2			        endif
 4594+ 2  0F72	B4 84 6B	        cjne    a,#res,??0411
 4595+ 2			        ifnb    <004h>
 4596+ 2			        tst_psw <004h>,??0411
 4597+ 3  0F75	E5 70		        mov     a,saved_psw
 4598+ 3  0F77	54 C4		        anl     a,#0c4h
 4599+ 3  0F79	64 04		        xrl     a,#004h
 4600+ 3  0F7B	54 FE		        anl     a,#0feh
 4601+ 3  0F7D	70 61		        jnz     ??0411
 4602+ 2			        endif
 4603+ 1  0F7F	78 60		        mov     r0,#dir0
 4604+ 1			        top_ma  addc,@r0,??0411,<004h>
 4605+ 2  0F81	76 51		        mov     @r0,#arg0
 4606+ 2  0F83	74 33		        mov     a,#arg1
 4607+ 2			        ifnb    <004h>
 4608+ 2			        set_cy  004h
 4609+ 3	N      0000	??0417  set     (004h and 1)
 4610+ 3	N      0000	        if      ??0417 eq 1
 4611+ 3			        setb    c
 4612+ 3			        else
 4613+ 3  0F85	C3		        clr     c
 4614+ 3			        endif
 4615+ 2			        endif
 4616+ 2  0F86	36		        addc      a,@r0
 4617+ 2			        ifnb    <004h>
 4618+ 2			        save_psw
 4619+ 3  0F87	85 D0 70	        mov     saved_psw,PSW
 4620+ 2			        endif
 4621+ 2  0F8A	B4 84 53	        cjne    a,#res,??0411
 4622+ 2			        ifnb    <004h>
 4623+ 2			        tst_psw <004h>,??0411
 4624+ 3  0F8D	E5 70		        mov     a,saved_psw
 4625+ 3  0F8F	54 C4		        anl     a,#0c4h
 4626+ 3  0F91	64 04		        xrl     a,#004h
 4627+ 3  0F93	54 FE		        anl     a,#0feh
 4628+ 3  0F95	70 49		        jnz     ??0411
 4629+ 2			        endif
 4630+ 1  0F97	79 31		        mov     r1,#031h
 4631+ 1			        top_ma  addc,@r1,??0411,<004h>
 4632+ 2  0F99	77 51		        mov     @r1,#arg0
 4633+ 2  0F9B	74 33		        mov     a,#arg1
 4634+ 2			        ifnb    <004h>
 4635+ 2			        set_cy  004h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 84



 Line  I  Addr  Code            Source

 4636+ 3	N      0000	??0418  set     (004h and 1)
 4637+ 3	N      0000	        if      ??0418 eq 1
 4638+ 3			        setb    c
 4639+ 3			        else
 4640+ 3  0F9D	C3		        clr     c
 4641+ 3			        endif
 4642+ 2			        endif
 4643+ 2  0F9E	37		        addc      a,@r1
 4644+ 2			        ifnb    <004h>
 4645+ 2			        save_psw
 4646+ 3  0F9F	85 D0 70	        mov     saved_psw,PSW
 4647+ 2			        endif
 4648+ 2  0FA2	B4 84 3B	        cjne    a,#res,??0411
 4649+ 2			        ifnb    <004h>
 4650+ 2			        tst_psw <004h>,??0411
 4651+ 3  0FA5	E5 70		        mov     a,saved_psw
 4652+ 3  0FA7	54 C4		        anl     a,#0c4h
 4653+ 3  0FA9	64 04		        xrl     a,#004h
 4654+ 3  0FAB	54 FE		        anl     a,#0feh
 4655+ 3  0FAD	70 31		        jnz     ??0411
 4656+ 2			        endif
 4657+ 1
 4658+ 1			        top_ma  addc,r0,??0411,<004h>
 4659+ 2  0FAF	78 51		        mov     r0,#arg0
 4660+ 2  0FB1	74 33		        mov     a,#arg1
 4661+ 2			        ifnb    <004h>
 4662+ 2			        set_cy  004h
 4663+ 3	N      0000	??0419  set     (004h and 1)
 4664+ 3	N      0000	        if      ??0419 eq 1
 4665+ 3			        setb    c
 4666+ 3			        else
 4667+ 3  0FB3	C3		        clr     c
 4668+ 3			        endif
 4669+ 2			        endif
 4670+ 2  0FB4	38		        addc      a,r0
 4671+ 2			        ifnb    <004h>
 4672+ 2			        save_psw
 4673+ 3  0FB5	85 D0 70	        mov     saved_psw,PSW
 4674+ 2			        endif
 4675+ 2  0FB8	B4 84 25	        cjne    a,#res,??0411
 4676+ 2			        ifnb    <004h>
 4677+ 2			        tst_psw <004h>,??0411
 4678+ 3  0FBB	E5 70		        mov     a,saved_psw
 4679+ 3  0FBD	54 C4		        anl     a,#0c4h
 4680+ 3  0FBF	64 04		        xrl     a,#004h
 4681+ 3  0FC1	54 FE		        anl     a,#0feh
 4682+ 3  0FC3	70 1B		        jnz     ??0411
 4683+ 2			        endif
 4684+ 1			        top_ma  addc,r1,??0411,<004h>
 4685+ 2  0FC5	79 51		        mov     r1,#arg0
 4686+ 2  0FC7	74 33		        mov     a,#arg1
 4687+ 2			        ifnb    <004h>
 4688+ 2			        set_cy  004h
 4689+ 3	N      0000	??0420  set     (004h and 1)
 4690+ 3	N      0000	        if      ??0420 eq 1
 4691+ 3			        setb    c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 85



 Line  I  Addr  Code            Source

 4692+ 3			        else
 4693+ 3  0FC9	C3		        clr     c
 4694+ 3			        endif
 4695+ 2			        endif
 4696+ 2  0FCA	39		        addc      a,r1
 4697+ 2			        ifnb    <004h>
 4698+ 2			        save_psw
 4699+ 3  0FCB	85 D0 70	        mov     saved_psw,PSW
 4700+ 2			        endif
 4701+ 2  0FCE	B4 84 0F	        cjne    a,#res,??0411
 4702+ 2			        ifnb    <004h>
 4703+ 2			        tst_psw <004h>,??0411
 4704+ 3  0FD1	E5 70		        mov     a,saved_psw
 4705+ 3  0FD3	54 C4		        anl     a,#0c4h
 4706+ 3  0FD5	64 04		        xrl     a,#004h
 4707+ 3  0FD7	54 FE		        anl     a,#0feh
 4708+ 3  0FD9	70 05		        jnz     ??0411
 4709+ 2			        endif
 4710+ 1
 4711+ 1			        eot     'a',??0411
 4712+ 2			        putc    #'a'
 4713+ 3  0FDB			??0422:
 4714+ 3			        ;jnb     SCON.1,putc_loop
 4715+ 3			        ;clr     SCON.1
 4716+ 3  0FDB	75 99 61	        mov     SBUF,#'a'
 4717+ 2  0FDE	80 06		        sjmp    ??0421
 4718+ 2  0FE0			??0411:  putc    #'?'
 4719+ 3  0FE0			??0423:
 4720+ 3			        ;jnb     SCON.1,putc_loop
 4721+ 3			        ;clr     SCON.1
 4722+ 3  0FE0	75 99 3F	        mov     SBUF,#'?'
 4723+ 2  0FE3	75 6E 01	        mov     fail,#001h
 4724+ 2  0FE6			??0421:
 4725+ 1
 4726+ 1			        top_ma  addc,r2,??0412,<004h>
 4727+ 2  0FE6	7A 51		        mov     r2,#arg0
 4728+ 2  0FE8	74 33		        mov     a,#arg1
 4729+ 2			        ifnb    <004h>
 4730+ 2			        set_cy  004h
 4731+ 3	N      0000	??0424  set     (004h and 1)
 4732+ 3	N      0000	        if      ??0424 eq 1
 4733+ 3			        setb    c
 4734+ 3			        else
 4735+ 3  0FEA	C3		        clr     c
 4736+ 3			        endif
 4737+ 2			        endif
 4738+ 2  0FEB	3A		        addc      a,r2
 4739+ 2			        ifnb    <004h>
 4740+ 2			        save_psw
 4741+ 3  0FEC	85 D0 70	        mov     saved_psw,PSW
 4742+ 2			        endif
 4743+ 2  0FEF	B4 84 25	        cjne    a,#res,??0412
 4744+ 2			        ifnb    <004h>
 4745+ 2			        tst_psw <004h>,??0412
 4746+ 3  0FF2	E5 70		        mov     a,saved_psw
 4747+ 3  0FF4	54 C4		        anl     a,#0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 86



 Line  I  Addr  Code            Source

 4748+ 3  0FF6	64 04		        xrl     a,#004h
 4749+ 3  0FF8	54 FE		        anl     a,#0feh
 4750+ 3  0FFA	70 1B		        jnz     ??0412
 4751+ 2			        endif
 4752+ 1			        top_ma  addc,r3,??0412,<004h>
 4753+ 2  0FFC	7B 51		        mov     r3,#arg0
 4754+ 2  0FFE	74 33		        mov     a,#arg1
 4755+ 2			        ifnb    <004h>
 4756+ 2			        set_cy  004h
 4757+ 3	N      0000	??0425  set     (004h and 1)
 4758+ 3	N      0000	        if      ??0425 eq 1
 4759+ 3			        setb    c
 4760+ 3			        else
 4761+ 3  1000	C3		        clr     c
 4762+ 3			        endif
 4763+ 2			        endif
 4764+ 2  1001	3B		        addc      a,r3
 4765+ 2			        ifnb    <004h>
 4766+ 2			        save_psw
 4767+ 3  1002	85 D0 70	        mov     saved_psw,PSW
 4768+ 2			        endif
 4769+ 2  1005	B4 84 0F	        cjne    a,#res,??0412
 4770+ 2			        ifnb    <004h>
 4771+ 2			        tst_psw <004h>,??0412
 4772+ 3  1008	E5 70		        mov     a,saved_psw
 4773+ 3  100A	54 C4		        anl     a,#0c4h
 4774+ 3  100C	64 04		        xrl     a,#004h
 4775+ 3  100E	54 FE		        anl     a,#0feh
 4776+ 3  1010	70 05		        jnz     ??0412
 4777+ 2			        endif
 4778+ 1
 4779+ 1			        eot     'b',??0412
 4780+ 2			        putc    #'b'
 4781+ 3  1012			??0427:
 4782+ 3			        ;jnb     SCON.1,putc_loop
 4783+ 3			        ;clr     SCON.1
 4784+ 3  1012	75 99 62	        mov     SBUF,#'b'
 4785+ 2  1015	80 06		        sjmp    ??0426
 4786+ 2  1017			??0412:  putc    #'?'
 4787+ 3  1017			??0428:
 4788+ 3			        ;jnb     SCON.1,putc_loop
 4789+ 3			        ;clr     SCON.1
 4790+ 3  1017	75 99 3F	        mov     SBUF,#'?'
 4791+ 2  101A	75 6E 01	        mov     fail,#001h
 4792+ 2  101D			??0426:
 4793+ 1
 4794+ 1			        top_ma  addc,r4,??0413,<004h>
 4795+ 2  101D	7C 51		        mov     r4,#arg0
 4796+ 2  101F	74 33		        mov     a,#arg1
 4797+ 2			        ifnb    <004h>
 4798+ 2			        set_cy  004h
 4799+ 3	N      0000	??0429  set     (004h and 1)
 4800+ 3	N      0000	        if      ??0429 eq 1
 4801+ 3			        setb    c
 4802+ 3			        else
 4803+ 3  1021	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 87



 Line  I  Addr  Code            Source

 4804+ 3			        endif
 4805+ 2			        endif
 4806+ 2  1022	3C		        addc      a,r4
 4807+ 2			        ifnb    <004h>
 4808+ 2			        save_psw
 4809+ 3  1023	85 D0 70	        mov     saved_psw,PSW
 4810+ 2			        endif
 4811+ 2  1026	B4 84 25	        cjne    a,#res,??0413
 4812+ 2			        ifnb    <004h>
 4813+ 2			        tst_psw <004h>,??0413
 4814+ 3  1029	E5 70		        mov     a,saved_psw
 4815+ 3  102B	54 C4		        anl     a,#0c4h
 4816+ 3  102D	64 04		        xrl     a,#004h
 4817+ 3  102F	54 FE		        anl     a,#0feh
 4818+ 3  1031	70 1B		        jnz     ??0413
 4819+ 2			        endif
 4820+ 1			        top_ma  addc,r5,??0413,<004h>
 4821+ 2  1033	7D 51		        mov     r5,#arg0
 4822+ 2  1035	74 33		        mov     a,#arg1
 4823+ 2			        ifnb    <004h>
 4824+ 2			        set_cy  004h
 4825+ 3	N      0000	??0430  set     (004h and 1)
 4826+ 3	N      0000	        if      ??0430 eq 1
 4827+ 3			        setb    c
 4828+ 3			        else
 4829+ 3  1037	C3		        clr     c
 4830+ 3			        endif
 4831+ 2			        endif
 4832+ 2  1038	3D		        addc      a,r5
 4833+ 2			        ifnb    <004h>
 4834+ 2			        save_psw
 4835+ 3  1039	85 D0 70	        mov     saved_psw,PSW
 4836+ 2			        endif
 4837+ 2  103C	B4 84 0F	        cjne    a,#res,??0413
 4838+ 2			        ifnb    <004h>
 4839+ 2			        tst_psw <004h>,??0413
 4840+ 3  103F	E5 70		        mov     a,saved_psw
 4841+ 3  1041	54 C4		        anl     a,#0c4h
 4842+ 3  1043	64 04		        xrl     a,#004h
 4843+ 3  1045	54 FE		        anl     a,#0feh
 4844+ 3  1047	70 05		        jnz     ??0413
 4845+ 2			        endif
 4846+ 1
 4847+ 1			        eot     'c',??0413
 4848+ 2			        putc    #'c'
 4849+ 3  1049			??0432:
 4850+ 3			        ;jnb     SCON.1,putc_loop
 4851+ 3			        ;clr     SCON.1
 4852+ 3  1049	75 99 63	        mov     SBUF,#'c'
 4853+ 2  104C	80 06		        sjmp    ??0431
 4854+ 2  104E			??0413:  putc    #'?'
 4855+ 3  104E			??0433:
 4856+ 3			        ;jnb     SCON.1,putc_loop
 4857+ 3			        ;clr     SCON.1
 4858+ 3  104E	75 99 3F	        mov     SBUF,#'?'
 4859+ 2  1051	75 6E 01	        mov     fail,#001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 88



 Line  I  Addr  Code            Source

 4860+ 2  1054			??0431:
 4861+ 1
 4862+ 1			        top_ma  addc,r6,??0410,<004h>
 4863+ 2  1054	7E 51		        mov     r6,#arg0
 4864+ 2  1056	74 33		        mov     a,#arg1
 4865+ 2			        ifnb    <004h>
 4866+ 2			        set_cy  004h
 4867+ 3	N      0000	??0434  set     (004h and 1)
 4868+ 3	N      0000	        if      ??0434 eq 1
 4869+ 3			        setb    c
 4870+ 3			        else
 4871+ 3  1058	C3		        clr     c
 4872+ 3			        endif
 4873+ 2			        endif
 4874+ 2  1059	3E		        addc      a,r6
 4875+ 2			        ifnb    <004h>
 4876+ 2			        save_psw
 4877+ 3  105A	85 D0 70	        mov     saved_psw,PSW
 4878+ 2			        endif
 4879+ 2  105D	B4 84 25	        cjne    a,#res,??0410
 4880+ 2			        ifnb    <004h>
 4881+ 2			        tst_psw <004h>,??0410
 4882+ 3  1060	E5 70		        mov     a,saved_psw
 4883+ 3  1062	54 C4		        anl     a,#0c4h
 4884+ 3  1064	64 04		        xrl     a,#004h
 4885+ 3  1066	54 FE		        anl     a,#0feh
 4886+ 3  1068	70 1B		        jnz     ??0410
 4887+ 2			        endif
 4888+ 1			        top_ma  addc,r7,??0410,<004h>
 4889+ 2  106A	7F 51		        mov     r7,#arg0
 4890+ 2  106C	74 33		        mov     a,#arg1
 4891+ 2			        ifnb    <004h>
 4892+ 2			        set_cy  004h
 4893+ 3	N      0000	??0435  set     (004h and 1)
 4894+ 3	N      0000	        if      ??0435 eq 1
 4895+ 3			        setb    c
 4896+ 3			        else
 4897+ 3  106E	C3		        clr     c
 4898+ 3			        endif
 4899+ 2			        endif
 4900+ 2  106F	3F		        addc      a,r7
 4901+ 2			        ifnb    <004h>
 4902+ 2			        save_psw
 4903+ 3  1070	85 D0 70	        mov     saved_psw,PSW
 4904+ 2			        endif
 4905+ 2  1073	B4 84 0F	        cjne    a,#res,??0410
 4906+ 2			        ifnb    <004h>
 4907+ 2			        tst_psw <004h>,??0410
 4908+ 3  1076	E5 70		        mov     a,saved_psw
 4909+ 3  1078	54 C4		        anl     a,#0c4h
 4910+ 3  107A	64 04		        xrl     a,#004h
 4911+ 3  107C	54 FE		        anl     a,#0feh
 4912+ 3  107E	70 05		        jnz     ??0410
 4913+ 2			        endif
 4914+ 1
 4915+ 1			        eot     'd',??0410

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 89



 Line  I  Addr  Code            Source

 4916+ 2			        putc    #'d'
 4917+ 3  1080			??0437:
 4918+ 3			        ;jnb     SCON.1,putc_loop
 4919+ 3			        ;clr     SCON.1
 4920+ 3  1080	75 99 64	        mov     SBUF,#'d'
 4921+ 2  1083	80 06		        sjmp    ??0436
 4922+ 2  1085			??0410:  putc    #'?'
 4923+ 3  1085			??0438:
 4924+ 3			        ;jnb     SCON.1,putc_loop
 4925+ 3			        ;clr     SCON.1
 4926+ 3  1085	75 99 3F	        mov     SBUF,#'?'
 4927+ 2  1088	75 6E 01	        mov     fail,#001h
 4928+ 2  108B			??0436:
 4929+ 1
 4930+ 1			        ifb     <004h>
 4931+ 1
 4932+ 1			        top_mb  addc,a,??0414,<004h>
 4933+ 1			        top_mb  addc,dir0,??0414,<004h>
 4934+ 1
 4935+ 1			        eot     'e',??0414
 4936+ 1
 4937+ 1			        top_mc  addc,??0415,<004h>
 4938+ 1
 4939+ 1			        eot     'f',??0415
 4940+ 1			        endif
 4941:				        putc    #'1'
 4942+ 1  108B			??0439:
 4943+ 1			        ;jnb     SCON.1,putc_loop
 4944+ 1			        ;clr     SCON.1
 4945+ 1  108B	75 99 31	        mov     SBUF,#'1'
 4946:				        tst_alu addc,081h,093h,014h,084h     ;  CY /AC  OV
 4947+ 1
 4948+ 1	N      0081	        arg0    set 081h
 4949+ 1	N      0093	        arg1    set 093h
 4950+ 1	N      0014	        res     set 014h
 4951+ 1
 4952+ 1			        top_ma  addc,dir0,??0441,<084h>
 4953+ 2  108E	75 60 81	        mov     dir0,#arg0
 4954+ 2  1091	74 93		        mov     a,#arg1
 4955+ 2			        ifnb    <084h>
 4956+ 2			        set_cy  084h
 4957+ 3	N      0000	??0446  set     (084h and 1)
 4958+ 3	N      0000	        if      ??0446 eq 1
 4959+ 3			        setb    c
 4960+ 3			        else
 4961+ 3  1093	C3		        clr     c
 4962+ 3			        endif
 4963+ 2			        endif
 4964+ 2  1094	35 60		        addc      a,dir0
 4965+ 2			        ifnb    <084h>
 4966+ 2			        save_psw
 4967+ 3  1096	85 D0 70	        mov     saved_psw,PSW
 4968+ 2			        endif
 4969+ 2  1099	B4 14 6B	        cjne    a,#res,??0441
 4970+ 2			        ifnb    <084h>
 4971+ 2			        tst_psw <084h>,??0441

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 90



 Line  I  Addr  Code            Source

 4972+ 3  109C	E5 70		        mov     a,saved_psw
 4973+ 3  109E	54 C4		        anl     a,#0c4h
 4974+ 3  10A0	64 84		        xrl     a,#084h
 4975+ 3  10A2	54 FE		        anl     a,#0feh
 4976+ 3  10A4	70 61		        jnz     ??0441
 4977+ 2			        endif
 4978+ 1  10A6	78 60		        mov     r0,#dir0
 4979+ 1			        top_ma  addc,@r0,??0441,<084h>
 4980+ 2  10A8	76 81		        mov     @r0,#arg0
 4981+ 2  10AA	74 93		        mov     a,#arg1
 4982+ 2			        ifnb    <084h>
 4983+ 2			        set_cy  084h
 4984+ 3	N      0000	??0447  set     (084h and 1)
 4985+ 3	N      0000	        if      ??0447 eq 1
 4986+ 3			        setb    c
 4987+ 3			        else
 4988+ 3  10AC	C3		        clr     c
 4989+ 3			        endif
 4990+ 2			        endif
 4991+ 2  10AD	36		        addc      a,@r0
 4992+ 2			        ifnb    <084h>
 4993+ 2			        save_psw
 4994+ 3  10AE	85 D0 70	        mov     saved_psw,PSW
 4995+ 2			        endif
 4996+ 2  10B1	B4 14 53	        cjne    a,#res,??0441
 4997+ 2			        ifnb    <084h>
 4998+ 2			        tst_psw <084h>,??0441
 4999+ 3  10B4	E5 70		        mov     a,saved_psw
 5000+ 3  10B6	54 C4		        anl     a,#0c4h
 5001+ 3  10B8	64 84		        xrl     a,#084h
 5002+ 3  10BA	54 FE		        anl     a,#0feh
 5003+ 3  10BC	70 49		        jnz     ??0441
 5004+ 2			        endif
 5005+ 1  10BE	79 31		        mov     r1,#031h
 5006+ 1			        top_ma  addc,@r1,??0441,<084h>
 5007+ 2  10C0	77 81		        mov     @r1,#arg0
 5008+ 2  10C2	74 93		        mov     a,#arg1
 5009+ 2			        ifnb    <084h>
 5010+ 2			        set_cy  084h
 5011+ 3	N      0000	??0448  set     (084h and 1)
 5012+ 3	N      0000	        if      ??0448 eq 1
 5013+ 3			        setb    c
 5014+ 3			        else
 5015+ 3  10C4	C3		        clr     c
 5016+ 3			        endif
 5017+ 2			        endif
 5018+ 2  10C5	37		        addc      a,@r1
 5019+ 2			        ifnb    <084h>
 5020+ 2			        save_psw
 5021+ 3  10C6	85 D0 70	        mov     saved_psw,PSW
 5022+ 2			        endif
 5023+ 2  10C9	B4 14 3B	        cjne    a,#res,??0441
 5024+ 2			        ifnb    <084h>
 5025+ 2			        tst_psw <084h>,??0441
 5026+ 3  10CC	E5 70		        mov     a,saved_psw
 5027+ 3  10CE	54 C4		        anl     a,#0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 91



 Line  I  Addr  Code            Source

 5028+ 3  10D0	64 84		        xrl     a,#084h
 5029+ 3  10D2	54 FE		        anl     a,#0feh
 5030+ 3  10D4	70 31		        jnz     ??0441
 5031+ 2			        endif
 5032+ 1
 5033+ 1			        top_ma  addc,r0,??0441,<084h>
 5034+ 2  10D6	78 81		        mov     r0,#arg0
 5035+ 2  10D8	74 93		        mov     a,#arg1
 5036+ 2			        ifnb    <084h>
 5037+ 2			        set_cy  084h
 5038+ 3	N      0000	??0449  set     (084h and 1)
 5039+ 3	N      0000	        if      ??0449 eq 1
 5040+ 3			        setb    c
 5041+ 3			        else
 5042+ 3  10DA	C3		        clr     c
 5043+ 3			        endif
 5044+ 2			        endif
 5045+ 2  10DB	38		        addc      a,r0
 5046+ 2			        ifnb    <084h>
 5047+ 2			        save_psw
 5048+ 3  10DC	85 D0 70	        mov     saved_psw,PSW
 5049+ 2			        endif
 5050+ 2  10DF	B4 14 25	        cjne    a,#res,??0441
 5051+ 2			        ifnb    <084h>
 5052+ 2			        tst_psw <084h>,??0441
 5053+ 3  10E2	E5 70		        mov     a,saved_psw
 5054+ 3  10E4	54 C4		        anl     a,#0c4h
 5055+ 3  10E6	64 84		        xrl     a,#084h
 5056+ 3  10E8	54 FE		        anl     a,#0feh
 5057+ 3  10EA	70 1B		        jnz     ??0441
 5058+ 2			        endif
 5059+ 1			        top_ma  addc,r1,??0441,<084h>
 5060+ 2  10EC	79 81		        mov     r1,#arg0
 5061+ 2  10EE	74 93		        mov     a,#arg1
 5062+ 2			        ifnb    <084h>
 5063+ 2			        set_cy  084h
 5064+ 3	N      0000	??0450  set     (084h and 1)
 5065+ 3	N      0000	        if      ??0450 eq 1
 5066+ 3			        setb    c
 5067+ 3			        else
 5068+ 3  10F0	C3		        clr     c
 5069+ 3			        endif
 5070+ 2			        endif
 5071+ 2  10F1	39		        addc      a,r1
 5072+ 2			        ifnb    <084h>
 5073+ 2			        save_psw
 5074+ 3  10F2	85 D0 70	        mov     saved_psw,PSW
 5075+ 2			        endif
 5076+ 2  10F5	B4 14 0F	        cjne    a,#res,??0441
 5077+ 2			        ifnb    <084h>
 5078+ 2			        tst_psw <084h>,??0441
 5079+ 3  10F8	E5 70		        mov     a,saved_psw
 5080+ 3  10FA	54 C4		        anl     a,#0c4h
 5081+ 3  10FC	64 84		        xrl     a,#084h
 5082+ 3  10FE	54 FE		        anl     a,#0feh
 5083+ 3  1100	70 05		        jnz     ??0441

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 92



 Line  I  Addr  Code            Source

 5084+ 2			        endif
 5085+ 1
 5086+ 1			        eot     'a',??0441
 5087+ 2			        putc    #'a'
 5088+ 3  1102			??0452:
 5089+ 3			        ;jnb     SCON.1,putc_loop
 5090+ 3			        ;clr     SCON.1
 5091+ 3  1102	75 99 61	        mov     SBUF,#'a'
 5092+ 2  1105	80 06		        sjmp    ??0451
 5093+ 2  1107			??0441:  putc    #'?'
 5094+ 3  1107			??0453:
 5095+ 3			        ;jnb     SCON.1,putc_loop
 5096+ 3			        ;clr     SCON.1
 5097+ 3  1107	75 99 3F	        mov     SBUF,#'?'
 5098+ 2  110A	75 6E 01	        mov     fail,#001h
 5099+ 2  110D			??0451:
 5100+ 1
 5101+ 1			        top_ma  addc,r2,??0442,<084h>
 5102+ 2  110D	7A 81		        mov     r2,#arg0
 5103+ 2  110F	74 93		        mov     a,#arg1
 5104+ 2			        ifnb    <084h>
 5105+ 2			        set_cy  084h
 5106+ 3	N      0000	??0454  set     (084h and 1)
 5107+ 3	N      0000	        if      ??0454 eq 1
 5108+ 3			        setb    c
 5109+ 3			        else
 5110+ 3  1111	C3		        clr     c
 5111+ 3			        endif
 5112+ 2			        endif
 5113+ 2  1112	3A		        addc      a,r2
 5114+ 2			        ifnb    <084h>
 5115+ 2			        save_psw
 5116+ 3  1113	85 D0 70	        mov     saved_psw,PSW
 5117+ 2			        endif
 5118+ 2  1116	B4 14 25	        cjne    a,#res,??0442
 5119+ 2			        ifnb    <084h>
 5120+ 2			        tst_psw <084h>,??0442
 5121+ 3  1119	E5 70		        mov     a,saved_psw
 5122+ 3  111B	54 C4		        anl     a,#0c4h
 5123+ 3  111D	64 84		        xrl     a,#084h
 5124+ 3  111F	54 FE		        anl     a,#0feh
 5125+ 3  1121	70 1B		        jnz     ??0442
 5126+ 2			        endif
 5127+ 1			        top_ma  addc,r3,??0442,<084h>
 5128+ 2  1123	7B 81		        mov     r3,#arg0
 5129+ 2  1125	74 93		        mov     a,#arg1
 5130+ 2			        ifnb    <084h>
 5131+ 2			        set_cy  084h
 5132+ 3	N      0000	??0455  set     (084h and 1)
 5133+ 3	N      0000	        if      ??0455 eq 1
 5134+ 3			        setb    c
 5135+ 3			        else
 5136+ 3  1127	C3		        clr     c
 5137+ 3			        endif
 5138+ 2			        endif
 5139+ 2  1128	3B		        addc      a,r3

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 93



 Line  I  Addr  Code            Source

 5140+ 2			        ifnb    <084h>
 5141+ 2			        save_psw
 5142+ 3  1129	85 D0 70	        mov     saved_psw,PSW
 5143+ 2			        endif
 5144+ 2  112C	B4 14 0F	        cjne    a,#res,??0442
 5145+ 2			        ifnb    <084h>
 5146+ 2			        tst_psw <084h>,??0442
 5147+ 3  112F	E5 70		        mov     a,saved_psw
 5148+ 3  1131	54 C4		        anl     a,#0c4h
 5149+ 3  1133	64 84		        xrl     a,#084h
 5150+ 3  1135	54 FE		        anl     a,#0feh
 5151+ 3  1137	70 05		        jnz     ??0442
 5152+ 2			        endif
 5153+ 1
 5154+ 1			        eot     'b',??0442
 5155+ 2			        putc    #'b'
 5156+ 3  1139			??0457:
 5157+ 3			        ;jnb     SCON.1,putc_loop
 5158+ 3			        ;clr     SCON.1
 5159+ 3  1139	75 99 62	        mov     SBUF,#'b'
 5160+ 2  113C	80 06		        sjmp    ??0456
 5161+ 2  113E			??0442:  putc    #'?'
 5162+ 3  113E			??0458:
 5163+ 3			        ;jnb     SCON.1,putc_loop
 5164+ 3			        ;clr     SCON.1
 5165+ 3  113E	75 99 3F	        mov     SBUF,#'?'
 5166+ 2  1141	75 6E 01	        mov     fail,#001h
 5167+ 2  1144			??0456:
 5168+ 1
 5169+ 1			        top_ma  addc,r4,??0443,<084h>
 5170+ 2  1144	7C 81		        mov     r4,#arg0
 5171+ 2  1146	74 93		        mov     a,#arg1
 5172+ 2			        ifnb    <084h>
 5173+ 2			        set_cy  084h
 5174+ 3	N      0000	??0459  set     (084h and 1)
 5175+ 3	N      0000	        if      ??0459 eq 1
 5176+ 3			        setb    c
 5177+ 3			        else
 5178+ 3  1148	C3		        clr     c
 5179+ 3			        endif
 5180+ 2			        endif
 5181+ 2  1149	3C		        addc      a,r4
 5182+ 2			        ifnb    <084h>
 5183+ 2			        save_psw
 5184+ 3  114A	85 D0 70	        mov     saved_psw,PSW
 5185+ 2			        endif
 5186+ 2  114D	B4 14 25	        cjne    a,#res,??0443
 5187+ 2			        ifnb    <084h>
 5188+ 2			        tst_psw <084h>,??0443
 5189+ 3  1150	E5 70		        mov     a,saved_psw
 5190+ 3  1152	54 C4		        anl     a,#0c4h
 5191+ 3  1154	64 84		        xrl     a,#084h
 5192+ 3  1156	54 FE		        anl     a,#0feh
 5193+ 3  1158	70 1B		        jnz     ??0443
 5194+ 2			        endif
 5195+ 1			        top_ma  addc,r5,??0443,<084h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 94



 Line  I  Addr  Code            Source

 5196+ 2  115A	7D 81		        mov     r5,#arg0
 5197+ 2  115C	74 93		        mov     a,#arg1
 5198+ 2			        ifnb    <084h>
 5199+ 2			        set_cy  084h
 5200+ 3	N      0000	??0460  set     (084h and 1)
 5201+ 3	N      0000	        if      ??0460 eq 1
 5202+ 3			        setb    c
 5203+ 3			        else
 5204+ 3  115E	C3		        clr     c
 5205+ 3			        endif
 5206+ 2			        endif
 5207+ 2  115F	3D		        addc      a,r5
 5208+ 2			        ifnb    <084h>
 5209+ 2			        save_psw
 5210+ 3  1160	85 D0 70	        mov     saved_psw,PSW
 5211+ 2			        endif
 5212+ 2  1163	B4 14 0F	        cjne    a,#res,??0443
 5213+ 2			        ifnb    <084h>
 5214+ 2			        tst_psw <084h>,??0443
 5215+ 3  1166	E5 70		        mov     a,saved_psw
 5216+ 3  1168	54 C4		        anl     a,#0c4h
 5217+ 3  116A	64 84		        xrl     a,#084h
 5218+ 3  116C	54 FE		        anl     a,#0feh
 5219+ 3  116E	70 05		        jnz     ??0443
 5220+ 2			        endif
 5221+ 1
 5222+ 1			        eot     'c',??0443
 5223+ 2			        putc    #'c'
 5224+ 3  1170			??0462:
 5225+ 3			        ;jnb     SCON.1,putc_loop
 5226+ 3			        ;clr     SCON.1
 5227+ 3  1170	75 99 63	        mov     SBUF,#'c'
 5228+ 2  1173	80 06		        sjmp    ??0461
 5229+ 2  1175			??0443:  putc    #'?'
 5230+ 3  1175			??0463:
 5231+ 3			        ;jnb     SCON.1,putc_loop
 5232+ 3			        ;clr     SCON.1
 5233+ 3  1175	75 99 3F	        mov     SBUF,#'?'
 5234+ 2  1178	75 6E 01	        mov     fail,#001h
 5235+ 2  117B			??0461:
 5236+ 1
 5237+ 1			        top_ma  addc,r6,??0440,<084h>
 5238+ 2  117B	7E 81		        mov     r6,#arg0
 5239+ 2  117D	74 93		        mov     a,#arg1
 5240+ 2			        ifnb    <084h>
 5241+ 2			        set_cy  084h
 5242+ 3	N      0000	??0464  set     (084h and 1)
 5243+ 3	N      0000	        if      ??0464 eq 1
 5244+ 3			        setb    c
 5245+ 3			        else
 5246+ 3  117F	C3		        clr     c
 5247+ 3			        endif
 5248+ 2			        endif
 5249+ 2  1180	3E		        addc      a,r6
 5250+ 2			        ifnb    <084h>
 5251+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 95



 Line  I  Addr  Code            Source

 5252+ 3  1181	85 D0 70	        mov     saved_psw,PSW
 5253+ 2			        endif
 5254+ 2  1184	B4 14 25	        cjne    a,#res,??0440
 5255+ 2			        ifnb    <084h>
 5256+ 2			        tst_psw <084h>,??0440
 5257+ 3  1187	E5 70		        mov     a,saved_psw
 5258+ 3  1189	54 C4		        anl     a,#0c4h
 5259+ 3  118B	64 84		        xrl     a,#084h
 5260+ 3  118D	54 FE		        anl     a,#0feh
 5261+ 3  118F	70 1B		        jnz     ??0440
 5262+ 2			        endif
 5263+ 1			        top_ma  addc,r7,??0440,<084h>
 5264+ 2  1191	7F 81		        mov     r7,#arg0
 5265+ 2  1193	74 93		        mov     a,#arg1
 5266+ 2			        ifnb    <084h>
 5267+ 2			        set_cy  084h
 5268+ 3	N      0000	??0465  set     (084h and 1)
 5269+ 3	N      0000	        if      ??0465 eq 1
 5270+ 3			        setb    c
 5271+ 3			        else
 5272+ 3  1195	C3		        clr     c
 5273+ 3			        endif
 5274+ 2			        endif
 5275+ 2  1196	3F		        addc      a,r7
 5276+ 2			        ifnb    <084h>
 5277+ 2			        save_psw
 5278+ 3  1197	85 D0 70	        mov     saved_psw,PSW
 5279+ 2			        endif
 5280+ 2  119A	B4 14 0F	        cjne    a,#res,??0440
 5281+ 2			        ifnb    <084h>
 5282+ 2			        tst_psw <084h>,??0440
 5283+ 3  119D	E5 70		        mov     a,saved_psw
 5284+ 3  119F	54 C4		        anl     a,#0c4h
 5285+ 3  11A1	64 84		        xrl     a,#084h
 5286+ 3  11A3	54 FE		        anl     a,#0feh
 5287+ 3  11A5	70 05		        jnz     ??0440
 5288+ 2			        endif
 5289+ 1
 5290+ 1			        eot     'd',??0440
 5291+ 2			        putc    #'d'
 5292+ 3  11A7			??0467:
 5293+ 3			        ;jnb     SCON.1,putc_loop
 5294+ 3			        ;clr     SCON.1
 5295+ 3  11A7	75 99 64	        mov     SBUF,#'d'
 5296+ 2  11AA	80 06		        sjmp    ??0466
 5297+ 2  11AC			??0440:  putc    #'?'
 5298+ 3  11AC			??0468:
 5299+ 3			        ;jnb     SCON.1,putc_loop
 5300+ 3			        ;clr     SCON.1
 5301+ 3  11AC	75 99 3F	        mov     SBUF,#'?'
 5302+ 2  11AF	75 6E 01	        mov     fail,#001h
 5303+ 2  11B2			??0466:
 5304+ 1
 5305+ 1			        ifb     <084h>
 5306+ 1
 5307+ 1			        top_mb  addc,a,??0444,<084h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 96



 Line  I  Addr  Code            Source

 5308+ 1			        top_mb  addc,dir0,??0444,<084h>
 5309+ 1
 5310+ 1			        eot     'e',??0444
 5311+ 1
 5312+ 1			        top_mc  addc,??0445,<084h>
 5313+ 1
 5314+ 1			        eot     'f',??0445
 5315+ 1			        endif
 5316:				        putc    #'2'
 5317+ 1  11B2			??0469:
 5318+ 1			        ;jnb     SCON.1,putc_loop
 5319+ 1			        ;clr     SCON.1
 5320+ 1  11B2	75 99 32	        mov     SBUF,#'2'
 5321:				        tst_alu addc,088h,098h,020h,0c4h     ;  CY  AC  OV
 5322+ 1
 5323+ 1	N      0088	        arg0    set 088h
 5324+ 1	N      0098	        arg1    set 098h
 5325+ 1	N      0020	        res     set 020h
 5326+ 1
 5327+ 1			        top_ma  addc,dir0,??0471,<0c4h>
 5328+ 2  11B5	75 60 88	        mov     dir0,#arg0
 5329+ 2  11B8	74 98		        mov     a,#arg1
 5330+ 2			        ifnb    <0c4h>
 5331+ 2			        set_cy  0c4h
 5332+ 3	N      0000	??0476  set     (0c4h and 1)
 5333+ 3	N      0000	        if      ??0476 eq 1
 5334+ 3			        setb    c
 5335+ 3			        else
 5336+ 3  11BA	C3		        clr     c
 5337+ 3			        endif
 5338+ 2			        endif
 5339+ 2  11BB	35 60		        addc      a,dir0
 5340+ 2			        ifnb    <0c4h>
 5341+ 2			        save_psw
 5342+ 3  11BD	85 D0 70	        mov     saved_psw,PSW
 5343+ 2			        endif
 5344+ 2  11C0	B4 20 6B	        cjne    a,#res,??0471
 5345+ 2			        ifnb    <0c4h>
 5346+ 2			        tst_psw <0c4h>,??0471
 5347+ 3  11C3	E5 70		        mov     a,saved_psw
 5348+ 3  11C5	54 C4		        anl     a,#0c4h
 5349+ 3  11C7	64 C4		        xrl     a,#0c4h
 5350+ 3  11C9	54 FE		        anl     a,#0feh
 5351+ 3  11CB	70 61		        jnz     ??0471
 5352+ 2			        endif
 5353+ 1  11CD	78 60		        mov     r0,#dir0
 5354+ 1			        top_ma  addc,@r0,??0471,<0c4h>
 5355+ 2  11CF	76 88		        mov     @r0,#arg0
 5356+ 2  11D1	74 98		        mov     a,#arg1
 5357+ 2			        ifnb    <0c4h>
 5358+ 2			        set_cy  0c4h
 5359+ 3	N      0000	??0477  set     (0c4h and 1)
 5360+ 3	N      0000	        if      ??0477 eq 1
 5361+ 3			        setb    c
 5362+ 3			        else
 5363+ 3  11D3	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 97



 Line  I  Addr  Code            Source

 5364+ 3			        endif
 5365+ 2			        endif
 5366+ 2  11D4	36		        addc      a,@r0
 5367+ 2			        ifnb    <0c4h>
 5368+ 2			        save_psw
 5369+ 3  11D5	85 D0 70	        mov     saved_psw,PSW
 5370+ 2			        endif
 5371+ 2  11D8	B4 20 53	        cjne    a,#res,??0471
 5372+ 2			        ifnb    <0c4h>
 5373+ 2			        tst_psw <0c4h>,??0471
 5374+ 3  11DB	E5 70		        mov     a,saved_psw
 5375+ 3  11DD	54 C4		        anl     a,#0c4h
 5376+ 3  11DF	64 C4		        xrl     a,#0c4h
 5377+ 3  11E1	54 FE		        anl     a,#0feh
 5378+ 3  11E3	70 49		        jnz     ??0471
 5379+ 2			        endif
 5380+ 1  11E5	79 31		        mov     r1,#031h
 5381+ 1			        top_ma  addc,@r1,??0471,<0c4h>
 5382+ 2  11E7	77 88		        mov     @r1,#arg0
 5383+ 2  11E9	74 98		        mov     a,#arg1
 5384+ 2			        ifnb    <0c4h>
 5385+ 2			        set_cy  0c4h
 5386+ 3	N      0000	??0478  set     (0c4h and 1)
 5387+ 3	N      0000	        if      ??0478 eq 1
 5388+ 3			        setb    c
 5389+ 3			        else
 5390+ 3  11EB	C3		        clr     c
 5391+ 3			        endif
 5392+ 2			        endif
 5393+ 2  11EC	37		        addc      a,@r1
 5394+ 2			        ifnb    <0c4h>
 5395+ 2			        save_psw
 5396+ 3  11ED	85 D0 70	        mov     saved_psw,PSW
 5397+ 2			        endif
 5398+ 2  11F0	B4 20 3B	        cjne    a,#res,??0471
 5399+ 2			        ifnb    <0c4h>
 5400+ 2			        tst_psw <0c4h>,??0471
 5401+ 3  11F3	E5 70		        mov     a,saved_psw
 5402+ 3  11F5	54 C4		        anl     a,#0c4h
 5403+ 3  11F7	64 C4		        xrl     a,#0c4h
 5404+ 3  11F9	54 FE		        anl     a,#0feh
 5405+ 3  11FB	70 31		        jnz     ??0471
 5406+ 2			        endif
 5407+ 1
 5408+ 1			        top_ma  addc,r0,??0471,<0c4h>
 5409+ 2  11FD	78 88		        mov     r0,#arg0
 5410+ 2  11FF	74 98		        mov     a,#arg1
 5411+ 2			        ifnb    <0c4h>
 5412+ 2			        set_cy  0c4h
 5413+ 3	N      0000	??0479  set     (0c4h and 1)
 5414+ 3	N      0000	        if      ??0479 eq 1
 5415+ 3			        setb    c
 5416+ 3			        else
 5417+ 3  1201	C3		        clr     c
 5418+ 3			        endif
 5419+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 98



 Line  I  Addr  Code            Source

 5420+ 2  1202	38		        addc      a,r0
 5421+ 2			        ifnb    <0c4h>
 5422+ 2			        save_psw
 5423+ 3  1203	85 D0 70	        mov     saved_psw,PSW
 5424+ 2			        endif
 5425+ 2  1206	B4 20 25	        cjne    a,#res,??0471
 5426+ 2			        ifnb    <0c4h>
 5427+ 2			        tst_psw <0c4h>,??0471
 5428+ 3  1209	E5 70		        mov     a,saved_psw
 5429+ 3  120B	54 C4		        anl     a,#0c4h
 5430+ 3  120D	64 C4		        xrl     a,#0c4h
 5431+ 3  120F	54 FE		        anl     a,#0feh
 5432+ 3  1211	70 1B		        jnz     ??0471
 5433+ 2			        endif
 5434+ 1			        top_ma  addc,r1,??0471,<0c4h>
 5435+ 2  1213	79 88		        mov     r1,#arg0
 5436+ 2  1215	74 98		        mov     a,#arg1
 5437+ 2			        ifnb    <0c4h>
 5438+ 2			        set_cy  0c4h
 5439+ 3	N      0000	??0480  set     (0c4h and 1)
 5440+ 3	N      0000	        if      ??0480 eq 1
 5441+ 3			        setb    c
 5442+ 3			        else
 5443+ 3  1217	C3		        clr     c
 5444+ 3			        endif
 5445+ 2			        endif
 5446+ 2  1218	39		        addc      a,r1
 5447+ 2			        ifnb    <0c4h>
 5448+ 2			        save_psw
 5449+ 3  1219	85 D0 70	        mov     saved_psw,PSW
 5450+ 2			        endif
 5451+ 2  121C	B4 20 0F	        cjne    a,#res,??0471
 5452+ 2			        ifnb    <0c4h>
 5453+ 2			        tst_psw <0c4h>,??0471
 5454+ 3  121F	E5 70		        mov     a,saved_psw
 5455+ 3  1221	54 C4		        anl     a,#0c4h
 5456+ 3  1223	64 C4		        xrl     a,#0c4h
 5457+ 3  1225	54 FE		        anl     a,#0feh
 5458+ 3  1227	70 05		        jnz     ??0471
 5459+ 2			        endif
 5460+ 1
 5461+ 1			        eot     'a',??0471
 5462+ 2			        putc    #'a'
 5463+ 3  1229			??0482:
 5464+ 3			        ;jnb     SCON.1,putc_loop
 5465+ 3			        ;clr     SCON.1
 5466+ 3  1229	75 99 61	        mov     SBUF,#'a'
 5467+ 2  122C	80 06		        sjmp    ??0481
 5468+ 2  122E			??0471:  putc    #'?'
 5469+ 3  122E			??0483:
 5470+ 3			        ;jnb     SCON.1,putc_loop
 5471+ 3			        ;clr     SCON.1
 5472+ 3  122E	75 99 3F	        mov     SBUF,#'?'
 5473+ 2  1231	75 6E 01	        mov     fail,#001h
 5474+ 2  1234			??0481:
 5475+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 99



 Line  I  Addr  Code            Source

 5476+ 1			        top_ma  addc,r2,??0472,<0c4h>
 5477+ 2  1234	7A 88		        mov     r2,#arg0
 5478+ 2  1236	74 98		        mov     a,#arg1
 5479+ 2			        ifnb    <0c4h>
 5480+ 2			        set_cy  0c4h
 5481+ 3	N      0000	??0484  set     (0c4h and 1)
 5482+ 3	N      0000	        if      ??0484 eq 1
 5483+ 3			        setb    c
 5484+ 3			        else
 5485+ 3  1238	C3		        clr     c
 5486+ 3			        endif
 5487+ 2			        endif
 5488+ 2  1239	3A		        addc      a,r2
 5489+ 2			        ifnb    <0c4h>
 5490+ 2			        save_psw
 5491+ 3  123A	85 D0 70	        mov     saved_psw,PSW
 5492+ 2			        endif
 5493+ 2  123D	B4 20 25	        cjne    a,#res,??0472
 5494+ 2			        ifnb    <0c4h>
 5495+ 2			        tst_psw <0c4h>,??0472
 5496+ 3  1240	E5 70		        mov     a,saved_psw
 5497+ 3  1242	54 C4		        anl     a,#0c4h
 5498+ 3  1244	64 C4		        xrl     a,#0c4h
 5499+ 3  1246	54 FE		        anl     a,#0feh
 5500+ 3  1248	70 1B		        jnz     ??0472
 5501+ 2			        endif
 5502+ 1			        top_ma  addc,r3,??0472,<0c4h>
 5503+ 2  124A	7B 88		        mov     r3,#arg0
 5504+ 2  124C	74 98		        mov     a,#arg1
 5505+ 2			        ifnb    <0c4h>
 5506+ 2			        set_cy  0c4h
 5507+ 3	N      0000	??0485  set     (0c4h and 1)
 5508+ 3	N      0000	        if      ??0485 eq 1
 5509+ 3			        setb    c
 5510+ 3			        else
 5511+ 3  124E	C3		        clr     c
 5512+ 3			        endif
 5513+ 2			        endif
 5514+ 2  124F	3B		        addc      a,r3
 5515+ 2			        ifnb    <0c4h>
 5516+ 2			        save_psw
 5517+ 3  1250	85 D0 70	        mov     saved_psw,PSW
 5518+ 2			        endif
 5519+ 2  1253	B4 20 0F	        cjne    a,#res,??0472
 5520+ 2			        ifnb    <0c4h>
 5521+ 2			        tst_psw <0c4h>,??0472
 5522+ 3  1256	E5 70		        mov     a,saved_psw
 5523+ 3  1258	54 C4		        anl     a,#0c4h
 5524+ 3  125A	64 C4		        xrl     a,#0c4h
 5525+ 3  125C	54 FE		        anl     a,#0feh
 5526+ 3  125E	70 05		        jnz     ??0472
 5527+ 2			        endif
 5528+ 1
 5529+ 1			        eot     'b',??0472
 5530+ 2			        putc    #'b'
 5531+ 3  1260			??0487:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 100



 Line  I  Addr  Code            Source

 5532+ 3			        ;jnb     SCON.1,putc_loop
 5533+ 3			        ;clr     SCON.1
 5534+ 3  1260	75 99 62	        mov     SBUF,#'b'
 5535+ 2  1263	80 06		        sjmp    ??0486
 5536+ 2  1265			??0472:  putc    #'?'
 5537+ 3  1265			??0488:
 5538+ 3			        ;jnb     SCON.1,putc_loop
 5539+ 3			        ;clr     SCON.1
 5540+ 3  1265	75 99 3F	        mov     SBUF,#'?'
 5541+ 2  1268	75 6E 01	        mov     fail,#001h
 5542+ 2  126B			??0486:
 5543+ 1
 5544+ 1			        top_ma  addc,r4,??0473,<0c4h>
 5545+ 2  126B	7C 88		        mov     r4,#arg0
 5546+ 2  126D	74 98		        mov     a,#arg1
 5547+ 2			        ifnb    <0c4h>
 5548+ 2			        set_cy  0c4h
 5549+ 3	N      0000	??0489  set     (0c4h and 1)
 5550+ 3	N      0000	        if      ??0489 eq 1
 5551+ 3			        setb    c
 5552+ 3			        else
 5553+ 3  126F	C3		        clr     c
 5554+ 3			        endif
 5555+ 2			        endif
 5556+ 2  1270	3C		        addc      a,r4
 5557+ 2			        ifnb    <0c4h>
 5558+ 2			        save_psw
 5559+ 3  1271	85 D0 70	        mov     saved_psw,PSW
 5560+ 2			        endif
 5561+ 2  1274	B4 20 25	        cjne    a,#res,??0473
 5562+ 2			        ifnb    <0c4h>
 5563+ 2			        tst_psw <0c4h>,??0473
 5564+ 3  1277	E5 70		        mov     a,saved_psw
 5565+ 3  1279	54 C4		        anl     a,#0c4h
 5566+ 3  127B	64 C4		        xrl     a,#0c4h
 5567+ 3  127D	54 FE		        anl     a,#0feh
 5568+ 3  127F	70 1B		        jnz     ??0473
 5569+ 2			        endif
 5570+ 1			        top_ma  addc,r5,??0473,<0c4h>
 5571+ 2  1281	7D 88		        mov     r5,#arg0
 5572+ 2  1283	74 98		        mov     a,#arg1
 5573+ 2			        ifnb    <0c4h>
 5574+ 2			        set_cy  0c4h
 5575+ 3	N      0000	??0490  set     (0c4h and 1)
 5576+ 3	N      0000	        if      ??0490 eq 1
 5577+ 3			        setb    c
 5578+ 3			        else
 5579+ 3  1285	C3		        clr     c
 5580+ 3			        endif
 5581+ 2			        endif
 5582+ 2  1286	3D		        addc      a,r5
 5583+ 2			        ifnb    <0c4h>
 5584+ 2			        save_psw
 5585+ 3  1287	85 D0 70	        mov     saved_psw,PSW
 5586+ 2			        endif
 5587+ 2  128A	B4 20 0F	        cjne    a,#res,??0473

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 101



 Line  I  Addr  Code            Source

 5588+ 2			        ifnb    <0c4h>
 5589+ 2			        tst_psw <0c4h>,??0473
 5590+ 3  128D	E5 70		        mov     a,saved_psw
 5591+ 3  128F	54 C4		        anl     a,#0c4h
 5592+ 3  1291	64 C4		        xrl     a,#0c4h
 5593+ 3  1293	54 FE		        anl     a,#0feh
 5594+ 3  1295	70 05		        jnz     ??0473
 5595+ 2			        endif
 5596+ 1
 5597+ 1			        eot     'c',??0473
 5598+ 2			        putc    #'c'
 5599+ 3  1297			??0492:
 5600+ 3			        ;jnb     SCON.1,putc_loop
 5601+ 3			        ;clr     SCON.1
 5602+ 3  1297	75 99 63	        mov     SBUF,#'c'
 5603+ 2  129A	80 06		        sjmp    ??0491
 5604+ 2  129C			??0473:  putc    #'?'
 5605+ 3  129C			??0493:
 5606+ 3			        ;jnb     SCON.1,putc_loop
 5607+ 3			        ;clr     SCON.1
 5608+ 3  129C	75 99 3F	        mov     SBUF,#'?'
 5609+ 2  129F	75 6E 01	        mov     fail,#001h
 5610+ 2  12A2			??0491:
 5611+ 1
 5612+ 1			        top_ma  addc,r6,??0470,<0c4h>
 5613+ 2  12A2	7E 88		        mov     r6,#arg0
 5614+ 2  12A4	74 98		        mov     a,#arg1
 5615+ 2			        ifnb    <0c4h>
 5616+ 2			        set_cy  0c4h
 5617+ 3	N      0000	??0494  set     (0c4h and 1)
 5618+ 3	N      0000	        if      ??0494 eq 1
 5619+ 3			        setb    c
 5620+ 3			        else
 5621+ 3  12A6	C3		        clr     c
 5622+ 3			        endif
 5623+ 2			        endif
 5624+ 2  12A7	3E		        addc      a,r6
 5625+ 2			        ifnb    <0c4h>
 5626+ 2			        save_psw
 5627+ 3  12A8	85 D0 70	        mov     saved_psw,PSW
 5628+ 2			        endif
 5629+ 2  12AB	B4 20 25	        cjne    a,#res,??0470
 5630+ 2			        ifnb    <0c4h>
 5631+ 2			        tst_psw <0c4h>,??0470
 5632+ 3  12AE	E5 70		        mov     a,saved_psw
 5633+ 3  12B0	54 C4		        anl     a,#0c4h
 5634+ 3  12B2	64 C4		        xrl     a,#0c4h
 5635+ 3  12B4	54 FE		        anl     a,#0feh
 5636+ 3  12B6	70 1B		        jnz     ??0470
 5637+ 2			        endif
 5638+ 1			        top_ma  addc,r7,??0470,<0c4h>
 5639+ 2  12B8	7F 88		        mov     r7,#arg0
 5640+ 2  12BA	74 98		        mov     a,#arg1
 5641+ 2			        ifnb    <0c4h>
 5642+ 2			        set_cy  0c4h
 5643+ 3	N      0000	??0495  set     (0c4h and 1)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 102



 Line  I  Addr  Code            Source

 5644+ 3	N      0000	        if      ??0495 eq 1
 5645+ 3			        setb    c
 5646+ 3			        else
 5647+ 3  12BC	C3		        clr     c
 5648+ 3			        endif
 5649+ 2			        endif
 5650+ 2  12BD	3F		        addc      a,r7
 5651+ 2			        ifnb    <0c4h>
 5652+ 2			        save_psw
 5653+ 3  12BE	85 D0 70	        mov     saved_psw,PSW
 5654+ 2			        endif
 5655+ 2  12C1	B4 20 0F	        cjne    a,#res,??0470
 5656+ 2			        ifnb    <0c4h>
 5657+ 2			        tst_psw <0c4h>,??0470
 5658+ 3  12C4	E5 70		        mov     a,saved_psw
 5659+ 3  12C6	54 C4		        anl     a,#0c4h
 5660+ 3  12C8	64 C4		        xrl     a,#0c4h
 5661+ 3  12CA	54 FE		        anl     a,#0feh
 5662+ 3  12CC	70 05		        jnz     ??0470
 5663+ 2			        endif
 5664+ 1
 5665+ 1			        eot     'd',??0470
 5666+ 2			        putc    #'d'
 5667+ 3  12CE			??0497:
 5668+ 3			        ;jnb     SCON.1,putc_loop
 5669+ 3			        ;clr     SCON.1
 5670+ 3  12CE	75 99 64	        mov     SBUF,#'d'
 5671+ 2  12D1	80 06		        sjmp    ??0496
 5672+ 2  12D3			??0470:  putc    #'?'
 5673+ 3  12D3			??0498:
 5674+ 3			        ;jnb     SCON.1,putc_loop
 5675+ 3			        ;clr     SCON.1
 5676+ 3  12D3	75 99 3F	        mov     SBUF,#'?'
 5677+ 2  12D6	75 6E 01	        mov     fail,#001h
 5678+ 2  12D9			??0496:
 5679+ 1
 5680+ 1			        ifb     <0c4h>
 5681+ 1
 5682+ 1			        top_mb  addc,a,??0474,<0c4h>
 5683+ 1			        top_mb  addc,dir0,??0474,<0c4h>
 5684+ 1
 5685+ 1			        eot     'e',??0474
 5686+ 1
 5687+ 1			        top_mc  addc,??0475,<0c4h>
 5688+ 1
 5689+ 1			        eot     'f',??0475
 5690+ 1			        endif
 5691:				        putc    #'3'
 5692+ 1  12D9			??0499:
 5693+ 1			        ;jnb     SCON.1,putc_loop
 5694+ 1			        ;clr     SCON.1
 5695+ 1  12D9	75 99 33	        mov     SBUF,#'3'
 5696:				        tst_alu addc,088h,098h,021h,0c5h     ;  CY  AC  OV (CY input)
 5697+ 1
 5698+ 1	N      0088	        arg0    set 088h
 5699+ 1	N      0098	        arg1    set 098h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 103



 Line  I  Addr  Code            Source

 5700+ 1	N      0021	        res     set 021h
 5701+ 1
 5702+ 1			        top_ma  addc,dir0,??0501,<0c5h>
 5703+ 2  12DC	75 60 88	        mov     dir0,#arg0
 5704+ 2  12DF	74 98		        mov     a,#arg1
 5705+ 2			        ifnb    <0c5h>
 5706+ 2			        set_cy  0c5h
 5707+ 3	N      0001	??0506  set     (0c5h and 1)
 5708+ 3	N      FFFF	        if      ??0506 eq 1
 5709+ 3  12E1	D3		        setb    c
 5710+ 3			        else
 5711+ 3			        clr     c
 5712+ 3			        endif
 5713+ 2			        endif
 5714+ 2  12E2	35 60		        addc      a,dir0
 5715+ 2			        ifnb    <0c5h>
 5716+ 2			        save_psw
 5717+ 3  12E4	85 D0 70	        mov     saved_psw,PSW
 5718+ 2			        endif
 5719+ 2  12E7	B4 21 6B	        cjne    a,#res,??0501
 5720+ 2			        ifnb    <0c5h>
 5721+ 2			        tst_psw <0c5h>,??0501
 5722+ 3  12EA	E5 70		        mov     a,saved_psw
 5723+ 3  12EC	54 C4		        anl     a,#0c4h
 5724+ 3  12EE	64 C5		        xrl     a,#0c5h
 5725+ 3  12F0	54 FE		        anl     a,#0feh
 5726+ 3  12F2	70 61		        jnz     ??0501
 5727+ 2			        endif
 5728+ 1  12F4	78 60		        mov     r0,#dir0
 5729+ 1			        top_ma  addc,@r0,??0501,<0c5h>
 5730+ 2  12F6	76 88		        mov     @r0,#arg0
 5731+ 2  12F8	74 98		        mov     a,#arg1
 5732+ 2			        ifnb    <0c5h>
 5733+ 2			        set_cy  0c5h
 5734+ 3	N      0001	??0507  set     (0c5h and 1)
 5735+ 3	N      FFFF	        if      ??0507 eq 1
 5736+ 3  12FA	D3		        setb    c
 5737+ 3			        else
 5738+ 3			        clr     c
 5739+ 3			        endif
 5740+ 2			        endif
 5741+ 2  12FB	36		        addc      a,@r0
 5742+ 2			        ifnb    <0c5h>
 5743+ 2			        save_psw
 5744+ 3  12FC	85 D0 70	        mov     saved_psw,PSW
 5745+ 2			        endif
 5746+ 2  12FF	B4 21 53	        cjne    a,#res,??0501
 5747+ 2			        ifnb    <0c5h>
 5748+ 2			        tst_psw <0c5h>,??0501
 5749+ 3  1302	E5 70		        mov     a,saved_psw
 5750+ 3  1304	54 C4		        anl     a,#0c4h
 5751+ 3  1306	64 C5		        xrl     a,#0c5h
 5752+ 3  1308	54 FE		        anl     a,#0feh
 5753+ 3  130A	70 49		        jnz     ??0501
 5754+ 2			        endif
 5755+ 1  130C	79 31		        mov     r1,#031h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 104



 Line  I  Addr  Code            Source

 5756+ 1			        top_ma  addc,@r1,??0501,<0c5h>
 5757+ 2  130E	77 88		        mov     @r1,#arg0
 5758+ 2  1310	74 98		        mov     a,#arg1
 5759+ 2			        ifnb    <0c5h>
 5760+ 2			        set_cy  0c5h
 5761+ 3	N      0001	??0508  set     (0c5h and 1)
 5762+ 3	N      FFFF	        if      ??0508 eq 1
 5763+ 3  1312	D3		        setb    c
 5764+ 3			        else
 5765+ 3			        clr     c
 5766+ 3			        endif
 5767+ 2			        endif
 5768+ 2  1313	37		        addc      a,@r1
 5769+ 2			        ifnb    <0c5h>
 5770+ 2			        save_psw
 5771+ 3  1314	85 D0 70	        mov     saved_psw,PSW
 5772+ 2			        endif
 5773+ 2  1317	B4 21 3B	        cjne    a,#res,??0501
 5774+ 2			        ifnb    <0c5h>
 5775+ 2			        tst_psw <0c5h>,??0501
 5776+ 3  131A	E5 70		        mov     a,saved_psw
 5777+ 3  131C	54 C4		        anl     a,#0c4h
 5778+ 3  131E	64 C5		        xrl     a,#0c5h
 5779+ 3  1320	54 FE		        anl     a,#0feh
 5780+ 3  1322	70 31		        jnz     ??0501
 5781+ 2			        endif
 5782+ 1
 5783+ 1			        top_ma  addc,r0,??0501,<0c5h>
 5784+ 2  1324	78 88		        mov     r0,#arg0
 5785+ 2  1326	74 98		        mov     a,#arg1
 5786+ 2			        ifnb    <0c5h>
 5787+ 2			        set_cy  0c5h
 5788+ 3	N      0001	??0509  set     (0c5h and 1)
 5789+ 3	N      FFFF	        if      ??0509 eq 1
 5790+ 3  1328	D3		        setb    c
 5791+ 3			        else
 5792+ 3			        clr     c
 5793+ 3			        endif
 5794+ 2			        endif
 5795+ 2  1329	38		        addc      a,r0
 5796+ 2			        ifnb    <0c5h>
 5797+ 2			        save_psw
 5798+ 3  132A	85 D0 70	        mov     saved_psw,PSW
 5799+ 2			        endif
 5800+ 2  132D	B4 21 25	        cjne    a,#res,??0501
 5801+ 2			        ifnb    <0c5h>
 5802+ 2			        tst_psw <0c5h>,??0501
 5803+ 3  1330	E5 70		        mov     a,saved_psw
 5804+ 3  1332	54 C4		        anl     a,#0c4h
 5805+ 3  1334	64 C5		        xrl     a,#0c5h
 5806+ 3  1336	54 FE		        anl     a,#0feh
 5807+ 3  1338	70 1B		        jnz     ??0501
 5808+ 2			        endif
 5809+ 1			        top_ma  addc,r1,??0501,<0c5h>
 5810+ 2  133A	79 88		        mov     r1,#arg0
 5811+ 2  133C	74 98		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 105



 Line  I  Addr  Code            Source

 5812+ 2			        ifnb    <0c5h>
 5813+ 2			        set_cy  0c5h
 5814+ 3	N      0001	??0510  set     (0c5h and 1)
 5815+ 3	N      FFFF	        if      ??0510 eq 1
 5816+ 3  133E	D3		        setb    c
 5817+ 3			        else
 5818+ 3			        clr     c
 5819+ 3			        endif
 5820+ 2			        endif
 5821+ 2  133F	39		        addc      a,r1
 5822+ 2			        ifnb    <0c5h>
 5823+ 2			        save_psw
 5824+ 3  1340	85 D0 70	        mov     saved_psw,PSW
 5825+ 2			        endif
 5826+ 2  1343	B4 21 0F	        cjne    a,#res,??0501
 5827+ 2			        ifnb    <0c5h>
 5828+ 2			        tst_psw <0c5h>,??0501
 5829+ 3  1346	E5 70		        mov     a,saved_psw
 5830+ 3  1348	54 C4		        anl     a,#0c4h
 5831+ 3  134A	64 C5		        xrl     a,#0c5h
 5832+ 3  134C	54 FE		        anl     a,#0feh
 5833+ 3  134E	70 05		        jnz     ??0501
 5834+ 2			        endif
 5835+ 1
 5836+ 1			        eot     'a',??0501
 5837+ 2			        putc    #'a'
 5838+ 3  1350			??0512:
 5839+ 3			        ;jnb     SCON.1,putc_loop
 5840+ 3			        ;clr     SCON.1
 5841+ 3  1350	75 99 61	        mov     SBUF,#'a'
 5842+ 2  1353	80 06		        sjmp    ??0511
 5843+ 2  1355			??0501:  putc    #'?'
 5844+ 3  1355			??0513:
 5845+ 3			        ;jnb     SCON.1,putc_loop
 5846+ 3			        ;clr     SCON.1
 5847+ 3  1355	75 99 3F	        mov     SBUF,#'?'
 5848+ 2  1358	75 6E 01	        mov     fail,#001h
 5849+ 2  135B			??0511:
 5850+ 1
 5851+ 1			        top_ma  addc,r2,??0502,<0c5h>
 5852+ 2  135B	7A 88		        mov     r2,#arg0
 5853+ 2  135D	74 98		        mov     a,#arg1
 5854+ 2			        ifnb    <0c5h>
 5855+ 2			        set_cy  0c5h
 5856+ 3	N      0001	??0514  set     (0c5h and 1)
 5857+ 3	N      FFFF	        if      ??0514 eq 1
 5858+ 3  135F	D3		        setb    c
 5859+ 3			        else
 5860+ 3			        clr     c
 5861+ 3			        endif
 5862+ 2			        endif
 5863+ 2  1360	3A		        addc      a,r2
 5864+ 2			        ifnb    <0c5h>
 5865+ 2			        save_psw
 5866+ 3  1361	85 D0 70	        mov     saved_psw,PSW
 5867+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 106



 Line  I  Addr  Code            Source

 5868+ 2  1364	B4 21 25	        cjne    a,#res,??0502
 5869+ 2			        ifnb    <0c5h>
 5870+ 2			        tst_psw <0c5h>,??0502
 5871+ 3  1367	E5 70		        mov     a,saved_psw
 5872+ 3  1369	54 C4		        anl     a,#0c4h
 5873+ 3  136B	64 C5		        xrl     a,#0c5h
 5874+ 3  136D	54 FE		        anl     a,#0feh
 5875+ 3  136F	70 1B		        jnz     ??0502
 5876+ 2			        endif
 5877+ 1			        top_ma  addc,r3,??0502,<0c5h>
 5878+ 2  1371	7B 88		        mov     r3,#arg0
 5879+ 2  1373	74 98		        mov     a,#arg1
 5880+ 2			        ifnb    <0c5h>
 5881+ 2			        set_cy  0c5h
 5882+ 3	N      0001	??0515  set     (0c5h and 1)
 5883+ 3	N      FFFF	        if      ??0515 eq 1
 5884+ 3  1375	D3		        setb    c
 5885+ 3			        else
 5886+ 3			        clr     c
 5887+ 3			        endif
 5888+ 2			        endif
 5889+ 2  1376	3B		        addc      a,r3
 5890+ 2			        ifnb    <0c5h>
 5891+ 2			        save_psw
 5892+ 3  1377	85 D0 70	        mov     saved_psw,PSW
 5893+ 2			        endif
 5894+ 2  137A	B4 21 0F	        cjne    a,#res,??0502
 5895+ 2			        ifnb    <0c5h>
 5896+ 2			        tst_psw <0c5h>,??0502
 5897+ 3  137D	E5 70		        mov     a,saved_psw
 5898+ 3  137F	54 C4		        anl     a,#0c4h
 5899+ 3  1381	64 C5		        xrl     a,#0c5h
 5900+ 3  1383	54 FE		        anl     a,#0feh
 5901+ 3  1385	70 05		        jnz     ??0502
 5902+ 2			        endif
 5903+ 1
 5904+ 1			        eot     'b',??0502
 5905+ 2			        putc    #'b'
 5906+ 3  1387			??0517:
 5907+ 3			        ;jnb     SCON.1,putc_loop
 5908+ 3			        ;clr     SCON.1
 5909+ 3  1387	75 99 62	        mov     SBUF,#'b'
 5910+ 2  138A	80 06		        sjmp    ??0516
 5911+ 2  138C			??0502:  putc    #'?'
 5912+ 3  138C			??0518:
 5913+ 3			        ;jnb     SCON.1,putc_loop
 5914+ 3			        ;clr     SCON.1
 5915+ 3  138C	75 99 3F	        mov     SBUF,#'?'
 5916+ 2  138F	75 6E 01	        mov     fail,#001h
 5917+ 2  1392			??0516:
 5918+ 1
 5919+ 1			        top_ma  addc,r4,??0503,<0c5h>
 5920+ 2  1392	7C 88		        mov     r4,#arg0
 5921+ 2  1394	74 98		        mov     a,#arg1
 5922+ 2			        ifnb    <0c5h>
 5923+ 2			        set_cy  0c5h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 107



 Line  I  Addr  Code            Source

 5924+ 3	N      0001	??0519  set     (0c5h and 1)
 5925+ 3	N      FFFF	        if      ??0519 eq 1
 5926+ 3  1396	D3		        setb    c
 5927+ 3			        else
 5928+ 3			        clr     c
 5929+ 3			        endif
 5930+ 2			        endif
 5931+ 2  1397	3C		        addc      a,r4
 5932+ 2			        ifnb    <0c5h>
 5933+ 2			        save_psw
 5934+ 3  1398	85 D0 70	        mov     saved_psw,PSW
 5935+ 2			        endif
 5936+ 2  139B	B4 21 25	        cjne    a,#res,??0503
 5937+ 2			        ifnb    <0c5h>
 5938+ 2			        tst_psw <0c5h>,??0503
 5939+ 3  139E	E5 70		        mov     a,saved_psw
 5940+ 3  13A0	54 C4		        anl     a,#0c4h
 5941+ 3  13A2	64 C5		        xrl     a,#0c5h
 5942+ 3  13A4	54 FE		        anl     a,#0feh
 5943+ 3  13A6	70 1B		        jnz     ??0503
 5944+ 2			        endif
 5945+ 1			        top_ma  addc,r5,??0503,<0c5h>
 5946+ 2  13A8	7D 88		        mov     r5,#arg0
 5947+ 2  13AA	74 98		        mov     a,#arg1
 5948+ 2			        ifnb    <0c5h>
 5949+ 2			        set_cy  0c5h
 5950+ 3	N      0001	??0520  set     (0c5h and 1)
 5951+ 3	N      FFFF	        if      ??0520 eq 1
 5952+ 3  13AC	D3		        setb    c
 5953+ 3			        else
 5954+ 3			        clr     c
 5955+ 3			        endif
 5956+ 2			        endif
 5957+ 2  13AD	3D		        addc      a,r5
 5958+ 2			        ifnb    <0c5h>
 5959+ 2			        save_psw
 5960+ 3  13AE	85 D0 70	        mov     saved_psw,PSW
 5961+ 2			        endif
 5962+ 2  13B1	B4 21 0F	        cjne    a,#res,??0503
 5963+ 2			        ifnb    <0c5h>
 5964+ 2			        tst_psw <0c5h>,??0503
 5965+ 3  13B4	E5 70		        mov     a,saved_psw
 5966+ 3  13B6	54 C4		        anl     a,#0c4h
 5967+ 3  13B8	64 C5		        xrl     a,#0c5h
 5968+ 3  13BA	54 FE		        anl     a,#0feh
 5969+ 3  13BC	70 05		        jnz     ??0503
 5970+ 2			        endif
 5971+ 1
 5972+ 1			        eot     'c',??0503
 5973+ 2			        putc    #'c'
 5974+ 3  13BE			??0522:
 5975+ 3			        ;jnb     SCON.1,putc_loop
 5976+ 3			        ;clr     SCON.1
 5977+ 3  13BE	75 99 63	        mov     SBUF,#'c'
 5978+ 2  13C1	80 06		        sjmp    ??0521
 5979+ 2  13C3			??0503:  putc    #'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 108



 Line  I  Addr  Code            Source

 5980+ 3  13C3			??0523:
 5981+ 3			        ;jnb     SCON.1,putc_loop
 5982+ 3			        ;clr     SCON.1
 5983+ 3  13C3	75 99 3F	        mov     SBUF,#'?'
 5984+ 2  13C6	75 6E 01	        mov     fail,#001h
 5985+ 2  13C9			??0521:
 5986+ 1
 5987+ 1			        top_ma  addc,r6,??0500,<0c5h>
 5988+ 2  13C9	7E 88		        mov     r6,#arg0
 5989+ 2  13CB	74 98		        mov     a,#arg1
 5990+ 2			        ifnb    <0c5h>
 5991+ 2			        set_cy  0c5h
 5992+ 3	N      0001	??0524  set     (0c5h and 1)
 5993+ 3	N      FFFF	        if      ??0524 eq 1
 5994+ 3  13CD	D3		        setb    c
 5995+ 3			        else
 5996+ 3			        clr     c
 5997+ 3			        endif
 5998+ 2			        endif
 5999+ 2  13CE	3E		        addc      a,r6
 6000+ 2			        ifnb    <0c5h>
 6001+ 2			        save_psw
 6002+ 3  13CF	85 D0 70	        mov     saved_psw,PSW
 6003+ 2			        endif
 6004+ 2  13D2	B4 21 25	        cjne    a,#res,??0500
 6005+ 2			        ifnb    <0c5h>
 6006+ 2			        tst_psw <0c5h>,??0500
 6007+ 3  13D5	E5 70		        mov     a,saved_psw
 6008+ 3  13D7	54 C4		        anl     a,#0c4h
 6009+ 3  13D9	64 C5		        xrl     a,#0c5h
 6010+ 3  13DB	54 FE		        anl     a,#0feh
 6011+ 3  13DD	70 1B		        jnz     ??0500
 6012+ 2			        endif
 6013+ 1			        top_ma  addc,r7,??0500,<0c5h>
 6014+ 2  13DF	7F 88		        mov     r7,#arg0
 6015+ 2  13E1	74 98		        mov     a,#arg1
 6016+ 2			        ifnb    <0c5h>
 6017+ 2			        set_cy  0c5h
 6018+ 3	N      0001	??0525  set     (0c5h and 1)
 6019+ 3	N      FFFF	        if      ??0525 eq 1
 6020+ 3  13E3	D3		        setb    c
 6021+ 3			        else
 6022+ 3			        clr     c
 6023+ 3			        endif
 6024+ 2			        endif
 6025+ 2  13E4	3F		        addc      a,r7
 6026+ 2			        ifnb    <0c5h>
 6027+ 2			        save_psw
 6028+ 3  13E5	85 D0 70	        mov     saved_psw,PSW
 6029+ 2			        endif
 6030+ 2  13E8	B4 21 0F	        cjne    a,#res,??0500
 6031+ 2			        ifnb    <0c5h>
 6032+ 2			        tst_psw <0c5h>,??0500
 6033+ 3  13EB	E5 70		        mov     a,saved_psw
 6034+ 3  13ED	54 C4		        anl     a,#0c4h
 6035+ 3  13EF	64 C5		        xrl     a,#0c5h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 109



 Line  I  Addr  Code            Source

 6036+ 3  13F1	54 FE		        anl     a,#0feh
 6037+ 3  13F3	70 05		        jnz     ??0500
 6038+ 2			        endif
 6039+ 1
 6040+ 1			        eot     'd',??0500
 6041+ 2			        putc    #'d'
 6042+ 3  13F5			??0527:
 6043+ 3			        ;jnb     SCON.1,putc_loop
 6044+ 3			        ;clr     SCON.1
 6045+ 3  13F5	75 99 64	        mov     SBUF,#'d'
 6046+ 2  13F8	80 06		        sjmp    ??0526
 6047+ 2  13FA			??0500:  putc    #'?'
 6048+ 3  13FA			??0528:
 6049+ 3			        ;jnb     SCON.1,putc_loop
 6050+ 3			        ;clr     SCON.1
 6051+ 3  13FA	75 99 3F	        mov     SBUF,#'?'
 6052+ 2  13FD	75 6E 01	        mov     fail,#001h
 6053+ 2  1400			??0526:
 6054+ 1
 6055+ 1			        ifb     <0c5h>
 6056+ 1
 6057+ 1			        top_mb  addc,a,??0504,<0c5h>
 6058+ 1			        top_mb  addc,dir0,??0504,<0c5h>
 6059+ 1
 6060+ 1			        eot     'e',??0504
 6061+ 1
 6062+ 1			        top_mc  addc,??0505,<0c5h>
 6063+ 1
 6064+ 1			        eot     'f',??0505
 6065+ 1			        endif
 6066:
 6067:
 6068:				        put_crlf                    ; end of test series
 6069+ 1			        putc    #13
 6070+ 2  1400			??0529:
 6071+ 2			        ;jnb     SCON.1,putc_loop
 6072+ 2			        ;clr     SCON.1
 6073+ 2  1400	75 99 0D	        mov     SBUF,#13
 6074+ 1			        putc    #10
 6075+ 2  1403			??0530:
 6076+ 2			        ;jnb     SCON.1,putc_loop
 6077+ 2			        ;clr     SCON.1
 6078+ 2  1403	75 99 0A	        mov     SBUF,#10
 6079:
 6080:
 6081:				        ;-- Test series N ------------------------------------------------------
 6082:				        ; SUBB
 6083:				        ; (See comments for 'ALU opcode block test')
 6084:				        ; Note the test runs 4 times for different values of operands
 6085:
 6086:				        putc    #'N'                ; start of test series
 6087+ 1  1406			??0531:
 6088+ 1			        ;jnb     SCON.1,putc_loop
 6089+ 1			        ;clr     SCON.1
 6090+ 1  1406	75 99 4E	        mov     SBUF,#'N'
 6091:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 110



 Line  I  Addr  Code            Source

 6092:				        ;tst_alu <arg2>,<A value>,<result>,<PSW | CY input>
 6093:				        ;
 6094:
 6095:				        putc    #'0'
 6096+ 1  1409			??0532:
 6097+ 1			        ;jnb     SCON.1,putc_loop
 6098+ 1			        ;clr     SCON.1
 6099+ 1  1409	75 99 30	        mov     SBUF,#'0'
 6100:				        tst_alu subb,070h,073h,003h,000h     ; /CY /AC /OV
 6101+ 1
 6102+ 1	N      0070	        arg0    set 070h
 6103+ 1	N      0073	        arg1    set 073h
 6104+ 1	N      0003	        res     set 003h
 6105+ 1
 6106+ 1			        top_ma  subb,dir0,??0534,<000h>
 6107+ 2  140C	75 60 70	        mov     dir0,#arg0
 6108+ 2  140F	74 73		        mov     a,#arg1
 6109+ 2			        ifnb    <000h>
 6110+ 2			        set_cy  000h
 6111+ 3	N      0000	??0539  set     (000h and 1)
 6112+ 3	N      0000	        if      ??0539 eq 1
 6113+ 3			        setb    c
 6114+ 3			        else
 6115+ 3  1411	C3		        clr     c
 6116+ 3			        endif
 6117+ 2			        endif
 6118+ 2  1412	95 60		        subb      a,dir0
 6119+ 2			        ifnb    <000h>
 6120+ 2			        save_psw
 6121+ 3  1414	85 D0 70	        mov     saved_psw,PSW
 6122+ 2			        endif
 6123+ 2  1417	B4 03 6B	        cjne    a,#res,??0534
 6124+ 2			        ifnb    <000h>
 6125+ 2			        tst_psw <000h>,??0534
 6126+ 3  141A	E5 70		        mov     a,saved_psw
 6127+ 3  141C	54 C4		        anl     a,#0c4h
 6128+ 3  141E	64 00		        xrl     a,#000h
 6129+ 3  1420	54 FE		        anl     a,#0feh
 6130+ 3  1422	70 61		        jnz     ??0534
 6131+ 2			        endif
 6132+ 1  1424	78 60		        mov     r0,#dir0
 6133+ 1			        top_ma  subb,@r0,??0534,<000h>
 6134+ 2  1426	76 70		        mov     @r0,#arg0
 6135+ 2  1428	74 73		        mov     a,#arg1
 6136+ 2			        ifnb    <000h>
 6137+ 2			        set_cy  000h
 6138+ 3	N      0000	??0540  set     (000h and 1)
 6139+ 3	N      0000	        if      ??0540 eq 1
 6140+ 3			        setb    c
 6141+ 3			        else
 6142+ 3  142A	C3		        clr     c
 6143+ 3			        endif
 6144+ 2			        endif
 6145+ 2  142B	96		        subb      a,@r0
 6146+ 2			        ifnb    <000h>
 6147+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 111



 Line  I  Addr  Code            Source

 6148+ 3  142C	85 D0 70	        mov     saved_psw,PSW
 6149+ 2			        endif
 6150+ 2  142F	B4 03 53	        cjne    a,#res,??0534
 6151+ 2			        ifnb    <000h>
 6152+ 2			        tst_psw <000h>,??0534
 6153+ 3  1432	E5 70		        mov     a,saved_psw
 6154+ 3  1434	54 C4		        anl     a,#0c4h
 6155+ 3  1436	64 00		        xrl     a,#000h
 6156+ 3  1438	54 FE		        anl     a,#0feh
 6157+ 3  143A	70 49		        jnz     ??0534
 6158+ 2			        endif
 6159+ 1  143C	79 31		        mov     r1,#031h
 6160+ 1			        top_ma  subb,@r1,??0534,<000h>
 6161+ 2  143E	77 70		        mov     @r1,#arg0
 6162+ 2  1440	74 73		        mov     a,#arg1
 6163+ 2			        ifnb    <000h>
 6164+ 2			        set_cy  000h
 6165+ 3	N      0000	??0541  set     (000h and 1)
 6166+ 3	N      0000	        if      ??0541 eq 1
 6167+ 3			        setb    c
 6168+ 3			        else
 6169+ 3  1442	C3		        clr     c
 6170+ 3			        endif
 6171+ 2			        endif
 6172+ 2  1443	97		        subb      a,@r1
 6173+ 2			        ifnb    <000h>
 6174+ 2			        save_psw
 6175+ 3  1444	85 D0 70	        mov     saved_psw,PSW
 6176+ 2			        endif
 6177+ 2  1447	B4 03 3B	        cjne    a,#res,??0534
 6178+ 2			        ifnb    <000h>
 6179+ 2			        tst_psw <000h>,??0534
 6180+ 3  144A	E5 70		        mov     a,saved_psw
 6181+ 3  144C	54 C4		        anl     a,#0c4h
 6182+ 3  144E	64 00		        xrl     a,#000h
 6183+ 3  1450	54 FE		        anl     a,#0feh
 6184+ 3  1452	70 31		        jnz     ??0534
 6185+ 2			        endif
 6186+ 1
 6187+ 1			        top_ma  subb,r0,??0534,<000h>
 6188+ 2  1454	78 70		        mov     r0,#arg0
 6189+ 2  1456	74 73		        mov     a,#arg1
 6190+ 2			        ifnb    <000h>
 6191+ 2			        set_cy  000h
 6192+ 3	N      0000	??0542  set     (000h and 1)
 6193+ 3	N      0000	        if      ??0542 eq 1
 6194+ 3			        setb    c
 6195+ 3			        else
 6196+ 3  1458	C3		        clr     c
 6197+ 3			        endif
 6198+ 2			        endif
 6199+ 2  1459	98		        subb      a,r0
 6200+ 2			        ifnb    <000h>
 6201+ 2			        save_psw
 6202+ 3  145A	85 D0 70	        mov     saved_psw,PSW
 6203+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 112



 Line  I  Addr  Code            Source

 6204+ 2  145D	B4 03 25	        cjne    a,#res,??0534
 6205+ 2			        ifnb    <000h>
 6206+ 2			        tst_psw <000h>,??0534
 6207+ 3  1460	E5 70		        mov     a,saved_psw
 6208+ 3  1462	54 C4		        anl     a,#0c4h
 6209+ 3  1464	64 00		        xrl     a,#000h
 6210+ 3  1466	54 FE		        anl     a,#0feh
 6211+ 3  1468	70 1B		        jnz     ??0534
 6212+ 2			        endif
 6213+ 1			        top_ma  subb,r1,??0534,<000h>
 6214+ 2  146A	79 70		        mov     r1,#arg0
 6215+ 2  146C	74 73		        mov     a,#arg1
 6216+ 2			        ifnb    <000h>
 6217+ 2			        set_cy  000h
 6218+ 3	N      0000	??0543  set     (000h and 1)
 6219+ 3	N      0000	        if      ??0543 eq 1
 6220+ 3			        setb    c
 6221+ 3			        else
 6222+ 3  146E	C3		        clr     c
 6223+ 3			        endif
 6224+ 2			        endif
 6225+ 2  146F	99		        subb      a,r1
 6226+ 2			        ifnb    <000h>
 6227+ 2			        save_psw
 6228+ 3  1470	85 D0 70	        mov     saved_psw,PSW
 6229+ 2			        endif
 6230+ 2  1473	B4 03 0F	        cjne    a,#res,??0534
 6231+ 2			        ifnb    <000h>
 6232+ 2			        tst_psw <000h>,??0534
 6233+ 3  1476	E5 70		        mov     a,saved_psw
 6234+ 3  1478	54 C4		        anl     a,#0c4h
 6235+ 3  147A	64 00		        xrl     a,#000h
 6236+ 3  147C	54 FE		        anl     a,#0feh
 6237+ 3  147E	70 05		        jnz     ??0534
 6238+ 2			        endif
 6239+ 1
 6240+ 1			        eot     'a',??0534
 6241+ 2			        putc    #'a'
 6242+ 3  1480			??0545:
 6243+ 3			        ;jnb     SCON.1,putc_loop
 6244+ 3			        ;clr     SCON.1
 6245+ 3  1480	75 99 61	        mov     SBUF,#'a'
 6246+ 2  1483	80 06		        sjmp    ??0544
 6247+ 2  1485			??0534:  putc    #'?'
 6248+ 3  1485			??0546:
 6249+ 3			        ;jnb     SCON.1,putc_loop
 6250+ 3			        ;clr     SCON.1
 6251+ 3  1485	75 99 3F	        mov     SBUF,#'?'
 6252+ 2  1488	75 6E 01	        mov     fail,#001h
 6253+ 2  148B			??0544:
 6254+ 1
 6255+ 1			        top_ma  subb,r2,??0535,<000h>
 6256+ 2  148B	7A 70		        mov     r2,#arg0
 6257+ 2  148D	74 73		        mov     a,#arg1
 6258+ 2			        ifnb    <000h>
 6259+ 2			        set_cy  000h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 113



 Line  I  Addr  Code            Source

 6260+ 3	N      0000	??0547  set     (000h and 1)
 6261+ 3	N      0000	        if      ??0547 eq 1
 6262+ 3			        setb    c
 6263+ 3			        else
 6264+ 3  148F	C3		        clr     c
 6265+ 3			        endif
 6266+ 2			        endif
 6267+ 2  1490	9A		        subb      a,r2
 6268+ 2			        ifnb    <000h>
 6269+ 2			        save_psw
 6270+ 3  1491	85 D0 70	        mov     saved_psw,PSW
 6271+ 2			        endif
 6272+ 2  1494	B4 03 25	        cjne    a,#res,??0535
 6273+ 2			        ifnb    <000h>
 6274+ 2			        tst_psw <000h>,??0535
 6275+ 3  1497	E5 70		        mov     a,saved_psw
 6276+ 3  1499	54 C4		        anl     a,#0c4h
 6277+ 3  149B	64 00		        xrl     a,#000h
 6278+ 3  149D	54 FE		        anl     a,#0feh
 6279+ 3  149F	70 1B		        jnz     ??0535
 6280+ 2			        endif
 6281+ 1			        top_ma  subb,r3,??0535,<000h>
 6282+ 2  14A1	7B 70		        mov     r3,#arg0
 6283+ 2  14A3	74 73		        mov     a,#arg1
 6284+ 2			        ifnb    <000h>
 6285+ 2			        set_cy  000h
 6286+ 3	N      0000	??0548  set     (000h and 1)
 6287+ 3	N      0000	        if      ??0548 eq 1
 6288+ 3			        setb    c
 6289+ 3			        else
 6290+ 3  14A5	C3		        clr     c
 6291+ 3			        endif
 6292+ 2			        endif
 6293+ 2  14A6	9B		        subb      a,r3
 6294+ 2			        ifnb    <000h>
 6295+ 2			        save_psw
 6296+ 3  14A7	85 D0 70	        mov     saved_psw,PSW
 6297+ 2			        endif
 6298+ 2  14AA	B4 03 0F	        cjne    a,#res,??0535
 6299+ 2			        ifnb    <000h>
 6300+ 2			        tst_psw <000h>,??0535
 6301+ 3  14AD	E5 70		        mov     a,saved_psw
 6302+ 3  14AF	54 C4		        anl     a,#0c4h
 6303+ 3  14B1	64 00		        xrl     a,#000h
 6304+ 3  14B3	54 FE		        anl     a,#0feh
 6305+ 3  14B5	70 05		        jnz     ??0535
 6306+ 2			        endif
 6307+ 1
 6308+ 1			        eot     'b',??0535
 6309+ 2			        putc    #'b'
 6310+ 3  14B7			??0550:
 6311+ 3			        ;jnb     SCON.1,putc_loop
 6312+ 3			        ;clr     SCON.1
 6313+ 3  14B7	75 99 62	        mov     SBUF,#'b'
 6314+ 2  14BA	80 06		        sjmp    ??0549
 6315+ 2  14BC			??0535:  putc    #'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 114



 Line  I  Addr  Code            Source

 6316+ 3  14BC			??0551:
 6317+ 3			        ;jnb     SCON.1,putc_loop
 6318+ 3			        ;clr     SCON.1
 6319+ 3  14BC	75 99 3F	        mov     SBUF,#'?'
 6320+ 2  14BF	75 6E 01	        mov     fail,#001h
 6321+ 2  14C2			??0549:
 6322+ 1
 6323+ 1			        top_ma  subb,r4,??0536,<000h>
 6324+ 2  14C2	7C 70		        mov     r4,#arg0
 6325+ 2  14C4	74 73		        mov     a,#arg1
 6326+ 2			        ifnb    <000h>
 6327+ 2			        set_cy  000h
 6328+ 3	N      0000	??0552  set     (000h and 1)
 6329+ 3	N      0000	        if      ??0552 eq 1
 6330+ 3			        setb    c
 6331+ 3			        else
 6332+ 3  14C6	C3		        clr     c
 6333+ 3			        endif
 6334+ 2			        endif
 6335+ 2  14C7	9C		        subb      a,r4
 6336+ 2			        ifnb    <000h>
 6337+ 2			        save_psw
 6338+ 3  14C8	85 D0 70	        mov     saved_psw,PSW
 6339+ 2			        endif
 6340+ 2  14CB	B4 03 25	        cjne    a,#res,??0536
 6341+ 2			        ifnb    <000h>
 6342+ 2			        tst_psw <000h>,??0536
 6343+ 3  14CE	E5 70		        mov     a,saved_psw
 6344+ 3  14D0	54 C4		        anl     a,#0c4h
 6345+ 3  14D2	64 00		        xrl     a,#000h
 6346+ 3  14D4	54 FE		        anl     a,#0feh
 6347+ 3  14D6	70 1B		        jnz     ??0536
 6348+ 2			        endif
 6349+ 1			        top_ma  subb,r5,??0536,<000h>
 6350+ 2  14D8	7D 70		        mov     r5,#arg0
 6351+ 2  14DA	74 73		        mov     a,#arg1
 6352+ 2			        ifnb    <000h>
 6353+ 2			        set_cy  000h
 6354+ 3	N      0000	??0553  set     (000h and 1)
 6355+ 3	N      0000	        if      ??0553 eq 1
 6356+ 3			        setb    c
 6357+ 3			        else
 6358+ 3  14DC	C3		        clr     c
 6359+ 3			        endif
 6360+ 2			        endif
 6361+ 2  14DD	9D		        subb      a,r5
 6362+ 2			        ifnb    <000h>
 6363+ 2			        save_psw
 6364+ 3  14DE	85 D0 70	        mov     saved_psw,PSW
 6365+ 2			        endif
 6366+ 2  14E1	B4 03 0F	        cjne    a,#res,??0536
 6367+ 2			        ifnb    <000h>
 6368+ 2			        tst_psw <000h>,??0536
 6369+ 3  14E4	E5 70		        mov     a,saved_psw
 6370+ 3  14E6	54 C4		        anl     a,#0c4h
 6371+ 3  14E8	64 00		        xrl     a,#000h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 115



 Line  I  Addr  Code            Source

 6372+ 3  14EA	54 FE		        anl     a,#0feh
 6373+ 3  14EC	70 05		        jnz     ??0536
 6374+ 2			        endif
 6375+ 1
 6376+ 1			        eot     'c',??0536
 6377+ 2			        putc    #'c'
 6378+ 3  14EE			??0555:
 6379+ 3			        ;jnb     SCON.1,putc_loop
 6380+ 3			        ;clr     SCON.1
 6381+ 3  14EE	75 99 63	        mov     SBUF,#'c'
 6382+ 2  14F1	80 06		        sjmp    ??0554
 6383+ 2  14F3			??0536:  putc    #'?'
 6384+ 3  14F3			??0556:
 6385+ 3			        ;jnb     SCON.1,putc_loop
 6386+ 3			        ;clr     SCON.1
 6387+ 3  14F3	75 99 3F	        mov     SBUF,#'?'
 6388+ 2  14F6	75 6E 01	        mov     fail,#001h
 6389+ 2  14F9			??0554:
 6390+ 1
 6391+ 1			        top_ma  subb,r6,??0533,<000h>
 6392+ 2  14F9	7E 70		        mov     r6,#arg0
 6393+ 2  14FB	74 73		        mov     a,#arg1
 6394+ 2			        ifnb    <000h>
 6395+ 2			        set_cy  000h
 6396+ 3	N      0000	??0557  set     (000h and 1)
 6397+ 3	N      0000	        if      ??0557 eq 1
 6398+ 3			        setb    c
 6399+ 3			        else
 6400+ 3  14FD	C3		        clr     c
 6401+ 3			        endif
 6402+ 2			        endif
 6403+ 2  14FE	9E		        subb      a,r6
 6404+ 2			        ifnb    <000h>
 6405+ 2			        save_psw
 6406+ 3  14FF	85 D0 70	        mov     saved_psw,PSW
 6407+ 2			        endif
 6408+ 2  1502	B4 03 25	        cjne    a,#res,??0533
 6409+ 2			        ifnb    <000h>
 6410+ 2			        tst_psw <000h>,??0533
 6411+ 3  1505	E5 70		        mov     a,saved_psw
 6412+ 3  1507	54 C4		        anl     a,#0c4h
 6413+ 3  1509	64 00		        xrl     a,#000h
 6414+ 3  150B	54 FE		        anl     a,#0feh
 6415+ 3  150D	70 1B		        jnz     ??0533
 6416+ 2			        endif
 6417+ 1			        top_ma  subb,r7,??0533,<000h>
 6418+ 2  150F	7F 70		        mov     r7,#arg0
 6419+ 2  1511	74 73		        mov     a,#arg1
 6420+ 2			        ifnb    <000h>
 6421+ 2			        set_cy  000h
 6422+ 3	N      0000	??0558  set     (000h and 1)
 6423+ 3	N      0000	        if      ??0558 eq 1
 6424+ 3			        setb    c
 6425+ 3			        else
 6426+ 3  1513	C3		        clr     c
 6427+ 3			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 116



 Line  I  Addr  Code            Source

 6428+ 2			        endif
 6429+ 2  1514	9F		        subb      a,r7
 6430+ 2			        ifnb    <000h>
 6431+ 2			        save_psw
 6432+ 3  1515	85 D0 70	        mov     saved_psw,PSW
 6433+ 2			        endif
 6434+ 2  1518	B4 03 0F	        cjne    a,#res,??0533
 6435+ 2			        ifnb    <000h>
 6436+ 2			        tst_psw <000h>,??0533
 6437+ 3  151B	E5 70		        mov     a,saved_psw
 6438+ 3  151D	54 C4		        anl     a,#0c4h
 6439+ 3  151F	64 00		        xrl     a,#000h
 6440+ 3  1521	54 FE		        anl     a,#0feh
 6441+ 3  1523	70 05		        jnz     ??0533
 6442+ 2			        endif
 6443+ 1
 6444+ 1			        eot     'd',??0533
 6445+ 2			        putc    #'d'
 6446+ 3  1525			??0560:
 6447+ 3			        ;jnb     SCON.1,putc_loop
 6448+ 3			        ;clr     SCON.1
 6449+ 3  1525	75 99 64	        mov     SBUF,#'d'
 6450+ 2  1528	80 06		        sjmp    ??0559
 6451+ 2  152A			??0533:  putc    #'?'
 6452+ 3  152A			??0561:
 6453+ 3			        ;jnb     SCON.1,putc_loop
 6454+ 3			        ;clr     SCON.1
 6455+ 3  152A	75 99 3F	        mov     SBUF,#'?'
 6456+ 2  152D	75 6E 01	        mov     fail,#001h
 6457+ 2  1530			??0559:
 6458+ 1
 6459+ 1			        ifb     <000h>
 6460+ 1
 6461+ 1			        top_mb  subb,a,??0537,<000h>
 6462+ 1			        top_mb  subb,dir0,??0537,<000h>
 6463+ 1
 6464+ 1			        eot     'e',??0537
 6465+ 1
 6466+ 1			        top_mc  subb,??0538,<000h>
 6467+ 1
 6468+ 1			        eot     'f',??0538
 6469+ 1			        endif
 6470:				        putc    #'1'
 6471+ 1  1530			??0562:
 6472+ 1			        ;jnb     SCON.1,putc_loop
 6473+ 1			        ;clr     SCON.1
 6474+ 1  1530	75 99 31	        mov     SBUF,#'1'
 6475:				        tst_alu subb,070h,073h,002h,001h     ; /CY /AC /OV (CY input)
 6476+ 1
 6477+ 1	N      0070	        arg0    set 070h
 6478+ 1	N      0073	        arg1    set 073h
 6479+ 1	N      0002	        res     set 002h
 6480+ 1
 6481+ 1			        top_ma  subb,dir0,??0564,<001h>
 6482+ 2  1533	75 60 70	        mov     dir0,#arg0
 6483+ 2  1536	74 73		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 117



 Line  I  Addr  Code            Source

 6484+ 2			        ifnb    <001h>
 6485+ 2			        set_cy  001h
 6486+ 3	N      0001	??0569  set     (001h and 1)
 6487+ 3	N      FFFF	        if      ??0569 eq 1
 6488+ 3  1538	D3		        setb    c
 6489+ 3			        else
 6490+ 3			        clr     c
 6491+ 3			        endif
 6492+ 2			        endif
 6493+ 2  1539	95 60		        subb      a,dir0
 6494+ 2			        ifnb    <001h>
 6495+ 2			        save_psw
 6496+ 3  153B	85 D0 70	        mov     saved_psw,PSW
 6497+ 2			        endif
 6498+ 2  153E	B4 02 6B	        cjne    a,#res,??0564
 6499+ 2			        ifnb    <001h>
 6500+ 2			        tst_psw <001h>,??0564
 6501+ 3  1541	E5 70		        mov     a,saved_psw
 6502+ 3  1543	54 C4		        anl     a,#0c4h
 6503+ 3  1545	64 01		        xrl     a,#001h
 6504+ 3  1547	54 FE		        anl     a,#0feh
 6505+ 3  1549	70 61		        jnz     ??0564
 6506+ 2			        endif
 6507+ 1  154B	78 60		        mov     r0,#dir0
 6508+ 1			        top_ma  subb,@r0,??0564,<001h>
 6509+ 2  154D	76 70		        mov     @r0,#arg0
 6510+ 2  154F	74 73		        mov     a,#arg1
 6511+ 2			        ifnb    <001h>
 6512+ 2			        set_cy  001h
 6513+ 3	N      0001	??0570  set     (001h and 1)
 6514+ 3	N      FFFF	        if      ??0570 eq 1
 6515+ 3  1551	D3		        setb    c
 6516+ 3			        else
 6517+ 3			        clr     c
 6518+ 3			        endif
 6519+ 2			        endif
 6520+ 2  1552	96		        subb      a,@r0
 6521+ 2			        ifnb    <001h>
 6522+ 2			        save_psw
 6523+ 3  1553	85 D0 70	        mov     saved_psw,PSW
 6524+ 2			        endif
 6525+ 2  1556	B4 02 53	        cjne    a,#res,??0564
 6526+ 2			        ifnb    <001h>
 6527+ 2			        tst_psw <001h>,??0564
 6528+ 3  1559	E5 70		        mov     a,saved_psw
 6529+ 3  155B	54 C4		        anl     a,#0c4h
 6530+ 3  155D	64 01		        xrl     a,#001h
 6531+ 3  155F	54 FE		        anl     a,#0feh
 6532+ 3  1561	70 49		        jnz     ??0564
 6533+ 2			        endif
 6534+ 1  1563	79 31		        mov     r1,#031h
 6535+ 1			        top_ma  subb,@r1,??0564,<001h>
 6536+ 2  1565	77 70		        mov     @r1,#arg0
 6537+ 2  1567	74 73		        mov     a,#arg1
 6538+ 2			        ifnb    <001h>
 6539+ 2			        set_cy  001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 118



 Line  I  Addr  Code            Source

 6540+ 3	N      0001	??0571  set     (001h and 1)
 6541+ 3	N      FFFF	        if      ??0571 eq 1
 6542+ 3  1569	D3		        setb    c
 6543+ 3			        else
 6544+ 3			        clr     c
 6545+ 3			        endif
 6546+ 2			        endif
 6547+ 2  156A	97		        subb      a,@r1
 6548+ 2			        ifnb    <001h>
 6549+ 2			        save_psw
 6550+ 3  156B	85 D0 70	        mov     saved_psw,PSW
 6551+ 2			        endif
 6552+ 2  156E	B4 02 3B	        cjne    a,#res,??0564
 6553+ 2			        ifnb    <001h>
 6554+ 2			        tst_psw <001h>,??0564
 6555+ 3  1571	E5 70		        mov     a,saved_psw
 6556+ 3  1573	54 C4		        anl     a,#0c4h
 6557+ 3  1575	64 01		        xrl     a,#001h
 6558+ 3  1577	54 FE		        anl     a,#0feh
 6559+ 3  1579	70 31		        jnz     ??0564
 6560+ 2			        endif
 6561+ 1
 6562+ 1			        top_ma  subb,r0,??0564,<001h>
 6563+ 2  157B	78 70		        mov     r0,#arg0
 6564+ 2  157D	74 73		        mov     a,#arg1
 6565+ 2			        ifnb    <001h>
 6566+ 2			        set_cy  001h
 6567+ 3	N      0001	??0572  set     (001h and 1)
 6568+ 3	N      FFFF	        if      ??0572 eq 1
 6569+ 3  157F	D3		        setb    c
 6570+ 3			        else
 6571+ 3			        clr     c
 6572+ 3			        endif
 6573+ 2			        endif
 6574+ 2  1580	98		        subb      a,r0
 6575+ 2			        ifnb    <001h>
 6576+ 2			        save_psw
 6577+ 3  1581	85 D0 70	        mov     saved_psw,PSW
 6578+ 2			        endif
 6579+ 2  1584	B4 02 25	        cjne    a,#res,??0564
 6580+ 2			        ifnb    <001h>
 6581+ 2			        tst_psw <001h>,??0564
 6582+ 3  1587	E5 70		        mov     a,saved_psw
 6583+ 3  1589	54 C4		        anl     a,#0c4h
 6584+ 3  158B	64 01		        xrl     a,#001h
 6585+ 3  158D	54 FE		        anl     a,#0feh
 6586+ 3  158F	70 1B		        jnz     ??0564
 6587+ 2			        endif
 6588+ 1			        top_ma  subb,r1,??0564,<001h>
 6589+ 2  1591	79 70		        mov     r1,#arg0
 6590+ 2  1593	74 73		        mov     a,#arg1
 6591+ 2			        ifnb    <001h>
 6592+ 2			        set_cy  001h
 6593+ 3	N      0001	??0573  set     (001h and 1)
 6594+ 3	N      FFFF	        if      ??0573 eq 1
 6595+ 3  1595	D3		        setb    c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 119



 Line  I  Addr  Code            Source

 6596+ 3			        else
 6597+ 3			        clr     c
 6598+ 3			        endif
 6599+ 2			        endif
 6600+ 2  1596	99		        subb      a,r1
 6601+ 2			        ifnb    <001h>
 6602+ 2			        save_psw
 6603+ 3  1597	85 D0 70	        mov     saved_psw,PSW
 6604+ 2			        endif
 6605+ 2  159A	B4 02 0F	        cjne    a,#res,??0564
 6606+ 2			        ifnb    <001h>
 6607+ 2			        tst_psw <001h>,??0564
 6608+ 3  159D	E5 70		        mov     a,saved_psw
 6609+ 3  159F	54 C4		        anl     a,#0c4h
 6610+ 3  15A1	64 01		        xrl     a,#001h
 6611+ 3  15A3	54 FE		        anl     a,#0feh
 6612+ 3  15A5	70 05		        jnz     ??0564
 6613+ 2			        endif
 6614+ 1
 6615+ 1			        eot     'a',??0564
 6616+ 2			        putc    #'a'
 6617+ 3  15A7			??0575:
 6618+ 3			        ;jnb     SCON.1,putc_loop
 6619+ 3			        ;clr     SCON.1
 6620+ 3  15A7	75 99 61	        mov     SBUF,#'a'
 6621+ 2  15AA	80 06		        sjmp    ??0574
 6622+ 2  15AC			??0564:  putc    #'?'
 6623+ 3  15AC			??0576:
 6624+ 3			        ;jnb     SCON.1,putc_loop
 6625+ 3			        ;clr     SCON.1
 6626+ 3  15AC	75 99 3F	        mov     SBUF,#'?'
 6627+ 2  15AF	75 6E 01	        mov     fail,#001h
 6628+ 2  15B2			??0574:
 6629+ 1
 6630+ 1			        top_ma  subb,r2,??0565,<001h>
 6631+ 2  15B2	7A 70		        mov     r2,#arg0
 6632+ 2  15B4	74 73		        mov     a,#arg1
 6633+ 2			        ifnb    <001h>
 6634+ 2			        set_cy  001h
 6635+ 3	N      0001	??0577  set     (001h and 1)
 6636+ 3	N      FFFF	        if      ??0577 eq 1
 6637+ 3  15B6	D3		        setb    c
 6638+ 3			        else
 6639+ 3			        clr     c
 6640+ 3			        endif
 6641+ 2			        endif
 6642+ 2  15B7	9A		        subb      a,r2
 6643+ 2			        ifnb    <001h>
 6644+ 2			        save_psw
 6645+ 3  15B8	85 D0 70	        mov     saved_psw,PSW
 6646+ 2			        endif
 6647+ 2  15BB	B4 02 25	        cjne    a,#res,??0565
 6648+ 2			        ifnb    <001h>
 6649+ 2			        tst_psw <001h>,??0565
 6650+ 3  15BE	E5 70		        mov     a,saved_psw
 6651+ 3  15C0	54 C4		        anl     a,#0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 120



 Line  I  Addr  Code            Source

 6652+ 3  15C2	64 01		        xrl     a,#001h
 6653+ 3  15C4	54 FE		        anl     a,#0feh
 6654+ 3  15C6	70 1B		        jnz     ??0565
 6655+ 2			        endif
 6656+ 1			        top_ma  subb,r3,??0565,<001h>
 6657+ 2  15C8	7B 70		        mov     r3,#arg0
 6658+ 2  15CA	74 73		        mov     a,#arg1
 6659+ 2			        ifnb    <001h>
 6660+ 2			        set_cy  001h
 6661+ 3	N      0001	??0578  set     (001h and 1)
 6662+ 3	N      FFFF	        if      ??0578 eq 1
 6663+ 3  15CC	D3		        setb    c
 6664+ 3			        else
 6665+ 3			        clr     c
 6666+ 3			        endif
 6667+ 2			        endif
 6668+ 2  15CD	9B		        subb      a,r3
 6669+ 2			        ifnb    <001h>
 6670+ 2			        save_psw
 6671+ 3  15CE	85 D0 70	        mov     saved_psw,PSW
 6672+ 2			        endif
 6673+ 2  15D1	B4 02 0F	        cjne    a,#res,??0565
 6674+ 2			        ifnb    <001h>
 6675+ 2			        tst_psw <001h>,??0565
 6676+ 3  15D4	E5 70		        mov     a,saved_psw
 6677+ 3  15D6	54 C4		        anl     a,#0c4h
 6678+ 3  15D8	64 01		        xrl     a,#001h
 6679+ 3  15DA	54 FE		        anl     a,#0feh
 6680+ 3  15DC	70 05		        jnz     ??0565
 6681+ 2			        endif
 6682+ 1
 6683+ 1			        eot     'b',??0565
 6684+ 2			        putc    #'b'
 6685+ 3  15DE			??0580:
 6686+ 3			        ;jnb     SCON.1,putc_loop
 6687+ 3			        ;clr     SCON.1
 6688+ 3  15DE	75 99 62	        mov     SBUF,#'b'
 6689+ 2  15E1	80 06		        sjmp    ??0579
 6690+ 2  15E3			??0565:  putc    #'?'
 6691+ 3  15E3			??0581:
 6692+ 3			        ;jnb     SCON.1,putc_loop
 6693+ 3			        ;clr     SCON.1
 6694+ 3  15E3	75 99 3F	        mov     SBUF,#'?'
 6695+ 2  15E6	75 6E 01	        mov     fail,#001h
 6696+ 2  15E9			??0579:
 6697+ 1
 6698+ 1			        top_ma  subb,r4,??0566,<001h>
 6699+ 2  15E9	7C 70		        mov     r4,#arg0
 6700+ 2  15EB	74 73		        mov     a,#arg1
 6701+ 2			        ifnb    <001h>
 6702+ 2			        set_cy  001h
 6703+ 3	N      0001	??0582  set     (001h and 1)
 6704+ 3	N      FFFF	        if      ??0582 eq 1
 6705+ 3  15ED	D3		        setb    c
 6706+ 3			        else
 6707+ 3			        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 121



 Line  I  Addr  Code            Source

 6708+ 3			        endif
 6709+ 2			        endif
 6710+ 2  15EE	9C		        subb      a,r4
 6711+ 2			        ifnb    <001h>
 6712+ 2			        save_psw
 6713+ 3  15EF	85 D0 70	        mov     saved_psw,PSW
 6714+ 2			        endif
 6715+ 2  15F2	B4 02 25	        cjne    a,#res,??0566
 6716+ 2			        ifnb    <001h>
 6717+ 2			        tst_psw <001h>,??0566
 6718+ 3  15F5	E5 70		        mov     a,saved_psw
 6719+ 3  15F7	54 C4		        anl     a,#0c4h
 6720+ 3  15F9	64 01		        xrl     a,#001h
 6721+ 3  15FB	54 FE		        anl     a,#0feh
 6722+ 3  15FD	70 1B		        jnz     ??0566
 6723+ 2			        endif
 6724+ 1			        top_ma  subb,r5,??0566,<001h>
 6725+ 2  15FF	7D 70		        mov     r5,#arg0
 6726+ 2  1601	74 73		        mov     a,#arg1
 6727+ 2			        ifnb    <001h>
 6728+ 2			        set_cy  001h
 6729+ 3	N      0001	??0583  set     (001h and 1)
 6730+ 3	N      FFFF	        if      ??0583 eq 1
 6731+ 3  1603	D3		        setb    c
 6732+ 3			        else
 6733+ 3			        clr     c
 6734+ 3			        endif
 6735+ 2			        endif
 6736+ 2  1604	9D		        subb      a,r5
 6737+ 2			        ifnb    <001h>
 6738+ 2			        save_psw
 6739+ 3  1605	85 D0 70	        mov     saved_psw,PSW
 6740+ 2			        endif
 6741+ 2  1608	B4 02 0F	        cjne    a,#res,??0566
 6742+ 2			        ifnb    <001h>
 6743+ 2			        tst_psw <001h>,??0566
 6744+ 3  160B	E5 70		        mov     a,saved_psw
 6745+ 3  160D	54 C4		        anl     a,#0c4h
 6746+ 3  160F	64 01		        xrl     a,#001h
 6747+ 3  1611	54 FE		        anl     a,#0feh
 6748+ 3  1613	70 05		        jnz     ??0566
 6749+ 2			        endif
 6750+ 1
 6751+ 1			        eot     'c',??0566
 6752+ 2			        putc    #'c'
 6753+ 3  1615			??0585:
 6754+ 3			        ;jnb     SCON.1,putc_loop
 6755+ 3			        ;clr     SCON.1
 6756+ 3  1615	75 99 63	        mov     SBUF,#'c'
 6757+ 2  1618	80 06		        sjmp    ??0584
 6758+ 2  161A			??0566:  putc    #'?'
 6759+ 3  161A			??0586:
 6760+ 3			        ;jnb     SCON.1,putc_loop
 6761+ 3			        ;clr     SCON.1
 6762+ 3  161A	75 99 3F	        mov     SBUF,#'?'
 6763+ 2  161D	75 6E 01	        mov     fail,#001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 122



 Line  I  Addr  Code            Source

 6764+ 2  1620			??0584:
 6765+ 1
 6766+ 1			        top_ma  subb,r6,??0563,<001h>
 6767+ 2  1620	7E 70		        mov     r6,#arg0
 6768+ 2  1622	74 73		        mov     a,#arg1
 6769+ 2			        ifnb    <001h>
 6770+ 2			        set_cy  001h
 6771+ 3	N      0001	??0587  set     (001h and 1)
 6772+ 3	N      FFFF	        if      ??0587 eq 1
 6773+ 3  1624	D3		        setb    c
 6774+ 3			        else
 6775+ 3			        clr     c
 6776+ 3			        endif
 6777+ 2			        endif
 6778+ 2  1625	9E		        subb      a,r6
 6779+ 2			        ifnb    <001h>
 6780+ 2			        save_psw
 6781+ 3  1626	85 D0 70	        mov     saved_psw,PSW
 6782+ 2			        endif
 6783+ 2  1629	B4 02 25	        cjne    a,#res,??0563
 6784+ 2			        ifnb    <001h>
 6785+ 2			        tst_psw <001h>,??0563
 6786+ 3  162C	E5 70		        mov     a,saved_psw
 6787+ 3  162E	54 C4		        anl     a,#0c4h
 6788+ 3  1630	64 01		        xrl     a,#001h
 6789+ 3  1632	54 FE		        anl     a,#0feh
 6790+ 3  1634	70 1B		        jnz     ??0563
 6791+ 2			        endif
 6792+ 1			        top_ma  subb,r7,??0563,<001h>
 6793+ 2  1636	7F 70		        mov     r7,#arg0
 6794+ 2  1638	74 73		        mov     a,#arg1
 6795+ 2			        ifnb    <001h>
 6796+ 2			        set_cy  001h
 6797+ 3	N      0001	??0588  set     (001h and 1)
 6798+ 3	N      FFFF	        if      ??0588 eq 1
 6799+ 3  163A	D3		        setb    c
 6800+ 3			        else
 6801+ 3			        clr     c
 6802+ 3			        endif
 6803+ 2			        endif
 6804+ 2  163B	9F		        subb      a,r7
 6805+ 2			        ifnb    <001h>
 6806+ 2			        save_psw
 6807+ 3  163C	85 D0 70	        mov     saved_psw,PSW
 6808+ 2			        endif
 6809+ 2  163F	B4 02 0F	        cjne    a,#res,??0563
 6810+ 2			        ifnb    <001h>
 6811+ 2			        tst_psw <001h>,??0563
 6812+ 3  1642	E5 70		        mov     a,saved_psw
 6813+ 3  1644	54 C4		        anl     a,#0c4h
 6814+ 3  1646	64 01		        xrl     a,#001h
 6815+ 3  1648	54 FE		        anl     a,#0feh
 6816+ 3  164A	70 05		        jnz     ??0563
 6817+ 2			        endif
 6818+ 1
 6819+ 1			        eot     'd',??0563

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 123



 Line  I  Addr  Code            Source

 6820+ 2			        putc    #'d'
 6821+ 3  164C			??0590:
 6822+ 3			        ;jnb     SCON.1,putc_loop
 6823+ 3			        ;clr     SCON.1
 6824+ 3  164C	75 99 64	        mov     SBUF,#'d'
 6825+ 2  164F	80 06		        sjmp    ??0589
 6826+ 2  1651			??0563:  putc    #'?'
 6827+ 3  1651			??0591:
 6828+ 3			        ;jnb     SCON.1,putc_loop
 6829+ 3			        ;clr     SCON.1
 6830+ 3  1651	75 99 3F	        mov     SBUF,#'?'
 6831+ 2  1654	75 6E 01	        mov     fail,#001h
 6832+ 2  1657			??0589:
 6833+ 1
 6834+ 1			        ifb     <001h>
 6835+ 1
 6836+ 1			        top_mb  subb,a,??0567,<001h>
 6837+ 1			        top_mb  subb,dir0,??0567,<001h>
 6838+ 1
 6839+ 1			        eot     'e',??0567
 6840+ 1
 6841+ 1			        top_mc  subb,??0568,<001h>
 6842+ 1
 6843+ 1			        eot     'f',??0568
 6844+ 1			        endif
 6845:				        putc    #'2'
 6846+ 1  1657			??0592:
 6847+ 1			        ;jnb     SCON.1,putc_loop
 6848+ 1			        ;clr     SCON.1
 6849+ 1  1657	75 99 32	        mov     SBUF,#'2'
 6850:				        tst_alu subb,0c3h,0c5h,002h,004h     ; /CY  AC  OV
 6851+ 1
 6852+ 1	N      00C3	        arg0    set 0c3h
 6853+ 1	N      00C5	        arg1    set 0c5h
 6854+ 1	N      0002	        res     set 002h
 6855+ 1
 6856+ 1			        top_ma  subb,dir0,??0594,<004h>
 6857+ 2  165A	75 60 C3	        mov     dir0,#arg0
 6858+ 2  165D	74 C5		        mov     a,#arg1
 6859+ 2			        ifnb    <004h>
 6860+ 2			        set_cy  004h
 6861+ 3	N      0000	??0599  set     (004h and 1)
 6862+ 3	N      0000	        if      ??0599 eq 1
 6863+ 3			        setb    c
 6864+ 3			        else
 6865+ 3  165F	C3		        clr     c
 6866+ 3			        endif
 6867+ 2			        endif
 6868+ 2  1660	95 60		        subb      a,dir0
 6869+ 2			        ifnb    <004h>
 6870+ 2			        save_psw
 6871+ 3  1662	85 D0 70	        mov     saved_psw,PSW
 6872+ 2			        endif
 6873+ 2  1665	B4 02 6B	        cjne    a,#res,??0594
 6874+ 2			        ifnb    <004h>
 6875+ 2			        tst_psw <004h>,??0594

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 124



 Line  I  Addr  Code            Source

 6876+ 3  1668	E5 70		        mov     a,saved_psw
 6877+ 3  166A	54 C4		        anl     a,#0c4h
 6878+ 3  166C	64 04		        xrl     a,#004h
 6879+ 3  166E	54 FE		        anl     a,#0feh
 6880+ 3  1670	70 61		        jnz     ??0594
 6881+ 2			        endif
 6882+ 1  1672	78 60		        mov     r0,#dir0
 6883+ 1			        top_ma  subb,@r0,??0594,<004h>
 6884+ 2  1674	76 C3		        mov     @r0,#arg0
 6885+ 2  1676	74 C5		        mov     a,#arg1
 6886+ 2			        ifnb    <004h>
 6887+ 2			        set_cy  004h
 6888+ 3	N      0000	??0600  set     (004h and 1)
 6889+ 3	N      0000	        if      ??0600 eq 1
 6890+ 3			        setb    c
 6891+ 3			        else
 6892+ 3  1678	C3		        clr     c
 6893+ 3			        endif
 6894+ 2			        endif
 6895+ 2  1679	96		        subb      a,@r0
 6896+ 2			        ifnb    <004h>
 6897+ 2			        save_psw
 6898+ 3  167A	85 D0 70	        mov     saved_psw,PSW
 6899+ 2			        endif
 6900+ 2  167D	B4 02 53	        cjne    a,#res,??0594
 6901+ 2			        ifnb    <004h>
 6902+ 2			        tst_psw <004h>,??0594
 6903+ 3  1680	E5 70		        mov     a,saved_psw
 6904+ 3  1682	54 C4		        anl     a,#0c4h
 6905+ 3  1684	64 04		        xrl     a,#004h
 6906+ 3  1686	54 FE		        anl     a,#0feh
 6907+ 3  1688	70 49		        jnz     ??0594
 6908+ 2			        endif
 6909+ 1  168A	79 31		        mov     r1,#031h
 6910+ 1			        top_ma  subb,@r1,??0594,<004h>
 6911+ 2  168C	77 C3		        mov     @r1,#arg0
 6912+ 2  168E	74 C5		        mov     a,#arg1
 6913+ 2			        ifnb    <004h>
 6914+ 2			        set_cy  004h
 6915+ 3	N      0000	??0601  set     (004h and 1)
 6916+ 3	N      0000	        if      ??0601 eq 1
 6917+ 3			        setb    c
 6918+ 3			        else
 6919+ 3  1690	C3		        clr     c
 6920+ 3			        endif
 6921+ 2			        endif
 6922+ 2  1691	97		        subb      a,@r1
 6923+ 2			        ifnb    <004h>
 6924+ 2			        save_psw
 6925+ 3  1692	85 D0 70	        mov     saved_psw,PSW
 6926+ 2			        endif
 6927+ 2  1695	B4 02 3B	        cjne    a,#res,??0594
 6928+ 2			        ifnb    <004h>
 6929+ 2			        tst_psw <004h>,??0594
 6930+ 3  1698	E5 70		        mov     a,saved_psw
 6931+ 3  169A	54 C4		        anl     a,#0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 125



 Line  I  Addr  Code            Source

 6932+ 3  169C	64 04		        xrl     a,#004h
 6933+ 3  169E	54 FE		        anl     a,#0feh
 6934+ 3  16A0	70 31		        jnz     ??0594
 6935+ 2			        endif
 6936+ 1
 6937+ 1			        top_ma  subb,r0,??0594,<004h>
 6938+ 2  16A2	78 C3		        mov     r0,#arg0
 6939+ 2  16A4	74 C5		        mov     a,#arg1
 6940+ 2			        ifnb    <004h>
 6941+ 2			        set_cy  004h
 6942+ 3	N      0000	??0602  set     (004h and 1)
 6943+ 3	N      0000	        if      ??0602 eq 1
 6944+ 3			        setb    c
 6945+ 3			        else
 6946+ 3  16A6	C3		        clr     c
 6947+ 3			        endif
 6948+ 2			        endif
 6949+ 2  16A7	98		        subb      a,r0
 6950+ 2			        ifnb    <004h>
 6951+ 2			        save_psw
 6952+ 3  16A8	85 D0 70	        mov     saved_psw,PSW
 6953+ 2			        endif
 6954+ 2  16AB	B4 02 25	        cjne    a,#res,??0594
 6955+ 2			        ifnb    <004h>
 6956+ 2			        tst_psw <004h>,??0594
 6957+ 3  16AE	E5 70		        mov     a,saved_psw
 6958+ 3  16B0	54 C4		        anl     a,#0c4h
 6959+ 3  16B2	64 04		        xrl     a,#004h
 6960+ 3  16B4	54 FE		        anl     a,#0feh
 6961+ 3  16B6	70 1B		        jnz     ??0594
 6962+ 2			        endif
 6963+ 1			        top_ma  subb,r1,??0594,<004h>
 6964+ 2  16B8	79 C3		        mov     r1,#arg0
 6965+ 2  16BA	74 C5		        mov     a,#arg1
 6966+ 2			        ifnb    <004h>
 6967+ 2			        set_cy  004h
 6968+ 3	N      0000	??0603  set     (004h and 1)
 6969+ 3	N      0000	        if      ??0603 eq 1
 6970+ 3			        setb    c
 6971+ 3			        else
 6972+ 3  16BC	C3		        clr     c
 6973+ 3			        endif
 6974+ 2			        endif
 6975+ 2  16BD	99		        subb      a,r1
 6976+ 2			        ifnb    <004h>
 6977+ 2			        save_psw
 6978+ 3  16BE	85 D0 70	        mov     saved_psw,PSW
 6979+ 2			        endif
 6980+ 2  16C1	B4 02 0F	        cjne    a,#res,??0594
 6981+ 2			        ifnb    <004h>
 6982+ 2			        tst_psw <004h>,??0594
 6983+ 3  16C4	E5 70		        mov     a,saved_psw
 6984+ 3  16C6	54 C4		        anl     a,#0c4h
 6985+ 3  16C8	64 04		        xrl     a,#004h
 6986+ 3  16CA	54 FE		        anl     a,#0feh
 6987+ 3  16CC	70 05		        jnz     ??0594

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 126



 Line  I  Addr  Code            Source

 6988+ 2			        endif
 6989+ 1
 6990+ 1			        eot     'a',??0594
 6991+ 2			        putc    #'a'
 6992+ 3  16CE			??0605:
 6993+ 3			        ;jnb     SCON.1,putc_loop
 6994+ 3			        ;clr     SCON.1
 6995+ 3  16CE	75 99 61	        mov     SBUF,#'a'
 6996+ 2  16D1	80 06		        sjmp    ??0604
 6997+ 2  16D3			??0594:  putc    #'?'
 6998+ 3  16D3			??0606:
 6999+ 3			        ;jnb     SCON.1,putc_loop
 7000+ 3			        ;clr     SCON.1
 7001+ 3  16D3	75 99 3F	        mov     SBUF,#'?'
 7002+ 2  16D6	75 6E 01	        mov     fail,#001h
 7003+ 2  16D9			??0604:
 7004+ 1
 7005+ 1			        top_ma  subb,r2,??0595,<004h>
 7006+ 2  16D9	7A C3		        mov     r2,#arg0
 7007+ 2  16DB	74 C5		        mov     a,#arg1
 7008+ 2			        ifnb    <004h>
 7009+ 2			        set_cy  004h
 7010+ 3	N      0000	??0607  set     (004h and 1)
 7011+ 3	N      0000	        if      ??0607 eq 1
 7012+ 3			        setb    c
 7013+ 3			        else
 7014+ 3  16DD	C3		        clr     c
 7015+ 3			        endif
 7016+ 2			        endif
 7017+ 2  16DE	9A		        subb      a,r2
 7018+ 2			        ifnb    <004h>
 7019+ 2			        save_psw
 7020+ 3  16DF	85 D0 70	        mov     saved_psw,PSW
 7021+ 2			        endif
 7022+ 2  16E2	B4 02 25	        cjne    a,#res,??0595
 7023+ 2			        ifnb    <004h>
 7024+ 2			        tst_psw <004h>,??0595
 7025+ 3  16E5	E5 70		        mov     a,saved_psw
 7026+ 3  16E7	54 C4		        anl     a,#0c4h
 7027+ 3  16E9	64 04		        xrl     a,#004h
 7028+ 3  16EB	54 FE		        anl     a,#0feh
 7029+ 3  16ED	70 1B		        jnz     ??0595
 7030+ 2			        endif
 7031+ 1			        top_ma  subb,r3,??0595,<004h>
 7032+ 2  16EF	7B C3		        mov     r3,#arg0
 7033+ 2  16F1	74 C5		        mov     a,#arg1
 7034+ 2			        ifnb    <004h>
 7035+ 2			        set_cy  004h
 7036+ 3	N      0000	??0608  set     (004h and 1)
 7037+ 3	N      0000	        if      ??0608 eq 1
 7038+ 3			        setb    c
 7039+ 3			        else
 7040+ 3  16F3	C3		        clr     c
 7041+ 3			        endif
 7042+ 2			        endif
 7043+ 2  16F4	9B		        subb      a,r3

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 127



 Line  I  Addr  Code            Source

 7044+ 2			        ifnb    <004h>
 7045+ 2			        save_psw
 7046+ 3  16F5	85 D0 70	        mov     saved_psw,PSW
 7047+ 2			        endif
 7048+ 2  16F8	B4 02 0F	        cjne    a,#res,??0595
 7049+ 2			        ifnb    <004h>
 7050+ 2			        tst_psw <004h>,??0595
 7051+ 3  16FB	E5 70		        mov     a,saved_psw
 7052+ 3  16FD	54 C4		        anl     a,#0c4h
 7053+ 3  16FF	64 04		        xrl     a,#004h
 7054+ 3  1701	54 FE		        anl     a,#0feh
 7055+ 3  1703	70 05		        jnz     ??0595
 7056+ 2			        endif
 7057+ 1
 7058+ 1			        eot     'b',??0595
 7059+ 2			        putc    #'b'
 7060+ 3  1705			??0610:
 7061+ 3			        ;jnb     SCON.1,putc_loop
 7062+ 3			        ;clr     SCON.1
 7063+ 3  1705	75 99 62	        mov     SBUF,#'b'
 7064+ 2  1708	80 06		        sjmp    ??0609
 7065+ 2  170A			??0595:  putc    #'?'
 7066+ 3  170A			??0611:
 7067+ 3			        ;jnb     SCON.1,putc_loop
 7068+ 3			        ;clr     SCON.1
 7069+ 3  170A	75 99 3F	        mov     SBUF,#'?'
 7070+ 2  170D	75 6E 01	        mov     fail,#001h
 7071+ 2  1710			??0609:
 7072+ 1
 7073+ 1			        top_ma  subb,r4,??0596,<004h>
 7074+ 2  1710	7C C3		        mov     r4,#arg0
 7075+ 2  1712	74 C5		        mov     a,#arg1
 7076+ 2			        ifnb    <004h>
 7077+ 2			        set_cy  004h
 7078+ 3	N      0000	??0612  set     (004h and 1)
 7079+ 3	N      0000	        if      ??0612 eq 1
 7080+ 3			        setb    c
 7081+ 3			        else
 7082+ 3  1714	C3		        clr     c
 7083+ 3			        endif
 7084+ 2			        endif
 7085+ 2  1715	9C		        subb      a,r4
 7086+ 2			        ifnb    <004h>
 7087+ 2			        save_psw
 7088+ 3  1716	85 D0 70	        mov     saved_psw,PSW
 7089+ 2			        endif
 7090+ 2  1719	B4 02 25	        cjne    a,#res,??0596
 7091+ 2			        ifnb    <004h>
 7092+ 2			        tst_psw <004h>,??0596
 7093+ 3  171C	E5 70		        mov     a,saved_psw
 7094+ 3  171E	54 C4		        anl     a,#0c4h
 7095+ 3  1720	64 04		        xrl     a,#004h
 7096+ 3  1722	54 FE		        anl     a,#0feh
 7097+ 3  1724	70 1B		        jnz     ??0596
 7098+ 2			        endif
 7099+ 1			        top_ma  subb,r5,??0596,<004h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 128



 Line  I  Addr  Code            Source

 7100+ 2  1726	7D C3		        mov     r5,#arg0
 7101+ 2  1728	74 C5		        mov     a,#arg1
 7102+ 2			        ifnb    <004h>
 7103+ 2			        set_cy  004h
 7104+ 3	N      0000	??0613  set     (004h and 1)
 7105+ 3	N      0000	        if      ??0613 eq 1
 7106+ 3			        setb    c
 7107+ 3			        else
 7108+ 3  172A	C3		        clr     c
 7109+ 3			        endif
 7110+ 2			        endif
 7111+ 2  172B	9D		        subb      a,r5
 7112+ 2			        ifnb    <004h>
 7113+ 2			        save_psw
 7114+ 3  172C	85 D0 70	        mov     saved_psw,PSW
 7115+ 2			        endif
 7116+ 2  172F	B4 02 0F	        cjne    a,#res,??0596
 7117+ 2			        ifnb    <004h>
 7118+ 2			        tst_psw <004h>,??0596
 7119+ 3  1732	E5 70		        mov     a,saved_psw
 7120+ 3  1734	54 C4		        anl     a,#0c4h
 7121+ 3  1736	64 04		        xrl     a,#004h
 7122+ 3  1738	54 FE		        anl     a,#0feh
 7123+ 3  173A	70 05		        jnz     ??0596
 7124+ 2			        endif
 7125+ 1
 7126+ 1			        eot     'c',??0596
 7127+ 2			        putc    #'c'
 7128+ 3  173C			??0615:
 7129+ 3			        ;jnb     SCON.1,putc_loop
 7130+ 3			        ;clr     SCON.1
 7131+ 3  173C	75 99 63	        mov     SBUF,#'c'
 7132+ 2  173F	80 06		        sjmp    ??0614
 7133+ 2  1741			??0596:  putc    #'?'
 7134+ 3  1741			??0616:
 7135+ 3			        ;jnb     SCON.1,putc_loop
 7136+ 3			        ;clr     SCON.1
 7137+ 3  1741	75 99 3F	        mov     SBUF,#'?'
 7138+ 2  1744	75 6E 01	        mov     fail,#001h
 7139+ 2  1747			??0614:
 7140+ 1
 7141+ 1			        top_ma  subb,r6,??0593,<004h>
 7142+ 2  1747	7E C3		        mov     r6,#arg0
 7143+ 2  1749	74 C5		        mov     a,#arg1
 7144+ 2			        ifnb    <004h>
 7145+ 2			        set_cy  004h
 7146+ 3	N      0000	??0617  set     (004h and 1)
 7147+ 3	N      0000	        if      ??0617 eq 1
 7148+ 3			        setb    c
 7149+ 3			        else
 7150+ 3  174B	C3		        clr     c
 7151+ 3			        endif
 7152+ 2			        endif
 7153+ 2  174C	9E		        subb      a,r6
 7154+ 2			        ifnb    <004h>
 7155+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 129



 Line  I  Addr  Code            Source

 7156+ 3  174D	85 D0 70	        mov     saved_psw,PSW
 7157+ 2			        endif
 7158+ 2  1750	B4 02 25	        cjne    a,#res,??0593
 7159+ 2			        ifnb    <004h>
 7160+ 2			        tst_psw <004h>,??0593
 7161+ 3  1753	E5 70		        mov     a,saved_psw
 7162+ 3  1755	54 C4		        anl     a,#0c4h
 7163+ 3  1757	64 04		        xrl     a,#004h
 7164+ 3  1759	54 FE		        anl     a,#0feh
 7165+ 3  175B	70 1B		        jnz     ??0593
 7166+ 2			        endif
 7167+ 1			        top_ma  subb,r7,??0593,<004h>
 7168+ 2  175D	7F C3		        mov     r7,#arg0
 7169+ 2  175F	74 C5		        mov     a,#arg1
 7170+ 2			        ifnb    <004h>
 7171+ 2			        set_cy  004h
 7172+ 3	N      0000	??0618  set     (004h and 1)
 7173+ 3	N      0000	        if      ??0618 eq 1
 7174+ 3			        setb    c
 7175+ 3			        else
 7176+ 3  1761	C3		        clr     c
 7177+ 3			        endif
 7178+ 2			        endif
 7179+ 2  1762	9F		        subb      a,r7
 7180+ 2			        ifnb    <004h>
 7181+ 2			        save_psw
 7182+ 3  1763	85 D0 70	        mov     saved_psw,PSW
 7183+ 2			        endif
 7184+ 2  1766	B4 02 0F	        cjne    a,#res,??0593
 7185+ 2			        ifnb    <004h>
 7186+ 2			        tst_psw <004h>,??0593
 7187+ 3  1769	E5 70		        mov     a,saved_psw
 7188+ 3  176B	54 C4		        anl     a,#0c4h
 7189+ 3  176D	64 04		        xrl     a,#004h
 7190+ 3  176F	54 FE		        anl     a,#0feh
 7191+ 3  1771	70 05		        jnz     ??0593
 7192+ 2			        endif
 7193+ 1
 7194+ 1			        eot     'd',??0593
 7195+ 2			        putc    #'d'
 7196+ 3  1773			??0620:
 7197+ 3			        ;jnb     SCON.1,putc_loop
 7198+ 3			        ;clr     SCON.1
 7199+ 3  1773	75 99 64	        mov     SBUF,#'d'
 7200+ 2  1776	80 06		        sjmp    ??0619
 7201+ 2  1778			??0593:  putc    #'?'
 7202+ 3  1778			??0621:
 7203+ 3			        ;jnb     SCON.1,putc_loop
 7204+ 3			        ;clr     SCON.1
 7205+ 3  1778	75 99 3F	        mov     SBUF,#'?'
 7206+ 2  177B	75 6E 01	        mov     fail,#001h
 7207+ 2  177E			??0619:
 7208+ 1
 7209+ 1			        ifb     <004h>
 7210+ 1
 7211+ 1			        top_mb  subb,a,??0597,<004h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 130



 Line  I  Addr  Code            Source

 7212+ 1			        top_mb  subb,dir0,??0597,<004h>
 7213+ 1
 7214+ 1			        eot     'e',??0597
 7215+ 1
 7216+ 1			        top_mc  subb,??0598,<004h>
 7217+ 1
 7218+ 1			        eot     'f',??0598
 7219+ 1			        endif
 7220:				        putc    #'3'
 7221+ 1  177E			??0622:
 7222+ 1			        ;jnb     SCON.1,putc_loop
 7223+ 1			        ;clr     SCON.1
 7224+ 1  177E	75 99 33	        mov     SBUF,#'3'
 7225:				        tst_alu subb,0c3h,0c5h,001h,005h     ; /CY  AC  OV (CY input)
 7226+ 1
 7227+ 1	N      00C3	        arg0    set 0c3h
 7228+ 1	N      00C5	        arg1    set 0c5h
 7229+ 1	N      0001	        res     set 001h
 7230+ 1
 7231+ 1			        top_ma  subb,dir0,??0624,<005h>
 7232+ 2  1781	75 60 C3	        mov     dir0,#arg0
 7233+ 2  1784	74 C5		        mov     a,#arg1
 7234+ 2			        ifnb    <005h>
 7235+ 2			        set_cy  005h
 7236+ 3	N      0001	??0629  set     (005h and 1)
 7237+ 3	N      FFFF	        if      ??0629 eq 1
 7238+ 3  1786	D3		        setb    c
 7239+ 3			        else
 7240+ 3			        clr     c
 7241+ 3			        endif
 7242+ 2			        endif
 7243+ 2  1787	95 60		        subb      a,dir0
 7244+ 2			        ifnb    <005h>
 7245+ 2			        save_psw
 7246+ 3  1789	85 D0 70	        mov     saved_psw,PSW
 7247+ 2			        endif
 7248+ 2  178C	B4 01 6B	        cjne    a,#res,??0624
 7249+ 2			        ifnb    <005h>
 7250+ 2			        tst_psw <005h>,??0624
 7251+ 3  178F	E5 70		        mov     a,saved_psw
 7252+ 3  1791	54 C4		        anl     a,#0c4h
 7253+ 3  1793	64 05		        xrl     a,#005h
 7254+ 3  1795	54 FE		        anl     a,#0feh
 7255+ 3  1797	70 61		        jnz     ??0624
 7256+ 2			        endif
 7257+ 1  1799	78 60		        mov     r0,#dir0
 7258+ 1			        top_ma  subb,@r0,??0624,<005h>
 7259+ 2  179B	76 C3		        mov     @r0,#arg0
 7260+ 2  179D	74 C5		        mov     a,#arg1
 7261+ 2			        ifnb    <005h>
 7262+ 2			        set_cy  005h
 7263+ 3	N      0001	??0630  set     (005h and 1)
 7264+ 3	N      FFFF	        if      ??0630 eq 1
 7265+ 3  179F	D3		        setb    c
 7266+ 3			        else
 7267+ 3			        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 131



 Line  I  Addr  Code            Source

 7268+ 3			        endif
 7269+ 2			        endif
 7270+ 2  17A0	96		        subb      a,@r0
 7271+ 2			        ifnb    <005h>
 7272+ 2			        save_psw
 7273+ 3  17A1	85 D0 70	        mov     saved_psw,PSW
 7274+ 2			        endif
 7275+ 2  17A4	B4 01 53	        cjne    a,#res,??0624
 7276+ 2			        ifnb    <005h>
 7277+ 2			        tst_psw <005h>,??0624
 7278+ 3  17A7	E5 70		        mov     a,saved_psw
 7279+ 3  17A9	54 C4		        anl     a,#0c4h
 7280+ 3  17AB	64 05		        xrl     a,#005h
 7281+ 3  17AD	54 FE		        anl     a,#0feh
 7282+ 3  17AF	70 49		        jnz     ??0624
 7283+ 2			        endif
 7284+ 1  17B1	79 31		        mov     r1,#031h
 7285+ 1			        top_ma  subb,@r1,??0624,<005h>
 7286+ 2  17B3	77 C3		        mov     @r1,#arg0
 7287+ 2  17B5	74 C5		        mov     a,#arg1
 7288+ 2			        ifnb    <005h>
 7289+ 2			        set_cy  005h
 7290+ 3	N      0001	??0631  set     (005h and 1)
 7291+ 3	N      FFFF	        if      ??0631 eq 1
 7292+ 3  17B7	D3		        setb    c
 7293+ 3			        else
 7294+ 3			        clr     c
 7295+ 3			        endif
 7296+ 2			        endif
 7297+ 2  17B8	97		        subb      a,@r1
 7298+ 2			        ifnb    <005h>
 7299+ 2			        save_psw
 7300+ 3  17B9	85 D0 70	        mov     saved_psw,PSW
 7301+ 2			        endif
 7302+ 2  17BC	B4 01 3B	        cjne    a,#res,??0624
 7303+ 2			        ifnb    <005h>
 7304+ 2			        tst_psw <005h>,??0624
 7305+ 3  17BF	E5 70		        mov     a,saved_psw
 7306+ 3  17C1	54 C4		        anl     a,#0c4h
 7307+ 3  17C3	64 05		        xrl     a,#005h
 7308+ 3  17C5	54 FE		        anl     a,#0feh
 7309+ 3  17C7	70 31		        jnz     ??0624
 7310+ 2			        endif
 7311+ 1
 7312+ 1			        top_ma  subb,r0,??0624,<005h>
 7313+ 2  17C9	78 C3		        mov     r0,#arg0
 7314+ 2  17CB	74 C5		        mov     a,#arg1
 7315+ 2			        ifnb    <005h>
 7316+ 2			        set_cy  005h
 7317+ 3	N      0001	??0632  set     (005h and 1)
 7318+ 3	N      FFFF	        if      ??0632 eq 1
 7319+ 3  17CD	D3		        setb    c
 7320+ 3			        else
 7321+ 3			        clr     c
 7322+ 3			        endif
 7323+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 132



 Line  I  Addr  Code            Source

 7324+ 2  17CE	98		        subb      a,r0
 7325+ 2			        ifnb    <005h>
 7326+ 2			        save_psw
 7327+ 3  17CF	85 D0 70	        mov     saved_psw,PSW
 7328+ 2			        endif
 7329+ 2  17D2	B4 01 25	        cjne    a,#res,??0624
 7330+ 2			        ifnb    <005h>
 7331+ 2			        tst_psw <005h>,??0624
 7332+ 3  17D5	E5 70		        mov     a,saved_psw
 7333+ 3  17D7	54 C4		        anl     a,#0c4h
 7334+ 3  17D9	64 05		        xrl     a,#005h
 7335+ 3  17DB	54 FE		        anl     a,#0feh
 7336+ 3  17DD	70 1B		        jnz     ??0624
 7337+ 2			        endif
 7338+ 1			        top_ma  subb,r1,??0624,<005h>
 7339+ 2  17DF	79 C3		        mov     r1,#arg0
 7340+ 2  17E1	74 C5		        mov     a,#arg1
 7341+ 2			        ifnb    <005h>
 7342+ 2			        set_cy  005h
 7343+ 3	N      0001	??0633  set     (005h and 1)
 7344+ 3	N      FFFF	        if      ??0633 eq 1
 7345+ 3  17E3	D3		        setb    c
 7346+ 3			        else
 7347+ 3			        clr     c
 7348+ 3			        endif
 7349+ 2			        endif
 7350+ 2  17E4	99		        subb      a,r1
 7351+ 2			        ifnb    <005h>
 7352+ 2			        save_psw
 7353+ 3  17E5	85 D0 70	        mov     saved_psw,PSW
 7354+ 2			        endif
 7355+ 2  17E8	B4 01 0F	        cjne    a,#res,??0624
 7356+ 2			        ifnb    <005h>
 7357+ 2			        tst_psw <005h>,??0624
 7358+ 3  17EB	E5 70		        mov     a,saved_psw
 7359+ 3  17ED	54 C4		        anl     a,#0c4h
 7360+ 3  17EF	64 05		        xrl     a,#005h
 7361+ 3  17F1	54 FE		        anl     a,#0feh
 7362+ 3  17F3	70 05		        jnz     ??0624
 7363+ 2			        endif
 7364+ 1
 7365+ 1			        eot     'a',??0624
 7366+ 2			        putc    #'a'
 7367+ 3  17F5			??0635:
 7368+ 3			        ;jnb     SCON.1,putc_loop
 7369+ 3			        ;clr     SCON.1
 7370+ 3  17F5	75 99 61	        mov     SBUF,#'a'
 7371+ 2  17F8	80 06		        sjmp    ??0634
 7372+ 2  17FA			??0624:  putc    #'?'
 7373+ 3  17FA			??0636:
 7374+ 3			        ;jnb     SCON.1,putc_loop
 7375+ 3			        ;clr     SCON.1
 7376+ 3  17FA	75 99 3F	        mov     SBUF,#'?'
 7377+ 2  17FD	75 6E 01	        mov     fail,#001h
 7378+ 2  1800			??0634:
 7379+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 133



 Line  I  Addr  Code            Source

 7380+ 1			        top_ma  subb,r2,??0625,<005h>
 7381+ 2  1800	7A C3		        mov     r2,#arg0
 7382+ 2  1802	74 C5		        mov     a,#arg1
 7383+ 2			        ifnb    <005h>
 7384+ 2			        set_cy  005h
 7385+ 3	N      0001	??0637  set     (005h and 1)
 7386+ 3	N      FFFF	        if      ??0637 eq 1
 7387+ 3  1804	D3		        setb    c
 7388+ 3			        else
 7389+ 3			        clr     c
 7390+ 3			        endif
 7391+ 2			        endif
 7392+ 2  1805	9A		        subb      a,r2
 7393+ 2			        ifnb    <005h>
 7394+ 2			        save_psw
 7395+ 3  1806	85 D0 70	        mov     saved_psw,PSW
 7396+ 2			        endif
 7397+ 2  1809	B4 01 25	        cjne    a,#res,??0625
 7398+ 2			        ifnb    <005h>
 7399+ 2			        tst_psw <005h>,??0625
 7400+ 3  180C	E5 70		        mov     a,saved_psw
 7401+ 3  180E	54 C4		        anl     a,#0c4h
 7402+ 3  1810	64 05		        xrl     a,#005h
 7403+ 3  1812	54 FE		        anl     a,#0feh
 7404+ 3  1814	70 1B		        jnz     ??0625
 7405+ 2			        endif
 7406+ 1			        top_ma  subb,r3,??0625,<005h>
 7407+ 2  1816	7B C3		        mov     r3,#arg0
 7408+ 2  1818	74 C5		        mov     a,#arg1
 7409+ 2			        ifnb    <005h>
 7410+ 2			        set_cy  005h
 7411+ 3	N      0001	??0638  set     (005h and 1)
 7412+ 3	N      FFFF	        if      ??0638 eq 1
 7413+ 3  181A	D3		        setb    c
 7414+ 3			        else
 7415+ 3			        clr     c
 7416+ 3			        endif
 7417+ 2			        endif
 7418+ 2  181B	9B		        subb      a,r3
 7419+ 2			        ifnb    <005h>
 7420+ 2			        save_psw
 7421+ 3  181C	85 D0 70	        mov     saved_psw,PSW
 7422+ 2			        endif
 7423+ 2  181F	B4 01 0F	        cjne    a,#res,??0625
 7424+ 2			        ifnb    <005h>
 7425+ 2			        tst_psw <005h>,??0625
 7426+ 3  1822	E5 70		        mov     a,saved_psw
 7427+ 3  1824	54 C4		        anl     a,#0c4h
 7428+ 3  1826	64 05		        xrl     a,#005h
 7429+ 3  1828	54 FE		        anl     a,#0feh
 7430+ 3  182A	70 05		        jnz     ??0625
 7431+ 2			        endif
 7432+ 1
 7433+ 1			        eot     'b',??0625
 7434+ 2			        putc    #'b'
 7435+ 3  182C			??0640:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 134



 Line  I  Addr  Code            Source

 7436+ 3			        ;jnb     SCON.1,putc_loop
 7437+ 3			        ;clr     SCON.1
 7438+ 3  182C	75 99 62	        mov     SBUF,#'b'
 7439+ 2  182F	80 06		        sjmp    ??0639
 7440+ 2  1831			??0625:  putc    #'?'
 7441+ 3  1831			??0641:
 7442+ 3			        ;jnb     SCON.1,putc_loop
 7443+ 3			        ;clr     SCON.1
 7444+ 3  1831	75 99 3F	        mov     SBUF,#'?'
 7445+ 2  1834	75 6E 01	        mov     fail,#001h
 7446+ 2  1837			??0639:
 7447+ 1
 7448+ 1			        top_ma  subb,r4,??0626,<005h>
 7449+ 2  1837	7C C3		        mov     r4,#arg0
 7450+ 2  1839	74 C5		        mov     a,#arg1
 7451+ 2			        ifnb    <005h>
 7452+ 2			        set_cy  005h
 7453+ 3	N      0001	??0642  set     (005h and 1)
 7454+ 3	N      FFFF	        if      ??0642 eq 1
 7455+ 3  183B	D3		        setb    c
 7456+ 3			        else
 7457+ 3			        clr     c
 7458+ 3			        endif
 7459+ 2			        endif
 7460+ 2  183C	9C		        subb      a,r4
 7461+ 2			        ifnb    <005h>
 7462+ 2			        save_psw
 7463+ 3  183D	85 D0 70	        mov     saved_psw,PSW
 7464+ 2			        endif
 7465+ 2  1840	B4 01 25	        cjne    a,#res,??0626
 7466+ 2			        ifnb    <005h>
 7467+ 2			        tst_psw <005h>,??0626
 7468+ 3  1843	E5 70		        mov     a,saved_psw
 7469+ 3  1845	54 C4		        anl     a,#0c4h
 7470+ 3  1847	64 05		        xrl     a,#005h
 7471+ 3  1849	54 FE		        anl     a,#0feh
 7472+ 3  184B	70 1B		        jnz     ??0626
 7473+ 2			        endif
 7474+ 1			        top_ma  subb,r5,??0626,<005h>
 7475+ 2  184D	7D C3		        mov     r5,#arg0
 7476+ 2  184F	74 C5		        mov     a,#arg1
 7477+ 2			        ifnb    <005h>
 7478+ 2			        set_cy  005h
 7479+ 3	N      0001	??0643  set     (005h and 1)
 7480+ 3	N      FFFF	        if      ??0643 eq 1
 7481+ 3  1851	D3		        setb    c
 7482+ 3			        else
 7483+ 3			        clr     c
 7484+ 3			        endif
 7485+ 2			        endif
 7486+ 2  1852	9D		        subb      a,r5
 7487+ 2			        ifnb    <005h>
 7488+ 2			        save_psw
 7489+ 3  1853	85 D0 70	        mov     saved_psw,PSW
 7490+ 2			        endif
 7491+ 2  1856	B4 01 0F	        cjne    a,#res,??0626

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 135



 Line  I  Addr  Code            Source

 7492+ 2			        ifnb    <005h>
 7493+ 2			        tst_psw <005h>,??0626
 7494+ 3  1859	E5 70		        mov     a,saved_psw
 7495+ 3  185B	54 C4		        anl     a,#0c4h
 7496+ 3  185D	64 05		        xrl     a,#005h
 7497+ 3  185F	54 FE		        anl     a,#0feh
 7498+ 3  1861	70 05		        jnz     ??0626
 7499+ 2			        endif
 7500+ 1
 7501+ 1			        eot     'c',??0626
 7502+ 2			        putc    #'c'
 7503+ 3  1863			??0645:
 7504+ 3			        ;jnb     SCON.1,putc_loop
 7505+ 3			        ;clr     SCON.1
 7506+ 3  1863	75 99 63	        mov     SBUF,#'c'
 7507+ 2  1866	80 06		        sjmp    ??0644
 7508+ 2  1868			??0626:  putc    #'?'
 7509+ 3  1868			??0646:
 7510+ 3			        ;jnb     SCON.1,putc_loop
 7511+ 3			        ;clr     SCON.1
 7512+ 3  1868	75 99 3F	        mov     SBUF,#'?'
 7513+ 2  186B	75 6E 01	        mov     fail,#001h
 7514+ 2  186E			??0644:
 7515+ 1
 7516+ 1			        top_ma  subb,r6,??0623,<005h>
 7517+ 2  186E	7E C3		        mov     r6,#arg0
 7518+ 2  1870	74 C5		        mov     a,#arg1
 7519+ 2			        ifnb    <005h>
 7520+ 2			        set_cy  005h
 7521+ 3	N      0001	??0647  set     (005h and 1)
 7522+ 3	N      FFFF	        if      ??0647 eq 1
 7523+ 3  1872	D3		        setb    c
 7524+ 3			        else
 7525+ 3			        clr     c
 7526+ 3			        endif
 7527+ 2			        endif
 7528+ 2  1873	9E		        subb      a,r6
 7529+ 2			        ifnb    <005h>
 7530+ 2			        save_psw
 7531+ 3  1874	85 D0 70	        mov     saved_psw,PSW
 7532+ 2			        endif
 7533+ 2  1877	B4 01 25	        cjne    a,#res,??0623
 7534+ 2			        ifnb    <005h>
 7535+ 2			        tst_psw <005h>,??0623
 7536+ 3  187A	E5 70		        mov     a,saved_psw
 7537+ 3  187C	54 C4		        anl     a,#0c4h
 7538+ 3  187E	64 05		        xrl     a,#005h
 7539+ 3  1880	54 FE		        anl     a,#0feh
 7540+ 3  1882	70 1B		        jnz     ??0623
 7541+ 2			        endif
 7542+ 1			        top_ma  subb,r7,??0623,<005h>
 7543+ 2  1884	7F C3		        mov     r7,#arg0
 7544+ 2  1886	74 C5		        mov     a,#arg1
 7545+ 2			        ifnb    <005h>
 7546+ 2			        set_cy  005h
 7547+ 3	N      0001	??0648  set     (005h and 1)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 136



 Line  I  Addr  Code            Source

 7548+ 3	N      FFFF	        if      ??0648 eq 1
 7549+ 3  1888	D3		        setb    c
 7550+ 3			        else
 7551+ 3			        clr     c
 7552+ 3			        endif
 7553+ 2			        endif
 7554+ 2  1889	9F		        subb      a,r7
 7555+ 2			        ifnb    <005h>
 7556+ 2			        save_psw
 7557+ 3  188A	85 D0 70	        mov     saved_psw,PSW
 7558+ 2			        endif
 7559+ 2  188D	B4 01 0F	        cjne    a,#res,??0623
 7560+ 2			        ifnb    <005h>
 7561+ 2			        tst_psw <005h>,??0623
 7562+ 3  1890	E5 70		        mov     a,saved_psw
 7563+ 3  1892	54 C4		        anl     a,#0c4h
 7564+ 3  1894	64 05		        xrl     a,#005h
 7565+ 3  1896	54 FE		        anl     a,#0feh
 7566+ 3  1898	70 05		        jnz     ??0623
 7567+ 2			        endif
 7568+ 1
 7569+ 1			        eot     'd',??0623
 7570+ 2			        putc    #'d'
 7571+ 3  189A			??0650:
 7572+ 3			        ;jnb     SCON.1,putc_loop
 7573+ 3			        ;clr     SCON.1
 7574+ 3  189A	75 99 64	        mov     SBUF,#'d'
 7575+ 2  189D	80 06		        sjmp    ??0649
 7576+ 2  189F			??0623:  putc    #'?'
 7577+ 3  189F			??0651:
 7578+ 3			        ;jnb     SCON.1,putc_loop
 7579+ 3			        ;clr     SCON.1
 7580+ 3  189F	75 99 3F	        mov     SBUF,#'?'
 7581+ 2  18A2	75 6E 01	        mov     fail,#001h
 7582+ 2  18A5			??0649:
 7583+ 1
 7584+ 1			        ifb     <005h>
 7585+ 1
 7586+ 1			        top_mb  subb,a,??0627,<005h>
 7587+ 1			        top_mb  subb,dir0,??0627,<005h>
 7588+ 1
 7589+ 1			        eot     'e',??0627
 7590+ 1
 7591+ 1			        top_mc  subb,??0628,<005h>
 7592+ 1
 7593+ 1			        eot     'f',??0628
 7594+ 1			        endif
 7595:
 7596:				        ; FIXME subb tests are specially weak
 7597:
 7598:				        put_crlf                    ; end of test series
 7599+ 1			        putc    #13
 7600+ 2  18A5			??0652:
 7601+ 2			        ;jnb     SCON.1,putc_loop
 7602+ 2			        ;clr     SCON.1
 7603+ 2  18A5	75 99 0D	        mov     SBUF,#13

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 137



 Line  I  Addr  Code            Source

 7604+ 1			        putc    #10
 7605+ 2  18A8			??0653:
 7606+ 2			        ;jnb     SCON.1,putc_loop
 7607+ 2			        ;clr     SCON.1
 7608+ 2  18A8	75 99 0A	        mov     SBUF,#10
 7609:
 7610:
 7611:				        ;-- Test series O ------------------------------------------------------
 7612:				        ; PUSH and POP
 7613:				        ; a.- <PUSH dir>
 7614:				        ; b.- <POP dir>
 7615:
 7616:				        putc    #'O'                ; start of test series
 7617+ 1  18AB			??0654:
 7618+ 1			        ;jnb     SCON.1,putc_loop
 7619+ 1			        ;clr     SCON.1
 7620+ 1  18AB	75 99 4F	        mov     SBUF,#'O'
 7621:
 7622:				        ; <PUSH dir>
 7623:	  18AE	75 81 9F	        mov     SP,#stack0          ; prepare SP...
 7624:	  18B1	75 60 12	        mov     dir0,#012h          ; ...and data to be pushed
 7625:	  18B4	78 A0		        mov     r0,#(stack0+1)      ; r0->stack so we can verify data is pushed
 7626:	  18B6	76 00		        mov     @r0,#000h           ; clear target stack location
 7627:	  18B8	C0 60		        push    dir0                ; <PUSH dir>
 7628:	  18BA	E6		        mov     a,@r0               ; verify data has been pushed
 7629:	  18BB	B4 12 0A	        cjne    a,#012h,to_a0
 7630:	  18BE	E5 81		        mov     a,SP                ; verify SP has been incremented
 7631:	  18C0	B4 A0 05	        cjne    a,#(stack0+1),to_a0
 7632:
 7633:				        eot     'a',to_a0
 7634+ 1			        putc    #'a'
 7635+ 2  18C3			??0656:
 7636+ 2			        ;jnb     SCON.1,putc_loop
 7637+ 2			        ;clr     SCON.1
 7638+ 2  18C3	75 99 61	        mov     SBUF,#'a'
 7639+ 1  18C6	80 06		        sjmp    ??0655
 7640+ 1  18C8			to_a0:  putc    #'?'
 7641+ 2  18C8			??0657:
 7642+ 2			        ;jnb     SCON.1,putc_loop
 7643+ 2			        ;clr     SCON.1
 7644+ 2  18C8	75 99 3F	        mov     SBUF,#'?'
 7645+ 1  18CB	75 6E 01	        mov     fail,#001h
 7646+ 1  18CE			??0655:
 7647:
 7648:				        ; <POP dir> We'll use the data that was pushed previously
 7649:	  18CE	75 61 00	        mov     dir1,#000h          ; clear POP target
 7650:	  18D1	E4		        clr     a
 7651:	  18D2	D0 61		        pop     dir1                ; <POP dir>
 7652:	  18D4	79 61		        mov     r1,#dir1            ; verify data has been popped
 7653:	  18D6	E7		        mov     a,@r1
 7654:	  18D7	B4 12 0A	        cjne    a,#012h,to_b0
 7655:	  18DA	E5 81		        mov     a,SP                ; verify SP has been decremented
 7656:	  18DC	B4 9F 05	        cjne    a,#stack0,to_b0
 7657:
 7658:				        eot     'b',to_b0
 7659+ 1			        putc    #'b'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 138



 Line  I  Addr  Code            Source

 7660+ 2  18DF			??0659:
 7661+ 2			        ;jnb     SCON.1,putc_loop
 7662+ 2			        ;clr     SCON.1
 7663+ 2  18DF	75 99 62	        mov     SBUF,#'b'
 7664+ 1  18E2	80 06		        sjmp    ??0658
 7665+ 1  18E4			to_b0:  putc    #'?'
 7666+ 2  18E4			??0660:
 7667+ 2			        ;jnb     SCON.1,putc_loop
 7668+ 2			        ;clr     SCON.1
 7669+ 2  18E4	75 99 3F	        mov     SBUF,#'?'
 7670+ 1  18E7	75 6E 01	        mov     fail,#001h
 7671+ 1  18EA			??0658:
 7672:
 7673:				        put_crlf                    ; end of test series
 7674+ 1			        putc    #13
 7675+ 2  18EA			??0661:
 7676+ 2			        ;jnb     SCON.1,putc_loop
 7677+ 2			        ;clr     SCON.1
 7678+ 2  18EA	75 99 0D	        mov     SBUF,#13
 7679+ 1			        putc    #10
 7680+ 2  18ED			??0662:
 7681+ 2			        ;jnb     SCON.1,putc_loop
 7682+ 2			        ;clr     SCON.1
 7683+ 2  18ED	75 99 0A	        mov     SBUF,#10
 7684:
 7685:				        ;-- Test series P ------------------------------------------------------
 7686:				        ; Access to XRAM -- note that current tests are bare-bone minimal!
 7687:				        ; a.- <MOV DPTR, #16>
 7688:				        ; b.- <MOVX @DPTR, A>, <MOVX A, @DPTR>
 7689:				        ; c.- <MOVX A, @Ri>
 7690:				        ; d.- <MOVX @Ri, A>
 7691:
 7692:				        putc    #'P'                ; start of test series
 7693+ 1  18F0			??0663:
 7694+ 1			        ;jnb     SCON.1,putc_loop
 7695+ 1			        ;clr     SCON.1
 7696+ 1  18F0	75 99 50	        mov     SBUF,#'P'
 7697:
 7698:				        ; a.- <MOV DPTR, #16>
 7699:	  18F3	75 83 65	        mov     DPH,#065h           ; initialize DPTR with known value...
 7700:	  18F6	75 82 43	        mov     DPL,#043h
 7701:
 7702:	  18F9	90 01 23	        mov     DPTR,#0123h         ; ...then load it through MOV...
 7703:	  18FC	E5 83		        mov     a,DPH               ; ...and verify the load
 7704:	  18FE	B4 01 0A	        cjne    a,#01h,tp_a0
 7705:	  1901	E5 82		        mov     a,DPL
 7706:	  1903	B4 23 05	        cjne    a,#23h,tp_a0
 7707:
 7708:				        eot     'a',tp_a0
 7709+ 1			        putc    #'a'
 7710+ 2  1906			??0665:
 7711+ 2			        ;jnb     SCON.1,putc_loop
 7712+ 2			        ;clr     SCON.1
 7713+ 2  1906	75 99 61	        mov     SBUF,#'a'
 7714+ 1  1909	80 06		        sjmp    ??0664
 7715+ 1  190B			tp_a0:  putc    #'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 139



 Line  I  Addr  Code            Source

 7716+ 2  190B			??0666:
 7717+ 2			        ;jnb     SCON.1,putc_loop
 7718+ 2			        ;clr     SCON.1
 7719+ 2  190B	75 99 3F	        mov     SBUF,#'?'
 7720+ 1  190E	75 6E 01	        mov     fail,#001h
 7721+ 1  1911			??0664:
 7722:
 7723:
 7724:				        ; b.- <MOVX @DPTR, A>, <MOVX A, @DPTR>
 7725:				        ; We have no independent means to verify XRAM writes or reads, other
 7726:				        ; than the very instructions we're testing. So we should store a data
 7727:				        ; pattern on XRAM that is difficult to get back 'by chance'.
 7728:				        ; Ideally we would try all areas of XRAM, back-to-back operations, etc.
 7729:				        ; For the time being a simple word store will suffice.
 7730:	  1911	90 00 13	        mov     DPTR,#0013h         ; Store 55h, aah at XRAM[0013h]...
 7731:	  1914	74 55		        mov     A,#55h
 7732:	  1916	F0		        movx    @DPTR,a
 7733:	  1917	A3		        inc     DPTR
 7734:	  1918	F4		        cpl     a
 7735:	  1919	F0		        movx    @DPTR,a
 7736:
 7737:	  191A	90 00 13	        mov     DPTR,#0013h         ; ...then verify the store
 7738:	  191D	E0		        movx    a,@DPTR
 7739:	  191E	B4 55 0A	        cjne    a,#55h,tp_b0
 7740:	  1921	A3		        inc     DPTR
 7741:	  1922	E0		        movx    a,@DPTR
 7742:	  1923	B4 AA 05	        cjne    a,#0aah,tp_b0
 7743:
 7744:				        eot     'b',tp_b0
 7745+ 1			        putc    #'b'
 7746+ 2  1926			??0668:
 7747+ 2			        ;jnb     SCON.1,putc_loop
 7748+ 2			        ;clr     SCON.1
 7749+ 2  1926	75 99 62	        mov     SBUF,#'b'
 7750+ 1  1929	80 06		        sjmp    ??0667
 7751+ 1  192B			tp_b0:  putc    #'?'
 7752+ 2  192B			??0669:
 7753+ 2			        ;jnb     SCON.1,putc_loop
 7754+ 2			        ;clr     SCON.1
 7755+ 2  192B	75 99 3F	        mov     SBUF,#'?'
 7756+ 1  192E	75 6E 01	        mov     fail,#001h
 7757+ 1  1931			??0667:
 7758:
 7759:				        ; c.- <MOVX A, @Ri>
 7760:	  1931	74 79		        mov     a,#79h              ; change A and DPTR so we can catch fails
 7761:	  1933	90 00 00	        mov     dptr,#0000h
 7762:	  1936	78 13		        mov     r0,#13h             ; read back the same data again through
 7763:	  1938	79 14		        mov     r1,#14h             ; indexed addressing...
 7764:	  193A	E2		        movx    a,@r0
 7765:	  193B	B4 55 09	        cjne    a,#55h,tp_c0
 7766:	  193E	E3		        movx    a,@r1
 7767:	  193F	B4 AA 05	        cjne    a,#0aah,tp_c0
 7768:
 7769:				        eot     'c',tp_c0
 7770+ 1			        putc    #'c'
 7771+ 2  1942			??0671:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 140



 Line  I  Addr  Code            Source

 7772+ 2			        ;jnb     SCON.1,putc_loop
 7773+ 2			        ;clr     SCON.1
 7774+ 2  1942	75 99 63	        mov     SBUF,#'c'
 7775+ 1  1945	80 06		        sjmp    ??0670
 7776+ 1  1947			tp_c0:  putc    #'?'
 7777+ 2  1947			??0672:
 7778+ 2			        ;jnb     SCON.1,putc_loop
 7779+ 2			        ;clr     SCON.1
 7780+ 2  1947	75 99 3F	        mov     SBUF,#'?'
 7781+ 1  194A	75 6E 01	        mov     fail,#001h
 7782+ 1  194D			??0670:
 7783:
 7784:				        put_crlf                    ; end of test series
 7785+ 1			        putc    #13
 7786+ 2  194D			??0673:
 7787+ 2			        ;jnb     SCON.1,putc_loop
 7788+ 2			        ;clr     SCON.1
 7789+ 2  194D	75 99 0D	        mov     SBUF,#13
 7790+ 1			        putc    #10
 7791+ 2  1950			??0674:
 7792+ 2			        ;jnb     SCON.1,putc_loop
 7793+ 2			        ;clr     SCON.1
 7794+ 2  1950	75 99 0A	        mov     SBUF,#10
 7795:
 7796:				        ;-- Test series Q ------------------------------------------------------
 7797:				        ; MOVC instructions
 7798:				        ; a.- <MOVC A, @A + PC>
 7799:				        ; b.- <MOVC A, @A + DPTR>
 7800:
 7801:				        putc    #'Q'                ; start of test series
 7802+ 1  1953			??0675:
 7803+ 1			        ;jnb     SCON.1,putc_loop
 7804+ 1			        ;clr     SCON.1
 7805+ 1  1953	75 99 51	        mov     SBUF,#'Q'
 7806:
 7807:				        ; a.- <MOVC A, @A + PC>
 7808:	  1956	74 03		        mov     a,#03h              ; we'll read the 4th byte in the table...
 7809:	  1958	24 02		        add     a,#02h              ; ...and must account for intervening sjmp
 7810:	  195A	83		        movc    a,@a+PC
 7811:	  195B	80 04		        sjmp    tq0
 7812:
 7813:	  195D	07 13 19 21	tq1:    db      07h, 13h, 19h, 21h
 7814:	  1961	B4 21 05	tq0:    cjne    a,#21h,tq_a0
 7815:
 7816:				        eot     'a',tq_a0
 7817+ 1			        putc    #'a'
 7818+ 2  1964			??0677:
 7819+ 2			        ;jnb     SCON.1,putc_loop
 7820+ 2			        ;clr     SCON.1
 7821+ 2  1964	75 99 61	        mov     SBUF,#'a'
 7822+ 1  1967	80 06		        sjmp    ??0676
 7823+ 1  1969			tq_a0:  putc    #'?'
 7824+ 2  1969			??0678:
 7825+ 2			        ;jnb     SCON.1,putc_loop
 7826+ 2			        ;clr     SCON.1
 7827+ 2  1969	75 99 3F	        mov     SBUF,#'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 141



 Line  I  Addr  Code            Source

 7828+ 1  196C	75 6E 01	        mov     fail,#001h
 7829+ 1  196F			??0676:
 7830:
 7831:				        ; b.- <MOVC A, @A + DPTR>
 7832:	  196F	90 19 5D	        mov   DPTR,#tq1
 7833:
 7834:	  1972	74 00		        mov   a,#00h
 7835:	  1974	93		        movc  a,@a+DPTR
 7836:	  1975	B4 07 17	        cjne  a,#07h,tq_b0
 7837:
 7838:	  1978	74 01		        mov   a,#01h
 7839:	  197A	93		        movc  a,@a+DPTR
 7840:	  197B	B4 13 11	        cjne  a,#13h,tq_b0
 7841:
 7842:	  197E	74 02		        mov   a,#02h
 7843:	  1980	93		        movc  a,@a+DPTR
 7844:	  1981	B4 19 0B	        cjne  a,#19h,tq_b0
 7845:
 7846:	  1984	74 03		        mov   a,#03h
 7847:	  1986	93		        movc  a,@a+DPTR
 7848:	  1987	B4 21 05	        cjne  a,#21h,tq_b0
 7849:
 7850:				        eot     'b',tq_b0
 7851+ 1			        putc    #'b'
 7852+ 2  198A			??0680:
 7853+ 2			        ;jnb     SCON.1,putc_loop
 7854+ 2			        ;clr     SCON.1
 7855+ 2  198A	75 99 62	        mov     SBUF,#'b'
 7856+ 1  198D	80 06		        sjmp    ??0679
 7857+ 1  198F			tq_b0:  putc    #'?'
 7858+ 2  198F			??0681:
 7859+ 2			        ;jnb     SCON.1,putc_loop
 7860+ 2			        ;clr     SCON.1
 7861+ 2  198F	75 99 3F	        mov     SBUF,#'?'
 7862+ 1  1992	75 6E 01	        mov     fail,#001h
 7863+ 1  1995			??0679:
 7864:
 7865:				        put_crlf                    ; end of test series
 7866+ 1			        putc    #13
 7867+ 2  1995			??0682:
 7868+ 2			        ;jnb     SCON.1,putc_loop
 7869+ 2			        ;clr     SCON.1
 7870+ 2  1995	75 99 0D	        mov     SBUF,#13
 7871+ 1			        putc    #10
 7872+ 2  1998			??0683:
 7873+ 2			        ;jnb     SCON.1,putc_loop
 7874+ 2			        ;clr     SCON.1
 7875+ 2  1998	75 99 0A	        mov     SBUF,#10
 7876:
 7877:
 7878:				        ;-- Test series R ------------------------------------------------------
 7879:				        ; ACALL, LCALL instructions
 7880:				        ; a.- <ACALL addr8>
 7881:				        ; b.- <LCALL addr16>
 7882:				        ; c.- <JMP @A+DPTR>
 7883:				        ;

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 142



 Line  I  Addr  Code            Source

 7884:				        ; Biggest limitations:
 7885:				        ; .- Short jumps; jumps to other pages (!= H addr byte) not tested.
 7886:				        ;
 7887:				        ; Note RET is NOT tested here! we don't return from these calls, just
 7888:				        ; use them as jumps.
 7889:				        ;
 7890:
 7891:				        putc    #'R'                ; start of test series
 7892+ 1  199B			??0684:
 7893+ 1			        ;jnb     SCON.1,putc_loop
 7894+ 1			        ;clr     SCON.1
 7895+ 1  199B	75 99 52	        mov     SBUF,#'R'
 7896:
 7897:	  199E	75 81 4F	        mov     SP,#4fh             ; Initialize SP...
 7898:	  19A1	75 50 00	        mov     50h,#00h            ; ...and clear stack area
 7899:	  19A4	75 51 00	        mov     51h,#00h
 7900:	  19A7	75 52 00	        mov     52h,#00h
 7901:	  19AA	75 53 00	        mov     53h,#00h
 7902:
 7903:				        ; a.- <ACALL addr8>
 7904:				        ; We should test all code pages eventually...
 7905:	  19AD	31 B1		        acall   tr_sub0             ; Do the call...
 7906:	  19AF	80 14		tr_rv0: sjmp    tr_a0
 7907:	  19B1			tr_sub0:
 7908:	  19B1	E5 81		        mov     A,SP
 7909:	  19B3	B4 51 0F	        cjne    A,#51h,tr_a0       ; ...verify the SP value...
 7910:	  19B6	E5 50		        mov     A,50h
 7911:	  19B8	B4 AF 0A	        cjne    A,#LOW(tr_rv0),tr_a0 ; ...and verify the pushed ret address
 7912:	  19BB	E5 51		        mov     A,51h
 7913:	  19BD	B4 19 05	        cjne    A,#HIGH(tr_rv0),tr_a0
 7914:
 7915:				        eot     'a',tr_a0
 7916+ 1			        putc    #'a'
 7917+ 2  19C0			??0686:
 7918+ 2			        ;jnb     SCON.1,putc_loop
 7919+ 2			        ;clr     SCON.1
 7920+ 2  19C0	75 99 61	        mov     SBUF,#'a'
 7921+ 1  19C3	80 06		        sjmp    ??0685
 7922+ 1  19C5			tr_a0:  putc    #'?'
 7923+ 2  19C5			??0687:
 7924+ 2			        ;jnb     SCON.1,putc_loop
 7925+ 2			        ;clr     SCON.1
 7926+ 2  19C5	75 99 3F	        mov     SBUF,#'?'
 7927+ 1  19C8	75 6E 01	        mov     fail,#001h
 7928+ 1  19CB			??0685:
 7929:
 7930:				        ; b.- <LCALL addr16>
 7931:	  19CB	12 19 D0	        lcall   tr_sub1             ; Do the call...
 7932:	  19CE	80 14		tr_rv1: sjmp    tr_b0
 7933:	  19D0			tr_sub1:
 7934:	  19D0	E5 81		        mov     A,SP
 7935:	  19D2	B4 53 0F	        cjne    A,#53h,tr_b0       ; ...verify the SP value...
 7936:	  19D5	E5 52		        mov     A,52h
 7937:	  19D7	B4 CE 0A	        cjne    A,#LOW(tr_rv1),tr_b0 ; ...and verify the pushed ret address
 7938:	  19DA	E5 53		        mov     A,53h
 7939:	  19DC	B4 19 05	        cjne    A,#HIGH(tr_rv1),tr_b0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 143



 Line  I  Addr  Code            Source

 7940:
 7941:				        eot     'b',tr_b0
 7942+ 1			        putc    #'b'
 7943+ 2  19DF			??0689:
 7944+ 2			        ;jnb     SCON.1,putc_loop
 7945+ 2			        ;clr     SCON.1
 7946+ 2  19DF	75 99 62	        mov     SBUF,#'b'
 7947+ 1  19E2	80 06		        sjmp    ??0688
 7948+ 1  19E4			tr_b0:  putc    #'?'
 7949+ 2  19E4			??0690:
 7950+ 2			        ;jnb     SCON.1,putc_loop
 7951+ 2			        ;clr     SCON.1
 7952+ 2  19E4	75 99 3F	        mov     SBUF,#'?'
 7953+ 1  19E7	75 6E 01	        mov     fail,#001h
 7954+ 1  19EA			??0688:
 7955:
 7956:
 7957:				        ; c.- <JMP @A+DPTR>
 7958:	  19EA	90 19 C0	        mov     DPTR,#(tr_sub2-33h)
 7959:	  19ED	74 33		        mov     a,#33h
 7960:	  19EF	73		        jmp     @a+DPTR
 7961:	  19F0	02 1A 06	        jmp     tr_c0
 7962:	  19F3	02 19 F9	tr_sub2: jmp     tr_0
 7963:	  19F6	02 1A 06	        jmp     tr_c0
 7964:	  19F9	74 00		tr_0:   mov     a,#00h
 7965:	  19FB	74 00		        mov     a,#00h
 7966:	  19FD	74 00		        mov     a,#00h
 7967:	  19FF	74 00		        mov     a,#00h
 7968:
 7969:				        eot     'c',tr_c0
 7970+ 1			        putc    #'c'
 7971+ 2  1A01			??0692:
 7972+ 2			        ;jnb     SCON.1,putc_loop
 7973+ 2			        ;clr     SCON.1
 7974+ 2  1A01	75 99 63	        mov     SBUF,#'c'
 7975+ 1  1A04	80 06		        sjmp    ??0691
 7976+ 1  1A06			tr_c0:  putc    #'?'
 7977+ 2  1A06			??0693:
 7978+ 2			        ;jnb     SCON.1,putc_loop
 7979+ 2			        ;clr     SCON.1
 7980+ 2  1A06	75 99 3F	        mov     SBUF,#'?'
 7981+ 1  1A09	75 6E 01	        mov     fail,#001h
 7982+ 1  1A0C			??0691:
 7983:
 7984:				        put_crlf                    ; end of test series
 7985+ 1			        putc    #13
 7986+ 2  1A0C			??0694:
 7987+ 2			        ;jnb     SCON.1,putc_loop
 7988+ 2			        ;clr     SCON.1
 7989+ 2  1A0C	75 99 0D	        mov     SBUF,#13
 7990+ 1			        putc    #10
 7991+ 2  1A0F			??0695:
 7992+ 2			        ;jnb     SCON.1,putc_loop
 7993+ 2			        ;clr     SCON.1
 7994+ 2  1A0F	75 99 0A	        mov     SBUF,#10
 7995:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 144



 Line  I  Addr  Code            Source

 7996:
 7997:				        ;-- Test series S ------------------------------------------------------
 7998:				        ; RET, RETI instructions
 7999:				        ; a.- <RET>
 8000:				        ; b.- <RETI>
 8001:				        ;
 8002:				        ; RETs to different code pages (!= H addr byte) not tested!
 8003:				        ; Interrupt flag stuff not tested, only RET functionality
 8004:
 8005:				        putc    #'S'                ; start of test series
 8006+ 1  1A12			??0696:
 8007+ 1			        ;jnb     SCON.1,putc_loop
 8008+ 1			        ;clr     SCON.1
 8009+ 1  1A12	75 99 53	        mov     SBUF,#'S'
 8010:
 8011:
 8012:				        ; a.- <RET>
 8013:	  1A15	75 81 4F	        mov     SP,#4fh             ; Initialize SP...
 8014:	  1A18	75 4F 1A	        mov     4fh,#HIGH(s_sub0)   ; ...and load stack area with return
 8015:	  1A1B	75 4E 29	        mov     4eh,#LOW(s_sub0)    ; addresses to be tested
 8016:	  1A1E	75 4D 1A	        mov     4dh,#HIGH(s_sub1)
 8017:	  1A21	75 4C 33	        mov     4ch,#LOW(s_sub1)
 8018:
 8019:	  1A24	22		        ret                         ; Do the ret...
 8020:	  1A25	80 16		        sjmp    ts_a0
 8021:	  1A27	74 00		        mov     A,#00h
 8022:	  1A29	E5 81		s_sub0: mov     A,SP
 8023:	  1A2B	B4 4D 0F	        cjne    A,#4dh,ts_a0       ; ... and verify the SP value
 8024:
 8025:	  1A2E	22		        ret                         ; Do another ret...
 8026:	  1A2F	80 0C		        sjmp    ts_a0
 8027:	  1A31	74 00		        mov     A,#00h
 8028:	  1A33	E5 81		s_sub1: mov     A,SP
 8029:	  1A35	B4 4B 05	        cjne    A,#4bh,ts_a0       ; ... and verify the SP value
 8030:
 8031:				        eot     'a',ts_a0
 8032+ 1			        putc    #'a'
 8033+ 2  1A38			??0698:
 8034+ 2			        ;jnb     SCON.1,putc_loop
 8035+ 2			        ;clr     SCON.1
 8036+ 2  1A38	75 99 61	        mov     SBUF,#'a'
 8037+ 1  1A3B	80 06		        sjmp    ??0697
 8038+ 1  1A3D			ts_a0:  putc    #'?'
 8039+ 2  1A3D			??0699:
 8040+ 2			        ;jnb     SCON.1,putc_loop
 8041+ 2			        ;clr     SCON.1
 8042+ 2  1A3D	75 99 3F	        mov     SBUF,#'?'
 8043+ 1  1A40	75 6E 01	        mov     fail,#001h
 8044+ 1  1A43			??0697:
 8045:
 8046:
 8047:				        ; a.- <RETI>
 8048:	  1A43	75 81 4F	        mov     SP,#4fh             ; Initialize SP...
 8049:	  1A46	75 4F 1A	        mov     4fh,#HIGH(s_sub2)   ; ...and load stack area with return
 8050:	  1A49	75 4E 57	        mov     4eh,#LOW(s_sub2)    ; addresses to be tested
 8051:	  1A4C	75 4D 1A	        mov     4dh,#HIGH(s_sub3)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 145



 Line  I  Addr  Code            Source

 8052:	  1A4F	75 4C 61	        mov     4ch,#LOW(s_sub3)
 8053:
 8054:	  1A52	22		        ret                         ; Do the ret...
 8055:	  1A53	80 E8		        sjmp    ts_a0
 8056:	  1A55	74 00		        mov     A,#00h
 8057:	  1A57	E5 81		s_sub2: mov     A,SP
 8058:	  1A59	B4 4D 0F	        cjne    A,#4dh,ts_b0       ; ... and verify the SP value
 8059:
 8060:	  1A5C	22		        ret                         ; Do another ret...
 8061:	  1A5D	80 DE		        sjmp    ts_a0
 8062:	  1A5F	74 00		        mov     A,#00h
 8063:	  1A61	E5 81		s_sub3: mov     A,SP
 8064:	  1A63	B4 4B 05	        cjne    A,#4bh,ts_b0       ; ... and verify the SP value
 8065:
 8066:				        eot     'b',ts_b0
 8067+ 1			        putc    #'b'
 8068+ 2  1A66			??0701:
 8069+ 2			        ;jnb     SCON.1,putc_loop
 8070+ 2			        ;clr     SCON.1
 8071+ 2  1A66	75 99 62	        mov     SBUF,#'b'
 8072+ 1  1A69	80 06		        sjmp    ??0700
 8073+ 1  1A6B			ts_b0:  putc    #'?'
 8074+ 2  1A6B			??0702:
 8075+ 2			        ;jnb     SCON.1,putc_loop
 8076+ 2			        ;clr     SCON.1
 8077+ 2  1A6B	75 99 3F	        mov     SBUF,#'?'
 8078+ 1  1A6E	75 6E 01	        mov     fail,#001h
 8079+ 1  1A71			??0700:
 8080:
 8081:				        ; Lots of things can go badly and we wouldn't know with this test...
 8082:				        put_crlf                    ; end of test series
 8083+ 1			        putc    #13
 8084+ 2  1A71			??0703:
 8085+ 2			        ;jnb     SCON.1,putc_loop
 8086+ 2			        ;clr     SCON.1
 8087+ 2  1A71	75 99 0D	        mov     SBUF,#13
 8088+ 1			        putc    #10
 8089+ 2  1A74			??0704:
 8090+ 2			        ;jnb     SCON.1,putc_loop
 8091+ 2			        ;clr     SCON.1
 8092+ 2  1A74	75 99 0A	        mov     SBUF,#10
 8093:
 8094:				        ;-- Test series T ------------------------------------------------------
 8095:				        ; MUL, DIV instructions
 8096:				        ; a.- <DIV>
 8097:				        ; b.- <MUL>
 8098:				        ;
 8099:
 8100:				        putc    #'T'                ; start of test series
 8101+ 1  1A77			??0705:
 8102+ 1			        ;jnb     SCON.1,putc_loop
 8103+ 1			        ;clr     SCON.1
 8104+ 1  1A77	75 99 54	        mov     SBUF,#'T'
 8105:
 8106:				        ; a.- <DIV>
 8107:	  1A7A	75 F0 07	        mov     B,#07h              ; First of all, make sure B can be read back

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 146



 Line  I  Addr  Code            Source

 8108:	  1A7D	74 13		        mov     A,#13h
 8109:	  1A7F	E5 F0		        mov     A,B
 8110:	  1A81	B4 07 37	        cjne    A,#07h,tt_a0
 8111:
 8112:				        ; Now do a few representative DIVs using a table. The table has the
 8113:				        ; following format:
 8114:				        ; denominator, numerator, overflow, quotient, remainder
 8115:				        ; Where 'overflow' is 00h or 04h.
 8116:
 8117:				        ; DPTR will point to the start of the table, r0 will be the current data
 8118:				        ; byte offset and r1 the number of test cases remaiining.
 8119:	  1A84	90 1A C3	        mov     DPTR,#tt_a_tab
 8120:	  1A87	78 00		        mov     r0,#00h
 8121:	  1A89	79 09		        mov     r1,#((tt_a_tab_end-tt_a_tab)/5)
 8122:
 8123:	  1A8B			tt_a_loop:
 8124:	  1A8B	E8		        mov     a,r0
 8125:	  1A8C	08		        inc     r0
 8126:	  1A8D	93		        movc    a,@a+DPTR
 8127:	  1A8E	F5 F0		        mov     B,a
 8128:	  1A90	E8		        mov     a,r0
 8129:	  1A91	08		        inc     r0
 8130:	  1A92	93		        movc    a,@a+DPTR
 8131:	  1A93	84		        div     ab
 8132:	  1A94	F5 60		        mov     dir0,a
 8133:
 8134:	  1A96	E8		        mov     a,r0                ; Get expected OV flag
 8135:	  1A97	08		        inc     r0
 8136:	  1A98	93		        movc    a,@a+DPTR
 8137:	  1A99	70 15		        jnz     tt_a_divzero        ; If OV expected, skip verification of
 8138:	  1A9B	E5 D0		        mov     a,PSW               ; quotient and remainder
 8139:	  1A9D	54 04		        anl     a,#04h
 8140:	  1A9F	70 1A		        jnz     tt_a0
 8141:
 8142:	  1AA1	E8		        mov     a,r0                ; Verify quotient...
 8143:	  1AA2	08		        inc     r0
 8144:	  1AA3	93		        movc    a,@a+DPTR
 8145:	  1AA4	B5 60 14	        cjne    a,dir0,tt_a0
 8146:	  1AA7	E8		        mov     a,r0                ; ...and verify remainder
 8147:	  1AA8	08		        inc     r0
 8148:	  1AA9	93		        movc    a,@a+DPTR
 8149:	  1AAA	B5 F0 0E	        cjne    a,B,tt_a0
 8150:	  1AAD	02 1A B2	        jmp     tt_a_next
 8151:
 8152:	  1AB0			tt_a_divzero:
 8153:	  1AB0	08		        inc     r0
 8154:	  1AB1	08		        inc     r0
 8155:	  1AB2			tt_a_next:
 8156:	  1AB2	19		        dec     r1                  ; go for next test vector, if any
 8157:	  1AB3	E9		        mov     a,r1
 8158:	  1AB4	70 D5		        jnz     tt_a_loop
 8159:
 8160:				        eot     'a',tt_a0
 8161+ 1			        putc    #'a'
 8162+ 2  1AB6			??0707:
 8163+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 147



 Line  I  Addr  Code            Source

 8164+ 2			        ;clr     SCON.1
 8165+ 2  1AB6	75 99 61	        mov     SBUF,#'a'
 8166+ 1  1AB9	80 06		        sjmp    ??0706
 8167+ 1  1ABB			tt_a0:  putc    #'?'
 8168+ 2  1ABB			??0708:
 8169+ 2			        ;jnb     SCON.1,putc_loop
 8170+ 2			        ;clr     SCON.1
 8171+ 2  1ABB	75 99 3F	        mov     SBUF,#'?'
 8172+ 1  1ABE	75 6E 01	        mov     fail,#001h
 8173+ 1  1AC1			??0706:
 8174:	  1AC1	80 2D		        sjmp    tt_a_tab_end
 8175:
 8176:	  1AC3			tt_a_tab:
 8177:	  1AC3	07 13 00 02	        db      7,19,0,2,5
	  1AC7	05
 8178:	  1AC8	07 11 00 02	        db      7,17,0,2,3
	  1ACC	03
 8179:	  1ACD	07 0D 00 01	        db      7,13,0,1,6
	  1AD1	06
 8180:	  1AD2	0D 11 00 01	        db      13,17,0,1,4
	  1AD6	04
 8181:	  1AD7	11 0D 00 00	        db      17,13,0,0,13
	  1ADB	0D
 8182:	  1ADC	00 0D 04 00	        db      0,13,4,0,13
	  1AE0	0D
 8183:	  1AE1	80 87 00 01	        db      80h,87h,0,1,7
	  1AE5	07
 8184:	  1AE6	01 FF 00 FF	        db      1,255,0,255,0
	  1AEA	00
 8185:	  1AEB	02 FF 00 7F	        db      2,255,0,127,1
	  1AEF	01
 8186:	  1AF0			tt_a_tab_end:
 8187:
 8188:				        ; b.- <MUL>
 8189:
 8190:				        ; Do with MUL the same we just did with DIV. The test data table has
 8191:				        ; the following format:
 8192:				        ; denominator, numerator, product high byte, product low byte.
 8193:
 8194:				        ; DPTR will point to the start of the table, r0 will be the current data
 8195:				        ; byte offset and r1 the number of test cases remaiining.
 8196:	  1AF0	90 1B 31	        mov     DPTR,#tt_b_tab
 8197:	  1AF3	78 00		        mov     r0,#00h
 8198:	  1AF5	79 09		        mov     r1,#((tt_b_tab_end-tt_b_tab)/4)
 8199:
 8200:	  1AF7			tt_b_loop:
 8201:	  1AF7	E8		        mov     a,r0                ; Load B with test data...
 8202:	  1AF8	08		        inc     r0
 8203:	  1AF9	93		        movc    a,@a+DPTR
 8204:	  1AFA	F5 F0		        mov     B,a
 8205:	  1AFC	E8		        mov     a,r0                ; ...then load A with test data...
 8206:	  1AFD	08		        inc     r0
 8207:	  1AFE	93		        movc    a,@a+DPTR
 8208:	  1AFF	A4		        mul     ab                  ; and do the MUL
 8209:	  1B00	F5 60		        mov     dir0,a              ; Save A for later checks
 8210:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 148



 Line  I  Addr  Code            Source

 8211:	  1B02	E8		        mov     a,r0                ; Verify product high byte
 8212:				        ;inc     r0
 8213:	  1B03	93		        movc    a,@a+DPTR
 8214:	  1B04	60 08		        jz      tt_b_noovf
 8215:
 8216:	  1B06	E5 D0		        mov     a,PSW               ; overflow expected
 8217:	  1B08	54 04		        anl     a,#04h
 8218:	  1B0A	60 1D		        jz      tt_b0
 8219:	  1B0C	80 06		        sjmp    tt_b_0
 8220:
 8221:	  1B0E			tt_b_noovf:
 8222:	  1B0E	E5 D0		        mov     a,PSW               ; no overflow expected
 8223:	  1B10	54 04		        anl     a,#04h
 8224:	  1B12	70 15		        jnz     tt_b0
 8225:
 8226:	  1B14			tt_b_0:
 8227:	  1B14	E8		        mov     a,r0                ; Verify product high byte
 8228:	  1B15	08		        inc     r0
 8229:	  1B16	93		        movc    a,@a+DPTR
 8230:	  1B17	B5 F0 0F	        cjne    a,B,tt_b0
 8231:	  1B1A	E8		        mov     a,r0                ; ...and verify low byte
 8232:	  1B1B	08		        inc     r0
 8233:	  1B1C	93		        movc    a,@a+DPTR
 8234:	  1B1D	B5 60 09	        cjne    a,dir0,tt_b0
 8235:
 8236:	  1B20	19		        dec     r1                  ; go for next test vector, if any
 8237:	  1B21	E9		        mov     a,r1
 8238:	  1B22	70 D3		        jnz     tt_b_loop
 8239:
 8240:				        eot     'b',tt_b0
 8241+ 1			        putc    #'b'
 8242+ 2  1B24			??0710:
 8243+ 2			        ;jnb     SCON.1,putc_loop
 8244+ 2			        ;clr     SCON.1
 8245+ 2  1B24	75 99 62	        mov     SBUF,#'b'
 8246+ 1  1B27	80 06		        sjmp    ??0709
 8247+ 1  1B29			tt_b0:  putc    #'?'
 8248+ 2  1B29			??0711:
 8249+ 2			        ;jnb     SCON.1,putc_loop
 8250+ 2			        ;clr     SCON.1
 8251+ 2  1B29	75 99 3F	        mov     SBUF,#'?'
 8252+ 1  1B2C	75 6E 01	        mov     fail,#001h
 8253+ 1  1B2F			??0709:
 8254:	  1B2F	80 24		        sjmp    tt_b_tab_end
 8255:
 8256:	  1B31			tt_b_tab:
 8257:	  1B31	07 13 00 85	        db      7,19,0,133
 8258:	  1B35	07 11 00 77	        db      7,17,0,119
 8259:	  1B39	07 0D 00 5B	        db      7,13,0,91
 8260:	  1B3D	0D 11 00 DD	        db      13,17,0,221
 8261:	  1B41	11 0D 00 DD	        db      17,13,0,221
 8262:	  1B45	00 0D 00 00	        db      0,13,0,0
 8263:	  1B49	80 87 43 80	        db      80h,87h,43h,80h
 8264:	  1B4D	01 FF 00 FF	        db      1,255,0,255
 8265:	  1B51	02 FF 01 FE	        db      2,255,01h,0feh
 8266:	  1B55			tt_b_tab_end:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 149



 Line  I  Addr  Code            Source

 8267:
 8268:				        put_crlf                    ; end of test series
 8269+ 1			        putc    #13
 8270+ 2  1B55			??0712:
 8271+ 2			        ;jnb     SCON.1,putc_loop
 8272+ 2			        ;clr     SCON.1
 8273+ 2  1B55	75 99 0D	        mov     SBUF,#13
 8274+ 1			        putc    #10
 8275+ 2  1B58			??0713:
 8276+ 2			        ;jnb     SCON.1,putc_loop
 8277+ 2			        ;clr     SCON.1
 8278+ 2  1B58	75 99 0A	        mov     SBUF,#10
 8279:
 8280:
 8281:
 8282:				        ;-- Test series U ------------------------------------------------------
 8283:				        ; Register banks
 8284:				        ; a.- Write to register, read from indirect address.
 8285:				        ; a.- Write to indirect address, read from register.
 8286:				        ;
 8287:
 8288:				        putc    #'U'                ; start of test series
 8289+ 1  1B5B			??0714:
 8290+ 1			        ;jnb     SCON.1,putc_loop
 8291+ 1			        ;clr     SCON.1
 8292+ 1  1B5B	75 99 55	        mov     SBUF,#'U'
 8293:
 8294:
 8295:	  1B5E	75 D0 00	        mov     PSW,#00h            ; Test bank 0
 8296:	  1B61	74 01		        mov     a,#00h + 1
 8297:	  1B63	12 1B 80	        call    tu_a_test
 8298:
 8299:	  1B66	75 D0 08	        mov     PSW,#08h            ; Test bank 1
 8300:	  1B69	74 09		        mov     a,#08h + 1
 8301:	  1B6B	12 1B 80	        call    tu_a_test
 8302:
 8303:	  1B6E	75 D0 10	        mov     PSW,#10h            ; Test bank 2
 8304:	  1B71	74 11		        mov     a,#10h + 1
 8305:	  1B73	12 1B 80	        call    tu_a_test
 8306:
 8307:	  1B76	75 D0 18	        mov     PSW,#18h            ; Test bank 3
 8308:	  1B79	74 19		        mov     a,#18h + 1
 8309:	  1B7B	12 1B 80	        call    tu_a_test
 8310:
 8311:	  1B7E	80 1E		        sjmp    tu_a_done
 8312:
 8313:	  1B80			tu_a_test:
 8314:	  1B80	F8		        mov     r0,a                ; R0 points to R1 in the selected bank.
 8315:
 8316:	  1B81	79 12		        mov     r1,#12h             ; Write to registers R1 and R7
 8317:	  1B83	7F 34		        mov     r7,#34h
 8318:
 8319:	  1B85	E6		        mov     a,@r0               ; Check R1
 8320:	  1B86	B4 12 1B	        cjne    a,#12h,tu_a0
 8321:	  1B89	74 56		        mov     a,#56h              ; Ok, now write to R1 with reg addressing...
 8322:	  1B8B	F6		        mov     @r0,a               ; ...and check by reading in indirect.

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 150



 Line  I  Addr  Code            Source

 8323:	  1B8C	B9 56 15	        cjne    r1,#56h,tu_a0
 8324:
 8325:	  1B8F	E8		        mov     a,r0                ; Set R0 to point to R7 in selected bank
 8326:	  1B90	24 06		        add     a,#06h
 8327:	  1B92	F8		        mov     r0,a
 8328:	  1B93	E6		        mov     a,@r0               ; Check R7
 8329:	  1B94	B4 34 0D	        cjne    a,#34h,tu_a0
 8330:
 8331:	  1B97	74 78		        mov     a,#78h              ; Ok, now write to R7 with reg addressing...
 8332:	  1B99	F6		        mov     @r0,a               ; ...and check by reading in indirect.
 8333:	  1B9A	B4 78 07	        cjne    a,#78h,tu_a0
 8334:
 8335:	  1B9D	22		        ret
 8336:
 8337:	  1B9E			tu_a_done:
 8338:	  1B9E	00		        nop
 8339:				        eot     'a',tu_a0
 8340+ 1			        putc    #'a'
 8341+ 2  1B9F			??0716:
 8342+ 2			        ;jnb     SCON.1,putc_loop
 8343+ 2			        ;clr     SCON.1
 8344+ 2  1B9F	75 99 61	        mov     SBUF,#'a'
 8345+ 1  1BA2	80 06		        sjmp    ??0715
 8346+ 1  1BA4			tu_a0:  putc    #'?'
 8347+ 2  1BA4			??0717:
 8348+ 2			        ;jnb     SCON.1,putc_loop
 8349+ 2			        ;clr     SCON.1
 8350+ 2  1BA4	75 99 3F	        mov     SBUF,#'?'
 8351+ 1  1BA7	75 6E 01	        mov     fail,#001h
 8352+ 1  1BAA			??0715:
 8353:
 8354:				        put_crlf                    ; end of test series
 8355+ 1			        putc    #13
 8356+ 2  1BAA			??0718:
 8357+ 2			        ;jnb     SCON.1,putc_loop
 8358+ 2			        ;clr     SCON.1
 8359+ 2  1BAA	75 99 0D	        mov     SBUF,#13
 8360+ 1			        putc    #10
 8361+ 2  1BAD			??0719:
 8362+ 2			        ;jnb     SCON.1,putc_loop
 8363+ 2			        ;clr     SCON.1
 8364+ 2  1BAD	75 99 0A	        mov     SBUF,#10
 8365:
 8366:
 8367:				        ;-- Template for test series -------------------------------------------
 8368:
 8369:				        ;-- Test series X ------------------------------------------------------
 8370:				        ;
 8371:				        ; a.-
 8372:
 8373:				        ;putc    #'X'                ; start of test series
 8374:				        ;put_crlf                    ; end of test series
 8375:
 8376:				        ;-----------------------------------------------------------------------
 8377:
 8378:				        ; Test cases finished. Now print completion message dependent on the

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 151



 Line  I  Addr  Code            Source

 8379:				        ; value of the fail flag.
 8380:
 8381:	  1BB0	E5 6E		        mov     a,fail
 8382:	  1BB2	70 1A		        jnz     test_failed
 8383:
 8384:				        put_crlf
 8385+ 1			        putc    #13
 8386+ 2  1BB4			??0720:
 8387+ 2			        ;jnb     SCON.1,putc_loop
 8388+ 2			        ;clr     SCON.1
 8389+ 2  1BB4	75 99 0D	        mov     SBUF,#13
 8390+ 1			        putc    #10
 8391+ 2  1BB7			??0721:
 8392+ 2			        ;jnb     SCON.1,putc_loop
 8393+ 2			        ;clr     SCON.1
 8394+ 2  1BB7	75 99 0A	        mov     SBUF,#10
 8395:				        putc    #'P'
 8396+ 1  1BBA			??0722:
 8397+ 1			        ;jnb     SCON.1,putc_loop
 8398+ 1			        ;clr     SCON.1
 8399+ 1  1BBA	75 99 50	        mov     SBUF,#'P'
 8400:				        putc    #'A'
 8401+ 1  1BBD			??0723:
 8402+ 1			        ;jnb     SCON.1,putc_loop
 8403+ 1			        ;clr     SCON.1
 8404+ 1  1BBD	75 99 41	        mov     SBUF,#'A'
 8405:				        putc    #'S'
 8406+ 1  1BC0			??0724:
 8407+ 1			        ;jnb     SCON.1,putc_loop
 8408+ 1			        ;clr     SCON.1
 8409+ 1  1BC0	75 99 53	        mov     SBUF,#'S'
 8410:				        putc    #'S'
 8411+ 1  1BC3			??0725:
 8412+ 1			        ;jnb     SCON.1,putc_loop
 8413+ 1			        ;clr     SCON.1
 8414+ 1  1BC3	75 99 53	        mov     SBUF,#'S'
 8415:				        put_crlf
 8416+ 1			        putc    #13
 8417+ 2  1BC6			??0726:
 8418+ 2			        ;jnb     SCON.1,putc_loop
 8419+ 2			        ;clr     SCON.1
 8420+ 2  1BC6	75 99 0D	        mov     SBUF,#13
 8421+ 1			        putc    #10
 8422+ 2  1BC9			??0727:
 8423+ 2			        ;jnb     SCON.1,putc_loop
 8424+ 2			        ;clr     SCON.1
 8425+ 2  1BC9	75 99 0A	        mov     SBUF,#10
 8426:	  1BCC	80 1A		        sjmp    quit
 8427:
 8428:	  1BCE			test_failed:
 8429:				        put_crlf
 8430+ 1			        putc    #13
 8431+ 2  1BCE			??0728:
 8432+ 2			        ;jnb     SCON.1,putc_loop
 8433+ 2			        ;clr     SCON.1
 8434+ 2  1BCE	75 99 0D	        mov     SBUF,#13

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 152



 Line  I  Addr  Code            Source

 8435+ 1			        putc    #10
 8436+ 2  1BD1			??0729:
 8437+ 2			        ;jnb     SCON.1,putc_loop
 8438+ 2			        ;clr     SCON.1
 8439+ 2  1BD1	75 99 0A	        mov     SBUF,#10
 8440:				        putc    #'F'
 8441+ 1  1BD4			??0730:
 8442+ 1			        ;jnb     SCON.1,putc_loop
 8443+ 1			        ;clr     SCON.1
 8444+ 1  1BD4	75 99 46	        mov     SBUF,#'F'
 8445:				        putc    #'A'
 8446+ 1  1BD7			??0731:
 8447+ 1			        ;jnb     SCON.1,putc_loop
 8448+ 1			        ;clr     SCON.1
 8449+ 1  1BD7	75 99 41	        mov     SBUF,#'A'
 8450:				        putc    #'I'
 8451+ 1  1BDA			??0732:
 8452+ 1			        ;jnb     SCON.1,putc_loop
 8453+ 1			        ;clr     SCON.1
 8454+ 1  1BDA	75 99 49	        mov     SBUF,#'I'
 8455:				        putc    #'L'
 8456+ 1  1BDD			??0733:
 8457+ 1			        ;jnb     SCON.1,putc_loop
 8458+ 1			        ;clr     SCON.1
 8459+ 1  1BDD	75 99 4C	        mov     SBUF,#'L'
 8460:				        put_crlf
 8461+ 1			        putc    #13
 8462+ 2  1BE0			??0734:
 8463+ 2			        ;jnb     SCON.1,putc_loop
 8464+ 2			        ;clr     SCON.1
 8465+ 2  1BE0	75 99 0D	        mov     SBUF,#13
 8466+ 1			        putc    #10
 8467+ 2  1BE3			??0735:
 8468+ 2			        ;jnb     SCON.1,putc_loop
 8469+ 2			        ;clr     SCON.1
 8470+ 2  1BE3	75 99 0A	        mov     SBUF,#10
 8471:	  1BE6	80 00		        sjmp    quit
 8472:
 8473:				        ;-- End of test program, enter single-instruction endless loop
 8474:	  1BE8	61 E8		quit:   ajmp    $
 8475:
 8476:
 8477:				        end





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 153





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0000				  CODE	    003F	 109
??0001				  CODE	    0042	 117
??0002				  CODE	    0047	 124
??0003				  CODE	    004D	 130
??0004				  CODE	    0052	 138
??0005				  CODE	    0060	 147
??0006				  CODE	    0069	 154
??0007				  CODE	    0075	 164
??0008				  CODE	    0089	 184
??0009				  CODE	    007E	 173
??0010				  CODE	    0083	 179
??0011				  CODE	    009C	 203
??0012				  CODE	    0091	 192
??0013				  CODE	    0096	 198
??0014				  CODE	    009C	 207
??0015				  CODE	    009F	 212
??0016				  CODE	    00A2	 229
??0017				  CODE	    00E0	 286
??0018				  CODE	    00D5	 275
??0019				  CODE	    00DA	 281
??0020				  CODE	    00E5	 291
??0021				  CODE	    00F4	 301
??0022				  CODE	    00FA	 307
??0023				  CODE	    010A	 333
??0024				  CODE	    0108	 332
??0025				  CODE	    0102	 327
??0026				  CODE	    011A	 344
??0027				  CODE	    0118	 343
??0028				  CODE	    0112	 338
??0029				  CODE	    012A	 355
??0030				  CODE	    0128	 354
??0031				  CODE	    0122	 349
??0032				  CODE	    013A	 366
??0033				  CODE	    0138	 365
??0034				  CODE	    0132	 360
??0035				  CODE	    014A	 377
??0036				  CODE	    0148	 376
??0037				  CODE	    0142	 371
??0038				  CODE	    015A	 388
??0039				  CODE	    0158	 387
??0040				  CODE	    0152	 382
??0041				  CODE	    016A	 399
??0042				  CODE	    0168	 398
??0043				  CODE	    0162	 393
??0044				  CODE	    017A	 410
??0045				  CODE	    0178	 409
??0046				  CODE	    0172	 404
??0047				  CODE	    019C	 434
??0048				  CODE	    0191	 423
??0049				  CODE	    0196	 429

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 154



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0050				  CODE	    01B3	 457
??0051				  CODE	    01A8	 446
??0052				  CODE	    01AD	 452
??0053				  CODE	    01E0	 499
??0054				  CODE	    01D5	 488
??0055				  CODE	    01DA	 494
??0056				  CODE	    01EF	 524
??0057				  CODE	    01ED	 523
??0058				  CODE	    01E7	 518
??0059				  CODE	    0201	 536
??0060				  CODE	    01FF	 535
??0061				  CODE	    01F9	 530
??0062				  CODE	    0223	 561
??0063				  CODE	    0218	 550
??0064				  CODE	    021D	 556
??0065				  CODE	    0237	 572
??0066				  CODE	    0242	 580
??0067				  CODE	    0255	 600
??0068				  CODE	    024A	 589
??0069				  CODE	    024F	 595
??0070				  CODE	    0255	 604
??0071				  CODE	    0258	 609
??0072				  CODE	    025B	 638
??0073				  CODE	    0269	 648
??0074				  CODE	    0274	 656
??0075				  CODE	    0288	 676
??0076				  CODE	    027D	 665
??0077				  CODE	    0282	 671
??0078				  CODE	    029E	 696
??0079				  CODE	    0293	 685
??0080				  CODE	    0298	 691
??0081				  CODE	    02A8	 704
??0082				  CODE	    02B2	 712
??0083				  CODE	    02C5	 732
??0084				  CODE	    02BA	 721
??0085				  CODE	    02BF	 727
??0086				  CODE	    02E2	 756
??0087				  CODE	    02D7	 745
??0088				  CODE	    02DC	 751
??0089				  CODE	    030F	 791
??0090				  CODE	    0304	 780
??0091				  CODE	    0309	 786
??0092				  CODE	    0332	 819
??0093				  CODE	    0327	 808
??0094				  CODE	    032C	 814
??0095				  CODE	    034C	 842
??0096				  CODE	    0341	 831
??0097				  CODE	    0346	 837
??0098				  CODE	    036A	 868
??0099				  CODE	    035F	 857
??0100				  CODE	    0364	 863
??0101				  CODE	    0378	 876
??0102				  CODE	    0383	 884
??0103				  CODE	    0397	 904
??0104				  CODE	    038C	 893
??0105				  CODE	    0391	 899

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 155



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0106				  CODE	    03B4	 927
??0107				  CODE	    03A9	 916
??0108				  CODE	    03AE	 922
??0109				  CODE	    03E1	 962
??0110				  CODE	    03D6	 951
??0111				  CODE	    03DB	 957
??0112				  CODE	    0404	 990
??0113				  CODE	    03F9	 979
??0114				  CODE	    03FE	 985
??0115				  CODE	    041E	1013
??0116				  CODE	    0413	1002
??0117				  CODE	    0418	1008
??0118				  CODE	    043C	1039
??0119				  CODE	    0431	1028
??0120				  CODE	    0436	1034
??0121				  CODE	    043C	1045
??0122				  CODE	    043F	1050
??0123				  CODE	    0442	1068
??0124				  CODE	    045A	1092
??0125				  CODE	    044F	1081
??0126				  CODE	    0454	1087
??0127				  CODE	    0481	1127
??0128				  CODE	    0476	1116
??0129				  CODE	    047B	1122
??0130				  CODE	    04A7	1161
??0131				  CODE	    049C	1150
??0132				  CODE	    04A1	1156
??0133				  CODE	    04DF	1207
??0134				  CODE	    04D4	1196
??0135				  CODE	    04D9	1202
??0136				  CODE	    04DF	1211
??0137				  CODE	    04E2	1216
??0138				  CODE	    04E5	1234
??0139				  CODE	    0502	1273
??0140				  CODE	    04F7	1262
??0141				  CODE	    04FC	1268
??0142				  CODE	    0587	1363
??0143				  CODE	    057C	1352
??0144				  CODE	    0581	1358
??0145				  CODE	    05B4	1400
??0146				  CODE	    05A9	1389
??0147				  CODE	    05AE	1395
??0148				  CODE	    05C7	1419
??0149				  CODE	    05BC	1408
??0150				  CODE	    05C1	1414
??0151				  CODE	    05E9	1445
??0152				  CODE	    05DE	1434
??0153				  CODE	    05E3	1440
??0154				  CODE	    0603	1480
??0155				  CODE	    05F8	1469
??0156				  CODE	    05FD	1475
??0157				  CODE	    0688	1570
??0158				  CODE	    067D	1559
??0159				  CODE	    0682	1565
??0160				  CODE	    06B5	1607
??0161				  CODE	    06AA	1596

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 156



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0162				  CODE	    06AF	1602
??0163				  CODE	    06C8	1626
??0164				  CODE	    06BD	1615
??0165				  CODE	    06C2	1621
??0166				  CODE	    06C8	1630
??0167				  CODE	    06CB	1635
??0168				  CODE	    06CE	1654
??0169				  CODE	    0724	1720
??0170				  CODE	    0719	1709
??0171				  CODE	    071E	1715
??0172				  CODE	    0741	1746
??0173				  CODE	    0736	1735
??0174				  CODE	    073B	1741
??0175				  CODE	    0757	1766
??0176				  CODE	    074C	1755
??0177				  CODE	    0751	1761
??0178				  CODE	    07A2	1820
??0179				  CODE	    0797	1809
??0180				  CODE	    079C	1815
??0181				  CODE	    07C1	1846
??0182				  CODE	    07B6	1835
??0183				  CODE	    07BB	1841
??0184				  CODE	    07FC	1900
??0185				  CODE	    07F1	1889
??0186				  CODE	    07F6	1895
??0187				  CODE	    0817	1926
??0188				  CODE	    080C	1915
??0189				  CODE	    0811	1921
??0190				  CODE	    0830	1948
??0191				  CODE	    0825	1937
??0192				  CODE	    082A	1943
??0193				  CODE	    084F	1974
??0194				  CODE	    0844	1963
??0195				  CODE	    0849	1969
??0196				  CODE	    084F	1978
??0197				  CODE	    0852	1983
??0198				  CODE	    0855	1998
??0199				  CODE	    0874	2028
??0200				  CODE	    0869	2017
??0201				  CODE	    086E	2023
??0202				  CODE	    08A6	2061
??0203				  CODE	    089B	2050
??0204				  CODE	    08A0	2056
??0205				  CODE	    08C0	2084
??0206				  CODE	    08B5	2073
??0207				  CODE	    08BA	2079
??0208				  CODE	    08DB	2108
??0209				  CODE	    08D0	2097
??0210				  CODE	    08D5	2103
??0211				  CODE	    08F2	2131
??0212				  CODE	    08E7	2120
??0213				  CODE	    08EC	2126
??0214				  CODE	    08F2	2136
??0215				  CODE	    08F5	2141
??0216				  CODE	    08F8	2288
??0217				  CODE	    097F	2512

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 157



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0218				  CODE	    092E	2380
??0219				  CODE	    0949	2424
??0220				  CODE	    0964	2468
??0221				  CODE	    099F	2558
??0222				  CODE	    09B6	2589
??0223				  CODE	    0934	2386
??0224				  CODE	    0929	2375
??0225				  CODE	    092E	2381
??0226				  CODE	    094F	2430
??0227				  CODE	    0944	2419
??0228				  CODE	    0949	2425
??0229				  CODE	    096A	2474
??0230				  CODE	    095F	2463
??0231				  CODE	    0964	2469
??0232				  CODE	    0985	2518
??0233				  CODE	    097A	2507
??0234				  CODE	    097F	2513
??0235				  CODE	    09A5	2564
??0236				  CODE	    099A	2553
??0237				  CODE	    099F	2559
??0238				  CODE	    09BC	2595
??0239				  CODE	    09B1	2584
??0240				  CODE	    09B6	2590
??0241				  CODE	    09BC	2600
??0242				  CODE	    09BF	2605
??0243				  CODE	    09C2	2616
??0244				  CODE	    0A49	2840
??0245				  CODE	    09F8	2708
??0246				  CODE	    0A13	2752
??0247				  CODE	    0A2E	2796
??0248				  CODE	    0A69	2886
??0249				  CODE	    0A80	2917
??0250				  CODE	    09FE	2714
??0251				  CODE	    09F3	2703
??0252				  CODE	    09F8	2709
??0253				  CODE	    0A19	2758
??0254				  CODE	    0A0E	2747
??0255				  CODE	    0A13	2753
??0256				  CODE	    0A34	2802
??0257				  CODE	    0A29	2791
??0258				  CODE	    0A2E	2797
??0259				  CODE	    0A4F	2846
??0260				  CODE	    0A44	2835
??0261				  CODE	    0A49	2841
??0262				  CODE	    0A6F	2892
??0263				  CODE	    0A64	2881
??0264				  CODE	    0A69	2887
??0265				  CODE	    0A86	2923
??0266				  CODE	    0A7B	2912
??0267				  CODE	    0A80	2918
??0268				  CODE	    0A86	2928
??0269				  CODE	    0A89	2933
??0270				  CODE	    0A8C	2944
??0271				  CODE	    0B13	3168
??0272				  CODE	    0AC2	3036
??0273				  CODE	    0ADD	3080

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 158



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0274				  CODE	    0AF8	3124
??0275				  CODE	    0B33	3214
??0276				  CODE	    0B4A	3245
??0277				  CODE	    0AC8	3042
??0278				  CODE	    0ABD	3031
??0279				  CODE	    0AC2	3037
??0280				  CODE	    0AE3	3086
??0281				  CODE	    0AD8	3075
??0282				  CODE	    0ADD	3081
??0283				  CODE	    0AFE	3130
??0284				  CODE	    0AF3	3119
??0285				  CODE	    0AF8	3125
??0286				  CODE	    0B19	3174
??0287				  CODE	    0B0E	3163
??0288				  CODE	    0B13	3169
??0289				  CODE	    0B39	3220
??0290				  CODE	    0B2E	3209
??0291				  CODE	    0B33	3215
??0292				  CODE	    0B50	3251
??0293				  CODE	    0B45	3240
??0294				  CODE	    0B4A	3246
??0295				  CODE	    0B50	3256
??0296				  CODE	    0B53	3261
??0297				  CODE	    0B56	3271
??0298				  CODE	    0B5E	3292
??0299				  CODE	    0B72	3310
??0300				  CODE	    0B67	3299
??0301				  CODE	    0B6C	3305
??0302				  CODE	    0B76	3316
??0303				  CODE	    0B82	3324
??0304				  CODE	    0B8E	3332
??0305				  CODE	    0B9A	3340
??0306				  CODE	    0BA6	3348
??0307				  CODE	    0BB2	3356
??0308				  CODE	    0BBE	3364
??0309				  CODE	    0BCA	3372
??0310				  CODE	    0BDD	3390
??0311				  CODE	    0BD2	3379
??0312				  CODE	    0BD7	3385
??0313				  CODE	    0BDD	3394
??0314				  CODE	    0BE0	3399
??0315				  CODE	    0BE3	3411
??0316				  CODE	    0BE6	3417
??0317				  CODE	    0D07	3772
??0318				  CODE	    0C62	3568
??0319				  CODE	    0C99	3636
??0320				  CODE	    0CD0	3704
??0323				  NUMBER    0000	3432
??0324				  NUMBER    0000	3459
??0325				  NUMBER    0000	3486
??0326				  NUMBER    0000	3513
??0327				  NUMBER    0000	3539
??0328				  CODE	    0C68	3574
??0329				  CODE	    0C5D	3563
??0330				  CODE	    0C62	3569
??0331				  NUMBER    0000	3581

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 159



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0332				  NUMBER    0000	3607
??0333				  CODE	    0C9F	3642
??0334				  CODE	    0C94	3631
??0335				  CODE	    0C99	3637
??0336				  NUMBER    0000	3649
??0337				  NUMBER    0000	3675
??0338				  CODE	    0CD6	3710
??0339				  CODE	    0CCB	3699
??0340				  CODE	    0CD0	3705
??0341				  NUMBER    0000	3717
??0342				  NUMBER    0000	3743
??0343				  CODE	    0D0D	3778
??0344				  CODE	    0D02	3767
??0345				  CODE	    0D07	3773
??0346				  CODE	    0D0D	3792
??0347				  CODE	    0E2E	4147
??0348				  CODE	    0D89	3943
??0349				  CODE	    0DC0	4011
??0350				  CODE	    0DF7	4079
??0353				  NUMBER    0000	3807
??0354				  NUMBER    0000	3834
??0355				  NUMBER    0000	3861
??0356				  NUMBER    0000	3888
??0357				  NUMBER    0000	3914
??0358				  CODE	    0D8F	3949
??0359				  CODE	    0D84	3938
??0360				  CODE	    0D89	3944
??0361				  NUMBER    0000	3956
??0362				  NUMBER    0000	3982
??0363				  CODE	    0DC6	4017
??0364				  CODE	    0DBB	4006
??0365				  CODE	    0DC0	4012
??0366				  NUMBER    0000	4024
??0367				  NUMBER    0000	4050
??0368				  CODE	    0DFD	4085
??0369				  CODE	    0DF2	4074
??0370				  CODE	    0DF7	4080
??0371				  NUMBER    0000	4092
??0372				  NUMBER    0000	4118
??0373				  CODE	    0E34	4153
??0374				  CODE	    0E29	4142
??0375				  CODE	    0E2E	4148
??0376				  CODE	    0E34	4167
??0377				  CODE	    0F55	4522
??0378				  CODE	    0EB0	4318
??0379				  CODE	    0EE7	4386
??0380				  CODE	    0F1E	4454
??0383				  NUMBER    0000	4182
??0384				  NUMBER    0000	4209
??0385				  NUMBER    0000	4236
??0386				  NUMBER    0000	4263
??0387				  NUMBER    0000	4289
??0388				  CODE	    0EB6	4324
??0389				  CODE	    0EAB	4313
??0390				  CODE	    0EB0	4319
??0391				  NUMBER    0000	4331

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 160



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0392				  NUMBER    0000	4357
??0393				  CODE	    0EED	4392
??0394				  CODE	    0EE2	4381
??0395				  CODE	    0EE7	4387
??0396				  NUMBER    0000	4399
??0397				  NUMBER    0000	4425
??0398				  CODE	    0F24	4460
??0399				  CODE	    0F19	4449
??0400				  CODE	    0F1E	4455
??0401				  NUMBER    0000	4467
??0402				  NUMBER    0000	4493
??0403				  CODE	    0F5B	4528
??0404				  CODE	    0F50	4517
??0405				  CODE	    0F55	4523
??0406				  CODE	    0F5B	4544
??0407				  CODE	    0F5E	4549
??0408				  CODE	    0F61	4561
??0409				  CODE	    0F64	4567
??0410				  CODE	    1085	4922
??0411				  CODE	    0FE0	4718
??0412				  CODE	    1017	4786
??0413				  CODE	    104E	4854
??0416				  NUMBER    0000	4582
??0417				  NUMBER    0000	4609
??0418				  NUMBER    0000	4636
??0419				  NUMBER    0000	4663
??0420				  NUMBER    0000	4689
??0421				  CODE	    0FE6	4724
??0422				  CODE	    0FDB	4713
??0423				  CODE	    0FE0	4719
??0424				  NUMBER    0000	4731
??0425				  NUMBER    0000	4757
??0426				  CODE	    101D	4792
??0427				  CODE	    1012	4781
??0428				  CODE	    1017	4787
??0429				  NUMBER    0000	4799
??0430				  NUMBER    0000	4825
??0431				  CODE	    1054	4860
??0432				  CODE	    1049	4849
??0433				  CODE	    104E	4855
??0434				  NUMBER    0000	4867
??0435				  NUMBER    0000	4893
??0436				  CODE	    108B	4928
??0437				  CODE	    1080	4917
??0438				  CODE	    1085	4923
??0439				  CODE	    108B	4942
??0440				  CODE	    11AC	5297
??0441				  CODE	    1107	5093
??0442				  CODE	    113E	5161
??0443				  CODE	    1175	5229
??0446				  NUMBER    0000	4957
??0447				  NUMBER    0000	4984
??0448				  NUMBER    0000	5011
??0449				  NUMBER    0000	5038
??0450				  NUMBER    0000	5064
??0451				  CODE	    110D	5099

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 161



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0452				  CODE	    1102	5088
??0453				  CODE	    1107	5094
??0454				  NUMBER    0000	5106
??0455				  NUMBER    0000	5132
??0456				  CODE	    1144	5167
??0457				  CODE	    1139	5156
??0458				  CODE	    113E	5162
??0459				  NUMBER    0000	5174
??0460				  NUMBER    0000	5200
??0461				  CODE	    117B	5235
??0462				  CODE	    1170	5224
??0463				  CODE	    1175	5230
??0464				  NUMBER    0000	5242
??0465				  NUMBER    0000	5268
??0466				  CODE	    11B2	5303
??0467				  CODE	    11A7	5292
??0468				  CODE	    11AC	5298
??0469				  CODE	    11B2	5317
??0470				  CODE	    12D3	5672
??0471				  CODE	    122E	5468
??0472				  CODE	    1265	5536
??0473				  CODE	    129C	5604
??0476				  NUMBER    0000	5332
??0477				  NUMBER    0000	5359
??0478				  NUMBER    0000	5386
??0479				  NUMBER    0000	5413
??0480				  NUMBER    0000	5439
??0481				  CODE	    1234	5474
??0482				  CODE	    1229	5463
??0483				  CODE	    122E	5469
??0484				  NUMBER    0000	5481
??0485				  NUMBER    0000	5507
??0486				  CODE	    126B	5542
??0487				  CODE	    1260	5531
??0488				  CODE	    1265	5537
??0489				  NUMBER    0000	5549
??0490				  NUMBER    0000	5575
??0491				  CODE	    12A2	5610
??0492				  CODE	    1297	5599
??0493				  CODE	    129C	5605
??0494				  NUMBER    0000	5617
??0495				  NUMBER    0000	5643
??0496				  CODE	    12D9	5678
??0497				  CODE	    12CE	5667
??0498				  CODE	    12D3	5673
??0499				  CODE	    12D9	5692
??0500				  CODE	    13FA	6047
??0501				  CODE	    1355	5843
??0502				  CODE	    138C	5911
??0503				  CODE	    13C3	5979
??0506				  NUMBER    0001	5707
??0507				  NUMBER    0001	5734
??0508				  NUMBER    0001	5761
??0509				  NUMBER    0001	5788
??0510				  NUMBER    0001	5814
??0511				  CODE	    135B	5849

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 162



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0512				  CODE	    1350	5838
??0513				  CODE	    1355	5844
??0514				  NUMBER    0001	5856
??0515				  NUMBER    0001	5882
??0516				  CODE	    1392	5917
??0517				  CODE	    1387	5906
??0518				  CODE	    138C	5912
??0519				  NUMBER    0001	5924
??0520				  NUMBER    0001	5950
??0521				  CODE	    13C9	5985
??0522				  CODE	    13BE	5974
??0523				  CODE	    13C3	5980
??0524				  NUMBER    0001	5992
??0525				  NUMBER    0001	6018
??0526				  CODE	    1400	6053
??0527				  CODE	    13F5	6042
??0528				  CODE	    13FA	6048
??0529				  CODE	    1400	6070
??0530				  CODE	    1403	6075
??0531				  CODE	    1406	6087
??0532				  CODE	    1409	6096
??0533				  CODE	    152A	6451
??0534				  CODE	    1485	6247
??0535				  CODE	    14BC	6315
??0536				  CODE	    14F3	6383
??0539				  NUMBER    0000	6111
??0540				  NUMBER    0000	6138
??0541				  NUMBER    0000	6165
??0542				  NUMBER    0000	6192
??0543				  NUMBER    0000	6218
??0544				  CODE	    148B	6253
??0545				  CODE	    1480	6242
??0546				  CODE	    1485	6248
??0547				  NUMBER    0000	6260
??0548				  NUMBER    0000	6286
??0549				  CODE	    14C2	6321
??0550				  CODE	    14B7	6310
??0551				  CODE	    14BC	6316
??0552				  NUMBER    0000	6328
??0553				  NUMBER    0000	6354
??0554				  CODE	    14F9	6389
??0555				  CODE	    14EE	6378
??0556				  CODE	    14F3	6384
??0557				  NUMBER    0000	6396
??0558				  NUMBER    0000	6422
??0559				  CODE	    1530	6457
??0560				  CODE	    1525	6446
??0561				  CODE	    152A	6452
??0562				  CODE	    1530	6471
??0563				  CODE	    1651	6826
??0564				  CODE	    15AC	6622
??0565				  CODE	    15E3	6690
??0566				  CODE	    161A	6758
??0569				  NUMBER    0001	6486
??0570				  NUMBER    0001	6513
??0571				  NUMBER    0001	6540

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 163



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0572				  NUMBER    0001	6567
??0573				  NUMBER    0001	6593
??0574				  CODE	    15B2	6628
??0575				  CODE	    15A7	6617
??0576				  CODE	    15AC	6623
??0577				  NUMBER    0001	6635
??0578				  NUMBER    0001	6661
??0579				  CODE	    15E9	6696
??0580				  CODE	    15DE	6685
??0581				  CODE	    15E3	6691
??0582				  NUMBER    0001	6703
??0583				  NUMBER    0001	6729
??0584				  CODE	    1620	6764
??0585				  CODE	    1615	6753
??0586				  CODE	    161A	6759
??0587				  NUMBER    0001	6771
??0588				  NUMBER    0001	6797
??0589				  CODE	    1657	6832
??0590				  CODE	    164C	6821
??0591				  CODE	    1651	6827
??0592				  CODE	    1657	6846
??0593				  CODE	    1778	7201
??0594				  CODE	    16D3	6997
??0595				  CODE	    170A	7065
??0596				  CODE	    1741	7133
??0599				  NUMBER    0000	6861
??0600				  NUMBER    0000	6888
??0601				  NUMBER    0000	6915
??0602				  NUMBER    0000	6942
??0603				  NUMBER    0000	6968
??0604				  CODE	    16D9	7003
??0605				  CODE	    16CE	6992
??0606				  CODE	    16D3	6998
??0607				  NUMBER    0000	7010
??0608				  NUMBER    0000	7036
??0609				  CODE	    1710	7071
??0610				  CODE	    1705	7060
??0611				  CODE	    170A	7066
??0612				  NUMBER    0000	7078
??0613				  NUMBER    0000	7104
??0614				  CODE	    1747	7139
??0615				  CODE	    173C	7128
??0616				  CODE	    1741	7134
??0617				  NUMBER    0000	7146
??0618				  NUMBER    0000	7172
??0619				  CODE	    177E	7207
??0620				  CODE	    1773	7196
??0621				  CODE	    1778	7202
??0622				  CODE	    177E	7221
??0623				  CODE	    189F	7576
??0624				  CODE	    17FA	7372
??0625				  CODE	    1831	7440
??0626				  CODE	    1868	7508
??0629				  NUMBER    0001	7236
??0630				  NUMBER    0001	7263
??0631				  NUMBER    0001	7290

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 164



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0632				  NUMBER    0001	7317
??0633				  NUMBER    0001	7343
??0634				  CODE	    1800	7378
??0635				  CODE	    17F5	7367
??0636				  CODE	    17FA	7373
??0637				  NUMBER    0001	7385
??0638				  NUMBER    0001	7411
??0639				  CODE	    1837	7446
??0640				  CODE	    182C	7435
??0641				  CODE	    1831	7441
??0642				  NUMBER    0001	7453
??0643				  NUMBER    0001	7479
??0644				  CODE	    186E	7514
??0645				  CODE	    1863	7503
??0646				  CODE	    1868	7509
??0647				  NUMBER    0001	7521
??0648				  NUMBER    0001	7547
??0649				  CODE	    18A5	7582
??0650				  CODE	    189A	7571
??0651				  CODE	    189F	7577
??0652				  CODE	    18A5	7600
??0653				  CODE	    18A8	7605
??0654				  CODE	    18AB	7617
??0655				  CODE	    18CE	7646
??0656				  CODE	    18C3	7635
??0657				  CODE	    18C8	7641
??0658				  CODE	    18EA	7671
??0659				  CODE	    18DF	7660
??0660				  CODE	    18E4	7666
??0661				  CODE	    18EA	7675
??0662				  CODE	    18ED	7680
??0663				  CODE	    18F0	7693
??0664				  CODE	    1911	7721
??0665				  CODE	    1906	7710
??0666				  CODE	    190B	7716
??0667				  CODE	    1931	7757
??0668				  CODE	    1926	7746
??0669				  CODE	    192B	7752
??0670				  CODE	    194D	7782
??0671				  CODE	    1942	7771
??0672				  CODE	    1947	7777
??0673				  CODE	    194D	7786
??0674				  CODE	    1950	7791
??0675				  CODE	    1953	7802
??0676				  CODE	    196F	7829
??0677				  CODE	    1964	7818
??0678				  CODE	    1969	7824
??0679				  CODE	    1995	7863
??0680				  CODE	    198A	7852
??0681				  CODE	    198F	7858
??0682				  CODE	    1995	7867
??0683				  CODE	    1998	7872
??0684				  CODE	    199B	7892
??0685				  CODE	    19CB	7928
??0686				  CODE	    19C0	7917
??0687				  CODE	    19C5	7923

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 165



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0688				  CODE	    19EA	7954
??0689				  CODE	    19DF	7943
??0690				  CODE	    19E4	7949
??0691				  CODE	    1A0C	7982
??0692				  CODE	    1A01	7971
??0693				  CODE	    1A06	7977
??0694				  CODE	    1A0C	7986
??0695				  CODE	    1A0F	7991
??0696				  CODE	    1A12	8006
??0697				  CODE	    1A43	8044
??0698				  CODE	    1A38	8033
??0699				  CODE	    1A3D	8039
??0700				  CODE	    1A71	8079
??0701				  CODE	    1A66	8068
??0702				  CODE	    1A6B	8074
??0703				  CODE	    1A71	8084
??0704				  CODE	    1A74	8089
??0705				  CODE	    1A77	8101
??0706				  CODE	    1AC1	8173
??0707				  CODE	    1AB6	8162
??0708				  CODE	    1ABB	8168
??0709				  CODE	    1B2F	8253
??0710				  CODE	    1B24	8242
??0711				  CODE	    1B29	8248
??0712				  CODE	    1B55	8270
??0713				  CODE	    1B58	8275
??0714				  CODE	    1B5B	8289
??0715				  CODE	    1BAA	8352
??0716				  CODE	    1B9F	8341
??0717				  CODE	    1BA4	8347
??0718				  CODE	    1BAA	8356
??0719				  CODE	    1BAD	8361
??0720				  CODE	    1BB4	8386
??0721				  CODE	    1BB7	8391
??0722				  CODE	    1BBA	8396
??0723				  CODE	    1BBD	8401
??0724				  CODE	    1BC0	8406
??0725				  CODE	    1BC3	8411
??0726				  CODE	    1BC6	8417
??0727				  CODE	    1BC9	8422
??0728				  CODE	    1BCE	8431
??0729				  CODE	    1BD1	8436
??0730				  CODE	    1BD4	8441
??0731				  CODE	    1BD7	8446
??0732				  CODE	    1BDA	8451
??0733				  CODE	    1BDD	8456
??0734				  CODE	    1BE0	8462
??0735				  CODE	    1BE3	8467
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6
ACC				  DATA	      E0
ARG0				  NUMBER    00C3	2295
ARG1				  NUMBER    00C5	2296
B				  DATA	      F0
CY				  BIT	      D7

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 166



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
DIR0				  NUMBER    0060	  34
DIR1				  NUMBER    0061	  35
DPH				  DATA	      83
DPL				  DATA	      82
EA				  BIT	      AF
EOT				  MACRO	        	  64
ES				  BIT	      AC
ET0				  BIT	      A9
ET1				  BIT	      AB
EX0				  BIT	      A8
EX1				  BIT	      AA
EXTI0				  CODE	    0003
EXTI1				  CODE	    0013
F0				  BIT	      D5
FAIL				  NUMBER    006E	  36
IE				  DATA	      A8
IE0				  BIT	      89
IE1				  BIT	      8B
INT0				  BIT	      B2
INT1				  BIT	      B3
IP				  DATA	      B8
IT0				  BIT	      88
IT1				  BIT	      8A
NLOOPS				  NUMBER    0003	3289
OV				  BIT	      D2
P				  BIT	      D0
P0				  DATA	      80
P1				  DATA	      90
P2				  DATA	      A0
P3				  DATA	      B0
PCON				  DATA	      87
PS				  BIT	      BC
PSW				  DATA	      D0
PT0				  BIT	      B9
PT1				  BIT	      BB
PUTC				  MACRO	        	  45
PUT_CRLF			  MACRO	        	  54
PX0				  BIT	      B8
PX1				  BIT	      BA
QUIT				  CODE	    1BE8	8474
RB8				  BIT	      9A
RD				  BIT	      B7
REN				  BIT	      9C
RES				  NUMBER    0001	2297
RESET				  CODE	    0000
RI				  BIT	      98
RS0				  BIT	      D3
RS1				  BIT	      D4
RXD				  BIT	      B0
SAVED_PSW			  NUMBER    0070	  37
SAVE_PSW			  MACRO	        	2159
SBUF				  DATA	      99
SCON				  DATA	      98
SET_CY				  MACRO	        	2171
SINT				  CODE	    0023
SM0				  BIT	      9F

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 167



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
SM1				  BIT	      9E
SM2				  BIT	      9D
SP				  DATA	      81
STACK0				  NUMBER    009F	  38
START				  CODE	    0030	  86
S_SUB0				  CODE	    1A29	8022
S_SUB1				  CODE	    1A33	8028
S_SUB2				  CODE	    1A57	8057
S_SUB3				  CODE	    1A61	8063
T0				  BIT	      B4
T1				  BIT	      B5
TA_B0				  CODE	    004D	 129
TA_C0				  CODE	    0050	 136
TA_C1				  CODE	    0057	 143
TA_C2				  CODE	    0066	 152
TA_C3				  CODE	    0052	 137
TA_C4				  CODE	    006F	 159
TA_D1				  CODE	    007B	 169
TA_D2				  CODE	    0083	 178
TA_E1				  CODE	    0096	 197
TB8				  BIT	      9B
TB_A1				  CODE	    00DA	 280
TB_B0				  CODE	    00EB	 296
TB_B1				  CODE	    00F4	 300
TB_B2				  CODE	    00FA	 306
TB_C0				  CODE	    017D	 412
TB_C1				  CODE	    0185	 415
TB_C2				  CODE	    0196	 428
TB_C3				  CODE	    018A	 417
TB_C4				  CODE	    018F	 419
TB_D0				  CODE	    01AD	 451
TB_E0				  CODE	    01DA	 493
TB_F0				  CODE	    0204	 538
TB_F1				  CODE	    020C	 542
TB_F2				  CODE	    021D	 555
TB_F3				  CODE	    0211	 544
TB_F4				  CODE	    0216	 546
TB_G0				  CODE	    024F	 594
TB_G1				  CODE	    023D	 577
TB_G2				  CODE	    0248	 585
TB_MA				  MACRO	        	 234
TB_MC				  MACRO	        	 312
TB_ME				  MACRO	        	 459
TB_MF				  MACRO	        	 501
TCON				  DATA	      88
TC_A0				  CODE	    0271	 654
TC_A1				  CODE	    0263	 645
TC_A2				  CODE	    027A	 661
TC_A3				  CODE	    0282	 670
TC_B1				  CODE	    0298	 690
TC_C0				  CODE	    02B0	 710
TC_C1				  CODE	    02A2	 700
TC_C2				  CODE	    02B8	 717
TC_C3				  CODE	    02BF	 726
TC_D0				  CODE	    02DC	 750
TC_D1				  CODE	    02CD	 738

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 168



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TC_E0				  CODE	    0309	 785
TC_F0				  CODE	    032C	 813
TC_G0				  CODE	    0346	 836
TC_H0				  CODE	    0364	 862
TC_H1				  CODE	    035A	 851
TC_H2				  CODE	    0351	 847
TC_H3				  CODE	    035F	 853
TC_I0				  CODE	    0380	 882
TC_I1				  CODE	    0372	 873
TC_I2				  CODE	    0389	 889
TC_I3				  CODE	    0391	 898
TC_J0				  CODE	    03AE	 921
TC_J1				  CODE	    039F	 909
TC_K0				  CODE	    03DB	 956
TC_L0				  CODE	    03FE	 984
TC_M0				  CODE	    0418	1007
TC_N0				  CODE	    0436	1033
TC_N1				  CODE	    042C	1022
TC_N2				  CODE	    0423	1018
TC_N3				  CODE	    0431	1024
TD_A0				  CODE	    0454	1086
TD_B0				  CODE	    047B	1121
TD_C0				  CODE	    04A1	1155
TD_D0				  CODE	    04D9	1201
TEST_FAILED			  CODE	    1BCE	8428
TE_A0				  CODE	    04FC	1267
TE_B0				  CODE	    0581	1357
TE_C0				  CODE	    05AE	1394
TE_D0				  CODE	    05C1	1413
TE_E0				  CODE	    05E3	1439
TE_F0				  CODE	    05FD	1474
TE_G0				  CODE	    0682	1564
TE_H0				  CODE	    06AF	1601
TE_I0				  CODE	    06C2	1620
TE_MA				  MACRO	        	1239
TE_MF				  MACRO	        	1447
TF0				  BIT	      8D
TF1				  BIT	      8F
TF_A0				  CODE	    071E	1714
TF_B0				  CODE	    073B	1740
TF_C0				  CODE	    0751	1760
TF_D0				  CODE	    079C	1814
TF_E0				  CODE	    07BB	1840
TF_F0				  CODE	    07F6	1894
TF_G0				  CODE	    0811	1920
TF_H0				  CODE	    082A	1942
TF_I0				  CODE	    0849	1968
TF_MA				  MACRO	        	1659
TF_MD				  MACRO	        	1768
TF_MF				  MACRO	        	1848
TG_A0				  CODE	    086E	2022
TG_B0				  CODE	    08A0	2055
TG_C0				  CODE	    08BA	2078
TG_D0				  CODE	    08D5	2102
TG_E0				  CODE	    08EC	2125
TH0				  DATA	      8C

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 169



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TH1				  DATA	      8D
TI				  BIT	      99
TIMER0				  CODE	    000B
TIMER1				  CODE	    001B
TK_A0				  CODE	    0B6C	3304
TK_B0				  CODE	    0BD7	3384
TK_MA				  MACRO	        	3277
TL0				  DATA	      8A
TL1				  DATA	      8B
TMOD				  DATA	      89
TOP_MA				  MACRO	        	2181
TOP_MB				  MACRO	        	2197
TOP_MC				  MACRO	        	2213
TO_A0				  CODE	    18C8	7640
TO_B0				  CODE	    18E4	7665
TP_A0				  CODE	    190B	7715
TP_B0				  CODE	    192B	7751
TP_C0				  CODE	    1947	7776
TQ0				  CODE	    1961	7814
TQ1				  CODE	    195D	7813
TQ_A0				  CODE	    1969	7823
TQ_B0				  CODE	    198F	7857
TR0				  BIT	      8C
TR1				  BIT	      8E
TR_0				  CODE	    19F9	7964
TR_A0				  CODE	    19C5	7922
TR_B0				  CODE	    19E4	7948
TR_C0				  CODE	    1A06	7976
TR_RV0				  CODE	    19AF	7906
TR_RV1				  CODE	    19CE	7932
TR_SUB0				  CODE	    19B1	7907
TR_SUB1				  CODE	    19D0	7933
TR_SUB2				  CODE	    19F3	7962
TST_ALU				  MACRO	        	2231
TST_PSW				  MACRO	        	2163
TS_A0				  CODE	    1A3D	8038
TS_B0				  CODE	    1A6B	8073
TT_A0				  CODE	    1ABB	8167
TT_A_DIVZERO			  CODE	    1AB0	8152
TT_A_LOOP			  CODE	    1A8B	8123
TT_A_NEXT			  CODE	    1AB2	8155
TT_A_TAB			  CODE	    1AC3	8176
TT_A_TAB_END			  CODE	    1AF0	8186
TT_B0				  CODE	    1B29	8247
TT_B_0				  CODE	    1B14	8226
TT_B_LOOP			  CODE	    1AF7	8200
TT_B_NOOVF			  CODE	    1B0E	8221
TT_B_TAB			  CODE	    1B31	8256
TT_B_TAB_END			  CODE	    1B55	8266
TU_A0				  CODE	    1BA4	8346
TU_A_DONE			  CODE	    1B9E	8337
TU_A_TEST			  CODE	    1B80	8313
TXD				  BIT	      B1
WR				  BIT	      B6
