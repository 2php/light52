
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	src\tb51_cpu.a51
	Object File:	bin\tb51_cpu.hex
	List File:	lst\tb51_cpu.lst



 Line  I  Addr  Code            Source

    1:				;-------------------------------------------------------------------------------
    2:				; tb51_cpu.a51 -- MCS51 instruction set test bench.
    3:				;-------------------------------------------------------------------------------
    4:				; This program is meant to verify the basic operation of an MCS51 CPU
    5:				; instruction set implementation.
    6:				; It is far too weak to rely on it exclusively but it can help detect gross
    7:				; implementation errors (overclocked CPUs, timing errors in FPGA cores, that
    8:				; kind of thing).
    9:				;
   10:				; The program is not yet ready to run on actual hardware (UART interface).
   11:				;
   12:				; For a full verification of the instruction set, an instruction set exerciser
   13:				; such as 'zexall' for the Z80 would be more suitable. This one is too weak.
   14:				;
   15:				; The program is meant to run in actual hardware or on a simulated environment.
   16:				; In the latter case you can use the co-simulation features of the light52
   17:				; project to pinpoint bugs.
   18:				;
   19:				; FIXME add assembly option to run tests in an (possibly infinite) loop.
   20:				;-------------------------------------------------------------------------------
   21:				; Major limitations:
   22:				;   1.- PSW is not checked for undue changes.
   23:				;   2.- <#imm> instructions are tested with one imm value only.
   24:				;   3.- <rel> jumps tested with small values (not near corner values).
   25:				;   4.- <bit> tested on 1 byte only, on 2 bits only.
   26:				;   5.- BCD instructions (DA, XCHG) not tested at all.
   27:				;
   28:				; Note there are too many limitations to list. Use this test bench as a first
   29:				; approximation only. If your CPU fails this test, it must be dead!
   30:				;-------------------------------------------------------------------------------
   31:
   32:				        ; Include the definitions for the light52 derivative
   33:				        $nomod51
   34:				        $include (light52.mcu)
   35: 1			;   Light52 processor definition file
   36: 1			;   =================================
   37: 1
   38: 1	N	 80	P0          DATA        080H
   39: 1	N	 81	SP          DATA        081H
   40: 1	N	 82	DPL         DATA        082H
   41: 1	N	 83	DPH         DATA        083H
   42: 1			;PCON      DATA        087H
   43: 1	N	 88	TSTAT       DATA        088H

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   44: 1			;TMOD      DATA        089H
   45: 1	N	 8C	TL          DATA        08CH
   46: 1	N	 8D	TH          DATA        08DH
   47: 1	N	 8E	TCL         DATA        08EH
   48: 1	N	 8F	TCH         DATA        08FH
   49: 1	N	 90	P1          DATA        090H
   50: 1	N	 98	SCON        DATA        098H
   51: 1	N	 99	SBUF        DATA        099H
   52: 1	N	 A0	P2          DATA        0A0H
   53: 1	N	 A8	IE          DATA        0A8H
   54: 1	N	 B0	P3          DATA        0B0H
   55: 1			;IP        DATA        0B8H
   56: 1	N	 C0	EXTINT0     DATA        0C0H
   57: 1	N	 D0	PSW         DATA        0D0H
   58: 1	N	 E0	ACC         DATA        0E0H
   59: 1	N	 F0	B           DATA        0F0H
   60: 1
   61: 1			; TSTAT flags
   62: 1	N	 88	T0IRQ       BIT         088H
   63: 1	N	 8C	T0ARL       BIT         08CH
   64: 1	N	 8D	T0CEN       BIT         08DH
   65: 1
   66: 1			; IE flags
   67: 1	N	 A8	EX0         BIT         0A8H
   68: 1	N	 A9	ET0         BIT         0A9H
   69: 1			;EX1         BIT        0AAH
   70: 1			;ET1         BIT        0ABH
   71: 1	N	 AC	ES          BIT         0ACH
   72: 1			;ET2         BIT        0ADH
   73: 1	N	 AF	EA          BIT         0AFH
   74: 1
   75: 1			; SCON flags
   76: 1	N	 98	TXIRQ       BIT         098H
   77: 1	N	 99	RXIRQ       BIT         099H
   78: 1	N	 9C	TXRDY       BIT         09CH
   79: 1	N	 9D	RXRDY       BIT         09DH
   80: 1
   81: 1			; PSW flags
   82: 1	N	 D0	P           BIT        0D0H
   83: 1	N	 D2	OV          BIT        0D2H
   84: 1	N	 D3	RS0         BIT        0D3H
   85: 1	N	 D4	RS1         BIT        0D4H
   86: 1	N	 D5	F0          BIT        0D5H
   87: 1	N	 D6	AC          BIT        0D6H
   88: 1	N	 D7	CY          BIT        0D7H
   89: 1
   90: 1			; Interrupt vectors
   91: 1	N      0000	RESET       CODE       000H
   92: 1	N      0003	EXTI0       CODE       003H
   93: 1	N      000B	TIMER0      CODE       00BH
   94: 1	N      0013	EXTI1       CODE       013H
   95: 1	N      001B	TIMER1      CODE       01BH
   96: 1	N      0023	SINT        CODE       023H
   97: 1	N      002B	TIMER2      CODE       02BH
   98:
   99:				        ;-- Parameters common to all tests -------------------------------------

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

  100:
  101:		N      0060	dir0    set     060h                ; Address used in direct addressing tests
  102:		N      0061	dir1    set     061h                ; Address used in direct addressing tests
  103:		N      006E	fail    set     06eh                ; (IDATA) set to 1 upon test failure
  104:		N      0070	saved_psw set   070h                ; (IDATA) temp store for PSW value
  105:		N      009F	stack0  set     09fh                ; (IDATA) stack addr used for push/pop tests
  106:
  107:
  108:				        ;-- Macros common to all tests -----------------------------------------
  109:
  110:				        ; putc: send character to console (UART)
  111:				        ; If you change this macro, make sure it DOES NOT MODIFY PSW!
  112:				putc    macro   character
  113:				        local   putc_loop
  114:				putc_loop:
  115:				        ;jnb     SCON.1,putc_loop
  116:				        ;clr     SCON.1
  117:				        mov     SBUF,character
  118:				        endm
  119:
  120:				        ; put_crlf: send CR+LF to console
  121:				put_crlf macro
  122:				        putc    #13
  123:				        putc    #10
  124:				        endm
  125:
  126:				        ;eot char, label: 'end of test' to be used at the end of all tests.
  127:				        ; If you run into this macro it will print character 'char' and
  128:				        ; continue.
  129:				        ; If you jump to label 'label', it will instead print char '?' and
  130:				        ; will set variable 'fail' to 1, then it will continue.
  131:				eot     macro   char,label
  132:				        local   skip
  133:				        putc    #char
  134:				        sjmp    skip
  135:				label:  putc    #'?'
  136:				        mov     fail,#001h
  137:				skip:
  138:				        endm
  139:
  140:				        ;-- Reset & interrupt vectors ------------------------------------------
  141:
  142:		N      0000	        org     00h
  143:	  0000	02 00 30	        ljmp    start               ;
  144:		N      0003	        org     03h
  145:		N      000B	        org     0bh
  146:		N      0013	        org     13h
  147:		N      001B	        org     1bh
  148:		N      0023	        org     23h
  149:
  150:
  151:				        ;-- Main test program --------------------------------------------------
  152:		N      0030	        org     30h
  153:	  0030			start:
  154:				        ; Initialize serial port
  155:				        ;(leave it with the default configuration: 19200-8-N-1)

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

  156:				        ;mov     TMOD,#20h           ; C/T = 0, Mode = 2
  157:				        ;mov     TH1,#0fdh           ; 9600 bauds @11.xxx MHz
  158:				        ;mov     TCON,#40h           ; Enable T1
  159:				        ;mov     SCON,#52h           ; 8/N/1, TI enabled
  160:
  161:				        ; Clear failure flag
  162:	  0030	75 6E 00	        mov     fail,#000h
  163:
  164:
  165:				        ;-- Test series A ------------------------------------------------------
  166:				        ; Test the basic opcodes needed in later tests:
  167:				        ; a.- Serial port initialization is OK
  168:				        ; a.- Bootstrap instructions work as used
  169:				        ; b.- <SJMP rel> (small positive rel only)
  170:				        ; c.- ACC can be loaded with direct mode addressing (as an SFR)
  171:				        ; c.- <CJNE a,#imm,rel>
  172:				        ; d.- <DJNZ dir, rel> (small positive rel only)
  173:				        ; e.- <MOV  a,dir>
  174:				        ; Note that one instance of LJMP has been tested too.
  175:
  176:				        putc    #'A'                ; start of test series
  177+ 1  0033			??0000:
  178+ 1			        ;jnb     SCON.1,putc_loop
  179+ 1			        ;clr     SCON.1
  180+ 1  0033	75 99 41	        mov     SBUF,#'A'
  181:
  182:				        ; If we arrive here at all, and you see the chars in the
  183:				        ; terminal, the A.a test has passed
  184:				        putc    #'a'
  185+ 1  0036			??0001:
  186+ 1			        ;jnb     SCON.1,putc_loop
  187+ 1			        ;clr     SCON.1
  188+ 1  0036	75 99 61	        mov     SBUF,#'a'
  189:
  190:	  0039	80 06		        sjmp    ta_b0               ; <SJMP rel> with very small positive rel
  191:				        putc    #'?'
  192+ 1  003B			??0002:
  193+ 1			        ;jnb     SCON.1,putc_loop
  194+ 1			        ;clr     SCON.1
  195+ 1  003B	75 99 3F	        mov     SBUF,#'?'
  196:	  003E	75 6E 01	        mov     fail,#001h
  197:	  0041			ta_b0:  putc    #'b'
  198+ 1  0041			??0003:
  199+ 1			        ;jnb     SCON.1,putc_loop
  200+ 1			        ;clr     SCON.1
  201+ 1  0041	75 99 62	        mov     SBUF,#'b'
  202:
  203:
  204:	  0044	80 05		ta_c0:  sjmp    ta_c1
  205:	  0046			ta_c3:  putc    #'c'
  206+ 1  0046			??0004:
  207+ 1			        ;jnb     SCON.1,putc_loop
  208+ 1			        ;clr     SCON.1
  209+ 1  0046	75 99 63	        mov     SBUF,#'c'
  210:	  0049	80 18		        sjmp    ta_c4
  211:	  004B	75 E0 5A	ta_c1:  mov     0e0h,#5ah           ; load A as SFR

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



 Line  I  Addr  Code            Source

  212:	  004E	B4 5A F5	        cjne    a,#5ah,ta_c3        ; test cjne with == args...
  213:	  0051	B4 7A 06	        cjne    a,#7ah,ta_c2        ; ...with != args, rel>0...
  214:				        putc    #'?'
  215+ 1  0054			??0005:
  216+ 1			        ;jnb     SCON.1,putc_loop
  217+ 1			        ;clr     SCON.1
  218+ 1  0054	75 99 3F	        mov     SBUF,#'?'
  219:	  0057	75 6E 01	        mov     fail,#001h
  220:	  005A	B4 7A E9	ta_c2:  cjne    a,#7ah,ta_c3        ; ...and with != args, rel<0
  221:				        putc    #'?'
  222+ 1  005D			??0006:
  223+ 1			        ;jnb     SCON.1,putc_loop
  224+ 1			        ;clr     SCON.1
  225+ 1  005D	75 99 3F	        mov     SBUF,#'?'
  226:	  0060	75 6E 01	        mov     fail,#001h
  227:	  0063			ta_c4:
  228:
  229:	  0063	75 60 02	        mov     dir0,#02h
  230:	  0066	D5 60 06	        djnz    dir0,ta_d1
  231:				        putc    #'?'
  232+ 1  0069			??0007:
  233+ 1			        ;jnb     SCON.1,putc_loop
  234+ 1			        ;clr     SCON.1
  235+ 1  0069	75 99 3F	        mov     SBUF,#'?'
  236:	  006C	75 6E 01	        mov     fail,#001h
  237:	  006F	D5 60 05	ta_d1:  djnz    dir0,ta_d2
  238:
  239:				        eot     'd',ta_d2
  240+ 1			        putc    #'d'
  241+ 2  0072			??0009:
  242+ 2			        ;jnb     SCON.1,putc_loop
  243+ 2			        ;clr     SCON.1
  244+ 2  0072	75 99 64	        mov     SBUF,#'d'
  245+ 1  0075	80 06		        sjmp    ??0008
  246+ 1  0077			ta_d2:  putc    #'?'
  247+ 2  0077			??0010:
  248+ 2			        ;jnb     SCON.1,putc_loop
  249+ 2			        ;clr     SCON.1
  250+ 2  0077	75 99 3F	        mov     SBUF,#'?'
  251+ 1  007A	75 6E 01	        mov     fail,#001h
  252+ 1  007D			??0008:
  253:
  254:	  007D	75 60 A5	        mov     dir0,#0a5h          ; test mov a,dir
  255:	  0080	E5 60		        mov     a,dir0
  256:	  0082	B4 A5 05	        cjne    a,#0a5h,ta_e1
  257:
  258:				        eot     'e',ta_e1
  259+ 1			        putc    #'e'
  260+ 2  0085			??0012:
  261+ 2			        ;jnb     SCON.1,putc_loop
  262+ 2			        ;clr     SCON.1
  263+ 2  0085	75 99 65	        mov     SBUF,#'e'
  264+ 1  0088	80 06		        sjmp    ??0011
  265+ 1  008A			ta_e1:  putc    #'?'
  266+ 2  008A			??0013:
  267+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6



 Line  I  Addr  Code            Source

  268+ 2			        ;clr     SCON.1
  269+ 2  008A	75 99 3F	        mov     SBUF,#'?'
  270+ 1  008D	75 6E 01	        mov     fail,#001h
  271+ 1  0090			??0011:
  272:
  273:				        put_crlf                    ; end of test series
  274+ 1			        putc    #13
  275+ 2  0090			??0014:
  276+ 2			        ;jnb     SCON.1,putc_loop
  277+ 2			        ;clr     SCON.1
  278+ 2  0090	75 99 0D	        mov     SBUF,#13
  279+ 1			        putc    #10
  280+ 2  0093			??0015:
  281+ 2			        ;jnb     SCON.1,putc_loop
  282+ 2			        ;clr     SCON.1
  283+ 2  0093	75 99 0A	        mov     SBUF,#10
  284:
  285:				        ;-- Test series B ------------------------------------------------------
  286:				        ; Test CJNE plus a few aux opcodes
  287:				        ; a.- <MOV Rn, #imm>
  288:				        ; a.- <MOV a, Rn>
  289:				        ; b.- <JC rel>, <JNC rel>
  290:				        ; c.- <CJNE Rn, #imm, rel>
  291:				        ; d.- <SETB C>, <CLR C>, <CPL C>
  292:				        ; e.- <MOV @Ri, #imm>
  293:				        ; f.- <CJNE @Ri, #imm, rel>
  294:				        ; g.- <CJNE A, dir, rel>
  295:
  296:				        putc    #'B'                ; start of test series
  297+ 1  0096			??0016:
  298+ 1			        ;jnb     SCON.1,putc_loop
  299+ 1			        ;clr     SCON.1
  300+ 1  0096	75 99 42	        mov     SBUF,#'B'
  301:
  302:				tb_ma   macro   reg,val
  303:				        mov     reg,val
  304:				        mov     a,reg
  305:				        cjne    a,val,tb_a1
  306:				        endm
  307:
  308:				        tb_ma   r0,#081h
  309+ 1  0099	78 81		        mov     r0,#081h
  310+ 1  009B	E8		        mov     a,r0
  311+ 1  009C	B4 81 2F	        cjne    a,#081h,tb_a1
  312:				        tb_ma   r1,#043h
  313+ 1  009F	79 43		        mov     r1,#043h
  314+ 1  00A1	E9		        mov     a,r1
  315+ 1  00A2	B4 43 29	        cjne    a,#043h,tb_a1
  316:				        tb_ma   r2,#027h
  317+ 1  00A5	7A 27		        mov     r2,#027h
  318+ 1  00A7	EA		        mov     a,r2
  319+ 1  00A8	B4 27 23	        cjne    a,#027h,tb_a1
  320:				        tb_ma   r3,#0c2h
  321+ 1  00AB	7B C2		        mov     r3,#0c2h
  322+ 1  00AD	EB		        mov     a,r3
  323+ 1  00AE	B4 C2 1D	        cjne    a,#0c2h,tb_a1

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 7



 Line  I  Addr  Code            Source

  324:				        tb_ma   r4,#0f1h
  325+ 1  00B1	7C F1		        mov     r4,#0f1h
  326+ 1  00B3	EC		        mov     a,r4
  327+ 1  00B4	B4 F1 17	        cjne    a,#0f1h,tb_a1
  328:				        tb_ma   r5,#004h
  329+ 1  00B7	7D 04		        mov     r5,#004h
  330+ 1  00B9	ED		        mov     a,r5
  331+ 1  00BA	B4 04 11	        cjne    a,#004h,tb_a1
  332:				        tb_ma   r6,#092h
  333+ 1  00BD	7E 92		        mov     r6,#092h
  334+ 1  00BF	EE		        mov     a,r6
  335+ 1  00C0	B4 92 0B	        cjne    a,#092h,tb_a1
  336:				        tb_ma   r7,#01fh
  337+ 1  00C3	7F 1F		        mov     r7,#01fh
  338+ 1  00C5	EF		        mov     a,r7
  339+ 1  00C6	B4 1F 05	        cjne    a,#01fh,tb_a1
  340:
  341:				        eot     'a',tb_a1
  342+ 1			        putc    #'a'
  343+ 2  00C9			??0018:
  344+ 2			        ;jnb     SCON.1,putc_loop
  345+ 2			        ;clr     SCON.1
  346+ 2  00C9	75 99 61	        mov     SBUF,#'a'
  347+ 1  00CC	80 06		        sjmp    ??0017
  348+ 1  00CE			tb_a1:  putc    #'?'
  349+ 2  00CE			??0019:
  350+ 2			        ;jnb     SCON.1,putc_loop
  351+ 2			        ;clr     SCON.1
  352+ 2  00CE	75 99 3F	        mov     SBUF,#'?'
  353+ 1  00D1	75 6E 01	        mov     fail,#001h
  354+ 1  00D4			??0017:
  355:
  356:	  00D4	75 D0 80	        mov     PSW,#80h            ; <JC rel>, <JNC rel>
  357:	  00D7	40 06		        jc      tb_b0
  358:				        putc    #'?'
  359+ 1  00D9			??0020:
  360+ 1			        ;jnb     SCON.1,putc_loop
  361+ 1			        ;clr     SCON.1
  362+ 1  00D9	75 99 3F	        mov     SBUF,#'?'
  363:	  00DC	75 6E 01	        mov     fail,#001h
  364:	  00DF	50 07		tb_b0:  jnc     tb_b1
  365:	  00E1	75 D0 00	        mov     PSW,#00h
  366:	  00E4	40 02		        jc      tb_b1
  367:	  00E6	50 06		        jnc     tb_b2
  368:	  00E8			tb_b1:  putc    #'?'
  369+ 1  00E8			??0021:
  370+ 1			        ;jnb     SCON.1,putc_loop
  371+ 1			        ;clr     SCON.1
  372+ 1  00E8	75 99 3F	        mov     SBUF,#'?'
  373:	  00EB	75 6E 01	        mov     fail,#001h
  374:	  00EE			tb_b2:  putc    #'b'
  375+ 1  00EE			??0022:
  376+ 1			        ;jnb     SCON.1,putc_loop
  377+ 1			        ;clr     SCON.1
  378+ 1  00EE	75 99 62	        mov     SBUF,#'b'
  379:

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 8



 Line  I  Addr  Code            Source

  380:				tb_mc   macro   reg,val
  381:				        local   tb_mc0
  382:				        local   tb_mc1
  383:				        mov     reg,val+1
  384:				        cjne    reg,val,tb_mc0
  385:				        putc    #'?'
  386:				        mov     fail,#001h
  387:				tb_mc1: mov     reg,val
  388:				tb_mc0: cjne    reg,val,tb_mc1
  389:				        endm
  390:
  391:				        tb_mc   r0,#091h            ; first test the jumps for all Rn regs
  392+ 1  00F1	78 92		        mov     r0,#091h+1
  393+ 1  00F3	B8 91 08	        cjne    r0,#091h,??0023
  394+ 1			        putc    #'?'
  395+ 2  00F6			??0025:
  396+ 2			        ;jnb     SCON.1,putc_loop
  397+ 2			        ;clr     SCON.1
  398+ 2  00F6	75 99 3F	        mov     SBUF,#'?'
  399+ 1  00F9	75 6E 01	        mov     fail,#001h
  400+ 1  00FC	78 91		??0024: mov     r0,#091h
  401+ 1  00FE	B8 91 FB	??0023: cjne    r0,#091h,??0024
  402:				        tb_mc   r1,#0a2h
  403+ 1  0101	79 A3		        mov     r1,#0a2h+1
  404+ 1  0103	B9 A2 08	        cjne    r1,#0a2h,??0026
  405+ 1			        putc    #'?'
  406+ 2  0106			??0028:
  407+ 2			        ;jnb     SCON.1,putc_loop
  408+ 2			        ;clr     SCON.1
  409+ 2  0106	75 99 3F	        mov     SBUF,#'?'
  410+ 1  0109	75 6E 01	        mov     fail,#001h
  411+ 1  010C	79 A2		??0027: mov     r1,#0a2h
  412+ 1  010E	B9 A2 FB	??0026: cjne    r1,#0a2h,??0027
  413:				        tb_mc   r2,#0b3h
  414+ 1  0111	7A B4		        mov     r2,#0b3h+1
  415+ 1  0113	BA B3 08	        cjne    r2,#0b3h,??0029
  416+ 1			        putc    #'?'
  417+ 2  0116			??0031:
  418+ 2			        ;jnb     SCON.1,putc_loop
  419+ 2			        ;clr     SCON.1
  420+ 2  0116	75 99 3F	        mov     SBUF,#'?'
  421+ 1  0119	75 6E 01	        mov     fail,#001h
  422+ 1  011C	7A B3		??0030: mov     r2,#0b3h
  423+ 1  011E	BA B3 FB	??0029: cjne    r2,#0b3h,??0030
  424:				        tb_mc   r3,#0c4h
  425+ 1  0121	7B C5		        mov     r3,#0c4h+1
  426+ 1  0123	BB C4 08	        cjne    r3,#0c4h,??0032
  427+ 1			        putc    #'?'
  428+ 2  0126			??0034:
  429+ 2			        ;jnb     SCON.1,putc_loop
  430+ 2			        ;clr     SCON.1
  431+ 2  0126	75 99 3F	        mov     SBUF,#'?'
  432+ 1  0129	75 6E 01	        mov     fail,#001h
  433+ 1  012C	7B C4		??0033: mov     r3,#0c4h
  434+ 1  012E	BB C4 FB	??0032: cjne    r3,#0c4h,??0033
  435:				        tb_mc   r4,#0d5h

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 9



 Line  I  Addr  Code            Source

  436+ 1  0131	7C D6		        mov     r4,#0d5h+1
  437+ 1  0133	BC D5 08	        cjne    r4,#0d5h,??0035
  438+ 1			        putc    #'?'
  439+ 2  0136			??0037:
  440+ 2			        ;jnb     SCON.1,putc_loop
  441+ 2			        ;clr     SCON.1
  442+ 2  0136	75 99 3F	        mov     SBUF,#'?'
  443+ 1  0139	75 6E 01	        mov     fail,#001h
  444+ 1  013C	7C D5		??0036: mov     r4,#0d5h
  445+ 1  013E	BC D5 FB	??0035: cjne    r4,#0d5h,??0036
  446:				        tb_mc   r5,#0e6h
  447+ 1  0141	7D E7		        mov     r5,#0e6h+1
  448+ 1  0143	BD E6 08	        cjne    r5,#0e6h,??0038
  449+ 1			        putc    #'?'
  450+ 2  0146			??0040:
  451+ 2			        ;jnb     SCON.1,putc_loop
  452+ 2			        ;clr     SCON.1
  453+ 2  0146	75 99 3F	        mov     SBUF,#'?'
  454+ 1  0149	75 6E 01	        mov     fail,#001h
  455+ 1  014C	7D E6		??0039: mov     r5,#0e6h
  456+ 1  014E	BD E6 FB	??0038: cjne    r5,#0e6h,??0039
  457:				        tb_mc   r6,#0f7h
  458+ 1  0151	7E F8		        mov     r6,#0f7h+1
  459+ 1  0153	BE F7 08	        cjne    r6,#0f7h,??0041
  460+ 1			        putc    #'?'
  461+ 2  0156			??0043:
  462+ 2			        ;jnb     SCON.1,putc_loop
  463+ 2			        ;clr     SCON.1
  464+ 2  0156	75 99 3F	        mov     SBUF,#'?'
  465+ 1  0159	75 6E 01	        mov     fail,#001h
  466+ 1  015C	7E F7		??0042: mov     r6,#0f7h
  467+ 1  015E	BE F7 FB	??0041: cjne    r6,#0f7h,??0042
  468:				        tb_mc   r7,#008h
  469+ 1  0161	7F 09		        mov     r7,#008h+1
  470+ 1  0163	BF 08 08	        cjne    r7,#008h,??0044
  471+ 1			        putc    #'?'
  472+ 2  0166			??0046:
  473+ 2			        ;jnb     SCON.1,putc_loop
  474+ 2			        ;clr     SCON.1
  475+ 2  0166	75 99 3F	        mov     SBUF,#'?'
  476+ 1  0169	75 6E 01	        mov     fail,#001h
  477+ 1  016C	7F 08		??0045: mov     r7,#008h
  478+ 1  016E	BF 08 FB	??0044: cjne    r7,#008h,??0045
  479:
  480:	  0171	75 D0 00	tb_c0:  mov     PSW,#00h            ; now test the C flag with a single Rn reg
  481:	  0174	78 34		        mov     r0,#034h
  482:	  0176	B8 35 00	        cjne    r0,#035h,tb_c1
  483:	  0179	50 0F		tb_c1:  jnc     tb_c2
  484:	  017B	B8 34 00	        cjne    r0,#034h,tb_c3
  485:	  017E	40 0A		tb_c3:  jc      tb_c2
  486:	  0180	B8 33 00	        cjne    r0,#033h,tb_c4
  487:	  0183	40 05		tb_c4:  jc      tb_c2
  488:
  489:				        eot     'c',tb_c2
  490+ 1			        putc    #'c'
  491+ 2  0185			??0048:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 10



 Line  I  Addr  Code            Source

  492+ 2			        ;jnb     SCON.1,putc_loop
  493+ 2			        ;clr     SCON.1
  494+ 2  0185	75 99 63	        mov     SBUF,#'c'
  495+ 1  0188	80 06		        sjmp    ??0047
  496+ 1  018A			tb_c2:  putc    #'?'
  497+ 2  018A			??0049:
  498+ 2			        ;jnb     SCON.1,putc_loop
  499+ 2			        ;clr     SCON.1
  500+ 2  018A	75 99 3F	        mov     SBUF,#'?'
  501+ 1  018D	75 6E 01	        mov     fail,#001h
  502+ 1  0190			??0047:
  503:
  504:	  0190	75 D0 80	        mov     PSW,#80h            ; test C set, reset and complement
  505:	  0193	C3		        clr     c
  506:	  0194	40 0B		        jc      tb_d0
  507:	  0196	D3		        setb    c
  508:	  0197	50 08		        jnc     tb_d0
  509:	  0199	B3		        cpl     c
  510:	  019A	40 05		        jc      tb_d0
  511:
  512:				        eot     'd',tb_d0
  513+ 1			        putc    #'d'
  514+ 2  019C			??0051:
  515+ 2			        ;jnb     SCON.1,putc_loop
  516+ 2			        ;clr     SCON.1
  517+ 2  019C	75 99 64	        mov     SBUF,#'d'
  518+ 1  019F	80 06		        sjmp    ??0050
  519+ 1  01A1			tb_d0:  putc    #'?'
  520+ 2  01A1			??0052:
  521+ 2			        ;jnb     SCON.1,putc_loop
  522+ 2			        ;clr     SCON.1
  523+ 2  01A1	75 99 3F	        mov     SBUF,#'?'
  524+ 1  01A4	75 6E 01	        mov     fail,#001h
  525+ 1  01A7			??0050:
  526:
  527:				tb_me   macro   reg
  528:				        mov     reg,#dir0
  529:				        mov     dir0,#12h
  530:				        mov     a,dir0
  531:				        cjne    a,#012h,tb_e0
  532:				        mov     @reg,#0f5h
  533:				        mov     a,dir0
  534:				        cjne    a,#0f5h,tb_e0
  535:				        endm
  536:
  537:				        tb_me   r0                  ; test <mov @ri, #imm> with both regs
  538+ 1  01A7	78 60		        mov     r0,#dir0
  539+ 1  01A9	75 60 12	        mov     dir0,#12h
  540+ 1  01AC	E5 60		        mov     a,dir0
  541+ 1  01AE	B4 12 1D	        cjne    a,#012h,tb_e0
  542+ 1  01B1	76 F5		        mov     @r0,#0f5h
  543+ 1  01B3	E5 60		        mov     a,dir0
  544+ 1  01B5	B4 F5 16	        cjne    a,#0f5h,tb_e0
  545:				        tb_me   r1
  546+ 1  01B8	79 60		        mov     r1,#dir0
  547+ 1  01BA	75 60 12	        mov     dir0,#12h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 11



 Line  I  Addr  Code            Source

  548+ 1  01BD	E5 60		        mov     a,dir0
  549+ 1  01BF	B4 12 0C	        cjne    a,#012h,tb_e0
  550+ 1  01C2	77 F5		        mov     @r1,#0f5h
  551+ 1  01C4	E5 60		        mov     a,dir0
  552+ 1  01C6	B4 F5 05	        cjne    a,#0f5h,tb_e0
  553:
  554:				        eot     'e',tb_e0
  555+ 1			        putc    #'e'
  556+ 2  01C9			??0054:
  557+ 2			        ;jnb     SCON.1,putc_loop
  558+ 2			        ;clr     SCON.1
  559+ 2  01C9	75 99 65	        mov     SBUF,#'e'
  560+ 1  01CC	80 06		        sjmp    ??0053
  561+ 1  01CE			tb_e0:  putc    #'?'
  562+ 2  01CE			??0055:
  563+ 2			        ;jnb     SCON.1,putc_loop
  564+ 2			        ;clr     SCON.1
  565+ 2  01CE	75 99 3F	        mov     SBUF,#'?'
  566+ 1  01D1	75 6E 01	        mov     fail,#001h
  567+ 1  01D4			??0053:
  568:
  569:				tb_mf   macro   reg,val
  570:				        local   tb_mf0
  571:				        local   tb_mf1
  572:				        mov     reg,#30h
  573:				        mov     @reg,val+1
  574:				        cjne    @reg,val,tb_mf0
  575:				        putc    #'?'
  576:				        mov     fail,#001h
  577:				tb_mf1: mov     @reg,val
  578:				tb_mf0: cjne    @reg,val,tb_mf1
  579:				        endm
  580:
  581:				        tb_mf   r0,#12h
  582+ 1  01D4	78 30		        mov     r0,#30h
  583+ 1  01D6	76 13		        mov     @r0,#12h+1
  584+ 1  01D8	B6 12 08	        cjne    @r0,#12h,??0056
  585+ 1			        putc    #'?'
  586+ 2  01DB			??0058:
  587+ 2			        ;jnb     SCON.1,putc_loop
  588+ 2			        ;clr     SCON.1
  589+ 2  01DB	75 99 3F	        mov     SBUF,#'?'
  590+ 1  01DE	75 6E 01	        mov     fail,#001h
  591+ 1  01E1	76 12		??0057: mov     @r0,#12h
  592+ 1  01E3	B6 12 FB	??0056: cjne    @r0,#12h,??0057
  593:				        tb_mf   r1,#34h
  594+ 1  01E6	79 30		        mov     r1,#30h
  595+ 1  01E8	77 35		        mov     @r1,#34h+1
  596+ 1  01EA	B7 34 08	        cjne    @r1,#34h,??0059
  597+ 1			        putc    #'?'
  598+ 2  01ED			??0061:
  599+ 2			        ;jnb     SCON.1,putc_loop
  600+ 2			        ;clr     SCON.1
  601+ 2  01ED	75 99 3F	        mov     SBUF,#'?'
  602+ 1  01F0	75 6E 01	        mov     fail,#001h
  603+ 1  01F3	77 34		??0060: mov     @r1,#34h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 12



 Line  I  Addr  Code            Source

  604+ 1  01F5	B7 34 FB	??0059: cjne    @r1,#34h,??0060
  605:
  606:	  01F8	78 30		tb_f0:  mov     r0,#30h             ; now test the C flag with a single Rn reg
  607:	  01FA	C3		        clr     c
  608:	  01FB	76 34		        mov     @r0,#034h
  609:	  01FD	B6 35 00	        cjne    @r0,#035h,tb_f1
  610:	  0200	50 0F		tb_f1:  jnc     tb_f2
  611:	  0202	B6 34 00	        cjne    @r0,#034h,tb_f3
  612:	  0205	40 0A		tb_f3:  jc      tb_f2
  613:	  0207	B6 33 00	        cjne    @r0,#033h,tb_f4
  614:	  020A	40 05		tb_f4:  jc      tb_f2
  615:
  616:				        eot     'f',tb_f2
  617+ 1			        putc    #'f'
  618+ 2  020C			??0063:
  619+ 2			        ;jnb     SCON.1,putc_loop
  620+ 2			        ;clr     SCON.1
  621+ 2  020C	75 99 66	        mov     SBUF,#'f'
  622+ 1  020F	80 06		        sjmp    ??0062
  623+ 1  0211			tb_f2:  putc    #'?'
  624+ 2  0211			??0064:
  625+ 2			        ;jnb     SCON.1,putc_loop
  626+ 2			        ;clr     SCON.1
  627+ 2  0211	75 99 3F	        mov     SBUF,#'?'
  628+ 1  0214	75 6E 01	        mov     fail,#001h
  629+ 1  0217			??0062:
  630:
  631:	  0217	75 60 C0	        mov     dir0,#0c0h
  632:	  021A	75 31 C1	        mov     031h,#0c1h
  633:	  021D	75 32 C2	        mov     032h,#0c2h
  634:	  0220	C3		        clr     c
  635:	  0221	74 C1		        mov     a,#0c1h
  636:	  0223	B5 31 1D	        cjne    a,031h,tb_g0
  637:	  0226	40 1B		        jc      tb_g0
  638:	  0228	B5 32 06	        cjne    a,032h,tb_g1
  639:				        putc    #'?'
  640+ 1  022B			??0065:
  641+ 1			        ;jnb     SCON.1,putc_loop
  642+ 1			        ;clr     SCON.1
  643+ 1  022B	75 99 3F	        mov     SBUF,#'?'
  644:	  022E	75 6E 01	        mov     fail,#001h
  645:	  0231	50 10		tb_g1:  jnc     tb_g0
  646:	  0233	B5 60 06	        cjne    a,dir0,tb_g2
  647:				        putc    #'$'
  648+ 1  0236			??0066:
  649+ 1			        ;jnb     SCON.1,putc_loop
  650+ 1			        ;clr     SCON.1
  651+ 1  0236	75 99 24	        mov     SBUF,#'$'
  652:	  0239	75 6E 01	        mov     fail,#001h
  653:	  023C	40 05		tb_g2:  jc      tb_g0
  654:
  655:				        eot     'g',tb_g0
  656+ 1			        putc    #'g'
  657+ 2  023E			??0068:
  658+ 2			        ;jnb     SCON.1,putc_loop
  659+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 13



 Line  I  Addr  Code            Source

  660+ 2  023E	75 99 67	        mov     SBUF,#'g'
  661+ 1  0241	80 06		        sjmp    ??0067
  662+ 1  0243			tb_g0:  putc    #'?'
  663+ 2  0243			??0069:
  664+ 2			        ;jnb     SCON.1,putc_loop
  665+ 2			        ;clr     SCON.1
  666+ 2  0243	75 99 3F	        mov     SBUF,#'?'
  667+ 1  0246	75 6E 01	        mov     fail,#001h
  668+ 1  0249			??0067:
  669:
  670:				        put_crlf                    ; end of test series
  671+ 1			        putc    #13
  672+ 2  0249			??0070:
  673+ 2			        ;jnb     SCON.1,putc_loop
  674+ 2			        ;clr     SCON.1
  675+ 2  0249	75 99 0D	        mov     SBUF,#13
  676+ 1			        putc    #10
  677+ 2  024C			??0071:
  678+ 2			        ;jnb     SCON.1,putc_loop
  679+ 2			        ;clr     SCON.1
  680+ 2  024C	75 99 0A	        mov     SBUF,#10
  681:
  682:
  683:				        ;-- Test series C ------------------------------------------------------
  684:				        ; Bit operations and the rest of the conditional rel jumps
  685:				        ; The following tests will use a bit address within the IRAM
  686:				        ; a.- <JB bit, rel>, <JNB bit, rel>
  687:				        ; b.- <MOV A, #imm>
  688:				        ; c.- <JZ rel>, <JNZ rel>
  689:				        ; d.- <CLR bit>, <CPL bit>
  690:				        ; e.- <ANL C, bit>, <ORL C, bit>
  691:				        ; e.- <ANL C, /bit>, <ORL C, /bit>
  692:				        ; f.- <MOV C,bit>, <MOV bit, C>
  693:				        ; g.- <SETB bit>
  694:				        ; h.- <JBC bit>
  695:				        ; The following tests are the same as above except a bit address within
  696:				        ; SFR B is used.
  697:				        ; i.- <JB bit, rel>, <JNB bit, rel>
  698:				        ; j.- <CLR bit>, <CPL bit>
  699:				        ; k.- <ANL C, bit>, <ORL C, bit>
  700:				        ; k.- <ANL C, /bit>, <ORL C, /bit>
  701:				        ; l.- <MOV C,bit>, <MOV bit, C>
  702:				        ; m.- <SETB bit>
  703:				        ; n.- <JBC bit>
  704:
  705:				        putc    #'C'                ; start of test series
  706+ 1  024F			??0072:
  707+ 1			        ;jnb     SCON.1,putc_loop
  708+ 1			        ;clr     SCON.1
  709+ 1  024F	75 99 43	        mov     SBUF,#'C'
  710:
  711:	  0252	75 2F 80	        mov     02fh,#80h           ; We'll be testing bits 2F.7 and 2F.6
  712:	  0255	80 0E		        sjmp    tc_a0
  713:	  0257	30 7F 1C	tc_a1:  jnb     07fh,tc_a3          ; JNB jumps not on bit set
  714:	  025A	30 7E 11	        jnb     07eh,tc_a2          ; JNB jumps on bit clear
  715:				        putc    #'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 14



 Line  I  Addr  Code            Source

  716+ 1  025D			??0073:
  717+ 1			        ;jnb     SCON.1,putc_loop
  718+ 1			        ;clr     SCON.1
  719+ 1  025D	75 99 3F	        mov     SBUF,#'?'
  720:	  0260	75 6E 01	        mov     fail,#001h
  721:	  0263	80 11		        sjmp    tc_a3
  722:	  0265	20 7F EF	tc_a0:  jb      07fh,tc_a1          ; JB jumps on bit set
  723:				        putc    #'!'
  724+ 1  0268			??0074:
  725+ 1			        ;jnb     SCON.1,putc_loop
  726+ 1			        ;clr     SCON.1
  727+ 1  0268	75 99 21	        mov     SBUF,#'!'
  728:	  026B	75 6E 01	        mov     fail,#001h
  729:	  026E	20 7E 05	tc_a2:  jb      07eh,tc_a3          ; JB jumps not on bit clear
  730:
  731:				        eot     'a',tc_a3
  732+ 1			        putc    #'a'
  733+ 2  0271			??0076:
  734+ 2			        ;jnb     SCON.1,putc_loop
  735+ 2			        ;clr     SCON.1
  736+ 2  0271	75 99 61	        mov     SBUF,#'a'
  737+ 1  0274	80 06		        sjmp    ??0075
  738+ 1  0276			tc_a3:  putc    #'?'
  739+ 2  0276			??0077:
  740+ 2			        ;jnb     SCON.1,putc_loop
  741+ 2			        ;clr     SCON.1
  742+ 2  0276	75 99 3F	        mov     SBUF,#'?'
  743+ 1  0279	75 6E 01	        mov     fail,#001h
  744+ 1  027C			??0075:
  745:
  746:	  027C	75 E0 79	        mov     0e0h,#079h          ; init acc (as sfr) with some data
  747:	  027F	B4 79 0A	        cjne    a,#079h,tc_b1
  748:	  0282	74 5A		        mov     a,#05ah             ; now load a with imm data...
  749:	  0284	B4 5A 05	        cjne    a,#05ah,tc_b1       ; ...and make sure a got the data
  750:
  751:				        eot     'b',tc_b1
  752+ 1			        putc    #'b'
  753+ 2  0287			??0079:
  754+ 2			        ;jnb     SCON.1,putc_loop
  755+ 2			        ;clr     SCON.1
  756+ 2  0287	75 99 62	        mov     SBUF,#'b'
  757+ 1  028A	80 06		        sjmp    ??0078
  758+ 1  028C			tc_b1:  putc    #'?'
  759+ 2  028C			??0080:
  760+ 2			        ;jnb     SCON.1,putc_loop
  761+ 2			        ;clr     SCON.1
  762+ 2  028C	75 99 3F	        mov     SBUF,#'?'
  763+ 1  028F	75 6E 01	        mov     fail,#001h
  764+ 1  0292			??0078:
  765:
  766:	  0292	74 80		        mov     a,#80h
  767:	  0294	80 0E		        sjmp    tc_c0
  768:	  0296	60 1B		tc_c1:  jz      tc_c3               ; JZ jumps not on acc!=0
  769:	  0298	74 00		        mov     a,#00h
  770:	  029A	60 10		        jz      tc_c2               ; JZ jumps on acc==0
  771:				        putc    #'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 15



 Line  I  Addr  Code            Source

  772+ 1  029C			??0081:
  773+ 1			        ;jnb     SCON.1,putc_loop
  774+ 1			        ;clr     SCON.1
  775+ 1  029C	75 99 3F	        mov     SBUF,#'?'
  776:	  029F	75 6E 01	        mov     fail,#001h
  777:	  02A2	80 0F		        sjmp    tc_c3
  778:	  02A4	70 F0		tc_c0:  jnz     tc_c1               ; JNZ jumps on acc!=0
  779:				        putc    #'!'
  780+ 1  02A6			??0082:
  781+ 1			        ;jnb     SCON.1,putc_loop
  782+ 1			        ;clr     SCON.1
  783+ 1  02A6	75 99 21	        mov     SBUF,#'!'
  784:	  02A9	75 6E 01	        mov     fail,#001h
  785:	  02AC	70 05		tc_c2:  jnz     tc_c3               ; JNZ jumps not on acc==0
  786:
  787:				        eot     'c',tc_c3
  788+ 1			        putc    #'c'
  789+ 2  02AE			??0084:
  790+ 2			        ;jnb     SCON.1,putc_loop
  791+ 2			        ;clr     SCON.1
  792+ 2  02AE	75 99 63	        mov     SBUF,#'c'
  793+ 1  02B1	80 06		        sjmp    ??0083
  794+ 1  02B3			tc_c3:  putc    #'?'
  795+ 2  02B3			??0085:
  796+ 2			        ;jnb     SCON.1,putc_loop
  797+ 2			        ;clr     SCON.1
  798+ 2  02B3	75 99 3F	        mov     SBUF,#'?'
  799+ 1  02B6	75 6E 01	        mov     fail,#001h
  800+ 1  02B9			??0083:
  801:
  802:
  803:	  02B9	75 2F 80	        mov     02fh,#80h           ; We'll be testing bit 2F.7
  804:	  02BC	20 7F 02	        jb      07fh,tc_d1
  805:	  02BF	80 0F		        sjmp    tc_d0
  806:	  02C1	C2 7F		tc_d1:  clr     07fh
  807:	  02C3	20 7F 0A	        jb      07fh,tc_d0
  808:	  02C6	B2 7F		        cpl     07fh
  809:	  02C8	30 7F 05	        jnb     07fh,tc_d0
  810:
  811:				        eot     'd',tc_d0
  812+ 1			        putc    #'d'
  813+ 2  02CB			??0087:
  814+ 2			        ;jnb     SCON.1,putc_loop
  815+ 2			        ;clr     SCON.1
  816+ 2  02CB	75 99 64	        mov     SBUF,#'d'
  817+ 1  02CE	80 06		        sjmp    ??0086
  818+ 1  02D0			tc_d0:  putc    #'?'
  819+ 2  02D0			??0088:
  820+ 2			        ;jnb     SCON.1,putc_loop
  821+ 2			        ;clr     SCON.1
  822+ 2  02D0	75 99 3F	        mov     SBUF,#'?'
  823+ 1  02D3	75 6E 01	        mov     fail,#001h
  824+ 1  02D6			??0086:
  825:
  826:	  02D6	75 2E 08	        mov     02eh,#08h           ; We'll be testing bits 2E.3 and 2E.2
  827:	  02D9	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 16



 Line  I  Addr  Code            Source

  828:	  02DA	82 73		        anl     c,073h              ; Test ANL in all 4 input combinations
  829:	  02DC	40 1F		        jc      tc_e0
  830:	  02DE	D3		        setb    c
  831:	  02DF	82 73		        anl     c,073h
  832:	  02E1	50 1A		        jnc     tc_e0
  833:	  02E3	B0 72		        anl     c,/072h
  834:	  02E5	50 16		        jnc     tc_e0
  835:				                                    ; CY == 1
  836:	  02E7	72 73		        orl     c,073h              ; ORL-ing with 1 should give 1
  837:	  02E9	50 12		        jnc     tc_e0
  838:	  02EB	72 72		        orl     c,072h
  839:	  02ED	50 0E		        jnc     tc_e0
  840:	  02EF	C3		        clr     c                   ; CY == 0
  841:	  02F0	72 73		        orl     c,073h              ; Now ORL c, 'bit' should give 'bit'
  842:	  02F2	50 09		        jnc     tc_e0
  843:	  02F4	A0 72		        orl     c,/072h
  844:	  02F6	50 05		        jnc     tc_e0
  845:
  846:				        eot     'e',tc_e0
  847+ 1			        putc    #'e'
  848+ 2  02F8			??0090:
  849+ 2			        ;jnb     SCON.1,putc_loop
  850+ 2			        ;clr     SCON.1
  851+ 2  02F8	75 99 65	        mov     SBUF,#'e'
  852+ 1  02FB	80 06		        sjmp    ??0089
  853+ 1  02FD			tc_e0:  putc    #'?'
  854+ 2  02FD			??0091:
  855+ 2			        ;jnb     SCON.1,putc_loop
  856+ 2			        ;clr     SCON.1
  857+ 2  02FD	75 99 3F	        mov     SBUF,#'?'
  858+ 1  0300	75 6E 01	        mov     fail,#001h
  859+ 1  0303			??0089:
  860:
  861:	  0303	75 2E 08	        mov     02eh,#08h           ; We'll be testing bits 2E.3 and 2E.2
  862:	  0306	C3		        clr     c
  863:	  0307	A2 73		        mov     c,073h
  864:	  0309	50 15		        jnc     tc_f0
  865:	  030B	A2 72		        mov     c,072h
  866:	  030D	40 11		        jc      tc_f0
  867:	  030F	C3		        clr     c
  868:	  0310	92 71		        mov     071h,c
  869:	  0312	20 71 0B	        jb      071h,tc_f0
  870:	  0315	D3		        setb    c
  871:	  0316	92 71		        mov     071h,c
  872:	  0318	30 71 05	        jnb     071h,tc_f0
  873:
  874:				        eot     'f',tc_f0
  875+ 1			        putc    #'f'
  876+ 2  031B			??0093:
  877+ 2			        ;jnb     SCON.1,putc_loop
  878+ 2			        ;clr     SCON.1
  879+ 2  031B	75 99 66	        mov     SBUF,#'f'
  880+ 1  031E	80 06		        sjmp    ??0092
  881+ 1  0320			tc_f0:  putc    #'?'
  882+ 2  0320			??0094:
  883+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 17



 Line  I  Addr  Code            Source

  884+ 2			        ;clr     SCON.1
  885+ 2  0320	75 99 3F	        mov     SBUF,#'?'
  886+ 1  0323	75 6E 01	        mov     fail,#001h
  887+ 1  0326			??0092:
  888:
  889:	  0326	75 2E 00	        mov     02eh,#00h           ; We'll be testing bits 2E.3 and 2E.2
  890:	  0329	D2 73		        setb    073h
  891:	  032B	A2 73		        mov     c,073h
  892:	  032D	50 0B		        jnc     tc_g0
  893:	  032F	D2 72		        setb    072h
  894:	  0331	A2 72		        mov     c,072h
  895:	  0333	50 05		        jnc     tc_g0
  896:
  897:				        eot     'g',tc_g0
  898+ 1			        putc    #'g'
  899+ 2  0335			??0096:
  900+ 2			        ;jnb     SCON.1,putc_loop
  901+ 2			        ;clr     SCON.1
  902+ 2  0335	75 99 67	        mov     SBUF,#'g'
  903+ 1  0338	80 06		        sjmp    ??0095
  904+ 1  033A			tc_g0:  putc    #'?'
  905+ 2  033A			??0097:
  906+ 2			        ;jnb     SCON.1,putc_loop
  907+ 2			        ;clr     SCON.1
  908+ 2  033A	75 99 3F	        mov     SBUF,#'?'
  909+ 1  033D	75 6E 01	        mov     fail,#001h
  910+ 1  0340			??0095:
  911:
  912:				        ; (better read the following code in execution order)
  913:	  0340	75 2E 08	        mov     02eh,#08h           ; We'll be testing bits 2E.3 and 2E.2
  914:	  0343	80 09		        sjmp    tc_h1               ; jump forward so we can test jump backwards
  915:	  0345	A2 73		tc_h2:  mov     c,073h              ; make sure the target bit is clear
  916:	  0347	40 0F		        jc      tc_h0
  917:	  0349	10 72 0C	        jbc     072h,tc_h0          ; JBC jumps not when target bit clear
  918:	  034C	80 05		        sjmp    tc_h3
  919:	  034E	10 73 F4	tc_h1:  jbc     073h,tc_h2          ; JBC jumps when target bit set
  920:	  0351	80 05		        sjmp    tc_h0
  921:	  0353			tc_h3:
  922:
  923:				        eot     'h',tc_h0
  924+ 1			        putc    #'h'
  925+ 2  0353			??0099:
  926+ 2			        ;jnb     SCON.1,putc_loop
  927+ 2			        ;clr     SCON.1
  928+ 2  0353	75 99 68	        mov     SBUF,#'h'
  929+ 1  0356	80 06		        sjmp    ??0098
  930+ 1  0358			tc_h0:  putc    #'?'
  931+ 2  0358			??0100:
  932+ 2			        ;jnb     SCON.1,putc_loop
  933+ 2			        ;clr     SCON.1
  934+ 2  0358	75 99 3F	        mov     SBUF,#'?'
  935+ 1  035B	75 6E 01	        mov     fail,#001h
  936+ 1  035E			??0098:
  937:
  938:	  035E	75 2F 00	        mov     02fh,#00h
  939:	  0361	75 F0 80	        mov     B,#80h              ; We'll be testing bits B.7 and B.6

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 18



 Line  I  Addr  Code            Source

  940:	  0364	80 0E		        sjmp    tc_i0
  941:	  0366	30 F7 1C	tc_i1:  jnb     B.7,tc_i3           ; JNB jumps not on bit set
  942:	  0369	30 F6 11	        jnb     B.6,tc_i2           ; JNB jumps on bit clear
  943:				        putc    #'?'
  944+ 1  036C			??0101:
  945+ 1			        ;jnb     SCON.1,putc_loop
  946+ 1			        ;clr     SCON.1
  947+ 1  036C	75 99 3F	        mov     SBUF,#'?'
  948:	  036F	75 6E 01	        mov     fail,#001h
  949:	  0372	80 11		        sjmp    tc_i3
  950:	  0374	20 F7 EF	tc_i0:  jb      B.7,tc_i1           ; JB jumps on bit set
  951:				        putc    #'!'
  952+ 1  0377			??0102:
  953+ 1			        ;jnb     SCON.1,putc_loop
  954+ 1			        ;clr     SCON.1
  955+ 1  0377	75 99 21	        mov     SBUF,#'!'
  956:	  037A	75 6E 01	        mov     fail,#001h
  957:	  037D	20 F6 05	tc_i2:  jb      B.6,tc_i3           ; JB jumps not on bit clear
  958:
  959:				        eot     'i',tc_i3
  960+ 1			        putc    #'i'
  961+ 2  0380			??0104:
  962+ 2			        ;jnb     SCON.1,putc_loop
  963+ 2			        ;clr     SCON.1
  964+ 2  0380	75 99 69	        mov     SBUF,#'i'
  965+ 1  0383	80 06		        sjmp    ??0103
  966+ 1  0385			tc_i3:  putc    #'?'
  967+ 2  0385			??0105:
  968+ 2			        ;jnb     SCON.1,putc_loop
  969+ 2			        ;clr     SCON.1
  970+ 2  0385	75 99 3F	        mov     SBUF,#'?'
  971+ 1  0388	75 6E 01	        mov     fail,#001h
  972+ 1  038B			??0103:
  973:
  974:	  038B	75 F0 80	        mov     B,#80h              ; We'll be testing bit B.7
  975:	  038E	20 F7 02	        jb      B.7,tc_j1
  976:	  0391	80 0F		        sjmp    tc_j0
  977:	  0393	C2 F7		tc_j1:  clr     B.7
  978:	  0395	20 F7 0A	        jb      B.7,tc_j0
  979:	  0398	B2 F7		        cpl     B.7
  980:	  039A	30 F7 05	        jnb     B.7,tc_j0
  981:
  982:				        eot     'j',tc_j0
  983+ 1			        putc    #'j'
  984+ 2  039D			??0107:
  985+ 2			        ;jnb     SCON.1,putc_loop
  986+ 2			        ;clr     SCON.1
  987+ 2  039D	75 99 6A	        mov     SBUF,#'j'
  988+ 1  03A0	80 06		        sjmp    ??0106
  989+ 1  03A2			tc_j0:  putc    #'?'
  990+ 2  03A2			??0108:
  991+ 2			        ;jnb     SCON.1,putc_loop
  992+ 2			        ;clr     SCON.1
  993+ 2  03A2	75 99 3F	        mov     SBUF,#'?'
  994+ 1  03A5	75 6E 01	        mov     fail,#001h
  995+ 1  03A8			??0106:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 19



 Line  I  Addr  Code            Source

  996:
  997:	  03A8	75 F0 08	        mov     B,#08h              ; We'll be testing bits B.3 and B.2
  998:	  03AB	C3		        clr     c
  999:	  03AC	82 F3		        anl     c,B.3               ; Test ANL in all 4 input combinations
 1000:	  03AE	40 1F		        jc      tc_k0
 1001:	  03B0	D3		        setb    c
 1002:	  03B1	82 F3		        anl     c,B.3
 1003:	  03B3	50 1A		        jnc     tc_k0
 1004:	  03B5	B0 F2		        anl     c,/B.2
 1005:	  03B7	50 16		        jnc     tc_k0
 1006:				                                    ; CY == 1
 1007:	  03B9	72 F3		        orl     c,B.3               ; ORL-ing with 1 should give 1
 1008:	  03BB	50 12		        jnc     tc_k0
 1009:	  03BD	72 F2		        orl     c,B.2
 1010:	  03BF	50 0E		        jnc     tc_k0
 1011:	  03C1	C3		        clr     c                   ; CY == 0
 1012:	  03C2	72 F3		        orl     c,B.3               ; Now ORL c, 'bit' should give 'bit'
 1013:	  03C4	50 09		        jnc     tc_k0
 1014:	  03C6	A0 F2		        orl     c,/B.2
 1015:	  03C8	50 05		        jnc     tc_k0
 1016:
 1017:				        eot     'k',tc_k0
 1018+ 1			        putc    #'k'
 1019+ 2  03CA			??0110:
 1020+ 2			        ;jnb     SCON.1,putc_loop
 1021+ 2			        ;clr     SCON.1
 1022+ 2  03CA	75 99 6B	        mov     SBUF,#'k'
 1023+ 1  03CD	80 06		        sjmp    ??0109
 1024+ 1  03CF			tc_k0:  putc    #'?'
 1025+ 2  03CF			??0111:
 1026+ 2			        ;jnb     SCON.1,putc_loop
 1027+ 2			        ;clr     SCON.1
 1028+ 2  03CF	75 99 3F	        mov     SBUF,#'?'
 1029+ 1  03D2	75 6E 01	        mov     fail,#001h
 1030+ 1  03D5			??0109:
 1031:
 1032:	  03D5	75 F0 08	        mov     B,#08h              ; We'll be testing bits B.3, B.2 and B.1
 1033:	  03D8	C3		        clr     c
 1034:	  03D9	A2 F3		        mov     c,B.3
 1035:	  03DB	50 15		        jnc     tc_L0
 1036:	  03DD	A2 F2		        mov     c,B.2
 1037:	  03DF	40 11		        jc      tc_L0
 1038:	  03E1	C3		        clr     c
 1039:	  03E2	92 F1		        mov     B.1,c
 1040:	  03E4	20 F1 0B	        jb      B.1,tc_L0
 1041:	  03E7	D3		        setb    c
 1042:	  03E8	92 F1		        mov     B.1,c
 1043:	  03EA	30 F1 05	        jnb     B.1,tc_L0
 1044:
 1045:				        eot     'l',tc_L0
 1046+ 1			        putc    #'l'
 1047+ 2  03ED			??0113:
 1048+ 2			        ;jnb     SCON.1,putc_loop
 1049+ 2			        ;clr     SCON.1
 1050+ 2  03ED	75 99 6C	        mov     SBUF,#'l'
 1051+ 1  03F0	80 06		        sjmp    ??0112

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 20



 Line  I  Addr  Code            Source

 1052+ 1  03F2			tc_L0:  putc    #'?'
 1053+ 2  03F2			??0114:
 1054+ 2			        ;jnb     SCON.1,putc_loop
 1055+ 2			        ;clr     SCON.1
 1056+ 2  03F2	75 99 3F	        mov     SBUF,#'?'
 1057+ 1  03F5	75 6E 01	        mov     fail,#001h
 1058+ 1  03F8			??0112:
 1059:
 1060:	  03F8	75 2E 00	        mov     02eh,#00h           ; We'll be testing bits B.3 and B.2
 1061:	  03FB	D2 F3		        setb    B.3
 1062:	  03FD	A2 F3		        mov     c,B.3
 1063:	  03FF	50 0B		        jnc     tc_m0
 1064:	  0401	D2 F2		        setb    B.2
 1065:	  0403	A2 F2		        mov     c,B.2
 1066:	  0405	50 05		        jnc     tc_m0
 1067:
 1068:				        eot     'm',tc_m0
 1069+ 1			        putc    #'m'
 1070+ 2  0407			??0116:
 1071+ 2			        ;jnb     SCON.1,putc_loop
 1072+ 2			        ;clr     SCON.1
 1073+ 2  0407	75 99 6D	        mov     SBUF,#'m'
 1074+ 1  040A	80 06		        sjmp    ??0115
 1075+ 1  040C			tc_m0:  putc    #'?'
 1076+ 2  040C			??0117:
 1077+ 2			        ;jnb     SCON.1,putc_loop
 1078+ 2			        ;clr     SCON.1
 1079+ 2  040C	75 99 3F	        mov     SBUF,#'?'
 1080+ 1  040F	75 6E 01	        mov     fail,#001h
 1081+ 1  0412			??0115:
 1082:
 1083:				        ; (better read the following code in execution order)
 1084:	  0412	75 F0 08	        mov     B,#08h              ; We'll be testing bits B.3 and B.2
 1085:	  0415	80 09		        sjmp    tc_n1               ; jump forward so we can test jump backwards
 1086:	  0417	A2 F3		tc_n2:  mov     c,B.3               ; make sure the target bit is clear
 1087:	  0419	40 0F		        jc      tc_n0
 1088:	  041B	10 F2 0C	        jbc     B.2,tc_n0           ; JBC jumps not when target bit clear
 1089:	  041E	80 05		        sjmp    tc_n3
 1090:	  0420	10 F3 F4	tc_n1:  jbc     B.3,tc_n2           ; JBC jumps when target bit set
 1091:	  0423	80 05		        sjmp    tc_n0
 1092:	  0425			tc_n3:
 1093:
 1094:				        eot     'n',tc_n0
 1095+ 1			        putc    #'n'
 1096+ 2  0425			??0119:
 1097+ 2			        ;jnb     SCON.1,putc_loop
 1098+ 2			        ;clr     SCON.1
 1099+ 2  0425	75 99 6E	        mov     SBUF,#'n'
 1100+ 1  0428	80 06		        sjmp    ??0118
 1101+ 1  042A			tc_n0:  putc    #'?'
 1102+ 2  042A			??0120:
 1103+ 2			        ;jnb     SCON.1,putc_loop
 1104+ 2			        ;clr     SCON.1
 1105+ 2  042A	75 99 3F	        mov     SBUF,#'?'
 1106+ 1  042D	75 6E 01	        mov     fail,#001h
 1107+ 1  0430			??0118:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 21



 Line  I  Addr  Code            Source

 1108:
 1109:
 1110:
 1111:				        put_crlf                    ; end of test series
 1112+ 1			        putc    #13
 1113+ 2  0430			??0121:
 1114+ 2			        ;jnb     SCON.1,putc_loop
 1115+ 2			        ;clr     SCON.1
 1116+ 2  0430	75 99 0D	        mov     SBUF,#13
 1117+ 1			        putc    #10
 1118+ 2  0433			??0122:
 1119+ 2			        ;jnb     SCON.1,putc_loop
 1120+ 2			        ;clr     SCON.1
 1121+ 2  0433	75 99 0A	        mov     SBUF,#10
 1122:
 1123:				        ;-- Test series D ------------------------------------------------------
 1124:				        ;
 1125:				        ; a.- <XRL A, #imm>
 1126:				        ; b.- <RLC A>
 1127:				        ; c.- <RRC A>
 1128:				        ; d.- <RL A>, <RR A>
 1129:				        ;
 1130:				        ; This test executes a few NOPs too but does NOT check for unintended
 1131:				        ; side effects; we intersperse the nops between the other tests to at
 1132:				        ; least have a chance to catch buggy behavior but that's all.
 1133:
 1134:
 1135:				        putc    #'D'                ; start of test series
 1136+ 1  0436			??0123:
 1137+ 1			        ;jnb     SCON.1,putc_loop
 1138+ 1			        ;clr     SCON.1
 1139+ 1  0436	75 99 44	        mov     SBUF,#'D'
 1140:
 1141:	  0439	74 85		        mov     a,#085h             ; test XRL A,#imm before using it in
 1142:	  043B	64 44		        xrl     a,#044h             ; subsequent tests
 1143:	  043D	60 09		        jz      td_a0
 1144:	  043F	64 C1		        xrl     a,#0c1h
 1145:	  0441	70 05		        jnz     td_a0
 1146:
 1147:				        eot     'a',td_a0
 1148+ 1			        putc    #'a'
 1149+ 2  0443			??0125:
 1150+ 2			        ;jnb     SCON.1,putc_loop
 1151+ 2			        ;clr     SCON.1
 1152+ 2  0443	75 99 61	        mov     SBUF,#'a'
 1153+ 1  0446	80 06		        sjmp    ??0124
 1154+ 1  0448			td_a0:  putc    #'?'
 1155+ 2  0448			??0126:
 1156+ 2			        ;jnb     SCON.1,putc_loop
 1157+ 2			        ;clr     SCON.1
 1158+ 2  0448	75 99 3F	        mov     SBUF,#'?'
 1159+ 1  044B	75 6E 01	        mov     fail,#001h
 1160+ 1  044E			??0124:
 1161:
 1162:	  044E	74 85		        mov     a,#085h             ; Test RLC effects on ACC, ignore CY for now
 1163:	  0450	00		        nop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 22



 Line  I  Addr  Code            Source

 1164:	  0451	C3		        clr     c
 1165:	  0452	33		        rlc     a                   ; a = (a << 1) | 0
 1166:	  0453	F5 60		        mov     dir0,a
 1167:	  0455	64 0A		        xrl     a,#00ah             ; We can't use CJNE because it modifies CY
 1168:	  0457	70 16		        jnz     td_b0               ; check shifted acc
 1169:	  0459	E5 60		        mov     a,dir0
 1170:	  045B	33		        rlc     a                   ; rotate again...
 1171:	  045C	64 15		        xrl     a,#015h             ; ...and check shifted acc with CY at bit 0
 1172:	  045E	70 0F		        jnz     td_b0
 1173:
 1174:	  0460	74 85		        mov     a,#085h             ; Now check RLC effects on CY
 1175:	  0462	00		        nop
 1176:	  0463	C3		        clr     c
 1177:	  0464	33		        rlc     a
 1178:	  0465	50 08		        jnc     td_b0
 1179:	  0467	33		        rlc     a
 1180:	  0468	40 05		        jc      td_b0               ; CY==1 moved into ACC.0
 1181:
 1182:				        eot     'b',td_b0
 1183+ 1			        putc    #'b'
 1184+ 2  046A			??0128:
 1185+ 2			        ;jnb     SCON.1,putc_loop
 1186+ 2			        ;clr     SCON.1
 1187+ 2  046A	75 99 62	        mov     SBUF,#'b'
 1188+ 1  046D	80 06		        sjmp    ??0127
 1189+ 1  046F			td_b0:  putc    #'?'
 1190+ 2  046F			??0129:
 1191+ 2			        ;jnb     SCON.1,putc_loop
 1192+ 2			        ;clr     SCON.1
 1193+ 2  046F	75 99 3F	        mov     SBUF,#'?'
 1194+ 1  0472	75 6E 01	        mov     fail,#001h
 1195+ 1  0475			??0127:
 1196:
 1197:	  0475	74 85		        mov     a,#085h             ; Test RRC effects on ACC, ignore CY for now
 1198:	  0477	C3		        clr     c
 1199:	  0478	13		        rrc     a                   ; will set CY
 1200:	  0479	F5 60		        mov     dir0,a
 1201:	  047B	00		        nop
 1202:	  047C	64 42		        xrl     a,#042h             ; We can't use CJNE because it modifies CY
 1203:	  047E	70 15		        jnz     td_c0               ; check shifted acc
 1204:	  0480	E5 60		        mov     a,dir0
 1205:	  0482	13		        rrc     a                   ; rotate again...
 1206:	  0483	64 A1		        xrl     a,#0a1h             ; ...and check shifted acc with CY at bit 7
 1207:	  0485	70 0E		        jnz     td_c0
 1208:
 1209:	  0487	74 85		        mov     a,#085h             ; Now check RRC effects on CY
 1210:	  0489	C3		        clr     c
 1211:	  048A	13		        rrc     a
 1212:	  048B	50 08		        jnc     td_c0
 1213:	  048D	13		        rrc     a
 1214:	  048E	40 05		        jc      td_c0               ; CY==1 moved into ACC.0
 1215:
 1216:				        eot     'c',td_c0
 1217+ 1			        putc    #'c'
 1218+ 2  0490			??0131:
 1219+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 23



 Line  I  Addr  Code            Source

 1220+ 2			        ;clr     SCON.1
 1221+ 2  0490	75 99 63	        mov     SBUF,#'c'
 1222+ 1  0493	80 06		        sjmp    ??0130
 1223+ 1  0495			td_c0:  putc    #'?'
 1224+ 2  0495			??0132:
 1225+ 2			        ;jnb     SCON.1,putc_loop
 1226+ 2			        ;clr     SCON.1
 1227+ 2  0495	75 99 3F	        mov     SBUF,#'?'
 1228+ 1  0498	75 6E 01	        mov     fail,#001h
 1229+ 1  049B			??0130:
 1230:
 1231:	  049B	74 85		        mov     a,#085h             ; Test RL effects on ACC, ignore CY for now
 1232:	  049D	C3		        clr     c
 1233:	  049E	23		        rl      a                   ; a = (a << 1) | 0
 1234:	  049F	F5 60		        mov     dir0,a
 1235:	  04A1	64 0B		        xrl     a,#00bh             ; We can't use CJNE because it modifies CY
 1236:	  04A3	70 28		        jnz     td_d0               ; check shifted acc
 1237:	  04A5	E5 60		        mov     a,dir0
 1238:	  04A7	D3		        setb    c
 1239:	  04A8	23		        rl      a                   ; rotate again...
 1240:	  04A9	64 16		        xrl     a,#016h             ; ...and check shifted acc with CY at bit 0
 1241:	  04AB	70 20		        jnz     td_d0
 1242:
 1243:	  04AD	74 85		        mov     a,#085h             ; Test RR effects on ACC, ignore CY for now
 1244:	  04AF	C3		        clr     c
 1245:	  04B0	03		        rr      a                   ; will set CY
 1246:	  04B1	F5 60		        mov     dir0,a
 1247:	  04B3	64 C2		        xrl     a,#0c2h             ; We can't use CJNE because it modifies CY
 1248:	  04B5	70 16		        jnz     td_d0               ; check shifted acc
 1249:	  04B7	E5 60		        mov     a,dir0
 1250:	  04B9	03		        rr      a                   ; rotate again...
 1251:	  04BA	64 61		        xrl     a,#061h             ; ...and check shifted acc with CY at bit 7
 1252:	  04BC	70 0F		        jnz     td_d0
 1253:
 1254:	  04BE	74 FF		        mov     a,#0ffh             ; Now make sure RL and RR don't touch CY
 1255:	  04C0	C3		        clr     c
 1256:	  04C1	23		        rl      a
 1257:	  04C2	40 09		        jc      td_d0
 1258:	  04C4	03		        rr      a
 1259:	  04C5	03		        rr      a
 1260:	  04C6	40 05		        jc      td_d0
 1261:
 1262:				        eot     'd',td_d0
 1263+ 1			        putc    #'d'
 1264+ 2  04C8			??0134:
 1265+ 2			        ;jnb     SCON.1,putc_loop
 1266+ 2			        ;clr     SCON.1
 1267+ 2  04C8	75 99 64	        mov     SBUF,#'d'
 1268+ 1  04CB	80 06		        sjmp    ??0133
 1269+ 1  04CD			td_d0:  putc    #'?'
 1270+ 2  04CD			??0135:
 1271+ 2			        ;jnb     SCON.1,putc_loop
 1272+ 2			        ;clr     SCON.1
 1273+ 2  04CD	75 99 3F	        mov     SBUF,#'?'
 1274+ 1  04D0	75 6E 01	        mov     fail,#001h
 1275+ 1  04D3			??0133:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 24



 Line  I  Addr  Code            Source

 1276:
 1277:				        put_crlf                    ; end of test series
 1278+ 1			        putc    #13
 1279+ 2  04D3			??0136:
 1280+ 2			        ;jnb     SCON.1,putc_loop
 1281+ 2			        ;clr     SCON.1
 1282+ 2  04D3	75 99 0D	        mov     SBUF,#13
 1283+ 1			        putc    #10
 1284+ 2  04D6			??0137:
 1285+ 2			        ;jnb     SCON.1,putc_loop
 1286+ 2			        ;clr     SCON.1
 1287+ 2  04D6	75 99 0A	        mov     SBUF,#10
 1288:
 1289:				        ;-- Test series E ------------------------------------------------------
 1290:				        ; Increment
 1291:				        ; a.- <INC A>
 1292:				        ; b.- <INC Rn>
 1293:				        ; c.- <INC @Ri>
 1294:				        ; d.- <MOV dir,#imm>
 1295:				        ; e.- <INC dir>
 1296:				        ; f.- <DEC A>
 1297:				        ; g.- <DEC Rn>
 1298:				        ; h.- <DEC @Ri>
 1299:				        ; i.- <DEC dir>
 1300:
 1301:				        putc    #'E'                ; start of test series
 1302+ 1  04D9			??0138:
 1303+ 1			        ;jnb     SCON.1,putc_loop
 1304+ 1			        ;clr     SCON.1
 1305+ 1  04D9	75 99 45	        mov     SBUF,#'E'
 1306:
 1307:				te_ma   macro   target, error_loc
 1308:				        mov     target,#080h
 1309:				        inc     target
 1310:				        cjne    target,#081h,error_loc
 1311:				        mov     target,#0ffh
 1312:				        clr     c
 1313:				        inc     target
 1314:				        jc      error_loc
 1315:				        cjne    target,#000h,error_loc
 1316:				        endm
 1317:
 1318:				        te_ma   a,te_a0             ; Test <INC A>
 1319+ 1  04DC	74 80		        mov     a,#080h
 1320+ 1  04DE	04		        inc     a
 1321+ 1  04DF	B4 81 0E	        cjne    a,#081h,te_a0
 1322+ 1  04E2	74 FF		        mov     a,#0ffh
 1323+ 1  04E4	C3		        clr     c
 1324+ 1  04E5	04		        inc     a
 1325+ 1  04E6	40 08		        jc      te_a0
 1326+ 1  04E8	B4 00 05	        cjne    a,#000h,te_a0
 1327:
 1328:				        eot     'a',te_a0
 1329+ 1			        putc    #'a'
 1330+ 2  04EB			??0140:
 1331+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 25



 Line  I  Addr  Code            Source

 1332+ 2			        ;clr     SCON.1
 1333+ 2  04EB	75 99 61	        mov     SBUF,#'a'
 1334+ 1  04EE	80 06		        sjmp    ??0139
 1335+ 1  04F0			te_a0:  putc    #'?'
 1336+ 2  04F0			??0141:
 1337+ 2			        ;jnb     SCON.1,putc_loop
 1338+ 2			        ;clr     SCON.1
 1339+ 2  04F0	75 99 3F	        mov     SBUF,#'?'
 1340+ 1  04F3	75 6E 01	        mov     fail,#001h
 1341+ 1  04F6			??0139:
 1342:
 1343:	  04F6	78 66		        mov     r0,#066h
 1344:
 1345:				        te_ma   r0,te_b0
 1346+ 1  04F8	78 80		        mov     r0,#080h
 1347+ 1  04FA	08		        inc     r0
 1348+ 1  04FB	B8 81 77	        cjne    r0,#081h,te_b0
 1349+ 1  04FE	78 FF		        mov     r0,#0ffh
 1350+ 1  0500	C3		        clr     c
 1351+ 1  0501	08		        inc     r0
 1352+ 1  0502	40 71		        jc      te_b0
 1353+ 1  0504	B8 00 6E	        cjne    r0,#000h,te_b0
 1354:				        te_ma   r1,te_b0
 1355+ 1  0507	79 80		        mov     r1,#080h
 1356+ 1  0509	09		        inc     r1
 1357+ 1  050A	B9 81 68	        cjne    r1,#081h,te_b0
 1358+ 1  050D	79 FF		        mov     r1,#0ffh
 1359+ 1  050F	C3		        clr     c
 1360+ 1  0510	09		        inc     r1
 1361+ 1  0511	40 62		        jc      te_b0
 1362+ 1  0513	B9 00 5F	        cjne    r1,#000h,te_b0
 1363:				        te_ma   r2,te_b0
 1364+ 1  0516	7A 80		        mov     r2,#080h
 1365+ 1  0518	0A		        inc     r2
 1366+ 1  0519	BA 81 59	        cjne    r2,#081h,te_b0
 1367+ 1  051C	7A FF		        mov     r2,#0ffh
 1368+ 1  051E	C3		        clr     c
 1369+ 1  051F	0A		        inc     r2
 1370+ 1  0520	40 53		        jc      te_b0
 1371+ 1  0522	BA 00 50	        cjne    r2,#000h,te_b0
 1372:				        te_ma   r3,te_b0
 1373+ 1  0525	7B 80		        mov     r3,#080h
 1374+ 1  0527	0B		        inc     r3
 1375+ 1  0528	BB 81 4A	        cjne    r3,#081h,te_b0
 1376+ 1  052B	7B FF		        mov     r3,#0ffh
 1377+ 1  052D	C3		        clr     c
 1378+ 1  052E	0B		        inc     r3
 1379+ 1  052F	40 44		        jc      te_b0
 1380+ 1  0531	BB 00 41	        cjne    r3,#000h,te_b0
 1381:				        te_ma   r4,te_b0
 1382+ 1  0534	7C 80		        mov     r4,#080h
 1383+ 1  0536	0C		        inc     r4
 1384+ 1  0537	BC 81 3B	        cjne    r4,#081h,te_b0
 1385+ 1  053A	7C FF		        mov     r4,#0ffh
 1386+ 1  053C	C3		        clr     c
 1387+ 1  053D	0C		        inc     r4

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 26



 Line  I  Addr  Code            Source

 1388+ 1  053E	40 35		        jc      te_b0
 1389+ 1  0540	BC 00 32	        cjne    r4,#000h,te_b0
 1390:				        te_ma   r5,te_b0
 1391+ 1  0543	7D 80		        mov     r5,#080h
 1392+ 1  0545	0D		        inc     r5
 1393+ 1  0546	BD 81 2C	        cjne    r5,#081h,te_b0
 1394+ 1  0549	7D FF		        mov     r5,#0ffh
 1395+ 1  054B	C3		        clr     c
 1396+ 1  054C	0D		        inc     r5
 1397+ 1  054D	40 26		        jc      te_b0
 1398+ 1  054F	BD 00 23	        cjne    r5,#000h,te_b0
 1399:				        te_ma   r6,te_b0
 1400+ 1  0552	7E 80		        mov     r6,#080h
 1401+ 1  0554	0E		        inc     r6
 1402+ 1  0555	BE 81 1D	        cjne    r6,#081h,te_b0
 1403+ 1  0558	7E FF		        mov     r6,#0ffh
 1404+ 1  055A	C3		        clr     c
 1405+ 1  055B	0E		        inc     r6
 1406+ 1  055C	40 17		        jc      te_b0
 1407+ 1  055E	BE 00 14	        cjne    r6,#000h,te_b0
 1408:				        te_ma   r7,te_b0
 1409+ 1  0561	7F 80		        mov     r7,#080h
 1410+ 1  0563	0F		        inc     r7
 1411+ 1  0564	BF 81 0E	        cjne    r7,#081h,te_b0
 1412+ 1  0567	7F FF		        mov     r7,#0ffh
 1413+ 1  0569	C3		        clr     c
 1414+ 1  056A	0F		        inc     r7
 1415+ 1  056B	40 08		        jc      te_b0
 1416+ 1  056D	BF 00 05	        cjne    r7,#000h,te_b0
 1417:
 1418:				        eot     'b',te_b0
 1419+ 1			        putc    #'b'
 1420+ 2  0570			??0143:
 1421+ 2			        ;jnb     SCON.1,putc_loop
 1422+ 2			        ;clr     SCON.1
 1423+ 2  0570	75 99 62	        mov     SBUF,#'b'
 1424+ 1  0573	80 06		        sjmp    ??0142
 1425+ 1  0575			te_b0:  putc    #'?'
 1426+ 2  0575			??0144:
 1427+ 2			        ;jnb     SCON.1,putc_loop
 1428+ 2			        ;clr     SCON.1
 1429+ 2  0575	75 99 3F	        mov     SBUF,#'?'
 1430+ 1  0578	75 6E 01	        mov     fail,#001h
 1431+ 1  057B			??0142:
 1432:
 1433:	  057B	78 60		        mov     r0,#dir0
 1434:	  057D	79 31		        mov     r1,#031h
 1435:
 1436:				        te_ma   @r0,te_c0
 1437+ 1  057F	76 80		        mov     @r0,#080h
 1438+ 1  0581	06		        inc     @r0
 1439+ 1  0582	B6 81 1D	        cjne    @r0,#081h,te_c0
 1440+ 1  0585	76 FF		        mov     @r0,#0ffh
 1441+ 1  0587	C3		        clr     c
 1442+ 1  0588	06		        inc     @r0
 1443+ 1  0589	40 17		        jc      te_c0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 27



 Line  I  Addr  Code            Source

 1444+ 1  058B	B6 00 14	        cjne    @r0,#000h,te_c0
 1445:				        te_ma   @r1,te_c0
 1446+ 1  058E	77 80		        mov     @r1,#080h
 1447+ 1  0590	07		        inc     @r1
 1448+ 1  0591	B7 81 0E	        cjne    @r1,#081h,te_c0
 1449+ 1  0594	77 FF		        mov     @r1,#0ffh
 1450+ 1  0596	C3		        clr     c
 1451+ 1  0597	07		        inc     @r1
 1452+ 1  0598	40 08		        jc      te_c0
 1453+ 1  059A	B7 00 05	        cjne    @r1,#000h,te_c0
 1454:
 1455:				        eot     'c',te_c0
 1456+ 1			        putc    #'c'
 1457+ 2  059D			??0146:
 1458+ 2			        ;jnb     SCON.1,putc_loop
 1459+ 2			        ;clr     SCON.1
 1460+ 2  059D	75 99 63	        mov     SBUF,#'c'
 1461+ 1  05A0	80 06		        sjmp    ??0145
 1462+ 1  05A2			te_c0:  putc    #'?'
 1463+ 2  05A2			??0147:
 1464+ 2			        ;jnb     SCON.1,putc_loop
 1465+ 2			        ;clr     SCON.1
 1466+ 2  05A2	75 99 3F	        mov     SBUF,#'?'
 1467+ 1  05A5	75 6E 01	        mov     fail,#001h
 1468+ 1  05A8			??0145:
 1469:
 1470:	  05A8	75 60 34	        mov     dir0,#034h          ; Test <MOV dir,#imm> before using it in
 1471:	  05AB	E5 60		        mov     a,dir0              ; subsequent tests
 1472:	  05AD	B4 34 05	        cjne    a,#034h,te_d0
 1473:
 1474:				        eot     'd',te_d0
 1475+ 1			        putc    #'d'
 1476+ 2  05B0			??0149:
 1477+ 2			        ;jnb     SCON.1,putc_loop
 1478+ 2			        ;clr     SCON.1
 1479+ 2  05B0	75 99 64	        mov     SBUF,#'d'
 1480+ 1  05B3	80 06		        sjmp    ??0148
 1481+ 1  05B5			te_d0:  putc    #'?'
 1482+ 2  05B5			??0150:
 1483+ 2			        ;jnb     SCON.1,putc_loop
 1484+ 2			        ;clr     SCON.1
 1485+ 2  05B5	75 99 3F	        mov     SBUF,#'?'
 1486+ 1  05B8	75 6E 01	        mov     fail,#001h
 1487+ 1  05BB			??0148:
 1488:
 1489:	  05BB	75 39 80	        mov     039h,#080h
 1490:	  05BE	05 39		        inc     039h
 1491:	  05C0	E5 39		        mov     a,039h
 1492:	  05C2	B4 81 12	        cjne    a,#081h,te_e0
 1493:	  05C5	75 39 FF	        mov     039h,#0ffh
 1494:	  05C8	C3		        clr     c
 1495:	  05C9	05 39		        inc     039h
 1496:	  05CB	40 0A		        jc      te_e0
 1497:	  05CD	E5 39		        mov     a,039h
 1498:	  05CF	B4 00 05	        cjne    a,#000h,te_e0
 1499:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 28



 Line  I  Addr  Code            Source

 1500:				        eot     'e',te_e0
 1501+ 1			        putc    #'e'
 1502+ 2  05D2			??0152:
 1503+ 2			        ;jnb     SCON.1,putc_loop
 1504+ 2			        ;clr     SCON.1
 1505+ 2  05D2	75 99 65	        mov     SBUF,#'e'
 1506+ 1  05D5	80 06		        sjmp    ??0151
 1507+ 1  05D7			te_e0:  putc    #'?'
 1508+ 2  05D7			??0153:
 1509+ 2			        ;jnb     SCON.1,putc_loop
 1510+ 2			        ;clr     SCON.1
 1511+ 2  05D7	75 99 3F	        mov     SBUF,#'?'
 1512+ 1  05DA	75 6E 01	        mov     fail,#001h
 1513+ 1  05DD			??0151:
 1514:
 1515:				te_mf   macro   target, error_loc
 1516:				        mov     target,#001h
 1517:				        dec     target
 1518:				        cjne    target,#000h,error_loc
 1519:				        clr     c
 1520:				        dec     target
 1521:				        jc      error_loc
 1522:				        cjne    target,#0ffh,error_loc
 1523:				        endm
 1524:
 1525:				        te_ma   a,te_f0             ; Test <INC A>
 1526+ 1  05DD	74 80		        mov     a,#080h
 1527+ 1  05DF	04		        inc     a
 1528+ 1  05E0	B4 81 0E	        cjne    a,#081h,te_f0
 1529+ 1  05E3	74 FF		        mov     a,#0ffh
 1530+ 1  05E5	C3		        clr     c
 1531+ 1  05E6	04		        inc     a
 1532+ 1  05E7	40 08		        jc      te_f0
 1533+ 1  05E9	B4 00 05	        cjne    a,#000h,te_f0
 1534:
 1535:				        eot     'f',te_f0
 1536+ 1			        putc    #'f'
 1537+ 2  05EC			??0155:
 1538+ 2			        ;jnb     SCON.1,putc_loop
 1539+ 2			        ;clr     SCON.1
 1540+ 2  05EC	75 99 66	        mov     SBUF,#'f'
 1541+ 1  05EF	80 06		        sjmp    ??0154
 1542+ 1  05F1			te_f0:  putc    #'?'
 1543+ 2  05F1			??0156:
 1544+ 2			        ;jnb     SCON.1,putc_loop
 1545+ 2			        ;clr     SCON.1
 1546+ 2  05F1	75 99 3F	        mov     SBUF,#'?'
 1547+ 1  05F4	75 6E 01	        mov     fail,#001h
 1548+ 1  05F7			??0154:
 1549:
 1550:	  05F7	78 66		        mov     r0,#066h
 1551:
 1552:				        te_ma   r0,te_g0
 1553+ 1  05F9	78 80		        mov     r0,#080h
 1554+ 1  05FB	08		        inc     r0
 1555+ 1  05FC	B8 81 77	        cjne    r0,#081h,te_g0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 29



 Line  I  Addr  Code            Source

 1556+ 1  05FF	78 FF		        mov     r0,#0ffh
 1557+ 1  0601	C3		        clr     c
 1558+ 1  0602	08		        inc     r0
 1559+ 1  0603	40 71		        jc      te_g0
 1560+ 1  0605	B8 00 6E	        cjne    r0,#000h,te_g0
 1561:				        te_ma   r1,te_g0
 1562+ 1  0608	79 80		        mov     r1,#080h
 1563+ 1  060A	09		        inc     r1
 1564+ 1  060B	B9 81 68	        cjne    r1,#081h,te_g0
 1565+ 1  060E	79 FF		        mov     r1,#0ffh
 1566+ 1  0610	C3		        clr     c
 1567+ 1  0611	09		        inc     r1
 1568+ 1  0612	40 62		        jc      te_g0
 1569+ 1  0614	B9 00 5F	        cjne    r1,#000h,te_g0
 1570:				        te_ma   r2,te_g0
 1571+ 1  0617	7A 80		        mov     r2,#080h
 1572+ 1  0619	0A		        inc     r2
 1573+ 1  061A	BA 81 59	        cjne    r2,#081h,te_g0
 1574+ 1  061D	7A FF		        mov     r2,#0ffh
 1575+ 1  061F	C3		        clr     c
 1576+ 1  0620	0A		        inc     r2
 1577+ 1  0621	40 53		        jc      te_g0
 1578+ 1  0623	BA 00 50	        cjne    r2,#000h,te_g0
 1579:				        te_ma   r3,te_g0
 1580+ 1  0626	7B 80		        mov     r3,#080h
 1581+ 1  0628	0B		        inc     r3
 1582+ 1  0629	BB 81 4A	        cjne    r3,#081h,te_g0
 1583+ 1  062C	7B FF		        mov     r3,#0ffh
 1584+ 1  062E	C3		        clr     c
 1585+ 1  062F	0B		        inc     r3
 1586+ 1  0630	40 44		        jc      te_g0
 1587+ 1  0632	BB 00 41	        cjne    r3,#000h,te_g0
 1588:				        te_ma   r4,te_g0
 1589+ 1  0635	7C 80		        mov     r4,#080h
 1590+ 1  0637	0C		        inc     r4
 1591+ 1  0638	BC 81 3B	        cjne    r4,#081h,te_g0
 1592+ 1  063B	7C FF		        mov     r4,#0ffh
 1593+ 1  063D	C3		        clr     c
 1594+ 1  063E	0C		        inc     r4
 1595+ 1  063F	40 35		        jc      te_g0
 1596+ 1  0641	BC 00 32	        cjne    r4,#000h,te_g0
 1597:				        te_ma   r5,te_g0
 1598+ 1  0644	7D 80		        mov     r5,#080h
 1599+ 1  0646	0D		        inc     r5
 1600+ 1  0647	BD 81 2C	        cjne    r5,#081h,te_g0
 1601+ 1  064A	7D FF		        mov     r5,#0ffh
 1602+ 1  064C	C3		        clr     c
 1603+ 1  064D	0D		        inc     r5
 1604+ 1  064E	40 26		        jc      te_g0
 1605+ 1  0650	BD 00 23	        cjne    r5,#000h,te_g0
 1606:				        te_ma   r6,te_g0
 1607+ 1  0653	7E 80		        mov     r6,#080h
 1608+ 1  0655	0E		        inc     r6
 1609+ 1  0656	BE 81 1D	        cjne    r6,#081h,te_g0
 1610+ 1  0659	7E FF		        mov     r6,#0ffh
 1611+ 1  065B	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 30



 Line  I  Addr  Code            Source

 1612+ 1  065C	0E		        inc     r6
 1613+ 1  065D	40 17		        jc      te_g0
 1614+ 1  065F	BE 00 14	        cjne    r6,#000h,te_g0
 1615:				        te_ma   r7,te_g0
 1616+ 1  0662	7F 80		        mov     r7,#080h
 1617+ 1  0664	0F		        inc     r7
 1618+ 1  0665	BF 81 0E	        cjne    r7,#081h,te_g0
 1619+ 1  0668	7F FF		        mov     r7,#0ffh
 1620+ 1  066A	C3		        clr     c
 1621+ 1  066B	0F		        inc     r7
 1622+ 1  066C	40 08		        jc      te_g0
 1623+ 1  066E	BF 00 05	        cjne    r7,#000h,te_g0
 1624:
 1625:				        eot     'g',te_g0
 1626+ 1			        putc    #'g'
 1627+ 2  0671			??0158:
 1628+ 2			        ;jnb     SCON.1,putc_loop
 1629+ 2			        ;clr     SCON.1
 1630+ 2  0671	75 99 67	        mov     SBUF,#'g'
 1631+ 1  0674	80 06		        sjmp    ??0157
 1632+ 1  0676			te_g0:  putc    #'?'
 1633+ 2  0676			??0159:
 1634+ 2			        ;jnb     SCON.1,putc_loop
 1635+ 2			        ;clr     SCON.1
 1636+ 2  0676	75 99 3F	        mov     SBUF,#'?'
 1637+ 1  0679	75 6E 01	        mov     fail,#001h
 1638+ 1  067C			??0157:
 1639:
 1640:	  067C	78 60		        mov     r0,#dir0
 1641:	  067E	79 31		        mov     r1,#031h
 1642:
 1643:				        te_ma   @r0,te_h0
 1644+ 1  0680	76 80		        mov     @r0,#080h
 1645+ 1  0682	06		        inc     @r0
 1646+ 1  0683	B6 81 1D	        cjne    @r0,#081h,te_h0
 1647+ 1  0686	76 FF		        mov     @r0,#0ffh
 1648+ 1  0688	C3		        clr     c
 1649+ 1  0689	06		        inc     @r0
 1650+ 1  068A	40 17		        jc      te_h0
 1651+ 1  068C	B6 00 14	        cjne    @r0,#000h,te_h0
 1652:				        te_ma   @r1,te_h0
 1653+ 1  068F	77 80		        mov     @r1,#080h
 1654+ 1  0691	07		        inc     @r1
 1655+ 1  0692	B7 81 0E	        cjne    @r1,#081h,te_h0
 1656+ 1  0695	77 FF		        mov     @r1,#0ffh
 1657+ 1  0697	C3		        clr     c
 1658+ 1  0698	07		        inc     @r1
 1659+ 1  0699	40 08		        jc      te_h0
 1660+ 1  069B	B7 00 05	        cjne    @r1,#000h,te_h0
 1661:
 1662:				        eot     'h',te_h0
 1663+ 1			        putc    #'h'
 1664+ 2  069E			??0161:
 1665+ 2			        ;jnb     SCON.1,putc_loop
 1666+ 2			        ;clr     SCON.1
 1667+ 2  069E	75 99 68	        mov     SBUF,#'h'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 31



 Line  I  Addr  Code            Source

 1668+ 1  06A1	80 06		        sjmp    ??0160
 1669+ 1  06A3			te_h0:  putc    #'?'
 1670+ 2  06A3			??0162:
 1671+ 2			        ;jnb     SCON.1,putc_loop
 1672+ 2			        ;clr     SCON.1
 1673+ 2  06A3	75 99 3F	        mov     SBUF,#'?'
 1674+ 1  06A6	75 6E 01	        mov     fail,#001h
 1675+ 1  06A9			??0160:
 1676:
 1677:	  06A9	75 60 34	        mov     dir0,#034h          ; Test <MOV dir,#imm> before using it in
 1678:	  06AC	E5 60		        mov     a,dir0              ; subsequent tests
 1679:	  06AE	B4 34 05	        cjne    a,#034h,te_i0
 1680:
 1681:				        eot     'i',te_i0
 1682+ 1			        putc    #'i'
 1683+ 2  06B1			??0164:
 1684+ 2			        ;jnb     SCON.1,putc_loop
 1685+ 2			        ;clr     SCON.1
 1686+ 2  06B1	75 99 69	        mov     SBUF,#'i'
 1687+ 1  06B4	80 06		        sjmp    ??0163
 1688+ 1  06B6			te_i0:  putc    #'?'
 1689+ 2  06B6			??0165:
 1690+ 2			        ;jnb     SCON.1,putc_loop
 1691+ 2			        ;clr     SCON.1
 1692+ 2  06B6	75 99 3F	        mov     SBUF,#'?'
 1693+ 1  06B9	75 6E 01	        mov     fail,#001h
 1694+ 1  06BC			??0163:
 1695:
 1696:				        put_crlf                    ; end of test series
 1697+ 1			        putc    #13
 1698+ 2  06BC			??0166:
 1699+ 2			        ;jnb     SCON.1,putc_loop
 1700+ 2			        ;clr     SCON.1
 1701+ 2  06BC	75 99 0D	        mov     SBUF,#13
 1702+ 1			        putc    #10
 1703+ 2  06BF			??0167:
 1704+ 2			        ;jnb     SCON.1,putc_loop
 1705+ 2			        ;clr     SCON.1
 1706+ 2  06BF	75 99 0A	        mov     SBUF,#10
 1707:
 1708:
 1709:				        ;-- Test series F ------------------------------------------------------
 1710:				        ;
 1711:				        ; a.- <MOV dir,Rn>
 1712:				        ; b.- <MOV dir,@Ri>
 1713:				        ; c.- <MOV dir,dir>
 1714:				        ; d.- <MOV Rn,dir>
 1715:				        ; e.- <MOV @Ri,dir>
 1716:				        ; f.- <MOV Rn,A>
 1717:				        ; g.- <MOV @Ri,A>
 1718:				        ; h.- <MOV dir,A>
 1719:
 1720:
 1721:				        putc    #'F'                ; start of test series
 1722+ 1  06C2			??0168:
 1723+ 1			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 32



 Line  I  Addr  Code            Source

 1724+ 1			        ;clr     SCON.1
 1725+ 1  06C2	75 99 46	        mov     SBUF,#'F'
 1726:
 1727:				tf_ma   macro   rn, n, error_loc
 1728:				        mov     rn,#(091h+n)
 1729:				        mov     039h,rn
 1730:				        mov     a,039h
 1731:				        cjne    a,#(091h+n),error_loc
 1732:				        endm
 1733:
 1734:				        tf_ma   r0,0,tf_a0
 1735+ 1  06C5	78 91		        mov     r0,#(091h+0)
 1736+ 1  06C7	88 39		        mov     039h,r0
 1737+ 1  06C9	E5 39		        mov     a,039h
 1738+ 1  06CB	B4 91 44	        cjne    a,#(091h+0),tf_a0
 1739:				        tf_ma   r1,1,tf_a0
 1740+ 1  06CE	79 92		        mov     r1,#(091h+1)
 1741+ 1  06D0	89 39		        mov     039h,r1
 1742+ 1  06D2	E5 39		        mov     a,039h
 1743+ 1  06D4	B4 92 3B	        cjne    a,#(091h+1),tf_a0
 1744:				        tf_ma   r2,2,tf_a0
 1745+ 1  06D7	7A 93		        mov     r2,#(091h+2)
 1746+ 1  06D9	8A 39		        mov     039h,r2
 1747+ 1  06DB	E5 39		        mov     a,039h
 1748+ 1  06DD	B4 93 32	        cjne    a,#(091h+2),tf_a0
 1749:				        tf_ma   r3,3,tf_a0
 1750+ 1  06E0	7B 94		        mov     r3,#(091h+3)
 1751+ 1  06E2	8B 39		        mov     039h,r3
 1752+ 1  06E4	E5 39		        mov     a,039h
 1753+ 1  06E6	B4 94 29	        cjne    a,#(091h+3),tf_a0
 1754:				        tf_ma   r4,4,tf_a0
 1755+ 1  06E9	7C 95		        mov     r4,#(091h+4)
 1756+ 1  06EB	8C 39		        mov     039h,r4
 1757+ 1  06ED	E5 39		        mov     a,039h
 1758+ 1  06EF	B4 95 20	        cjne    a,#(091h+4),tf_a0
 1759:				        tf_ma   r5,5,tf_a0
 1760+ 1  06F2	7D 96		        mov     r5,#(091h+5)
 1761+ 1  06F4	8D 39		        mov     039h,r5
 1762+ 1  06F6	E5 39		        mov     a,039h
 1763+ 1  06F8	B4 96 17	        cjne    a,#(091h+5),tf_a0
 1764:				        tf_ma   r6,6,tf_a0
 1765+ 1  06FB	7E 97		        mov     r6,#(091h+6)
 1766+ 1  06FD	8E 39		        mov     039h,r6
 1767+ 1  06FF	E5 39		        mov     a,039h
 1768+ 1  0701	B4 97 0E	        cjne    a,#(091h+6),tf_a0
 1769:				        tf_ma   r7,7,tf_a0
 1770+ 1  0704	7F 98		        mov     r7,#(091h+7)
 1771+ 1  0706	8F 39		        mov     039h,r7
 1772+ 1  0708	E5 39		        mov     a,039h
 1773+ 1  070A	B4 98 05	        cjne    a,#(091h+7),tf_a0
 1774:
 1775:				        eot     'a',tf_a0
 1776+ 1			        putc    #'a'
 1777+ 2  070D			??0170:
 1778+ 2			        ;jnb     SCON.1,putc_loop
 1779+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 33



 Line  I  Addr  Code            Source

 1780+ 2  070D	75 99 61	        mov     SBUF,#'a'
 1781+ 1  0710	80 06		        sjmp    ??0169
 1782+ 1  0712			tf_a0:  putc    #'?'
 1783+ 2  0712			??0171:
 1784+ 2			        ;jnb     SCON.1,putc_loop
 1785+ 2			        ;clr     SCON.1
 1786+ 2  0712	75 99 3F	        mov     SBUF,#'?'
 1787+ 1  0715	75 6E 01	        mov     fail,#001h
 1788+ 1  0718			??0169:
 1789:
 1790:				        tf_ma   @r0,0,tf_b0
 1791+ 1  0718	76 91		        mov     @r0,#(091h+0)
 1792+ 1  071A	86 39		        mov     039h,@r0
 1793+ 1  071C	E5 39		        mov     a,039h
 1794+ 1  071E	B4 91 0E	        cjne    a,#(091h+0),tf_b0
 1795:				        tf_ma   @r1,1,tf_b0
 1796+ 1  0721	77 92		        mov     @r1,#(091h+1)
 1797+ 1  0723	87 39		        mov     039h,@r1
 1798+ 1  0725	E5 39		        mov     a,039h
 1799+ 1  0727	B4 92 05	        cjne    a,#(091h+1),tf_b0
 1800:
 1801:				        eot     'b',tf_b0
 1802+ 1			        putc    #'b'
 1803+ 2  072A			??0173:
 1804+ 2			        ;jnb     SCON.1,putc_loop
 1805+ 2			        ;clr     SCON.1
 1806+ 2  072A	75 99 62	        mov     SBUF,#'b'
 1807+ 1  072D	80 06		        sjmp    ??0172
 1808+ 1  072F			tf_b0:  putc    #'?'
 1809+ 2  072F			??0174:
 1810+ 2			        ;jnb     SCON.1,putc_loop
 1811+ 2			        ;clr     SCON.1
 1812+ 2  072F	75 99 3F	        mov     SBUF,#'?'
 1813+ 1  0732	75 6E 01	        mov     fail,#001h
 1814+ 1  0735			??0172:
 1815:
 1816:	  0735	75 31 91	        mov     031h,#091h
 1817:	  0738	85 31 39	        mov     039h,031h
 1818:	  073B	E5 39		        mov     a,039h
 1819:	  073D	B4 91 05	        cjne    a,#091h,tf_c0
 1820:
 1821:				        eot     'c',tf_c0
 1822+ 1			        putc    #'c'
 1823+ 2  0740			??0176:
 1824+ 2			        ;jnb     SCON.1,putc_loop
 1825+ 2			        ;clr     SCON.1
 1826+ 2  0740	75 99 63	        mov     SBUF,#'c'
 1827+ 1  0743	80 06		        sjmp    ??0175
 1828+ 1  0745			tf_c0:  putc    #'?'
 1829+ 2  0745			??0177:
 1830+ 2			        ;jnb     SCON.1,putc_loop
 1831+ 2			        ;clr     SCON.1
 1832+ 2  0745	75 99 3F	        mov     SBUF,#'?'
 1833+ 1  0748	75 6E 01	        mov     fail,#001h
 1834+ 1  074B			??0175:
 1835:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 34



 Line  I  Addr  Code            Source

 1836:				tf_md   macro   rn, n, error_loc
 1837:				        mov     039h,#(091h+n)
 1838:				        mov     rn,039h
 1839:				        cjne    rn,#(091h+n),error_loc
 1840:				        endm
 1841:
 1842:				        tf_md   r0,0,tf_d0
 1843+ 1  074B	75 39 91	        mov     039h,#(091h+0)
 1844+ 1  074E	A8 39		        mov     r0,039h
 1845+ 1  0750	B8 91 3D	        cjne    r0,#(091h+0),tf_d0
 1846:				        tf_md   r1,1,tf_d0
 1847+ 1  0753	75 39 92	        mov     039h,#(091h+1)
 1848+ 1  0756	A9 39		        mov     r1,039h
 1849+ 1  0758	B9 92 35	        cjne    r1,#(091h+1),tf_d0
 1850:				        tf_md   r2,2,tf_d0
 1851+ 1  075B	75 39 93	        mov     039h,#(091h+2)
 1852+ 1  075E	AA 39		        mov     r2,039h
 1853+ 1  0760	BA 93 2D	        cjne    r2,#(091h+2),tf_d0
 1854:				        tf_md   r3,3,tf_d0
 1855+ 1  0763	75 39 94	        mov     039h,#(091h+3)
 1856+ 1  0766	AB 39		        mov     r3,039h
 1857+ 1  0768	BB 94 25	        cjne    r3,#(091h+3),tf_d0
 1858:				        tf_md   r4,4,tf_d0
 1859+ 1  076B	75 39 95	        mov     039h,#(091h+4)
 1860+ 1  076E	AC 39		        mov     r4,039h
 1861+ 1  0770	BC 95 1D	        cjne    r4,#(091h+4),tf_d0
 1862:				        tf_md   r5,5,tf_d0
 1863+ 1  0773	75 39 96	        mov     039h,#(091h+5)
 1864+ 1  0776	AD 39		        mov     r5,039h
 1865+ 1  0778	BD 96 15	        cjne    r5,#(091h+5),tf_d0
 1866:				        tf_md   r6,6,tf_d0
 1867+ 1  077B	75 39 97	        mov     039h,#(091h+6)
 1868+ 1  077E	AE 39		        mov     r6,039h
 1869+ 1  0780	BE 97 0D	        cjne    r6,#(091h+6),tf_d0
 1870:				        tf_md   r7,7,tf_d0
 1871+ 1  0783	75 39 98	        mov     039h,#(091h+7)
 1872+ 1  0786	AF 39		        mov     r7,039h
 1873+ 1  0788	BF 98 05	        cjne    r7,#(091h+7),tf_d0
 1874:
 1875:				        eot     'd',tf_d0
 1876+ 1			        putc    #'d'
 1877+ 2  078B			??0179:
 1878+ 2			        ;jnb     SCON.1,putc_loop
 1879+ 2			        ;clr     SCON.1
 1880+ 2  078B	75 99 64	        mov     SBUF,#'d'
 1881+ 1  078E	80 06		        sjmp    ??0178
 1882+ 1  0790			tf_d0:  putc    #'?'
 1883+ 2  0790			??0180:
 1884+ 2			        ;jnb     SCON.1,putc_loop
 1885+ 2			        ;clr     SCON.1
 1886+ 2  0790	75 99 3F	        mov     SBUF,#'?'
 1887+ 1  0793	75 6E 01	        mov     fail,#001h
 1888+ 1  0796			??0178:
 1889:
 1890:	  0796	78 60		        mov     r0,#dir0
 1891:	  0798	79 31		        mov     r1,#031h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 35



 Line  I  Addr  Code            Source

 1892:				        tf_md   @r0,0,tf_e0
 1893+ 1  079A	75 39 91	        mov     039h,#(091h+0)
 1894+ 1  079D	A6 39		        mov     @r0,039h
 1895+ 1  079F	B6 91 0D	        cjne    @r0,#(091h+0),tf_e0
 1896:				        tf_md   @r1,1,tf_e0
 1897+ 1  07A2	75 39 92	        mov     039h,#(091h+1)
 1898+ 1  07A5	A7 39		        mov     @r1,039h
 1899+ 1  07A7	B7 92 05	        cjne    @r1,#(091h+1),tf_e0
 1900:
 1901:				        eot     'e',tf_e0
 1902+ 1			        putc    #'e'
 1903+ 2  07AA			??0182:
 1904+ 2			        ;jnb     SCON.1,putc_loop
 1905+ 2			        ;clr     SCON.1
 1906+ 2  07AA	75 99 65	        mov     SBUF,#'e'
 1907+ 1  07AD	80 06		        sjmp    ??0181
 1908+ 1  07AF			tf_e0:  putc    #'?'
 1909+ 2  07AF			??0183:
 1910+ 2			        ;jnb     SCON.1,putc_loop
 1911+ 2			        ;clr     SCON.1
 1912+ 2  07AF	75 99 3F	        mov     SBUF,#'?'
 1913+ 1  07B2	75 6E 01	        mov     fail,#001h
 1914+ 1  07B5			??0181:
 1915:
 1916:				tf_mf   macro   rn, n, error_loc
 1917:				        mov     a,#(091h+n)
 1918:				        mov     rn,a
 1919:				        cjne    rn,#(091h+n),error_loc
 1920:				        endm
 1921:
 1922:				        tf_mf   r0,0,tf_f0
 1923+ 1  07B5	74 91		        mov     a,#(091h+0)
 1924+ 1  07B7	F8		        mov     r0,a
 1925+ 1  07B8	B8 91 2F	        cjne    r0,#(091h+0),tf_f0
 1926:				        tf_mf   r1,1,tf_f0
 1927+ 1  07BB	74 92		        mov     a,#(091h+1)
 1928+ 1  07BD	F9		        mov     r1,a
 1929+ 1  07BE	B9 92 29	        cjne    r1,#(091h+1),tf_f0
 1930:				        tf_mf   r2,2,tf_f0
 1931+ 1  07C1	74 93		        mov     a,#(091h+2)
 1932+ 1  07C3	FA		        mov     r2,a
 1933+ 1  07C4	BA 93 23	        cjne    r2,#(091h+2),tf_f0
 1934:				        tf_mf   r3,3,tf_f0
 1935+ 1  07C7	74 94		        mov     a,#(091h+3)
 1936+ 1  07C9	FB		        mov     r3,a
 1937+ 1  07CA	BB 94 1D	        cjne    r3,#(091h+3),tf_f0
 1938:				        tf_mf   r5,4,tf_f0
 1939+ 1  07CD	74 95		        mov     a,#(091h+4)
 1940+ 1  07CF	FD		        mov     r5,a
 1941+ 1  07D0	BD 95 17	        cjne    r5,#(091h+4),tf_f0
 1942:				        tf_mf   r5,5,tf_f0
 1943+ 1  07D3	74 96		        mov     a,#(091h+5)
 1944+ 1  07D5	FD		        mov     r5,a
 1945+ 1  07D6	BD 96 11	        cjne    r5,#(091h+5),tf_f0
 1946:				        tf_mf   r6,6,tf_f0
 1947+ 1  07D9	74 97		        mov     a,#(091h+6)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 36



 Line  I  Addr  Code            Source

 1948+ 1  07DB	FE		        mov     r6,a
 1949+ 1  07DC	BE 97 0B	        cjne    r6,#(091h+6),tf_f0
 1950:				        tf_mf   r7,7,tf_f0
 1951+ 1  07DF	74 98		        mov     a,#(091h+7)
 1952+ 1  07E1	FF		        mov     r7,a
 1953+ 1  07E2	BF 98 05	        cjne    r7,#(091h+7),tf_f0
 1954:
 1955:				        eot     'f',tf_f0
 1956+ 1			        putc    #'f'
 1957+ 2  07E5			??0185:
 1958+ 2			        ;jnb     SCON.1,putc_loop
 1959+ 2			        ;clr     SCON.1
 1960+ 2  07E5	75 99 66	        mov     SBUF,#'f'
 1961+ 1  07E8	80 06		        sjmp    ??0184
 1962+ 1  07EA			tf_f0:  putc    #'?'
 1963+ 2  07EA			??0186:
 1964+ 2			        ;jnb     SCON.1,putc_loop
 1965+ 2			        ;clr     SCON.1
 1966+ 2  07EA	75 99 3F	        mov     SBUF,#'?'
 1967+ 1  07ED	75 6E 01	        mov     fail,#001h
 1968+ 1  07F0			??0184:
 1969:
 1970:	  07F0	78 60		        mov     r0,#dir0
 1971:	  07F2	79 31		        mov     r1,#031h
 1972:				        tf_mf   @r0,0,tf_g0
 1973+ 1  07F4	74 91		        mov     a,#(091h+0)
 1974+ 1  07F6	F6		        mov     @r0,a
 1975+ 1  07F7	B6 91 0B	        cjne    @r0,#(091h+0),tf_g0
 1976:				        tf_mf   @r1,1,tf_g0
 1977+ 1  07FA	74 92		        mov     a,#(091h+1)
 1978+ 1  07FC	F7		        mov     @r1,a
 1979+ 1  07FD	B7 92 05	        cjne    @r1,#(091h+1),tf_g0
 1980:
 1981:				        eot     'g',tf_g0
 1982+ 1			        putc    #'g'
 1983+ 2  0800			??0188:
 1984+ 2			        ;jnb     SCON.1,putc_loop
 1985+ 2			        ;clr     SCON.1
 1986+ 2  0800	75 99 67	        mov     SBUF,#'g'
 1987+ 1  0803	80 06		        sjmp    ??0187
 1988+ 1  0805			tf_g0:  putc    #'?'
 1989+ 2  0805			??0189:
 1990+ 2			        ;jnb     SCON.1,putc_loop
 1991+ 2			        ;clr     SCON.1
 1992+ 2  0805	75 99 3F	        mov     SBUF,#'?'
 1993+ 1  0808	75 6E 01	        mov     fail,#001h
 1994+ 1  080B			??0187:
 1995:
 1996:	  080B	75 60 79	        mov     dir0,#079h
 1997:	  080E	78 00		        mov     r0,#000h
 1998:	  0810	74 34		        mov     a,#34h
 1999:	  0812	F5 60		        mov     dir0,a
 2000:	  0814	A8 60		        mov     r0,dir0
 2001:	  0816	B8 34 05	        cjne    r0,#034h,tf_h0
 2002:
 2003:				        eot     'h',tf_h0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 37



 Line  I  Addr  Code            Source

 2004+ 1			        putc    #'h'
 2005+ 2  0819			??0191:
 2006+ 2			        ;jnb     SCON.1,putc_loop
 2007+ 2			        ;clr     SCON.1
 2008+ 2  0819	75 99 68	        mov     SBUF,#'h'
 2009+ 1  081C	80 06		        sjmp    ??0190
 2010+ 1  081E			tf_h0:  putc    #'?'
 2011+ 2  081E			??0192:
 2012+ 2			        ;jnb     SCON.1,putc_loop
 2013+ 2			        ;clr     SCON.1
 2014+ 2  081E	75 99 3F	        mov     SBUF,#'?'
 2015+ 1  0821	75 6E 01	        mov     fail,#001h
 2016+ 1  0824			??0190:
 2017:
 2018:	  0824	74 00		        mov     a,#000h
 2019:
 2020:	  0826	79 31		        mov     r1,#031h
 2021:	  0828	75 31 56	        mov     031h,#056h
 2022:	  082B	78 60		        mov     r0,#dir0
 2023:	  082D	75 60 34	        mov     dir0,#034h
 2024:	  0830	E6		        mov     a,@r0
 2025:	  0831	B4 34 09	        cjne    a,#034h,tf_i0
 2026:	  0834	E7		        mov     a,@r1
 2027:	  0835	B4 56 05	        cjne    a,#056h,tf_i0
 2028:
 2029:				        eot     'i',tf_i0
 2030+ 1			        putc    #'i'
 2031+ 2  0838			??0194:
 2032+ 2			        ;jnb     SCON.1,putc_loop
 2033+ 2			        ;clr     SCON.1
 2034+ 2  0838	75 99 69	        mov     SBUF,#'i'
 2035+ 1  083B	80 06		        sjmp    ??0193
 2036+ 1  083D			tf_i0:  putc    #'?'
 2037+ 2  083D			??0195:
 2038+ 2			        ;jnb     SCON.1,putc_loop
 2039+ 2			        ;clr     SCON.1
 2040+ 2  083D	75 99 3F	        mov     SBUF,#'?'
 2041+ 1  0840	75 6E 01	        mov     fail,#001h
 2042+ 1  0843			??0193:
 2043:
 2044:				        put_crlf                    ; end of test series
 2045+ 1			        putc    #13
 2046+ 2  0843			??0196:
 2047+ 2			        ;jnb     SCON.1,putc_loop
 2048+ 2			        ;clr     SCON.1
 2049+ 2  0843	75 99 0D	        mov     SBUF,#13
 2050+ 1			        putc    #10
 2051+ 2  0846			??0197:
 2052+ 2			        ;jnb     SCON.1,putc_loop
 2053+ 2			        ;clr     SCON.1
 2054+ 2  0846	75 99 0A	        mov     SBUF,#10
 2055:
 2056:
 2057:				        ;-- Test series G ------------------------------------------------------
 2058:				        ; Note the XCG tests are specially lame even within this context.
 2059:				        ; a.- <CLR A>, <CPL A>, <SWAP A>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 38



 Line  I  Addr  Code            Source

 2060:				        ; b.- <INC DPTR>
 2061:				        ; c.- <XCH A,dir>
 2062:				        ; d.- <XCH A,@Ri>
 2063:				        ; e.- <XCH A,Rn>
 2064:
 2065:				        putc    #'G'                ; start of test series
 2066+ 1  0849			??0198:
 2067+ 1			        ;jnb     SCON.1,putc_loop
 2068+ 1			        ;clr     SCON.1
 2069+ 1  0849	75 99 47	        mov     SBUF,#'G'
 2070:
 2071:	  084C	74 55		        mov     a,#055h
 2072:	  084E	E4		        clr     a
 2073:	  084F	70 11		        jnz     tg_a0
 2074:
 2075:	  0851	74 55		        mov     a,#055h
 2076:	  0853	F4		        cpl     a
 2077:	  0854	B4 AA 0B	        cjne    a,#0aah,tg_a0
 2078:
 2079:	  0857	74 97		        mov     a,#097h
 2080:	  0859	C4		        swap    a
 2081:	  085A	B4 79 05	        cjne    a,#079h,tg_a0
 2082:
 2083:				        eot     'a',tg_a0
 2084+ 1			        putc    #'a'
 2085+ 2  085D			??0200:
 2086+ 2			        ;jnb     SCON.1,putc_loop
 2087+ 2			        ;clr     SCON.1
 2088+ 2  085D	75 99 61	        mov     SBUF,#'a'
 2089+ 1  0860	80 06		        sjmp    ??0199
 2090+ 1  0862			tg_a0:  putc    #'?'
 2091+ 2  0862			??0201:
 2092+ 2			        ;jnb     SCON.1,putc_loop
 2093+ 2			        ;clr     SCON.1
 2094+ 2  0862	75 99 3F	        mov     SBUF,#'?'
 2095+ 1  0865	75 6E 01	        mov     fail,#001h
 2096+ 1  0868			??0199:
 2097:
 2098:	  0868	75 83 12	        mov     DPH,#012h
 2099:	  086B	75 82 FD	        mov     DPL,#0fdh
 2100:	  086E	A3		        inc     dptr
 2101:	  086F	E5 83		        mov     a,DPH
 2102:	  0871	B4 12 20	        cjne    a,#012h,tg_b0
 2103:	  0874	E5 82		        mov     a,DPL
 2104:	  0876	B4 FE 1B	        cjne    a,#0feh,tg_b0
 2105:	  0879	A3		        inc     dptr
 2106:	  087A	E5 83		        mov     a,DPH
 2107:	  087C	B4 12 15	        cjne    a,#012h,tg_b0
 2108:	  087F	E5 82		        mov     a,DPL
 2109:	  0881	B4 FF 10	        cjne    a,#0ffh,tg_b0
 2110:	  0884	A3		        inc     dptr
 2111:	  0885	E5 83		        mov     a,DPH
 2112:	  0887	B4 13 0A	        cjne    a,#013h,tg_b0
 2113:	  088A	E5 82		        mov     a,DPL
 2114:	  088C	B4 00 05	        cjne    a,#000h,tg_b0
 2115:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 39



 Line  I  Addr  Code            Source

 2116:				        eot     'b',tg_b0
 2117+ 1			        putc    #'b'
 2118+ 2  088F			??0203:
 2119+ 2			        ;jnb     SCON.1,putc_loop
 2120+ 2			        ;clr     SCON.1
 2121+ 2  088F	75 99 62	        mov     SBUF,#'b'
 2122+ 1  0892	80 06		        sjmp    ??0202
 2123+ 1  0894			tg_b0:  putc    #'?'
 2124+ 2  0894			??0204:
 2125+ 2			        ;jnb     SCON.1,putc_loop
 2126+ 2			        ;clr     SCON.1
 2127+ 2  0894	75 99 3F	        mov     SBUF,#'?'
 2128+ 1  0897	75 6E 01	        mov     fail,#001h
 2129+ 1  089A			??0202:
 2130:
 2131:				        ; c.- <XCH A,dir>
 2132:	  089A	74 34		        mov     a,#34h
 2133:	  089C	75 13 57	        mov     13h,#57h
 2134:	  089F	C5 13		        xch     a,13h
 2135:	  08A1	B4 57 0A	        cjne    a,#57h,tg_c0
 2136:	  08A4	E5 13		        mov     a,13h
 2137:	  08A6	B4 34 05	        cjne    a,#34h,tg_c0
 2138:
 2139:				        eot     'c',tg_c0
 2140+ 1			        putc    #'c'
 2141+ 2  08A9			??0206:
 2142+ 2			        ;jnb     SCON.1,putc_loop
 2143+ 2			        ;clr     SCON.1
 2144+ 2  08A9	75 99 63	        mov     SBUF,#'c'
 2145+ 1  08AC	80 06		        sjmp    ??0205
 2146+ 1  08AE			tg_c0:  putc    #'?'
 2147+ 2  08AE			??0207:
 2148+ 2			        ;jnb     SCON.1,putc_loop
 2149+ 2			        ;clr     SCON.1
 2150+ 2  08AE	75 99 3F	        mov     SBUF,#'?'
 2151+ 1  08B1	75 6E 01	        mov     fail,#001h
 2152+ 1  08B4			??0205:
 2153:
 2154:				        ; d.- <XCH A,@Ri>
 2155:	  08B4	74 91		        mov     a,#91h
 2156:	  08B6	75 29 78	        mov     29h,#78h
 2157:	  08B9	79 29		        mov     r1,#29h
 2158:	  08BB	C7		        xch     a,@r1
 2159:	  08BC	B4 78 0A	        cjne    a,#78h,tg_d0
 2160:	  08BF	E5 29		        mov     a,29h
 2161:	  08C1	B4 91 05	        cjne    a,#91h,tg_d0
 2162:
 2163:				        eot     'd',tg_d0
 2164+ 1			        putc    #'d'
 2165+ 2  08C4			??0209:
 2166+ 2			        ;jnb     SCON.1,putc_loop
 2167+ 2			        ;clr     SCON.1
 2168+ 2  08C4	75 99 64	        mov     SBUF,#'d'
 2169+ 1  08C7	80 06		        sjmp    ??0208
 2170+ 1  08C9			tg_d0:  putc    #'?'
 2171+ 2  08C9			??0210:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 40



 Line  I  Addr  Code            Source

 2172+ 2			        ;jnb     SCON.1,putc_loop
 2173+ 2			        ;clr     SCON.1
 2174+ 2  08C9	75 99 3F	        mov     SBUF,#'?'
 2175+ 1  08CC	75 6E 01	        mov     fail,#001h
 2176+ 1  08CF			??0208:
 2177:
 2178:				        ; e.- <XCHG A,Rn>
 2179:	  08CF	74 43		        mov     a,#43h
 2180:	  08D1	7E A2		        mov     r6,#0a2h
 2181:	  08D3	CE		        xch     a,r6
 2182:	  08D4	B4 A2 09	        cjne    a,#0a2h,tg_e0
 2183:	  08D7	EE		        mov     a,r6
 2184:	  08D8	B4 43 05	        cjne    a,#43h,tg_e0
 2185:
 2186:				        eot     'e',tg_e0
 2187+ 1			        putc    #'e'
 2188+ 2  08DB			??0212:
 2189+ 2			        ;jnb     SCON.1,putc_loop
 2190+ 2			        ;clr     SCON.1
 2191+ 2  08DB	75 99 65	        mov     SBUF,#'e'
 2192+ 1  08DE	80 06		        sjmp    ??0211
 2193+ 1  08E0			tg_e0:  putc    #'?'
 2194+ 2  08E0			??0213:
 2195+ 2			        ;jnb     SCON.1,putc_loop
 2196+ 2			        ;clr     SCON.1
 2197+ 2  08E0	75 99 3F	        mov     SBUF,#'?'
 2198+ 1  08E3	75 6E 01	        mov     fail,#001h
 2199+ 1  08E6			??0211:
 2200:
 2201:
 2202:				        put_crlf                    ; end of test series
 2203+ 1			        putc    #13
 2204+ 2  08E6			??0214:
 2205+ 2			        ;jnb     SCON.1,putc_loop
 2206+ 2			        ;clr     SCON.1
 2207+ 2  08E6	75 99 0D	        mov     SBUF,#13
 2208+ 1			        putc    #10
 2209+ 2  08E9			??0215:
 2210+ 2			        ;jnb     SCON.1,putc_loop
 2211+ 2			        ;clr     SCON.1
 2212+ 2  08E9	75 99 0A	        mov     SBUF,#10
 2213:
 2214:
 2215:				        ;-- ALU opcode block test ----------------------------------------------
 2216:				        ; This set of macros is used to test families of opcodes, such as ORL,
 2217:				        ; ANL, ADD, etc. with all their addressing modes.
 2218:				        ;
 2219:				        ; a.- <OP A,dir>, <OP A,@Ri>, <OP A, Rn> (n=0,1)
 2220:				        ; b.- <OP A, Rn> (n=2,3)
 2221:				        ; c.- <OP A, Rn> (n=4,5)
 2222:				        ; d.- <OP A, Rn> (n=6,7)
 2223:				        ; e.- <OP dir,#imm>, <OP A,#imm>
 2224:				        ; f.- <OP dir,A>
 2225:
 2226:				        ;save_psw:
 2227:				save_psw macro

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 41



 Line  I  Addr  Code            Source

 2228:				        mov     saved_psw,PSW
 2229:				        endm
 2230:
 2231:				tst_psw macro   flags,error_loc
 2232:				        mov     a,saved_psw
 2233:				        anl     a,#0c4h
 2234:				        xrl     a,#flags
 2235:				        anl     a,#0feh
 2236:				        jnz     error_loc
 2237:				        endm
 2238:
 2239:				set_cy  macro   flags
 2240:				        local   cy_val
 2241:				cy_val  set     (flags and 1)
 2242:				        if      cy_val eq 1
 2243:				        setb    c
 2244:				        else
 2245:				        clr     c
 2246:				        endif
 2247:				        endm
 2248:
 2249:				top_ma  macro   op,src,error_loc,flags
 2250:				        mov     src,#arg0
 2251:				        mov     a,#arg1
 2252:				        ifnb    <flags>
 2253:				        set_cy  flags
 2254:				        endif
 2255:				        op      a,src
 2256:				        ifnb    <flags>
 2257:				        save_psw
 2258:				        endif
 2259:				        cjne    a,#res,error_loc
 2260:				        ifnb    <flags>
 2261:				        tst_psw <flags>,error_loc
 2262:				        endif
 2263:				        endm
 2264:
 2265:				top_mb  macro   op,dst,error_loc,flags
 2266:				        mov     dst,#arg0
 2267:				        ifnb    <flags>
 2268:				        set_cy  flags
 2269:				        endif
 2270:				        op      dst,#arg1
 2271:				        ifnb    <flags>
 2272:				        save_psw
 2273:				        endif
 2274:				        mov     ACC,dst
 2275:				        cjne    a,#res,error_loc
 2276:				        ifnb    <flags>
 2277:				        tst_psw <flags>,error_loc
 2278:				        endif
 2279:				        endm
 2280:
 2281:				top_mc  macro   op,error_loc,flags
 2282:				        mov     dir0,#arg0
 2283:				        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 42



 Line  I  Addr  Code            Source

 2284:				        ifnb    <flags>
 2285:				        set_cy  flags
 2286:				        endif
 2287:				        op      dir0,a
 2288:				        ifnb    <flags>
 2289:				        save_psw
 2290:				        endif
 2291:				        mov     a,dir0
 2292:				        cjne    a,#res,error_loc
 2293:				        ifnb    <flags>
 2294:				        tst_psw <flags>,error_loc
 2295:				        endif
 2296:				        endm
 2297:
 2298:
 2299:				tst_alu macro   op,a0,a1,r,flags
 2300:				        local   tall_0d
 2301:				        local   tall_0a
 2302:				        local   tall_0b
 2303:				        local   tall_0c
 2304:				        local   tall_1
 2305:				        local   tall_2
 2306:
 2307:				        arg0    set a0
 2308:				        arg1    set a1
 2309:				        res     set r
 2310:
 2311:				        top_ma  op,dir0,tall_0a,<flags>
 2312:				        mov     r0,#dir0
 2313:				        top_ma  op,@r0,tall_0a,<flags>
 2314:				        mov     r1,#031h
 2315:				        top_ma  op,@r1,tall_0a,<flags>
 2316:
 2317:				        top_ma  op,r0,tall_0a,<flags>
 2318:				        top_ma  op,r1,tall_0a,<flags>
 2319:
 2320:				        eot     'a',tall_0a
 2321:
 2322:				        top_ma  op,r2,tall_0b,<flags>
 2323:				        top_ma  op,r3,tall_0b,<flags>
 2324:
 2325:				        eot     'b',tall_0b
 2326:
 2327:				        top_ma  op,r4,tall_0c,<flags>
 2328:				        top_ma  op,r5,tall_0c,<flags>
 2329:
 2330:				        eot     'c',tall_0c
 2331:
 2332:				        top_ma  op,r6,tall_0d,<flags>
 2333:				        top_ma  op,r7,tall_0d,<flags>
 2334:
 2335:				        eot     'd',tall_0d
 2336:
 2337:				        ifb     <flags>
 2338:
 2339:				        top_mb  op,a,tall_1,<flags>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 43



 Line  I  Addr  Code            Source

 2340:				        top_mb  op,dir0,tall_1,<flags>
 2341:
 2342:				        eot     'e',tall_1
 2343:
 2344:				        top_mc  op,tall_2,<flags>
 2345:
 2346:				        eot     'f',tall_2
 2347:				        endif
 2348:				        endm
 2349:
 2350:
 2351:				        ;-- Test series H ------------------------------------------------------
 2352:				        ; ANL
 2353:				        ; (See comments for 'ALU opcode block test')
 2354:
 2355:				        putc    #'H'                ; start of test series
 2356+ 1  08EC			??0216:
 2357+ 1			        ;jnb     SCON.1,putc_loop
 2358+ 1			        ;clr     SCON.1
 2359+ 1  08EC	75 99 48	        mov     SBUF,#'H'
 2360:
 2361:				        tst_alu anl,03ch,099h,018h,
 2362+ 1
 2363+ 1	N      003C	        arg0    set 03ch
 2364+ 1	N      0099	        arg1    set 099h
 2365+ 1	N      0018	        res     set 018h
 2366+ 1
 2367+ 1			        top_ma  anl,dir0,??0218,<>
 2368+ 2  08EF	75 60 3C	        mov     dir0,#arg0
 2369+ 2  08F2	74 99		        mov     a,#arg1
 2370+ 2			        ifnb    <>
 2371+ 2			        set_cy
 2372+ 2			        endif
 2373+ 2  08F4	55 60		        anl      a,dir0
 2374+ 2			        ifnb    <>
 2375+ 2			        save_psw
 2376+ 2			        endif
 2377+ 2  08F6	B4 18 29	        cjne    a,#res,??0218
 2378+ 2			        ifnb    <>
 2379+ 2			        tst_psw <>,??0218
 2380+ 2			        endif
 2381+ 1  08F9	78 60		        mov     r0,#dir0
 2382+ 1			        top_ma  anl,@r0,??0218,<>
 2383+ 2  08FB	76 3C		        mov     @r0,#arg0
 2384+ 2  08FD	74 99		        mov     a,#arg1
 2385+ 2			        ifnb    <>
 2386+ 2			        set_cy
 2387+ 2			        endif
 2388+ 2  08FF	56		        anl      a,@r0
 2389+ 2			        ifnb    <>
 2390+ 2			        save_psw
 2391+ 2			        endif
 2392+ 2  0900	B4 18 1F	        cjne    a,#res,??0218
 2393+ 2			        ifnb    <>
 2394+ 2			        tst_psw <>,??0218
 2395+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 44



 Line  I  Addr  Code            Source

 2396+ 1  0903	79 31		        mov     r1,#031h
 2397+ 1			        top_ma  anl,@r1,??0218,<>
 2398+ 2  0905	77 3C		        mov     @r1,#arg0
 2399+ 2  0907	74 99		        mov     a,#arg1
 2400+ 2			        ifnb    <>
 2401+ 2			        set_cy
 2402+ 2			        endif
 2403+ 2  0909	57		        anl      a,@r1
 2404+ 2			        ifnb    <>
 2405+ 2			        save_psw
 2406+ 2			        endif
 2407+ 2  090A	B4 18 15	        cjne    a,#res,??0218
 2408+ 2			        ifnb    <>
 2409+ 2			        tst_psw <>,??0218
 2410+ 2			        endif
 2411+ 1
 2412+ 1			        top_ma  anl,r0,??0218,<>
 2413+ 2  090D	78 3C		        mov     r0,#arg0
 2414+ 2  090F	74 99		        mov     a,#arg1
 2415+ 2			        ifnb    <>
 2416+ 2			        set_cy
 2417+ 2			        endif
 2418+ 2  0911	58		        anl      a,r0
 2419+ 2			        ifnb    <>
 2420+ 2			        save_psw
 2421+ 2			        endif
 2422+ 2  0912	B4 18 0D	        cjne    a,#res,??0218
 2423+ 2			        ifnb    <>
 2424+ 2			        tst_psw <>,??0218
 2425+ 2			        endif
 2426+ 1			        top_ma  anl,r1,??0218,<>
 2427+ 2  0915	79 3C		        mov     r1,#arg0
 2428+ 2  0917	74 99		        mov     a,#arg1
 2429+ 2			        ifnb    <>
 2430+ 2			        set_cy
 2431+ 2			        endif
 2432+ 2  0919	59		        anl      a,r1
 2433+ 2			        ifnb    <>
 2434+ 2			        save_psw
 2435+ 2			        endif
 2436+ 2  091A	B4 18 05	        cjne    a,#res,??0218
 2437+ 2			        ifnb    <>
 2438+ 2			        tst_psw <>,??0218
 2439+ 2			        endif
 2440+ 1
 2441+ 1			        eot     'a',??0218
 2442+ 2			        putc    #'a'
 2443+ 3  091D			??0224:
 2444+ 3			        ;jnb     SCON.1,putc_loop
 2445+ 3			        ;clr     SCON.1
 2446+ 3  091D	75 99 61	        mov     SBUF,#'a'
 2447+ 2  0920	80 06		        sjmp    ??0223
 2448+ 2  0922			??0218:  putc    #'?'
 2449+ 3  0922			??0225:
 2450+ 3			        ;jnb     SCON.1,putc_loop
 2451+ 3			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 45



 Line  I  Addr  Code            Source

 2452+ 3  0922	75 99 3F	        mov     SBUF,#'?'
 2453+ 2  0925	75 6E 01	        mov     fail,#001h
 2454+ 2  0928			??0223:
 2455+ 1
 2456+ 1			        top_ma  anl,r2,??0219,<>
 2457+ 2  0928	7A 3C		        mov     r2,#arg0
 2458+ 2  092A	74 99		        mov     a,#arg1
 2459+ 2			        ifnb    <>
 2460+ 2			        set_cy
 2461+ 2			        endif
 2462+ 2  092C	5A		        anl      a,r2
 2463+ 2			        ifnb    <>
 2464+ 2			        save_psw
 2465+ 2			        endif
 2466+ 2  092D	B4 18 0D	        cjne    a,#res,??0219
 2467+ 2			        ifnb    <>
 2468+ 2			        tst_psw <>,??0219
 2469+ 2			        endif
 2470+ 1			        top_ma  anl,r3,??0219,<>
 2471+ 2  0930	7B 3C		        mov     r3,#arg0
 2472+ 2  0932	74 99		        mov     a,#arg1
 2473+ 2			        ifnb    <>
 2474+ 2			        set_cy
 2475+ 2			        endif
 2476+ 2  0934	5B		        anl      a,r3
 2477+ 2			        ifnb    <>
 2478+ 2			        save_psw
 2479+ 2			        endif
 2480+ 2  0935	B4 18 05	        cjne    a,#res,??0219
 2481+ 2			        ifnb    <>
 2482+ 2			        tst_psw <>,??0219
 2483+ 2			        endif
 2484+ 1
 2485+ 1			        eot     'b',??0219
 2486+ 2			        putc    #'b'
 2487+ 3  0938			??0227:
 2488+ 3			        ;jnb     SCON.1,putc_loop
 2489+ 3			        ;clr     SCON.1
 2490+ 3  0938	75 99 62	        mov     SBUF,#'b'
 2491+ 2  093B	80 06		        sjmp    ??0226
 2492+ 2  093D			??0219:  putc    #'?'
 2493+ 3  093D			??0228:
 2494+ 3			        ;jnb     SCON.1,putc_loop
 2495+ 3			        ;clr     SCON.1
 2496+ 3  093D	75 99 3F	        mov     SBUF,#'?'
 2497+ 2  0940	75 6E 01	        mov     fail,#001h
 2498+ 2  0943			??0226:
 2499+ 1
 2500+ 1			        top_ma  anl,r4,??0220,<>
 2501+ 2  0943	7C 3C		        mov     r4,#arg0
 2502+ 2  0945	74 99		        mov     a,#arg1
 2503+ 2			        ifnb    <>
 2504+ 2			        set_cy
 2505+ 2			        endif
 2506+ 2  0947	5C		        anl      a,r4
 2507+ 2			        ifnb    <>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 46



 Line  I  Addr  Code            Source

 2508+ 2			        save_psw
 2509+ 2			        endif
 2510+ 2  0948	B4 18 0D	        cjne    a,#res,??0220
 2511+ 2			        ifnb    <>
 2512+ 2			        tst_psw <>,??0220
 2513+ 2			        endif
 2514+ 1			        top_ma  anl,r5,??0220,<>
 2515+ 2  094B	7D 3C		        mov     r5,#arg0
 2516+ 2  094D	74 99		        mov     a,#arg1
 2517+ 2			        ifnb    <>
 2518+ 2			        set_cy
 2519+ 2			        endif
 2520+ 2  094F	5D		        anl      a,r5
 2521+ 2			        ifnb    <>
 2522+ 2			        save_psw
 2523+ 2			        endif
 2524+ 2  0950	B4 18 05	        cjne    a,#res,??0220
 2525+ 2			        ifnb    <>
 2526+ 2			        tst_psw <>,??0220
 2527+ 2			        endif
 2528+ 1
 2529+ 1			        eot     'c',??0220
 2530+ 2			        putc    #'c'
 2531+ 3  0953			??0230:
 2532+ 3			        ;jnb     SCON.1,putc_loop
 2533+ 3			        ;clr     SCON.1
 2534+ 3  0953	75 99 63	        mov     SBUF,#'c'
 2535+ 2  0956	80 06		        sjmp    ??0229
 2536+ 2  0958			??0220:  putc    #'?'
 2537+ 3  0958			??0231:
 2538+ 3			        ;jnb     SCON.1,putc_loop
 2539+ 3			        ;clr     SCON.1
 2540+ 3  0958	75 99 3F	        mov     SBUF,#'?'
 2541+ 2  095B	75 6E 01	        mov     fail,#001h
 2542+ 2  095E			??0229:
 2543+ 1
 2544+ 1			        top_ma  anl,r6,??0217,<>
 2545+ 2  095E	7E 3C		        mov     r6,#arg0
 2546+ 2  0960	74 99		        mov     a,#arg1
 2547+ 2			        ifnb    <>
 2548+ 2			        set_cy
 2549+ 2			        endif
 2550+ 2  0962	5E		        anl      a,r6
 2551+ 2			        ifnb    <>
 2552+ 2			        save_psw
 2553+ 2			        endif
 2554+ 2  0963	B4 18 0D	        cjne    a,#res,??0217
 2555+ 2			        ifnb    <>
 2556+ 2			        tst_psw <>,??0217
 2557+ 2			        endif
 2558+ 1			        top_ma  anl,r7,??0217,<>
 2559+ 2  0966	7F 3C		        mov     r7,#arg0
 2560+ 2  0968	74 99		        mov     a,#arg1
 2561+ 2			        ifnb    <>
 2562+ 2			        set_cy
 2563+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 47



 Line  I  Addr  Code            Source

 2564+ 2  096A	5F		        anl      a,r7
 2565+ 2			        ifnb    <>
 2566+ 2			        save_psw
 2567+ 2			        endif
 2568+ 2  096B	B4 18 05	        cjne    a,#res,??0217
 2569+ 2			        ifnb    <>
 2570+ 2			        tst_psw <>,??0217
 2571+ 2			        endif
 2572+ 1
 2573+ 1			        eot     'd',??0217
 2574+ 2			        putc    #'d'
 2575+ 3  096E			??0233:
 2576+ 3			        ;jnb     SCON.1,putc_loop
 2577+ 3			        ;clr     SCON.1
 2578+ 3  096E	75 99 64	        mov     SBUF,#'d'
 2579+ 2  0971	80 06		        sjmp    ??0232
 2580+ 2  0973			??0217:  putc    #'?'
 2581+ 3  0973			??0234:
 2582+ 3			        ;jnb     SCON.1,putc_loop
 2583+ 3			        ;clr     SCON.1
 2584+ 3  0973	75 99 3F	        mov     SBUF,#'?'
 2585+ 2  0976	75 6E 01	        mov     fail,#001h
 2586+ 2  0979			??0232:
 2587+ 1
 2588+ 1			        ifb     <>
 2589+ 1
 2590+ 1			        top_mb  anl,a,??0221,<>
 2591+ 2  0979	74 3C		        mov     a,#arg0
 2592+ 2			        ifnb    <>
 2593+ 2			        set_cy
 2594+ 2			        endif
 2595+ 2  097B	54 99		        anl      a,#arg1
 2596+ 2			        ifnb    <>
 2597+ 2			        save_psw
 2598+ 2			        endif
 2599+ 2  097D	F5 E0		        mov     ACC,a
 2600+ 2  097F	B4 18 11	        cjne    a,#res,??0221
 2601+ 2			        ifnb    <>
 2602+ 2			        tst_psw <>,??0221
 2603+ 2			        endif
 2604+ 1			        top_mb  anl,dir0,??0221,<>
 2605+ 2  0982	75 60 3C	        mov     dir0,#arg0
 2606+ 2			        ifnb    <>
 2607+ 2			        set_cy
 2608+ 2			        endif
 2609+ 2  0985	53 60 99	        anl      dir0,#arg1
 2610+ 2			        ifnb    <>
 2611+ 2			        save_psw
 2612+ 2			        endif
 2613+ 2  0988	85 60 E0	        mov     ACC,dir0
 2614+ 2  098B	B4 18 05	        cjne    a,#res,??0221
 2615+ 2			        ifnb    <>
 2616+ 2			        tst_psw <>,??0221
 2617+ 2			        endif
 2618+ 1
 2619+ 1			        eot     'e',??0221

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 48



 Line  I  Addr  Code            Source

 2620+ 2			        putc    #'e'
 2621+ 3  098E			??0236:
 2622+ 3			        ;jnb     SCON.1,putc_loop
 2623+ 3			        ;clr     SCON.1
 2624+ 3  098E	75 99 65	        mov     SBUF,#'e'
 2625+ 2  0991	80 06		        sjmp    ??0235
 2626+ 2  0993			??0221:  putc    #'?'
 2627+ 3  0993			??0237:
 2628+ 3			        ;jnb     SCON.1,putc_loop
 2629+ 3			        ;clr     SCON.1
 2630+ 3  0993	75 99 3F	        mov     SBUF,#'?'
 2631+ 2  0996	75 6E 01	        mov     fail,#001h
 2632+ 2  0999			??0235:
 2633+ 1
 2634+ 1			        top_mc  anl,??0222,<>
 2635+ 2  0999	75 60 3C	        mov     dir0,#arg0
 2636+ 2  099C	74 99		        mov     a,#arg1
 2637+ 2			        ifnb    <>
 2638+ 2			        set_cy
 2639+ 2			        endif
 2640+ 2  099E	52 60		        anl      dir0,a
 2641+ 2			        ifnb    <>
 2642+ 2			        save_psw
 2643+ 2			        endif
 2644+ 2  09A0	E5 60		        mov     a,dir0
 2645+ 2  09A2	B4 18 05	        cjne    a,#res,??0222
 2646+ 2			        ifnb    <>
 2647+ 2			        tst_psw <>,??0222
 2648+ 2			        endif
 2649+ 1
 2650+ 1			        eot     'f',??0222
 2651+ 2			        putc    #'f'
 2652+ 3  09A5			??0239:
 2653+ 3			        ;jnb     SCON.1,putc_loop
 2654+ 3			        ;clr     SCON.1
 2655+ 3  09A5	75 99 66	        mov     SBUF,#'f'
 2656+ 2  09A8	80 06		        sjmp    ??0238
 2657+ 2  09AA			??0222:  putc    #'?'
 2658+ 3  09AA			??0240:
 2659+ 3			        ;jnb     SCON.1,putc_loop
 2660+ 3			        ;clr     SCON.1
 2661+ 3  09AA	75 99 3F	        mov     SBUF,#'?'
 2662+ 2  09AD	75 6E 01	        mov     fail,#001h
 2663+ 2  09B0			??0238:
 2664+ 1			        endif
 2665:
 2666:				        put_crlf                    ; end of test series
 2667+ 1			        putc    #13
 2668+ 2  09B0			??0241:
 2669+ 2			        ;jnb     SCON.1,putc_loop
 2670+ 2			        ;clr     SCON.1
 2671+ 2  09B0	75 99 0D	        mov     SBUF,#13
 2672+ 1			        putc    #10
 2673+ 2  09B3			??0242:
 2674+ 2			        ;jnb     SCON.1,putc_loop
 2675+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 49



 Line  I  Addr  Code            Source

 2676+ 2  09B3	75 99 0A	        mov     SBUF,#10
 2677:
 2678:
 2679:				        ;-- Test series I ------------------------------------------------------
 2680:				        ; ORL
 2681:				        ; (See comments for 'ALU opcode block test')
 2682:
 2683:				        putc    #'I'                ; start of test series
 2684+ 1  09B6			??0243:
 2685+ 1			        ;jnb     SCON.1,putc_loop
 2686+ 1			        ;clr     SCON.1
 2687+ 1  09B6	75 99 49	        mov     SBUF,#'I'
 2688:
 2689:				        tst_alu orl,051h,092h,0d3h,
 2690+ 1
 2691+ 1	N      0051	        arg0    set 051h
 2692+ 1	N      0092	        arg1    set 092h
 2693+ 1	N      00D3	        res     set 0d3h
 2694+ 1
 2695+ 1			        top_ma  orl,dir0,??0245,<>
 2696+ 2  09B9	75 60 51	        mov     dir0,#arg0
 2697+ 2  09BC	74 92		        mov     a,#arg1
 2698+ 2			        ifnb    <>
 2699+ 2			        set_cy
 2700+ 2			        endif
 2701+ 2  09BE	45 60		        orl      a,dir0
 2702+ 2			        ifnb    <>
 2703+ 2			        save_psw
 2704+ 2			        endif
 2705+ 2  09C0	B4 D3 29	        cjne    a,#res,??0245
 2706+ 2			        ifnb    <>
 2707+ 2			        tst_psw <>,??0245
 2708+ 2			        endif
 2709+ 1  09C3	78 60		        mov     r0,#dir0
 2710+ 1			        top_ma  orl,@r0,??0245,<>
 2711+ 2  09C5	76 51		        mov     @r0,#arg0
 2712+ 2  09C7	74 92		        mov     a,#arg1
 2713+ 2			        ifnb    <>
 2714+ 2			        set_cy
 2715+ 2			        endif
 2716+ 2  09C9	46		        orl      a,@r0
 2717+ 2			        ifnb    <>
 2718+ 2			        save_psw
 2719+ 2			        endif
 2720+ 2  09CA	B4 D3 1F	        cjne    a,#res,??0245
 2721+ 2			        ifnb    <>
 2722+ 2			        tst_psw <>,??0245
 2723+ 2			        endif
 2724+ 1  09CD	79 31		        mov     r1,#031h
 2725+ 1			        top_ma  orl,@r1,??0245,<>
 2726+ 2  09CF	77 51		        mov     @r1,#arg0
 2727+ 2  09D1	74 92		        mov     a,#arg1
 2728+ 2			        ifnb    <>
 2729+ 2			        set_cy
 2730+ 2			        endif
 2731+ 2  09D3	47		        orl      a,@r1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 50



 Line  I  Addr  Code            Source

 2732+ 2			        ifnb    <>
 2733+ 2			        save_psw
 2734+ 2			        endif
 2735+ 2  09D4	B4 D3 15	        cjne    a,#res,??0245
 2736+ 2			        ifnb    <>
 2737+ 2			        tst_psw <>,??0245
 2738+ 2			        endif
 2739+ 1
 2740+ 1			        top_ma  orl,r0,??0245,<>
 2741+ 2  09D7	78 51		        mov     r0,#arg0
 2742+ 2  09D9	74 92		        mov     a,#arg1
 2743+ 2			        ifnb    <>
 2744+ 2			        set_cy
 2745+ 2			        endif
 2746+ 2  09DB	48		        orl      a,r0
 2747+ 2			        ifnb    <>
 2748+ 2			        save_psw
 2749+ 2			        endif
 2750+ 2  09DC	B4 D3 0D	        cjne    a,#res,??0245
 2751+ 2			        ifnb    <>
 2752+ 2			        tst_psw <>,??0245
 2753+ 2			        endif
 2754+ 1			        top_ma  orl,r1,??0245,<>
 2755+ 2  09DF	79 51		        mov     r1,#arg0
 2756+ 2  09E1	74 92		        mov     a,#arg1
 2757+ 2			        ifnb    <>
 2758+ 2			        set_cy
 2759+ 2			        endif
 2760+ 2  09E3	49		        orl      a,r1
 2761+ 2			        ifnb    <>
 2762+ 2			        save_psw
 2763+ 2			        endif
 2764+ 2  09E4	B4 D3 05	        cjne    a,#res,??0245
 2765+ 2			        ifnb    <>
 2766+ 2			        tst_psw <>,??0245
 2767+ 2			        endif
 2768+ 1
 2769+ 1			        eot     'a',??0245
 2770+ 2			        putc    #'a'
 2771+ 3  09E7			??0251:
 2772+ 3			        ;jnb     SCON.1,putc_loop
 2773+ 3			        ;clr     SCON.1
 2774+ 3  09E7	75 99 61	        mov     SBUF,#'a'
 2775+ 2  09EA	80 06		        sjmp    ??0250
 2776+ 2  09EC			??0245:  putc    #'?'
 2777+ 3  09EC			??0252:
 2778+ 3			        ;jnb     SCON.1,putc_loop
 2779+ 3			        ;clr     SCON.1
 2780+ 3  09EC	75 99 3F	        mov     SBUF,#'?'
 2781+ 2  09EF	75 6E 01	        mov     fail,#001h
 2782+ 2  09F2			??0250:
 2783+ 1
 2784+ 1			        top_ma  orl,r2,??0246,<>
 2785+ 2  09F2	7A 51		        mov     r2,#arg0
 2786+ 2  09F4	74 92		        mov     a,#arg1
 2787+ 2			        ifnb    <>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 51



 Line  I  Addr  Code            Source

 2788+ 2			        set_cy
 2789+ 2			        endif
 2790+ 2  09F6	4A		        orl      a,r2
 2791+ 2			        ifnb    <>
 2792+ 2			        save_psw
 2793+ 2			        endif
 2794+ 2  09F7	B4 D3 0D	        cjne    a,#res,??0246
 2795+ 2			        ifnb    <>
 2796+ 2			        tst_psw <>,??0246
 2797+ 2			        endif
 2798+ 1			        top_ma  orl,r3,??0246,<>
 2799+ 2  09FA	7B 51		        mov     r3,#arg0
 2800+ 2  09FC	74 92		        mov     a,#arg1
 2801+ 2			        ifnb    <>
 2802+ 2			        set_cy
 2803+ 2			        endif
 2804+ 2  09FE	4B		        orl      a,r3
 2805+ 2			        ifnb    <>
 2806+ 2			        save_psw
 2807+ 2			        endif
 2808+ 2  09FF	B4 D3 05	        cjne    a,#res,??0246
 2809+ 2			        ifnb    <>
 2810+ 2			        tst_psw <>,??0246
 2811+ 2			        endif
 2812+ 1
 2813+ 1			        eot     'b',??0246
 2814+ 2			        putc    #'b'
 2815+ 3  0A02			??0254:
 2816+ 3			        ;jnb     SCON.1,putc_loop
 2817+ 3			        ;clr     SCON.1
 2818+ 3  0A02	75 99 62	        mov     SBUF,#'b'
 2819+ 2  0A05	80 06		        sjmp    ??0253
 2820+ 2  0A07			??0246:  putc    #'?'
 2821+ 3  0A07			??0255:
 2822+ 3			        ;jnb     SCON.1,putc_loop
 2823+ 3			        ;clr     SCON.1
 2824+ 3  0A07	75 99 3F	        mov     SBUF,#'?'
 2825+ 2  0A0A	75 6E 01	        mov     fail,#001h
 2826+ 2  0A0D			??0253:
 2827+ 1
 2828+ 1			        top_ma  orl,r4,??0247,<>
 2829+ 2  0A0D	7C 51		        mov     r4,#arg0
 2830+ 2  0A0F	74 92		        mov     a,#arg1
 2831+ 2			        ifnb    <>
 2832+ 2			        set_cy
 2833+ 2			        endif
 2834+ 2  0A11	4C		        orl      a,r4
 2835+ 2			        ifnb    <>
 2836+ 2			        save_psw
 2837+ 2			        endif
 2838+ 2  0A12	B4 D3 0D	        cjne    a,#res,??0247
 2839+ 2			        ifnb    <>
 2840+ 2			        tst_psw <>,??0247
 2841+ 2			        endif
 2842+ 1			        top_ma  orl,r5,??0247,<>
 2843+ 2  0A15	7D 51		        mov     r5,#arg0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 52



 Line  I  Addr  Code            Source

 2844+ 2  0A17	74 92		        mov     a,#arg1
 2845+ 2			        ifnb    <>
 2846+ 2			        set_cy
 2847+ 2			        endif
 2848+ 2  0A19	4D		        orl      a,r5
 2849+ 2			        ifnb    <>
 2850+ 2			        save_psw
 2851+ 2			        endif
 2852+ 2  0A1A	B4 D3 05	        cjne    a,#res,??0247
 2853+ 2			        ifnb    <>
 2854+ 2			        tst_psw <>,??0247
 2855+ 2			        endif
 2856+ 1
 2857+ 1			        eot     'c',??0247
 2858+ 2			        putc    #'c'
 2859+ 3  0A1D			??0257:
 2860+ 3			        ;jnb     SCON.1,putc_loop
 2861+ 3			        ;clr     SCON.1
 2862+ 3  0A1D	75 99 63	        mov     SBUF,#'c'
 2863+ 2  0A20	80 06		        sjmp    ??0256
 2864+ 2  0A22			??0247:  putc    #'?'
 2865+ 3  0A22			??0258:
 2866+ 3			        ;jnb     SCON.1,putc_loop
 2867+ 3			        ;clr     SCON.1
 2868+ 3  0A22	75 99 3F	        mov     SBUF,#'?'
 2869+ 2  0A25	75 6E 01	        mov     fail,#001h
 2870+ 2  0A28			??0256:
 2871+ 1
 2872+ 1			        top_ma  orl,r6,??0244,<>
 2873+ 2  0A28	7E 51		        mov     r6,#arg0
 2874+ 2  0A2A	74 92		        mov     a,#arg1
 2875+ 2			        ifnb    <>
 2876+ 2			        set_cy
 2877+ 2			        endif
 2878+ 2  0A2C	4E		        orl      a,r6
 2879+ 2			        ifnb    <>
 2880+ 2			        save_psw
 2881+ 2			        endif
 2882+ 2  0A2D	B4 D3 0D	        cjne    a,#res,??0244
 2883+ 2			        ifnb    <>
 2884+ 2			        tst_psw <>,??0244
 2885+ 2			        endif
 2886+ 1			        top_ma  orl,r7,??0244,<>
 2887+ 2  0A30	7F 51		        mov     r7,#arg0
 2888+ 2  0A32	74 92		        mov     a,#arg1
 2889+ 2			        ifnb    <>
 2890+ 2			        set_cy
 2891+ 2			        endif
 2892+ 2  0A34	4F		        orl      a,r7
 2893+ 2			        ifnb    <>
 2894+ 2			        save_psw
 2895+ 2			        endif
 2896+ 2  0A35	B4 D3 05	        cjne    a,#res,??0244
 2897+ 2			        ifnb    <>
 2898+ 2			        tst_psw <>,??0244
 2899+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 53



 Line  I  Addr  Code            Source

 2900+ 1
 2901+ 1			        eot     'd',??0244
 2902+ 2			        putc    #'d'
 2903+ 3  0A38			??0260:
 2904+ 3			        ;jnb     SCON.1,putc_loop
 2905+ 3			        ;clr     SCON.1
 2906+ 3  0A38	75 99 64	        mov     SBUF,#'d'
 2907+ 2  0A3B	80 06		        sjmp    ??0259
 2908+ 2  0A3D			??0244:  putc    #'?'
 2909+ 3  0A3D			??0261:
 2910+ 3			        ;jnb     SCON.1,putc_loop
 2911+ 3			        ;clr     SCON.1
 2912+ 3  0A3D	75 99 3F	        mov     SBUF,#'?'
 2913+ 2  0A40	75 6E 01	        mov     fail,#001h
 2914+ 2  0A43			??0259:
 2915+ 1
 2916+ 1			        ifb     <>
 2917+ 1
 2918+ 1			        top_mb  orl,a,??0248,<>
 2919+ 2  0A43	74 51		        mov     a,#arg0
 2920+ 2			        ifnb    <>
 2921+ 2			        set_cy
 2922+ 2			        endif
 2923+ 2  0A45	44 92		        orl      a,#arg1
 2924+ 2			        ifnb    <>
 2925+ 2			        save_psw
 2926+ 2			        endif
 2927+ 2  0A47	F5 E0		        mov     ACC,a
 2928+ 2  0A49	B4 D3 11	        cjne    a,#res,??0248
 2929+ 2			        ifnb    <>
 2930+ 2			        tst_psw <>,??0248
 2931+ 2			        endif
 2932+ 1			        top_mb  orl,dir0,??0248,<>
 2933+ 2  0A4C	75 60 51	        mov     dir0,#arg0
 2934+ 2			        ifnb    <>
 2935+ 2			        set_cy
 2936+ 2			        endif
 2937+ 2  0A4F	43 60 92	        orl      dir0,#arg1
 2938+ 2			        ifnb    <>
 2939+ 2			        save_psw
 2940+ 2			        endif
 2941+ 2  0A52	85 60 E0	        mov     ACC,dir0
 2942+ 2  0A55	B4 D3 05	        cjne    a,#res,??0248
 2943+ 2			        ifnb    <>
 2944+ 2			        tst_psw <>,??0248
 2945+ 2			        endif
 2946+ 1
 2947+ 1			        eot     'e',??0248
 2948+ 2			        putc    #'e'
 2949+ 3  0A58			??0263:
 2950+ 3			        ;jnb     SCON.1,putc_loop
 2951+ 3			        ;clr     SCON.1
 2952+ 3  0A58	75 99 65	        mov     SBUF,#'e'
 2953+ 2  0A5B	80 06		        sjmp    ??0262
 2954+ 2  0A5D			??0248:  putc    #'?'
 2955+ 3  0A5D			??0264:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 54



 Line  I  Addr  Code            Source

 2956+ 3			        ;jnb     SCON.1,putc_loop
 2957+ 3			        ;clr     SCON.1
 2958+ 3  0A5D	75 99 3F	        mov     SBUF,#'?'
 2959+ 2  0A60	75 6E 01	        mov     fail,#001h
 2960+ 2  0A63			??0262:
 2961+ 1
 2962+ 1			        top_mc  orl,??0249,<>
 2963+ 2  0A63	75 60 51	        mov     dir0,#arg0
 2964+ 2  0A66	74 92		        mov     a,#arg1
 2965+ 2			        ifnb    <>
 2966+ 2			        set_cy
 2967+ 2			        endif
 2968+ 2  0A68	42 60		        orl      dir0,a
 2969+ 2			        ifnb    <>
 2970+ 2			        save_psw
 2971+ 2			        endif
 2972+ 2  0A6A	E5 60		        mov     a,dir0
 2973+ 2  0A6C	B4 D3 05	        cjne    a,#res,??0249
 2974+ 2			        ifnb    <>
 2975+ 2			        tst_psw <>,??0249
 2976+ 2			        endif
 2977+ 1
 2978+ 1			        eot     'f',??0249
 2979+ 2			        putc    #'f'
 2980+ 3  0A6F			??0266:
 2981+ 3			        ;jnb     SCON.1,putc_loop
 2982+ 3			        ;clr     SCON.1
 2983+ 3  0A6F	75 99 66	        mov     SBUF,#'f'
 2984+ 2  0A72	80 06		        sjmp    ??0265
 2985+ 2  0A74			??0249:  putc    #'?'
 2986+ 3  0A74			??0267:
 2987+ 3			        ;jnb     SCON.1,putc_loop
 2988+ 3			        ;clr     SCON.1
 2989+ 3  0A74	75 99 3F	        mov     SBUF,#'?'
 2990+ 2  0A77	75 6E 01	        mov     fail,#001h
 2991+ 2  0A7A			??0265:
 2992+ 1			        endif
 2993:
 2994:				        put_crlf                    ; end of test series
 2995+ 1			        putc    #13
 2996+ 2  0A7A			??0268:
 2997+ 2			        ;jnb     SCON.1,putc_loop
 2998+ 2			        ;clr     SCON.1
 2999+ 2  0A7A	75 99 0D	        mov     SBUF,#13
 3000+ 1			        putc    #10
 3001+ 2  0A7D			??0269:
 3002+ 2			        ;jnb     SCON.1,putc_loop
 3003+ 2			        ;clr     SCON.1
 3004+ 2  0A7D	75 99 0A	        mov     SBUF,#10
 3005:
 3006:				        ;-- Test series J ------------------------------------------------------
 3007:				        ; XRL
 3008:				        ; (See comments for 'ALU opcode block test')
 3009:
 3010:
 3011:				        putc    #'J'                ; start of test series

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 55



 Line  I  Addr  Code            Source

 3012+ 1  0A80			??0270:
 3013+ 1			        ;jnb     SCON.1,putc_loop
 3014+ 1			        ;clr     SCON.1
 3015+ 1  0A80	75 99 4A	        mov     SBUF,#'J'
 3016:
 3017:				        tst_alu xrl,051h,033h,062h,
 3018+ 1
 3019+ 1	N      0051	        arg0    set 051h
 3020+ 1	N      0033	        arg1    set 033h
 3021+ 1	N      0062	        res     set 062h
 3022+ 1
 3023+ 1			        top_ma  xrl,dir0,??0272,<>
 3024+ 2  0A83	75 60 51	        mov     dir0,#arg0
 3025+ 2  0A86	74 33		        mov     a,#arg1
 3026+ 2			        ifnb    <>
 3027+ 2			        set_cy
 3028+ 2			        endif
 3029+ 2  0A88	65 60		        xrl      a,dir0
 3030+ 2			        ifnb    <>
 3031+ 2			        save_psw
 3032+ 2			        endif
 3033+ 2  0A8A	B4 62 29	        cjne    a,#res,??0272
 3034+ 2			        ifnb    <>
 3035+ 2			        tst_psw <>,??0272
 3036+ 2			        endif
 3037+ 1  0A8D	78 60		        mov     r0,#dir0
 3038+ 1			        top_ma  xrl,@r0,??0272,<>
 3039+ 2  0A8F	76 51		        mov     @r0,#arg0
 3040+ 2  0A91	74 33		        mov     a,#arg1
 3041+ 2			        ifnb    <>
 3042+ 2			        set_cy
 3043+ 2			        endif
 3044+ 2  0A93	66		        xrl      a,@r0
 3045+ 2			        ifnb    <>
 3046+ 2			        save_psw
 3047+ 2			        endif
 3048+ 2  0A94	B4 62 1F	        cjne    a,#res,??0272
 3049+ 2			        ifnb    <>
 3050+ 2			        tst_psw <>,??0272
 3051+ 2			        endif
 3052+ 1  0A97	79 31		        mov     r1,#031h
 3053+ 1			        top_ma  xrl,@r1,??0272,<>
 3054+ 2  0A99	77 51		        mov     @r1,#arg0
 3055+ 2  0A9B	74 33		        mov     a,#arg1
 3056+ 2			        ifnb    <>
 3057+ 2			        set_cy
 3058+ 2			        endif
 3059+ 2  0A9D	67		        xrl      a,@r1
 3060+ 2			        ifnb    <>
 3061+ 2			        save_psw
 3062+ 2			        endif
 3063+ 2  0A9E	B4 62 15	        cjne    a,#res,??0272
 3064+ 2			        ifnb    <>
 3065+ 2			        tst_psw <>,??0272
 3066+ 2			        endif
 3067+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 56



 Line  I  Addr  Code            Source

 3068+ 1			        top_ma  xrl,r0,??0272,<>
 3069+ 2  0AA1	78 51		        mov     r0,#arg0
 3070+ 2  0AA3	74 33		        mov     a,#arg1
 3071+ 2			        ifnb    <>
 3072+ 2			        set_cy
 3073+ 2			        endif
 3074+ 2  0AA5	68		        xrl      a,r0
 3075+ 2			        ifnb    <>
 3076+ 2			        save_psw
 3077+ 2			        endif
 3078+ 2  0AA6	B4 62 0D	        cjne    a,#res,??0272
 3079+ 2			        ifnb    <>
 3080+ 2			        tst_psw <>,??0272
 3081+ 2			        endif
 3082+ 1			        top_ma  xrl,r1,??0272,<>
 3083+ 2  0AA9	79 51		        mov     r1,#arg0
 3084+ 2  0AAB	74 33		        mov     a,#arg1
 3085+ 2			        ifnb    <>
 3086+ 2			        set_cy
 3087+ 2			        endif
 3088+ 2  0AAD	69		        xrl      a,r1
 3089+ 2			        ifnb    <>
 3090+ 2			        save_psw
 3091+ 2			        endif
 3092+ 2  0AAE	B4 62 05	        cjne    a,#res,??0272
 3093+ 2			        ifnb    <>
 3094+ 2			        tst_psw <>,??0272
 3095+ 2			        endif
 3096+ 1
 3097+ 1			        eot     'a',??0272
 3098+ 2			        putc    #'a'
 3099+ 3  0AB1			??0278:
 3100+ 3			        ;jnb     SCON.1,putc_loop
 3101+ 3			        ;clr     SCON.1
 3102+ 3  0AB1	75 99 61	        mov     SBUF,#'a'
 3103+ 2  0AB4	80 06		        sjmp    ??0277
 3104+ 2  0AB6			??0272:  putc    #'?'
 3105+ 3  0AB6			??0279:
 3106+ 3			        ;jnb     SCON.1,putc_loop
 3107+ 3			        ;clr     SCON.1
 3108+ 3  0AB6	75 99 3F	        mov     SBUF,#'?'
 3109+ 2  0AB9	75 6E 01	        mov     fail,#001h
 3110+ 2  0ABC			??0277:
 3111+ 1
 3112+ 1			        top_ma  xrl,r2,??0273,<>
 3113+ 2  0ABC	7A 51		        mov     r2,#arg0
 3114+ 2  0ABE	74 33		        mov     a,#arg1
 3115+ 2			        ifnb    <>
 3116+ 2			        set_cy
 3117+ 2			        endif
 3118+ 2  0AC0	6A		        xrl      a,r2
 3119+ 2			        ifnb    <>
 3120+ 2			        save_psw
 3121+ 2			        endif
 3122+ 2  0AC1	B4 62 0D	        cjne    a,#res,??0273
 3123+ 2			        ifnb    <>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 57



 Line  I  Addr  Code            Source

 3124+ 2			        tst_psw <>,??0273
 3125+ 2			        endif
 3126+ 1			        top_ma  xrl,r3,??0273,<>
 3127+ 2  0AC4	7B 51		        mov     r3,#arg0
 3128+ 2  0AC6	74 33		        mov     a,#arg1
 3129+ 2			        ifnb    <>
 3130+ 2			        set_cy
 3131+ 2			        endif
 3132+ 2  0AC8	6B		        xrl      a,r3
 3133+ 2			        ifnb    <>
 3134+ 2			        save_psw
 3135+ 2			        endif
 3136+ 2  0AC9	B4 62 05	        cjne    a,#res,??0273
 3137+ 2			        ifnb    <>
 3138+ 2			        tst_psw <>,??0273
 3139+ 2			        endif
 3140+ 1
 3141+ 1			        eot     'b',??0273
 3142+ 2			        putc    #'b'
 3143+ 3  0ACC			??0281:
 3144+ 3			        ;jnb     SCON.1,putc_loop
 3145+ 3			        ;clr     SCON.1
 3146+ 3  0ACC	75 99 62	        mov     SBUF,#'b'
 3147+ 2  0ACF	80 06		        sjmp    ??0280
 3148+ 2  0AD1			??0273:  putc    #'?'
 3149+ 3  0AD1			??0282:
 3150+ 3			        ;jnb     SCON.1,putc_loop
 3151+ 3			        ;clr     SCON.1
 3152+ 3  0AD1	75 99 3F	        mov     SBUF,#'?'
 3153+ 2  0AD4	75 6E 01	        mov     fail,#001h
 3154+ 2  0AD7			??0280:
 3155+ 1
 3156+ 1			        top_ma  xrl,r4,??0274,<>
 3157+ 2  0AD7	7C 51		        mov     r4,#arg0
 3158+ 2  0AD9	74 33		        mov     a,#arg1
 3159+ 2			        ifnb    <>
 3160+ 2			        set_cy
 3161+ 2			        endif
 3162+ 2  0ADB	6C		        xrl      a,r4
 3163+ 2			        ifnb    <>
 3164+ 2			        save_psw
 3165+ 2			        endif
 3166+ 2  0ADC	B4 62 0D	        cjne    a,#res,??0274
 3167+ 2			        ifnb    <>
 3168+ 2			        tst_psw <>,??0274
 3169+ 2			        endif
 3170+ 1			        top_ma  xrl,r5,??0274,<>
 3171+ 2  0ADF	7D 51		        mov     r5,#arg0
 3172+ 2  0AE1	74 33		        mov     a,#arg1
 3173+ 2			        ifnb    <>
 3174+ 2			        set_cy
 3175+ 2			        endif
 3176+ 2  0AE3	6D		        xrl      a,r5
 3177+ 2			        ifnb    <>
 3178+ 2			        save_psw
 3179+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 58



 Line  I  Addr  Code            Source

 3180+ 2  0AE4	B4 62 05	        cjne    a,#res,??0274
 3181+ 2			        ifnb    <>
 3182+ 2			        tst_psw <>,??0274
 3183+ 2			        endif
 3184+ 1
 3185+ 1			        eot     'c',??0274
 3186+ 2			        putc    #'c'
 3187+ 3  0AE7			??0284:
 3188+ 3			        ;jnb     SCON.1,putc_loop
 3189+ 3			        ;clr     SCON.1
 3190+ 3  0AE7	75 99 63	        mov     SBUF,#'c'
 3191+ 2  0AEA	80 06		        sjmp    ??0283
 3192+ 2  0AEC			??0274:  putc    #'?'
 3193+ 3  0AEC			??0285:
 3194+ 3			        ;jnb     SCON.1,putc_loop
 3195+ 3			        ;clr     SCON.1
 3196+ 3  0AEC	75 99 3F	        mov     SBUF,#'?'
 3197+ 2  0AEF	75 6E 01	        mov     fail,#001h
 3198+ 2  0AF2			??0283:
 3199+ 1
 3200+ 1			        top_ma  xrl,r6,??0271,<>
 3201+ 2  0AF2	7E 51		        mov     r6,#arg0
 3202+ 2  0AF4	74 33		        mov     a,#arg1
 3203+ 2			        ifnb    <>
 3204+ 2			        set_cy
 3205+ 2			        endif
 3206+ 2  0AF6	6E		        xrl      a,r6
 3207+ 2			        ifnb    <>
 3208+ 2			        save_psw
 3209+ 2			        endif
 3210+ 2  0AF7	B4 62 0D	        cjne    a,#res,??0271
 3211+ 2			        ifnb    <>
 3212+ 2			        tst_psw <>,??0271
 3213+ 2			        endif
 3214+ 1			        top_ma  xrl,r7,??0271,<>
 3215+ 2  0AFA	7F 51		        mov     r7,#arg0
 3216+ 2  0AFC	74 33		        mov     a,#arg1
 3217+ 2			        ifnb    <>
 3218+ 2			        set_cy
 3219+ 2			        endif
 3220+ 2  0AFE	6F		        xrl      a,r7
 3221+ 2			        ifnb    <>
 3222+ 2			        save_psw
 3223+ 2			        endif
 3224+ 2  0AFF	B4 62 05	        cjne    a,#res,??0271
 3225+ 2			        ifnb    <>
 3226+ 2			        tst_psw <>,??0271
 3227+ 2			        endif
 3228+ 1
 3229+ 1			        eot     'd',??0271
 3230+ 2			        putc    #'d'
 3231+ 3  0B02			??0287:
 3232+ 3			        ;jnb     SCON.1,putc_loop
 3233+ 3			        ;clr     SCON.1
 3234+ 3  0B02	75 99 64	        mov     SBUF,#'d'
 3235+ 2  0B05	80 06		        sjmp    ??0286

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 59



 Line  I  Addr  Code            Source

 3236+ 2  0B07			??0271:  putc    #'?'
 3237+ 3  0B07			??0288:
 3238+ 3			        ;jnb     SCON.1,putc_loop
 3239+ 3			        ;clr     SCON.1
 3240+ 3  0B07	75 99 3F	        mov     SBUF,#'?'
 3241+ 2  0B0A	75 6E 01	        mov     fail,#001h
 3242+ 2  0B0D			??0286:
 3243+ 1
 3244+ 1			        ifb     <>
 3245+ 1
 3246+ 1			        top_mb  xrl,a,??0275,<>
 3247+ 2  0B0D	74 51		        mov     a,#arg0
 3248+ 2			        ifnb    <>
 3249+ 2			        set_cy
 3250+ 2			        endif
 3251+ 2  0B0F	64 33		        xrl      a,#arg1
 3252+ 2			        ifnb    <>
 3253+ 2			        save_psw
 3254+ 2			        endif
 3255+ 2  0B11	F5 E0		        mov     ACC,a
 3256+ 2  0B13	B4 62 11	        cjne    a,#res,??0275
 3257+ 2			        ifnb    <>
 3258+ 2			        tst_psw <>,??0275
 3259+ 2			        endif
 3260+ 1			        top_mb  xrl,dir0,??0275,<>
 3261+ 2  0B16	75 60 51	        mov     dir0,#arg0
 3262+ 2			        ifnb    <>
 3263+ 2			        set_cy
 3264+ 2			        endif
 3265+ 2  0B19	63 60 33	        xrl      dir0,#arg1
 3266+ 2			        ifnb    <>
 3267+ 2			        save_psw
 3268+ 2			        endif
 3269+ 2  0B1C	85 60 E0	        mov     ACC,dir0
 3270+ 2  0B1F	B4 62 05	        cjne    a,#res,??0275
 3271+ 2			        ifnb    <>
 3272+ 2			        tst_psw <>,??0275
 3273+ 2			        endif
 3274+ 1
 3275+ 1			        eot     'e',??0275
 3276+ 2			        putc    #'e'
 3277+ 3  0B22			??0290:
 3278+ 3			        ;jnb     SCON.1,putc_loop
 3279+ 3			        ;clr     SCON.1
 3280+ 3  0B22	75 99 65	        mov     SBUF,#'e'
 3281+ 2  0B25	80 06		        sjmp    ??0289
 3282+ 2  0B27			??0275:  putc    #'?'
 3283+ 3  0B27			??0291:
 3284+ 3			        ;jnb     SCON.1,putc_loop
 3285+ 3			        ;clr     SCON.1
 3286+ 3  0B27	75 99 3F	        mov     SBUF,#'?'
 3287+ 2  0B2A	75 6E 01	        mov     fail,#001h
 3288+ 2  0B2D			??0289:
 3289+ 1
 3290+ 1			        top_mc  xrl,??0276,<>
 3291+ 2  0B2D	75 60 51	        mov     dir0,#arg0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 60



 Line  I  Addr  Code            Source

 3292+ 2  0B30	74 33		        mov     a,#arg1
 3293+ 2			        ifnb    <>
 3294+ 2			        set_cy
 3295+ 2			        endif
 3296+ 2  0B32	62 60		        xrl      dir0,a
 3297+ 2			        ifnb    <>
 3298+ 2			        save_psw
 3299+ 2			        endif
 3300+ 2  0B34	E5 60		        mov     a,dir0
 3301+ 2  0B36	B4 62 05	        cjne    a,#res,??0276
 3302+ 2			        ifnb    <>
 3303+ 2			        tst_psw <>,??0276
 3304+ 2			        endif
 3305+ 1
 3306+ 1			        eot     'f',??0276
 3307+ 2			        putc    #'f'
 3308+ 3  0B39			??0293:
 3309+ 3			        ;jnb     SCON.1,putc_loop
 3310+ 3			        ;clr     SCON.1
 3311+ 3  0B39	75 99 66	        mov     SBUF,#'f'
 3312+ 2  0B3C	80 06		        sjmp    ??0292
 3313+ 2  0B3E			??0276:  putc    #'?'
 3314+ 3  0B3E			??0294:
 3315+ 3			        ;jnb     SCON.1,putc_loop
 3316+ 3			        ;clr     SCON.1
 3317+ 3  0B3E	75 99 3F	        mov     SBUF,#'?'
 3318+ 2  0B41	75 6E 01	        mov     fail,#001h
 3319+ 2  0B44			??0292:
 3320+ 1			        endif
 3321:
 3322:				        put_crlf                    ; end of test series
 3323+ 1			        putc    #13
 3324+ 2  0B44			??0295:
 3325+ 2			        ;jnb     SCON.1,putc_loop
 3326+ 2			        ;clr     SCON.1
 3327+ 2  0B44	75 99 0D	        mov     SBUF,#13
 3328+ 1			        putc    #10
 3329+ 2  0B47			??0296:
 3330+ 2			        ;jnb     SCON.1,putc_loop
 3331+ 2			        ;clr     SCON.1
 3332+ 2  0B47	75 99 0A	        mov     SBUF,#10
 3333:
 3334:				        ;-- Test series K ------------------------------------------------------
 3335:				        ; DJNZ
 3336:				        ; a.- <DJNZ dir,rel>, <DJNZ Rn,rel> tested only with small negative rels
 3337:
 3338:				        putc    #'K'                ; start of test series
 3339+ 1  0B4A			??0297:
 3340+ 1			        ;jnb     SCON.1,putc_loop
 3341+ 1			        ;clr     SCON.1
 3342+ 1  0B4A	75 99 4B	        mov     SBUF,#'K'
 3343:
 3344:				        ;tk_ma: test DJNZ with parametrizable addressing mode
 3345:				tk_ma   macro   dst,error_loc
 3346:				        local   tk_ma0
 3347:				nloops  set     3

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 61



 Line  I  Addr  Code            Source

 3348:				        mov     dst,#nloops         ; We'll perform a fixed no. of iterations
 3349:				        mov     a,#(nloops+1)       ; A will or our control counter
 3350:				tk_ma0: dec     a
 3351:				        jz      error_loc           ; Break loop after nloops iterations
 3352:				        djnz    dst,tk_ma0          ; Test DJNZ instruction
 3353:				        cjne    a,#001,error_loc    ; Verify number of iterations is ok
 3354:				        endm
 3355:
 3356:				        tk_ma   dir0,tk_a0          ; <DJNZ dir,rel>
 3357+ 1	N      0003	nloops  set     3
 3358+ 1  0B4D	75 60 03	        mov     dir0,#nloops         ; We'll perform a fixed no. of iterations
 3359+ 1  0B50	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3360+ 1  0B52	14		??0298: dec     a
 3361+ 1  0B53	60 0B		        jz      tk_a0           ; Break loop after nloops iterations
 3362+ 1  0B55	D5 60 FA	        djnz    dir0,??0298          ; Test DJNZ instruction
 3363+ 1  0B58	B4 01 05	        cjne    a,#001,tk_a0    ; Verify number of iterations is ok
 3364:
 3365:				        eot     'a',tk_a0
 3366+ 1			        putc    #'a'
 3367+ 2  0B5B			??0300:
 3368+ 2			        ;jnb     SCON.1,putc_loop
 3369+ 2			        ;clr     SCON.1
 3370+ 2  0B5B	75 99 61	        mov     SBUF,#'a'
 3371+ 1  0B5E	80 06		        sjmp    ??0299
 3372+ 1  0B60			tk_a0:  putc    #'?'
 3373+ 2  0B60			??0301:
 3374+ 2			        ;jnb     SCON.1,putc_loop
 3375+ 2			        ;clr     SCON.1
 3376+ 2  0B60	75 99 3F	        mov     SBUF,#'?'
 3377+ 1  0B63	75 6E 01	        mov     fail,#001h
 3378+ 1  0B66			??0299:
 3379:
 3380:				        tk_ma   r0,tk_b0            ; <DJNZ Rn,rel>
 3381+ 1	N      0003	nloops  set     3
 3382+ 1  0B66	78 03		        mov     r0,#nloops         ; We'll perform a fixed no. of iterations
 3383+ 1  0B68	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3384+ 1  0B6A	14		??0302: dec     a
 3385+ 1  0B6B	60 5E		        jz      tk_b0           ; Break loop after nloops iterations
 3386+ 1  0B6D	D8 FB		        djnz    r0,??0302          ; Test DJNZ instruction
 3387+ 1  0B6F	B4 01 59	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3388:				        tk_ma   r1,tk_b0
 3389+ 1	N      0003	nloops  set     3
 3390+ 1  0B72	79 03		        mov     r1,#nloops         ; We'll perform a fixed no. of iterations
 3391+ 1  0B74	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3392+ 1  0B76	14		??0303: dec     a
 3393+ 1  0B77	60 52		        jz      tk_b0           ; Break loop after nloops iterations
 3394+ 1  0B79	D9 FB		        djnz    r1,??0303          ; Test DJNZ instruction
 3395+ 1  0B7B	B4 01 4D	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3396:				        tk_ma   r2,tk_b0
 3397+ 1	N      0003	nloops  set     3
 3398+ 1  0B7E	7A 03		        mov     r2,#nloops         ; We'll perform a fixed no. of iterations
 3399+ 1  0B80	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3400+ 1  0B82	14		??0304: dec     a
 3401+ 1  0B83	60 46		        jz      tk_b0           ; Break loop after nloops iterations
 3402+ 1  0B85	DA FB		        djnz    r2,??0304          ; Test DJNZ instruction
 3403+ 1  0B87	B4 01 41	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 62



 Line  I  Addr  Code            Source

 3404:				        tk_ma   r3,tk_b0
 3405+ 1	N      0003	nloops  set     3
 3406+ 1  0B8A	7B 03		        mov     r3,#nloops         ; We'll perform a fixed no. of iterations
 3407+ 1  0B8C	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3408+ 1  0B8E	14		??0305: dec     a
 3409+ 1  0B8F	60 3A		        jz      tk_b0           ; Break loop after nloops iterations
 3410+ 1  0B91	DB FB		        djnz    r3,??0305          ; Test DJNZ instruction
 3411+ 1  0B93	B4 01 35	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3412:				        tk_ma   r4,tk_b0
 3413+ 1	N      0003	nloops  set     3
 3414+ 1  0B96	7C 03		        mov     r4,#nloops         ; We'll perform a fixed no. of iterations
 3415+ 1  0B98	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3416+ 1  0B9A	14		??0306: dec     a
 3417+ 1  0B9B	60 2E		        jz      tk_b0           ; Break loop after nloops iterations
 3418+ 1  0B9D	DC FB		        djnz    r4,??0306          ; Test DJNZ instruction
 3419+ 1  0B9F	B4 01 29	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3420:				        tk_ma   r5,tk_b0
 3421+ 1	N      0003	nloops  set     3
 3422+ 1  0BA2	7D 03		        mov     r5,#nloops         ; We'll perform a fixed no. of iterations
 3423+ 1  0BA4	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3424+ 1  0BA6	14		??0307: dec     a
 3425+ 1  0BA7	60 22		        jz      tk_b0           ; Break loop after nloops iterations
 3426+ 1  0BA9	DD FB		        djnz    r5,??0307          ; Test DJNZ instruction
 3427+ 1  0BAB	B4 01 1D	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3428:				        tk_ma   r6,tk_b0
 3429+ 1	N      0003	nloops  set     3
 3430+ 1  0BAE	7E 03		        mov     r6,#nloops         ; We'll perform a fixed no. of iterations
 3431+ 1  0BB0	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3432+ 1  0BB2	14		??0308: dec     a
 3433+ 1  0BB3	60 16		        jz      tk_b0           ; Break loop after nloops iterations
 3434+ 1  0BB5	DE FB		        djnz    r6,??0308          ; Test DJNZ instruction
 3435+ 1  0BB7	B4 01 11	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3436:				        tk_ma   r7,tk_b0
 3437+ 1	N      0003	nloops  set     3
 3438+ 1  0BBA	7F 03		        mov     r7,#nloops         ; We'll perform a fixed no. of iterations
 3439+ 1  0BBC	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3440+ 1  0BBE	14		??0309: dec     a
 3441+ 1  0BBF	60 0A		        jz      tk_b0           ; Break loop after nloops iterations
 3442+ 1  0BC1	DF FB		        djnz    r7,??0309          ; Test DJNZ instruction
 3443+ 1  0BC3	B4 01 05	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3444:
 3445:				        eot     'b',tk_b0
 3446+ 1			        putc    #'b'
 3447+ 2  0BC6			??0311:
 3448+ 2			        ;jnb     SCON.1,putc_loop
 3449+ 2			        ;clr     SCON.1
 3450+ 2  0BC6	75 99 62	        mov     SBUF,#'b'
 3451+ 1  0BC9	80 06		        sjmp    ??0310
 3452+ 1  0BCB			tk_b0:  putc    #'?'
 3453+ 2  0BCB			??0312:
 3454+ 2			        ;jnb     SCON.1,putc_loop
 3455+ 2			        ;clr     SCON.1
 3456+ 2  0BCB	75 99 3F	        mov     SBUF,#'?'
 3457+ 1  0BCE	75 6E 01	        mov     fail,#001h
 3458+ 1  0BD1			??0310:
 3459:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 63



 Line  I  Addr  Code            Source

 3460:				        put_crlf                    ; end of test series
 3461+ 1			        putc    #13
 3462+ 2  0BD1			??0313:
 3463+ 2			        ;jnb     SCON.1,putc_loop
 3464+ 2			        ;clr     SCON.1
 3465+ 2  0BD1	75 99 0D	        mov     SBUF,#13
 3466+ 1			        putc    #10
 3467+ 2  0BD4			??0314:
 3468+ 2			        ;jnb     SCON.1,putc_loop
 3469+ 2			        ;clr     SCON.1
 3470+ 2  0BD4	75 99 0A	        mov     SBUF,#10
 3471:
 3472:
 3473:				        ;-- Test series L ------------------------------------------------------
 3474:				        ; ADD
 3475:				        ; (See comments for 'ALU opcode block test')
 3476:
 3477:
 3478:				        putc    #'L'                ; start of test series
 3479+ 1  0BD7			??0315:
 3480+ 1			        ;jnb     SCON.1,putc_loop
 3481+ 1			        ;clr     SCON.1
 3482+ 1  0BD7	75 99 4C	        mov     SBUF,#'L'
 3483:
 3484:				        putc    #'0'
 3485+ 1  0BDA			??0316:
 3486+ 1			        ;jnb     SCON.1,putc_loop
 3487+ 1			        ;clr     SCON.1
 3488+ 1  0BDA	75 99 30	        mov     SBUF,#'0'
 3489:				        tst_alu add,051h,033h,084h,004h     ; /CY /AC  OV
 3490+ 1
 3491+ 1	N      0051	        arg0    set 051h
 3492+ 1	N      0033	        arg1    set 033h
 3493+ 1	N      0084	        res     set 084h
 3494+ 1
 3495+ 1			        top_ma  add,dir0,??0318,<004h>
 3496+ 2  0BDD	75 60 51	        mov     dir0,#arg0
 3497+ 2  0BE0	74 33		        mov     a,#arg1
 3498+ 2			        ifnb    <004h>
 3499+ 2			        set_cy  004h
 3500+ 3	N      0000	??0323  set     (004h and 1)
 3501+ 3	N      0000	        if      ??0323 eq 1
 3502+ 3			        setb    c
 3503+ 3			        else
 3504+ 3  0BE2	C3		        clr     c
 3505+ 3			        endif
 3506+ 2			        endif
 3507+ 2  0BE3	25 60		        add      a,dir0
 3508+ 2			        ifnb    <004h>
 3509+ 2			        save_psw
 3510+ 3  0BE5	85 D0 70	        mov     saved_psw,PSW
 3511+ 2			        endif
 3512+ 2  0BE8	B4 84 6B	        cjne    a,#res,??0318
 3513+ 2			        ifnb    <004h>
 3514+ 2			        tst_psw <004h>,??0318
 3515+ 3  0BEB	E5 70		        mov     a,saved_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 64



 Line  I  Addr  Code            Source

 3516+ 3  0BED	54 C4		        anl     a,#0c4h
 3517+ 3  0BEF	64 04		        xrl     a,#004h
 3518+ 3  0BF1	54 FE		        anl     a,#0feh
 3519+ 3  0BF3	70 61		        jnz     ??0318
 3520+ 2			        endif
 3521+ 1  0BF5	78 60		        mov     r0,#dir0
 3522+ 1			        top_ma  add,@r0,??0318,<004h>
 3523+ 2  0BF7	76 51		        mov     @r0,#arg0
 3524+ 2  0BF9	74 33		        mov     a,#arg1
 3525+ 2			        ifnb    <004h>
 3526+ 2			        set_cy  004h
 3527+ 3	N      0000	??0324  set     (004h and 1)
 3528+ 3	N      0000	        if      ??0324 eq 1
 3529+ 3			        setb    c
 3530+ 3			        else
 3531+ 3  0BFB	C3		        clr     c
 3532+ 3			        endif
 3533+ 2			        endif
 3534+ 2  0BFC	26		        add      a,@r0
 3535+ 2			        ifnb    <004h>
 3536+ 2			        save_psw
 3537+ 3  0BFD	85 D0 70	        mov     saved_psw,PSW
 3538+ 2			        endif
 3539+ 2  0C00	B4 84 53	        cjne    a,#res,??0318
 3540+ 2			        ifnb    <004h>
 3541+ 2			        tst_psw <004h>,??0318
 3542+ 3  0C03	E5 70		        mov     a,saved_psw
 3543+ 3  0C05	54 C4		        anl     a,#0c4h
 3544+ 3  0C07	64 04		        xrl     a,#004h
 3545+ 3  0C09	54 FE		        anl     a,#0feh
 3546+ 3  0C0B	70 49		        jnz     ??0318
 3547+ 2			        endif
 3548+ 1  0C0D	79 31		        mov     r1,#031h
 3549+ 1			        top_ma  add,@r1,??0318,<004h>
 3550+ 2  0C0F	77 51		        mov     @r1,#arg0
 3551+ 2  0C11	74 33		        mov     a,#arg1
 3552+ 2			        ifnb    <004h>
 3553+ 2			        set_cy  004h
 3554+ 3	N      0000	??0325  set     (004h and 1)
 3555+ 3	N      0000	        if      ??0325 eq 1
 3556+ 3			        setb    c
 3557+ 3			        else
 3558+ 3  0C13	C3		        clr     c
 3559+ 3			        endif
 3560+ 2			        endif
 3561+ 2  0C14	27		        add      a,@r1
 3562+ 2			        ifnb    <004h>
 3563+ 2			        save_psw
 3564+ 3  0C15	85 D0 70	        mov     saved_psw,PSW
 3565+ 2			        endif
 3566+ 2  0C18	B4 84 3B	        cjne    a,#res,??0318
 3567+ 2			        ifnb    <004h>
 3568+ 2			        tst_psw <004h>,??0318
 3569+ 3  0C1B	E5 70		        mov     a,saved_psw
 3570+ 3  0C1D	54 C4		        anl     a,#0c4h
 3571+ 3  0C1F	64 04		        xrl     a,#004h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 65



 Line  I  Addr  Code            Source

 3572+ 3  0C21	54 FE		        anl     a,#0feh
 3573+ 3  0C23	70 31		        jnz     ??0318
 3574+ 2			        endif
 3575+ 1
 3576+ 1			        top_ma  add,r0,??0318,<004h>
 3577+ 2  0C25	78 51		        mov     r0,#arg0
 3578+ 2  0C27	74 33		        mov     a,#arg1
 3579+ 2			        ifnb    <004h>
 3580+ 2			        set_cy  004h
 3581+ 3	N      0000	??0326  set     (004h and 1)
 3582+ 3	N      0000	        if      ??0326 eq 1
 3583+ 3			        setb    c
 3584+ 3			        else
 3585+ 3  0C29	C3		        clr     c
 3586+ 3			        endif
 3587+ 2			        endif
 3588+ 2  0C2A	28		        add      a,r0
 3589+ 2			        ifnb    <004h>
 3590+ 2			        save_psw
 3591+ 3  0C2B	85 D0 70	        mov     saved_psw,PSW
 3592+ 2			        endif
 3593+ 2  0C2E	B4 84 25	        cjne    a,#res,??0318
 3594+ 2			        ifnb    <004h>
 3595+ 2			        tst_psw <004h>,??0318
 3596+ 3  0C31	E5 70		        mov     a,saved_psw
 3597+ 3  0C33	54 C4		        anl     a,#0c4h
 3598+ 3  0C35	64 04		        xrl     a,#004h
 3599+ 3  0C37	54 FE		        anl     a,#0feh
 3600+ 3  0C39	70 1B		        jnz     ??0318
 3601+ 2			        endif
 3602+ 1			        top_ma  add,r1,??0318,<004h>
 3603+ 2  0C3B	79 51		        mov     r1,#arg0
 3604+ 2  0C3D	74 33		        mov     a,#arg1
 3605+ 2			        ifnb    <004h>
 3606+ 2			        set_cy  004h
 3607+ 3	N      0000	??0327  set     (004h and 1)
 3608+ 3	N      0000	        if      ??0327 eq 1
 3609+ 3			        setb    c
 3610+ 3			        else
 3611+ 3  0C3F	C3		        clr     c
 3612+ 3			        endif
 3613+ 2			        endif
 3614+ 2  0C40	29		        add      a,r1
 3615+ 2			        ifnb    <004h>
 3616+ 2			        save_psw
 3617+ 3  0C41	85 D0 70	        mov     saved_psw,PSW
 3618+ 2			        endif
 3619+ 2  0C44	B4 84 0F	        cjne    a,#res,??0318
 3620+ 2			        ifnb    <004h>
 3621+ 2			        tst_psw <004h>,??0318
 3622+ 3  0C47	E5 70		        mov     a,saved_psw
 3623+ 3  0C49	54 C4		        anl     a,#0c4h
 3624+ 3  0C4B	64 04		        xrl     a,#004h
 3625+ 3  0C4D	54 FE		        anl     a,#0feh
 3626+ 3  0C4F	70 05		        jnz     ??0318
 3627+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 66



 Line  I  Addr  Code            Source

 3628+ 1
 3629+ 1			        eot     'a',??0318
 3630+ 2			        putc    #'a'
 3631+ 3  0C51			??0329:
 3632+ 3			        ;jnb     SCON.1,putc_loop
 3633+ 3			        ;clr     SCON.1
 3634+ 3  0C51	75 99 61	        mov     SBUF,#'a'
 3635+ 2  0C54	80 06		        sjmp    ??0328
 3636+ 2  0C56			??0318:  putc    #'?'
 3637+ 3  0C56			??0330:
 3638+ 3			        ;jnb     SCON.1,putc_loop
 3639+ 3			        ;clr     SCON.1
 3640+ 3  0C56	75 99 3F	        mov     SBUF,#'?'
 3641+ 2  0C59	75 6E 01	        mov     fail,#001h
 3642+ 2  0C5C			??0328:
 3643+ 1
 3644+ 1			        top_ma  add,r2,??0319,<004h>
 3645+ 2  0C5C	7A 51		        mov     r2,#arg0
 3646+ 2  0C5E	74 33		        mov     a,#arg1
 3647+ 2			        ifnb    <004h>
 3648+ 2			        set_cy  004h
 3649+ 3	N      0000	??0331  set     (004h and 1)
 3650+ 3	N      0000	        if      ??0331 eq 1
 3651+ 3			        setb    c
 3652+ 3			        else
 3653+ 3  0C60	C3		        clr     c
 3654+ 3			        endif
 3655+ 2			        endif
 3656+ 2  0C61	2A		        add      a,r2
 3657+ 2			        ifnb    <004h>
 3658+ 2			        save_psw
 3659+ 3  0C62	85 D0 70	        mov     saved_psw,PSW
 3660+ 2			        endif
 3661+ 2  0C65	B4 84 25	        cjne    a,#res,??0319
 3662+ 2			        ifnb    <004h>
 3663+ 2			        tst_psw <004h>,??0319
 3664+ 3  0C68	E5 70		        mov     a,saved_psw
 3665+ 3  0C6A	54 C4		        anl     a,#0c4h
 3666+ 3  0C6C	64 04		        xrl     a,#004h
 3667+ 3  0C6E	54 FE		        anl     a,#0feh
 3668+ 3  0C70	70 1B		        jnz     ??0319
 3669+ 2			        endif
 3670+ 1			        top_ma  add,r3,??0319,<004h>
 3671+ 2  0C72	7B 51		        mov     r3,#arg0
 3672+ 2  0C74	74 33		        mov     a,#arg1
 3673+ 2			        ifnb    <004h>
 3674+ 2			        set_cy  004h
 3675+ 3	N      0000	??0332  set     (004h and 1)
 3676+ 3	N      0000	        if      ??0332 eq 1
 3677+ 3			        setb    c
 3678+ 3			        else
 3679+ 3  0C76	C3		        clr     c
 3680+ 3			        endif
 3681+ 2			        endif
 3682+ 2  0C77	2B		        add      a,r3
 3683+ 2			        ifnb    <004h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 67



 Line  I  Addr  Code            Source

 3684+ 2			        save_psw
 3685+ 3  0C78	85 D0 70	        mov     saved_psw,PSW
 3686+ 2			        endif
 3687+ 2  0C7B	B4 84 0F	        cjne    a,#res,??0319
 3688+ 2			        ifnb    <004h>
 3689+ 2			        tst_psw <004h>,??0319
 3690+ 3  0C7E	E5 70		        mov     a,saved_psw
 3691+ 3  0C80	54 C4		        anl     a,#0c4h
 3692+ 3  0C82	64 04		        xrl     a,#004h
 3693+ 3  0C84	54 FE		        anl     a,#0feh
 3694+ 3  0C86	70 05		        jnz     ??0319
 3695+ 2			        endif
 3696+ 1
 3697+ 1			        eot     'b',??0319
 3698+ 2			        putc    #'b'
 3699+ 3  0C88			??0334:
 3700+ 3			        ;jnb     SCON.1,putc_loop
 3701+ 3			        ;clr     SCON.1
 3702+ 3  0C88	75 99 62	        mov     SBUF,#'b'
 3703+ 2  0C8B	80 06		        sjmp    ??0333
 3704+ 2  0C8D			??0319:  putc    #'?'
 3705+ 3  0C8D			??0335:
 3706+ 3			        ;jnb     SCON.1,putc_loop
 3707+ 3			        ;clr     SCON.1
 3708+ 3  0C8D	75 99 3F	        mov     SBUF,#'?'
 3709+ 2  0C90	75 6E 01	        mov     fail,#001h
 3710+ 2  0C93			??0333:
 3711+ 1
 3712+ 1			        top_ma  add,r4,??0320,<004h>
 3713+ 2  0C93	7C 51		        mov     r4,#arg0
 3714+ 2  0C95	74 33		        mov     a,#arg1
 3715+ 2			        ifnb    <004h>
 3716+ 2			        set_cy  004h
 3717+ 3	N      0000	??0336  set     (004h and 1)
 3718+ 3	N      0000	        if      ??0336 eq 1
 3719+ 3			        setb    c
 3720+ 3			        else
 3721+ 3  0C97	C3		        clr     c
 3722+ 3			        endif
 3723+ 2			        endif
 3724+ 2  0C98	2C		        add      a,r4
 3725+ 2			        ifnb    <004h>
 3726+ 2			        save_psw
 3727+ 3  0C99	85 D0 70	        mov     saved_psw,PSW
 3728+ 2			        endif
 3729+ 2  0C9C	B4 84 25	        cjne    a,#res,??0320
 3730+ 2			        ifnb    <004h>
 3731+ 2			        tst_psw <004h>,??0320
 3732+ 3  0C9F	E5 70		        mov     a,saved_psw
 3733+ 3  0CA1	54 C4		        anl     a,#0c4h
 3734+ 3  0CA3	64 04		        xrl     a,#004h
 3735+ 3  0CA5	54 FE		        anl     a,#0feh
 3736+ 3  0CA7	70 1B		        jnz     ??0320
 3737+ 2			        endif
 3738+ 1			        top_ma  add,r5,??0320,<004h>
 3739+ 2  0CA9	7D 51		        mov     r5,#arg0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 68



 Line  I  Addr  Code            Source

 3740+ 2  0CAB	74 33		        mov     a,#arg1
 3741+ 2			        ifnb    <004h>
 3742+ 2			        set_cy  004h
 3743+ 3	N      0000	??0337  set     (004h and 1)
 3744+ 3	N      0000	        if      ??0337 eq 1
 3745+ 3			        setb    c
 3746+ 3			        else
 3747+ 3  0CAD	C3		        clr     c
 3748+ 3			        endif
 3749+ 2			        endif
 3750+ 2  0CAE	2D		        add      a,r5
 3751+ 2			        ifnb    <004h>
 3752+ 2			        save_psw
 3753+ 3  0CAF	85 D0 70	        mov     saved_psw,PSW
 3754+ 2			        endif
 3755+ 2  0CB2	B4 84 0F	        cjne    a,#res,??0320
 3756+ 2			        ifnb    <004h>
 3757+ 2			        tst_psw <004h>,??0320
 3758+ 3  0CB5	E5 70		        mov     a,saved_psw
 3759+ 3  0CB7	54 C4		        anl     a,#0c4h
 3760+ 3  0CB9	64 04		        xrl     a,#004h
 3761+ 3  0CBB	54 FE		        anl     a,#0feh
 3762+ 3  0CBD	70 05		        jnz     ??0320
 3763+ 2			        endif
 3764+ 1
 3765+ 1			        eot     'c',??0320
 3766+ 2			        putc    #'c'
 3767+ 3  0CBF			??0339:
 3768+ 3			        ;jnb     SCON.1,putc_loop
 3769+ 3			        ;clr     SCON.1
 3770+ 3  0CBF	75 99 63	        mov     SBUF,#'c'
 3771+ 2  0CC2	80 06		        sjmp    ??0338
 3772+ 2  0CC4			??0320:  putc    #'?'
 3773+ 3  0CC4			??0340:
 3774+ 3			        ;jnb     SCON.1,putc_loop
 3775+ 3			        ;clr     SCON.1
 3776+ 3  0CC4	75 99 3F	        mov     SBUF,#'?'
 3777+ 2  0CC7	75 6E 01	        mov     fail,#001h
 3778+ 2  0CCA			??0338:
 3779+ 1
 3780+ 1			        top_ma  add,r6,??0317,<004h>
 3781+ 2  0CCA	7E 51		        mov     r6,#arg0
 3782+ 2  0CCC	74 33		        mov     a,#arg1
 3783+ 2			        ifnb    <004h>
 3784+ 2			        set_cy  004h
 3785+ 3	N      0000	??0341  set     (004h and 1)
 3786+ 3	N      0000	        if      ??0341 eq 1
 3787+ 3			        setb    c
 3788+ 3			        else
 3789+ 3  0CCE	C3		        clr     c
 3790+ 3			        endif
 3791+ 2			        endif
 3792+ 2  0CCF	2E		        add      a,r6
 3793+ 2			        ifnb    <004h>
 3794+ 2			        save_psw
 3795+ 3  0CD0	85 D0 70	        mov     saved_psw,PSW

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 69



 Line  I  Addr  Code            Source

 3796+ 2			        endif
 3797+ 2  0CD3	B4 84 25	        cjne    a,#res,??0317
 3798+ 2			        ifnb    <004h>
 3799+ 2			        tst_psw <004h>,??0317
 3800+ 3  0CD6	E5 70		        mov     a,saved_psw
 3801+ 3  0CD8	54 C4		        anl     a,#0c4h
 3802+ 3  0CDA	64 04		        xrl     a,#004h
 3803+ 3  0CDC	54 FE		        anl     a,#0feh
 3804+ 3  0CDE	70 1B		        jnz     ??0317
 3805+ 2			        endif
 3806+ 1			        top_ma  add,r7,??0317,<004h>
 3807+ 2  0CE0	7F 51		        mov     r7,#arg0
 3808+ 2  0CE2	74 33		        mov     a,#arg1
 3809+ 2			        ifnb    <004h>
 3810+ 2			        set_cy  004h
 3811+ 3	N      0000	??0342  set     (004h and 1)
 3812+ 3	N      0000	        if      ??0342 eq 1
 3813+ 3			        setb    c
 3814+ 3			        else
 3815+ 3  0CE4	C3		        clr     c
 3816+ 3			        endif
 3817+ 2			        endif
 3818+ 2  0CE5	2F		        add      a,r7
 3819+ 2			        ifnb    <004h>
 3820+ 2			        save_psw
 3821+ 3  0CE6	85 D0 70	        mov     saved_psw,PSW
 3822+ 2			        endif
 3823+ 2  0CE9	B4 84 0F	        cjne    a,#res,??0317
 3824+ 2			        ifnb    <004h>
 3825+ 2			        tst_psw <004h>,??0317
 3826+ 3  0CEC	E5 70		        mov     a,saved_psw
 3827+ 3  0CEE	54 C4		        anl     a,#0c4h
 3828+ 3  0CF0	64 04		        xrl     a,#004h
 3829+ 3  0CF2	54 FE		        anl     a,#0feh
 3830+ 3  0CF4	70 05		        jnz     ??0317
 3831+ 2			        endif
 3832+ 1
 3833+ 1			        eot     'd',??0317
 3834+ 2			        putc    #'d'
 3835+ 3  0CF6			??0344:
 3836+ 3			        ;jnb     SCON.1,putc_loop
 3837+ 3			        ;clr     SCON.1
 3838+ 3  0CF6	75 99 64	        mov     SBUF,#'d'
 3839+ 2  0CF9	80 06		        sjmp    ??0343
 3840+ 2  0CFB			??0317:  putc    #'?'
 3841+ 3  0CFB			??0345:
 3842+ 3			        ;jnb     SCON.1,putc_loop
 3843+ 3			        ;clr     SCON.1
 3844+ 3  0CFB	75 99 3F	        mov     SBUF,#'?'
 3845+ 2  0CFE	75 6E 01	        mov     fail,#001h
 3846+ 2  0D01			??0343:
 3847+ 1
 3848+ 1			        ifb     <004h>
 3849+ 1
 3850+ 1			        top_mb  add,a,??0321,<004h>
 3851+ 1			        top_mb  add,dir0,??0321,<004h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 70



 Line  I  Addr  Code            Source

 3852+ 1
 3853+ 1			        eot     'e',??0321
 3854+ 1
 3855+ 1			        top_mc  add,??0322,<004h>
 3856+ 1
 3857+ 1			        eot     'f',??0322
 3858+ 1			        endif
 3859:				        putc    #'1'
 3860+ 1  0D01			??0346:
 3861+ 1			        ;jnb     SCON.1,putc_loop
 3862+ 1			        ;clr     SCON.1
 3863+ 1  0D01	75 99 31	        mov     SBUF,#'1'
 3864:				        tst_alu add,081h,093h,014h,084h     ;  CY /AC  OV
 3865+ 1
 3866+ 1	N      0081	        arg0    set 081h
 3867+ 1	N      0093	        arg1    set 093h
 3868+ 1	N      0014	        res     set 014h
 3869+ 1
 3870+ 1			        top_ma  add,dir0,??0348,<084h>
 3871+ 2  0D04	75 60 81	        mov     dir0,#arg0
 3872+ 2  0D07	74 93		        mov     a,#arg1
 3873+ 2			        ifnb    <084h>
 3874+ 2			        set_cy  084h
 3875+ 3	N      0000	??0353  set     (084h and 1)
 3876+ 3	N      0000	        if      ??0353 eq 1
 3877+ 3			        setb    c
 3878+ 3			        else
 3879+ 3  0D09	C3		        clr     c
 3880+ 3			        endif
 3881+ 2			        endif
 3882+ 2  0D0A	25 60		        add      a,dir0
 3883+ 2			        ifnb    <084h>
 3884+ 2			        save_psw
 3885+ 3  0D0C	85 D0 70	        mov     saved_psw,PSW
 3886+ 2			        endif
 3887+ 2  0D0F	B4 14 6B	        cjne    a,#res,??0348
 3888+ 2			        ifnb    <084h>
 3889+ 2			        tst_psw <084h>,??0348
 3890+ 3  0D12	E5 70		        mov     a,saved_psw
 3891+ 3  0D14	54 C4		        anl     a,#0c4h
 3892+ 3  0D16	64 84		        xrl     a,#084h
 3893+ 3  0D18	54 FE		        anl     a,#0feh
 3894+ 3  0D1A	70 61		        jnz     ??0348
 3895+ 2			        endif
 3896+ 1  0D1C	78 60		        mov     r0,#dir0
 3897+ 1			        top_ma  add,@r0,??0348,<084h>
 3898+ 2  0D1E	76 81		        mov     @r0,#arg0
 3899+ 2  0D20	74 93		        mov     a,#arg1
 3900+ 2			        ifnb    <084h>
 3901+ 2			        set_cy  084h
 3902+ 3	N      0000	??0354  set     (084h and 1)
 3903+ 3	N      0000	        if      ??0354 eq 1
 3904+ 3			        setb    c
 3905+ 3			        else
 3906+ 3  0D22	C3		        clr     c
 3907+ 3			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 71



 Line  I  Addr  Code            Source

 3908+ 2			        endif
 3909+ 2  0D23	26		        add      a,@r0
 3910+ 2			        ifnb    <084h>
 3911+ 2			        save_psw
 3912+ 3  0D24	85 D0 70	        mov     saved_psw,PSW
 3913+ 2			        endif
 3914+ 2  0D27	B4 14 53	        cjne    a,#res,??0348
 3915+ 2			        ifnb    <084h>
 3916+ 2			        tst_psw <084h>,??0348
 3917+ 3  0D2A	E5 70		        mov     a,saved_psw
 3918+ 3  0D2C	54 C4		        anl     a,#0c4h
 3919+ 3  0D2E	64 84		        xrl     a,#084h
 3920+ 3  0D30	54 FE		        anl     a,#0feh
 3921+ 3  0D32	70 49		        jnz     ??0348
 3922+ 2			        endif
 3923+ 1  0D34	79 31		        mov     r1,#031h
 3924+ 1			        top_ma  add,@r1,??0348,<084h>
 3925+ 2  0D36	77 81		        mov     @r1,#arg0
 3926+ 2  0D38	74 93		        mov     a,#arg1
 3927+ 2			        ifnb    <084h>
 3928+ 2			        set_cy  084h
 3929+ 3	N      0000	??0355  set     (084h and 1)
 3930+ 3	N      0000	        if      ??0355 eq 1
 3931+ 3			        setb    c
 3932+ 3			        else
 3933+ 3  0D3A	C3		        clr     c
 3934+ 3			        endif
 3935+ 2			        endif
 3936+ 2  0D3B	27		        add      a,@r1
 3937+ 2			        ifnb    <084h>
 3938+ 2			        save_psw
 3939+ 3  0D3C	85 D0 70	        mov     saved_psw,PSW
 3940+ 2			        endif
 3941+ 2  0D3F	B4 14 3B	        cjne    a,#res,??0348
 3942+ 2			        ifnb    <084h>
 3943+ 2			        tst_psw <084h>,??0348
 3944+ 3  0D42	E5 70		        mov     a,saved_psw
 3945+ 3  0D44	54 C4		        anl     a,#0c4h
 3946+ 3  0D46	64 84		        xrl     a,#084h
 3947+ 3  0D48	54 FE		        anl     a,#0feh
 3948+ 3  0D4A	70 31		        jnz     ??0348
 3949+ 2			        endif
 3950+ 1
 3951+ 1			        top_ma  add,r0,??0348,<084h>
 3952+ 2  0D4C	78 81		        mov     r0,#arg0
 3953+ 2  0D4E	74 93		        mov     a,#arg1
 3954+ 2			        ifnb    <084h>
 3955+ 2			        set_cy  084h
 3956+ 3	N      0000	??0356  set     (084h and 1)
 3957+ 3	N      0000	        if      ??0356 eq 1
 3958+ 3			        setb    c
 3959+ 3			        else
 3960+ 3  0D50	C3		        clr     c
 3961+ 3			        endif
 3962+ 2			        endif
 3963+ 2  0D51	28		        add      a,r0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 72



 Line  I  Addr  Code            Source

 3964+ 2			        ifnb    <084h>
 3965+ 2			        save_psw
 3966+ 3  0D52	85 D0 70	        mov     saved_psw,PSW
 3967+ 2			        endif
 3968+ 2  0D55	B4 14 25	        cjne    a,#res,??0348
 3969+ 2			        ifnb    <084h>
 3970+ 2			        tst_psw <084h>,??0348
 3971+ 3  0D58	E5 70		        mov     a,saved_psw
 3972+ 3  0D5A	54 C4		        anl     a,#0c4h
 3973+ 3  0D5C	64 84		        xrl     a,#084h
 3974+ 3  0D5E	54 FE		        anl     a,#0feh
 3975+ 3  0D60	70 1B		        jnz     ??0348
 3976+ 2			        endif
 3977+ 1			        top_ma  add,r1,??0348,<084h>
 3978+ 2  0D62	79 81		        mov     r1,#arg0
 3979+ 2  0D64	74 93		        mov     a,#arg1
 3980+ 2			        ifnb    <084h>
 3981+ 2			        set_cy  084h
 3982+ 3	N      0000	??0357  set     (084h and 1)
 3983+ 3	N      0000	        if      ??0357 eq 1
 3984+ 3			        setb    c
 3985+ 3			        else
 3986+ 3  0D66	C3		        clr     c
 3987+ 3			        endif
 3988+ 2			        endif
 3989+ 2  0D67	29		        add      a,r1
 3990+ 2			        ifnb    <084h>
 3991+ 2			        save_psw
 3992+ 3  0D68	85 D0 70	        mov     saved_psw,PSW
 3993+ 2			        endif
 3994+ 2  0D6B	B4 14 0F	        cjne    a,#res,??0348
 3995+ 2			        ifnb    <084h>
 3996+ 2			        tst_psw <084h>,??0348
 3997+ 3  0D6E	E5 70		        mov     a,saved_psw
 3998+ 3  0D70	54 C4		        anl     a,#0c4h
 3999+ 3  0D72	64 84		        xrl     a,#084h
 4000+ 3  0D74	54 FE		        anl     a,#0feh
 4001+ 3  0D76	70 05		        jnz     ??0348
 4002+ 2			        endif
 4003+ 1
 4004+ 1			        eot     'a',??0348
 4005+ 2			        putc    #'a'
 4006+ 3  0D78			??0359:
 4007+ 3			        ;jnb     SCON.1,putc_loop
 4008+ 3			        ;clr     SCON.1
 4009+ 3  0D78	75 99 61	        mov     SBUF,#'a'
 4010+ 2  0D7B	80 06		        sjmp    ??0358
 4011+ 2  0D7D			??0348:  putc    #'?'
 4012+ 3  0D7D			??0360:
 4013+ 3			        ;jnb     SCON.1,putc_loop
 4014+ 3			        ;clr     SCON.1
 4015+ 3  0D7D	75 99 3F	        mov     SBUF,#'?'
 4016+ 2  0D80	75 6E 01	        mov     fail,#001h
 4017+ 2  0D83			??0358:
 4018+ 1
 4019+ 1			        top_ma  add,r2,??0349,<084h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 73



 Line  I  Addr  Code            Source

 4020+ 2  0D83	7A 81		        mov     r2,#arg0
 4021+ 2  0D85	74 93		        mov     a,#arg1
 4022+ 2			        ifnb    <084h>
 4023+ 2			        set_cy  084h
 4024+ 3	N      0000	??0361  set     (084h and 1)
 4025+ 3	N      0000	        if      ??0361 eq 1
 4026+ 3			        setb    c
 4027+ 3			        else
 4028+ 3  0D87	C3		        clr     c
 4029+ 3			        endif
 4030+ 2			        endif
 4031+ 2  0D88	2A		        add      a,r2
 4032+ 2			        ifnb    <084h>
 4033+ 2			        save_psw
 4034+ 3  0D89	85 D0 70	        mov     saved_psw,PSW
 4035+ 2			        endif
 4036+ 2  0D8C	B4 14 25	        cjne    a,#res,??0349
 4037+ 2			        ifnb    <084h>
 4038+ 2			        tst_psw <084h>,??0349
 4039+ 3  0D8F	E5 70		        mov     a,saved_psw
 4040+ 3  0D91	54 C4		        anl     a,#0c4h
 4041+ 3  0D93	64 84		        xrl     a,#084h
 4042+ 3  0D95	54 FE		        anl     a,#0feh
 4043+ 3  0D97	70 1B		        jnz     ??0349
 4044+ 2			        endif
 4045+ 1			        top_ma  add,r3,??0349,<084h>
 4046+ 2  0D99	7B 81		        mov     r3,#arg0
 4047+ 2  0D9B	74 93		        mov     a,#arg1
 4048+ 2			        ifnb    <084h>
 4049+ 2			        set_cy  084h
 4050+ 3	N      0000	??0362  set     (084h and 1)
 4051+ 3	N      0000	        if      ??0362 eq 1
 4052+ 3			        setb    c
 4053+ 3			        else
 4054+ 3  0D9D	C3		        clr     c
 4055+ 3			        endif
 4056+ 2			        endif
 4057+ 2  0D9E	2B		        add      a,r3
 4058+ 2			        ifnb    <084h>
 4059+ 2			        save_psw
 4060+ 3  0D9F	85 D0 70	        mov     saved_psw,PSW
 4061+ 2			        endif
 4062+ 2  0DA2	B4 14 0F	        cjne    a,#res,??0349
 4063+ 2			        ifnb    <084h>
 4064+ 2			        tst_psw <084h>,??0349
 4065+ 3  0DA5	E5 70		        mov     a,saved_psw
 4066+ 3  0DA7	54 C4		        anl     a,#0c4h
 4067+ 3  0DA9	64 84		        xrl     a,#084h
 4068+ 3  0DAB	54 FE		        anl     a,#0feh
 4069+ 3  0DAD	70 05		        jnz     ??0349
 4070+ 2			        endif
 4071+ 1
 4072+ 1			        eot     'b',??0349
 4073+ 2			        putc    #'b'
 4074+ 3  0DAF			??0364:
 4075+ 3			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 74



 Line  I  Addr  Code            Source

 4076+ 3			        ;clr     SCON.1
 4077+ 3  0DAF	75 99 62	        mov     SBUF,#'b'
 4078+ 2  0DB2	80 06		        sjmp    ??0363
 4079+ 2  0DB4			??0349:  putc    #'?'
 4080+ 3  0DB4			??0365:
 4081+ 3			        ;jnb     SCON.1,putc_loop
 4082+ 3			        ;clr     SCON.1
 4083+ 3  0DB4	75 99 3F	        mov     SBUF,#'?'
 4084+ 2  0DB7	75 6E 01	        mov     fail,#001h
 4085+ 2  0DBA			??0363:
 4086+ 1
 4087+ 1			        top_ma  add,r4,??0350,<084h>
 4088+ 2  0DBA	7C 81		        mov     r4,#arg0
 4089+ 2  0DBC	74 93		        mov     a,#arg1
 4090+ 2			        ifnb    <084h>
 4091+ 2			        set_cy  084h
 4092+ 3	N      0000	??0366  set     (084h and 1)
 4093+ 3	N      0000	        if      ??0366 eq 1
 4094+ 3			        setb    c
 4095+ 3			        else
 4096+ 3  0DBE	C3		        clr     c
 4097+ 3			        endif
 4098+ 2			        endif
 4099+ 2  0DBF	2C		        add      a,r4
 4100+ 2			        ifnb    <084h>
 4101+ 2			        save_psw
 4102+ 3  0DC0	85 D0 70	        mov     saved_psw,PSW
 4103+ 2			        endif
 4104+ 2  0DC3	B4 14 25	        cjne    a,#res,??0350
 4105+ 2			        ifnb    <084h>
 4106+ 2			        tst_psw <084h>,??0350
 4107+ 3  0DC6	E5 70		        mov     a,saved_psw
 4108+ 3  0DC8	54 C4		        anl     a,#0c4h
 4109+ 3  0DCA	64 84		        xrl     a,#084h
 4110+ 3  0DCC	54 FE		        anl     a,#0feh
 4111+ 3  0DCE	70 1B		        jnz     ??0350
 4112+ 2			        endif
 4113+ 1			        top_ma  add,r5,??0350,<084h>
 4114+ 2  0DD0	7D 81		        mov     r5,#arg0
 4115+ 2  0DD2	74 93		        mov     a,#arg1
 4116+ 2			        ifnb    <084h>
 4117+ 2			        set_cy  084h
 4118+ 3	N      0000	??0367  set     (084h and 1)
 4119+ 3	N      0000	        if      ??0367 eq 1
 4120+ 3			        setb    c
 4121+ 3			        else
 4122+ 3  0DD4	C3		        clr     c
 4123+ 3			        endif
 4124+ 2			        endif
 4125+ 2  0DD5	2D		        add      a,r5
 4126+ 2			        ifnb    <084h>
 4127+ 2			        save_psw
 4128+ 3  0DD6	85 D0 70	        mov     saved_psw,PSW
 4129+ 2			        endif
 4130+ 2  0DD9	B4 14 0F	        cjne    a,#res,??0350
 4131+ 2			        ifnb    <084h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 75



 Line  I  Addr  Code            Source

 4132+ 2			        tst_psw <084h>,??0350
 4133+ 3  0DDC	E5 70		        mov     a,saved_psw
 4134+ 3  0DDE	54 C4		        anl     a,#0c4h
 4135+ 3  0DE0	64 84		        xrl     a,#084h
 4136+ 3  0DE2	54 FE		        anl     a,#0feh
 4137+ 3  0DE4	70 05		        jnz     ??0350
 4138+ 2			        endif
 4139+ 1
 4140+ 1			        eot     'c',??0350
 4141+ 2			        putc    #'c'
 4142+ 3  0DE6			??0369:
 4143+ 3			        ;jnb     SCON.1,putc_loop
 4144+ 3			        ;clr     SCON.1
 4145+ 3  0DE6	75 99 63	        mov     SBUF,#'c'
 4146+ 2  0DE9	80 06		        sjmp    ??0368
 4147+ 2  0DEB			??0350:  putc    #'?'
 4148+ 3  0DEB			??0370:
 4149+ 3			        ;jnb     SCON.1,putc_loop
 4150+ 3			        ;clr     SCON.1
 4151+ 3  0DEB	75 99 3F	        mov     SBUF,#'?'
 4152+ 2  0DEE	75 6E 01	        mov     fail,#001h
 4153+ 2  0DF1			??0368:
 4154+ 1
 4155+ 1			        top_ma  add,r6,??0347,<084h>
 4156+ 2  0DF1	7E 81		        mov     r6,#arg0
 4157+ 2  0DF3	74 93		        mov     a,#arg1
 4158+ 2			        ifnb    <084h>
 4159+ 2			        set_cy  084h
 4160+ 3	N      0000	??0371  set     (084h and 1)
 4161+ 3	N      0000	        if      ??0371 eq 1
 4162+ 3			        setb    c
 4163+ 3			        else
 4164+ 3  0DF5	C3		        clr     c
 4165+ 3			        endif
 4166+ 2			        endif
 4167+ 2  0DF6	2E		        add      a,r6
 4168+ 2			        ifnb    <084h>
 4169+ 2			        save_psw
 4170+ 3  0DF7	85 D0 70	        mov     saved_psw,PSW
 4171+ 2			        endif
 4172+ 2  0DFA	B4 14 25	        cjne    a,#res,??0347
 4173+ 2			        ifnb    <084h>
 4174+ 2			        tst_psw <084h>,??0347
 4175+ 3  0DFD	E5 70		        mov     a,saved_psw
 4176+ 3  0DFF	54 C4		        anl     a,#0c4h
 4177+ 3  0E01	64 84		        xrl     a,#084h
 4178+ 3  0E03	54 FE		        anl     a,#0feh
 4179+ 3  0E05	70 1B		        jnz     ??0347
 4180+ 2			        endif
 4181+ 1			        top_ma  add,r7,??0347,<084h>
 4182+ 2  0E07	7F 81		        mov     r7,#arg0
 4183+ 2  0E09	74 93		        mov     a,#arg1
 4184+ 2			        ifnb    <084h>
 4185+ 2			        set_cy  084h
 4186+ 3	N      0000	??0372  set     (084h and 1)
 4187+ 3	N      0000	        if      ??0372 eq 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 76



 Line  I  Addr  Code            Source

 4188+ 3			        setb    c
 4189+ 3			        else
 4190+ 3  0E0B	C3		        clr     c
 4191+ 3			        endif
 4192+ 2			        endif
 4193+ 2  0E0C	2F		        add      a,r7
 4194+ 2			        ifnb    <084h>
 4195+ 2			        save_psw
 4196+ 3  0E0D	85 D0 70	        mov     saved_psw,PSW
 4197+ 2			        endif
 4198+ 2  0E10	B4 14 0F	        cjne    a,#res,??0347
 4199+ 2			        ifnb    <084h>
 4200+ 2			        tst_psw <084h>,??0347
 4201+ 3  0E13	E5 70		        mov     a,saved_psw
 4202+ 3  0E15	54 C4		        anl     a,#0c4h
 4203+ 3  0E17	64 84		        xrl     a,#084h
 4204+ 3  0E19	54 FE		        anl     a,#0feh
 4205+ 3  0E1B	70 05		        jnz     ??0347
 4206+ 2			        endif
 4207+ 1
 4208+ 1			        eot     'd',??0347
 4209+ 2			        putc    #'d'
 4210+ 3  0E1D			??0374:
 4211+ 3			        ;jnb     SCON.1,putc_loop
 4212+ 3			        ;clr     SCON.1
 4213+ 3  0E1D	75 99 64	        mov     SBUF,#'d'
 4214+ 2  0E20	80 06		        sjmp    ??0373
 4215+ 2  0E22			??0347:  putc    #'?'
 4216+ 3  0E22			??0375:
 4217+ 3			        ;jnb     SCON.1,putc_loop
 4218+ 3			        ;clr     SCON.1
 4219+ 3  0E22	75 99 3F	        mov     SBUF,#'?'
 4220+ 2  0E25	75 6E 01	        mov     fail,#001h
 4221+ 2  0E28			??0373:
 4222+ 1
 4223+ 1			        ifb     <084h>
 4224+ 1
 4225+ 1			        top_mb  add,a,??0351,<084h>
 4226+ 1			        top_mb  add,dir0,??0351,<084h>
 4227+ 1
 4228+ 1			        eot     'e',??0351
 4229+ 1
 4230+ 1			        top_mc  add,??0352,<084h>
 4231+ 1
 4232+ 1			        eot     'f',??0352
 4233+ 1			        endif
 4234:				        putc    #'2'
 4235+ 1  0E28			??0376:
 4236+ 1			        ;jnb     SCON.1,putc_loop
 4237+ 1			        ;clr     SCON.1
 4238+ 1  0E28	75 99 32	        mov     SBUF,#'2'
 4239:				        tst_alu add,088h,098h,020h,0c4h     ;  CY  AC  OV
 4240+ 1
 4241+ 1	N      0088	        arg0    set 088h
 4242+ 1	N      0098	        arg1    set 098h
 4243+ 1	N      0020	        res     set 020h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 77



 Line  I  Addr  Code            Source

 4244+ 1
 4245+ 1			        top_ma  add,dir0,??0378,<0c4h>
 4246+ 2  0E2B	75 60 88	        mov     dir0,#arg0
 4247+ 2  0E2E	74 98		        mov     a,#arg1
 4248+ 2			        ifnb    <0c4h>
 4249+ 2			        set_cy  0c4h
 4250+ 3	N      0000	??0383  set     (0c4h and 1)
 4251+ 3	N      0000	        if      ??0383 eq 1
 4252+ 3			        setb    c
 4253+ 3			        else
 4254+ 3  0E30	C3		        clr     c
 4255+ 3			        endif
 4256+ 2			        endif
 4257+ 2  0E31	25 60		        add      a,dir0
 4258+ 2			        ifnb    <0c4h>
 4259+ 2			        save_psw
 4260+ 3  0E33	85 D0 70	        mov     saved_psw,PSW
 4261+ 2			        endif
 4262+ 2  0E36	B4 20 6B	        cjne    a,#res,??0378
 4263+ 2			        ifnb    <0c4h>
 4264+ 2			        tst_psw <0c4h>,??0378
 4265+ 3  0E39	E5 70		        mov     a,saved_psw
 4266+ 3  0E3B	54 C4		        anl     a,#0c4h
 4267+ 3  0E3D	64 C4		        xrl     a,#0c4h
 4268+ 3  0E3F	54 FE		        anl     a,#0feh
 4269+ 3  0E41	70 61		        jnz     ??0378
 4270+ 2			        endif
 4271+ 1  0E43	78 60		        mov     r0,#dir0
 4272+ 1			        top_ma  add,@r0,??0378,<0c4h>
 4273+ 2  0E45	76 88		        mov     @r0,#arg0
 4274+ 2  0E47	74 98		        mov     a,#arg1
 4275+ 2			        ifnb    <0c4h>
 4276+ 2			        set_cy  0c4h
 4277+ 3	N      0000	??0384  set     (0c4h and 1)
 4278+ 3	N      0000	        if      ??0384 eq 1
 4279+ 3			        setb    c
 4280+ 3			        else
 4281+ 3  0E49	C3		        clr     c
 4282+ 3			        endif
 4283+ 2			        endif
 4284+ 2  0E4A	26		        add      a,@r0
 4285+ 2			        ifnb    <0c4h>
 4286+ 2			        save_psw
 4287+ 3  0E4B	85 D0 70	        mov     saved_psw,PSW
 4288+ 2			        endif
 4289+ 2  0E4E	B4 20 53	        cjne    a,#res,??0378
 4290+ 2			        ifnb    <0c4h>
 4291+ 2			        tst_psw <0c4h>,??0378
 4292+ 3  0E51	E5 70		        mov     a,saved_psw
 4293+ 3  0E53	54 C4		        anl     a,#0c4h
 4294+ 3  0E55	64 C4		        xrl     a,#0c4h
 4295+ 3  0E57	54 FE		        anl     a,#0feh
 4296+ 3  0E59	70 49		        jnz     ??0378
 4297+ 2			        endif
 4298+ 1  0E5B	79 31		        mov     r1,#031h
 4299+ 1			        top_ma  add,@r1,??0378,<0c4h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 78



 Line  I  Addr  Code            Source

 4300+ 2  0E5D	77 88		        mov     @r1,#arg0
 4301+ 2  0E5F	74 98		        mov     a,#arg1
 4302+ 2			        ifnb    <0c4h>
 4303+ 2			        set_cy  0c4h
 4304+ 3	N      0000	??0385  set     (0c4h and 1)
 4305+ 3	N      0000	        if      ??0385 eq 1
 4306+ 3			        setb    c
 4307+ 3			        else
 4308+ 3  0E61	C3		        clr     c
 4309+ 3			        endif
 4310+ 2			        endif
 4311+ 2  0E62	27		        add      a,@r1
 4312+ 2			        ifnb    <0c4h>
 4313+ 2			        save_psw
 4314+ 3  0E63	85 D0 70	        mov     saved_psw,PSW
 4315+ 2			        endif
 4316+ 2  0E66	B4 20 3B	        cjne    a,#res,??0378
 4317+ 2			        ifnb    <0c4h>
 4318+ 2			        tst_psw <0c4h>,??0378
 4319+ 3  0E69	E5 70		        mov     a,saved_psw
 4320+ 3  0E6B	54 C4		        anl     a,#0c4h
 4321+ 3  0E6D	64 C4		        xrl     a,#0c4h
 4322+ 3  0E6F	54 FE		        anl     a,#0feh
 4323+ 3  0E71	70 31		        jnz     ??0378
 4324+ 2			        endif
 4325+ 1
 4326+ 1			        top_ma  add,r0,??0378,<0c4h>
 4327+ 2  0E73	78 88		        mov     r0,#arg0
 4328+ 2  0E75	74 98		        mov     a,#arg1
 4329+ 2			        ifnb    <0c4h>
 4330+ 2			        set_cy  0c4h
 4331+ 3	N      0000	??0386  set     (0c4h and 1)
 4332+ 3	N      0000	        if      ??0386 eq 1
 4333+ 3			        setb    c
 4334+ 3			        else
 4335+ 3  0E77	C3		        clr     c
 4336+ 3			        endif
 4337+ 2			        endif
 4338+ 2  0E78	28		        add      a,r0
 4339+ 2			        ifnb    <0c4h>
 4340+ 2			        save_psw
 4341+ 3  0E79	85 D0 70	        mov     saved_psw,PSW
 4342+ 2			        endif
 4343+ 2  0E7C	B4 20 25	        cjne    a,#res,??0378
 4344+ 2			        ifnb    <0c4h>
 4345+ 2			        tst_psw <0c4h>,??0378
 4346+ 3  0E7F	E5 70		        mov     a,saved_psw
 4347+ 3  0E81	54 C4		        anl     a,#0c4h
 4348+ 3  0E83	64 C4		        xrl     a,#0c4h
 4349+ 3  0E85	54 FE		        anl     a,#0feh
 4350+ 3  0E87	70 1B		        jnz     ??0378
 4351+ 2			        endif
 4352+ 1			        top_ma  add,r1,??0378,<0c4h>
 4353+ 2  0E89	79 88		        mov     r1,#arg0
 4354+ 2  0E8B	74 98		        mov     a,#arg1
 4355+ 2			        ifnb    <0c4h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 79



 Line  I  Addr  Code            Source

 4356+ 2			        set_cy  0c4h
 4357+ 3	N      0000	??0387  set     (0c4h and 1)
 4358+ 3	N      0000	        if      ??0387 eq 1
 4359+ 3			        setb    c
 4360+ 3			        else
 4361+ 3  0E8D	C3		        clr     c
 4362+ 3			        endif
 4363+ 2			        endif
 4364+ 2  0E8E	29		        add      a,r1
 4365+ 2			        ifnb    <0c4h>
 4366+ 2			        save_psw
 4367+ 3  0E8F	85 D0 70	        mov     saved_psw,PSW
 4368+ 2			        endif
 4369+ 2  0E92	B4 20 0F	        cjne    a,#res,??0378
 4370+ 2			        ifnb    <0c4h>
 4371+ 2			        tst_psw <0c4h>,??0378
 4372+ 3  0E95	E5 70		        mov     a,saved_psw
 4373+ 3  0E97	54 C4		        anl     a,#0c4h
 4374+ 3  0E99	64 C4		        xrl     a,#0c4h
 4375+ 3  0E9B	54 FE		        anl     a,#0feh
 4376+ 3  0E9D	70 05		        jnz     ??0378
 4377+ 2			        endif
 4378+ 1
 4379+ 1			        eot     'a',??0378
 4380+ 2			        putc    #'a'
 4381+ 3  0E9F			??0389:
 4382+ 3			        ;jnb     SCON.1,putc_loop
 4383+ 3			        ;clr     SCON.1
 4384+ 3  0E9F	75 99 61	        mov     SBUF,#'a'
 4385+ 2  0EA2	80 06		        sjmp    ??0388
 4386+ 2  0EA4			??0378:  putc    #'?'
 4387+ 3  0EA4			??0390:
 4388+ 3			        ;jnb     SCON.1,putc_loop
 4389+ 3			        ;clr     SCON.1
 4390+ 3  0EA4	75 99 3F	        mov     SBUF,#'?'
 4391+ 2  0EA7	75 6E 01	        mov     fail,#001h
 4392+ 2  0EAA			??0388:
 4393+ 1
 4394+ 1			        top_ma  add,r2,??0379,<0c4h>
 4395+ 2  0EAA	7A 88		        mov     r2,#arg0
 4396+ 2  0EAC	74 98		        mov     a,#arg1
 4397+ 2			        ifnb    <0c4h>
 4398+ 2			        set_cy  0c4h
 4399+ 3	N      0000	??0391  set     (0c4h and 1)
 4400+ 3	N      0000	        if      ??0391 eq 1
 4401+ 3			        setb    c
 4402+ 3			        else
 4403+ 3  0EAE	C3		        clr     c
 4404+ 3			        endif
 4405+ 2			        endif
 4406+ 2  0EAF	2A		        add      a,r2
 4407+ 2			        ifnb    <0c4h>
 4408+ 2			        save_psw
 4409+ 3  0EB0	85 D0 70	        mov     saved_psw,PSW
 4410+ 2			        endif
 4411+ 2  0EB3	B4 20 25	        cjne    a,#res,??0379

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 80



 Line  I  Addr  Code            Source

 4412+ 2			        ifnb    <0c4h>
 4413+ 2			        tst_psw <0c4h>,??0379
 4414+ 3  0EB6	E5 70		        mov     a,saved_psw
 4415+ 3  0EB8	54 C4		        anl     a,#0c4h
 4416+ 3  0EBA	64 C4		        xrl     a,#0c4h
 4417+ 3  0EBC	54 FE		        anl     a,#0feh
 4418+ 3  0EBE	70 1B		        jnz     ??0379
 4419+ 2			        endif
 4420+ 1			        top_ma  add,r3,??0379,<0c4h>
 4421+ 2  0EC0	7B 88		        mov     r3,#arg0
 4422+ 2  0EC2	74 98		        mov     a,#arg1
 4423+ 2			        ifnb    <0c4h>
 4424+ 2			        set_cy  0c4h
 4425+ 3	N      0000	??0392  set     (0c4h and 1)
 4426+ 3	N      0000	        if      ??0392 eq 1
 4427+ 3			        setb    c
 4428+ 3			        else
 4429+ 3  0EC4	C3		        clr     c
 4430+ 3			        endif
 4431+ 2			        endif
 4432+ 2  0EC5	2B		        add      a,r3
 4433+ 2			        ifnb    <0c4h>
 4434+ 2			        save_psw
 4435+ 3  0EC6	85 D0 70	        mov     saved_psw,PSW
 4436+ 2			        endif
 4437+ 2  0EC9	B4 20 0F	        cjne    a,#res,??0379
 4438+ 2			        ifnb    <0c4h>
 4439+ 2			        tst_psw <0c4h>,??0379
 4440+ 3  0ECC	E5 70		        mov     a,saved_psw
 4441+ 3  0ECE	54 C4		        anl     a,#0c4h
 4442+ 3  0ED0	64 C4		        xrl     a,#0c4h
 4443+ 3  0ED2	54 FE		        anl     a,#0feh
 4444+ 3  0ED4	70 05		        jnz     ??0379
 4445+ 2			        endif
 4446+ 1
 4447+ 1			        eot     'b',??0379
 4448+ 2			        putc    #'b'
 4449+ 3  0ED6			??0394:
 4450+ 3			        ;jnb     SCON.1,putc_loop
 4451+ 3			        ;clr     SCON.1
 4452+ 3  0ED6	75 99 62	        mov     SBUF,#'b'
 4453+ 2  0ED9	80 06		        sjmp    ??0393
 4454+ 2  0EDB			??0379:  putc    #'?'
 4455+ 3  0EDB			??0395:
 4456+ 3			        ;jnb     SCON.1,putc_loop
 4457+ 3			        ;clr     SCON.1
 4458+ 3  0EDB	75 99 3F	        mov     SBUF,#'?'
 4459+ 2  0EDE	75 6E 01	        mov     fail,#001h
 4460+ 2  0EE1			??0393:
 4461+ 1
 4462+ 1			        top_ma  add,r4,??0380,<0c4h>
 4463+ 2  0EE1	7C 88		        mov     r4,#arg0
 4464+ 2  0EE3	74 98		        mov     a,#arg1
 4465+ 2			        ifnb    <0c4h>
 4466+ 2			        set_cy  0c4h
 4467+ 3	N      0000	??0396  set     (0c4h and 1)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 81



 Line  I  Addr  Code            Source

 4468+ 3	N      0000	        if      ??0396 eq 1
 4469+ 3			        setb    c
 4470+ 3			        else
 4471+ 3  0EE5	C3		        clr     c
 4472+ 3			        endif
 4473+ 2			        endif
 4474+ 2  0EE6	2C		        add      a,r4
 4475+ 2			        ifnb    <0c4h>
 4476+ 2			        save_psw
 4477+ 3  0EE7	85 D0 70	        mov     saved_psw,PSW
 4478+ 2			        endif
 4479+ 2  0EEA	B4 20 25	        cjne    a,#res,??0380
 4480+ 2			        ifnb    <0c4h>
 4481+ 2			        tst_psw <0c4h>,??0380
 4482+ 3  0EED	E5 70		        mov     a,saved_psw
 4483+ 3  0EEF	54 C4		        anl     a,#0c4h
 4484+ 3  0EF1	64 C4		        xrl     a,#0c4h
 4485+ 3  0EF3	54 FE		        anl     a,#0feh
 4486+ 3  0EF5	70 1B		        jnz     ??0380
 4487+ 2			        endif
 4488+ 1			        top_ma  add,r5,??0380,<0c4h>
 4489+ 2  0EF7	7D 88		        mov     r5,#arg0
 4490+ 2  0EF9	74 98		        mov     a,#arg1
 4491+ 2			        ifnb    <0c4h>
 4492+ 2			        set_cy  0c4h
 4493+ 3	N      0000	??0397  set     (0c4h and 1)
 4494+ 3	N      0000	        if      ??0397 eq 1
 4495+ 3			        setb    c
 4496+ 3			        else
 4497+ 3  0EFB	C3		        clr     c
 4498+ 3			        endif
 4499+ 2			        endif
 4500+ 2  0EFC	2D		        add      a,r5
 4501+ 2			        ifnb    <0c4h>
 4502+ 2			        save_psw
 4503+ 3  0EFD	85 D0 70	        mov     saved_psw,PSW
 4504+ 2			        endif
 4505+ 2  0F00	B4 20 0F	        cjne    a,#res,??0380
 4506+ 2			        ifnb    <0c4h>
 4507+ 2			        tst_psw <0c4h>,??0380
 4508+ 3  0F03	E5 70		        mov     a,saved_psw
 4509+ 3  0F05	54 C4		        anl     a,#0c4h
 4510+ 3  0F07	64 C4		        xrl     a,#0c4h
 4511+ 3  0F09	54 FE		        anl     a,#0feh
 4512+ 3  0F0B	70 05		        jnz     ??0380
 4513+ 2			        endif
 4514+ 1
 4515+ 1			        eot     'c',??0380
 4516+ 2			        putc    #'c'
 4517+ 3  0F0D			??0399:
 4518+ 3			        ;jnb     SCON.1,putc_loop
 4519+ 3			        ;clr     SCON.1
 4520+ 3  0F0D	75 99 63	        mov     SBUF,#'c'
 4521+ 2  0F10	80 06		        sjmp    ??0398
 4522+ 2  0F12			??0380:  putc    #'?'
 4523+ 3  0F12			??0400:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 82



 Line  I  Addr  Code            Source

 4524+ 3			        ;jnb     SCON.1,putc_loop
 4525+ 3			        ;clr     SCON.1
 4526+ 3  0F12	75 99 3F	        mov     SBUF,#'?'
 4527+ 2  0F15	75 6E 01	        mov     fail,#001h
 4528+ 2  0F18			??0398:
 4529+ 1
 4530+ 1			        top_ma  add,r6,??0377,<0c4h>
 4531+ 2  0F18	7E 88		        mov     r6,#arg0
 4532+ 2  0F1A	74 98		        mov     a,#arg1
 4533+ 2			        ifnb    <0c4h>
 4534+ 2			        set_cy  0c4h
 4535+ 3	N      0000	??0401  set     (0c4h and 1)
 4536+ 3	N      0000	        if      ??0401 eq 1
 4537+ 3			        setb    c
 4538+ 3			        else
 4539+ 3  0F1C	C3		        clr     c
 4540+ 3			        endif
 4541+ 2			        endif
 4542+ 2  0F1D	2E		        add      a,r6
 4543+ 2			        ifnb    <0c4h>
 4544+ 2			        save_psw
 4545+ 3  0F1E	85 D0 70	        mov     saved_psw,PSW
 4546+ 2			        endif
 4547+ 2  0F21	B4 20 25	        cjne    a,#res,??0377
 4548+ 2			        ifnb    <0c4h>
 4549+ 2			        tst_psw <0c4h>,??0377
 4550+ 3  0F24	E5 70		        mov     a,saved_psw
 4551+ 3  0F26	54 C4		        anl     a,#0c4h
 4552+ 3  0F28	64 C4		        xrl     a,#0c4h
 4553+ 3  0F2A	54 FE		        anl     a,#0feh
 4554+ 3  0F2C	70 1B		        jnz     ??0377
 4555+ 2			        endif
 4556+ 1			        top_ma  add,r7,??0377,<0c4h>
 4557+ 2  0F2E	7F 88		        mov     r7,#arg0
 4558+ 2  0F30	74 98		        mov     a,#arg1
 4559+ 2			        ifnb    <0c4h>
 4560+ 2			        set_cy  0c4h
 4561+ 3	N      0000	??0402  set     (0c4h and 1)
 4562+ 3	N      0000	        if      ??0402 eq 1
 4563+ 3			        setb    c
 4564+ 3			        else
 4565+ 3  0F32	C3		        clr     c
 4566+ 3			        endif
 4567+ 2			        endif
 4568+ 2  0F33	2F		        add      a,r7
 4569+ 2			        ifnb    <0c4h>
 4570+ 2			        save_psw
 4571+ 3  0F34	85 D0 70	        mov     saved_psw,PSW
 4572+ 2			        endif
 4573+ 2  0F37	B4 20 0F	        cjne    a,#res,??0377
 4574+ 2			        ifnb    <0c4h>
 4575+ 2			        tst_psw <0c4h>,??0377
 4576+ 3  0F3A	E5 70		        mov     a,saved_psw
 4577+ 3  0F3C	54 C4		        anl     a,#0c4h
 4578+ 3  0F3E	64 C4		        xrl     a,#0c4h
 4579+ 3  0F40	54 FE		        anl     a,#0feh

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 83



 Line  I  Addr  Code            Source

 4580+ 3  0F42	70 05		        jnz     ??0377
 4581+ 2			        endif
 4582+ 1
 4583+ 1			        eot     'd',??0377
 4584+ 2			        putc    #'d'
 4585+ 3  0F44			??0404:
 4586+ 3			        ;jnb     SCON.1,putc_loop
 4587+ 3			        ;clr     SCON.1
 4588+ 3  0F44	75 99 64	        mov     SBUF,#'d'
 4589+ 2  0F47	80 06		        sjmp    ??0403
 4590+ 2  0F49			??0377:  putc    #'?'
 4591+ 3  0F49			??0405:
 4592+ 3			        ;jnb     SCON.1,putc_loop
 4593+ 3			        ;clr     SCON.1
 4594+ 3  0F49	75 99 3F	        mov     SBUF,#'?'
 4595+ 2  0F4C	75 6E 01	        mov     fail,#001h
 4596+ 2  0F4F			??0403:
 4597+ 1
 4598+ 1			        ifb     <0c4h>
 4599+ 1
 4600+ 1			        top_mb  add,a,??0381,<0c4h>
 4601+ 1			        top_mb  add,dir0,??0381,<0c4h>
 4602+ 1
 4603+ 1			        eot     'e',??0381
 4604+ 1
 4605+ 1			        top_mc  add,??0382,<0c4h>
 4606+ 1
 4607+ 1			        eot     'f',??0382
 4608+ 1			        endif
 4609:
 4610:				        put_crlf                    ; end of test series
 4611+ 1			        putc    #13
 4612+ 2  0F4F			??0406:
 4613+ 2			        ;jnb     SCON.1,putc_loop
 4614+ 2			        ;clr     SCON.1
 4615+ 2  0F4F	75 99 0D	        mov     SBUF,#13
 4616+ 1			        putc    #10
 4617+ 2  0F52			??0407:
 4618+ 2			        ;jnb     SCON.1,putc_loop
 4619+ 2			        ;clr     SCON.1
 4620+ 2  0F52	75 99 0A	        mov     SBUF,#10
 4621:
 4622:
 4623:				        ;-- Test series M ------------------------------------------------------
 4624:				        ; ADDC
 4625:				        ; (See comments for 'ALU opcode block test')
 4626:				        ; Note the test runs 4 times for different values of operands
 4627:
 4628:				        putc    #'M'                ; start of test series
 4629+ 1  0F55			??0408:
 4630+ 1			        ;jnb     SCON.1,putc_loop
 4631+ 1			        ;clr     SCON.1
 4632+ 1  0F55	75 99 4D	        mov     SBUF,#'M'
 4633:
 4634:				        putc    #'0'
 4635+ 1  0F58			??0409:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 84



 Line  I  Addr  Code            Source

 4636+ 1			        ;jnb     SCON.1,putc_loop
 4637+ 1			        ;clr     SCON.1
 4638+ 1  0F58	75 99 30	        mov     SBUF,#'0'
 4639:				        tst_alu addc,051h,033h,084h,004h     ; /CY /AC  OV
 4640+ 1
 4641+ 1	N      0051	        arg0    set 051h
 4642+ 1	N      0033	        arg1    set 033h
 4643+ 1	N      0084	        res     set 084h
 4644+ 1
 4645+ 1			        top_ma  addc,dir0,??0411,<004h>
 4646+ 2  0F5B	75 60 51	        mov     dir0,#arg0
 4647+ 2  0F5E	74 33		        mov     a,#arg1
 4648+ 2			        ifnb    <004h>
 4649+ 2			        set_cy  004h
 4650+ 3	N      0000	??0416  set     (004h and 1)
 4651+ 3	N      0000	        if      ??0416 eq 1
 4652+ 3			        setb    c
 4653+ 3			        else
 4654+ 3  0F60	C3		        clr     c
 4655+ 3			        endif
 4656+ 2			        endif
 4657+ 2  0F61	35 60		        addc      a,dir0
 4658+ 2			        ifnb    <004h>
 4659+ 2			        save_psw
 4660+ 3  0F63	85 D0 70	        mov     saved_psw,PSW
 4661+ 2			        endif
 4662+ 2  0F66	B4 84 6B	        cjne    a,#res,??0411
 4663+ 2			        ifnb    <004h>
 4664+ 2			        tst_psw <004h>,??0411
 4665+ 3  0F69	E5 70		        mov     a,saved_psw
 4666+ 3  0F6B	54 C4		        anl     a,#0c4h
 4667+ 3  0F6D	64 04		        xrl     a,#004h
 4668+ 3  0F6F	54 FE		        anl     a,#0feh
 4669+ 3  0F71	70 61		        jnz     ??0411
 4670+ 2			        endif
 4671+ 1  0F73	78 60		        mov     r0,#dir0
 4672+ 1			        top_ma  addc,@r0,??0411,<004h>
 4673+ 2  0F75	76 51		        mov     @r0,#arg0
 4674+ 2  0F77	74 33		        mov     a,#arg1
 4675+ 2			        ifnb    <004h>
 4676+ 2			        set_cy  004h
 4677+ 3	N      0000	??0417  set     (004h and 1)
 4678+ 3	N      0000	        if      ??0417 eq 1
 4679+ 3			        setb    c
 4680+ 3			        else
 4681+ 3  0F79	C3		        clr     c
 4682+ 3			        endif
 4683+ 2			        endif
 4684+ 2  0F7A	36		        addc      a,@r0
 4685+ 2			        ifnb    <004h>
 4686+ 2			        save_psw
 4687+ 3  0F7B	85 D0 70	        mov     saved_psw,PSW
 4688+ 2			        endif
 4689+ 2  0F7E	B4 84 53	        cjne    a,#res,??0411
 4690+ 2			        ifnb    <004h>
 4691+ 2			        tst_psw <004h>,??0411

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 85



 Line  I  Addr  Code            Source

 4692+ 3  0F81	E5 70		        mov     a,saved_psw
 4693+ 3  0F83	54 C4		        anl     a,#0c4h
 4694+ 3  0F85	64 04		        xrl     a,#004h
 4695+ 3  0F87	54 FE		        anl     a,#0feh
 4696+ 3  0F89	70 49		        jnz     ??0411
 4697+ 2			        endif
 4698+ 1  0F8B	79 31		        mov     r1,#031h
 4699+ 1			        top_ma  addc,@r1,??0411,<004h>
 4700+ 2  0F8D	77 51		        mov     @r1,#arg0
 4701+ 2  0F8F	74 33		        mov     a,#arg1
 4702+ 2			        ifnb    <004h>
 4703+ 2			        set_cy  004h
 4704+ 3	N      0000	??0418  set     (004h and 1)
 4705+ 3	N      0000	        if      ??0418 eq 1
 4706+ 3			        setb    c
 4707+ 3			        else
 4708+ 3  0F91	C3		        clr     c
 4709+ 3			        endif
 4710+ 2			        endif
 4711+ 2  0F92	37		        addc      a,@r1
 4712+ 2			        ifnb    <004h>
 4713+ 2			        save_psw
 4714+ 3  0F93	85 D0 70	        mov     saved_psw,PSW
 4715+ 2			        endif
 4716+ 2  0F96	B4 84 3B	        cjne    a,#res,??0411
 4717+ 2			        ifnb    <004h>
 4718+ 2			        tst_psw <004h>,??0411
 4719+ 3  0F99	E5 70		        mov     a,saved_psw
 4720+ 3  0F9B	54 C4		        anl     a,#0c4h
 4721+ 3  0F9D	64 04		        xrl     a,#004h
 4722+ 3  0F9F	54 FE		        anl     a,#0feh
 4723+ 3  0FA1	70 31		        jnz     ??0411
 4724+ 2			        endif
 4725+ 1
 4726+ 1			        top_ma  addc,r0,??0411,<004h>
 4727+ 2  0FA3	78 51		        mov     r0,#arg0
 4728+ 2  0FA5	74 33		        mov     a,#arg1
 4729+ 2			        ifnb    <004h>
 4730+ 2			        set_cy  004h
 4731+ 3	N      0000	??0419  set     (004h and 1)
 4732+ 3	N      0000	        if      ??0419 eq 1
 4733+ 3			        setb    c
 4734+ 3			        else
 4735+ 3  0FA7	C3		        clr     c
 4736+ 3			        endif
 4737+ 2			        endif
 4738+ 2  0FA8	38		        addc      a,r0
 4739+ 2			        ifnb    <004h>
 4740+ 2			        save_psw
 4741+ 3  0FA9	85 D0 70	        mov     saved_psw,PSW
 4742+ 2			        endif
 4743+ 2  0FAC	B4 84 25	        cjne    a,#res,??0411
 4744+ 2			        ifnb    <004h>
 4745+ 2			        tst_psw <004h>,??0411
 4746+ 3  0FAF	E5 70		        mov     a,saved_psw
 4747+ 3  0FB1	54 C4		        anl     a,#0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 86



 Line  I  Addr  Code            Source

 4748+ 3  0FB3	64 04		        xrl     a,#004h
 4749+ 3  0FB5	54 FE		        anl     a,#0feh
 4750+ 3  0FB7	70 1B		        jnz     ??0411
 4751+ 2			        endif
 4752+ 1			        top_ma  addc,r1,??0411,<004h>
 4753+ 2  0FB9	79 51		        mov     r1,#arg0
 4754+ 2  0FBB	74 33		        mov     a,#arg1
 4755+ 2			        ifnb    <004h>
 4756+ 2			        set_cy  004h
 4757+ 3	N      0000	??0420  set     (004h and 1)
 4758+ 3	N      0000	        if      ??0420 eq 1
 4759+ 3			        setb    c
 4760+ 3			        else
 4761+ 3  0FBD	C3		        clr     c
 4762+ 3			        endif
 4763+ 2			        endif
 4764+ 2  0FBE	39		        addc      a,r1
 4765+ 2			        ifnb    <004h>
 4766+ 2			        save_psw
 4767+ 3  0FBF	85 D0 70	        mov     saved_psw,PSW
 4768+ 2			        endif
 4769+ 2  0FC2	B4 84 0F	        cjne    a,#res,??0411
 4770+ 2			        ifnb    <004h>
 4771+ 2			        tst_psw <004h>,??0411
 4772+ 3  0FC5	E5 70		        mov     a,saved_psw
 4773+ 3  0FC7	54 C4		        anl     a,#0c4h
 4774+ 3  0FC9	64 04		        xrl     a,#004h
 4775+ 3  0FCB	54 FE		        anl     a,#0feh
 4776+ 3  0FCD	70 05		        jnz     ??0411
 4777+ 2			        endif
 4778+ 1
 4779+ 1			        eot     'a',??0411
 4780+ 2			        putc    #'a'
 4781+ 3  0FCF			??0422:
 4782+ 3			        ;jnb     SCON.1,putc_loop
 4783+ 3			        ;clr     SCON.1
 4784+ 3  0FCF	75 99 61	        mov     SBUF,#'a'
 4785+ 2  0FD2	80 06		        sjmp    ??0421
 4786+ 2  0FD4			??0411:  putc    #'?'
 4787+ 3  0FD4			??0423:
 4788+ 3			        ;jnb     SCON.1,putc_loop
 4789+ 3			        ;clr     SCON.1
 4790+ 3  0FD4	75 99 3F	        mov     SBUF,#'?'
 4791+ 2  0FD7	75 6E 01	        mov     fail,#001h
 4792+ 2  0FDA			??0421:
 4793+ 1
 4794+ 1			        top_ma  addc,r2,??0412,<004h>
 4795+ 2  0FDA	7A 51		        mov     r2,#arg0
 4796+ 2  0FDC	74 33		        mov     a,#arg1
 4797+ 2			        ifnb    <004h>
 4798+ 2			        set_cy  004h
 4799+ 3	N      0000	??0424  set     (004h and 1)
 4800+ 3	N      0000	        if      ??0424 eq 1
 4801+ 3			        setb    c
 4802+ 3			        else
 4803+ 3  0FDE	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 87



 Line  I  Addr  Code            Source

 4804+ 3			        endif
 4805+ 2			        endif
 4806+ 2  0FDF	3A		        addc      a,r2
 4807+ 2			        ifnb    <004h>
 4808+ 2			        save_psw
 4809+ 3  0FE0	85 D0 70	        mov     saved_psw,PSW
 4810+ 2			        endif
 4811+ 2  0FE3	B4 84 25	        cjne    a,#res,??0412
 4812+ 2			        ifnb    <004h>
 4813+ 2			        tst_psw <004h>,??0412
 4814+ 3  0FE6	E5 70		        mov     a,saved_psw
 4815+ 3  0FE8	54 C4		        anl     a,#0c4h
 4816+ 3  0FEA	64 04		        xrl     a,#004h
 4817+ 3  0FEC	54 FE		        anl     a,#0feh
 4818+ 3  0FEE	70 1B		        jnz     ??0412
 4819+ 2			        endif
 4820+ 1			        top_ma  addc,r3,??0412,<004h>
 4821+ 2  0FF0	7B 51		        mov     r3,#arg0
 4822+ 2  0FF2	74 33		        mov     a,#arg1
 4823+ 2			        ifnb    <004h>
 4824+ 2			        set_cy  004h
 4825+ 3	N      0000	??0425  set     (004h and 1)
 4826+ 3	N      0000	        if      ??0425 eq 1
 4827+ 3			        setb    c
 4828+ 3			        else
 4829+ 3  0FF4	C3		        clr     c
 4830+ 3			        endif
 4831+ 2			        endif
 4832+ 2  0FF5	3B		        addc      a,r3
 4833+ 2			        ifnb    <004h>
 4834+ 2			        save_psw
 4835+ 3  0FF6	85 D0 70	        mov     saved_psw,PSW
 4836+ 2			        endif
 4837+ 2  0FF9	B4 84 0F	        cjne    a,#res,??0412
 4838+ 2			        ifnb    <004h>
 4839+ 2			        tst_psw <004h>,??0412
 4840+ 3  0FFC	E5 70		        mov     a,saved_psw
 4841+ 3  0FFE	54 C4		        anl     a,#0c4h
 4842+ 3  1000	64 04		        xrl     a,#004h
 4843+ 3  1002	54 FE		        anl     a,#0feh
 4844+ 3  1004	70 05		        jnz     ??0412
 4845+ 2			        endif
 4846+ 1
 4847+ 1			        eot     'b',??0412
 4848+ 2			        putc    #'b'
 4849+ 3  1006			??0427:
 4850+ 3			        ;jnb     SCON.1,putc_loop
 4851+ 3			        ;clr     SCON.1
 4852+ 3  1006	75 99 62	        mov     SBUF,#'b'
 4853+ 2  1009	80 06		        sjmp    ??0426
 4854+ 2  100B			??0412:  putc    #'?'
 4855+ 3  100B			??0428:
 4856+ 3			        ;jnb     SCON.1,putc_loop
 4857+ 3			        ;clr     SCON.1
 4858+ 3  100B	75 99 3F	        mov     SBUF,#'?'
 4859+ 2  100E	75 6E 01	        mov     fail,#001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 88



 Line  I  Addr  Code            Source

 4860+ 2  1011			??0426:
 4861+ 1
 4862+ 1			        top_ma  addc,r4,??0413,<004h>
 4863+ 2  1011	7C 51		        mov     r4,#arg0
 4864+ 2  1013	74 33		        mov     a,#arg1
 4865+ 2			        ifnb    <004h>
 4866+ 2			        set_cy  004h
 4867+ 3	N      0000	??0429  set     (004h and 1)
 4868+ 3	N      0000	        if      ??0429 eq 1
 4869+ 3			        setb    c
 4870+ 3			        else
 4871+ 3  1015	C3		        clr     c
 4872+ 3			        endif
 4873+ 2			        endif
 4874+ 2  1016	3C		        addc      a,r4
 4875+ 2			        ifnb    <004h>
 4876+ 2			        save_psw
 4877+ 3  1017	85 D0 70	        mov     saved_psw,PSW
 4878+ 2			        endif
 4879+ 2  101A	B4 84 25	        cjne    a,#res,??0413
 4880+ 2			        ifnb    <004h>
 4881+ 2			        tst_psw <004h>,??0413
 4882+ 3  101D	E5 70		        mov     a,saved_psw
 4883+ 3  101F	54 C4		        anl     a,#0c4h
 4884+ 3  1021	64 04		        xrl     a,#004h
 4885+ 3  1023	54 FE		        anl     a,#0feh
 4886+ 3  1025	70 1B		        jnz     ??0413
 4887+ 2			        endif
 4888+ 1			        top_ma  addc,r5,??0413,<004h>
 4889+ 2  1027	7D 51		        mov     r5,#arg0
 4890+ 2  1029	74 33		        mov     a,#arg1
 4891+ 2			        ifnb    <004h>
 4892+ 2			        set_cy  004h
 4893+ 3	N      0000	??0430  set     (004h and 1)
 4894+ 3	N      0000	        if      ??0430 eq 1
 4895+ 3			        setb    c
 4896+ 3			        else
 4897+ 3  102B	C3		        clr     c
 4898+ 3			        endif
 4899+ 2			        endif
 4900+ 2  102C	3D		        addc      a,r5
 4901+ 2			        ifnb    <004h>
 4902+ 2			        save_psw
 4903+ 3  102D	85 D0 70	        mov     saved_psw,PSW
 4904+ 2			        endif
 4905+ 2  1030	B4 84 0F	        cjne    a,#res,??0413
 4906+ 2			        ifnb    <004h>
 4907+ 2			        tst_psw <004h>,??0413
 4908+ 3  1033	E5 70		        mov     a,saved_psw
 4909+ 3  1035	54 C4		        anl     a,#0c4h
 4910+ 3  1037	64 04		        xrl     a,#004h
 4911+ 3  1039	54 FE		        anl     a,#0feh
 4912+ 3  103B	70 05		        jnz     ??0413
 4913+ 2			        endif
 4914+ 1
 4915+ 1			        eot     'c',??0413

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 89



 Line  I  Addr  Code            Source

 4916+ 2			        putc    #'c'
 4917+ 3  103D			??0432:
 4918+ 3			        ;jnb     SCON.1,putc_loop
 4919+ 3			        ;clr     SCON.1
 4920+ 3  103D	75 99 63	        mov     SBUF,#'c'
 4921+ 2  1040	80 06		        sjmp    ??0431
 4922+ 2  1042			??0413:  putc    #'?'
 4923+ 3  1042			??0433:
 4924+ 3			        ;jnb     SCON.1,putc_loop
 4925+ 3			        ;clr     SCON.1
 4926+ 3  1042	75 99 3F	        mov     SBUF,#'?'
 4927+ 2  1045	75 6E 01	        mov     fail,#001h
 4928+ 2  1048			??0431:
 4929+ 1
 4930+ 1			        top_ma  addc,r6,??0410,<004h>
 4931+ 2  1048	7E 51		        mov     r6,#arg0
 4932+ 2  104A	74 33		        mov     a,#arg1
 4933+ 2			        ifnb    <004h>
 4934+ 2			        set_cy  004h
 4935+ 3	N      0000	??0434  set     (004h and 1)
 4936+ 3	N      0000	        if      ??0434 eq 1
 4937+ 3			        setb    c
 4938+ 3			        else
 4939+ 3  104C	C3		        clr     c
 4940+ 3			        endif
 4941+ 2			        endif
 4942+ 2  104D	3E		        addc      a,r6
 4943+ 2			        ifnb    <004h>
 4944+ 2			        save_psw
 4945+ 3  104E	85 D0 70	        mov     saved_psw,PSW
 4946+ 2			        endif
 4947+ 2  1051	B4 84 25	        cjne    a,#res,??0410
 4948+ 2			        ifnb    <004h>
 4949+ 2			        tst_psw <004h>,??0410
 4950+ 3  1054	E5 70		        mov     a,saved_psw
 4951+ 3  1056	54 C4		        anl     a,#0c4h
 4952+ 3  1058	64 04		        xrl     a,#004h
 4953+ 3  105A	54 FE		        anl     a,#0feh
 4954+ 3  105C	70 1B		        jnz     ??0410
 4955+ 2			        endif
 4956+ 1			        top_ma  addc,r7,??0410,<004h>
 4957+ 2  105E	7F 51		        mov     r7,#arg0
 4958+ 2  1060	74 33		        mov     a,#arg1
 4959+ 2			        ifnb    <004h>
 4960+ 2			        set_cy  004h
 4961+ 3	N      0000	??0435  set     (004h and 1)
 4962+ 3	N      0000	        if      ??0435 eq 1
 4963+ 3			        setb    c
 4964+ 3			        else
 4965+ 3  1062	C3		        clr     c
 4966+ 3			        endif
 4967+ 2			        endif
 4968+ 2  1063	3F		        addc      a,r7
 4969+ 2			        ifnb    <004h>
 4970+ 2			        save_psw
 4971+ 3  1064	85 D0 70	        mov     saved_psw,PSW

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 90



 Line  I  Addr  Code            Source

 4972+ 2			        endif
 4973+ 2  1067	B4 84 0F	        cjne    a,#res,??0410
 4974+ 2			        ifnb    <004h>
 4975+ 2			        tst_psw <004h>,??0410
 4976+ 3  106A	E5 70		        mov     a,saved_psw
 4977+ 3  106C	54 C4		        anl     a,#0c4h
 4978+ 3  106E	64 04		        xrl     a,#004h
 4979+ 3  1070	54 FE		        anl     a,#0feh
 4980+ 3  1072	70 05		        jnz     ??0410
 4981+ 2			        endif
 4982+ 1
 4983+ 1			        eot     'd',??0410
 4984+ 2			        putc    #'d'
 4985+ 3  1074			??0437:
 4986+ 3			        ;jnb     SCON.1,putc_loop
 4987+ 3			        ;clr     SCON.1
 4988+ 3  1074	75 99 64	        mov     SBUF,#'d'
 4989+ 2  1077	80 06		        sjmp    ??0436
 4990+ 2  1079			??0410:  putc    #'?'
 4991+ 3  1079			??0438:
 4992+ 3			        ;jnb     SCON.1,putc_loop
 4993+ 3			        ;clr     SCON.1
 4994+ 3  1079	75 99 3F	        mov     SBUF,#'?'
 4995+ 2  107C	75 6E 01	        mov     fail,#001h
 4996+ 2  107F			??0436:
 4997+ 1
 4998+ 1			        ifb     <004h>
 4999+ 1
 5000+ 1			        top_mb  addc,a,??0414,<004h>
 5001+ 1			        top_mb  addc,dir0,??0414,<004h>
 5002+ 1
 5003+ 1			        eot     'e',??0414
 5004+ 1
 5005+ 1			        top_mc  addc,??0415,<004h>
 5006+ 1
 5007+ 1			        eot     'f',??0415
 5008+ 1			        endif
 5009:				        putc    #'1'
 5010+ 1  107F			??0439:
 5011+ 1			        ;jnb     SCON.1,putc_loop
 5012+ 1			        ;clr     SCON.1
 5013+ 1  107F	75 99 31	        mov     SBUF,#'1'
 5014:				        tst_alu addc,081h,093h,014h,084h     ;  CY /AC  OV
 5015+ 1
 5016+ 1	N      0081	        arg0    set 081h
 5017+ 1	N      0093	        arg1    set 093h
 5018+ 1	N      0014	        res     set 014h
 5019+ 1
 5020+ 1			        top_ma  addc,dir0,??0441,<084h>
 5021+ 2  1082	75 60 81	        mov     dir0,#arg0
 5022+ 2  1085	74 93		        mov     a,#arg1
 5023+ 2			        ifnb    <084h>
 5024+ 2			        set_cy  084h
 5025+ 3	N      0000	??0446  set     (084h and 1)
 5026+ 3	N      0000	        if      ??0446 eq 1
 5027+ 3			        setb    c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 91



 Line  I  Addr  Code            Source

 5028+ 3			        else
 5029+ 3  1087	C3		        clr     c
 5030+ 3			        endif
 5031+ 2			        endif
 5032+ 2  1088	35 60		        addc      a,dir0
 5033+ 2			        ifnb    <084h>
 5034+ 2			        save_psw
 5035+ 3  108A	85 D0 70	        mov     saved_psw,PSW
 5036+ 2			        endif
 5037+ 2  108D	B4 14 6B	        cjne    a,#res,??0441
 5038+ 2			        ifnb    <084h>
 5039+ 2			        tst_psw <084h>,??0441
 5040+ 3  1090	E5 70		        mov     a,saved_psw
 5041+ 3  1092	54 C4		        anl     a,#0c4h
 5042+ 3  1094	64 84		        xrl     a,#084h
 5043+ 3  1096	54 FE		        anl     a,#0feh
 5044+ 3  1098	70 61		        jnz     ??0441
 5045+ 2			        endif
 5046+ 1  109A	78 60		        mov     r0,#dir0
 5047+ 1			        top_ma  addc,@r0,??0441,<084h>
 5048+ 2  109C	76 81		        mov     @r0,#arg0
 5049+ 2  109E	74 93		        mov     a,#arg1
 5050+ 2			        ifnb    <084h>
 5051+ 2			        set_cy  084h
 5052+ 3	N      0000	??0447  set     (084h and 1)
 5053+ 3	N      0000	        if      ??0447 eq 1
 5054+ 3			        setb    c
 5055+ 3			        else
 5056+ 3  10A0	C3		        clr     c
 5057+ 3			        endif
 5058+ 2			        endif
 5059+ 2  10A1	36		        addc      a,@r0
 5060+ 2			        ifnb    <084h>
 5061+ 2			        save_psw
 5062+ 3  10A2	85 D0 70	        mov     saved_psw,PSW
 5063+ 2			        endif
 5064+ 2  10A5	B4 14 53	        cjne    a,#res,??0441
 5065+ 2			        ifnb    <084h>
 5066+ 2			        tst_psw <084h>,??0441
 5067+ 3  10A8	E5 70		        mov     a,saved_psw
 5068+ 3  10AA	54 C4		        anl     a,#0c4h
 5069+ 3  10AC	64 84		        xrl     a,#084h
 5070+ 3  10AE	54 FE		        anl     a,#0feh
 5071+ 3  10B0	70 49		        jnz     ??0441
 5072+ 2			        endif
 5073+ 1  10B2	79 31		        mov     r1,#031h
 5074+ 1			        top_ma  addc,@r1,??0441,<084h>
 5075+ 2  10B4	77 81		        mov     @r1,#arg0
 5076+ 2  10B6	74 93		        mov     a,#arg1
 5077+ 2			        ifnb    <084h>
 5078+ 2			        set_cy  084h
 5079+ 3	N      0000	??0448  set     (084h and 1)
 5080+ 3	N      0000	        if      ??0448 eq 1
 5081+ 3			        setb    c
 5082+ 3			        else
 5083+ 3  10B8	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 92



 Line  I  Addr  Code            Source

 5084+ 3			        endif
 5085+ 2			        endif
 5086+ 2  10B9	37		        addc      a,@r1
 5087+ 2			        ifnb    <084h>
 5088+ 2			        save_psw
 5089+ 3  10BA	85 D0 70	        mov     saved_psw,PSW
 5090+ 2			        endif
 5091+ 2  10BD	B4 14 3B	        cjne    a,#res,??0441
 5092+ 2			        ifnb    <084h>
 5093+ 2			        tst_psw <084h>,??0441
 5094+ 3  10C0	E5 70		        mov     a,saved_psw
 5095+ 3  10C2	54 C4		        anl     a,#0c4h
 5096+ 3  10C4	64 84		        xrl     a,#084h
 5097+ 3  10C6	54 FE		        anl     a,#0feh
 5098+ 3  10C8	70 31		        jnz     ??0441
 5099+ 2			        endif
 5100+ 1
 5101+ 1			        top_ma  addc,r0,??0441,<084h>
 5102+ 2  10CA	78 81		        mov     r0,#arg0
 5103+ 2  10CC	74 93		        mov     a,#arg1
 5104+ 2			        ifnb    <084h>
 5105+ 2			        set_cy  084h
 5106+ 3	N      0000	??0449  set     (084h and 1)
 5107+ 3	N      0000	        if      ??0449 eq 1
 5108+ 3			        setb    c
 5109+ 3			        else
 5110+ 3  10CE	C3		        clr     c
 5111+ 3			        endif
 5112+ 2			        endif
 5113+ 2  10CF	38		        addc      a,r0
 5114+ 2			        ifnb    <084h>
 5115+ 2			        save_psw
 5116+ 3  10D0	85 D0 70	        mov     saved_psw,PSW
 5117+ 2			        endif
 5118+ 2  10D3	B4 14 25	        cjne    a,#res,??0441
 5119+ 2			        ifnb    <084h>
 5120+ 2			        tst_psw <084h>,??0441
 5121+ 3  10D6	E5 70		        mov     a,saved_psw
 5122+ 3  10D8	54 C4		        anl     a,#0c4h
 5123+ 3  10DA	64 84		        xrl     a,#084h
 5124+ 3  10DC	54 FE		        anl     a,#0feh
 5125+ 3  10DE	70 1B		        jnz     ??0441
 5126+ 2			        endif
 5127+ 1			        top_ma  addc,r1,??0441,<084h>
 5128+ 2  10E0	79 81		        mov     r1,#arg0
 5129+ 2  10E2	74 93		        mov     a,#arg1
 5130+ 2			        ifnb    <084h>
 5131+ 2			        set_cy  084h
 5132+ 3	N      0000	??0450  set     (084h and 1)
 5133+ 3	N      0000	        if      ??0450 eq 1
 5134+ 3			        setb    c
 5135+ 3			        else
 5136+ 3  10E4	C3		        clr     c
 5137+ 3			        endif
 5138+ 2			        endif
 5139+ 2  10E5	39		        addc      a,r1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 93



 Line  I  Addr  Code            Source

 5140+ 2			        ifnb    <084h>
 5141+ 2			        save_psw
 5142+ 3  10E6	85 D0 70	        mov     saved_psw,PSW
 5143+ 2			        endif
 5144+ 2  10E9	B4 14 0F	        cjne    a,#res,??0441
 5145+ 2			        ifnb    <084h>
 5146+ 2			        tst_psw <084h>,??0441
 5147+ 3  10EC	E5 70		        mov     a,saved_psw
 5148+ 3  10EE	54 C4		        anl     a,#0c4h
 5149+ 3  10F0	64 84		        xrl     a,#084h
 5150+ 3  10F2	54 FE		        anl     a,#0feh
 5151+ 3  10F4	70 05		        jnz     ??0441
 5152+ 2			        endif
 5153+ 1
 5154+ 1			        eot     'a',??0441
 5155+ 2			        putc    #'a'
 5156+ 3  10F6			??0452:
 5157+ 3			        ;jnb     SCON.1,putc_loop
 5158+ 3			        ;clr     SCON.1
 5159+ 3  10F6	75 99 61	        mov     SBUF,#'a'
 5160+ 2  10F9	80 06		        sjmp    ??0451
 5161+ 2  10FB			??0441:  putc    #'?'
 5162+ 3  10FB			??0453:
 5163+ 3			        ;jnb     SCON.1,putc_loop
 5164+ 3			        ;clr     SCON.1
 5165+ 3  10FB	75 99 3F	        mov     SBUF,#'?'
 5166+ 2  10FE	75 6E 01	        mov     fail,#001h
 5167+ 2  1101			??0451:
 5168+ 1
 5169+ 1			        top_ma  addc,r2,??0442,<084h>
 5170+ 2  1101	7A 81		        mov     r2,#arg0
 5171+ 2  1103	74 93		        mov     a,#arg1
 5172+ 2			        ifnb    <084h>
 5173+ 2			        set_cy  084h
 5174+ 3	N      0000	??0454  set     (084h and 1)
 5175+ 3	N      0000	        if      ??0454 eq 1
 5176+ 3			        setb    c
 5177+ 3			        else
 5178+ 3  1105	C3		        clr     c
 5179+ 3			        endif
 5180+ 2			        endif
 5181+ 2  1106	3A		        addc      a,r2
 5182+ 2			        ifnb    <084h>
 5183+ 2			        save_psw
 5184+ 3  1107	85 D0 70	        mov     saved_psw,PSW
 5185+ 2			        endif
 5186+ 2  110A	B4 14 25	        cjne    a,#res,??0442
 5187+ 2			        ifnb    <084h>
 5188+ 2			        tst_psw <084h>,??0442
 5189+ 3  110D	E5 70		        mov     a,saved_psw
 5190+ 3  110F	54 C4		        anl     a,#0c4h
 5191+ 3  1111	64 84		        xrl     a,#084h
 5192+ 3  1113	54 FE		        anl     a,#0feh
 5193+ 3  1115	70 1B		        jnz     ??0442
 5194+ 2			        endif
 5195+ 1			        top_ma  addc,r3,??0442,<084h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 94



 Line  I  Addr  Code            Source

 5196+ 2  1117	7B 81		        mov     r3,#arg0
 5197+ 2  1119	74 93		        mov     a,#arg1
 5198+ 2			        ifnb    <084h>
 5199+ 2			        set_cy  084h
 5200+ 3	N      0000	??0455  set     (084h and 1)
 5201+ 3	N      0000	        if      ??0455 eq 1
 5202+ 3			        setb    c
 5203+ 3			        else
 5204+ 3  111B	C3		        clr     c
 5205+ 3			        endif
 5206+ 2			        endif
 5207+ 2  111C	3B		        addc      a,r3
 5208+ 2			        ifnb    <084h>
 5209+ 2			        save_psw
 5210+ 3  111D	85 D0 70	        mov     saved_psw,PSW
 5211+ 2			        endif
 5212+ 2  1120	B4 14 0F	        cjne    a,#res,??0442
 5213+ 2			        ifnb    <084h>
 5214+ 2			        tst_psw <084h>,??0442
 5215+ 3  1123	E5 70		        mov     a,saved_psw
 5216+ 3  1125	54 C4		        anl     a,#0c4h
 5217+ 3  1127	64 84		        xrl     a,#084h
 5218+ 3  1129	54 FE		        anl     a,#0feh
 5219+ 3  112B	70 05		        jnz     ??0442
 5220+ 2			        endif
 5221+ 1
 5222+ 1			        eot     'b',??0442
 5223+ 2			        putc    #'b'
 5224+ 3  112D			??0457:
 5225+ 3			        ;jnb     SCON.1,putc_loop
 5226+ 3			        ;clr     SCON.1
 5227+ 3  112D	75 99 62	        mov     SBUF,#'b'
 5228+ 2  1130	80 06		        sjmp    ??0456
 5229+ 2  1132			??0442:  putc    #'?'
 5230+ 3  1132			??0458:
 5231+ 3			        ;jnb     SCON.1,putc_loop
 5232+ 3			        ;clr     SCON.1
 5233+ 3  1132	75 99 3F	        mov     SBUF,#'?'
 5234+ 2  1135	75 6E 01	        mov     fail,#001h
 5235+ 2  1138			??0456:
 5236+ 1
 5237+ 1			        top_ma  addc,r4,??0443,<084h>
 5238+ 2  1138	7C 81		        mov     r4,#arg0
 5239+ 2  113A	74 93		        mov     a,#arg1
 5240+ 2			        ifnb    <084h>
 5241+ 2			        set_cy  084h
 5242+ 3	N      0000	??0459  set     (084h and 1)
 5243+ 3	N      0000	        if      ??0459 eq 1
 5244+ 3			        setb    c
 5245+ 3			        else
 5246+ 3  113C	C3		        clr     c
 5247+ 3			        endif
 5248+ 2			        endif
 5249+ 2  113D	3C		        addc      a,r4
 5250+ 2			        ifnb    <084h>
 5251+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 95



 Line  I  Addr  Code            Source

 5252+ 3  113E	85 D0 70	        mov     saved_psw,PSW
 5253+ 2			        endif
 5254+ 2  1141	B4 14 25	        cjne    a,#res,??0443
 5255+ 2			        ifnb    <084h>
 5256+ 2			        tst_psw <084h>,??0443
 5257+ 3  1144	E5 70		        mov     a,saved_psw
 5258+ 3  1146	54 C4		        anl     a,#0c4h
 5259+ 3  1148	64 84		        xrl     a,#084h
 5260+ 3  114A	54 FE		        anl     a,#0feh
 5261+ 3  114C	70 1B		        jnz     ??0443
 5262+ 2			        endif
 5263+ 1			        top_ma  addc,r5,??0443,<084h>
 5264+ 2  114E	7D 81		        mov     r5,#arg0
 5265+ 2  1150	74 93		        mov     a,#arg1
 5266+ 2			        ifnb    <084h>
 5267+ 2			        set_cy  084h
 5268+ 3	N      0000	??0460  set     (084h and 1)
 5269+ 3	N      0000	        if      ??0460 eq 1
 5270+ 3			        setb    c
 5271+ 3			        else
 5272+ 3  1152	C3		        clr     c
 5273+ 3			        endif
 5274+ 2			        endif
 5275+ 2  1153	3D		        addc      a,r5
 5276+ 2			        ifnb    <084h>
 5277+ 2			        save_psw
 5278+ 3  1154	85 D0 70	        mov     saved_psw,PSW
 5279+ 2			        endif
 5280+ 2  1157	B4 14 0F	        cjne    a,#res,??0443
 5281+ 2			        ifnb    <084h>
 5282+ 2			        tst_psw <084h>,??0443
 5283+ 3  115A	E5 70		        mov     a,saved_psw
 5284+ 3  115C	54 C4		        anl     a,#0c4h
 5285+ 3  115E	64 84		        xrl     a,#084h
 5286+ 3  1160	54 FE		        anl     a,#0feh
 5287+ 3  1162	70 05		        jnz     ??0443
 5288+ 2			        endif
 5289+ 1
 5290+ 1			        eot     'c',??0443
 5291+ 2			        putc    #'c'
 5292+ 3  1164			??0462:
 5293+ 3			        ;jnb     SCON.1,putc_loop
 5294+ 3			        ;clr     SCON.1
 5295+ 3  1164	75 99 63	        mov     SBUF,#'c'
 5296+ 2  1167	80 06		        sjmp    ??0461
 5297+ 2  1169			??0443:  putc    #'?'
 5298+ 3  1169			??0463:
 5299+ 3			        ;jnb     SCON.1,putc_loop
 5300+ 3			        ;clr     SCON.1
 5301+ 3  1169	75 99 3F	        mov     SBUF,#'?'
 5302+ 2  116C	75 6E 01	        mov     fail,#001h
 5303+ 2  116F			??0461:
 5304+ 1
 5305+ 1			        top_ma  addc,r6,??0440,<084h>
 5306+ 2  116F	7E 81		        mov     r6,#arg0
 5307+ 2  1171	74 93		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 96



 Line  I  Addr  Code            Source

 5308+ 2			        ifnb    <084h>
 5309+ 2			        set_cy  084h
 5310+ 3	N      0000	??0464  set     (084h and 1)
 5311+ 3	N      0000	        if      ??0464 eq 1
 5312+ 3			        setb    c
 5313+ 3			        else
 5314+ 3  1173	C3		        clr     c
 5315+ 3			        endif
 5316+ 2			        endif
 5317+ 2  1174	3E		        addc      a,r6
 5318+ 2			        ifnb    <084h>
 5319+ 2			        save_psw
 5320+ 3  1175	85 D0 70	        mov     saved_psw,PSW
 5321+ 2			        endif
 5322+ 2  1178	B4 14 25	        cjne    a,#res,??0440
 5323+ 2			        ifnb    <084h>
 5324+ 2			        tst_psw <084h>,??0440
 5325+ 3  117B	E5 70		        mov     a,saved_psw
 5326+ 3  117D	54 C4		        anl     a,#0c4h
 5327+ 3  117F	64 84		        xrl     a,#084h
 5328+ 3  1181	54 FE		        anl     a,#0feh
 5329+ 3  1183	70 1B		        jnz     ??0440
 5330+ 2			        endif
 5331+ 1			        top_ma  addc,r7,??0440,<084h>
 5332+ 2  1185	7F 81		        mov     r7,#arg0
 5333+ 2  1187	74 93		        mov     a,#arg1
 5334+ 2			        ifnb    <084h>
 5335+ 2			        set_cy  084h
 5336+ 3	N      0000	??0465  set     (084h and 1)
 5337+ 3	N      0000	        if      ??0465 eq 1
 5338+ 3			        setb    c
 5339+ 3			        else
 5340+ 3  1189	C3		        clr     c
 5341+ 3			        endif
 5342+ 2			        endif
 5343+ 2  118A	3F		        addc      a,r7
 5344+ 2			        ifnb    <084h>
 5345+ 2			        save_psw
 5346+ 3  118B	85 D0 70	        mov     saved_psw,PSW
 5347+ 2			        endif
 5348+ 2  118E	B4 14 0F	        cjne    a,#res,??0440
 5349+ 2			        ifnb    <084h>
 5350+ 2			        tst_psw <084h>,??0440
 5351+ 3  1191	E5 70		        mov     a,saved_psw
 5352+ 3  1193	54 C4		        anl     a,#0c4h
 5353+ 3  1195	64 84		        xrl     a,#084h
 5354+ 3  1197	54 FE		        anl     a,#0feh
 5355+ 3  1199	70 05		        jnz     ??0440
 5356+ 2			        endif
 5357+ 1
 5358+ 1			        eot     'd',??0440
 5359+ 2			        putc    #'d'
 5360+ 3  119B			??0467:
 5361+ 3			        ;jnb     SCON.1,putc_loop
 5362+ 3			        ;clr     SCON.1
 5363+ 3  119B	75 99 64	        mov     SBUF,#'d'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 97



 Line  I  Addr  Code            Source

 5364+ 2  119E	80 06		        sjmp    ??0466
 5365+ 2  11A0			??0440:  putc    #'?'
 5366+ 3  11A0			??0468:
 5367+ 3			        ;jnb     SCON.1,putc_loop
 5368+ 3			        ;clr     SCON.1
 5369+ 3  11A0	75 99 3F	        mov     SBUF,#'?'
 5370+ 2  11A3	75 6E 01	        mov     fail,#001h
 5371+ 2  11A6			??0466:
 5372+ 1
 5373+ 1			        ifb     <084h>
 5374+ 1
 5375+ 1			        top_mb  addc,a,??0444,<084h>
 5376+ 1			        top_mb  addc,dir0,??0444,<084h>
 5377+ 1
 5378+ 1			        eot     'e',??0444
 5379+ 1
 5380+ 1			        top_mc  addc,??0445,<084h>
 5381+ 1
 5382+ 1			        eot     'f',??0445
 5383+ 1			        endif
 5384:				        putc    #'2'
 5385+ 1  11A6			??0469:
 5386+ 1			        ;jnb     SCON.1,putc_loop
 5387+ 1			        ;clr     SCON.1
 5388+ 1  11A6	75 99 32	        mov     SBUF,#'2'
 5389:				        tst_alu addc,088h,098h,020h,0c4h     ;  CY  AC  OV
 5390+ 1
 5391+ 1	N      0088	        arg0    set 088h
 5392+ 1	N      0098	        arg1    set 098h
 5393+ 1	N      0020	        res     set 020h
 5394+ 1
 5395+ 1			        top_ma  addc,dir0,??0471,<0c4h>
 5396+ 2  11A9	75 60 88	        mov     dir0,#arg0
 5397+ 2  11AC	74 98		        mov     a,#arg1
 5398+ 2			        ifnb    <0c4h>
 5399+ 2			        set_cy  0c4h
 5400+ 3	N      0000	??0476  set     (0c4h and 1)
 5401+ 3	N      0000	        if      ??0476 eq 1
 5402+ 3			        setb    c
 5403+ 3			        else
 5404+ 3  11AE	C3		        clr     c
 5405+ 3			        endif
 5406+ 2			        endif
 5407+ 2  11AF	35 60		        addc      a,dir0
 5408+ 2			        ifnb    <0c4h>
 5409+ 2			        save_psw
 5410+ 3  11B1	85 D0 70	        mov     saved_psw,PSW
 5411+ 2			        endif
 5412+ 2  11B4	B4 20 6B	        cjne    a,#res,??0471
 5413+ 2			        ifnb    <0c4h>
 5414+ 2			        tst_psw <0c4h>,??0471
 5415+ 3  11B7	E5 70		        mov     a,saved_psw
 5416+ 3  11B9	54 C4		        anl     a,#0c4h
 5417+ 3  11BB	64 C4		        xrl     a,#0c4h
 5418+ 3  11BD	54 FE		        anl     a,#0feh
 5419+ 3  11BF	70 61		        jnz     ??0471

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 98



 Line  I  Addr  Code            Source

 5420+ 2			        endif
 5421+ 1  11C1	78 60		        mov     r0,#dir0
 5422+ 1			        top_ma  addc,@r0,??0471,<0c4h>
 5423+ 2  11C3	76 88		        mov     @r0,#arg0
 5424+ 2  11C5	74 98		        mov     a,#arg1
 5425+ 2			        ifnb    <0c4h>
 5426+ 2			        set_cy  0c4h
 5427+ 3	N      0000	??0477  set     (0c4h and 1)
 5428+ 3	N      0000	        if      ??0477 eq 1
 5429+ 3			        setb    c
 5430+ 3			        else
 5431+ 3  11C7	C3		        clr     c
 5432+ 3			        endif
 5433+ 2			        endif
 5434+ 2  11C8	36		        addc      a,@r0
 5435+ 2			        ifnb    <0c4h>
 5436+ 2			        save_psw
 5437+ 3  11C9	85 D0 70	        mov     saved_psw,PSW
 5438+ 2			        endif
 5439+ 2  11CC	B4 20 53	        cjne    a,#res,??0471
 5440+ 2			        ifnb    <0c4h>
 5441+ 2			        tst_psw <0c4h>,??0471
 5442+ 3  11CF	E5 70		        mov     a,saved_psw
 5443+ 3  11D1	54 C4		        anl     a,#0c4h
 5444+ 3  11D3	64 C4		        xrl     a,#0c4h
 5445+ 3  11D5	54 FE		        anl     a,#0feh
 5446+ 3  11D7	70 49		        jnz     ??0471
 5447+ 2			        endif
 5448+ 1  11D9	79 31		        mov     r1,#031h
 5449+ 1			        top_ma  addc,@r1,??0471,<0c4h>
 5450+ 2  11DB	77 88		        mov     @r1,#arg0
 5451+ 2  11DD	74 98		        mov     a,#arg1
 5452+ 2			        ifnb    <0c4h>
 5453+ 2			        set_cy  0c4h
 5454+ 3	N      0000	??0478  set     (0c4h and 1)
 5455+ 3	N      0000	        if      ??0478 eq 1
 5456+ 3			        setb    c
 5457+ 3			        else
 5458+ 3  11DF	C3		        clr     c
 5459+ 3			        endif
 5460+ 2			        endif
 5461+ 2  11E0	37		        addc      a,@r1
 5462+ 2			        ifnb    <0c4h>
 5463+ 2			        save_psw
 5464+ 3  11E1	85 D0 70	        mov     saved_psw,PSW
 5465+ 2			        endif
 5466+ 2  11E4	B4 20 3B	        cjne    a,#res,??0471
 5467+ 2			        ifnb    <0c4h>
 5468+ 2			        tst_psw <0c4h>,??0471
 5469+ 3  11E7	E5 70		        mov     a,saved_psw
 5470+ 3  11E9	54 C4		        anl     a,#0c4h
 5471+ 3  11EB	64 C4		        xrl     a,#0c4h
 5472+ 3  11ED	54 FE		        anl     a,#0feh
 5473+ 3  11EF	70 31		        jnz     ??0471
 5474+ 2			        endif
 5475+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 99



 Line  I  Addr  Code            Source

 5476+ 1			        top_ma  addc,r0,??0471,<0c4h>
 5477+ 2  11F1	78 88		        mov     r0,#arg0
 5478+ 2  11F3	74 98		        mov     a,#arg1
 5479+ 2			        ifnb    <0c4h>
 5480+ 2			        set_cy  0c4h
 5481+ 3	N      0000	??0479  set     (0c4h and 1)
 5482+ 3	N      0000	        if      ??0479 eq 1
 5483+ 3			        setb    c
 5484+ 3			        else
 5485+ 3  11F5	C3		        clr     c
 5486+ 3			        endif
 5487+ 2			        endif
 5488+ 2  11F6	38		        addc      a,r0
 5489+ 2			        ifnb    <0c4h>
 5490+ 2			        save_psw
 5491+ 3  11F7	85 D0 70	        mov     saved_psw,PSW
 5492+ 2			        endif
 5493+ 2  11FA	B4 20 25	        cjne    a,#res,??0471
 5494+ 2			        ifnb    <0c4h>
 5495+ 2			        tst_psw <0c4h>,??0471
 5496+ 3  11FD	E5 70		        mov     a,saved_psw
 5497+ 3  11FF	54 C4		        anl     a,#0c4h
 5498+ 3  1201	64 C4		        xrl     a,#0c4h
 5499+ 3  1203	54 FE		        anl     a,#0feh
 5500+ 3  1205	70 1B		        jnz     ??0471
 5501+ 2			        endif
 5502+ 1			        top_ma  addc,r1,??0471,<0c4h>
 5503+ 2  1207	79 88		        mov     r1,#arg0
 5504+ 2  1209	74 98		        mov     a,#arg1
 5505+ 2			        ifnb    <0c4h>
 5506+ 2			        set_cy  0c4h
 5507+ 3	N      0000	??0480  set     (0c4h and 1)
 5508+ 3	N      0000	        if      ??0480 eq 1
 5509+ 3			        setb    c
 5510+ 3			        else
 5511+ 3  120B	C3		        clr     c
 5512+ 3			        endif
 5513+ 2			        endif
 5514+ 2  120C	39		        addc      a,r1
 5515+ 2			        ifnb    <0c4h>
 5516+ 2			        save_psw
 5517+ 3  120D	85 D0 70	        mov     saved_psw,PSW
 5518+ 2			        endif
 5519+ 2  1210	B4 20 0F	        cjne    a,#res,??0471
 5520+ 2			        ifnb    <0c4h>
 5521+ 2			        tst_psw <0c4h>,??0471
 5522+ 3  1213	E5 70		        mov     a,saved_psw
 5523+ 3  1215	54 C4		        anl     a,#0c4h
 5524+ 3  1217	64 C4		        xrl     a,#0c4h
 5525+ 3  1219	54 FE		        anl     a,#0feh
 5526+ 3  121B	70 05		        jnz     ??0471
 5527+ 2			        endif
 5528+ 1
 5529+ 1			        eot     'a',??0471
 5530+ 2			        putc    #'a'
 5531+ 3  121D			??0482:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 100



 Line  I  Addr  Code            Source

 5532+ 3			        ;jnb     SCON.1,putc_loop
 5533+ 3			        ;clr     SCON.1
 5534+ 3  121D	75 99 61	        mov     SBUF,#'a'
 5535+ 2  1220	80 06		        sjmp    ??0481
 5536+ 2  1222			??0471:  putc    #'?'
 5537+ 3  1222			??0483:
 5538+ 3			        ;jnb     SCON.1,putc_loop
 5539+ 3			        ;clr     SCON.1
 5540+ 3  1222	75 99 3F	        mov     SBUF,#'?'
 5541+ 2  1225	75 6E 01	        mov     fail,#001h
 5542+ 2  1228			??0481:
 5543+ 1
 5544+ 1			        top_ma  addc,r2,??0472,<0c4h>
 5545+ 2  1228	7A 88		        mov     r2,#arg0
 5546+ 2  122A	74 98		        mov     a,#arg1
 5547+ 2			        ifnb    <0c4h>
 5548+ 2			        set_cy  0c4h
 5549+ 3	N      0000	??0484  set     (0c4h and 1)
 5550+ 3	N      0000	        if      ??0484 eq 1
 5551+ 3			        setb    c
 5552+ 3			        else
 5553+ 3  122C	C3		        clr     c
 5554+ 3			        endif
 5555+ 2			        endif
 5556+ 2  122D	3A		        addc      a,r2
 5557+ 2			        ifnb    <0c4h>
 5558+ 2			        save_psw
 5559+ 3  122E	85 D0 70	        mov     saved_psw,PSW
 5560+ 2			        endif
 5561+ 2  1231	B4 20 25	        cjne    a,#res,??0472
 5562+ 2			        ifnb    <0c4h>
 5563+ 2			        tst_psw <0c4h>,??0472
 5564+ 3  1234	E5 70		        mov     a,saved_psw
 5565+ 3  1236	54 C4		        anl     a,#0c4h
 5566+ 3  1238	64 C4		        xrl     a,#0c4h
 5567+ 3  123A	54 FE		        anl     a,#0feh
 5568+ 3  123C	70 1B		        jnz     ??0472
 5569+ 2			        endif
 5570+ 1			        top_ma  addc,r3,??0472,<0c4h>
 5571+ 2  123E	7B 88		        mov     r3,#arg0
 5572+ 2  1240	74 98		        mov     a,#arg1
 5573+ 2			        ifnb    <0c4h>
 5574+ 2			        set_cy  0c4h
 5575+ 3	N      0000	??0485  set     (0c4h and 1)
 5576+ 3	N      0000	        if      ??0485 eq 1
 5577+ 3			        setb    c
 5578+ 3			        else
 5579+ 3  1242	C3		        clr     c
 5580+ 3			        endif
 5581+ 2			        endif
 5582+ 2  1243	3B		        addc      a,r3
 5583+ 2			        ifnb    <0c4h>
 5584+ 2			        save_psw
 5585+ 3  1244	85 D0 70	        mov     saved_psw,PSW
 5586+ 2			        endif
 5587+ 2  1247	B4 20 0F	        cjne    a,#res,??0472

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 101



 Line  I  Addr  Code            Source

 5588+ 2			        ifnb    <0c4h>
 5589+ 2			        tst_psw <0c4h>,??0472
 5590+ 3  124A	E5 70		        mov     a,saved_psw
 5591+ 3  124C	54 C4		        anl     a,#0c4h
 5592+ 3  124E	64 C4		        xrl     a,#0c4h
 5593+ 3  1250	54 FE		        anl     a,#0feh
 5594+ 3  1252	70 05		        jnz     ??0472
 5595+ 2			        endif
 5596+ 1
 5597+ 1			        eot     'b',??0472
 5598+ 2			        putc    #'b'
 5599+ 3  1254			??0487:
 5600+ 3			        ;jnb     SCON.1,putc_loop
 5601+ 3			        ;clr     SCON.1
 5602+ 3  1254	75 99 62	        mov     SBUF,#'b'
 5603+ 2  1257	80 06		        sjmp    ??0486
 5604+ 2  1259			??0472:  putc    #'?'
 5605+ 3  1259			??0488:
 5606+ 3			        ;jnb     SCON.1,putc_loop
 5607+ 3			        ;clr     SCON.1
 5608+ 3  1259	75 99 3F	        mov     SBUF,#'?'
 5609+ 2  125C	75 6E 01	        mov     fail,#001h
 5610+ 2  125F			??0486:
 5611+ 1
 5612+ 1			        top_ma  addc,r4,??0473,<0c4h>
 5613+ 2  125F	7C 88		        mov     r4,#arg0
 5614+ 2  1261	74 98		        mov     a,#arg1
 5615+ 2			        ifnb    <0c4h>
 5616+ 2			        set_cy  0c4h
 5617+ 3	N      0000	??0489  set     (0c4h and 1)
 5618+ 3	N      0000	        if      ??0489 eq 1
 5619+ 3			        setb    c
 5620+ 3			        else
 5621+ 3  1263	C3		        clr     c
 5622+ 3			        endif
 5623+ 2			        endif
 5624+ 2  1264	3C		        addc      a,r4
 5625+ 2			        ifnb    <0c4h>
 5626+ 2			        save_psw
 5627+ 3  1265	85 D0 70	        mov     saved_psw,PSW
 5628+ 2			        endif
 5629+ 2  1268	B4 20 25	        cjne    a,#res,??0473
 5630+ 2			        ifnb    <0c4h>
 5631+ 2			        tst_psw <0c4h>,??0473
 5632+ 3  126B	E5 70		        mov     a,saved_psw
 5633+ 3  126D	54 C4		        anl     a,#0c4h
 5634+ 3  126F	64 C4		        xrl     a,#0c4h
 5635+ 3  1271	54 FE		        anl     a,#0feh
 5636+ 3  1273	70 1B		        jnz     ??0473
 5637+ 2			        endif
 5638+ 1			        top_ma  addc,r5,??0473,<0c4h>
 5639+ 2  1275	7D 88		        mov     r5,#arg0
 5640+ 2  1277	74 98		        mov     a,#arg1
 5641+ 2			        ifnb    <0c4h>
 5642+ 2			        set_cy  0c4h
 5643+ 3	N      0000	??0490  set     (0c4h and 1)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 102



 Line  I  Addr  Code            Source

 5644+ 3	N      0000	        if      ??0490 eq 1
 5645+ 3			        setb    c
 5646+ 3			        else
 5647+ 3  1279	C3		        clr     c
 5648+ 3			        endif
 5649+ 2			        endif
 5650+ 2  127A	3D		        addc      a,r5
 5651+ 2			        ifnb    <0c4h>
 5652+ 2			        save_psw
 5653+ 3  127B	85 D0 70	        mov     saved_psw,PSW
 5654+ 2			        endif
 5655+ 2  127E	B4 20 0F	        cjne    a,#res,??0473
 5656+ 2			        ifnb    <0c4h>
 5657+ 2			        tst_psw <0c4h>,??0473
 5658+ 3  1281	E5 70		        mov     a,saved_psw
 5659+ 3  1283	54 C4		        anl     a,#0c4h
 5660+ 3  1285	64 C4		        xrl     a,#0c4h
 5661+ 3  1287	54 FE		        anl     a,#0feh
 5662+ 3  1289	70 05		        jnz     ??0473
 5663+ 2			        endif
 5664+ 1
 5665+ 1			        eot     'c',??0473
 5666+ 2			        putc    #'c'
 5667+ 3  128B			??0492:
 5668+ 3			        ;jnb     SCON.1,putc_loop
 5669+ 3			        ;clr     SCON.1
 5670+ 3  128B	75 99 63	        mov     SBUF,#'c'
 5671+ 2  128E	80 06		        sjmp    ??0491
 5672+ 2  1290			??0473:  putc    #'?'
 5673+ 3  1290			??0493:
 5674+ 3			        ;jnb     SCON.1,putc_loop
 5675+ 3			        ;clr     SCON.1
 5676+ 3  1290	75 99 3F	        mov     SBUF,#'?'
 5677+ 2  1293	75 6E 01	        mov     fail,#001h
 5678+ 2  1296			??0491:
 5679+ 1
 5680+ 1			        top_ma  addc,r6,??0470,<0c4h>
 5681+ 2  1296	7E 88		        mov     r6,#arg0
 5682+ 2  1298	74 98		        mov     a,#arg1
 5683+ 2			        ifnb    <0c4h>
 5684+ 2			        set_cy  0c4h
 5685+ 3	N      0000	??0494  set     (0c4h and 1)
 5686+ 3	N      0000	        if      ??0494 eq 1
 5687+ 3			        setb    c
 5688+ 3			        else
 5689+ 3  129A	C3		        clr     c
 5690+ 3			        endif
 5691+ 2			        endif
 5692+ 2  129B	3E		        addc      a,r6
 5693+ 2			        ifnb    <0c4h>
 5694+ 2			        save_psw
 5695+ 3  129C	85 D0 70	        mov     saved_psw,PSW
 5696+ 2			        endif
 5697+ 2  129F	B4 20 25	        cjne    a,#res,??0470
 5698+ 2			        ifnb    <0c4h>
 5699+ 2			        tst_psw <0c4h>,??0470

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 103



 Line  I  Addr  Code            Source

 5700+ 3  12A2	E5 70		        mov     a,saved_psw
 5701+ 3  12A4	54 C4		        anl     a,#0c4h
 5702+ 3  12A6	64 C4		        xrl     a,#0c4h
 5703+ 3  12A8	54 FE		        anl     a,#0feh
 5704+ 3  12AA	70 1B		        jnz     ??0470
 5705+ 2			        endif
 5706+ 1			        top_ma  addc,r7,??0470,<0c4h>
 5707+ 2  12AC	7F 88		        mov     r7,#arg0
 5708+ 2  12AE	74 98		        mov     a,#arg1
 5709+ 2			        ifnb    <0c4h>
 5710+ 2			        set_cy  0c4h
 5711+ 3	N      0000	??0495  set     (0c4h and 1)
 5712+ 3	N      0000	        if      ??0495 eq 1
 5713+ 3			        setb    c
 5714+ 3			        else
 5715+ 3  12B0	C3		        clr     c
 5716+ 3			        endif
 5717+ 2			        endif
 5718+ 2  12B1	3F		        addc      a,r7
 5719+ 2			        ifnb    <0c4h>
 5720+ 2			        save_psw
 5721+ 3  12B2	85 D0 70	        mov     saved_psw,PSW
 5722+ 2			        endif
 5723+ 2  12B5	B4 20 0F	        cjne    a,#res,??0470
 5724+ 2			        ifnb    <0c4h>
 5725+ 2			        tst_psw <0c4h>,??0470
 5726+ 3  12B8	E5 70		        mov     a,saved_psw
 5727+ 3  12BA	54 C4		        anl     a,#0c4h
 5728+ 3  12BC	64 C4		        xrl     a,#0c4h
 5729+ 3  12BE	54 FE		        anl     a,#0feh
 5730+ 3  12C0	70 05		        jnz     ??0470
 5731+ 2			        endif
 5732+ 1
 5733+ 1			        eot     'd',??0470
 5734+ 2			        putc    #'d'
 5735+ 3  12C2			??0497:
 5736+ 3			        ;jnb     SCON.1,putc_loop
 5737+ 3			        ;clr     SCON.1
 5738+ 3  12C2	75 99 64	        mov     SBUF,#'d'
 5739+ 2  12C5	80 06		        sjmp    ??0496
 5740+ 2  12C7			??0470:  putc    #'?'
 5741+ 3  12C7			??0498:
 5742+ 3			        ;jnb     SCON.1,putc_loop
 5743+ 3			        ;clr     SCON.1
 5744+ 3  12C7	75 99 3F	        mov     SBUF,#'?'
 5745+ 2  12CA	75 6E 01	        mov     fail,#001h
 5746+ 2  12CD			??0496:
 5747+ 1
 5748+ 1			        ifb     <0c4h>
 5749+ 1
 5750+ 1			        top_mb  addc,a,??0474,<0c4h>
 5751+ 1			        top_mb  addc,dir0,??0474,<0c4h>
 5752+ 1
 5753+ 1			        eot     'e',??0474
 5754+ 1
 5755+ 1			        top_mc  addc,??0475,<0c4h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 104



 Line  I  Addr  Code            Source

 5756+ 1
 5757+ 1			        eot     'f',??0475
 5758+ 1			        endif
 5759:				        putc    #'3'
 5760+ 1  12CD			??0499:
 5761+ 1			        ;jnb     SCON.1,putc_loop
 5762+ 1			        ;clr     SCON.1
 5763+ 1  12CD	75 99 33	        mov     SBUF,#'3'
 5764:				        tst_alu addc,088h,098h,021h,0c5h     ;  CY  AC  OV (CY input)
 5765+ 1
 5766+ 1	N      0088	        arg0    set 088h
 5767+ 1	N      0098	        arg1    set 098h
 5768+ 1	N      0021	        res     set 021h
 5769+ 1
 5770+ 1			        top_ma  addc,dir0,??0501,<0c5h>
 5771+ 2  12D0	75 60 88	        mov     dir0,#arg0
 5772+ 2  12D3	74 98		        mov     a,#arg1
 5773+ 2			        ifnb    <0c5h>
 5774+ 2			        set_cy  0c5h
 5775+ 3	N      0001	??0506  set     (0c5h and 1)
 5776+ 3	N      FFFF	        if      ??0506 eq 1
 5777+ 3  12D5	D3		        setb    c
 5778+ 3			        else
 5779+ 3			        clr     c
 5780+ 3			        endif
 5781+ 2			        endif
 5782+ 2  12D6	35 60		        addc      a,dir0
 5783+ 2			        ifnb    <0c5h>
 5784+ 2			        save_psw
 5785+ 3  12D8	85 D0 70	        mov     saved_psw,PSW
 5786+ 2			        endif
 5787+ 2  12DB	B4 21 6B	        cjne    a,#res,??0501
 5788+ 2			        ifnb    <0c5h>
 5789+ 2			        tst_psw <0c5h>,??0501
 5790+ 3  12DE	E5 70		        mov     a,saved_psw
 5791+ 3  12E0	54 C4		        anl     a,#0c4h
 5792+ 3  12E2	64 C5		        xrl     a,#0c5h
 5793+ 3  12E4	54 FE		        anl     a,#0feh
 5794+ 3  12E6	70 61		        jnz     ??0501
 5795+ 2			        endif
 5796+ 1  12E8	78 60		        mov     r0,#dir0
 5797+ 1			        top_ma  addc,@r0,??0501,<0c5h>
 5798+ 2  12EA	76 88		        mov     @r0,#arg0
 5799+ 2  12EC	74 98		        mov     a,#arg1
 5800+ 2			        ifnb    <0c5h>
 5801+ 2			        set_cy  0c5h
 5802+ 3	N      0001	??0507  set     (0c5h and 1)
 5803+ 3	N      FFFF	        if      ??0507 eq 1
 5804+ 3  12EE	D3		        setb    c
 5805+ 3			        else
 5806+ 3			        clr     c
 5807+ 3			        endif
 5808+ 2			        endif
 5809+ 2  12EF	36		        addc      a,@r0
 5810+ 2			        ifnb    <0c5h>
 5811+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 105



 Line  I  Addr  Code            Source

 5812+ 3  12F0	85 D0 70	        mov     saved_psw,PSW
 5813+ 2			        endif
 5814+ 2  12F3	B4 21 53	        cjne    a,#res,??0501
 5815+ 2			        ifnb    <0c5h>
 5816+ 2			        tst_psw <0c5h>,??0501
 5817+ 3  12F6	E5 70		        mov     a,saved_psw
 5818+ 3  12F8	54 C4		        anl     a,#0c4h
 5819+ 3  12FA	64 C5		        xrl     a,#0c5h
 5820+ 3  12FC	54 FE		        anl     a,#0feh
 5821+ 3  12FE	70 49		        jnz     ??0501
 5822+ 2			        endif
 5823+ 1  1300	79 31		        mov     r1,#031h
 5824+ 1			        top_ma  addc,@r1,??0501,<0c5h>
 5825+ 2  1302	77 88		        mov     @r1,#arg0
 5826+ 2  1304	74 98		        mov     a,#arg1
 5827+ 2			        ifnb    <0c5h>
 5828+ 2			        set_cy  0c5h
 5829+ 3	N      0001	??0508  set     (0c5h and 1)
 5830+ 3	N      FFFF	        if      ??0508 eq 1
 5831+ 3  1306	D3		        setb    c
 5832+ 3			        else
 5833+ 3			        clr     c
 5834+ 3			        endif
 5835+ 2			        endif
 5836+ 2  1307	37		        addc      a,@r1
 5837+ 2			        ifnb    <0c5h>
 5838+ 2			        save_psw
 5839+ 3  1308	85 D0 70	        mov     saved_psw,PSW
 5840+ 2			        endif
 5841+ 2  130B	B4 21 3B	        cjne    a,#res,??0501
 5842+ 2			        ifnb    <0c5h>
 5843+ 2			        tst_psw <0c5h>,??0501
 5844+ 3  130E	E5 70		        mov     a,saved_psw
 5845+ 3  1310	54 C4		        anl     a,#0c4h
 5846+ 3  1312	64 C5		        xrl     a,#0c5h
 5847+ 3  1314	54 FE		        anl     a,#0feh
 5848+ 3  1316	70 31		        jnz     ??0501
 5849+ 2			        endif
 5850+ 1
 5851+ 1			        top_ma  addc,r0,??0501,<0c5h>
 5852+ 2  1318	78 88		        mov     r0,#arg0
 5853+ 2  131A	74 98		        mov     a,#arg1
 5854+ 2			        ifnb    <0c5h>
 5855+ 2			        set_cy  0c5h
 5856+ 3	N      0001	??0509  set     (0c5h and 1)
 5857+ 3	N      FFFF	        if      ??0509 eq 1
 5858+ 3  131C	D3		        setb    c
 5859+ 3			        else
 5860+ 3			        clr     c
 5861+ 3			        endif
 5862+ 2			        endif
 5863+ 2  131D	38		        addc      a,r0
 5864+ 2			        ifnb    <0c5h>
 5865+ 2			        save_psw
 5866+ 3  131E	85 D0 70	        mov     saved_psw,PSW
 5867+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 106



 Line  I  Addr  Code            Source

 5868+ 2  1321	B4 21 25	        cjne    a,#res,??0501
 5869+ 2			        ifnb    <0c5h>
 5870+ 2			        tst_psw <0c5h>,??0501
 5871+ 3  1324	E5 70		        mov     a,saved_psw
 5872+ 3  1326	54 C4		        anl     a,#0c4h
 5873+ 3  1328	64 C5		        xrl     a,#0c5h
 5874+ 3  132A	54 FE		        anl     a,#0feh
 5875+ 3  132C	70 1B		        jnz     ??0501
 5876+ 2			        endif
 5877+ 1			        top_ma  addc,r1,??0501,<0c5h>
 5878+ 2  132E	79 88		        mov     r1,#arg0
 5879+ 2  1330	74 98		        mov     a,#arg1
 5880+ 2			        ifnb    <0c5h>
 5881+ 2			        set_cy  0c5h
 5882+ 3	N      0001	??0510  set     (0c5h and 1)
 5883+ 3	N      FFFF	        if      ??0510 eq 1
 5884+ 3  1332	D3		        setb    c
 5885+ 3			        else
 5886+ 3			        clr     c
 5887+ 3			        endif
 5888+ 2			        endif
 5889+ 2  1333	39		        addc      a,r1
 5890+ 2			        ifnb    <0c5h>
 5891+ 2			        save_psw
 5892+ 3  1334	85 D0 70	        mov     saved_psw,PSW
 5893+ 2			        endif
 5894+ 2  1337	B4 21 0F	        cjne    a,#res,??0501
 5895+ 2			        ifnb    <0c5h>
 5896+ 2			        tst_psw <0c5h>,??0501
 5897+ 3  133A	E5 70		        mov     a,saved_psw
 5898+ 3  133C	54 C4		        anl     a,#0c4h
 5899+ 3  133E	64 C5		        xrl     a,#0c5h
 5900+ 3  1340	54 FE		        anl     a,#0feh
 5901+ 3  1342	70 05		        jnz     ??0501
 5902+ 2			        endif
 5903+ 1
 5904+ 1			        eot     'a',??0501
 5905+ 2			        putc    #'a'
 5906+ 3  1344			??0512:
 5907+ 3			        ;jnb     SCON.1,putc_loop
 5908+ 3			        ;clr     SCON.1
 5909+ 3  1344	75 99 61	        mov     SBUF,#'a'
 5910+ 2  1347	80 06		        sjmp    ??0511
 5911+ 2  1349			??0501:  putc    #'?'
 5912+ 3  1349			??0513:
 5913+ 3			        ;jnb     SCON.1,putc_loop
 5914+ 3			        ;clr     SCON.1
 5915+ 3  1349	75 99 3F	        mov     SBUF,#'?'
 5916+ 2  134C	75 6E 01	        mov     fail,#001h
 5917+ 2  134F			??0511:
 5918+ 1
 5919+ 1			        top_ma  addc,r2,??0502,<0c5h>
 5920+ 2  134F	7A 88		        mov     r2,#arg0
 5921+ 2  1351	74 98		        mov     a,#arg1
 5922+ 2			        ifnb    <0c5h>
 5923+ 2			        set_cy  0c5h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 107



 Line  I  Addr  Code            Source

 5924+ 3	N      0001	??0514  set     (0c5h and 1)
 5925+ 3	N      FFFF	        if      ??0514 eq 1
 5926+ 3  1353	D3		        setb    c
 5927+ 3			        else
 5928+ 3			        clr     c
 5929+ 3			        endif
 5930+ 2			        endif
 5931+ 2  1354	3A		        addc      a,r2
 5932+ 2			        ifnb    <0c5h>
 5933+ 2			        save_psw
 5934+ 3  1355	85 D0 70	        mov     saved_psw,PSW
 5935+ 2			        endif
 5936+ 2  1358	B4 21 25	        cjne    a,#res,??0502
 5937+ 2			        ifnb    <0c5h>
 5938+ 2			        tst_psw <0c5h>,??0502
 5939+ 3  135B	E5 70		        mov     a,saved_psw
 5940+ 3  135D	54 C4		        anl     a,#0c4h
 5941+ 3  135F	64 C5		        xrl     a,#0c5h
 5942+ 3  1361	54 FE		        anl     a,#0feh
 5943+ 3  1363	70 1B		        jnz     ??0502
 5944+ 2			        endif
 5945+ 1			        top_ma  addc,r3,??0502,<0c5h>
 5946+ 2  1365	7B 88		        mov     r3,#arg0
 5947+ 2  1367	74 98		        mov     a,#arg1
 5948+ 2			        ifnb    <0c5h>
 5949+ 2			        set_cy  0c5h
 5950+ 3	N      0001	??0515  set     (0c5h and 1)
 5951+ 3	N      FFFF	        if      ??0515 eq 1
 5952+ 3  1369	D3		        setb    c
 5953+ 3			        else
 5954+ 3			        clr     c
 5955+ 3			        endif
 5956+ 2			        endif
 5957+ 2  136A	3B		        addc      a,r3
 5958+ 2			        ifnb    <0c5h>
 5959+ 2			        save_psw
 5960+ 3  136B	85 D0 70	        mov     saved_psw,PSW
 5961+ 2			        endif
 5962+ 2  136E	B4 21 0F	        cjne    a,#res,??0502
 5963+ 2			        ifnb    <0c5h>
 5964+ 2			        tst_psw <0c5h>,??0502
 5965+ 3  1371	E5 70		        mov     a,saved_psw
 5966+ 3  1373	54 C4		        anl     a,#0c4h
 5967+ 3  1375	64 C5		        xrl     a,#0c5h
 5968+ 3  1377	54 FE		        anl     a,#0feh
 5969+ 3  1379	70 05		        jnz     ??0502
 5970+ 2			        endif
 5971+ 1
 5972+ 1			        eot     'b',??0502
 5973+ 2			        putc    #'b'
 5974+ 3  137B			??0517:
 5975+ 3			        ;jnb     SCON.1,putc_loop
 5976+ 3			        ;clr     SCON.1
 5977+ 3  137B	75 99 62	        mov     SBUF,#'b'
 5978+ 2  137E	80 06		        sjmp    ??0516
 5979+ 2  1380			??0502:  putc    #'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 108



 Line  I  Addr  Code            Source

 5980+ 3  1380			??0518:
 5981+ 3			        ;jnb     SCON.1,putc_loop
 5982+ 3			        ;clr     SCON.1
 5983+ 3  1380	75 99 3F	        mov     SBUF,#'?'
 5984+ 2  1383	75 6E 01	        mov     fail,#001h
 5985+ 2  1386			??0516:
 5986+ 1
 5987+ 1			        top_ma  addc,r4,??0503,<0c5h>
 5988+ 2  1386	7C 88		        mov     r4,#arg0
 5989+ 2  1388	74 98		        mov     a,#arg1
 5990+ 2			        ifnb    <0c5h>
 5991+ 2			        set_cy  0c5h
 5992+ 3	N      0001	??0519  set     (0c5h and 1)
 5993+ 3	N      FFFF	        if      ??0519 eq 1
 5994+ 3  138A	D3		        setb    c
 5995+ 3			        else
 5996+ 3			        clr     c
 5997+ 3			        endif
 5998+ 2			        endif
 5999+ 2  138B	3C		        addc      a,r4
 6000+ 2			        ifnb    <0c5h>
 6001+ 2			        save_psw
 6002+ 3  138C	85 D0 70	        mov     saved_psw,PSW
 6003+ 2			        endif
 6004+ 2  138F	B4 21 25	        cjne    a,#res,??0503
 6005+ 2			        ifnb    <0c5h>
 6006+ 2			        tst_psw <0c5h>,??0503
 6007+ 3  1392	E5 70		        mov     a,saved_psw
 6008+ 3  1394	54 C4		        anl     a,#0c4h
 6009+ 3  1396	64 C5		        xrl     a,#0c5h
 6010+ 3  1398	54 FE		        anl     a,#0feh
 6011+ 3  139A	70 1B		        jnz     ??0503
 6012+ 2			        endif
 6013+ 1			        top_ma  addc,r5,??0503,<0c5h>
 6014+ 2  139C	7D 88		        mov     r5,#arg0
 6015+ 2  139E	74 98		        mov     a,#arg1
 6016+ 2			        ifnb    <0c5h>
 6017+ 2			        set_cy  0c5h
 6018+ 3	N      0001	??0520  set     (0c5h and 1)
 6019+ 3	N      FFFF	        if      ??0520 eq 1
 6020+ 3  13A0	D3		        setb    c
 6021+ 3			        else
 6022+ 3			        clr     c
 6023+ 3			        endif
 6024+ 2			        endif
 6025+ 2  13A1	3D		        addc      a,r5
 6026+ 2			        ifnb    <0c5h>
 6027+ 2			        save_psw
 6028+ 3  13A2	85 D0 70	        mov     saved_psw,PSW
 6029+ 2			        endif
 6030+ 2  13A5	B4 21 0F	        cjne    a,#res,??0503
 6031+ 2			        ifnb    <0c5h>
 6032+ 2			        tst_psw <0c5h>,??0503
 6033+ 3  13A8	E5 70		        mov     a,saved_psw
 6034+ 3  13AA	54 C4		        anl     a,#0c4h
 6035+ 3  13AC	64 C5		        xrl     a,#0c5h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 109



 Line  I  Addr  Code            Source

 6036+ 3  13AE	54 FE		        anl     a,#0feh
 6037+ 3  13B0	70 05		        jnz     ??0503
 6038+ 2			        endif
 6039+ 1
 6040+ 1			        eot     'c',??0503
 6041+ 2			        putc    #'c'
 6042+ 3  13B2			??0522:
 6043+ 3			        ;jnb     SCON.1,putc_loop
 6044+ 3			        ;clr     SCON.1
 6045+ 3  13B2	75 99 63	        mov     SBUF,#'c'
 6046+ 2  13B5	80 06		        sjmp    ??0521
 6047+ 2  13B7			??0503:  putc    #'?'
 6048+ 3  13B7			??0523:
 6049+ 3			        ;jnb     SCON.1,putc_loop
 6050+ 3			        ;clr     SCON.1
 6051+ 3  13B7	75 99 3F	        mov     SBUF,#'?'
 6052+ 2  13BA	75 6E 01	        mov     fail,#001h
 6053+ 2  13BD			??0521:
 6054+ 1
 6055+ 1			        top_ma  addc,r6,??0500,<0c5h>
 6056+ 2  13BD	7E 88		        mov     r6,#arg0
 6057+ 2  13BF	74 98		        mov     a,#arg1
 6058+ 2			        ifnb    <0c5h>
 6059+ 2			        set_cy  0c5h
 6060+ 3	N      0001	??0524  set     (0c5h and 1)
 6061+ 3	N      FFFF	        if      ??0524 eq 1
 6062+ 3  13C1	D3		        setb    c
 6063+ 3			        else
 6064+ 3			        clr     c
 6065+ 3			        endif
 6066+ 2			        endif
 6067+ 2  13C2	3E		        addc      a,r6
 6068+ 2			        ifnb    <0c5h>
 6069+ 2			        save_psw
 6070+ 3  13C3	85 D0 70	        mov     saved_psw,PSW
 6071+ 2			        endif
 6072+ 2  13C6	B4 21 25	        cjne    a,#res,??0500
 6073+ 2			        ifnb    <0c5h>
 6074+ 2			        tst_psw <0c5h>,??0500
 6075+ 3  13C9	E5 70		        mov     a,saved_psw
 6076+ 3  13CB	54 C4		        anl     a,#0c4h
 6077+ 3  13CD	64 C5		        xrl     a,#0c5h
 6078+ 3  13CF	54 FE		        anl     a,#0feh
 6079+ 3  13D1	70 1B		        jnz     ??0500
 6080+ 2			        endif
 6081+ 1			        top_ma  addc,r7,??0500,<0c5h>
 6082+ 2  13D3	7F 88		        mov     r7,#arg0
 6083+ 2  13D5	74 98		        mov     a,#arg1
 6084+ 2			        ifnb    <0c5h>
 6085+ 2			        set_cy  0c5h
 6086+ 3	N      0001	??0525  set     (0c5h and 1)
 6087+ 3	N      FFFF	        if      ??0525 eq 1
 6088+ 3  13D7	D3		        setb    c
 6089+ 3			        else
 6090+ 3			        clr     c
 6091+ 3			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 110



 Line  I  Addr  Code            Source

 6092+ 2			        endif
 6093+ 2  13D8	3F		        addc      a,r7
 6094+ 2			        ifnb    <0c5h>
 6095+ 2			        save_psw
 6096+ 3  13D9	85 D0 70	        mov     saved_psw,PSW
 6097+ 2			        endif
 6098+ 2  13DC	B4 21 0F	        cjne    a,#res,??0500
 6099+ 2			        ifnb    <0c5h>
 6100+ 2			        tst_psw <0c5h>,??0500
 6101+ 3  13DF	E5 70		        mov     a,saved_psw
 6102+ 3  13E1	54 C4		        anl     a,#0c4h
 6103+ 3  13E3	64 C5		        xrl     a,#0c5h
 6104+ 3  13E5	54 FE		        anl     a,#0feh
 6105+ 3  13E7	70 05		        jnz     ??0500
 6106+ 2			        endif
 6107+ 1
 6108+ 1			        eot     'd',??0500
 6109+ 2			        putc    #'d'
 6110+ 3  13E9			??0527:
 6111+ 3			        ;jnb     SCON.1,putc_loop
 6112+ 3			        ;clr     SCON.1
 6113+ 3  13E9	75 99 64	        mov     SBUF,#'d'
 6114+ 2  13EC	80 06		        sjmp    ??0526
 6115+ 2  13EE			??0500:  putc    #'?'
 6116+ 3  13EE			??0528:
 6117+ 3			        ;jnb     SCON.1,putc_loop
 6118+ 3			        ;clr     SCON.1
 6119+ 3  13EE	75 99 3F	        mov     SBUF,#'?'
 6120+ 2  13F1	75 6E 01	        mov     fail,#001h
 6121+ 2  13F4			??0526:
 6122+ 1
 6123+ 1			        ifb     <0c5h>
 6124+ 1
 6125+ 1			        top_mb  addc,a,??0504,<0c5h>
 6126+ 1			        top_mb  addc,dir0,??0504,<0c5h>
 6127+ 1
 6128+ 1			        eot     'e',??0504
 6129+ 1
 6130+ 1			        top_mc  addc,??0505,<0c5h>
 6131+ 1
 6132+ 1			        eot     'f',??0505
 6133+ 1			        endif
 6134:
 6135:
 6136:				        put_crlf                    ; end of test series
 6137+ 1			        putc    #13
 6138+ 2  13F4			??0529:
 6139+ 2			        ;jnb     SCON.1,putc_loop
 6140+ 2			        ;clr     SCON.1
 6141+ 2  13F4	75 99 0D	        mov     SBUF,#13
 6142+ 1			        putc    #10
 6143+ 2  13F7			??0530:
 6144+ 2			        ;jnb     SCON.1,putc_loop
 6145+ 2			        ;clr     SCON.1
 6146+ 2  13F7	75 99 0A	        mov     SBUF,#10
 6147:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 111



 Line  I  Addr  Code            Source

 6148:
 6149:				        ;-- Test series N ------------------------------------------------------
 6150:				        ; SUBB
 6151:				        ; (See comments for 'ALU opcode block test')
 6152:				        ; Note the test runs 4 times for different values of operands
 6153:
 6154:				        putc    #'N'                ; start of test series
 6155+ 1  13FA			??0531:
 6156+ 1			        ;jnb     SCON.1,putc_loop
 6157+ 1			        ;clr     SCON.1
 6158+ 1  13FA	75 99 4E	        mov     SBUF,#'N'
 6159:
 6160:				        ;tst_alu <arg2>,<A value>,<result>,<PSW | CY input>
 6161:				        ;
 6162:
 6163:				        putc    #'0'
 6164+ 1  13FD			??0532:
 6165+ 1			        ;jnb     SCON.1,putc_loop
 6166+ 1			        ;clr     SCON.1
 6167+ 1  13FD	75 99 30	        mov     SBUF,#'0'
 6168:				        tst_alu subb,070h,073h,003h,000h     ; /CY /AC /OV
 6169+ 1
 6170+ 1	N      0070	        arg0    set 070h
 6171+ 1	N      0073	        arg1    set 073h
 6172+ 1	N      0003	        res     set 003h
 6173+ 1
 6174+ 1			        top_ma  subb,dir0,??0534,<000h>
 6175+ 2  1400	75 60 70	        mov     dir0,#arg0
 6176+ 2  1403	74 73		        mov     a,#arg1
 6177+ 2			        ifnb    <000h>
 6178+ 2			        set_cy  000h
 6179+ 3	N      0000	??0539  set     (000h and 1)
 6180+ 3	N      0000	        if      ??0539 eq 1
 6181+ 3			        setb    c
 6182+ 3			        else
 6183+ 3  1405	C3		        clr     c
 6184+ 3			        endif
 6185+ 2			        endif
 6186+ 2  1406	95 60		        subb      a,dir0
 6187+ 2			        ifnb    <000h>
 6188+ 2			        save_psw
 6189+ 3  1408	85 D0 70	        mov     saved_psw,PSW
 6190+ 2			        endif
 6191+ 2  140B	B4 03 6B	        cjne    a,#res,??0534
 6192+ 2			        ifnb    <000h>
 6193+ 2			        tst_psw <000h>,??0534
 6194+ 3  140E	E5 70		        mov     a,saved_psw
 6195+ 3  1410	54 C4		        anl     a,#0c4h
 6196+ 3  1412	64 00		        xrl     a,#000h
 6197+ 3  1414	54 FE		        anl     a,#0feh
 6198+ 3  1416	70 61		        jnz     ??0534
 6199+ 2			        endif
 6200+ 1  1418	78 60		        mov     r0,#dir0
 6201+ 1			        top_ma  subb,@r0,??0534,<000h>
 6202+ 2  141A	76 70		        mov     @r0,#arg0
 6203+ 2  141C	74 73		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 112



 Line  I  Addr  Code            Source

 6204+ 2			        ifnb    <000h>
 6205+ 2			        set_cy  000h
 6206+ 3	N      0000	??0540  set     (000h and 1)
 6207+ 3	N      0000	        if      ??0540 eq 1
 6208+ 3			        setb    c
 6209+ 3			        else
 6210+ 3  141E	C3		        clr     c
 6211+ 3			        endif
 6212+ 2			        endif
 6213+ 2  141F	96		        subb      a,@r0
 6214+ 2			        ifnb    <000h>
 6215+ 2			        save_psw
 6216+ 3  1420	85 D0 70	        mov     saved_psw,PSW
 6217+ 2			        endif
 6218+ 2  1423	B4 03 53	        cjne    a,#res,??0534
 6219+ 2			        ifnb    <000h>
 6220+ 2			        tst_psw <000h>,??0534
 6221+ 3  1426	E5 70		        mov     a,saved_psw
 6222+ 3  1428	54 C4		        anl     a,#0c4h
 6223+ 3  142A	64 00		        xrl     a,#000h
 6224+ 3  142C	54 FE		        anl     a,#0feh
 6225+ 3  142E	70 49		        jnz     ??0534
 6226+ 2			        endif
 6227+ 1  1430	79 31		        mov     r1,#031h
 6228+ 1			        top_ma  subb,@r1,??0534,<000h>
 6229+ 2  1432	77 70		        mov     @r1,#arg0
 6230+ 2  1434	74 73		        mov     a,#arg1
 6231+ 2			        ifnb    <000h>
 6232+ 2			        set_cy  000h
 6233+ 3	N      0000	??0541  set     (000h and 1)
 6234+ 3	N      0000	        if      ??0541 eq 1
 6235+ 3			        setb    c
 6236+ 3			        else
 6237+ 3  1436	C3		        clr     c
 6238+ 3			        endif
 6239+ 2			        endif
 6240+ 2  1437	97		        subb      a,@r1
 6241+ 2			        ifnb    <000h>
 6242+ 2			        save_psw
 6243+ 3  1438	85 D0 70	        mov     saved_psw,PSW
 6244+ 2			        endif
 6245+ 2  143B	B4 03 3B	        cjne    a,#res,??0534
 6246+ 2			        ifnb    <000h>
 6247+ 2			        tst_psw <000h>,??0534
 6248+ 3  143E	E5 70		        mov     a,saved_psw
 6249+ 3  1440	54 C4		        anl     a,#0c4h
 6250+ 3  1442	64 00		        xrl     a,#000h
 6251+ 3  1444	54 FE		        anl     a,#0feh
 6252+ 3  1446	70 31		        jnz     ??0534
 6253+ 2			        endif
 6254+ 1
 6255+ 1			        top_ma  subb,r0,??0534,<000h>
 6256+ 2  1448	78 70		        mov     r0,#arg0
 6257+ 2  144A	74 73		        mov     a,#arg1
 6258+ 2			        ifnb    <000h>
 6259+ 2			        set_cy  000h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 113



 Line  I  Addr  Code            Source

 6260+ 3	N      0000	??0542  set     (000h and 1)
 6261+ 3	N      0000	        if      ??0542 eq 1
 6262+ 3			        setb    c
 6263+ 3			        else
 6264+ 3  144C	C3		        clr     c
 6265+ 3			        endif
 6266+ 2			        endif
 6267+ 2  144D	98		        subb      a,r0
 6268+ 2			        ifnb    <000h>
 6269+ 2			        save_psw
 6270+ 3  144E	85 D0 70	        mov     saved_psw,PSW
 6271+ 2			        endif
 6272+ 2  1451	B4 03 25	        cjne    a,#res,??0534
 6273+ 2			        ifnb    <000h>
 6274+ 2			        tst_psw <000h>,??0534
 6275+ 3  1454	E5 70		        mov     a,saved_psw
 6276+ 3  1456	54 C4		        anl     a,#0c4h
 6277+ 3  1458	64 00		        xrl     a,#000h
 6278+ 3  145A	54 FE		        anl     a,#0feh
 6279+ 3  145C	70 1B		        jnz     ??0534
 6280+ 2			        endif
 6281+ 1			        top_ma  subb,r1,??0534,<000h>
 6282+ 2  145E	79 70		        mov     r1,#arg0
 6283+ 2  1460	74 73		        mov     a,#arg1
 6284+ 2			        ifnb    <000h>
 6285+ 2			        set_cy  000h
 6286+ 3	N      0000	??0543  set     (000h and 1)
 6287+ 3	N      0000	        if      ??0543 eq 1
 6288+ 3			        setb    c
 6289+ 3			        else
 6290+ 3  1462	C3		        clr     c
 6291+ 3			        endif
 6292+ 2			        endif
 6293+ 2  1463	99		        subb      a,r1
 6294+ 2			        ifnb    <000h>
 6295+ 2			        save_psw
 6296+ 3  1464	85 D0 70	        mov     saved_psw,PSW
 6297+ 2			        endif
 6298+ 2  1467	B4 03 0F	        cjne    a,#res,??0534
 6299+ 2			        ifnb    <000h>
 6300+ 2			        tst_psw <000h>,??0534
 6301+ 3  146A	E5 70		        mov     a,saved_psw
 6302+ 3  146C	54 C4		        anl     a,#0c4h
 6303+ 3  146E	64 00		        xrl     a,#000h
 6304+ 3  1470	54 FE		        anl     a,#0feh
 6305+ 3  1472	70 05		        jnz     ??0534
 6306+ 2			        endif
 6307+ 1
 6308+ 1			        eot     'a',??0534
 6309+ 2			        putc    #'a'
 6310+ 3  1474			??0545:
 6311+ 3			        ;jnb     SCON.1,putc_loop
 6312+ 3			        ;clr     SCON.1
 6313+ 3  1474	75 99 61	        mov     SBUF,#'a'
 6314+ 2  1477	80 06		        sjmp    ??0544
 6315+ 2  1479			??0534:  putc    #'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 114



 Line  I  Addr  Code            Source

 6316+ 3  1479			??0546:
 6317+ 3			        ;jnb     SCON.1,putc_loop
 6318+ 3			        ;clr     SCON.1
 6319+ 3  1479	75 99 3F	        mov     SBUF,#'?'
 6320+ 2  147C	75 6E 01	        mov     fail,#001h
 6321+ 2  147F			??0544:
 6322+ 1
 6323+ 1			        top_ma  subb,r2,??0535,<000h>
 6324+ 2  147F	7A 70		        mov     r2,#arg0
 6325+ 2  1481	74 73		        mov     a,#arg1
 6326+ 2			        ifnb    <000h>
 6327+ 2			        set_cy  000h
 6328+ 3	N      0000	??0547  set     (000h and 1)
 6329+ 3	N      0000	        if      ??0547 eq 1
 6330+ 3			        setb    c
 6331+ 3			        else
 6332+ 3  1483	C3		        clr     c
 6333+ 3			        endif
 6334+ 2			        endif
 6335+ 2  1484	9A		        subb      a,r2
 6336+ 2			        ifnb    <000h>
 6337+ 2			        save_psw
 6338+ 3  1485	85 D0 70	        mov     saved_psw,PSW
 6339+ 2			        endif
 6340+ 2  1488	B4 03 25	        cjne    a,#res,??0535
 6341+ 2			        ifnb    <000h>
 6342+ 2			        tst_psw <000h>,??0535
 6343+ 3  148B	E5 70		        mov     a,saved_psw
 6344+ 3  148D	54 C4		        anl     a,#0c4h
 6345+ 3  148F	64 00		        xrl     a,#000h
 6346+ 3  1491	54 FE		        anl     a,#0feh
 6347+ 3  1493	70 1B		        jnz     ??0535
 6348+ 2			        endif
 6349+ 1			        top_ma  subb,r3,??0535,<000h>
 6350+ 2  1495	7B 70		        mov     r3,#arg0
 6351+ 2  1497	74 73		        mov     a,#arg1
 6352+ 2			        ifnb    <000h>
 6353+ 2			        set_cy  000h
 6354+ 3	N      0000	??0548  set     (000h and 1)
 6355+ 3	N      0000	        if      ??0548 eq 1
 6356+ 3			        setb    c
 6357+ 3			        else
 6358+ 3  1499	C3		        clr     c
 6359+ 3			        endif
 6360+ 2			        endif
 6361+ 2  149A	9B		        subb      a,r3
 6362+ 2			        ifnb    <000h>
 6363+ 2			        save_psw
 6364+ 3  149B	85 D0 70	        mov     saved_psw,PSW
 6365+ 2			        endif
 6366+ 2  149E	B4 03 0F	        cjne    a,#res,??0535
 6367+ 2			        ifnb    <000h>
 6368+ 2			        tst_psw <000h>,??0535
 6369+ 3  14A1	E5 70		        mov     a,saved_psw
 6370+ 3  14A3	54 C4		        anl     a,#0c4h
 6371+ 3  14A5	64 00		        xrl     a,#000h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 115



 Line  I  Addr  Code            Source

 6372+ 3  14A7	54 FE		        anl     a,#0feh
 6373+ 3  14A9	70 05		        jnz     ??0535
 6374+ 2			        endif
 6375+ 1
 6376+ 1			        eot     'b',??0535
 6377+ 2			        putc    #'b'
 6378+ 3  14AB			??0550:
 6379+ 3			        ;jnb     SCON.1,putc_loop
 6380+ 3			        ;clr     SCON.1
 6381+ 3  14AB	75 99 62	        mov     SBUF,#'b'
 6382+ 2  14AE	80 06		        sjmp    ??0549
 6383+ 2  14B0			??0535:  putc    #'?'
 6384+ 3  14B0			??0551:
 6385+ 3			        ;jnb     SCON.1,putc_loop
 6386+ 3			        ;clr     SCON.1
 6387+ 3  14B0	75 99 3F	        mov     SBUF,#'?'
 6388+ 2  14B3	75 6E 01	        mov     fail,#001h
 6389+ 2  14B6			??0549:
 6390+ 1
 6391+ 1			        top_ma  subb,r4,??0536,<000h>
 6392+ 2  14B6	7C 70		        mov     r4,#arg0
 6393+ 2  14B8	74 73		        mov     a,#arg1
 6394+ 2			        ifnb    <000h>
 6395+ 2			        set_cy  000h
 6396+ 3	N      0000	??0552  set     (000h and 1)
 6397+ 3	N      0000	        if      ??0552 eq 1
 6398+ 3			        setb    c
 6399+ 3			        else
 6400+ 3  14BA	C3		        clr     c
 6401+ 3			        endif
 6402+ 2			        endif
 6403+ 2  14BB	9C		        subb      a,r4
 6404+ 2			        ifnb    <000h>
 6405+ 2			        save_psw
 6406+ 3  14BC	85 D0 70	        mov     saved_psw,PSW
 6407+ 2			        endif
 6408+ 2  14BF	B4 03 25	        cjne    a,#res,??0536
 6409+ 2			        ifnb    <000h>
 6410+ 2			        tst_psw <000h>,??0536
 6411+ 3  14C2	E5 70		        mov     a,saved_psw
 6412+ 3  14C4	54 C4		        anl     a,#0c4h
 6413+ 3  14C6	64 00		        xrl     a,#000h
 6414+ 3  14C8	54 FE		        anl     a,#0feh
 6415+ 3  14CA	70 1B		        jnz     ??0536
 6416+ 2			        endif
 6417+ 1			        top_ma  subb,r5,??0536,<000h>
 6418+ 2  14CC	7D 70		        mov     r5,#arg0
 6419+ 2  14CE	74 73		        mov     a,#arg1
 6420+ 2			        ifnb    <000h>
 6421+ 2			        set_cy  000h
 6422+ 3	N      0000	??0553  set     (000h and 1)
 6423+ 3	N      0000	        if      ??0553 eq 1
 6424+ 3			        setb    c
 6425+ 3			        else
 6426+ 3  14D0	C3		        clr     c
 6427+ 3			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 116



 Line  I  Addr  Code            Source

 6428+ 2			        endif
 6429+ 2  14D1	9D		        subb      a,r5
 6430+ 2			        ifnb    <000h>
 6431+ 2			        save_psw
 6432+ 3  14D2	85 D0 70	        mov     saved_psw,PSW
 6433+ 2			        endif
 6434+ 2  14D5	B4 03 0F	        cjne    a,#res,??0536
 6435+ 2			        ifnb    <000h>
 6436+ 2			        tst_psw <000h>,??0536
 6437+ 3  14D8	E5 70		        mov     a,saved_psw
 6438+ 3  14DA	54 C4		        anl     a,#0c4h
 6439+ 3  14DC	64 00		        xrl     a,#000h
 6440+ 3  14DE	54 FE		        anl     a,#0feh
 6441+ 3  14E0	70 05		        jnz     ??0536
 6442+ 2			        endif
 6443+ 1
 6444+ 1			        eot     'c',??0536
 6445+ 2			        putc    #'c'
 6446+ 3  14E2			??0555:
 6447+ 3			        ;jnb     SCON.1,putc_loop
 6448+ 3			        ;clr     SCON.1
 6449+ 3  14E2	75 99 63	        mov     SBUF,#'c'
 6450+ 2  14E5	80 06		        sjmp    ??0554
 6451+ 2  14E7			??0536:  putc    #'?'
 6452+ 3  14E7			??0556:
 6453+ 3			        ;jnb     SCON.1,putc_loop
 6454+ 3			        ;clr     SCON.1
 6455+ 3  14E7	75 99 3F	        mov     SBUF,#'?'
 6456+ 2  14EA	75 6E 01	        mov     fail,#001h
 6457+ 2  14ED			??0554:
 6458+ 1
 6459+ 1			        top_ma  subb,r6,??0533,<000h>
 6460+ 2  14ED	7E 70		        mov     r6,#arg0
 6461+ 2  14EF	74 73		        mov     a,#arg1
 6462+ 2			        ifnb    <000h>
 6463+ 2			        set_cy  000h
 6464+ 3	N      0000	??0557  set     (000h and 1)
 6465+ 3	N      0000	        if      ??0557 eq 1
 6466+ 3			        setb    c
 6467+ 3			        else
 6468+ 3  14F1	C3		        clr     c
 6469+ 3			        endif
 6470+ 2			        endif
 6471+ 2  14F2	9E		        subb      a,r6
 6472+ 2			        ifnb    <000h>
 6473+ 2			        save_psw
 6474+ 3  14F3	85 D0 70	        mov     saved_psw,PSW
 6475+ 2			        endif
 6476+ 2  14F6	B4 03 25	        cjne    a,#res,??0533
 6477+ 2			        ifnb    <000h>
 6478+ 2			        tst_psw <000h>,??0533
 6479+ 3  14F9	E5 70		        mov     a,saved_psw
 6480+ 3  14FB	54 C4		        anl     a,#0c4h
 6481+ 3  14FD	64 00		        xrl     a,#000h
 6482+ 3  14FF	54 FE		        anl     a,#0feh
 6483+ 3  1501	70 1B		        jnz     ??0533

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 117



 Line  I  Addr  Code            Source

 6484+ 2			        endif
 6485+ 1			        top_ma  subb,r7,??0533,<000h>
 6486+ 2  1503	7F 70		        mov     r7,#arg0
 6487+ 2  1505	74 73		        mov     a,#arg1
 6488+ 2			        ifnb    <000h>
 6489+ 2			        set_cy  000h
 6490+ 3	N      0000	??0558  set     (000h and 1)
 6491+ 3	N      0000	        if      ??0558 eq 1
 6492+ 3			        setb    c
 6493+ 3			        else
 6494+ 3  1507	C3		        clr     c
 6495+ 3			        endif
 6496+ 2			        endif
 6497+ 2  1508	9F		        subb      a,r7
 6498+ 2			        ifnb    <000h>
 6499+ 2			        save_psw
 6500+ 3  1509	85 D0 70	        mov     saved_psw,PSW
 6501+ 2			        endif
 6502+ 2  150C	B4 03 0F	        cjne    a,#res,??0533
 6503+ 2			        ifnb    <000h>
 6504+ 2			        tst_psw <000h>,??0533
 6505+ 3  150F	E5 70		        mov     a,saved_psw
 6506+ 3  1511	54 C4		        anl     a,#0c4h
 6507+ 3  1513	64 00		        xrl     a,#000h
 6508+ 3  1515	54 FE		        anl     a,#0feh
 6509+ 3  1517	70 05		        jnz     ??0533
 6510+ 2			        endif
 6511+ 1
 6512+ 1			        eot     'd',??0533
 6513+ 2			        putc    #'d'
 6514+ 3  1519			??0560:
 6515+ 3			        ;jnb     SCON.1,putc_loop
 6516+ 3			        ;clr     SCON.1
 6517+ 3  1519	75 99 64	        mov     SBUF,#'d'
 6518+ 2  151C	80 06		        sjmp    ??0559
 6519+ 2  151E			??0533:  putc    #'?'
 6520+ 3  151E			??0561:
 6521+ 3			        ;jnb     SCON.1,putc_loop
 6522+ 3			        ;clr     SCON.1
 6523+ 3  151E	75 99 3F	        mov     SBUF,#'?'
 6524+ 2  1521	75 6E 01	        mov     fail,#001h
 6525+ 2  1524			??0559:
 6526+ 1
 6527+ 1			        ifb     <000h>
 6528+ 1
 6529+ 1			        top_mb  subb,a,??0537,<000h>
 6530+ 1			        top_mb  subb,dir0,??0537,<000h>
 6531+ 1
 6532+ 1			        eot     'e',??0537
 6533+ 1
 6534+ 1			        top_mc  subb,??0538,<000h>
 6535+ 1
 6536+ 1			        eot     'f',??0538
 6537+ 1			        endif
 6538:				        putc    #'1'
 6539+ 1  1524			??0562:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 118



 Line  I  Addr  Code            Source

 6540+ 1			        ;jnb     SCON.1,putc_loop
 6541+ 1			        ;clr     SCON.1
 6542+ 1  1524	75 99 31	        mov     SBUF,#'1'
 6543:				        tst_alu subb,070h,073h,002h,001h     ; /CY /AC /OV (CY input)
 6544+ 1
 6545+ 1	N      0070	        arg0    set 070h
 6546+ 1	N      0073	        arg1    set 073h
 6547+ 1	N      0002	        res     set 002h
 6548+ 1
 6549+ 1			        top_ma  subb,dir0,??0564,<001h>
 6550+ 2  1527	75 60 70	        mov     dir0,#arg0
 6551+ 2  152A	74 73		        mov     a,#arg1
 6552+ 2			        ifnb    <001h>
 6553+ 2			        set_cy  001h
 6554+ 3	N      0001	??0569  set     (001h and 1)
 6555+ 3	N      FFFF	        if      ??0569 eq 1
 6556+ 3  152C	D3		        setb    c
 6557+ 3			        else
 6558+ 3			        clr     c
 6559+ 3			        endif
 6560+ 2			        endif
 6561+ 2  152D	95 60		        subb      a,dir0
 6562+ 2			        ifnb    <001h>
 6563+ 2			        save_psw
 6564+ 3  152F	85 D0 70	        mov     saved_psw,PSW
 6565+ 2			        endif
 6566+ 2  1532	B4 02 6B	        cjne    a,#res,??0564
 6567+ 2			        ifnb    <001h>
 6568+ 2			        tst_psw <001h>,??0564
 6569+ 3  1535	E5 70		        mov     a,saved_psw
 6570+ 3  1537	54 C4		        anl     a,#0c4h
 6571+ 3  1539	64 01		        xrl     a,#001h
 6572+ 3  153B	54 FE		        anl     a,#0feh
 6573+ 3  153D	70 61		        jnz     ??0564
 6574+ 2			        endif
 6575+ 1  153F	78 60		        mov     r0,#dir0
 6576+ 1			        top_ma  subb,@r0,??0564,<001h>
 6577+ 2  1541	76 70		        mov     @r0,#arg0
 6578+ 2  1543	74 73		        mov     a,#arg1
 6579+ 2			        ifnb    <001h>
 6580+ 2			        set_cy  001h
 6581+ 3	N      0001	??0570  set     (001h and 1)
 6582+ 3	N      FFFF	        if      ??0570 eq 1
 6583+ 3  1545	D3		        setb    c
 6584+ 3			        else
 6585+ 3			        clr     c
 6586+ 3			        endif
 6587+ 2			        endif
 6588+ 2  1546	96		        subb      a,@r0
 6589+ 2			        ifnb    <001h>
 6590+ 2			        save_psw
 6591+ 3  1547	85 D0 70	        mov     saved_psw,PSW
 6592+ 2			        endif
 6593+ 2  154A	B4 02 53	        cjne    a,#res,??0564
 6594+ 2			        ifnb    <001h>
 6595+ 2			        tst_psw <001h>,??0564

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 119



 Line  I  Addr  Code            Source

 6596+ 3  154D	E5 70		        mov     a,saved_psw
 6597+ 3  154F	54 C4		        anl     a,#0c4h
 6598+ 3  1551	64 01		        xrl     a,#001h
 6599+ 3  1553	54 FE		        anl     a,#0feh
 6600+ 3  1555	70 49		        jnz     ??0564
 6601+ 2			        endif
 6602+ 1  1557	79 31		        mov     r1,#031h
 6603+ 1			        top_ma  subb,@r1,??0564,<001h>
 6604+ 2  1559	77 70		        mov     @r1,#arg0
 6605+ 2  155B	74 73		        mov     a,#arg1
 6606+ 2			        ifnb    <001h>
 6607+ 2			        set_cy  001h
 6608+ 3	N      0001	??0571  set     (001h and 1)
 6609+ 3	N      FFFF	        if      ??0571 eq 1
 6610+ 3  155D	D3		        setb    c
 6611+ 3			        else
 6612+ 3			        clr     c
 6613+ 3			        endif
 6614+ 2			        endif
 6615+ 2  155E	97		        subb      a,@r1
 6616+ 2			        ifnb    <001h>
 6617+ 2			        save_psw
 6618+ 3  155F	85 D0 70	        mov     saved_psw,PSW
 6619+ 2			        endif
 6620+ 2  1562	B4 02 3B	        cjne    a,#res,??0564
 6621+ 2			        ifnb    <001h>
 6622+ 2			        tst_psw <001h>,??0564
 6623+ 3  1565	E5 70		        mov     a,saved_psw
 6624+ 3  1567	54 C4		        anl     a,#0c4h
 6625+ 3  1569	64 01		        xrl     a,#001h
 6626+ 3  156B	54 FE		        anl     a,#0feh
 6627+ 3  156D	70 31		        jnz     ??0564
 6628+ 2			        endif
 6629+ 1
 6630+ 1			        top_ma  subb,r0,??0564,<001h>
 6631+ 2  156F	78 70		        mov     r0,#arg0
 6632+ 2  1571	74 73		        mov     a,#arg1
 6633+ 2			        ifnb    <001h>
 6634+ 2			        set_cy  001h
 6635+ 3	N      0001	??0572  set     (001h and 1)
 6636+ 3	N      FFFF	        if      ??0572 eq 1
 6637+ 3  1573	D3		        setb    c
 6638+ 3			        else
 6639+ 3			        clr     c
 6640+ 3			        endif
 6641+ 2			        endif
 6642+ 2  1574	98		        subb      a,r0
 6643+ 2			        ifnb    <001h>
 6644+ 2			        save_psw
 6645+ 3  1575	85 D0 70	        mov     saved_psw,PSW
 6646+ 2			        endif
 6647+ 2  1578	B4 02 25	        cjne    a,#res,??0564
 6648+ 2			        ifnb    <001h>
 6649+ 2			        tst_psw <001h>,??0564
 6650+ 3  157B	E5 70		        mov     a,saved_psw
 6651+ 3  157D	54 C4		        anl     a,#0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 120



 Line  I  Addr  Code            Source

 6652+ 3  157F	64 01		        xrl     a,#001h
 6653+ 3  1581	54 FE		        anl     a,#0feh
 6654+ 3  1583	70 1B		        jnz     ??0564
 6655+ 2			        endif
 6656+ 1			        top_ma  subb,r1,??0564,<001h>
 6657+ 2  1585	79 70		        mov     r1,#arg0
 6658+ 2  1587	74 73		        mov     a,#arg1
 6659+ 2			        ifnb    <001h>
 6660+ 2			        set_cy  001h
 6661+ 3	N      0001	??0573  set     (001h and 1)
 6662+ 3	N      FFFF	        if      ??0573 eq 1
 6663+ 3  1589	D3		        setb    c
 6664+ 3			        else
 6665+ 3			        clr     c
 6666+ 3			        endif
 6667+ 2			        endif
 6668+ 2  158A	99		        subb      a,r1
 6669+ 2			        ifnb    <001h>
 6670+ 2			        save_psw
 6671+ 3  158B	85 D0 70	        mov     saved_psw,PSW
 6672+ 2			        endif
 6673+ 2  158E	B4 02 0F	        cjne    a,#res,??0564
 6674+ 2			        ifnb    <001h>
 6675+ 2			        tst_psw <001h>,??0564
 6676+ 3  1591	E5 70		        mov     a,saved_psw
 6677+ 3  1593	54 C4		        anl     a,#0c4h
 6678+ 3  1595	64 01		        xrl     a,#001h
 6679+ 3  1597	54 FE		        anl     a,#0feh
 6680+ 3  1599	70 05		        jnz     ??0564
 6681+ 2			        endif
 6682+ 1
 6683+ 1			        eot     'a',??0564
 6684+ 2			        putc    #'a'
 6685+ 3  159B			??0575:
 6686+ 3			        ;jnb     SCON.1,putc_loop
 6687+ 3			        ;clr     SCON.1
 6688+ 3  159B	75 99 61	        mov     SBUF,#'a'
 6689+ 2  159E	80 06		        sjmp    ??0574
 6690+ 2  15A0			??0564:  putc    #'?'
 6691+ 3  15A0			??0576:
 6692+ 3			        ;jnb     SCON.1,putc_loop
 6693+ 3			        ;clr     SCON.1
 6694+ 3  15A0	75 99 3F	        mov     SBUF,#'?'
 6695+ 2  15A3	75 6E 01	        mov     fail,#001h
 6696+ 2  15A6			??0574:
 6697+ 1
 6698+ 1			        top_ma  subb,r2,??0565,<001h>
 6699+ 2  15A6	7A 70		        mov     r2,#arg0
 6700+ 2  15A8	74 73		        mov     a,#arg1
 6701+ 2			        ifnb    <001h>
 6702+ 2			        set_cy  001h
 6703+ 3	N      0001	??0577  set     (001h and 1)
 6704+ 3	N      FFFF	        if      ??0577 eq 1
 6705+ 3  15AA	D3		        setb    c
 6706+ 3			        else
 6707+ 3			        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 121



 Line  I  Addr  Code            Source

 6708+ 3			        endif
 6709+ 2			        endif
 6710+ 2  15AB	9A		        subb      a,r2
 6711+ 2			        ifnb    <001h>
 6712+ 2			        save_psw
 6713+ 3  15AC	85 D0 70	        mov     saved_psw,PSW
 6714+ 2			        endif
 6715+ 2  15AF	B4 02 25	        cjne    a,#res,??0565
 6716+ 2			        ifnb    <001h>
 6717+ 2			        tst_psw <001h>,??0565
 6718+ 3  15B2	E5 70		        mov     a,saved_psw
 6719+ 3  15B4	54 C4		        anl     a,#0c4h
 6720+ 3  15B6	64 01		        xrl     a,#001h
 6721+ 3  15B8	54 FE		        anl     a,#0feh
 6722+ 3  15BA	70 1B		        jnz     ??0565
 6723+ 2			        endif
 6724+ 1			        top_ma  subb,r3,??0565,<001h>
 6725+ 2  15BC	7B 70		        mov     r3,#arg0
 6726+ 2  15BE	74 73		        mov     a,#arg1
 6727+ 2			        ifnb    <001h>
 6728+ 2			        set_cy  001h
 6729+ 3	N      0001	??0578  set     (001h and 1)
 6730+ 3	N      FFFF	        if      ??0578 eq 1
 6731+ 3  15C0	D3		        setb    c
 6732+ 3			        else
 6733+ 3			        clr     c
 6734+ 3			        endif
 6735+ 2			        endif
 6736+ 2  15C1	9B		        subb      a,r3
 6737+ 2			        ifnb    <001h>
 6738+ 2			        save_psw
 6739+ 3  15C2	85 D0 70	        mov     saved_psw,PSW
 6740+ 2			        endif
 6741+ 2  15C5	B4 02 0F	        cjne    a,#res,??0565
 6742+ 2			        ifnb    <001h>
 6743+ 2			        tst_psw <001h>,??0565
 6744+ 3  15C8	E5 70		        mov     a,saved_psw
 6745+ 3  15CA	54 C4		        anl     a,#0c4h
 6746+ 3  15CC	64 01		        xrl     a,#001h
 6747+ 3  15CE	54 FE		        anl     a,#0feh
 6748+ 3  15D0	70 05		        jnz     ??0565
 6749+ 2			        endif
 6750+ 1
 6751+ 1			        eot     'b',??0565
 6752+ 2			        putc    #'b'
 6753+ 3  15D2			??0580:
 6754+ 3			        ;jnb     SCON.1,putc_loop
 6755+ 3			        ;clr     SCON.1
 6756+ 3  15D2	75 99 62	        mov     SBUF,#'b'
 6757+ 2  15D5	80 06		        sjmp    ??0579
 6758+ 2  15D7			??0565:  putc    #'?'
 6759+ 3  15D7			??0581:
 6760+ 3			        ;jnb     SCON.1,putc_loop
 6761+ 3			        ;clr     SCON.1
 6762+ 3  15D7	75 99 3F	        mov     SBUF,#'?'
 6763+ 2  15DA	75 6E 01	        mov     fail,#001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 122



 Line  I  Addr  Code            Source

 6764+ 2  15DD			??0579:
 6765+ 1
 6766+ 1			        top_ma  subb,r4,??0566,<001h>
 6767+ 2  15DD	7C 70		        mov     r4,#arg0
 6768+ 2  15DF	74 73		        mov     a,#arg1
 6769+ 2			        ifnb    <001h>
 6770+ 2			        set_cy  001h
 6771+ 3	N      0001	??0582  set     (001h and 1)
 6772+ 3	N      FFFF	        if      ??0582 eq 1
 6773+ 3  15E1	D3		        setb    c
 6774+ 3			        else
 6775+ 3			        clr     c
 6776+ 3			        endif
 6777+ 2			        endif
 6778+ 2  15E2	9C		        subb      a,r4
 6779+ 2			        ifnb    <001h>
 6780+ 2			        save_psw
 6781+ 3  15E3	85 D0 70	        mov     saved_psw,PSW
 6782+ 2			        endif
 6783+ 2  15E6	B4 02 25	        cjne    a,#res,??0566
 6784+ 2			        ifnb    <001h>
 6785+ 2			        tst_psw <001h>,??0566
 6786+ 3  15E9	E5 70		        mov     a,saved_psw
 6787+ 3  15EB	54 C4		        anl     a,#0c4h
 6788+ 3  15ED	64 01		        xrl     a,#001h
 6789+ 3  15EF	54 FE		        anl     a,#0feh
 6790+ 3  15F1	70 1B		        jnz     ??0566
 6791+ 2			        endif
 6792+ 1			        top_ma  subb,r5,??0566,<001h>
 6793+ 2  15F3	7D 70		        mov     r5,#arg0
 6794+ 2  15F5	74 73		        mov     a,#arg1
 6795+ 2			        ifnb    <001h>
 6796+ 2			        set_cy  001h
 6797+ 3	N      0001	??0583  set     (001h and 1)
 6798+ 3	N      FFFF	        if      ??0583 eq 1
 6799+ 3  15F7	D3		        setb    c
 6800+ 3			        else
 6801+ 3			        clr     c
 6802+ 3			        endif
 6803+ 2			        endif
 6804+ 2  15F8	9D		        subb      a,r5
 6805+ 2			        ifnb    <001h>
 6806+ 2			        save_psw
 6807+ 3  15F9	85 D0 70	        mov     saved_psw,PSW
 6808+ 2			        endif
 6809+ 2  15FC	B4 02 0F	        cjne    a,#res,??0566
 6810+ 2			        ifnb    <001h>
 6811+ 2			        tst_psw <001h>,??0566
 6812+ 3  15FF	E5 70		        mov     a,saved_psw
 6813+ 3  1601	54 C4		        anl     a,#0c4h
 6814+ 3  1603	64 01		        xrl     a,#001h
 6815+ 3  1605	54 FE		        anl     a,#0feh
 6816+ 3  1607	70 05		        jnz     ??0566
 6817+ 2			        endif
 6818+ 1
 6819+ 1			        eot     'c',??0566

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 123



 Line  I  Addr  Code            Source

 6820+ 2			        putc    #'c'
 6821+ 3  1609			??0585:
 6822+ 3			        ;jnb     SCON.1,putc_loop
 6823+ 3			        ;clr     SCON.1
 6824+ 3  1609	75 99 63	        mov     SBUF,#'c'
 6825+ 2  160C	80 06		        sjmp    ??0584
 6826+ 2  160E			??0566:  putc    #'?'
 6827+ 3  160E			??0586:
 6828+ 3			        ;jnb     SCON.1,putc_loop
 6829+ 3			        ;clr     SCON.1
 6830+ 3  160E	75 99 3F	        mov     SBUF,#'?'
 6831+ 2  1611	75 6E 01	        mov     fail,#001h
 6832+ 2  1614			??0584:
 6833+ 1
 6834+ 1			        top_ma  subb,r6,??0563,<001h>
 6835+ 2  1614	7E 70		        mov     r6,#arg0
 6836+ 2  1616	74 73		        mov     a,#arg1
 6837+ 2			        ifnb    <001h>
 6838+ 2			        set_cy  001h
 6839+ 3	N      0001	??0587  set     (001h and 1)
 6840+ 3	N      FFFF	        if      ??0587 eq 1
 6841+ 3  1618	D3		        setb    c
 6842+ 3			        else
 6843+ 3			        clr     c
 6844+ 3			        endif
 6845+ 2			        endif
 6846+ 2  1619	9E		        subb      a,r6
 6847+ 2			        ifnb    <001h>
 6848+ 2			        save_psw
 6849+ 3  161A	85 D0 70	        mov     saved_psw,PSW
 6850+ 2			        endif
 6851+ 2  161D	B4 02 25	        cjne    a,#res,??0563
 6852+ 2			        ifnb    <001h>
 6853+ 2			        tst_psw <001h>,??0563
 6854+ 3  1620	E5 70		        mov     a,saved_psw
 6855+ 3  1622	54 C4		        anl     a,#0c4h
 6856+ 3  1624	64 01		        xrl     a,#001h
 6857+ 3  1626	54 FE		        anl     a,#0feh
 6858+ 3  1628	70 1B		        jnz     ??0563
 6859+ 2			        endif
 6860+ 1			        top_ma  subb,r7,??0563,<001h>
 6861+ 2  162A	7F 70		        mov     r7,#arg0
 6862+ 2  162C	74 73		        mov     a,#arg1
 6863+ 2			        ifnb    <001h>
 6864+ 2			        set_cy  001h
 6865+ 3	N      0001	??0588  set     (001h and 1)
 6866+ 3	N      FFFF	        if      ??0588 eq 1
 6867+ 3  162E	D3		        setb    c
 6868+ 3			        else
 6869+ 3			        clr     c
 6870+ 3			        endif
 6871+ 2			        endif
 6872+ 2  162F	9F		        subb      a,r7
 6873+ 2			        ifnb    <001h>
 6874+ 2			        save_psw
 6875+ 3  1630	85 D0 70	        mov     saved_psw,PSW

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 124



 Line  I  Addr  Code            Source

 6876+ 2			        endif
 6877+ 2  1633	B4 02 0F	        cjne    a,#res,??0563
 6878+ 2			        ifnb    <001h>
 6879+ 2			        tst_psw <001h>,??0563
 6880+ 3  1636	E5 70		        mov     a,saved_psw
 6881+ 3  1638	54 C4		        anl     a,#0c4h
 6882+ 3  163A	64 01		        xrl     a,#001h
 6883+ 3  163C	54 FE		        anl     a,#0feh
 6884+ 3  163E	70 05		        jnz     ??0563
 6885+ 2			        endif
 6886+ 1
 6887+ 1			        eot     'd',??0563
 6888+ 2			        putc    #'d'
 6889+ 3  1640			??0590:
 6890+ 3			        ;jnb     SCON.1,putc_loop
 6891+ 3			        ;clr     SCON.1
 6892+ 3  1640	75 99 64	        mov     SBUF,#'d'
 6893+ 2  1643	80 06		        sjmp    ??0589
 6894+ 2  1645			??0563:  putc    #'?'
 6895+ 3  1645			??0591:
 6896+ 3			        ;jnb     SCON.1,putc_loop
 6897+ 3			        ;clr     SCON.1
 6898+ 3  1645	75 99 3F	        mov     SBUF,#'?'
 6899+ 2  1648	75 6E 01	        mov     fail,#001h
 6900+ 2  164B			??0589:
 6901+ 1
 6902+ 1			        ifb     <001h>
 6903+ 1
 6904+ 1			        top_mb  subb,a,??0567,<001h>
 6905+ 1			        top_mb  subb,dir0,??0567,<001h>
 6906+ 1
 6907+ 1			        eot     'e',??0567
 6908+ 1
 6909+ 1			        top_mc  subb,??0568,<001h>
 6910+ 1
 6911+ 1			        eot     'f',??0568
 6912+ 1			        endif
 6913:				        putc    #'2'
 6914+ 1  164B			??0592:
 6915+ 1			        ;jnb     SCON.1,putc_loop
 6916+ 1			        ;clr     SCON.1
 6917+ 1  164B	75 99 32	        mov     SBUF,#'2'
 6918:				        tst_alu subb,0c3h,0c5h,002h,004h     ; /CY  AC  OV
 6919+ 1
 6920+ 1	N      00C3	        arg0    set 0c3h
 6921+ 1	N      00C5	        arg1    set 0c5h
 6922+ 1	N      0002	        res     set 002h
 6923+ 1
 6924+ 1			        top_ma  subb,dir0,??0594,<004h>
 6925+ 2  164E	75 60 C3	        mov     dir0,#arg0
 6926+ 2  1651	74 C5		        mov     a,#arg1
 6927+ 2			        ifnb    <004h>
 6928+ 2			        set_cy  004h
 6929+ 3	N      0000	??0599  set     (004h and 1)
 6930+ 3	N      0000	        if      ??0599 eq 1
 6931+ 3			        setb    c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 125



 Line  I  Addr  Code            Source

 6932+ 3			        else
 6933+ 3  1653	C3		        clr     c
 6934+ 3			        endif
 6935+ 2			        endif
 6936+ 2  1654	95 60		        subb      a,dir0
 6937+ 2			        ifnb    <004h>
 6938+ 2			        save_psw
 6939+ 3  1656	85 D0 70	        mov     saved_psw,PSW
 6940+ 2			        endif
 6941+ 2  1659	B4 02 6B	        cjne    a,#res,??0594
 6942+ 2			        ifnb    <004h>
 6943+ 2			        tst_psw <004h>,??0594
 6944+ 3  165C	E5 70		        mov     a,saved_psw
 6945+ 3  165E	54 C4		        anl     a,#0c4h
 6946+ 3  1660	64 04		        xrl     a,#004h
 6947+ 3  1662	54 FE		        anl     a,#0feh
 6948+ 3  1664	70 61		        jnz     ??0594
 6949+ 2			        endif
 6950+ 1  1666	78 60		        mov     r0,#dir0
 6951+ 1			        top_ma  subb,@r0,??0594,<004h>
 6952+ 2  1668	76 C3		        mov     @r0,#arg0
 6953+ 2  166A	74 C5		        mov     a,#arg1
 6954+ 2			        ifnb    <004h>
 6955+ 2			        set_cy  004h
 6956+ 3	N      0000	??0600  set     (004h and 1)
 6957+ 3	N      0000	        if      ??0600 eq 1
 6958+ 3			        setb    c
 6959+ 3			        else
 6960+ 3  166C	C3		        clr     c
 6961+ 3			        endif
 6962+ 2			        endif
 6963+ 2  166D	96		        subb      a,@r0
 6964+ 2			        ifnb    <004h>
 6965+ 2			        save_psw
 6966+ 3  166E	85 D0 70	        mov     saved_psw,PSW
 6967+ 2			        endif
 6968+ 2  1671	B4 02 53	        cjne    a,#res,??0594
 6969+ 2			        ifnb    <004h>
 6970+ 2			        tst_psw <004h>,??0594
 6971+ 3  1674	E5 70		        mov     a,saved_psw
 6972+ 3  1676	54 C4		        anl     a,#0c4h
 6973+ 3  1678	64 04		        xrl     a,#004h
 6974+ 3  167A	54 FE		        anl     a,#0feh
 6975+ 3  167C	70 49		        jnz     ??0594
 6976+ 2			        endif
 6977+ 1  167E	79 31		        mov     r1,#031h
 6978+ 1			        top_ma  subb,@r1,??0594,<004h>
 6979+ 2  1680	77 C3		        mov     @r1,#arg0
 6980+ 2  1682	74 C5		        mov     a,#arg1
 6981+ 2			        ifnb    <004h>
 6982+ 2			        set_cy  004h
 6983+ 3	N      0000	??0601  set     (004h and 1)
 6984+ 3	N      0000	        if      ??0601 eq 1
 6985+ 3			        setb    c
 6986+ 3			        else
 6987+ 3  1684	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 126



 Line  I  Addr  Code            Source

 6988+ 3			        endif
 6989+ 2			        endif
 6990+ 2  1685	97		        subb      a,@r1
 6991+ 2			        ifnb    <004h>
 6992+ 2			        save_psw
 6993+ 3  1686	85 D0 70	        mov     saved_psw,PSW
 6994+ 2			        endif
 6995+ 2  1689	B4 02 3B	        cjne    a,#res,??0594
 6996+ 2			        ifnb    <004h>
 6997+ 2			        tst_psw <004h>,??0594
 6998+ 3  168C	E5 70		        mov     a,saved_psw
 6999+ 3  168E	54 C4		        anl     a,#0c4h
 7000+ 3  1690	64 04		        xrl     a,#004h
 7001+ 3  1692	54 FE		        anl     a,#0feh
 7002+ 3  1694	70 31		        jnz     ??0594
 7003+ 2			        endif
 7004+ 1
 7005+ 1			        top_ma  subb,r0,??0594,<004h>
 7006+ 2  1696	78 C3		        mov     r0,#arg0
 7007+ 2  1698	74 C5		        mov     a,#arg1
 7008+ 2			        ifnb    <004h>
 7009+ 2			        set_cy  004h
 7010+ 3	N      0000	??0602  set     (004h and 1)
 7011+ 3	N      0000	        if      ??0602 eq 1
 7012+ 3			        setb    c
 7013+ 3			        else
 7014+ 3  169A	C3		        clr     c
 7015+ 3			        endif
 7016+ 2			        endif
 7017+ 2  169B	98		        subb      a,r0
 7018+ 2			        ifnb    <004h>
 7019+ 2			        save_psw
 7020+ 3  169C	85 D0 70	        mov     saved_psw,PSW
 7021+ 2			        endif
 7022+ 2  169F	B4 02 25	        cjne    a,#res,??0594
 7023+ 2			        ifnb    <004h>
 7024+ 2			        tst_psw <004h>,??0594
 7025+ 3  16A2	E5 70		        mov     a,saved_psw
 7026+ 3  16A4	54 C4		        anl     a,#0c4h
 7027+ 3  16A6	64 04		        xrl     a,#004h
 7028+ 3  16A8	54 FE		        anl     a,#0feh
 7029+ 3  16AA	70 1B		        jnz     ??0594
 7030+ 2			        endif
 7031+ 1			        top_ma  subb,r1,??0594,<004h>
 7032+ 2  16AC	79 C3		        mov     r1,#arg0
 7033+ 2  16AE	74 C5		        mov     a,#arg1
 7034+ 2			        ifnb    <004h>
 7035+ 2			        set_cy  004h
 7036+ 3	N      0000	??0603  set     (004h and 1)
 7037+ 3	N      0000	        if      ??0603 eq 1
 7038+ 3			        setb    c
 7039+ 3			        else
 7040+ 3  16B0	C3		        clr     c
 7041+ 3			        endif
 7042+ 2			        endif
 7043+ 2  16B1	99		        subb      a,r1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 127



 Line  I  Addr  Code            Source

 7044+ 2			        ifnb    <004h>
 7045+ 2			        save_psw
 7046+ 3  16B2	85 D0 70	        mov     saved_psw,PSW
 7047+ 2			        endif
 7048+ 2  16B5	B4 02 0F	        cjne    a,#res,??0594
 7049+ 2			        ifnb    <004h>
 7050+ 2			        tst_psw <004h>,??0594
 7051+ 3  16B8	E5 70		        mov     a,saved_psw
 7052+ 3  16BA	54 C4		        anl     a,#0c4h
 7053+ 3  16BC	64 04		        xrl     a,#004h
 7054+ 3  16BE	54 FE		        anl     a,#0feh
 7055+ 3  16C0	70 05		        jnz     ??0594
 7056+ 2			        endif
 7057+ 1
 7058+ 1			        eot     'a',??0594
 7059+ 2			        putc    #'a'
 7060+ 3  16C2			??0605:
 7061+ 3			        ;jnb     SCON.1,putc_loop
 7062+ 3			        ;clr     SCON.1
 7063+ 3  16C2	75 99 61	        mov     SBUF,#'a'
 7064+ 2  16C5	80 06		        sjmp    ??0604
 7065+ 2  16C7			??0594:  putc    #'?'
 7066+ 3  16C7			??0606:
 7067+ 3			        ;jnb     SCON.1,putc_loop
 7068+ 3			        ;clr     SCON.1
 7069+ 3  16C7	75 99 3F	        mov     SBUF,#'?'
 7070+ 2  16CA	75 6E 01	        mov     fail,#001h
 7071+ 2  16CD			??0604:
 7072+ 1
 7073+ 1			        top_ma  subb,r2,??0595,<004h>
 7074+ 2  16CD	7A C3		        mov     r2,#arg0
 7075+ 2  16CF	74 C5		        mov     a,#arg1
 7076+ 2			        ifnb    <004h>
 7077+ 2			        set_cy  004h
 7078+ 3	N      0000	??0607  set     (004h and 1)
 7079+ 3	N      0000	        if      ??0607 eq 1
 7080+ 3			        setb    c
 7081+ 3			        else
 7082+ 3  16D1	C3		        clr     c
 7083+ 3			        endif
 7084+ 2			        endif
 7085+ 2  16D2	9A		        subb      a,r2
 7086+ 2			        ifnb    <004h>
 7087+ 2			        save_psw
 7088+ 3  16D3	85 D0 70	        mov     saved_psw,PSW
 7089+ 2			        endif
 7090+ 2  16D6	B4 02 25	        cjne    a,#res,??0595
 7091+ 2			        ifnb    <004h>
 7092+ 2			        tst_psw <004h>,??0595
 7093+ 3  16D9	E5 70		        mov     a,saved_psw
 7094+ 3  16DB	54 C4		        anl     a,#0c4h
 7095+ 3  16DD	64 04		        xrl     a,#004h
 7096+ 3  16DF	54 FE		        anl     a,#0feh
 7097+ 3  16E1	70 1B		        jnz     ??0595
 7098+ 2			        endif
 7099+ 1			        top_ma  subb,r3,??0595,<004h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 128



 Line  I  Addr  Code            Source

 7100+ 2  16E3	7B C3		        mov     r3,#arg0
 7101+ 2  16E5	74 C5		        mov     a,#arg1
 7102+ 2			        ifnb    <004h>
 7103+ 2			        set_cy  004h
 7104+ 3	N      0000	??0608  set     (004h and 1)
 7105+ 3	N      0000	        if      ??0608 eq 1
 7106+ 3			        setb    c
 7107+ 3			        else
 7108+ 3  16E7	C3		        clr     c
 7109+ 3			        endif
 7110+ 2			        endif
 7111+ 2  16E8	9B		        subb      a,r3
 7112+ 2			        ifnb    <004h>
 7113+ 2			        save_psw
 7114+ 3  16E9	85 D0 70	        mov     saved_psw,PSW
 7115+ 2			        endif
 7116+ 2  16EC	B4 02 0F	        cjne    a,#res,??0595
 7117+ 2			        ifnb    <004h>
 7118+ 2			        tst_psw <004h>,??0595
 7119+ 3  16EF	E5 70		        mov     a,saved_psw
 7120+ 3  16F1	54 C4		        anl     a,#0c4h
 7121+ 3  16F3	64 04		        xrl     a,#004h
 7122+ 3  16F5	54 FE		        anl     a,#0feh
 7123+ 3  16F7	70 05		        jnz     ??0595
 7124+ 2			        endif
 7125+ 1
 7126+ 1			        eot     'b',??0595
 7127+ 2			        putc    #'b'
 7128+ 3  16F9			??0610:
 7129+ 3			        ;jnb     SCON.1,putc_loop
 7130+ 3			        ;clr     SCON.1
 7131+ 3  16F9	75 99 62	        mov     SBUF,#'b'
 7132+ 2  16FC	80 06		        sjmp    ??0609
 7133+ 2  16FE			??0595:  putc    #'?'
 7134+ 3  16FE			??0611:
 7135+ 3			        ;jnb     SCON.1,putc_loop
 7136+ 3			        ;clr     SCON.1
 7137+ 3  16FE	75 99 3F	        mov     SBUF,#'?'
 7138+ 2  1701	75 6E 01	        mov     fail,#001h
 7139+ 2  1704			??0609:
 7140+ 1
 7141+ 1			        top_ma  subb,r4,??0596,<004h>
 7142+ 2  1704	7C C3		        mov     r4,#arg0
 7143+ 2  1706	74 C5		        mov     a,#arg1
 7144+ 2			        ifnb    <004h>
 7145+ 2			        set_cy  004h
 7146+ 3	N      0000	??0612  set     (004h and 1)
 7147+ 3	N      0000	        if      ??0612 eq 1
 7148+ 3			        setb    c
 7149+ 3			        else
 7150+ 3  1708	C3		        clr     c
 7151+ 3			        endif
 7152+ 2			        endif
 7153+ 2  1709	9C		        subb      a,r4
 7154+ 2			        ifnb    <004h>
 7155+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 129



 Line  I  Addr  Code            Source

 7156+ 3  170A	85 D0 70	        mov     saved_psw,PSW
 7157+ 2			        endif
 7158+ 2  170D	B4 02 25	        cjne    a,#res,??0596
 7159+ 2			        ifnb    <004h>
 7160+ 2			        tst_psw <004h>,??0596
 7161+ 3  1710	E5 70		        mov     a,saved_psw
 7162+ 3  1712	54 C4		        anl     a,#0c4h
 7163+ 3  1714	64 04		        xrl     a,#004h
 7164+ 3  1716	54 FE		        anl     a,#0feh
 7165+ 3  1718	70 1B		        jnz     ??0596
 7166+ 2			        endif
 7167+ 1			        top_ma  subb,r5,??0596,<004h>
 7168+ 2  171A	7D C3		        mov     r5,#arg0
 7169+ 2  171C	74 C5		        mov     a,#arg1
 7170+ 2			        ifnb    <004h>
 7171+ 2			        set_cy  004h
 7172+ 3	N      0000	??0613  set     (004h and 1)
 7173+ 3	N      0000	        if      ??0613 eq 1
 7174+ 3			        setb    c
 7175+ 3			        else
 7176+ 3  171E	C3		        clr     c
 7177+ 3			        endif
 7178+ 2			        endif
 7179+ 2  171F	9D		        subb      a,r5
 7180+ 2			        ifnb    <004h>
 7181+ 2			        save_psw
 7182+ 3  1720	85 D0 70	        mov     saved_psw,PSW
 7183+ 2			        endif
 7184+ 2  1723	B4 02 0F	        cjne    a,#res,??0596
 7185+ 2			        ifnb    <004h>
 7186+ 2			        tst_psw <004h>,??0596
 7187+ 3  1726	E5 70		        mov     a,saved_psw
 7188+ 3  1728	54 C4		        anl     a,#0c4h
 7189+ 3  172A	64 04		        xrl     a,#004h
 7190+ 3  172C	54 FE		        anl     a,#0feh
 7191+ 3  172E	70 05		        jnz     ??0596
 7192+ 2			        endif
 7193+ 1
 7194+ 1			        eot     'c',??0596
 7195+ 2			        putc    #'c'
 7196+ 3  1730			??0615:
 7197+ 3			        ;jnb     SCON.1,putc_loop
 7198+ 3			        ;clr     SCON.1
 7199+ 3  1730	75 99 63	        mov     SBUF,#'c'
 7200+ 2  1733	80 06		        sjmp    ??0614
 7201+ 2  1735			??0596:  putc    #'?'
 7202+ 3  1735			??0616:
 7203+ 3			        ;jnb     SCON.1,putc_loop
 7204+ 3			        ;clr     SCON.1
 7205+ 3  1735	75 99 3F	        mov     SBUF,#'?'
 7206+ 2  1738	75 6E 01	        mov     fail,#001h
 7207+ 2  173B			??0614:
 7208+ 1
 7209+ 1			        top_ma  subb,r6,??0593,<004h>
 7210+ 2  173B	7E C3		        mov     r6,#arg0
 7211+ 2  173D	74 C5		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 130



 Line  I  Addr  Code            Source

 7212+ 2			        ifnb    <004h>
 7213+ 2			        set_cy  004h
 7214+ 3	N      0000	??0617  set     (004h and 1)
 7215+ 3	N      0000	        if      ??0617 eq 1
 7216+ 3			        setb    c
 7217+ 3			        else
 7218+ 3  173F	C3		        clr     c
 7219+ 3			        endif
 7220+ 2			        endif
 7221+ 2  1740	9E		        subb      a,r6
 7222+ 2			        ifnb    <004h>
 7223+ 2			        save_psw
 7224+ 3  1741	85 D0 70	        mov     saved_psw,PSW
 7225+ 2			        endif
 7226+ 2  1744	B4 02 25	        cjne    a,#res,??0593
 7227+ 2			        ifnb    <004h>
 7228+ 2			        tst_psw <004h>,??0593
 7229+ 3  1747	E5 70		        mov     a,saved_psw
 7230+ 3  1749	54 C4		        anl     a,#0c4h
 7231+ 3  174B	64 04		        xrl     a,#004h
 7232+ 3  174D	54 FE		        anl     a,#0feh
 7233+ 3  174F	70 1B		        jnz     ??0593
 7234+ 2			        endif
 7235+ 1			        top_ma  subb,r7,??0593,<004h>
 7236+ 2  1751	7F C3		        mov     r7,#arg0
 7237+ 2  1753	74 C5		        mov     a,#arg1
 7238+ 2			        ifnb    <004h>
 7239+ 2			        set_cy  004h
 7240+ 3	N      0000	??0618  set     (004h and 1)
 7241+ 3	N      0000	        if      ??0618 eq 1
 7242+ 3			        setb    c
 7243+ 3			        else
 7244+ 3  1755	C3		        clr     c
 7245+ 3			        endif
 7246+ 2			        endif
 7247+ 2  1756	9F		        subb      a,r7
 7248+ 2			        ifnb    <004h>
 7249+ 2			        save_psw
 7250+ 3  1757	85 D0 70	        mov     saved_psw,PSW
 7251+ 2			        endif
 7252+ 2  175A	B4 02 0F	        cjne    a,#res,??0593
 7253+ 2			        ifnb    <004h>
 7254+ 2			        tst_psw <004h>,??0593
 7255+ 3  175D	E5 70		        mov     a,saved_psw
 7256+ 3  175F	54 C4		        anl     a,#0c4h
 7257+ 3  1761	64 04		        xrl     a,#004h
 7258+ 3  1763	54 FE		        anl     a,#0feh
 7259+ 3  1765	70 05		        jnz     ??0593
 7260+ 2			        endif
 7261+ 1
 7262+ 1			        eot     'd',??0593
 7263+ 2			        putc    #'d'
 7264+ 3  1767			??0620:
 7265+ 3			        ;jnb     SCON.1,putc_loop
 7266+ 3			        ;clr     SCON.1
 7267+ 3  1767	75 99 64	        mov     SBUF,#'d'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 131



 Line  I  Addr  Code            Source

 7268+ 2  176A	80 06		        sjmp    ??0619
 7269+ 2  176C			??0593:  putc    #'?'
 7270+ 3  176C			??0621:
 7271+ 3			        ;jnb     SCON.1,putc_loop
 7272+ 3			        ;clr     SCON.1
 7273+ 3  176C	75 99 3F	        mov     SBUF,#'?'
 7274+ 2  176F	75 6E 01	        mov     fail,#001h
 7275+ 2  1772			??0619:
 7276+ 1
 7277+ 1			        ifb     <004h>
 7278+ 1
 7279+ 1			        top_mb  subb,a,??0597,<004h>
 7280+ 1			        top_mb  subb,dir0,??0597,<004h>
 7281+ 1
 7282+ 1			        eot     'e',??0597
 7283+ 1
 7284+ 1			        top_mc  subb,??0598,<004h>
 7285+ 1
 7286+ 1			        eot     'f',??0598
 7287+ 1			        endif
 7288:				        putc    #'3'
 7289+ 1  1772			??0622:
 7290+ 1			        ;jnb     SCON.1,putc_loop
 7291+ 1			        ;clr     SCON.1
 7292+ 1  1772	75 99 33	        mov     SBUF,#'3'
 7293:				        tst_alu subb,0c3h,0c5h,001h,005h     ; /CY  AC  OV (CY input)
 7294+ 1
 7295+ 1	N      00C3	        arg0    set 0c3h
 7296+ 1	N      00C5	        arg1    set 0c5h
 7297+ 1	N      0001	        res     set 001h
 7298+ 1
 7299+ 1			        top_ma  subb,dir0,??0624,<005h>
 7300+ 2  1775	75 60 C3	        mov     dir0,#arg0
 7301+ 2  1778	74 C5		        mov     a,#arg1
 7302+ 2			        ifnb    <005h>
 7303+ 2			        set_cy  005h
 7304+ 3	N      0001	??0629  set     (005h and 1)
 7305+ 3	N      FFFF	        if      ??0629 eq 1
 7306+ 3  177A	D3		        setb    c
 7307+ 3			        else
 7308+ 3			        clr     c
 7309+ 3			        endif
 7310+ 2			        endif
 7311+ 2  177B	95 60		        subb      a,dir0
 7312+ 2			        ifnb    <005h>
 7313+ 2			        save_psw
 7314+ 3  177D	85 D0 70	        mov     saved_psw,PSW
 7315+ 2			        endif
 7316+ 2  1780	B4 01 6B	        cjne    a,#res,??0624
 7317+ 2			        ifnb    <005h>
 7318+ 2			        tst_psw <005h>,??0624
 7319+ 3  1783	E5 70		        mov     a,saved_psw
 7320+ 3  1785	54 C4		        anl     a,#0c4h
 7321+ 3  1787	64 05		        xrl     a,#005h
 7322+ 3  1789	54 FE		        anl     a,#0feh
 7323+ 3  178B	70 61		        jnz     ??0624

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 132



 Line  I  Addr  Code            Source

 7324+ 2			        endif
 7325+ 1  178D	78 60		        mov     r0,#dir0
 7326+ 1			        top_ma  subb,@r0,??0624,<005h>
 7327+ 2  178F	76 C3		        mov     @r0,#arg0
 7328+ 2  1791	74 C5		        mov     a,#arg1
 7329+ 2			        ifnb    <005h>
 7330+ 2			        set_cy  005h
 7331+ 3	N      0001	??0630  set     (005h and 1)
 7332+ 3	N      FFFF	        if      ??0630 eq 1
 7333+ 3  1793	D3		        setb    c
 7334+ 3			        else
 7335+ 3			        clr     c
 7336+ 3			        endif
 7337+ 2			        endif
 7338+ 2  1794	96		        subb      a,@r0
 7339+ 2			        ifnb    <005h>
 7340+ 2			        save_psw
 7341+ 3  1795	85 D0 70	        mov     saved_psw,PSW
 7342+ 2			        endif
 7343+ 2  1798	B4 01 53	        cjne    a,#res,??0624
 7344+ 2			        ifnb    <005h>
 7345+ 2			        tst_psw <005h>,??0624
 7346+ 3  179B	E5 70		        mov     a,saved_psw
 7347+ 3  179D	54 C4		        anl     a,#0c4h
 7348+ 3  179F	64 05		        xrl     a,#005h
 7349+ 3  17A1	54 FE		        anl     a,#0feh
 7350+ 3  17A3	70 49		        jnz     ??0624
 7351+ 2			        endif
 7352+ 1  17A5	79 31		        mov     r1,#031h
 7353+ 1			        top_ma  subb,@r1,??0624,<005h>
 7354+ 2  17A7	77 C3		        mov     @r1,#arg0
 7355+ 2  17A9	74 C5		        mov     a,#arg1
 7356+ 2			        ifnb    <005h>
 7357+ 2			        set_cy  005h
 7358+ 3	N      0001	??0631  set     (005h and 1)
 7359+ 3	N      FFFF	        if      ??0631 eq 1
 7360+ 3  17AB	D3		        setb    c
 7361+ 3			        else
 7362+ 3			        clr     c
 7363+ 3			        endif
 7364+ 2			        endif
 7365+ 2  17AC	97		        subb      a,@r1
 7366+ 2			        ifnb    <005h>
 7367+ 2			        save_psw
 7368+ 3  17AD	85 D0 70	        mov     saved_psw,PSW
 7369+ 2			        endif
 7370+ 2  17B0	B4 01 3B	        cjne    a,#res,??0624
 7371+ 2			        ifnb    <005h>
 7372+ 2			        tst_psw <005h>,??0624
 7373+ 3  17B3	E5 70		        mov     a,saved_psw
 7374+ 3  17B5	54 C4		        anl     a,#0c4h
 7375+ 3  17B7	64 05		        xrl     a,#005h
 7376+ 3  17B9	54 FE		        anl     a,#0feh
 7377+ 3  17BB	70 31		        jnz     ??0624
 7378+ 2			        endif
 7379+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 133



 Line  I  Addr  Code            Source

 7380+ 1			        top_ma  subb,r0,??0624,<005h>
 7381+ 2  17BD	78 C3		        mov     r0,#arg0
 7382+ 2  17BF	74 C5		        mov     a,#arg1
 7383+ 2			        ifnb    <005h>
 7384+ 2			        set_cy  005h
 7385+ 3	N      0001	??0632  set     (005h and 1)
 7386+ 3	N      FFFF	        if      ??0632 eq 1
 7387+ 3  17C1	D3		        setb    c
 7388+ 3			        else
 7389+ 3			        clr     c
 7390+ 3			        endif
 7391+ 2			        endif
 7392+ 2  17C2	98		        subb      a,r0
 7393+ 2			        ifnb    <005h>
 7394+ 2			        save_psw
 7395+ 3  17C3	85 D0 70	        mov     saved_psw,PSW
 7396+ 2			        endif
 7397+ 2  17C6	B4 01 25	        cjne    a,#res,??0624
 7398+ 2			        ifnb    <005h>
 7399+ 2			        tst_psw <005h>,??0624
 7400+ 3  17C9	E5 70		        mov     a,saved_psw
 7401+ 3  17CB	54 C4		        anl     a,#0c4h
 7402+ 3  17CD	64 05		        xrl     a,#005h
 7403+ 3  17CF	54 FE		        anl     a,#0feh
 7404+ 3  17D1	70 1B		        jnz     ??0624
 7405+ 2			        endif
 7406+ 1			        top_ma  subb,r1,??0624,<005h>
 7407+ 2  17D3	79 C3		        mov     r1,#arg0
 7408+ 2  17D5	74 C5		        mov     a,#arg1
 7409+ 2			        ifnb    <005h>
 7410+ 2			        set_cy  005h
 7411+ 3	N      0001	??0633  set     (005h and 1)
 7412+ 3	N      FFFF	        if      ??0633 eq 1
 7413+ 3  17D7	D3		        setb    c
 7414+ 3			        else
 7415+ 3			        clr     c
 7416+ 3			        endif
 7417+ 2			        endif
 7418+ 2  17D8	99		        subb      a,r1
 7419+ 2			        ifnb    <005h>
 7420+ 2			        save_psw
 7421+ 3  17D9	85 D0 70	        mov     saved_psw,PSW
 7422+ 2			        endif
 7423+ 2  17DC	B4 01 0F	        cjne    a,#res,??0624
 7424+ 2			        ifnb    <005h>
 7425+ 2			        tst_psw <005h>,??0624
 7426+ 3  17DF	E5 70		        mov     a,saved_psw
 7427+ 3  17E1	54 C4		        anl     a,#0c4h
 7428+ 3  17E3	64 05		        xrl     a,#005h
 7429+ 3  17E5	54 FE		        anl     a,#0feh
 7430+ 3  17E7	70 05		        jnz     ??0624
 7431+ 2			        endif
 7432+ 1
 7433+ 1			        eot     'a',??0624
 7434+ 2			        putc    #'a'
 7435+ 3  17E9			??0635:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 134



 Line  I  Addr  Code            Source

 7436+ 3			        ;jnb     SCON.1,putc_loop
 7437+ 3			        ;clr     SCON.1
 7438+ 3  17E9	75 99 61	        mov     SBUF,#'a'
 7439+ 2  17EC	80 06		        sjmp    ??0634
 7440+ 2  17EE			??0624:  putc    #'?'
 7441+ 3  17EE			??0636:
 7442+ 3			        ;jnb     SCON.1,putc_loop
 7443+ 3			        ;clr     SCON.1
 7444+ 3  17EE	75 99 3F	        mov     SBUF,#'?'
 7445+ 2  17F1	75 6E 01	        mov     fail,#001h
 7446+ 2  17F4			??0634:
 7447+ 1
 7448+ 1			        top_ma  subb,r2,??0625,<005h>
 7449+ 2  17F4	7A C3		        mov     r2,#arg0
 7450+ 2  17F6	74 C5		        mov     a,#arg1
 7451+ 2			        ifnb    <005h>
 7452+ 2			        set_cy  005h
 7453+ 3	N      0001	??0637  set     (005h and 1)
 7454+ 3	N      FFFF	        if      ??0637 eq 1
 7455+ 3  17F8	D3		        setb    c
 7456+ 3			        else
 7457+ 3			        clr     c
 7458+ 3			        endif
 7459+ 2			        endif
 7460+ 2  17F9	9A		        subb      a,r2
 7461+ 2			        ifnb    <005h>
 7462+ 2			        save_psw
 7463+ 3  17FA	85 D0 70	        mov     saved_psw,PSW
 7464+ 2			        endif
 7465+ 2  17FD	B4 01 25	        cjne    a,#res,??0625
 7466+ 2			        ifnb    <005h>
 7467+ 2			        tst_psw <005h>,??0625
 7468+ 3  1800	E5 70		        mov     a,saved_psw
 7469+ 3  1802	54 C4		        anl     a,#0c4h
 7470+ 3  1804	64 05		        xrl     a,#005h
 7471+ 3  1806	54 FE		        anl     a,#0feh
 7472+ 3  1808	70 1B		        jnz     ??0625
 7473+ 2			        endif
 7474+ 1			        top_ma  subb,r3,??0625,<005h>
 7475+ 2  180A	7B C3		        mov     r3,#arg0
 7476+ 2  180C	74 C5		        mov     a,#arg1
 7477+ 2			        ifnb    <005h>
 7478+ 2			        set_cy  005h
 7479+ 3	N      0001	??0638  set     (005h and 1)
 7480+ 3	N      FFFF	        if      ??0638 eq 1
 7481+ 3  180E	D3		        setb    c
 7482+ 3			        else
 7483+ 3			        clr     c
 7484+ 3			        endif
 7485+ 2			        endif
 7486+ 2  180F	9B		        subb      a,r3
 7487+ 2			        ifnb    <005h>
 7488+ 2			        save_psw
 7489+ 3  1810	85 D0 70	        mov     saved_psw,PSW
 7490+ 2			        endif
 7491+ 2  1813	B4 01 0F	        cjne    a,#res,??0625

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 135



 Line  I  Addr  Code            Source

 7492+ 2			        ifnb    <005h>
 7493+ 2			        tst_psw <005h>,??0625
 7494+ 3  1816	E5 70		        mov     a,saved_psw
 7495+ 3  1818	54 C4		        anl     a,#0c4h
 7496+ 3  181A	64 05		        xrl     a,#005h
 7497+ 3  181C	54 FE		        anl     a,#0feh
 7498+ 3  181E	70 05		        jnz     ??0625
 7499+ 2			        endif
 7500+ 1
 7501+ 1			        eot     'b',??0625
 7502+ 2			        putc    #'b'
 7503+ 3  1820			??0640:
 7504+ 3			        ;jnb     SCON.1,putc_loop
 7505+ 3			        ;clr     SCON.1
 7506+ 3  1820	75 99 62	        mov     SBUF,#'b'
 7507+ 2  1823	80 06		        sjmp    ??0639
 7508+ 2  1825			??0625:  putc    #'?'
 7509+ 3  1825			??0641:
 7510+ 3			        ;jnb     SCON.1,putc_loop
 7511+ 3			        ;clr     SCON.1
 7512+ 3  1825	75 99 3F	        mov     SBUF,#'?'
 7513+ 2  1828	75 6E 01	        mov     fail,#001h
 7514+ 2  182B			??0639:
 7515+ 1
 7516+ 1			        top_ma  subb,r4,??0626,<005h>
 7517+ 2  182B	7C C3		        mov     r4,#arg0
 7518+ 2  182D	74 C5		        mov     a,#arg1
 7519+ 2			        ifnb    <005h>
 7520+ 2			        set_cy  005h
 7521+ 3	N      0001	??0642  set     (005h and 1)
 7522+ 3	N      FFFF	        if      ??0642 eq 1
 7523+ 3  182F	D3		        setb    c
 7524+ 3			        else
 7525+ 3			        clr     c
 7526+ 3			        endif
 7527+ 2			        endif
 7528+ 2  1830	9C		        subb      a,r4
 7529+ 2			        ifnb    <005h>
 7530+ 2			        save_psw
 7531+ 3  1831	85 D0 70	        mov     saved_psw,PSW
 7532+ 2			        endif
 7533+ 2  1834	B4 01 25	        cjne    a,#res,??0626
 7534+ 2			        ifnb    <005h>
 7535+ 2			        tst_psw <005h>,??0626
 7536+ 3  1837	E5 70		        mov     a,saved_psw
 7537+ 3  1839	54 C4		        anl     a,#0c4h
 7538+ 3  183B	64 05		        xrl     a,#005h
 7539+ 3  183D	54 FE		        anl     a,#0feh
 7540+ 3  183F	70 1B		        jnz     ??0626
 7541+ 2			        endif
 7542+ 1			        top_ma  subb,r5,??0626,<005h>
 7543+ 2  1841	7D C3		        mov     r5,#arg0
 7544+ 2  1843	74 C5		        mov     a,#arg1
 7545+ 2			        ifnb    <005h>
 7546+ 2			        set_cy  005h
 7547+ 3	N      0001	??0643  set     (005h and 1)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 136



 Line  I  Addr  Code            Source

 7548+ 3	N      FFFF	        if      ??0643 eq 1
 7549+ 3  1845	D3		        setb    c
 7550+ 3			        else
 7551+ 3			        clr     c
 7552+ 3			        endif
 7553+ 2			        endif
 7554+ 2  1846	9D		        subb      a,r5
 7555+ 2			        ifnb    <005h>
 7556+ 2			        save_psw
 7557+ 3  1847	85 D0 70	        mov     saved_psw,PSW
 7558+ 2			        endif
 7559+ 2  184A	B4 01 0F	        cjne    a,#res,??0626
 7560+ 2			        ifnb    <005h>
 7561+ 2			        tst_psw <005h>,??0626
 7562+ 3  184D	E5 70		        mov     a,saved_psw
 7563+ 3  184F	54 C4		        anl     a,#0c4h
 7564+ 3  1851	64 05		        xrl     a,#005h
 7565+ 3  1853	54 FE		        anl     a,#0feh
 7566+ 3  1855	70 05		        jnz     ??0626
 7567+ 2			        endif
 7568+ 1
 7569+ 1			        eot     'c',??0626
 7570+ 2			        putc    #'c'
 7571+ 3  1857			??0645:
 7572+ 3			        ;jnb     SCON.1,putc_loop
 7573+ 3			        ;clr     SCON.1
 7574+ 3  1857	75 99 63	        mov     SBUF,#'c'
 7575+ 2  185A	80 06		        sjmp    ??0644
 7576+ 2  185C			??0626:  putc    #'?'
 7577+ 3  185C			??0646:
 7578+ 3			        ;jnb     SCON.1,putc_loop
 7579+ 3			        ;clr     SCON.1
 7580+ 3  185C	75 99 3F	        mov     SBUF,#'?'
 7581+ 2  185F	75 6E 01	        mov     fail,#001h
 7582+ 2  1862			??0644:
 7583+ 1
 7584+ 1			        top_ma  subb,r6,??0623,<005h>
 7585+ 2  1862	7E C3		        mov     r6,#arg0
 7586+ 2  1864	74 C5		        mov     a,#arg1
 7587+ 2			        ifnb    <005h>
 7588+ 2			        set_cy  005h
 7589+ 3	N      0001	??0647  set     (005h and 1)
 7590+ 3	N      FFFF	        if      ??0647 eq 1
 7591+ 3  1866	D3		        setb    c
 7592+ 3			        else
 7593+ 3			        clr     c
 7594+ 3			        endif
 7595+ 2			        endif
 7596+ 2  1867	9E		        subb      a,r6
 7597+ 2			        ifnb    <005h>
 7598+ 2			        save_psw
 7599+ 3  1868	85 D0 70	        mov     saved_psw,PSW
 7600+ 2			        endif
 7601+ 2  186B	B4 01 25	        cjne    a,#res,??0623
 7602+ 2			        ifnb    <005h>
 7603+ 2			        tst_psw <005h>,??0623

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 137



 Line  I  Addr  Code            Source

 7604+ 3  186E	E5 70		        mov     a,saved_psw
 7605+ 3  1870	54 C4		        anl     a,#0c4h
 7606+ 3  1872	64 05		        xrl     a,#005h
 7607+ 3  1874	54 FE		        anl     a,#0feh
 7608+ 3  1876	70 1B		        jnz     ??0623
 7609+ 2			        endif
 7610+ 1			        top_ma  subb,r7,??0623,<005h>
 7611+ 2  1878	7F C3		        mov     r7,#arg0
 7612+ 2  187A	74 C5		        mov     a,#arg1
 7613+ 2			        ifnb    <005h>
 7614+ 2			        set_cy  005h
 7615+ 3	N      0001	??0648  set     (005h and 1)
 7616+ 3	N      FFFF	        if      ??0648 eq 1
 7617+ 3  187C	D3		        setb    c
 7618+ 3			        else
 7619+ 3			        clr     c
 7620+ 3			        endif
 7621+ 2			        endif
 7622+ 2  187D	9F		        subb      a,r7
 7623+ 2			        ifnb    <005h>
 7624+ 2			        save_psw
 7625+ 3  187E	85 D0 70	        mov     saved_psw,PSW
 7626+ 2			        endif
 7627+ 2  1881	B4 01 0F	        cjne    a,#res,??0623
 7628+ 2			        ifnb    <005h>
 7629+ 2			        tst_psw <005h>,??0623
 7630+ 3  1884	E5 70		        mov     a,saved_psw
 7631+ 3  1886	54 C4		        anl     a,#0c4h
 7632+ 3  1888	64 05		        xrl     a,#005h
 7633+ 3  188A	54 FE		        anl     a,#0feh
 7634+ 3  188C	70 05		        jnz     ??0623
 7635+ 2			        endif
 7636+ 1
 7637+ 1			        eot     'd',??0623
 7638+ 2			        putc    #'d'
 7639+ 3  188E			??0650:
 7640+ 3			        ;jnb     SCON.1,putc_loop
 7641+ 3			        ;clr     SCON.1
 7642+ 3  188E	75 99 64	        mov     SBUF,#'d'
 7643+ 2  1891	80 06		        sjmp    ??0649
 7644+ 2  1893			??0623:  putc    #'?'
 7645+ 3  1893			??0651:
 7646+ 3			        ;jnb     SCON.1,putc_loop
 7647+ 3			        ;clr     SCON.1
 7648+ 3  1893	75 99 3F	        mov     SBUF,#'?'
 7649+ 2  1896	75 6E 01	        mov     fail,#001h
 7650+ 2  1899			??0649:
 7651+ 1
 7652+ 1			        ifb     <005h>
 7653+ 1
 7654+ 1			        top_mb  subb,a,??0627,<005h>
 7655+ 1			        top_mb  subb,dir0,??0627,<005h>
 7656+ 1
 7657+ 1			        eot     'e',??0627
 7658+ 1
 7659+ 1			        top_mc  subb,??0628,<005h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 138



 Line  I  Addr  Code            Source

 7660+ 1
 7661+ 1			        eot     'f',??0628
 7662+ 1			        endif
 7663:
 7664:				        ; FIXME subb tests are specially weak
 7665:
 7666:				        put_crlf                    ; end of test series
 7667+ 1			        putc    #13
 7668+ 2  1899			??0652:
 7669+ 2			        ;jnb     SCON.1,putc_loop
 7670+ 2			        ;clr     SCON.1
 7671+ 2  1899	75 99 0D	        mov     SBUF,#13
 7672+ 1			        putc    #10
 7673+ 2  189C			??0653:
 7674+ 2			        ;jnb     SCON.1,putc_loop
 7675+ 2			        ;clr     SCON.1
 7676+ 2  189C	75 99 0A	        mov     SBUF,#10
 7677:
 7678:
 7679:				        ;-- Test series O ------------------------------------------------------
 7680:				        ; PUSH and POP
 7681:				        ; a.- <PUSH dir (IRAM)>
 7682:				        ; b.- <POP dir (IRAM)>
 7683:				        ; c.- <PUSH dir (SFR)>
 7684:				        ; d.- <POP dir (SFR)>
 7685:
 7686:				        putc    #'O'                ; start of test series
 7687+ 1  189F			??0654:
 7688+ 1			        ;jnb     SCON.1,putc_loop
 7689+ 1			        ;clr     SCON.1
 7690+ 1  189F	75 99 4F	        mov     SBUF,#'O'
 7691:
 7692:				        ; <PUSH dir (IRAM)>
 7693:	  18A2	75 81 9F	        mov     SP,#stack0          ; prepare SP...
 7694:	  18A5	75 60 12	        mov     dir0,#012h          ; ...and data to be pushed
 7695:	  18A8	78 A0		        mov     r0,#(stack0+1)      ; r0->stack so we can verify data is pushed
 7696:	  18AA	76 00		        mov     @r0,#000h           ; clear target stack location
 7697:	  18AC	C0 60		        push    dir0                ; <PUSH dir>
 7698:	  18AE	E6		        mov     a,@r0               ; verify data has been pushed
 7699:	  18AF	B4 12 0A	        cjne    a,#012h,to_a0
 7700:	  18B2	E5 81		        mov     a,SP                ; verify SP has been incremented
 7701:	  18B4	B4 A0 05	        cjne    a,#(stack0+1),to_a0
 7702:
 7703:				        eot     'a',to_a0
 7704+ 1			        putc    #'a'
 7705+ 2  18B7			??0656:
 7706+ 2			        ;jnb     SCON.1,putc_loop
 7707+ 2			        ;clr     SCON.1
 7708+ 2  18B7	75 99 61	        mov     SBUF,#'a'
 7709+ 1  18BA	80 06		        sjmp    ??0655
 7710+ 1  18BC			to_a0:  putc    #'?'
 7711+ 2  18BC			??0657:
 7712+ 2			        ;jnb     SCON.1,putc_loop
 7713+ 2			        ;clr     SCON.1
 7714+ 2  18BC	75 99 3F	        mov     SBUF,#'?'
 7715+ 1  18BF	75 6E 01	        mov     fail,#001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 139



 Line  I  Addr  Code            Source

 7716+ 1  18C2			??0655:
 7717:
 7718:				        ; <POP dir (IRAM)> We'll use the data that was pushed previously
 7719:	  18C2	75 61 00	        mov     dir1,#000h          ; clear POP target
 7720:	  18C5	E4		        clr     a
 7721:	  18C6	D0 61		        pop     dir1                ; <POP dir>
 7722:	  18C8	79 61		        mov     r1,#dir1            ; verify data has been popped
 7723:	  18CA	E7		        mov     a,@r1
 7724:	  18CB	B4 12 0A	        cjne    a,#012h,to_b0
 7725:	  18CE	E5 81		        mov     a,SP                ; verify SP has been decremented
 7726:	  18D0	B4 9F 05	        cjne    a,#stack0,to_b0
 7727:
 7728:				        eot     'b',to_b0
 7729+ 1			        putc    #'b'
 7730+ 2  18D3			??0659:
 7731+ 2			        ;jnb     SCON.1,putc_loop
 7732+ 2			        ;clr     SCON.1
 7733+ 2  18D3	75 99 62	        mov     SBUF,#'b'
 7734+ 1  18D6	80 06		        sjmp    ??0658
 7735+ 1  18D8			to_b0:  putc    #'?'
 7736+ 2  18D8			??0660:
 7737+ 2			        ;jnb     SCON.1,putc_loop
 7738+ 2			        ;clr     SCON.1
 7739+ 2  18D8	75 99 3F	        mov     SBUF,#'?'
 7740+ 1  18DB	75 6E 01	        mov     fail,#001h
 7741+ 1  18DE			??0658:
 7742:
 7743:				        ; <PUSH dir (SFR)>
 7744:	  18DE	75 81 9F	        mov     SP,#stack0          ; prepare SP...
 7745:	  18E1	75 F0 42	        mov     B,#042h             ; ...and data to be pushed
 7746:	  18E4	78 A0		        mov     r0,#(stack0+1)      ; r0->stack so we can verify data is pushed
 7747:	  18E6	76 00		        mov     @r0,#000h           ; clear target stack location
 7748:	  18E8	C0 F0		        push    B                   ; <PUSH dir>
 7749:	  18EA	E6		        mov     a,@r0               ; verify data has been pushed
 7750:	  18EB	B4 42 0A	        cjne    a,#042h,to_c0
 7751:	  18EE	E5 81		        mov     a,SP                ; verify SP has been incremented
 7752:	  18F0	B4 A0 05	        cjne    a,#(stack0+1),to_c0
 7753:
 7754:				        eot     'c',to_c0
 7755+ 1			        putc    #'c'
 7756+ 2  18F3			??0662:
 7757+ 2			        ;jnb     SCON.1,putc_loop
 7758+ 2			        ;clr     SCON.1
 7759+ 2  18F3	75 99 63	        mov     SBUF,#'c'
 7760+ 1  18F6	80 06		        sjmp    ??0661
 7761+ 1  18F8			to_c0:  putc    #'?'
 7762+ 2  18F8			??0663:
 7763+ 2			        ;jnb     SCON.1,putc_loop
 7764+ 2			        ;clr     SCON.1
 7765+ 2  18F8	75 99 3F	        mov     SBUF,#'?'
 7766+ 1  18FB	75 6E 01	        mov     fail,#001h
 7767+ 1  18FE			??0661:
 7768:
 7769:				        ; <POP dir (SFR)> We'll use the data that was pushed previously
 7770:	  18FE	75 F0 00	        mov     B,#000h             ; clear POP target
 7771:	  1901	E4		        clr     a

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 140



 Line  I  Addr  Code            Source

 7772:	  1902	D0 F0		        pop     B                   ; <POP dir>
 7773:	  1904	E5 F0		        mov     a,B                 ; verify data has been popped
 7774:	  1906	B4 42 0A	        cjne    a,#042h,to_d0
 7775:	  1909	E5 81		        mov     a,SP                ; verify SP has been decremented
 7776:	  190B	B4 9F 05	        cjne    a,#stack0,to_d0
 7777:
 7778:				        eot     'd',to_d0
 7779+ 1			        putc    #'d'
 7780+ 2  190E			??0665:
 7781+ 2			        ;jnb     SCON.1,putc_loop
 7782+ 2			        ;clr     SCON.1
 7783+ 2  190E	75 99 64	        mov     SBUF,#'d'
 7784+ 1  1911	80 06		        sjmp    ??0664
 7785+ 1  1913			to_d0:  putc    #'?'
 7786+ 2  1913			??0666:
 7787+ 2			        ;jnb     SCON.1,putc_loop
 7788+ 2			        ;clr     SCON.1
 7789+ 2  1913	75 99 3F	        mov     SBUF,#'?'
 7790+ 1  1916	75 6E 01	        mov     fail,#001h
 7791+ 1  1919			??0664:
 7792:
 7793:				        put_crlf                    ; end of test series
 7794+ 1			        putc    #13
 7795+ 2  1919			??0667:
 7796+ 2			        ;jnb     SCON.1,putc_loop
 7797+ 2			        ;clr     SCON.1
 7798+ 2  1919	75 99 0D	        mov     SBUF,#13
 7799+ 1			        putc    #10
 7800+ 2  191C			??0668:
 7801+ 2			        ;jnb     SCON.1,putc_loop
 7802+ 2			        ;clr     SCON.1
 7803+ 2  191C	75 99 0A	        mov     SBUF,#10
 7804:
 7805:				        ;-- Test series P ------------------------------------------------------
 7806:				        ; Access to XRAM -- note that current tests are bare-bone minimal!
 7807:				        ; a.- <MOV DPTR, #16>
 7808:				        ; b.- <MOVX @DPTR, A>, <MOVX A, @DPTR>
 7809:				        ; c.- <MOVX A, @Ri>
 7810:				        ; d.- <MOVX @Ri, A>
 7811:
 7812:				        putc    #'P'                ; start of test series
 7813+ 1  191F			??0669:
 7814+ 1			        ;jnb     SCON.1,putc_loop
 7815+ 1			        ;clr     SCON.1
 7816+ 1  191F	75 99 50	        mov     SBUF,#'P'
 7817:
 7818:				        ; a.- <MOV DPTR, #16>
 7819:	  1922	75 83 65	        mov     DPH,#065h           ; initialize DPTR with known value...
 7820:	  1925	75 82 43	        mov     DPL,#043h
 7821:
 7822:	  1928	90 01 23	        mov     DPTR,#0123h         ; ...then load it through MOV...
 7823:	  192B	E5 83		        mov     a,DPH               ; ...and verify the load
 7824:	  192D	B4 01 0A	        cjne    a,#01h,tp_a0
 7825:	  1930	E5 82		        mov     a,DPL
 7826:	  1932	B4 23 05	        cjne    a,#23h,tp_a0
 7827:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 141



 Line  I  Addr  Code            Source

 7828:				        eot     'a',tp_a0
 7829+ 1			        putc    #'a'
 7830+ 2  1935			??0671:
 7831+ 2			        ;jnb     SCON.1,putc_loop
 7832+ 2			        ;clr     SCON.1
 7833+ 2  1935	75 99 61	        mov     SBUF,#'a'
 7834+ 1  1938	80 06		        sjmp    ??0670
 7835+ 1  193A			tp_a0:  putc    #'?'
 7836+ 2  193A			??0672:
 7837+ 2			        ;jnb     SCON.1,putc_loop
 7838+ 2			        ;clr     SCON.1
 7839+ 2  193A	75 99 3F	        mov     SBUF,#'?'
 7840+ 1  193D	75 6E 01	        mov     fail,#001h
 7841+ 1  1940			??0670:
 7842:
 7843:
 7844:				        ; b.- <MOVX @DPTR, A>, <MOVX A, @DPTR>
 7845:				        ; We have no independent means to verify XRAM writes or reads, other
 7846:				        ; than the very instructions we're testing. So we should store a data
 7847:				        ; pattern on XRAM that is difficult to get back 'by chance'.
 7848:				        ; Ideally we would try all areas of XRAM, back-to-back operations, etc.
 7849:				        ; For the time being a simple word store will suffice.
 7850:	  1940	90 00 13	        mov     DPTR,#0013h         ; Store 55h, aah at XRAM[0013h]...
 7851:	  1943	74 55		        mov     A,#55h
 7852:	  1945	F0		        movx    @DPTR,a
 7853:	  1946	A3		        inc     DPTR
 7854:	  1947	F4		        cpl     a
 7855:	  1948	F0		        movx    @DPTR,a
 7856:
 7857:	  1949	90 00 13	        mov     DPTR,#0013h         ; ...then verify the store
 7858:	  194C	E0		        movx    a,@DPTR
 7859:	  194D	B4 55 0A	        cjne    a,#55h,tp_b0
 7860:	  1950	A3		        inc     DPTR
 7861:	  1951	E0		        movx    a,@DPTR
 7862:	  1952	B4 AA 05	        cjne    a,#0aah,tp_b0
 7863:
 7864:				        eot     'b',tp_b0
 7865+ 1			        putc    #'b'
 7866+ 2  1955			??0674:
 7867+ 2			        ;jnb     SCON.1,putc_loop
 7868+ 2			        ;clr     SCON.1
 7869+ 2  1955	75 99 62	        mov     SBUF,#'b'
 7870+ 1  1958	80 06		        sjmp    ??0673
 7871+ 1  195A			tp_b0:  putc    #'?'
 7872+ 2  195A			??0675:
 7873+ 2			        ;jnb     SCON.1,putc_loop
 7874+ 2			        ;clr     SCON.1
 7875+ 2  195A	75 99 3F	        mov     SBUF,#'?'
 7876+ 1  195D	75 6E 01	        mov     fail,#001h
 7877+ 1  1960			??0673:
 7878:
 7879:				        ; c.- <MOVX A, @Ri>
 7880:	  1960	74 79		        mov     a,#79h              ; change A and DPTR so we can catch fails
 7881:	  1962	90 00 00	        mov     dptr,#0000h
 7882:	  1965	78 13		        mov     r0,#13h             ; read back the same data again through
 7883:	  1967	79 14		        mov     r1,#14h             ; indexed addressing...

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 142



 Line  I  Addr  Code            Source

 7884:	  1969	E2		        movx    a,@r0
 7885:	  196A	B4 55 09	        cjne    a,#55h,tp_c0
 7886:	  196D	E3		        movx    a,@r1
 7887:	  196E	B4 AA 05	        cjne    a,#0aah,tp_c0
 7888:
 7889:				        eot     'c',tp_c0
 7890+ 1			        putc    #'c'
 7891+ 2  1971			??0677:
 7892+ 2			        ;jnb     SCON.1,putc_loop
 7893+ 2			        ;clr     SCON.1
 7894+ 2  1971	75 99 63	        mov     SBUF,#'c'
 7895+ 1  1974	80 06		        sjmp    ??0676
 7896+ 1  1976			tp_c0:  putc    #'?'
 7897+ 2  1976			??0678:
 7898+ 2			        ;jnb     SCON.1,putc_loop
 7899+ 2			        ;clr     SCON.1
 7900+ 2  1976	75 99 3F	        mov     SBUF,#'?'
 7901+ 1  1979	75 6E 01	        mov     fail,#001h
 7902+ 1  197C			??0676:
 7903:
 7904:				        put_crlf                    ; end of test series
 7905+ 1			        putc    #13
 7906+ 2  197C			??0679:
 7907+ 2			        ;jnb     SCON.1,putc_loop
 7908+ 2			        ;clr     SCON.1
 7909+ 2  197C	75 99 0D	        mov     SBUF,#13
 7910+ 1			        putc    #10
 7911+ 2  197F			??0680:
 7912+ 2			        ;jnb     SCON.1,putc_loop
 7913+ 2			        ;clr     SCON.1
 7914+ 2  197F	75 99 0A	        mov     SBUF,#10
 7915:
 7916:				        ;-- Test series Q ------------------------------------------------------
 7917:				        ; MOVC instructions
 7918:				        ; a.- <MOVC A, @A + PC>
 7919:				        ; b.- <MOVC A, @A + DPTR>
 7920:
 7921:				        putc    #'Q'                ; start of test series
 7922+ 1  1982			??0681:
 7923+ 1			        ;jnb     SCON.1,putc_loop
 7924+ 1			        ;clr     SCON.1
 7925+ 1  1982	75 99 51	        mov     SBUF,#'Q'
 7926:
 7927:				        ; a.- <MOVC A, @A + PC>
 7928:	  1985	74 03		        mov     a,#03h              ; we'll read the 4th byte in the table...
 7929:	  1987	24 02		        add     a,#02h              ; ...and must account for intervening sjmp
 7930:	  1989	83		        movc    a,@a+PC
 7931:	  198A	80 04		        sjmp    tq0
 7932:
 7933:	  198C	07 13 19 21	tq1:    db      07h, 13h, 19h, 21h
 7934:	  1990	B4 21 05	tq0:    cjne    a,#21h,tq_a0
 7935:
 7936:				        eot     'a',tq_a0
 7937+ 1			        putc    #'a'
 7938+ 2  1993			??0683:
 7939+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 143



 Line  I  Addr  Code            Source

 7940+ 2			        ;clr     SCON.1
 7941+ 2  1993	75 99 61	        mov     SBUF,#'a'
 7942+ 1  1996	80 06		        sjmp    ??0682
 7943+ 1  1998			tq_a0:  putc    #'?'
 7944+ 2  1998			??0684:
 7945+ 2			        ;jnb     SCON.1,putc_loop
 7946+ 2			        ;clr     SCON.1
 7947+ 2  1998	75 99 3F	        mov     SBUF,#'?'
 7948+ 1  199B	75 6E 01	        mov     fail,#001h
 7949+ 1  199E			??0682:
 7950:
 7951:				        ; b.- <MOVC A, @A + DPTR>
 7952:	  199E	90 19 8C	        mov   DPTR,#tq1
 7953:
 7954:	  19A1	74 00		        mov   a,#00h
 7955:	  19A3	93		        movc  a,@a+DPTR
 7956:	  19A4	B4 07 17	        cjne  a,#07h,tq_b0
 7957:
 7958:	  19A7	74 01		        mov   a,#01h
 7959:	  19A9	93		        movc  a,@a+DPTR
 7960:	  19AA	B4 13 11	        cjne  a,#13h,tq_b0
 7961:
 7962:	  19AD	74 02		        mov   a,#02h
 7963:	  19AF	93		        movc  a,@a+DPTR
 7964:	  19B0	B4 19 0B	        cjne  a,#19h,tq_b0
 7965:
 7966:	  19B3	74 03		        mov   a,#03h
 7967:	  19B5	93		        movc  a,@a+DPTR
 7968:	  19B6	B4 21 05	        cjne  a,#21h,tq_b0
 7969:
 7970:				        eot     'b',tq_b0
 7971+ 1			        putc    #'b'
 7972+ 2  19B9			??0686:
 7973+ 2			        ;jnb     SCON.1,putc_loop
 7974+ 2			        ;clr     SCON.1
 7975+ 2  19B9	75 99 62	        mov     SBUF,#'b'
 7976+ 1  19BC	80 06		        sjmp    ??0685
 7977+ 1  19BE			tq_b0:  putc    #'?'
 7978+ 2  19BE			??0687:
 7979+ 2			        ;jnb     SCON.1,putc_loop
 7980+ 2			        ;clr     SCON.1
 7981+ 2  19BE	75 99 3F	        mov     SBUF,#'?'
 7982+ 1  19C1	75 6E 01	        mov     fail,#001h
 7983+ 1  19C4			??0685:
 7984:
 7985:				        put_crlf                    ; end of test series
 7986+ 1			        putc    #13
 7987+ 2  19C4			??0688:
 7988+ 2			        ;jnb     SCON.1,putc_loop
 7989+ 2			        ;clr     SCON.1
 7990+ 2  19C4	75 99 0D	        mov     SBUF,#13
 7991+ 1			        putc    #10
 7992+ 2  19C7			??0689:
 7993+ 2			        ;jnb     SCON.1,putc_loop
 7994+ 2			        ;clr     SCON.1
 7995+ 2  19C7	75 99 0A	        mov     SBUF,#10

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 144



 Line  I  Addr  Code            Source

 7996:
 7997:
 7998:				        ;-- Test series R ------------------------------------------------------
 7999:				        ; ACALL, LCALL instructions
 8000:				        ; a.- <ACALL addr8>
 8001:				        ; b.- <LCALL addr16>
 8002:				        ; c.- <JMP @A+DPTR>
 8003:				        ;
 8004:				        ; Biggest limitations:
 8005:				        ; .- Short jumps; jumps to other pages (!= H addr byte) not tested.
 8006:				        ;
 8007:				        ; Note RET is NOT tested here! we don't return from these calls, just
 8008:				        ; use them as jumps.
 8009:				        ;
 8010:
 8011:				        putc    #'R'                ; start of test series
 8012+ 1  19CA			??0690:
 8013+ 1			        ;jnb     SCON.1,putc_loop
 8014+ 1			        ;clr     SCON.1
 8015+ 1  19CA	75 99 52	        mov     SBUF,#'R'
 8016:
 8017:	  19CD	75 81 4F	        mov     SP,#4fh             ; Initialize SP...
 8018:	  19D0	75 50 00	        mov     50h,#00h            ; ...and clear stack area
 8019:	  19D3	75 51 00	        mov     51h,#00h
 8020:	  19D6	75 52 00	        mov     52h,#00h
 8021:	  19D9	75 53 00	        mov     53h,#00h
 8022:
 8023:				        ; a.- <ACALL addr8>
 8024:				        ; We should test all code pages eventually...
 8025:	  19DC	31 E0		        acall   tr_sub0             ; Do the call...
 8026:	  19DE	80 14		tr_rv0: sjmp    tr_a0
 8027:	  19E0			tr_sub0:
 8028:	  19E0	E5 81		        mov     A,SP
 8029:	  19E2	B4 51 0F	        cjne    A,#51h,tr_a0       ; ...verify the SP value...
 8030:	  19E5	E5 50		        mov     A,50h
 8031:	  19E7	B4 DE 0A	        cjne    A,#LOW(tr_rv0),tr_a0 ; ...and verify the pushed ret address
 8032:	  19EA	E5 51		        mov     A,51h
 8033:	  19EC	B4 19 05	        cjne    A,#HIGH(tr_rv0),tr_a0
 8034:
 8035:				        eot     'a',tr_a0
 8036+ 1			        putc    #'a'
 8037+ 2  19EF			??0692:
 8038+ 2			        ;jnb     SCON.1,putc_loop
 8039+ 2			        ;clr     SCON.1
 8040+ 2  19EF	75 99 61	        mov     SBUF,#'a'
 8041+ 1  19F2	80 06		        sjmp    ??0691
 8042+ 1  19F4			tr_a0:  putc    #'?'
 8043+ 2  19F4			??0693:
 8044+ 2			        ;jnb     SCON.1,putc_loop
 8045+ 2			        ;clr     SCON.1
 8046+ 2  19F4	75 99 3F	        mov     SBUF,#'?'
 8047+ 1  19F7	75 6E 01	        mov     fail,#001h
 8048+ 1  19FA			??0691:
 8049:
 8050:				        ; b.- <LCALL addr16>
 8051:	  19FA	12 80 00	        lcall   tr_sub1             ; Do the call...

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 145



 Line  I  Addr  Code            Source

 8052:	  19FD	80 06		tr_rv1: sjmp    tr_b0
 8053:	  19FF	00		tr_rv2: nop
 8054:				        eot     'b',tr_b0
 8055+ 1			        putc    #'b'
 8056+ 2  1A00			??0695:
 8057+ 2			        ;jnb     SCON.1,putc_loop
 8058+ 2			        ;clr     SCON.1
 8059+ 2  1A00	75 99 62	        mov     SBUF,#'b'
 8060+ 1  1A03	80 06		        sjmp    ??0694
 8061+ 1  1A05			tr_b0:  putc    #'?'
 8062+ 2  1A05			??0696:
 8063+ 2			        ;jnb     SCON.1,putc_loop
 8064+ 2			        ;clr     SCON.1
 8065+ 2  1A05	75 99 3F	        mov     SBUF,#'?'
 8066+ 1  1A08	75 6E 01	        mov     fail,#001h
 8067+ 1  1A0B			??0694:
 8068:
 8069:
 8070:				        ; c.- <JMP @A+DPTR>
 8071:	  1A0B	90 19 E1	        mov     DPTR,#(tr_sub2-33h)
 8072:	  1A0E	74 33		        mov     a,#33h
 8073:	  1A10	73		        jmp     @a+DPTR
 8074:	  1A11	02 1A 27	        jmp     tr_c0
 8075:	  1A14	02 1A 1A	tr_sub2: jmp     tr_0
 8076:	  1A17	02 1A 27	        jmp     tr_c0
 8077:	  1A1A	74 00		tr_0:   mov     a,#00h
 8078:	  1A1C	74 00		        mov     a,#00h
 8079:	  1A1E	74 00		        mov     a,#00h
 8080:	  1A20	74 00		        mov     a,#00h
 8081:
 8082:				        eot     'c',tr_c0
 8083+ 1			        putc    #'c'
 8084+ 2  1A22			??0698:
 8085+ 2			        ;jnb     SCON.1,putc_loop
 8086+ 2			        ;clr     SCON.1
 8087+ 2  1A22	75 99 63	        mov     SBUF,#'c'
 8088+ 1  1A25	80 06		        sjmp    ??0697
 8089+ 1  1A27			tr_c0:  putc    #'?'
 8090+ 2  1A27			??0699:
 8091+ 2			        ;jnb     SCON.1,putc_loop
 8092+ 2			        ;clr     SCON.1
 8093+ 2  1A27	75 99 3F	        mov     SBUF,#'?'
 8094+ 1  1A2A	75 6E 01	        mov     fail,#001h
 8095+ 1  1A2D			??0697:
 8096:
 8097:				        put_crlf                    ; end of test series
 8098+ 1			        putc    #13
 8099+ 2  1A2D			??0700:
 8100+ 2			        ;jnb     SCON.1,putc_loop
 8101+ 2			        ;clr     SCON.1
 8102+ 2  1A2D	75 99 0D	        mov     SBUF,#13
 8103+ 1			        putc    #10
 8104+ 2  1A30			??0701:
 8105+ 2			        ;jnb     SCON.1,putc_loop
 8106+ 2			        ;clr     SCON.1
 8107+ 2  1A30	75 99 0A	        mov     SBUF,#10

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 146



 Line  I  Addr  Code            Source

 8108:
 8109:
 8110:				        ;-- Test series S ------------------------------------------------------
 8111:				        ; RET, RETI instructions
 8112:				        ; a.- <RET>
 8113:				        ; b.- <RETI>
 8114:				        ;
 8115:				        ; RETs to different code pages (!= H addr byte) not tested!
 8116:				        ; Interrupt flag stuff not tested, only RET functionality
 8117:
 8118:				        putc    #'S'                ; start of test series
 8119+ 1  1A33			??0702:
 8120+ 1			        ;jnb     SCON.1,putc_loop
 8121+ 1			        ;clr     SCON.1
 8122+ 1  1A33	75 99 53	        mov     SBUF,#'S'
 8123:
 8124:
 8125:				        ; a.- <RET>
 8126:	  1A36	75 81 4F	        mov     SP,#4fh             ; Initialize SP...
 8127:	  1A39	75 4F 1A	        mov     4fh,#HIGH(s_sub0)   ; ...and load stack area with return
 8128:	  1A3C	75 4E 4A	        mov     4eh,#LOW(s_sub0)    ; addresses to be tested
 8129:	  1A3F	75 4D 1A	        mov     4dh,#HIGH(s_sub1)
 8130:	  1A42	75 4C 54	        mov     4ch,#LOW(s_sub1)
 8131:
 8132:	  1A45	22		        ret                         ; Do the ret...
 8133:	  1A46	80 16		        sjmp    ts_a0
 8134:	  1A48	74 00		        mov     A,#00h
 8135:	  1A4A	E5 81		s_sub0: mov     A,SP
 8136:	  1A4C	B4 4D 0F	        cjne    A,#4dh,ts_a0       ; ... and verify the SP value
 8137:
 8138:	  1A4F	22		        ret                         ; Do another ret...
 8139:	  1A50	80 0C		        sjmp    ts_a0
 8140:	  1A52	74 00		        mov     A,#00h
 8141:	  1A54	E5 81		s_sub1: mov     A,SP
 8142:	  1A56	B4 4B 05	        cjne    A,#4bh,ts_a0       ; ... and verify the SP value
 8143:
 8144:				        eot     'a',ts_a0
 8145+ 1			        putc    #'a'
 8146+ 2  1A59			??0704:
 8147+ 2			        ;jnb     SCON.1,putc_loop
 8148+ 2			        ;clr     SCON.1
 8149+ 2  1A59	75 99 61	        mov     SBUF,#'a'
 8150+ 1  1A5C	80 06		        sjmp    ??0703
 8151+ 1  1A5E			ts_a0:  putc    #'?'
 8152+ 2  1A5E			??0705:
 8153+ 2			        ;jnb     SCON.1,putc_loop
 8154+ 2			        ;clr     SCON.1
 8155+ 2  1A5E	75 99 3F	        mov     SBUF,#'?'
 8156+ 1  1A61	75 6E 01	        mov     fail,#001h
 8157+ 1  1A64			??0703:
 8158:
 8159:
 8160:				        ; a.- <RETI>
 8161:	  1A64	75 81 4F	        mov     SP,#4fh             ; Initialize SP...
 8162:	  1A67	75 4F 1A	        mov     4fh,#HIGH(s_sub2)   ; ...and load stack area with return
 8163:	  1A6A	75 4E 78	        mov     4eh,#LOW(s_sub2)    ; addresses to be tested

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 147



 Line  I  Addr  Code            Source

 8164:	  1A6D	75 4D 1A	        mov     4dh,#HIGH(s_sub3)
 8165:	  1A70	75 4C 82	        mov     4ch,#LOW(s_sub3)
 8166:
 8167:	  1A73	22		        ret                         ; Do the ret...
 8168:	  1A74	80 E8		        sjmp    ts_a0
 8169:	  1A76	74 00		        mov     A,#00h
 8170:	  1A78	E5 81		s_sub2: mov     A,SP
 8171:	  1A7A	B4 4D 0F	        cjne    A,#4dh,ts_b0       ; ... and verify the SP value
 8172:
 8173:	  1A7D	22		        ret                         ; Do another ret...
 8174:	  1A7E	80 DE		        sjmp    ts_a0
 8175:	  1A80	74 00		        mov     A,#00h
 8176:	  1A82	E5 81		s_sub3: mov     A,SP
 8177:	  1A84	B4 4B 05	        cjne    A,#4bh,ts_b0       ; ... and verify the SP value
 8178:
 8179:				        eot     'b',ts_b0
 8180+ 1			        putc    #'b'
 8181+ 2  1A87			??0707:
 8182+ 2			        ;jnb     SCON.1,putc_loop
 8183+ 2			        ;clr     SCON.1
 8184+ 2  1A87	75 99 62	        mov     SBUF,#'b'
 8185+ 1  1A8A	80 06		        sjmp    ??0706
 8186+ 1  1A8C			ts_b0:  putc    #'?'
 8187+ 2  1A8C			??0708:
 8188+ 2			        ;jnb     SCON.1,putc_loop
 8189+ 2			        ;clr     SCON.1
 8190+ 2  1A8C	75 99 3F	        mov     SBUF,#'?'
 8191+ 1  1A8F	75 6E 01	        mov     fail,#001h
 8192+ 1  1A92			??0706:
 8193:
 8194:				        ; Lots of things can go badly and we wouldn't know with this test...
 8195:				        put_crlf                    ; end of test series
 8196+ 1			        putc    #13
 8197+ 2  1A92			??0709:
 8198+ 2			        ;jnb     SCON.1,putc_loop
 8199+ 2			        ;clr     SCON.1
 8200+ 2  1A92	75 99 0D	        mov     SBUF,#13
 8201+ 1			        putc    #10
 8202+ 2  1A95			??0710:
 8203+ 2			        ;jnb     SCON.1,putc_loop
 8204+ 2			        ;clr     SCON.1
 8205+ 2  1A95	75 99 0A	        mov     SBUF,#10
 8206:
 8207:				        ;-- Test series T ------------------------------------------------------
 8208:				        ; MUL, DIV instructions
 8209:				        ; a.- <DIV>
 8210:				        ; b.- <MUL>
 8211:				        ;
 8212:
 8213:				        putc    #'T'                ; start of test series
 8214+ 1  1A98			??0711:
 8215+ 1			        ;jnb     SCON.1,putc_loop
 8216+ 1			        ;clr     SCON.1
 8217+ 1  1A98	75 99 54	        mov     SBUF,#'T'
 8218:
 8219:				        ; a.- <DIV>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 148



 Line  I  Addr  Code            Source

 8220:	  1A9B	75 F0 07	        mov     B,#07h              ; First of all, make sure B can be read back
 8221:	  1A9E	74 13		        mov     A,#13h
 8222:	  1AA0	E5 F0		        mov     A,B
 8223:	  1AA2	B4 07 37	        cjne    A,#07h,tt_a0
 8224:
 8225:				        ; Now do a few representative DIVs using a table. The table has the
 8226:				        ; following format:
 8227:				        ; denominator, numerator, overflow, quotient, remainder
 8228:				        ; Where 'overflow' is 00h or 04h.
 8229:
 8230:				        ; DPTR will point to the start of the table, r0 will be the current data
 8231:				        ; byte offset and r1 the number of test cases remaiining.
 8232:	  1AA5	90 1A E4	        mov     DPTR,#tt_a_tab
 8233:	  1AA8	78 00		        mov     r0,#00h
 8234:	  1AAA	79 09		        mov     r1,#((tt_a_tab_end-tt_a_tab)/5)
 8235:
 8236:	  1AAC			tt_a_loop:
 8237:	  1AAC	E8		        mov     a,r0
 8238:	  1AAD	08		        inc     r0
 8239:	  1AAE	93		        movc    a,@a+DPTR
 8240:	  1AAF	F5 F0		        mov     B,a
 8241:	  1AB1	E8		        mov     a,r0
 8242:	  1AB2	08		        inc     r0
 8243:	  1AB3	93		        movc    a,@a+DPTR
 8244:	  1AB4	84		        div     ab
 8245:	  1AB5	F5 60		        mov     dir0,a
 8246:
 8247:	  1AB7	E8		        mov     a,r0                ; Get expected OV flag
 8248:	  1AB8	08		        inc     r0
 8249:	  1AB9	93		        movc    a,@a+DPTR
 8250:	  1ABA	70 15		        jnz     tt_a_divzero        ; If OV expected, skip verification of
 8251:	  1ABC	E5 D0		        mov     a,PSW               ; quotient and remainder
 8252:	  1ABE	54 04		        anl     a,#04h
 8253:	  1AC0	70 1A		        jnz     tt_a0
 8254:
 8255:	  1AC2	E8		        mov     a,r0                ; Verify quotient...
 8256:	  1AC3	08		        inc     r0
 8257:	  1AC4	93		        movc    a,@a+DPTR
 8258:	  1AC5	B5 60 14	        cjne    a,dir0,tt_a0
 8259:	  1AC8	E8		        mov     a,r0                ; ...and verify remainder
 8260:	  1AC9	08		        inc     r0
 8261:	  1ACA	93		        movc    a,@a+DPTR
 8262:	  1ACB	B5 F0 0E	        cjne    a,B,tt_a0
 8263:	  1ACE	02 1A D3	        jmp     tt_a_next
 8264:
 8265:	  1AD1			tt_a_divzero:
 8266:	  1AD1	08		        inc     r0
 8267:	  1AD2	08		        inc     r0
 8268:	  1AD3			tt_a_next:
 8269:	  1AD3	19		        dec     r1                  ; go for next test vector, if any
 8270:	  1AD4	E9		        mov     a,r1
 8271:	  1AD5	70 D5		        jnz     tt_a_loop
 8272:
 8273:				        eot     'a',tt_a0
 8274+ 1			        putc    #'a'
 8275+ 2  1AD7			??0713:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 149



 Line  I  Addr  Code            Source

 8276+ 2			        ;jnb     SCON.1,putc_loop
 8277+ 2			        ;clr     SCON.1
 8278+ 2  1AD7	75 99 61	        mov     SBUF,#'a'
 8279+ 1  1ADA	80 06		        sjmp    ??0712
 8280+ 1  1ADC			tt_a0:  putc    #'?'
 8281+ 2  1ADC			??0714:
 8282+ 2			        ;jnb     SCON.1,putc_loop
 8283+ 2			        ;clr     SCON.1
 8284+ 2  1ADC	75 99 3F	        mov     SBUF,#'?'
 8285+ 1  1ADF	75 6E 01	        mov     fail,#001h
 8286+ 1  1AE2			??0712:
 8287:	  1AE2	80 2D		        sjmp    tt_a_tab_end
 8288:
 8289:	  1AE4			tt_a_tab:
 8290:	  1AE4	07 13 00 02	        db      7,19,0,2,5
	  1AE8	05
 8291:	  1AE9	07 11 00 02	        db      7,17,0,2,3
	  1AED	03
 8292:	  1AEE	07 0D 00 01	        db      7,13,0,1,6
	  1AF2	06
 8293:	  1AF3	0D 11 00 01	        db      13,17,0,1,4
	  1AF7	04
 8294:	  1AF8	11 0D 00 00	        db      17,13,0,0,13
	  1AFC	0D
 8295:	  1AFD	00 0D 04 00	        db      0,13,4,0,13
	  1B01	0D
 8296:	  1B02	80 87 00 01	        db      80h,87h,0,1,7
	  1B06	07
 8297:	  1B07	01 FF 00 FF	        db      1,255,0,255,0
	  1B0B	00
 8298:	  1B0C	02 FF 00 7F	        db      2,255,0,127,1
	  1B10	01
 8299:	  1B11			tt_a_tab_end:
 8300:
 8301:				        ; b.- <MUL>
 8302:
 8303:				        ; Do with MUL the same we just did with DIV. The test data table has
 8304:				        ; the following format:
 8305:				        ; denominator, numerator, product high byte, product low byte.
 8306:
 8307:				        ; DPTR will point to the start of the table, r0 will be the current data
 8308:				        ; byte offset and r1 the number of test cases remaiining.
 8309:	  1B11	90 1B 52	        mov     DPTR,#tt_b_tab
 8310:	  1B14	78 00		        mov     r0,#00h
 8311:	  1B16	79 09		        mov     r1,#((tt_b_tab_end-tt_b_tab)/4)
 8312:
 8313:	  1B18			tt_b_loop:
 8314:	  1B18	E8		        mov     a,r0                ; Load B with test data...
 8315:	  1B19	08		        inc     r0
 8316:	  1B1A	93		        movc    a,@a+DPTR
 8317:	  1B1B	F5 F0		        mov     B,a
 8318:	  1B1D	E8		        mov     a,r0                ; ...then load A with test data...
 8319:	  1B1E	08		        inc     r0
 8320:	  1B1F	93		        movc    a,@a+DPTR
 8321:	  1B20	A4		        mul     ab                  ; and do the MUL
 8322:	  1B21	F5 60		        mov     dir0,a              ; Save A for later checks

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 150



 Line  I  Addr  Code            Source

 8323:
 8324:	  1B23	E8		        mov     a,r0                ; Verify product high byte
 8325:				        ;inc     r0
 8326:	  1B24	93		        movc    a,@a+DPTR
 8327:	  1B25	60 08		        jz      tt_b_noovf
 8328:
 8329:	  1B27	E5 D0		        mov     a,PSW               ; overflow expected
 8330:	  1B29	54 04		        anl     a,#04h
 8331:	  1B2B	60 1D		        jz      tt_b0
 8332:	  1B2D	80 06		        sjmp    tt_b_0
 8333:
 8334:	  1B2F			tt_b_noovf:
 8335:	  1B2F	E5 D0		        mov     a,PSW               ; no overflow expected
 8336:	  1B31	54 04		        anl     a,#04h
 8337:	  1B33	70 15		        jnz     tt_b0
 8338:
 8339:	  1B35			tt_b_0:
 8340:	  1B35	E8		        mov     a,r0                ; Verify product high byte
 8341:	  1B36	08		        inc     r0
 8342:	  1B37	93		        movc    a,@a+DPTR
 8343:	  1B38	B5 F0 0F	        cjne    a,B,tt_b0
 8344:	  1B3B	E8		        mov     a,r0                ; ...and verify low byte
 8345:	  1B3C	08		        inc     r0
 8346:	  1B3D	93		        movc    a,@a+DPTR
 8347:	  1B3E	B5 60 09	        cjne    a,dir0,tt_b0
 8348:
 8349:	  1B41	19		        dec     r1                  ; go for next test vector, if any
 8350:	  1B42	E9		        mov     a,r1
 8351:	  1B43	70 D3		        jnz     tt_b_loop
 8352:
 8353:				        eot     'b',tt_b0
 8354+ 1			        putc    #'b'
 8355+ 2  1B45			??0716:
 8356+ 2			        ;jnb     SCON.1,putc_loop
 8357+ 2			        ;clr     SCON.1
 8358+ 2  1B45	75 99 62	        mov     SBUF,#'b'
 8359+ 1  1B48	80 06		        sjmp    ??0715
 8360+ 1  1B4A			tt_b0:  putc    #'?'
 8361+ 2  1B4A			??0717:
 8362+ 2			        ;jnb     SCON.1,putc_loop
 8363+ 2			        ;clr     SCON.1
 8364+ 2  1B4A	75 99 3F	        mov     SBUF,#'?'
 8365+ 1  1B4D	75 6E 01	        mov     fail,#001h
 8366+ 1  1B50			??0715:
 8367:	  1B50	80 24		        sjmp    tt_b_tab_end
 8368:
 8369:	  1B52			tt_b_tab:
 8370:	  1B52	07 13 00 85	        db      7,19,0,133
 8371:	  1B56	07 11 00 77	        db      7,17,0,119
 8372:	  1B5A	07 0D 00 5B	        db      7,13,0,91
 8373:	  1B5E	0D 11 00 DD	        db      13,17,0,221
 8374:	  1B62	11 0D 00 DD	        db      17,13,0,221
 8375:	  1B66	00 0D 00 00	        db      0,13,0,0
 8376:	  1B6A	80 87 43 80	        db      80h,87h,43h,80h
 8377:	  1B6E	01 FF 00 FF	        db      1,255,0,255
 8378:	  1B72	02 FF 01 FE	        db      2,255,01h,0feh

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 151



 Line  I  Addr  Code            Source

 8379:	  1B76			tt_b_tab_end:
 8380:
 8381:				        put_crlf                    ; end of test series
 8382+ 1			        putc    #13
 8383+ 2  1B76			??0718:
 8384+ 2			        ;jnb     SCON.1,putc_loop
 8385+ 2			        ;clr     SCON.1
 8386+ 2  1B76	75 99 0D	        mov     SBUF,#13
 8387+ 1			        putc    #10
 8388+ 2  1B79			??0719:
 8389+ 2			        ;jnb     SCON.1,putc_loop
 8390+ 2			        ;clr     SCON.1
 8391+ 2  1B79	75 99 0A	        mov     SBUF,#10
 8392:
 8393:
 8394:
 8395:				        ;-- Test series U ------------------------------------------------------
 8396:				        ; Register banks
 8397:				        ; a.- Write to register, read from indirect address.
 8398:				        ; a.- Write to indirect address, read from register.
 8399:				        ;
 8400:
 8401:				        putc    #'U'                ; start of test series
 8402+ 1  1B7C			??0720:
 8403+ 1			        ;jnb     SCON.1,putc_loop
 8404+ 1			        ;clr     SCON.1
 8405+ 1  1B7C	75 99 55	        mov     SBUF,#'U'
 8406:
 8407:
 8408:	  1B7F	75 D0 00	        mov     PSW,#00h            ; Test bank 0
 8409:	  1B82	74 01		        mov     a,#00h + 1
 8410:	  1B84	12 1B A1	        call    tu_a_test
 8411:
 8412:	  1B87	75 D0 08	        mov     PSW,#08h            ; Test bank 1
 8413:	  1B8A	74 09		        mov     a,#08h + 1
 8414:	  1B8C	12 1B A1	        call    tu_a_test
 8415:
 8416:	  1B8F	75 D0 10	        mov     PSW,#10h            ; Test bank 2
 8417:	  1B92	74 11		        mov     a,#10h + 1
 8418:	  1B94	12 1B A1	        call    tu_a_test
 8419:
 8420:	  1B97	75 D0 18	        mov     PSW,#18h            ; Test bank 3
 8421:	  1B9A	74 19		        mov     a,#18h + 1
 8422:	  1B9C	12 1B A1	        call    tu_a_test
 8423:
 8424:	  1B9F	80 1E		        sjmp    tu_a_done
 8425:
 8426:	  1BA1			tu_a_test:
 8427:	  1BA1	F8		        mov     r0,a                ; R0 points to R1 in the selected bank.
 8428:
 8429:	  1BA2	79 12		        mov     r1,#12h             ; Write to registers R1 and R7
 8430:	  1BA4	7F 34		        mov     r7,#34h
 8431:
 8432:	  1BA6	E6		        mov     a,@r0               ; Check R1
 8433:	  1BA7	B4 12 1B	        cjne    a,#12h,tu_a0
 8434:	  1BAA	74 56		        mov     a,#56h              ; Ok, now write to R1 with reg addressing...

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 152



 Line  I  Addr  Code            Source

 8435:	  1BAC	F6		        mov     @r0,a               ; ...and check by reading in indirect.
 8436:	  1BAD	B9 56 15	        cjne    r1,#56h,tu_a0
 8437:
 8438:	  1BB0	E8		        mov     a,r0                ; Set R0 to point to R7 in selected bank
 8439:	  1BB1	24 06		        add     a,#06h
 8440:	  1BB3	F8		        mov     r0,a
 8441:	  1BB4	E6		        mov     a,@r0               ; Check R7
 8442:	  1BB5	B4 34 0D	        cjne    a,#34h,tu_a0
 8443:
 8444:	  1BB8	74 78		        mov     a,#78h              ; Ok, now write to R7 with reg addressing...
 8445:	  1BBA	F6		        mov     @r0,a               ; ...and check by reading in indirect.
 8446:	  1BBB	B4 78 07	        cjne    a,#78h,tu_a0
 8447:
 8448:	  1BBE	22		        ret
 8449:
 8450:	  1BBF			tu_a_done:
 8451:	  1BBF	00		        nop
 8452:				        eot     'a',tu_a0
 8453+ 1			        putc    #'a'
 8454+ 2  1BC0			??0722:
 8455+ 2			        ;jnb     SCON.1,putc_loop
 8456+ 2			        ;clr     SCON.1
 8457+ 2  1BC0	75 99 61	        mov     SBUF,#'a'
 8458+ 1  1BC3	80 06		        sjmp    ??0721
 8459+ 1  1BC5			tu_a0:  putc    #'?'
 8460+ 2  1BC5			??0723:
 8461+ 2			        ;jnb     SCON.1,putc_loop
 8462+ 2			        ;clr     SCON.1
 8463+ 2  1BC5	75 99 3F	        mov     SBUF,#'?'
 8464+ 1  1BC8	75 6E 01	        mov     fail,#001h
 8465+ 1  1BCB			??0721:
 8466:
 8467:				        put_crlf                    ; end of test series
 8468+ 1			        putc    #13
 8469+ 2  1BCB			??0724:
 8470+ 2			        ;jnb     SCON.1,putc_loop
 8471+ 2			        ;clr     SCON.1
 8472+ 2  1BCB	75 99 0D	        mov     SBUF,#13
 8473+ 1			        putc    #10
 8474+ 2  1BCE			??0725:
 8475+ 2			        ;jnb     SCON.1,putc_loop
 8476+ 2			        ;clr     SCON.1
 8477+ 2  1BCE	75 99 0A	        mov     SBUF,#10
 8478:
 8479:
 8480:				        ;-- Template for test series -------------------------------------------
 8481:
 8482:				        ;-- Test series X ------------------------------------------------------
 8483:				        ;
 8484:				        ; a.-
 8485:
 8486:				        ;putc    #'X'                ; start of test series
 8487:				        ;put_crlf                    ; end of test series
 8488:
 8489:				        ;-----------------------------------------------------------------------
 8490:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 153



 Line  I  Addr  Code            Source

 8491:				        ; Test cases finished. Now print completion message dependent on the
 8492:				        ; value of the fail flag.
 8493:
 8494:	  1BD1	E5 6E		        mov     a,fail
 8495:	  1BD3	70 1A		        jnz     test_failed
 8496:
 8497:				        put_crlf
 8498+ 1			        putc    #13
 8499+ 2  1BD5			??0726:
 8500+ 2			        ;jnb     SCON.1,putc_loop
 8501+ 2			        ;clr     SCON.1
 8502+ 2  1BD5	75 99 0D	        mov     SBUF,#13
 8503+ 1			        putc    #10
 8504+ 2  1BD8			??0727:
 8505+ 2			        ;jnb     SCON.1,putc_loop
 8506+ 2			        ;clr     SCON.1
 8507+ 2  1BD8	75 99 0A	        mov     SBUF,#10
 8508:				        putc    #'P'
 8509+ 1  1BDB			??0728:
 8510+ 1			        ;jnb     SCON.1,putc_loop
 8511+ 1			        ;clr     SCON.1
 8512+ 1  1BDB	75 99 50	        mov     SBUF,#'P'
 8513:				        putc    #'A'
 8514+ 1  1BDE			??0729:
 8515+ 1			        ;jnb     SCON.1,putc_loop
 8516+ 1			        ;clr     SCON.1
 8517+ 1  1BDE	75 99 41	        mov     SBUF,#'A'
 8518:				        putc    #'S'
 8519+ 1  1BE1			??0730:
 8520+ 1			        ;jnb     SCON.1,putc_loop
 8521+ 1			        ;clr     SCON.1
 8522+ 1  1BE1	75 99 53	        mov     SBUF,#'S'
 8523:				        putc    #'S'
 8524+ 1  1BE4			??0731:
 8525+ 1			        ;jnb     SCON.1,putc_loop
 8526+ 1			        ;clr     SCON.1
 8527+ 1  1BE4	75 99 53	        mov     SBUF,#'S'
 8528:				        put_crlf
 8529+ 1			        putc    #13
 8530+ 2  1BE7			??0732:
 8531+ 2			        ;jnb     SCON.1,putc_loop
 8532+ 2			        ;clr     SCON.1
 8533+ 2  1BE7	75 99 0D	        mov     SBUF,#13
 8534+ 1			        putc    #10
 8535+ 2  1BEA			??0733:
 8536+ 2			        ;jnb     SCON.1,putc_loop
 8537+ 2			        ;clr     SCON.1
 8538+ 2  1BEA	75 99 0A	        mov     SBUF,#10
 8539:	  1BED	80 1A		        sjmp    quit
 8540:
 8541:	  1BEF			test_failed:
 8542:				        put_crlf
 8543+ 1			        putc    #13
 8544+ 2  1BEF			??0734:
 8545+ 2			        ;jnb     SCON.1,putc_loop
 8546+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 154



 Line  I  Addr  Code            Source

 8547+ 2  1BEF	75 99 0D	        mov     SBUF,#13
 8548+ 1			        putc    #10
 8549+ 2  1BF2			??0735:
 8550+ 2			        ;jnb     SCON.1,putc_loop
 8551+ 2			        ;clr     SCON.1
 8552+ 2  1BF2	75 99 0A	        mov     SBUF,#10
 8553:				        putc    #'F'
 8554+ 1  1BF5			??0736:
 8555+ 1			        ;jnb     SCON.1,putc_loop
 8556+ 1			        ;clr     SCON.1
 8557+ 1  1BF5	75 99 46	        mov     SBUF,#'F'
 8558:				        putc    #'A'
 8559+ 1  1BF8			??0737:
 8560+ 1			        ;jnb     SCON.1,putc_loop
 8561+ 1			        ;clr     SCON.1
 8562+ 1  1BF8	75 99 41	        mov     SBUF,#'A'
 8563:				        putc    #'I'
 8564+ 1  1BFB			??0738:
 8565+ 1			        ;jnb     SCON.1,putc_loop
 8566+ 1			        ;clr     SCON.1
 8567+ 1  1BFB	75 99 49	        mov     SBUF,#'I'
 8568:				        putc    #'L'
 8569+ 1  1BFE			??0739:
 8570+ 1			        ;jnb     SCON.1,putc_loop
 8571+ 1			        ;clr     SCON.1
 8572+ 1  1BFE	75 99 4C	        mov     SBUF,#'L'
 8573:				        put_crlf
 8574+ 1			        putc    #13
 8575+ 2  1C01			??0740:
 8576+ 2			        ;jnb     SCON.1,putc_loop
 8577+ 2			        ;clr     SCON.1
 8578+ 2  1C01	75 99 0D	        mov     SBUF,#13
 8579+ 1			        putc    #10
 8580+ 2  1C04			??0741:
 8581+ 2			        ;jnb     SCON.1,putc_loop
 8582+ 2			        ;clr     SCON.1
 8583+ 2  1C04	75 99 0A	        mov     SBUF,#10
 8584:	  1C07	80 00		        sjmp    quit
 8585:
 8586:				        ;-- End of test program, enter single-instruction endless loop
 8587:	  1C09	81 09		quit:   ajmp    $
 8588:
 8589:
 8590:				        ; We'll place a few test routines in the 2nd half of the code space so
 8591:				        ; we can test long jumps and calls onto different code pages.
 8592:		N      8000	        org     8000h
 8593:
 8594:				        ; tr_sub1: part of the LCALL test.
 8595:	  8000			tr_sub1:
 8596:	  8000	E5 81		        mov     A,SP
 8597:	  8002	B4 53 0D	        cjne    A,#53h,tr_sub1_fail ; ...verify the SP value...
 8598:	  8005	E5 52		        mov     A,52h               ; ...and verify the pushed ret address
 8599:	  8007	B4 FD 08	        cjne    A,#LOW(tr_rv1),tr_sub1_fail
 8600:	  800A	E5 53		        mov     A,53h
 8601:	  800C	B4 19 03	        cjne    A,#HIGH(tr_rv1),tr_sub1_fail
 8602:	  800F	02 19 FF	        ljmp    tr_rv2

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 155



 Line  I  Addr  Code            Source

 8603:	  8012			tr_sub1_fail:
 8604:	  8012	02 1A 05	        ljmp    tr_b0
 8605:
 8606:				        end





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 156





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0000				  CODE	    0033	 177
??0001				  CODE	    0036	 185
??0002				  CODE	    003B	 192
??0003				  CODE	    0041	 198
??0004				  CODE	    0046	 206
??0005				  CODE	    0054	 215
??0006				  CODE	    005D	 222
??0007				  CODE	    0069	 232
??0008				  CODE	    007D	 252
??0009				  CODE	    0072	 241
??0010				  CODE	    0077	 247
??0011				  CODE	    0090	 271
??0012				  CODE	    0085	 260
??0013				  CODE	    008A	 266
??0014				  CODE	    0090	 275
??0015				  CODE	    0093	 280
??0016				  CODE	    0096	 297
??0017				  CODE	    00D4	 354
??0018				  CODE	    00C9	 343
??0019				  CODE	    00CE	 349
??0020				  CODE	    00D9	 359
??0021				  CODE	    00E8	 369
??0022				  CODE	    00EE	 375
??0023				  CODE	    00FE	 401
??0024				  CODE	    00FC	 400
??0025				  CODE	    00F6	 395
??0026				  CODE	    010E	 412
??0027				  CODE	    010C	 411
??0028				  CODE	    0106	 406
??0029				  CODE	    011E	 423
??0030				  CODE	    011C	 422
??0031				  CODE	    0116	 417
??0032				  CODE	    012E	 434
??0033				  CODE	    012C	 433
??0034				  CODE	    0126	 428
??0035				  CODE	    013E	 445
??0036				  CODE	    013C	 444
??0037				  CODE	    0136	 439
??0038				  CODE	    014E	 456
??0039				  CODE	    014C	 455
??0040				  CODE	    0146	 450
??0041				  CODE	    015E	 467
??0042				  CODE	    015C	 466
??0043				  CODE	    0156	 461
??0044				  CODE	    016E	 478
??0045				  CODE	    016C	 477
??0046				  CODE	    0166	 472
??0047				  CODE	    0190	 502
??0048				  CODE	    0185	 491
??0049				  CODE	    018A	 497

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 157



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0050				  CODE	    01A7	 525
??0051				  CODE	    019C	 514
??0052				  CODE	    01A1	 520
??0053				  CODE	    01D4	 567
??0054				  CODE	    01C9	 556
??0055				  CODE	    01CE	 562
??0056				  CODE	    01E3	 592
??0057				  CODE	    01E1	 591
??0058				  CODE	    01DB	 586
??0059				  CODE	    01F5	 604
??0060				  CODE	    01F3	 603
??0061				  CODE	    01ED	 598
??0062				  CODE	    0217	 629
??0063				  CODE	    020C	 618
??0064				  CODE	    0211	 624
??0065				  CODE	    022B	 640
??0066				  CODE	    0236	 648
??0067				  CODE	    0249	 668
??0068				  CODE	    023E	 657
??0069				  CODE	    0243	 663
??0070				  CODE	    0249	 672
??0071				  CODE	    024C	 677
??0072				  CODE	    024F	 706
??0073				  CODE	    025D	 716
??0074				  CODE	    0268	 724
??0075				  CODE	    027C	 744
??0076				  CODE	    0271	 733
??0077				  CODE	    0276	 739
??0078				  CODE	    0292	 764
??0079				  CODE	    0287	 753
??0080				  CODE	    028C	 759
??0081				  CODE	    029C	 772
??0082				  CODE	    02A6	 780
??0083				  CODE	    02B9	 800
??0084				  CODE	    02AE	 789
??0085				  CODE	    02B3	 795
??0086				  CODE	    02D6	 824
??0087				  CODE	    02CB	 813
??0088				  CODE	    02D0	 819
??0089				  CODE	    0303	 859
??0090				  CODE	    02F8	 848
??0091				  CODE	    02FD	 854
??0092				  CODE	    0326	 887
??0093				  CODE	    031B	 876
??0094				  CODE	    0320	 882
??0095				  CODE	    0340	 910
??0096				  CODE	    0335	 899
??0097				  CODE	    033A	 905
??0098				  CODE	    035E	 936
??0099				  CODE	    0353	 925
??0100				  CODE	    0358	 931
??0101				  CODE	    036C	 944
??0102				  CODE	    0377	 952
??0103				  CODE	    038B	 972
??0104				  CODE	    0380	 961
??0105				  CODE	    0385	 967

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 158



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0106				  CODE	    03A8	 995
??0107				  CODE	    039D	 984
??0108				  CODE	    03A2	 990
??0109				  CODE	    03D5	1030
??0110				  CODE	    03CA	1019
??0111				  CODE	    03CF	1025
??0112				  CODE	    03F8	1058
??0113				  CODE	    03ED	1047
??0114				  CODE	    03F2	1053
??0115				  CODE	    0412	1081
??0116				  CODE	    0407	1070
??0117				  CODE	    040C	1076
??0118				  CODE	    0430	1107
??0119				  CODE	    0425	1096
??0120				  CODE	    042A	1102
??0121				  CODE	    0430	1113
??0122				  CODE	    0433	1118
??0123				  CODE	    0436	1136
??0124				  CODE	    044E	1160
??0125				  CODE	    0443	1149
??0126				  CODE	    0448	1155
??0127				  CODE	    0475	1195
??0128				  CODE	    046A	1184
??0129				  CODE	    046F	1190
??0130				  CODE	    049B	1229
??0131				  CODE	    0490	1218
??0132				  CODE	    0495	1224
??0133				  CODE	    04D3	1275
??0134				  CODE	    04C8	1264
??0135				  CODE	    04CD	1270
??0136				  CODE	    04D3	1279
??0137				  CODE	    04D6	1284
??0138				  CODE	    04D9	1302
??0139				  CODE	    04F6	1341
??0140				  CODE	    04EB	1330
??0141				  CODE	    04F0	1336
??0142				  CODE	    057B	1431
??0143				  CODE	    0570	1420
??0144				  CODE	    0575	1426
??0145				  CODE	    05A8	1468
??0146				  CODE	    059D	1457
??0147				  CODE	    05A2	1463
??0148				  CODE	    05BB	1487
??0149				  CODE	    05B0	1476
??0150				  CODE	    05B5	1482
??0151				  CODE	    05DD	1513
??0152				  CODE	    05D2	1502
??0153				  CODE	    05D7	1508
??0154				  CODE	    05F7	1548
??0155				  CODE	    05EC	1537
??0156				  CODE	    05F1	1543
??0157				  CODE	    067C	1638
??0158				  CODE	    0671	1627
??0159				  CODE	    0676	1633
??0160				  CODE	    06A9	1675
??0161				  CODE	    069E	1664

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 159



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0162				  CODE	    06A3	1670
??0163				  CODE	    06BC	1694
??0164				  CODE	    06B1	1683
??0165				  CODE	    06B6	1689
??0166				  CODE	    06BC	1698
??0167				  CODE	    06BF	1703
??0168				  CODE	    06C2	1722
??0169				  CODE	    0718	1788
??0170				  CODE	    070D	1777
??0171				  CODE	    0712	1783
??0172				  CODE	    0735	1814
??0173				  CODE	    072A	1803
??0174				  CODE	    072F	1809
??0175				  CODE	    074B	1834
??0176				  CODE	    0740	1823
??0177				  CODE	    0745	1829
??0178				  CODE	    0796	1888
??0179				  CODE	    078B	1877
??0180				  CODE	    0790	1883
??0181				  CODE	    07B5	1914
??0182				  CODE	    07AA	1903
??0183				  CODE	    07AF	1909
??0184				  CODE	    07F0	1968
??0185				  CODE	    07E5	1957
??0186				  CODE	    07EA	1963
??0187				  CODE	    080B	1994
??0188				  CODE	    0800	1983
??0189				  CODE	    0805	1989
??0190				  CODE	    0824	2016
??0191				  CODE	    0819	2005
??0192				  CODE	    081E	2011
??0193				  CODE	    0843	2042
??0194				  CODE	    0838	2031
??0195				  CODE	    083D	2037
??0196				  CODE	    0843	2046
??0197				  CODE	    0846	2051
??0198				  CODE	    0849	2066
??0199				  CODE	    0868	2096
??0200				  CODE	    085D	2085
??0201				  CODE	    0862	2091
??0202				  CODE	    089A	2129
??0203				  CODE	    088F	2118
??0204				  CODE	    0894	2124
??0205				  CODE	    08B4	2152
??0206				  CODE	    08A9	2141
??0207				  CODE	    08AE	2147
??0208				  CODE	    08CF	2176
??0209				  CODE	    08C4	2165
??0210				  CODE	    08C9	2171
??0211				  CODE	    08E6	2199
??0212				  CODE	    08DB	2188
??0213				  CODE	    08E0	2194
??0214				  CODE	    08E6	2204
??0215				  CODE	    08E9	2209
??0216				  CODE	    08EC	2356
??0217				  CODE	    0973	2580

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 160



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0218				  CODE	    0922	2448
??0219				  CODE	    093D	2492
??0220				  CODE	    0958	2536
??0221				  CODE	    0993	2626
??0222				  CODE	    09AA	2657
??0223				  CODE	    0928	2454
??0224				  CODE	    091D	2443
??0225				  CODE	    0922	2449
??0226				  CODE	    0943	2498
??0227				  CODE	    0938	2487
??0228				  CODE	    093D	2493
??0229				  CODE	    095E	2542
??0230				  CODE	    0953	2531
??0231				  CODE	    0958	2537
??0232				  CODE	    0979	2586
??0233				  CODE	    096E	2575
??0234				  CODE	    0973	2581
??0235				  CODE	    0999	2632
??0236				  CODE	    098E	2621
??0237				  CODE	    0993	2627
??0238				  CODE	    09B0	2663
??0239				  CODE	    09A5	2652
??0240				  CODE	    09AA	2658
??0241				  CODE	    09B0	2668
??0242				  CODE	    09B3	2673
??0243				  CODE	    09B6	2684
??0244				  CODE	    0A3D	2908
??0245				  CODE	    09EC	2776
??0246				  CODE	    0A07	2820
??0247				  CODE	    0A22	2864
??0248				  CODE	    0A5D	2954
??0249				  CODE	    0A74	2985
??0250				  CODE	    09F2	2782
??0251				  CODE	    09E7	2771
??0252				  CODE	    09EC	2777
??0253				  CODE	    0A0D	2826
??0254				  CODE	    0A02	2815
??0255				  CODE	    0A07	2821
??0256				  CODE	    0A28	2870
??0257				  CODE	    0A1D	2859
??0258				  CODE	    0A22	2865
??0259				  CODE	    0A43	2914
??0260				  CODE	    0A38	2903
??0261				  CODE	    0A3D	2909
??0262				  CODE	    0A63	2960
??0263				  CODE	    0A58	2949
??0264				  CODE	    0A5D	2955
??0265				  CODE	    0A7A	2991
??0266				  CODE	    0A6F	2980
??0267				  CODE	    0A74	2986
??0268				  CODE	    0A7A	2996
??0269				  CODE	    0A7D	3001
??0270				  CODE	    0A80	3012
??0271				  CODE	    0B07	3236
??0272				  CODE	    0AB6	3104
??0273				  CODE	    0AD1	3148

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 161



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0274				  CODE	    0AEC	3192
??0275				  CODE	    0B27	3282
??0276				  CODE	    0B3E	3313
??0277				  CODE	    0ABC	3110
??0278				  CODE	    0AB1	3099
??0279				  CODE	    0AB6	3105
??0280				  CODE	    0AD7	3154
??0281				  CODE	    0ACC	3143
??0282				  CODE	    0AD1	3149
??0283				  CODE	    0AF2	3198
??0284				  CODE	    0AE7	3187
??0285				  CODE	    0AEC	3193
??0286				  CODE	    0B0D	3242
??0287				  CODE	    0B02	3231
??0288				  CODE	    0B07	3237
??0289				  CODE	    0B2D	3288
??0290				  CODE	    0B22	3277
??0291				  CODE	    0B27	3283
??0292				  CODE	    0B44	3319
??0293				  CODE	    0B39	3308
??0294				  CODE	    0B3E	3314
??0295				  CODE	    0B44	3324
??0296				  CODE	    0B47	3329
??0297				  CODE	    0B4A	3339
??0298				  CODE	    0B52	3360
??0299				  CODE	    0B66	3378
??0300				  CODE	    0B5B	3367
??0301				  CODE	    0B60	3373
??0302				  CODE	    0B6A	3384
??0303				  CODE	    0B76	3392
??0304				  CODE	    0B82	3400
??0305				  CODE	    0B8E	3408
??0306				  CODE	    0B9A	3416
??0307				  CODE	    0BA6	3424
??0308				  CODE	    0BB2	3432
??0309				  CODE	    0BBE	3440
??0310				  CODE	    0BD1	3458
??0311				  CODE	    0BC6	3447
??0312				  CODE	    0BCB	3453
??0313				  CODE	    0BD1	3462
??0314				  CODE	    0BD4	3467
??0315				  CODE	    0BD7	3479
??0316				  CODE	    0BDA	3485
??0317				  CODE	    0CFB	3840
??0318				  CODE	    0C56	3636
??0319				  CODE	    0C8D	3704
??0320				  CODE	    0CC4	3772
??0323				  NUMBER    0000	3500
??0324				  NUMBER    0000	3527
??0325				  NUMBER    0000	3554
??0326				  NUMBER    0000	3581
??0327				  NUMBER    0000	3607
??0328				  CODE	    0C5C	3642
??0329				  CODE	    0C51	3631
??0330				  CODE	    0C56	3637
??0331				  NUMBER    0000	3649

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 162



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0332				  NUMBER    0000	3675
??0333				  CODE	    0C93	3710
??0334				  CODE	    0C88	3699
??0335				  CODE	    0C8D	3705
??0336				  NUMBER    0000	3717
??0337				  NUMBER    0000	3743
??0338				  CODE	    0CCA	3778
??0339				  CODE	    0CBF	3767
??0340				  CODE	    0CC4	3773
??0341				  NUMBER    0000	3785
??0342				  NUMBER    0000	3811
??0343				  CODE	    0D01	3846
??0344				  CODE	    0CF6	3835
??0345				  CODE	    0CFB	3841
??0346				  CODE	    0D01	3860
??0347				  CODE	    0E22	4215
??0348				  CODE	    0D7D	4011
??0349				  CODE	    0DB4	4079
??0350				  CODE	    0DEB	4147
??0353				  NUMBER    0000	3875
??0354				  NUMBER    0000	3902
??0355				  NUMBER    0000	3929
??0356				  NUMBER    0000	3956
??0357				  NUMBER    0000	3982
??0358				  CODE	    0D83	4017
??0359				  CODE	    0D78	4006
??0360				  CODE	    0D7D	4012
??0361				  NUMBER    0000	4024
??0362				  NUMBER    0000	4050
??0363				  CODE	    0DBA	4085
??0364				  CODE	    0DAF	4074
??0365				  CODE	    0DB4	4080
??0366				  NUMBER    0000	4092
??0367				  NUMBER    0000	4118
??0368				  CODE	    0DF1	4153
??0369				  CODE	    0DE6	4142
??0370				  CODE	    0DEB	4148
??0371				  NUMBER    0000	4160
??0372				  NUMBER    0000	4186
??0373				  CODE	    0E28	4221
??0374				  CODE	    0E1D	4210
??0375				  CODE	    0E22	4216
??0376				  CODE	    0E28	4235
??0377				  CODE	    0F49	4590
??0378				  CODE	    0EA4	4386
??0379				  CODE	    0EDB	4454
??0380				  CODE	    0F12	4522
??0383				  NUMBER    0000	4250
??0384				  NUMBER    0000	4277
??0385				  NUMBER    0000	4304
??0386				  NUMBER    0000	4331
??0387				  NUMBER    0000	4357
??0388				  CODE	    0EAA	4392
??0389				  CODE	    0E9F	4381
??0390				  CODE	    0EA4	4387
??0391				  NUMBER    0000	4399

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 163



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0392				  NUMBER    0000	4425
??0393				  CODE	    0EE1	4460
??0394				  CODE	    0ED6	4449
??0395				  CODE	    0EDB	4455
??0396				  NUMBER    0000	4467
??0397				  NUMBER    0000	4493
??0398				  CODE	    0F18	4528
??0399				  CODE	    0F0D	4517
??0400				  CODE	    0F12	4523
??0401				  NUMBER    0000	4535
??0402				  NUMBER    0000	4561
??0403				  CODE	    0F4F	4596
??0404				  CODE	    0F44	4585
??0405				  CODE	    0F49	4591
??0406				  CODE	    0F4F	4612
??0407				  CODE	    0F52	4617
??0408				  CODE	    0F55	4629
??0409				  CODE	    0F58	4635
??0410				  CODE	    1079	4990
??0411				  CODE	    0FD4	4786
??0412				  CODE	    100B	4854
??0413				  CODE	    1042	4922
??0416				  NUMBER    0000	4650
??0417				  NUMBER    0000	4677
??0418				  NUMBER    0000	4704
??0419				  NUMBER    0000	4731
??0420				  NUMBER    0000	4757
??0421				  CODE	    0FDA	4792
??0422				  CODE	    0FCF	4781
??0423				  CODE	    0FD4	4787
??0424				  NUMBER    0000	4799
??0425				  NUMBER    0000	4825
??0426				  CODE	    1011	4860
??0427				  CODE	    1006	4849
??0428				  CODE	    100B	4855
??0429				  NUMBER    0000	4867
??0430				  NUMBER    0000	4893
??0431				  CODE	    1048	4928
??0432				  CODE	    103D	4917
??0433				  CODE	    1042	4923
??0434				  NUMBER    0000	4935
??0435				  NUMBER    0000	4961
??0436				  CODE	    107F	4996
??0437				  CODE	    1074	4985
??0438				  CODE	    1079	4991
??0439				  CODE	    107F	5010
??0440				  CODE	    11A0	5365
??0441				  CODE	    10FB	5161
??0442				  CODE	    1132	5229
??0443				  CODE	    1169	5297
??0446				  NUMBER    0000	5025
??0447				  NUMBER    0000	5052
??0448				  NUMBER    0000	5079
??0449				  NUMBER    0000	5106
??0450				  NUMBER    0000	5132
??0451				  CODE	    1101	5167

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 164



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0452				  CODE	    10F6	5156
??0453				  CODE	    10FB	5162
??0454				  NUMBER    0000	5174
??0455				  NUMBER    0000	5200
??0456				  CODE	    1138	5235
??0457				  CODE	    112D	5224
??0458				  CODE	    1132	5230
??0459				  NUMBER    0000	5242
??0460				  NUMBER    0000	5268
??0461				  CODE	    116F	5303
??0462				  CODE	    1164	5292
??0463				  CODE	    1169	5298
??0464				  NUMBER    0000	5310
??0465				  NUMBER    0000	5336
??0466				  CODE	    11A6	5371
??0467				  CODE	    119B	5360
??0468				  CODE	    11A0	5366
??0469				  CODE	    11A6	5385
??0470				  CODE	    12C7	5740
??0471				  CODE	    1222	5536
??0472				  CODE	    1259	5604
??0473				  CODE	    1290	5672
??0476				  NUMBER    0000	5400
??0477				  NUMBER    0000	5427
??0478				  NUMBER    0000	5454
??0479				  NUMBER    0000	5481
??0480				  NUMBER    0000	5507
??0481				  CODE	    1228	5542
??0482				  CODE	    121D	5531
??0483				  CODE	    1222	5537
??0484				  NUMBER    0000	5549
??0485				  NUMBER    0000	5575
??0486				  CODE	    125F	5610
??0487				  CODE	    1254	5599
??0488				  CODE	    1259	5605
??0489				  NUMBER    0000	5617
??0490				  NUMBER    0000	5643
??0491				  CODE	    1296	5678
??0492				  CODE	    128B	5667
??0493				  CODE	    1290	5673
??0494				  NUMBER    0000	5685
??0495				  NUMBER    0000	5711
??0496				  CODE	    12CD	5746
??0497				  CODE	    12C2	5735
??0498				  CODE	    12C7	5741
??0499				  CODE	    12CD	5760
??0500				  CODE	    13EE	6115
??0501				  CODE	    1349	5911
??0502				  CODE	    1380	5979
??0503				  CODE	    13B7	6047
??0506				  NUMBER    0001	5775
??0507				  NUMBER    0001	5802
??0508				  NUMBER    0001	5829
??0509				  NUMBER    0001	5856
??0510				  NUMBER    0001	5882
??0511				  CODE	    134F	5917

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 165



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0512				  CODE	    1344	5906
??0513				  CODE	    1349	5912
??0514				  NUMBER    0001	5924
??0515				  NUMBER    0001	5950
??0516				  CODE	    1386	5985
??0517				  CODE	    137B	5974
??0518				  CODE	    1380	5980
??0519				  NUMBER    0001	5992
??0520				  NUMBER    0001	6018
??0521				  CODE	    13BD	6053
??0522				  CODE	    13B2	6042
??0523				  CODE	    13B7	6048
??0524				  NUMBER    0001	6060
??0525				  NUMBER    0001	6086
??0526				  CODE	    13F4	6121
??0527				  CODE	    13E9	6110
??0528				  CODE	    13EE	6116
??0529				  CODE	    13F4	6138
??0530				  CODE	    13F7	6143
??0531				  CODE	    13FA	6155
??0532				  CODE	    13FD	6164
??0533				  CODE	    151E	6519
??0534				  CODE	    1479	6315
??0535				  CODE	    14B0	6383
??0536				  CODE	    14E7	6451
??0539				  NUMBER    0000	6179
??0540				  NUMBER    0000	6206
??0541				  NUMBER    0000	6233
??0542				  NUMBER    0000	6260
??0543				  NUMBER    0000	6286
??0544				  CODE	    147F	6321
??0545				  CODE	    1474	6310
??0546				  CODE	    1479	6316
??0547				  NUMBER    0000	6328
??0548				  NUMBER    0000	6354
??0549				  CODE	    14B6	6389
??0550				  CODE	    14AB	6378
??0551				  CODE	    14B0	6384
??0552				  NUMBER    0000	6396
??0553				  NUMBER    0000	6422
??0554				  CODE	    14ED	6457
??0555				  CODE	    14E2	6446
??0556				  CODE	    14E7	6452
??0557				  NUMBER    0000	6464
??0558				  NUMBER    0000	6490
??0559				  CODE	    1524	6525
??0560				  CODE	    1519	6514
??0561				  CODE	    151E	6520
??0562				  CODE	    1524	6539
??0563				  CODE	    1645	6894
??0564				  CODE	    15A0	6690
??0565				  CODE	    15D7	6758
??0566				  CODE	    160E	6826
??0569				  NUMBER    0001	6554
??0570				  NUMBER    0001	6581
??0571				  NUMBER    0001	6608

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 166



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0572				  NUMBER    0001	6635
??0573				  NUMBER    0001	6661
??0574				  CODE	    15A6	6696
??0575				  CODE	    159B	6685
??0576				  CODE	    15A0	6691
??0577				  NUMBER    0001	6703
??0578				  NUMBER    0001	6729
??0579				  CODE	    15DD	6764
??0580				  CODE	    15D2	6753
??0581				  CODE	    15D7	6759
??0582				  NUMBER    0001	6771
??0583				  NUMBER    0001	6797
??0584				  CODE	    1614	6832
??0585				  CODE	    1609	6821
??0586				  CODE	    160E	6827
??0587				  NUMBER    0001	6839
??0588				  NUMBER    0001	6865
??0589				  CODE	    164B	6900
??0590				  CODE	    1640	6889
??0591				  CODE	    1645	6895
??0592				  CODE	    164B	6914
??0593				  CODE	    176C	7269
??0594				  CODE	    16C7	7065
??0595				  CODE	    16FE	7133
??0596				  CODE	    1735	7201
??0599				  NUMBER    0000	6929
??0600				  NUMBER    0000	6956
??0601				  NUMBER    0000	6983
??0602				  NUMBER    0000	7010
??0603				  NUMBER    0000	7036
??0604				  CODE	    16CD	7071
??0605				  CODE	    16C2	7060
??0606				  CODE	    16C7	7066
??0607				  NUMBER    0000	7078
??0608				  NUMBER    0000	7104
??0609				  CODE	    1704	7139
??0610				  CODE	    16F9	7128
??0611				  CODE	    16FE	7134
??0612				  NUMBER    0000	7146
??0613				  NUMBER    0000	7172
??0614				  CODE	    173B	7207
??0615				  CODE	    1730	7196
??0616				  CODE	    1735	7202
??0617				  NUMBER    0000	7214
??0618				  NUMBER    0000	7240
??0619				  CODE	    1772	7275
??0620				  CODE	    1767	7264
??0621				  CODE	    176C	7270
??0622				  CODE	    1772	7289
??0623				  CODE	    1893	7644
??0624				  CODE	    17EE	7440
??0625				  CODE	    1825	7508
??0626				  CODE	    185C	7576
??0629				  NUMBER    0001	7304
??0630				  NUMBER    0001	7331
??0631				  NUMBER    0001	7358

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 167



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0632				  NUMBER    0001	7385
??0633				  NUMBER    0001	7411
??0634				  CODE	    17F4	7446
??0635				  CODE	    17E9	7435
??0636				  CODE	    17EE	7441
??0637				  NUMBER    0001	7453
??0638				  NUMBER    0001	7479
??0639				  CODE	    182B	7514
??0640				  CODE	    1820	7503
??0641				  CODE	    1825	7509
??0642				  NUMBER    0001	7521
??0643				  NUMBER    0001	7547
??0644				  CODE	    1862	7582
??0645				  CODE	    1857	7571
??0646				  CODE	    185C	7577
??0647				  NUMBER    0001	7589
??0648				  NUMBER    0001	7615
??0649				  CODE	    1899	7650
??0650				  CODE	    188E	7639
??0651				  CODE	    1893	7645
??0652				  CODE	    1899	7668
??0653				  CODE	    189C	7673
??0654				  CODE	    189F	7687
??0655				  CODE	    18C2	7716
??0656				  CODE	    18B7	7705
??0657				  CODE	    18BC	7711
??0658				  CODE	    18DE	7741
??0659				  CODE	    18D3	7730
??0660				  CODE	    18D8	7736
??0661				  CODE	    18FE	7767
??0662				  CODE	    18F3	7756
??0663				  CODE	    18F8	7762
??0664				  CODE	    1919	7791
??0665				  CODE	    190E	7780
??0666				  CODE	    1913	7786
??0667				  CODE	    1919	7795
??0668				  CODE	    191C	7800
??0669				  CODE	    191F	7813
??0670				  CODE	    1940	7841
??0671				  CODE	    1935	7830
??0672				  CODE	    193A	7836
??0673				  CODE	    1960	7877
??0674				  CODE	    1955	7866
??0675				  CODE	    195A	7872
??0676				  CODE	    197C	7902
??0677				  CODE	    1971	7891
??0678				  CODE	    1976	7897
??0679				  CODE	    197C	7906
??0680				  CODE	    197F	7911
??0681				  CODE	    1982	7922
??0682				  CODE	    199E	7949
??0683				  CODE	    1993	7938
??0684				  CODE	    1998	7944
??0685				  CODE	    19C4	7983
??0686				  CODE	    19B9	7972
??0687				  CODE	    19BE	7978

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 168



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0688				  CODE	    19C4	7987
??0689				  CODE	    19C7	7992
??0690				  CODE	    19CA	8012
??0691				  CODE	    19FA	8048
??0692				  CODE	    19EF	8037
??0693				  CODE	    19F4	8043
??0694				  CODE	    1A0B	8067
??0695				  CODE	    1A00	8056
??0696				  CODE	    1A05	8062
??0697				  CODE	    1A2D	8095
??0698				  CODE	    1A22	8084
??0699				  CODE	    1A27	8090
??0700				  CODE	    1A2D	8099
??0701				  CODE	    1A30	8104
??0702				  CODE	    1A33	8119
??0703				  CODE	    1A64	8157
??0704				  CODE	    1A59	8146
??0705				  CODE	    1A5E	8152
??0706				  CODE	    1A92	8192
??0707				  CODE	    1A87	8181
??0708				  CODE	    1A8C	8187
??0709				  CODE	    1A92	8197
??0710				  CODE	    1A95	8202
??0711				  CODE	    1A98	8214
??0712				  CODE	    1AE2	8286
??0713				  CODE	    1AD7	8275
??0714				  CODE	    1ADC	8281
??0715				  CODE	    1B50	8366
??0716				  CODE	    1B45	8355
??0717				  CODE	    1B4A	8361
??0718				  CODE	    1B76	8383
??0719				  CODE	    1B79	8388
??0720				  CODE	    1B7C	8402
??0721				  CODE	    1BCB	8465
??0722				  CODE	    1BC0	8454
??0723				  CODE	    1BC5	8460
??0724				  CODE	    1BCB	8469
??0725				  CODE	    1BCE	8474
??0726				  CODE	    1BD5	8499
??0727				  CODE	    1BD8	8504
??0728				  CODE	    1BDB	8509
??0729				  CODE	    1BDE	8514
??0730				  CODE	    1BE1	8519
??0731				  CODE	    1BE4	8524
??0732				  CODE	    1BE7	8530
??0733				  CODE	    1BEA	8535
??0734				  CODE	    1BEF	8544
??0735				  CODE	    1BF2	8549
??0736				  CODE	    1BF5	8554
??0737				  CODE	    1BF8	8559
??0738				  CODE	    1BFB	8564
??0739				  CODE	    1BFE	8569
??0740				  CODE	    1C01	8575
??0741				  CODE	    1C04	8580
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 169



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
AC				  BIT	      D6	  87
ACC				  DATA	      E0	  58
ARG0				  NUMBER    00C3	2363
ARG1				  NUMBER    00C5	2364
B				  DATA	      F0	  59
CY				  BIT	      D7	  88
DIR0				  NUMBER    0060	 101
DIR1				  NUMBER    0061	 102
DPH				  DATA	      83	  41
DPL				  DATA	      82	  40
EA				  BIT	      AF	  73
EOT				  MACRO	        	 131
ES				  BIT	      AC	  71
ET0				  BIT	      A9	  68
EX0				  BIT	      A8	  67
EXTI0				  CODE	    0003	  92
EXTI1				  CODE	    0013	  94
EXTINT0				  DATA	      C0	  56
F0				  BIT	      D5	  86
FAIL				  NUMBER    006E	 103
IE				  DATA	      A8	  53
NLOOPS				  NUMBER    0003	3357
OV				  BIT	      D2	  83
P				  BIT	      D0	  82
P0				  DATA	      80	  38
P1				  DATA	      90	  49
P2				  DATA	      A0	  52
P3				  DATA	      B0	  54
PSW				  DATA	      D0	  57
PUTC				  MACRO	        	 112
PUT_CRLF			  MACRO	        	 121
QUIT				  CODE	    1C09	8587
RES				  NUMBER    0001	2365
RESET				  CODE	    0000	  91
RS0				  BIT	      D3	  84
RS1				  BIT	      D4	  85
RXIRQ				  BIT	      99	  77
RXRDY				  BIT	      9D	  79
SAVED_PSW			  NUMBER    0070	 104
SAVE_PSW			  MACRO	        	2227
SBUF				  DATA	      99	  51
SCON				  DATA	      98	  50
SET_CY				  MACRO	        	2239
SINT				  CODE	    0023	  96
SP				  DATA	      81	  39
STACK0				  NUMBER    009F	 105
START				  CODE	    0030	 153
S_SUB0				  CODE	    1A4A	8135
S_SUB1				  CODE	    1A54	8141
S_SUB2				  CODE	    1A78	8170
S_SUB3				  CODE	    1A82	8176
T0ARL				  BIT	      8C	  63
T0CEN				  BIT	      8D	  64
T0IRQ				  BIT	      88	  62
TA_B0				  CODE	    0041	 197
TA_C0				  CODE	    0044	 204

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 170



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TA_C1				  CODE	    004B	 211
TA_C2				  CODE	    005A	 220
TA_C3				  CODE	    0046	 205
TA_C4				  CODE	    0063	 227
TA_D1				  CODE	    006F	 237
TA_D2				  CODE	    0077	 246
TA_E1				  CODE	    008A	 265
TB_A1				  CODE	    00CE	 348
TB_B0				  CODE	    00DF	 364
TB_B1				  CODE	    00E8	 368
TB_B2				  CODE	    00EE	 374
TB_C0				  CODE	    0171	 480
TB_C1				  CODE	    0179	 483
TB_C2				  CODE	    018A	 496
TB_C3				  CODE	    017E	 485
TB_C4				  CODE	    0183	 487
TB_D0				  CODE	    01A1	 519
TB_E0				  CODE	    01CE	 561
TB_F0				  CODE	    01F8	 606
TB_F1				  CODE	    0200	 610
TB_F2				  CODE	    0211	 623
TB_F3				  CODE	    0205	 612
TB_F4				  CODE	    020A	 614
TB_G0				  CODE	    0243	 662
TB_G1				  CODE	    0231	 645
TB_G2				  CODE	    023C	 653
TB_MA				  MACRO	        	 302
TB_MC				  MACRO	        	 380
TB_ME				  MACRO	        	 527
TB_MF				  MACRO	        	 569
TCH				  DATA	      8F	  48
TCL				  DATA	      8E	  47
TC_A0				  CODE	    0265	 722
TC_A1				  CODE	    0257	 713
TC_A2				  CODE	    026E	 729
TC_A3				  CODE	    0276	 738
TC_B1				  CODE	    028C	 758
TC_C0				  CODE	    02A4	 778
TC_C1				  CODE	    0296	 768
TC_C2				  CODE	    02AC	 785
TC_C3				  CODE	    02B3	 794
TC_D0				  CODE	    02D0	 818
TC_D1				  CODE	    02C1	 806
TC_E0				  CODE	    02FD	 853
TC_F0				  CODE	    0320	 881
TC_G0				  CODE	    033A	 904
TC_H0				  CODE	    0358	 930
TC_H1				  CODE	    034E	 919
TC_H2				  CODE	    0345	 915
TC_H3				  CODE	    0353	 921
TC_I0				  CODE	    0374	 950
TC_I1				  CODE	    0366	 941
TC_I2				  CODE	    037D	 957
TC_I3				  CODE	    0385	 966
TC_J0				  CODE	    03A2	 989
TC_J1				  CODE	    0393	 977

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 171



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TC_K0				  CODE	    03CF	1024
TC_L0				  CODE	    03F2	1052
TC_M0				  CODE	    040C	1075
TC_N0				  CODE	    042A	1101
TC_N1				  CODE	    0420	1090
TC_N2				  CODE	    0417	1086
TC_N3				  CODE	    0425	1092
TD_A0				  CODE	    0448	1154
TD_B0				  CODE	    046F	1189
TD_C0				  CODE	    0495	1223
TD_D0				  CODE	    04CD	1269
TEST_FAILED			  CODE	    1BEF	8541
TE_A0				  CODE	    04F0	1335
TE_B0				  CODE	    0575	1425
TE_C0				  CODE	    05A2	1462
TE_D0				  CODE	    05B5	1481
TE_E0				  CODE	    05D7	1507
TE_F0				  CODE	    05F1	1542
TE_G0				  CODE	    0676	1632
TE_H0				  CODE	    06A3	1669
TE_I0				  CODE	    06B6	1688
TE_MA				  MACRO	        	1307
TE_MF				  MACRO	        	1515
TF_A0				  CODE	    0712	1782
TF_B0				  CODE	    072F	1808
TF_C0				  CODE	    0745	1828
TF_D0				  CODE	    0790	1882
TF_E0				  CODE	    07AF	1908
TF_F0				  CODE	    07EA	1962
TF_G0				  CODE	    0805	1988
TF_H0				  CODE	    081E	2010
TF_I0				  CODE	    083D	2036
TF_MA				  MACRO	        	1727
TF_MD				  MACRO	        	1836
TF_MF				  MACRO	        	1916
TG_A0				  CODE	    0862	2090
TG_B0				  CODE	    0894	2123
TG_C0				  CODE	    08AE	2146
TG_D0				  CODE	    08C9	2170
TG_E0				  CODE	    08E0	2193
TH				  DATA	      8D	  46
TIMER0				  CODE	    000B	  93
TIMER1				  CODE	    001B	  95
TIMER2				  CODE	    002B	  97
TK_A0				  CODE	    0B60	3372
TK_B0				  CODE	    0BCB	3452
TK_MA				  MACRO	        	3345
TL				  DATA	      8C	  45
TOP_MA				  MACRO	        	2249
TOP_MB				  MACRO	        	2265
TOP_MC				  MACRO	        	2281
TO_A0				  CODE	    18BC	7710
TO_B0				  CODE	    18D8	7735
TO_C0				  CODE	    18F8	7761
TO_D0				  CODE	    1913	7785
TP_A0				  CODE	    193A	7835

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 172



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TP_B0				  CODE	    195A	7871
TP_C0				  CODE	    1976	7896
TQ0				  CODE	    1990	7934
TQ1				  CODE	    198C	7933
TQ_A0				  CODE	    1998	7943
TQ_B0				  CODE	    19BE	7977
TR_0				  CODE	    1A1A	8077
TR_A0				  CODE	    19F4	8042
TR_B0				  CODE	    1A05	8061
TR_C0				  CODE	    1A27	8089
TR_RV0				  CODE	    19DE	8026
TR_RV1				  CODE	    19FD	8052
TR_RV2				  CODE	    19FF	8053
TR_SUB0				  CODE	    19E0	8027
TR_SUB1				  CODE	    8000	8595
TR_SUB1_FAIL			  CODE	    8012	8603
TR_SUB2				  CODE	    1A14	8075
TSTAT				  DATA	      88	  43
TST_ALU				  MACRO	        	2299
TST_PSW				  MACRO	        	2231
TS_A0				  CODE	    1A5E	8151
TS_B0				  CODE	    1A8C	8186
TT_A0				  CODE	    1ADC	8280
TT_A_DIVZERO			  CODE	    1AD1	8265
TT_A_LOOP			  CODE	    1AAC	8236
TT_A_NEXT			  CODE	    1AD3	8268
TT_A_TAB			  CODE	    1AE4	8289
TT_A_TAB_END			  CODE	    1B11	8299
TT_B0				  CODE	    1B4A	8360
TT_B_0				  CODE	    1B35	8339
TT_B_LOOP			  CODE	    1B18	8313
TT_B_NOOVF			  CODE	    1B2F	8334
TT_B_TAB			  CODE	    1B52	8369
TT_B_TAB_END			  CODE	    1B76	8379
TU_A0				  CODE	    1BC5	8459
TU_A_DONE			  CODE	    1BBF	8450
TU_A_TEST			  CODE	    1BA1	8426
TXIRQ				  BIT	      98	  76
TXRDY				  BIT	      9C	  78
