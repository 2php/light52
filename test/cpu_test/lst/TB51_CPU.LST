
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	src\tb51_cpu.a51
	Object File:	bin\tb51_cpu.hex
	List File:	lst\tb51_cpu.lst



 Line  I  Addr  Code            Source

    1:				;-------------------------------------------------------------------------------
    2:				; tb51_cpu.a51 -- MCS51 instruction set test bench.
    3:				;-------------------------------------------------------------------------------
    4:				; This program is meant to verify the basic operation of an MCS51 CPU
    5:				; instruction set implementation.
    6:				; It is far too weak to rely on it exclusively but it can help detect gross
    7:				; implementation errors (overclocked CPUs, timing errors in FPGA cores, that
    8:				; kind of thing).
    9:				;
   10:				; The program is not yet ready to run on actual hardware (UART interface).
   11:				;
   12:				; For a full verification of the instruction set, an instruction set exerciser
   13:				; such as 'zexall' for the Z80 would be more suitable. This one is too weak.
   14:				;
   15:				; The program is meant to run in actual hardware or on a simulated environment.
   16:				; In the latter case you can use the co-simulation features of the light52
   17:				; project to pinpoint bugs.
   18:				;
   19:				; FIXME add assembly option to run tests in an (possibly infinite) loop.
   20:				;-------------------------------------------------------------------------------
   21:				; Major limitations:
   22:				;   1.- PSW is not checked for undue changes.
   23:				;   2.- <#imm> instructions are tested with one imm value only.
   24:				;   3.- <rel> jumps tested with small values (not near corner values).
   25:				;   4.- <bit> tested on 1 byte only, on 2 bits only.
   26:				;   5.- BCD instructions (DA, XCHD) not tested at all.
   27:				;
   28:				; Note there are too many limitations to list. Use this test bench as a first
   29:				; approximation only. If your CPU fails this test, it must be dead!
   30:				;-------------------------------------------------------------------------------
   31:
   32:				        ; Include the definitions for the light52 derivative
   33:				        $nomod51
   34:				        $include (light52.mcu)
   35: 1			;   Light52 processor definition file (for ASEM-51 assembler)
   36: 1			;   =========================================================
   37: 1
   38: 1	N	 80	P0          DATA        080H
   39: 1	N	 81	SP          DATA        081H
   40: 1	N	 82	DPL         DATA        082H
   41: 1	N	 83	DPH         DATA        083H
   42: 1			;PCON      DATA        087H
   43: 1	N	 88	TSTAT       DATA        088H

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   44: 1			;TMOD      DATA        089H
   45: 1	N	 8C	TL          DATA        08CH
   46: 1	N	 8D	TH          DATA        08DH
   47: 1	N	 8E	TCL         DATA        08EH
   48: 1	N	 8F	TCH         DATA        08FH
   49: 1	N	 90	P1          DATA        090H
   50: 1	N	 98	SCON        DATA        098H
   51: 1	N	 99	SBUF        DATA        099H
   52: 1	N	 A0	P2          DATA        0A0H
   53: 1	N	 A8	IE          DATA        0A8H
   54: 1	N	 B0	P3          DATA        0B0H
   55: 1			;IP        DATA        0B8H
   56: 1	N	 C0	EXTINT0     DATA        0C0H
   57: 1	N	 D0	PSW         DATA        0D0H
   58: 1	N	 E0	ACC         DATA        0E0H
   59: 1	N	 F0	B           DATA        0F0H
   60: 1
   61: 1			; TSTAT flags
   62: 1	N	 88	T0IRQ       BIT         088H
   63: 1	N	 8C	T0ARL       BIT         08CH
   64: 1	N	 8D	T0CEN       BIT         08DH
   65: 1
   66: 1			; IE flags
   67: 1	N	 A8	EX0         BIT         0A8H
   68: 1	N	 A9	ET0         BIT         0A9H
   69: 1			;EX1         BIT        0AAH
   70: 1			;ET1         BIT        0ABH
   71: 1	N	 AC	ES          BIT         0ACH
   72: 1			;ET2         BIT        0ADH
   73: 1	N	 AF	EA          BIT         0AFH
   74: 1
   75: 1			; SCON flags
   76: 1	N	 98	TXIRQ       BIT         098H
   77: 1	N	 99	RXIRQ       BIT         099H
   78: 1	N	 9C	TXRDY       BIT         09CH
   79: 1	N	 9D	RXRDY       BIT         09DH
   80: 1
   81: 1			; PSW flags
   82: 1	N	 D0	P           BIT        0D0H
   83: 1	N	 D2	OV          BIT        0D2H
   84: 1	N	 D3	RS0         BIT        0D3H
   85: 1	N	 D4	RS1         BIT        0D4H
   86: 1	N	 D5	F0          BIT        0D5H
   87: 1	N	 D6	AC          BIT        0D6H
   88: 1	N	 D7	CY          BIT        0D7H
   89: 1
   90: 1			; Interrupt vectors
   91: 1	N      0000	RESET       CODE       000H
   92: 1	N      0003	EXTI0       CODE       003H
   93: 1	N      000B	TIMER0      CODE       00BH
   94: 1	N      0013	EXTI1       CODE       013H
   95: 1	N      001B	TIMER1      CODE       01BH
   96: 1	N      0023	SINT        CODE       023H
   97: 1	N      002B	TIMER2      CODE       02BH
   98:
   99:				        ;-- Parameters common to all tests -------------------------------------

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

  100:
  101:		N      0060	dir0    set     060h                ; Address used in direct addressing tests
  102:		N      0061	dir1    set     061h                ; Address used in direct addressing tests
  103:		N      006E	fail    set     06eh                ; (IDATA) set to 1 upon test failure
  104:		N      0070	saved_psw set   070h                ; (IDATA) temp store for PSW value
  105:		N      009F	stack0  set     09fh                ; (IDATA) stack addr used for push/pop tests
  106:
  107:
  108:				        ;-- Macros common to all tests -----------------------------------------
  109:
  110:				        ; putc: send character to console (UART)
  111:				        ; If you change this macro, make sure it DOES NOT MODIFY PSW!
  112:				putc    macro   character
  113:				        local   putc_loop
  114:				putc_loop:
  115:				        ;jnb     SCON.1,putc_loop
  116:				        ;clr     SCON.1
  117:				        mov     SBUF,character
  118:				        endm
  119:
  120:				        ; put_crlf: send CR+LF to console
  121:				put_crlf macro
  122:				        putc    #13
  123:				        putc    #10
  124:				        endm
  125:
  126:				        ;eot char, label: 'end of test' to be used at the end of all tests.
  127:				        ; If you run into this macro it will print character 'char' and
  128:				        ; continue.
  129:				        ; If you jump to label 'label', it will instead print char '?' and
  130:				        ; will set variable 'fail' to 1, then it will continue.
  131:				eot     macro   char,label
  132:				        local   skip
  133:				        putc    #char
  134:				        sjmp    skip
  135:				label:  putc    #'?'
  136:				        mov     fail,#001h
  137:				skip:
  138:				        endm
  139:
  140:				        ;-- Reset & interrupt vectors ------------------------------------------
  141:
  142:		N      0000	        org     00h
  143:	  0000	02 00 30	        ljmp    start               ; We'll assume LJMP works this far...
  144:		N      0003	        org     03h
  145:		N      000B	        org     0bh
  146:		N      0013	        org     13h
  147:		N      001B	        org     1bh
  148:		N      0023	        org     23h
  149:
  150:
  151:				        ;-- Main test program --------------------------------------------------
  152:		N      0030	        org     30h
  153:	  0030			start:
  154:				        ; Initialize serial port
  155:				        ;(leave it with the default configuration: 19200-8-N-1)

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

  156:				        ;mov     TMOD,#20h           ; C/T = 0, Mode = 2
  157:				        ;mov     TH1,#0fdh           ; 9600 bauds @11.xxx MHz
  158:				        ;mov     TCON,#40h           ; Enable T1
  159:				        ;mov     SCON,#52h           ; 8/N/1, TI enabled
  160:
  161:				        ; Clear failure flag
  162:	  0030	75 6E 00	        mov     fail,#000h
  163:
  164:
  165:				        ;-- Test series A ------------------------------------------------------
  166:				        ; Test the basic opcodes needed in later tests:
  167:				        ; a.- Serial port initialization is OK
  168:				        ; a.- Bootstrap instructions work as used
  169:				        ; b.- <SJMP rel> (small positive rel only)
  170:				        ; c.- ACC can be loaded with direct mode addressing (as an SFR)
  171:				        ; c.- <CJNE a,#imm,rel>
  172:				        ; d.- <DJNZ dir, rel> (small positive rel only)
  173:				        ; e.- <MOV  a,dir>
  174:				        ; Note that one instance of LJMP has been tested too.
  175:
  176:				        putc    #'A'                ; start of test series
  177+ 1  0033			??0000:
  178+ 1			        ;jnb     SCON.1,putc_loop
  179+ 1			        ;clr     SCON.1
  180+ 1  0033	75 99 41	        mov     SBUF,#'A'
  181:
  182:				        ; If we arrive here at all, and you see the chars in the
  183:				        ; terminal, the A.a test has passed
  184:				        putc    #'a'
  185+ 1  0036			??0001:
  186+ 1			        ;jnb     SCON.1,putc_loop
  187+ 1			        ;clr     SCON.1
  188+ 1  0036	75 99 61	        mov     SBUF,#'a'
  189:
  190:	  0039	80 06		        sjmp    ta_b0               ; <SJMP rel> with very small positive rel
  191:				        putc    #'?'
  192+ 1  003B			??0002:
  193+ 1			        ;jnb     SCON.1,putc_loop
  194+ 1			        ;clr     SCON.1
  195+ 1  003B	75 99 3F	        mov     SBUF,#'?'
  196:	  003E	75 6E 01	        mov     fail,#001h
  197:	  0041			ta_b0:  putc    #'b'
  198+ 1  0041			??0003:
  199+ 1			        ;jnb     SCON.1,putc_loop
  200+ 1			        ;clr     SCON.1
  201+ 1  0041	75 99 62	        mov     SBUF,#'b'
  202:
  203:
  204:	  0044	80 05		ta_c0:  sjmp    ta_c1
  205:	  0046			ta_c3:  putc    #'c'
  206+ 1  0046			??0004:
  207+ 1			        ;jnb     SCON.1,putc_loop
  208+ 1			        ;clr     SCON.1
  209+ 1  0046	75 99 63	        mov     SBUF,#'c'
  210:	  0049	80 18		        sjmp    ta_c4
  211:	  004B	75 E0 5A	ta_c1:  mov     0e0h,#5ah           ; load A as SFR

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



 Line  I  Addr  Code            Source

  212:	  004E	B4 5A F5	        cjne    a,#5ah,ta_c3        ; test cjne with == args...
  213:	  0051	B4 7A 06	        cjne    a,#7ah,ta_c2        ; ...with != args, rel>0...
  214:				        putc    #'?'
  215+ 1  0054			??0005:
  216+ 1			        ;jnb     SCON.1,putc_loop
  217+ 1			        ;clr     SCON.1
  218+ 1  0054	75 99 3F	        mov     SBUF,#'?'
  219:	  0057	75 6E 01	        mov     fail,#001h
  220:	  005A	B4 7A E9	ta_c2:  cjne    a,#7ah,ta_c3        ; ...and with != args, rel<0
  221:				        putc    #'?'
  222+ 1  005D			??0006:
  223+ 1			        ;jnb     SCON.1,putc_loop
  224+ 1			        ;clr     SCON.1
  225+ 1  005D	75 99 3F	        mov     SBUF,#'?'
  226:	  0060	75 6E 01	        mov     fail,#001h
  227:	  0063			ta_c4:
  228:
  229:	  0063	75 60 02	        mov     dir0,#02h
  230:	  0066	D5 60 06	        djnz    dir0,ta_d1
  231:				        putc    #'?'
  232+ 1  0069			??0007:
  233+ 1			        ;jnb     SCON.1,putc_loop
  234+ 1			        ;clr     SCON.1
  235+ 1  0069	75 99 3F	        mov     SBUF,#'?'
  236:	  006C	75 6E 01	        mov     fail,#001h
  237:	  006F	D5 60 05	ta_d1:  djnz    dir0,ta_d2
  238:
  239:				        eot     'd',ta_d2
  240+ 1			        putc    #'d'
  241+ 2  0072			??0009:
  242+ 2			        ;jnb     SCON.1,putc_loop
  243+ 2			        ;clr     SCON.1
  244+ 2  0072	75 99 64	        mov     SBUF,#'d'
  245+ 1  0075	80 06		        sjmp    ??0008
  246+ 1  0077			ta_d2:  putc    #'?'
  247+ 2  0077			??0010:
  248+ 2			        ;jnb     SCON.1,putc_loop
  249+ 2			        ;clr     SCON.1
  250+ 2  0077	75 99 3F	        mov     SBUF,#'?'
  251+ 1  007A	75 6E 01	        mov     fail,#001h
  252+ 1  007D			??0008:
  253:
  254:	  007D	75 60 A5	        mov     dir0,#0a5h          ; test mov a,dir
  255:	  0080	E5 60		        mov     a,dir0
  256:	  0082	B4 A5 05	        cjne    a,#0a5h,ta_e1
  257:
  258:				        eot     'e',ta_e1
  259+ 1			        putc    #'e'
  260+ 2  0085			??0012:
  261+ 2			        ;jnb     SCON.1,putc_loop
  262+ 2			        ;clr     SCON.1
  263+ 2  0085	75 99 65	        mov     SBUF,#'e'
  264+ 1  0088	80 06		        sjmp    ??0011
  265+ 1  008A			ta_e1:  putc    #'?'
  266+ 2  008A			??0013:
  267+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6



 Line  I  Addr  Code            Source

  268+ 2			        ;clr     SCON.1
  269+ 2  008A	75 99 3F	        mov     SBUF,#'?'
  270+ 1  008D	75 6E 01	        mov     fail,#001h
  271+ 1  0090			??0011:
  272:
  273:				        put_crlf                    ; end of test series
  274+ 1			        putc    #13
  275+ 2  0090			??0014:
  276+ 2			        ;jnb     SCON.1,putc_loop
  277+ 2			        ;clr     SCON.1
  278+ 2  0090	75 99 0D	        mov     SBUF,#13
  279+ 1			        putc    #10
  280+ 2  0093			??0015:
  281+ 2			        ;jnb     SCON.1,putc_loop
  282+ 2			        ;clr     SCON.1
  283+ 2  0093	75 99 0A	        mov     SBUF,#10
  284:
  285:				        ;-- Test series B ------------------------------------------------------
  286:				        ; Test CJNE plus a few aux opcodes
  287:				        ; a.- <MOV Rn, #imm>
  288:				        ; a.- <MOV a, Rn>
  289:				        ; b.- <JC rel>, <JNC rel>
  290:				        ; c.- <CJNE Rn, #imm, rel>
  291:				        ; d.- <SETB C>, <CLR C>, <CPL C>
  292:				        ; e.- <MOV @Ri, #imm>
  293:				        ; f.- <CJNE @Ri, #imm, rel>
  294:				        ; g.- <CJNE A, dir, rel>
  295:
  296:				        putc    #'B'                ; start of test series
  297+ 1  0096			??0016:
  298+ 1			        ;jnb     SCON.1,putc_loop
  299+ 1			        ;clr     SCON.1
  300+ 1  0096	75 99 42	        mov     SBUF,#'B'
  301:
  302:				tb_ma   macro   reg,val
  303:				        mov     reg,val
  304:				        mov     a,reg
  305:				        cjne    a,val,tb_a1
  306:				        endm
  307:
  308:				        tb_ma   r0,#081h
  309+ 1  0099	78 81		        mov     r0,#081h
  310+ 1  009B	E8		        mov     a,r0
  311+ 1  009C	B4 81 2F	        cjne    a,#081h,tb_a1
  312:				        tb_ma   r1,#043h
  313+ 1  009F	79 43		        mov     r1,#043h
  314+ 1  00A1	E9		        mov     a,r1
  315+ 1  00A2	B4 43 29	        cjne    a,#043h,tb_a1
  316:				        tb_ma   r2,#027h
  317+ 1  00A5	7A 27		        mov     r2,#027h
  318+ 1  00A7	EA		        mov     a,r2
  319+ 1  00A8	B4 27 23	        cjne    a,#027h,tb_a1
  320:				        tb_ma   r3,#0c2h
  321+ 1  00AB	7B C2		        mov     r3,#0c2h
  322+ 1  00AD	EB		        mov     a,r3
  323+ 1  00AE	B4 C2 1D	        cjne    a,#0c2h,tb_a1

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 7



 Line  I  Addr  Code            Source

  324:				        tb_ma   r4,#0f1h
  325+ 1  00B1	7C F1		        mov     r4,#0f1h
  326+ 1  00B3	EC		        mov     a,r4
  327+ 1  00B4	B4 F1 17	        cjne    a,#0f1h,tb_a1
  328:				        tb_ma   r5,#004h
  329+ 1  00B7	7D 04		        mov     r5,#004h
  330+ 1  00B9	ED		        mov     a,r5
  331+ 1  00BA	B4 04 11	        cjne    a,#004h,tb_a1
  332:				        tb_ma   r6,#092h
  333+ 1  00BD	7E 92		        mov     r6,#092h
  334+ 1  00BF	EE		        mov     a,r6
  335+ 1  00C0	B4 92 0B	        cjne    a,#092h,tb_a1
  336:				        tb_ma   r7,#01fh
  337+ 1  00C3	7F 1F		        mov     r7,#01fh
  338+ 1  00C5	EF		        mov     a,r7
  339+ 1  00C6	B4 1F 05	        cjne    a,#01fh,tb_a1
  340:
  341:				        eot     'a',tb_a1
  342+ 1			        putc    #'a'
  343+ 2  00C9			??0018:
  344+ 2			        ;jnb     SCON.1,putc_loop
  345+ 2			        ;clr     SCON.1
  346+ 2  00C9	75 99 61	        mov     SBUF,#'a'
  347+ 1  00CC	80 06		        sjmp    ??0017
  348+ 1  00CE			tb_a1:  putc    #'?'
  349+ 2  00CE			??0019:
  350+ 2			        ;jnb     SCON.1,putc_loop
  351+ 2			        ;clr     SCON.1
  352+ 2  00CE	75 99 3F	        mov     SBUF,#'?'
  353+ 1  00D1	75 6E 01	        mov     fail,#001h
  354+ 1  00D4			??0017:
  355:
  356:	  00D4	75 D0 80	        mov     PSW,#80h            ; <JC rel>, <JNC rel>
  357:	  00D7	40 06		        jc      tb_b0
  358:				        putc    #'?'
  359+ 1  00D9			??0020:
  360+ 1			        ;jnb     SCON.1,putc_loop
  361+ 1			        ;clr     SCON.1
  362+ 1  00D9	75 99 3F	        mov     SBUF,#'?'
  363:	  00DC	75 6E 01	        mov     fail,#001h
  364:	  00DF	50 07		tb_b0:  jnc     tb_b1
  365:	  00E1	75 D0 00	        mov     PSW,#00h
  366:	  00E4	40 02		        jc      tb_b1
  367:	  00E6	50 06		        jnc     tb_b2
  368:	  00E8			tb_b1:  putc    #'?'
  369+ 1  00E8			??0021:
  370+ 1			        ;jnb     SCON.1,putc_loop
  371+ 1			        ;clr     SCON.1
  372+ 1  00E8	75 99 3F	        mov     SBUF,#'?'
  373:	  00EB	75 6E 01	        mov     fail,#001h
  374:	  00EE			tb_b2:  putc    #'b'
  375+ 1  00EE			??0022:
  376+ 1			        ;jnb     SCON.1,putc_loop
  377+ 1			        ;clr     SCON.1
  378+ 1  00EE	75 99 62	        mov     SBUF,#'b'
  379:

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 8



 Line  I  Addr  Code            Source

  380:				tb_mc   macro   reg,val
  381:				        local   tb_mc0
  382:				        local   tb_mc1
  383:				        mov     reg,val+1
  384:				        cjne    reg,val,tb_mc0
  385:				        putc    #'?'
  386:				        mov     fail,#001h
  387:				tb_mc1: mov     reg,val
  388:				tb_mc0: cjne    reg,val,tb_mc1
  389:				        endm
  390:
  391:				        tb_mc   r0,#091h            ; first test the jumps for all Rn regs
  392+ 1  00F1	78 92		        mov     r0,#091h+1
  393+ 1  00F3	B8 91 08	        cjne    r0,#091h,??0023
  394+ 1			        putc    #'?'
  395+ 2  00F6			??0025:
  396+ 2			        ;jnb     SCON.1,putc_loop
  397+ 2			        ;clr     SCON.1
  398+ 2  00F6	75 99 3F	        mov     SBUF,#'?'
  399+ 1  00F9	75 6E 01	        mov     fail,#001h
  400+ 1  00FC	78 91		??0024: mov     r0,#091h
  401+ 1  00FE	B8 91 FB	??0023: cjne    r0,#091h,??0024
  402:				        tb_mc   r1,#0a2h
  403+ 1  0101	79 A3		        mov     r1,#0a2h+1
  404+ 1  0103	B9 A2 08	        cjne    r1,#0a2h,??0026
  405+ 1			        putc    #'?'
  406+ 2  0106			??0028:
  407+ 2			        ;jnb     SCON.1,putc_loop
  408+ 2			        ;clr     SCON.1
  409+ 2  0106	75 99 3F	        mov     SBUF,#'?'
  410+ 1  0109	75 6E 01	        mov     fail,#001h
  411+ 1  010C	79 A2		??0027: mov     r1,#0a2h
  412+ 1  010E	B9 A2 FB	??0026: cjne    r1,#0a2h,??0027
  413:				        tb_mc   r2,#0b3h
  414+ 1  0111	7A B4		        mov     r2,#0b3h+1
  415+ 1  0113	BA B3 08	        cjne    r2,#0b3h,??0029
  416+ 1			        putc    #'?'
  417+ 2  0116			??0031:
  418+ 2			        ;jnb     SCON.1,putc_loop
  419+ 2			        ;clr     SCON.1
  420+ 2  0116	75 99 3F	        mov     SBUF,#'?'
  421+ 1  0119	75 6E 01	        mov     fail,#001h
  422+ 1  011C	7A B3		??0030: mov     r2,#0b3h
  423+ 1  011E	BA B3 FB	??0029: cjne    r2,#0b3h,??0030
  424:				        tb_mc   r3,#0c4h
  425+ 1  0121	7B C5		        mov     r3,#0c4h+1
  426+ 1  0123	BB C4 08	        cjne    r3,#0c4h,??0032
  427+ 1			        putc    #'?'
  428+ 2  0126			??0034:
  429+ 2			        ;jnb     SCON.1,putc_loop
  430+ 2			        ;clr     SCON.1
  431+ 2  0126	75 99 3F	        mov     SBUF,#'?'
  432+ 1  0129	75 6E 01	        mov     fail,#001h
  433+ 1  012C	7B C4		??0033: mov     r3,#0c4h
  434+ 1  012E	BB C4 FB	??0032: cjne    r3,#0c4h,??0033
  435:				        tb_mc   r4,#0d5h

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 9



 Line  I  Addr  Code            Source

  436+ 1  0131	7C D6		        mov     r4,#0d5h+1
  437+ 1  0133	BC D5 08	        cjne    r4,#0d5h,??0035
  438+ 1			        putc    #'?'
  439+ 2  0136			??0037:
  440+ 2			        ;jnb     SCON.1,putc_loop
  441+ 2			        ;clr     SCON.1
  442+ 2  0136	75 99 3F	        mov     SBUF,#'?'
  443+ 1  0139	75 6E 01	        mov     fail,#001h
  444+ 1  013C	7C D5		??0036: mov     r4,#0d5h
  445+ 1  013E	BC D5 FB	??0035: cjne    r4,#0d5h,??0036
  446:				        tb_mc   r5,#0e6h
  447+ 1  0141	7D E7		        mov     r5,#0e6h+1
  448+ 1  0143	BD E6 08	        cjne    r5,#0e6h,??0038
  449+ 1			        putc    #'?'
  450+ 2  0146			??0040:
  451+ 2			        ;jnb     SCON.1,putc_loop
  452+ 2			        ;clr     SCON.1
  453+ 2  0146	75 99 3F	        mov     SBUF,#'?'
  454+ 1  0149	75 6E 01	        mov     fail,#001h
  455+ 1  014C	7D E6		??0039: mov     r5,#0e6h
  456+ 1  014E	BD E6 FB	??0038: cjne    r5,#0e6h,??0039
  457:				        tb_mc   r6,#0f7h
  458+ 1  0151	7E F8		        mov     r6,#0f7h+1
  459+ 1  0153	BE F7 08	        cjne    r6,#0f7h,??0041
  460+ 1			        putc    #'?'
  461+ 2  0156			??0043:
  462+ 2			        ;jnb     SCON.1,putc_loop
  463+ 2			        ;clr     SCON.1
  464+ 2  0156	75 99 3F	        mov     SBUF,#'?'
  465+ 1  0159	75 6E 01	        mov     fail,#001h
  466+ 1  015C	7E F7		??0042: mov     r6,#0f7h
  467+ 1  015E	BE F7 FB	??0041: cjne    r6,#0f7h,??0042
  468:				        tb_mc   r7,#008h
  469+ 1  0161	7F 09		        mov     r7,#008h+1
  470+ 1  0163	BF 08 08	        cjne    r7,#008h,??0044
  471+ 1			        putc    #'?'
  472+ 2  0166			??0046:
  473+ 2			        ;jnb     SCON.1,putc_loop
  474+ 2			        ;clr     SCON.1
  475+ 2  0166	75 99 3F	        mov     SBUF,#'?'
  476+ 1  0169	75 6E 01	        mov     fail,#001h
  477+ 1  016C	7F 08		??0045: mov     r7,#008h
  478+ 1  016E	BF 08 FB	??0044: cjne    r7,#008h,??0045
  479:
  480:	  0171	75 D0 00	tb_c0:  mov     PSW,#00h            ; now test the C flag with a single Rn reg
  481:	  0174	78 34		        mov     r0,#034h
  482:	  0176	B8 35 00	        cjne    r0,#035h,tb_c1
  483:	  0179	50 0F		tb_c1:  jnc     tb_c2
  484:	  017B	B8 34 00	        cjne    r0,#034h,tb_c3
  485:	  017E	40 0A		tb_c3:  jc      tb_c2
  486:	  0180	B8 33 00	        cjne    r0,#033h,tb_c4
  487:	  0183	40 05		tb_c4:  jc      tb_c2
  488:
  489:				        eot     'c',tb_c2
  490+ 1			        putc    #'c'
  491+ 2  0185			??0048:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 10



 Line  I  Addr  Code            Source

  492+ 2			        ;jnb     SCON.1,putc_loop
  493+ 2			        ;clr     SCON.1
  494+ 2  0185	75 99 63	        mov     SBUF,#'c'
  495+ 1  0188	80 06		        sjmp    ??0047
  496+ 1  018A			tb_c2:  putc    #'?'
  497+ 2  018A			??0049:
  498+ 2			        ;jnb     SCON.1,putc_loop
  499+ 2			        ;clr     SCON.1
  500+ 2  018A	75 99 3F	        mov     SBUF,#'?'
  501+ 1  018D	75 6E 01	        mov     fail,#001h
  502+ 1  0190			??0047:
  503:
  504:	  0190	75 D0 80	        mov     PSW,#80h            ; test C set, reset and complement
  505:	  0193	C3		        clr     c
  506:	  0194	40 0B		        jc      tb_d0
  507:	  0196	D3		        setb    c
  508:	  0197	50 08		        jnc     tb_d0
  509:	  0199	B3		        cpl     c
  510:	  019A	40 05		        jc      tb_d0
  511:
  512:				        eot     'd',tb_d0
  513+ 1			        putc    #'d'
  514+ 2  019C			??0051:
  515+ 2			        ;jnb     SCON.1,putc_loop
  516+ 2			        ;clr     SCON.1
  517+ 2  019C	75 99 64	        mov     SBUF,#'d'
  518+ 1  019F	80 06		        sjmp    ??0050
  519+ 1  01A1			tb_d0:  putc    #'?'
  520+ 2  01A1			??0052:
  521+ 2			        ;jnb     SCON.1,putc_loop
  522+ 2			        ;clr     SCON.1
  523+ 2  01A1	75 99 3F	        mov     SBUF,#'?'
  524+ 1  01A4	75 6E 01	        mov     fail,#001h
  525+ 1  01A7			??0050:
  526:
  527:				tb_me   macro   reg
  528:				        mov     reg,#dir0
  529:				        mov     dir0,#12h
  530:				        mov     a,dir0
  531:				        cjne    a,#012h,tb_e0
  532:				        mov     @reg,#0f5h
  533:				        mov     a,dir0
  534:				        cjne    a,#0f5h,tb_e0
  535:				        endm
  536:
  537:				        tb_me   r0                  ; test <mov @ri, #imm> with both regs
  538+ 1  01A7	78 60		        mov     r0,#dir0
  539+ 1  01A9	75 60 12	        mov     dir0,#12h
  540+ 1  01AC	E5 60		        mov     a,dir0
  541+ 1  01AE	B4 12 1D	        cjne    a,#012h,tb_e0
  542+ 1  01B1	76 F5		        mov     @r0,#0f5h
  543+ 1  01B3	E5 60		        mov     a,dir0
  544+ 1  01B5	B4 F5 16	        cjne    a,#0f5h,tb_e0
  545:				        tb_me   r1
  546+ 1  01B8	79 60		        mov     r1,#dir0
  547+ 1  01BA	75 60 12	        mov     dir0,#12h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 11



 Line  I  Addr  Code            Source

  548+ 1  01BD	E5 60		        mov     a,dir0
  549+ 1  01BF	B4 12 0C	        cjne    a,#012h,tb_e0
  550+ 1  01C2	77 F5		        mov     @r1,#0f5h
  551+ 1  01C4	E5 60		        mov     a,dir0
  552+ 1  01C6	B4 F5 05	        cjne    a,#0f5h,tb_e0
  553:
  554:				        eot     'e',tb_e0
  555+ 1			        putc    #'e'
  556+ 2  01C9			??0054:
  557+ 2			        ;jnb     SCON.1,putc_loop
  558+ 2			        ;clr     SCON.1
  559+ 2  01C9	75 99 65	        mov     SBUF,#'e'
  560+ 1  01CC	80 06		        sjmp    ??0053
  561+ 1  01CE			tb_e0:  putc    #'?'
  562+ 2  01CE			??0055:
  563+ 2			        ;jnb     SCON.1,putc_loop
  564+ 2			        ;clr     SCON.1
  565+ 2  01CE	75 99 3F	        mov     SBUF,#'?'
  566+ 1  01D1	75 6E 01	        mov     fail,#001h
  567+ 1  01D4			??0053:
  568:
  569:				tb_mf   macro   reg,val
  570:				        local   tb_mf0
  571:				        local   tb_mf1
  572:				        mov     reg,#30h
  573:				        mov     @reg,val+1
  574:				        cjne    @reg,val,tb_mf0
  575:				        putc    #'?'
  576:				        mov     fail,#001h
  577:				tb_mf1: mov     @reg,val
  578:				tb_mf0: cjne    @reg,val,tb_mf1
  579:				        endm
  580:
  581:				        tb_mf   r0,#12h
  582+ 1  01D4	78 30		        mov     r0,#30h
  583+ 1  01D6	76 13		        mov     @r0,#12h+1
  584+ 1  01D8	B6 12 08	        cjne    @r0,#12h,??0056
  585+ 1			        putc    #'?'
  586+ 2  01DB			??0058:
  587+ 2			        ;jnb     SCON.1,putc_loop
  588+ 2			        ;clr     SCON.1
  589+ 2  01DB	75 99 3F	        mov     SBUF,#'?'
  590+ 1  01DE	75 6E 01	        mov     fail,#001h
  591+ 1  01E1	76 12		??0057: mov     @r0,#12h
  592+ 1  01E3	B6 12 FB	??0056: cjne    @r0,#12h,??0057
  593:				        tb_mf   r1,#34h
  594+ 1  01E6	79 30		        mov     r1,#30h
  595+ 1  01E8	77 35		        mov     @r1,#34h+1
  596+ 1  01EA	B7 34 08	        cjne    @r1,#34h,??0059
  597+ 1			        putc    #'?'
  598+ 2  01ED			??0061:
  599+ 2			        ;jnb     SCON.1,putc_loop
  600+ 2			        ;clr     SCON.1
  601+ 2  01ED	75 99 3F	        mov     SBUF,#'?'
  602+ 1  01F0	75 6E 01	        mov     fail,#001h
  603+ 1  01F3	77 34		??0060: mov     @r1,#34h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 12



 Line  I  Addr  Code            Source

  604+ 1  01F5	B7 34 FB	??0059: cjne    @r1,#34h,??0060
  605:
  606:	  01F8	78 30		tb_f0:  mov     r0,#30h             ; now test the C flag with a single Rn reg
  607:	  01FA	C3		        clr     c
  608:	  01FB	76 34		        mov     @r0,#034h
  609:	  01FD	B6 35 00	        cjne    @r0,#035h,tb_f1
  610:	  0200	50 0F		tb_f1:  jnc     tb_f2
  611:	  0202	B6 34 00	        cjne    @r0,#034h,tb_f3
  612:	  0205	40 0A		tb_f3:  jc      tb_f2
  613:	  0207	B6 33 00	        cjne    @r0,#033h,tb_f4
  614:	  020A	40 05		tb_f4:  jc      tb_f2
  615:
  616:				        eot     'f',tb_f2
  617+ 1			        putc    #'f'
  618+ 2  020C			??0063:
  619+ 2			        ;jnb     SCON.1,putc_loop
  620+ 2			        ;clr     SCON.1
  621+ 2  020C	75 99 66	        mov     SBUF,#'f'
  622+ 1  020F	80 06		        sjmp    ??0062
  623+ 1  0211			tb_f2:  putc    #'?'
  624+ 2  0211			??0064:
  625+ 2			        ;jnb     SCON.1,putc_loop
  626+ 2			        ;clr     SCON.1
  627+ 2  0211	75 99 3F	        mov     SBUF,#'?'
  628+ 1  0214	75 6E 01	        mov     fail,#001h
  629+ 1  0217			??0062:
  630:
  631:	  0217	75 60 C0	        mov     dir0,#0c0h
  632:	  021A	75 31 C1	        mov     031h,#0c1h
  633:	  021D	75 32 C2	        mov     032h,#0c2h
  634:	  0220	C3		        clr     c
  635:	  0221	74 C1		        mov     a,#0c1h
  636:	  0223	B5 31 1D	        cjne    a,031h,tb_g0
  637:	  0226	40 1B		        jc      tb_g0
  638:	  0228	B5 32 06	        cjne    a,032h,tb_g1
  639:				        putc    #'?'
  640+ 1  022B			??0065:
  641+ 1			        ;jnb     SCON.1,putc_loop
  642+ 1			        ;clr     SCON.1
  643+ 1  022B	75 99 3F	        mov     SBUF,#'?'
  644:	  022E	75 6E 01	        mov     fail,#001h
  645:	  0231	50 10		tb_g1:  jnc     tb_g0
  646:	  0233	B5 60 06	        cjne    a,dir0,tb_g2
  647:				        putc    #'$'
  648+ 1  0236			??0066:
  649+ 1			        ;jnb     SCON.1,putc_loop
  650+ 1			        ;clr     SCON.1
  651+ 1  0236	75 99 24	        mov     SBUF,#'$'
  652:	  0239	75 6E 01	        mov     fail,#001h
  653:	  023C	40 05		tb_g2:  jc      tb_g0
  654:
  655:				        eot     'g',tb_g0
  656+ 1			        putc    #'g'
  657+ 2  023E			??0068:
  658+ 2			        ;jnb     SCON.1,putc_loop
  659+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 13



 Line  I  Addr  Code            Source

  660+ 2  023E	75 99 67	        mov     SBUF,#'g'
  661+ 1  0241	80 06		        sjmp    ??0067
  662+ 1  0243			tb_g0:  putc    #'?'
  663+ 2  0243			??0069:
  664+ 2			        ;jnb     SCON.1,putc_loop
  665+ 2			        ;clr     SCON.1
  666+ 2  0243	75 99 3F	        mov     SBUF,#'?'
  667+ 1  0246	75 6E 01	        mov     fail,#001h
  668+ 1  0249			??0067:
  669:
  670:				        put_crlf                    ; end of test series
  671+ 1			        putc    #13
  672+ 2  0249			??0070:
  673+ 2			        ;jnb     SCON.1,putc_loop
  674+ 2			        ;clr     SCON.1
  675+ 2  0249	75 99 0D	        mov     SBUF,#13
  676+ 1			        putc    #10
  677+ 2  024C			??0071:
  678+ 2			        ;jnb     SCON.1,putc_loop
  679+ 2			        ;clr     SCON.1
  680+ 2  024C	75 99 0A	        mov     SBUF,#10
  681:
  682:
  683:				        ;-- Test series C ------------------------------------------------------
  684:				        ; Bit operations and the rest of the conditional rel jumps
  685:				        ; The following tests will use a bit address within the IRAM
  686:				        ; a.- <JB bit, rel>, <JNB bit, rel>
  687:				        ; b.- <MOV A, #imm>
  688:				        ; c.- <JZ rel>, <JNZ rel>
  689:				        ; d.- <CLR bit>, <CPL bit>
  690:				        ; e.- <ANL C, bit>, <ORL C, bit>
  691:				        ; e.- <ANL C, /bit>, <ORL C, /bit>
  692:				        ; f.- <MOV C,bit>, <MOV bit, C>
  693:				        ; g.- <SETB bit>
  694:				        ; h.- <JBC bit>
  695:				        ; The following tests are the same as above except a bit address within
  696:				        ; SFR B is used.
  697:				        ; i.- <JB bit, rel>, <JNB bit, rel>
  698:				        ; j.- <CLR bit>, <CPL bit>
  699:				        ; k.- <ANL C, bit>, <ORL C, bit>
  700:				        ; k.- <ANL C, /bit>, <ORL C, /bit>
  701:				        ; l.- <MOV C,bit>, <MOV bit, C>
  702:				        ; m.- <SETB bit>
  703:				        ; n.- <JBC bit>
  704:
  705:				        putc    #'C'                ; start of test series
  706+ 1  024F			??0072:
  707+ 1			        ;jnb     SCON.1,putc_loop
  708+ 1			        ;clr     SCON.1
  709+ 1  024F	75 99 43	        mov     SBUF,#'C'
  710:
  711:	  0252	75 2F 80	        mov     02fh,#80h           ; We'll be testing bits 2F.7 and 2F.6
  712:	  0255	80 0E		        sjmp    tc_a0
  713:	  0257	30 7F 1C	tc_a1:  jnb     07fh,tc_a3          ; JNB jumps not on bit set
  714:	  025A	30 7E 11	        jnb     07eh,tc_a2          ; JNB jumps on bit clear
  715:				        putc    #'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 14



 Line  I  Addr  Code            Source

  716+ 1  025D			??0073:
  717+ 1			        ;jnb     SCON.1,putc_loop
  718+ 1			        ;clr     SCON.1
  719+ 1  025D	75 99 3F	        mov     SBUF,#'?'
  720:	  0260	75 6E 01	        mov     fail,#001h
  721:	  0263	80 11		        sjmp    tc_a3
  722:	  0265	20 7F EF	tc_a0:  jb      07fh,tc_a1          ; JB jumps on bit set
  723:				        putc    #'!'
  724+ 1  0268			??0074:
  725+ 1			        ;jnb     SCON.1,putc_loop
  726+ 1			        ;clr     SCON.1
  727+ 1  0268	75 99 21	        mov     SBUF,#'!'
  728:	  026B	75 6E 01	        mov     fail,#001h
  729:	  026E	20 7E 05	tc_a2:  jb      07eh,tc_a3          ; JB jumps not on bit clear
  730:
  731:				        eot     'a',tc_a3
  732+ 1			        putc    #'a'
  733+ 2  0271			??0076:
  734+ 2			        ;jnb     SCON.1,putc_loop
  735+ 2			        ;clr     SCON.1
  736+ 2  0271	75 99 61	        mov     SBUF,#'a'
  737+ 1  0274	80 06		        sjmp    ??0075
  738+ 1  0276			tc_a3:  putc    #'?'
  739+ 2  0276			??0077:
  740+ 2			        ;jnb     SCON.1,putc_loop
  741+ 2			        ;clr     SCON.1
  742+ 2  0276	75 99 3F	        mov     SBUF,#'?'
  743+ 1  0279	75 6E 01	        mov     fail,#001h
  744+ 1  027C			??0075:
  745:
  746:	  027C	75 E0 79	        mov     0e0h,#079h          ; init acc (as sfr) with some data
  747:	  027F	B4 79 0A	        cjne    a,#079h,tc_b1
  748:	  0282	74 5A		        mov     a,#05ah             ; now load a with imm data...
  749:	  0284	B4 5A 05	        cjne    a,#05ah,tc_b1       ; ...and make sure a got the data
  750:
  751:				        eot     'b',tc_b1
  752+ 1			        putc    #'b'
  753+ 2  0287			??0079:
  754+ 2			        ;jnb     SCON.1,putc_loop
  755+ 2			        ;clr     SCON.1
  756+ 2  0287	75 99 62	        mov     SBUF,#'b'
  757+ 1  028A	80 06		        sjmp    ??0078
  758+ 1  028C			tc_b1:  putc    #'?'
  759+ 2  028C			??0080:
  760+ 2			        ;jnb     SCON.1,putc_loop
  761+ 2			        ;clr     SCON.1
  762+ 2  028C	75 99 3F	        mov     SBUF,#'?'
  763+ 1  028F	75 6E 01	        mov     fail,#001h
  764+ 1  0292			??0078:
  765:
  766:	  0292	74 80		        mov     a,#80h
  767:	  0294	80 0E		        sjmp    tc_c0
  768:	  0296	60 1B		tc_c1:  jz      tc_c3               ; JZ jumps not on acc!=0
  769:	  0298	74 00		        mov     a,#00h
  770:	  029A	60 10		        jz      tc_c2               ; JZ jumps on acc==0
  771:				        putc    #'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 15



 Line  I  Addr  Code            Source

  772+ 1  029C			??0081:
  773+ 1			        ;jnb     SCON.1,putc_loop
  774+ 1			        ;clr     SCON.1
  775+ 1  029C	75 99 3F	        mov     SBUF,#'?'
  776:	  029F	75 6E 01	        mov     fail,#001h
  777:	  02A2	80 0F		        sjmp    tc_c3
  778:	  02A4	70 F0		tc_c0:  jnz     tc_c1               ; JNZ jumps on acc!=0
  779:				        putc    #'!'
  780+ 1  02A6			??0082:
  781+ 1			        ;jnb     SCON.1,putc_loop
  782+ 1			        ;clr     SCON.1
  783+ 1  02A6	75 99 21	        mov     SBUF,#'!'
  784:	  02A9	75 6E 01	        mov     fail,#001h
  785:	  02AC	70 05		tc_c2:  jnz     tc_c3               ; JNZ jumps not on acc==0
  786:
  787:				        eot     'c',tc_c3
  788+ 1			        putc    #'c'
  789+ 2  02AE			??0084:
  790+ 2			        ;jnb     SCON.1,putc_loop
  791+ 2			        ;clr     SCON.1
  792+ 2  02AE	75 99 63	        mov     SBUF,#'c'
  793+ 1  02B1	80 06		        sjmp    ??0083
  794+ 1  02B3			tc_c3:  putc    #'?'
  795+ 2  02B3			??0085:
  796+ 2			        ;jnb     SCON.1,putc_loop
  797+ 2			        ;clr     SCON.1
  798+ 2  02B3	75 99 3F	        mov     SBUF,#'?'
  799+ 1  02B6	75 6E 01	        mov     fail,#001h
  800+ 1  02B9			??0083:
  801:
  802:
  803:	  02B9	75 2F 80	        mov     02fh,#80h           ; We'll be testing bit 2F.7
  804:	  02BC	20 7F 02	        jb      07fh,tc_d1
  805:	  02BF	80 0F		        sjmp    tc_d0
  806:	  02C1	C2 7F		tc_d1:  clr     07fh
  807:	  02C3	20 7F 0A	        jb      07fh,tc_d0
  808:	  02C6	B2 7F		        cpl     07fh
  809:	  02C8	30 7F 05	        jnb     07fh,tc_d0
  810:
  811:				        eot     'd',tc_d0
  812+ 1			        putc    #'d'
  813+ 2  02CB			??0087:
  814+ 2			        ;jnb     SCON.1,putc_loop
  815+ 2			        ;clr     SCON.1
  816+ 2  02CB	75 99 64	        mov     SBUF,#'d'
  817+ 1  02CE	80 06		        sjmp    ??0086
  818+ 1  02D0			tc_d0:  putc    #'?'
  819+ 2  02D0			??0088:
  820+ 2			        ;jnb     SCON.1,putc_loop
  821+ 2			        ;clr     SCON.1
  822+ 2  02D0	75 99 3F	        mov     SBUF,#'?'
  823+ 1  02D3	75 6E 01	        mov     fail,#001h
  824+ 1  02D6			??0086:
  825:
  826:	  02D6	75 2E 08	        mov     02eh,#08h           ; We'll be testing bits 2E.3 and 2E.2
  827:	  02D9	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 16



 Line  I  Addr  Code            Source

  828:	  02DA	82 73		        anl     c,073h              ; Test ANL in all 4 input combinations
  829:	  02DC	40 1F		        jc      tc_e0
  830:	  02DE	D3		        setb    c
  831:	  02DF	82 73		        anl     c,073h
  832:	  02E1	50 1A		        jnc     tc_e0
  833:	  02E3	B0 72		        anl     c,/072h
  834:	  02E5	50 16		        jnc     tc_e0
  835:				                                    ; CY == 1
  836:	  02E7	72 73		        orl     c,073h              ; ORL-ing with 1 should give 1
  837:	  02E9	50 12		        jnc     tc_e0
  838:	  02EB	72 72		        orl     c,072h
  839:	  02ED	50 0E		        jnc     tc_e0
  840:	  02EF	C3		        clr     c                   ; CY == 0
  841:	  02F0	72 73		        orl     c,073h              ; Now ORL c, 'bit' should give 'bit'
  842:	  02F2	50 09		        jnc     tc_e0
  843:	  02F4	A0 72		        orl     c,/072h
  844:	  02F6	50 05		        jnc     tc_e0
  845:
  846:				        eot     'e',tc_e0
  847+ 1			        putc    #'e'
  848+ 2  02F8			??0090:
  849+ 2			        ;jnb     SCON.1,putc_loop
  850+ 2			        ;clr     SCON.1
  851+ 2  02F8	75 99 65	        mov     SBUF,#'e'
  852+ 1  02FB	80 06		        sjmp    ??0089
  853+ 1  02FD			tc_e0:  putc    #'?'
  854+ 2  02FD			??0091:
  855+ 2			        ;jnb     SCON.1,putc_loop
  856+ 2			        ;clr     SCON.1
  857+ 2  02FD	75 99 3F	        mov     SBUF,#'?'
  858+ 1  0300	75 6E 01	        mov     fail,#001h
  859+ 1  0303			??0089:
  860:
  861:	  0303	75 2E 08	        mov     02eh,#08h           ; We'll be testing bits 2E.3 and 2E.2
  862:	  0306	C3		        clr     c
  863:	  0307	A2 73		        mov     c,073h
  864:	  0309	50 15		        jnc     tc_f0
  865:	  030B	A2 72		        mov     c,072h
  866:	  030D	40 11		        jc      tc_f0
  867:	  030F	C3		        clr     c
  868:	  0310	92 71		        mov     071h,c
  869:	  0312	20 71 0B	        jb      071h,tc_f0
  870:	  0315	D3		        setb    c
  871:	  0316	92 71		        mov     071h,c
  872:	  0318	30 71 05	        jnb     071h,tc_f0
  873:
  874:				        eot     'f',tc_f0
  875+ 1			        putc    #'f'
  876+ 2  031B			??0093:
  877+ 2			        ;jnb     SCON.1,putc_loop
  878+ 2			        ;clr     SCON.1
  879+ 2  031B	75 99 66	        mov     SBUF,#'f'
  880+ 1  031E	80 06		        sjmp    ??0092
  881+ 1  0320			tc_f0:  putc    #'?'
  882+ 2  0320			??0094:
  883+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 17



 Line  I  Addr  Code            Source

  884+ 2			        ;clr     SCON.1
  885+ 2  0320	75 99 3F	        mov     SBUF,#'?'
  886+ 1  0323	75 6E 01	        mov     fail,#001h
  887+ 1  0326			??0092:
  888:
  889:	  0326	75 2E 00	        mov     02eh,#00h           ; We'll be testing bits 2E.3 and 2E.2
  890:	  0329	D2 73		        setb    073h
  891:	  032B	A2 73		        mov     c,073h
  892:	  032D	50 0B		        jnc     tc_g0
  893:	  032F	D2 72		        setb    072h
  894:	  0331	A2 72		        mov     c,072h
  895:	  0333	50 05		        jnc     tc_g0
  896:
  897:				        eot     'g',tc_g0
  898+ 1			        putc    #'g'
  899+ 2  0335			??0096:
  900+ 2			        ;jnb     SCON.1,putc_loop
  901+ 2			        ;clr     SCON.1
  902+ 2  0335	75 99 67	        mov     SBUF,#'g'
  903+ 1  0338	80 06		        sjmp    ??0095
  904+ 1  033A			tc_g0:  putc    #'?'
  905+ 2  033A			??0097:
  906+ 2			        ;jnb     SCON.1,putc_loop
  907+ 2			        ;clr     SCON.1
  908+ 2  033A	75 99 3F	        mov     SBUF,#'?'
  909+ 1  033D	75 6E 01	        mov     fail,#001h
  910+ 1  0340			??0095:
  911:
  912:				        ; (better read the following code in execution order)
  913:	  0340	75 2E 08	        mov     02eh,#08h           ; We'll be testing bits 2E.3 and 2E.2
  914:	  0343	80 09		        sjmp    tc_h1               ; jump forward so we can test jump backwards
  915:	  0345	A2 73		tc_h2:  mov     c,073h              ; make sure the target bit is clear
  916:	  0347	40 0F		        jc      tc_h0
  917:	  0349	10 72 0C	        jbc     072h,tc_h0          ; JBC jumps not when target bit clear
  918:	  034C	80 05		        sjmp    tc_h3
  919:	  034E	10 73 F4	tc_h1:  jbc     073h,tc_h2          ; JBC jumps when target bit set
  920:	  0351	80 05		        sjmp    tc_h0
  921:	  0353			tc_h3:
  922:
  923:				        eot     'h',tc_h0
  924+ 1			        putc    #'h'
  925+ 2  0353			??0099:
  926+ 2			        ;jnb     SCON.1,putc_loop
  927+ 2			        ;clr     SCON.1
  928+ 2  0353	75 99 68	        mov     SBUF,#'h'
  929+ 1  0356	80 06		        sjmp    ??0098
  930+ 1  0358			tc_h0:  putc    #'?'
  931+ 2  0358			??0100:
  932+ 2			        ;jnb     SCON.1,putc_loop
  933+ 2			        ;clr     SCON.1
  934+ 2  0358	75 99 3F	        mov     SBUF,#'?'
  935+ 1  035B	75 6E 01	        mov     fail,#001h
  936+ 1  035E			??0098:
  937:
  938:	  035E	75 2F 00	        mov     02fh,#00h
  939:	  0361	75 F0 80	        mov     B,#80h              ; We'll be testing bits B.7 and B.6

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 18



 Line  I  Addr  Code            Source

  940:	  0364	80 0E		        sjmp    tc_i0
  941:	  0366	30 F7 1C	tc_i1:  jnb     B.7,tc_i3           ; JNB jumps not on bit set
  942:	  0369	30 F6 11	        jnb     B.6,tc_i2           ; JNB jumps on bit clear
  943:				        putc    #'?'
  944+ 1  036C			??0101:
  945+ 1			        ;jnb     SCON.1,putc_loop
  946+ 1			        ;clr     SCON.1
  947+ 1  036C	75 99 3F	        mov     SBUF,#'?'
  948:	  036F	75 6E 01	        mov     fail,#001h
  949:	  0372	80 11		        sjmp    tc_i3
  950:	  0374	20 F7 EF	tc_i0:  jb      B.7,tc_i1           ; JB jumps on bit set
  951:				        putc    #'!'
  952+ 1  0377			??0102:
  953+ 1			        ;jnb     SCON.1,putc_loop
  954+ 1			        ;clr     SCON.1
  955+ 1  0377	75 99 21	        mov     SBUF,#'!'
  956:	  037A	75 6E 01	        mov     fail,#001h
  957:	  037D	20 F6 05	tc_i2:  jb      B.6,tc_i3           ; JB jumps not on bit clear
  958:
  959:				        eot     'i',tc_i3
  960+ 1			        putc    #'i'
  961+ 2  0380			??0104:
  962+ 2			        ;jnb     SCON.1,putc_loop
  963+ 2			        ;clr     SCON.1
  964+ 2  0380	75 99 69	        mov     SBUF,#'i'
  965+ 1  0383	80 06		        sjmp    ??0103
  966+ 1  0385			tc_i3:  putc    #'?'
  967+ 2  0385			??0105:
  968+ 2			        ;jnb     SCON.1,putc_loop
  969+ 2			        ;clr     SCON.1
  970+ 2  0385	75 99 3F	        mov     SBUF,#'?'
  971+ 1  0388	75 6E 01	        mov     fail,#001h
  972+ 1  038B			??0103:
  973:
  974:	  038B	75 F0 80	        mov     B,#80h              ; We'll be testing bit B.7
  975:	  038E	20 F7 02	        jb      B.7,tc_j1
  976:	  0391	80 0F		        sjmp    tc_j0
  977:	  0393	C2 F7		tc_j1:  clr     B.7
  978:	  0395	20 F7 0A	        jb      B.7,tc_j0
  979:	  0398	B2 F7		        cpl     B.7
  980:	  039A	30 F7 05	        jnb     B.7,tc_j0
  981:
  982:				        eot     'j',tc_j0
  983+ 1			        putc    #'j'
  984+ 2  039D			??0107:
  985+ 2			        ;jnb     SCON.1,putc_loop
  986+ 2			        ;clr     SCON.1
  987+ 2  039D	75 99 6A	        mov     SBUF,#'j'
  988+ 1  03A0	80 06		        sjmp    ??0106
  989+ 1  03A2			tc_j0:  putc    #'?'
  990+ 2  03A2			??0108:
  991+ 2			        ;jnb     SCON.1,putc_loop
  992+ 2			        ;clr     SCON.1
  993+ 2  03A2	75 99 3F	        mov     SBUF,#'?'
  994+ 1  03A5	75 6E 01	        mov     fail,#001h
  995+ 1  03A8			??0106:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 19



 Line  I  Addr  Code            Source

  996:
  997:	  03A8	75 F0 08	        mov     B,#08h              ; We'll be testing bits B.3 and B.2
  998:	  03AB	C3		        clr     c
  999:	  03AC	82 F3		        anl     c,B.3               ; Test ANL in all 4 input combinations
 1000:	  03AE	40 1F		        jc      tc_k0
 1001:	  03B0	D3		        setb    c
 1002:	  03B1	82 F3		        anl     c,B.3
 1003:	  03B3	50 1A		        jnc     tc_k0
 1004:	  03B5	B0 F2		        anl     c,/B.2
 1005:	  03B7	50 16		        jnc     tc_k0
 1006:				                                    ; CY == 1
 1007:	  03B9	72 F3		        orl     c,B.3               ; ORL-ing with 1 should give 1
 1008:	  03BB	50 12		        jnc     tc_k0
 1009:	  03BD	72 F2		        orl     c,B.2
 1010:	  03BF	50 0E		        jnc     tc_k0
 1011:	  03C1	C3		        clr     c                   ; CY == 0
 1012:	  03C2	72 F3		        orl     c,B.3               ; Now ORL c, 'bit' should give 'bit'
 1013:	  03C4	50 09		        jnc     tc_k0
 1014:	  03C6	A0 F2		        orl     c,/B.2
 1015:	  03C8	50 05		        jnc     tc_k0
 1016:
 1017:				        eot     'k',tc_k0
 1018+ 1			        putc    #'k'
 1019+ 2  03CA			??0110:
 1020+ 2			        ;jnb     SCON.1,putc_loop
 1021+ 2			        ;clr     SCON.1
 1022+ 2  03CA	75 99 6B	        mov     SBUF,#'k'
 1023+ 1  03CD	80 06		        sjmp    ??0109
 1024+ 1  03CF			tc_k0:  putc    #'?'
 1025+ 2  03CF			??0111:
 1026+ 2			        ;jnb     SCON.1,putc_loop
 1027+ 2			        ;clr     SCON.1
 1028+ 2  03CF	75 99 3F	        mov     SBUF,#'?'
 1029+ 1  03D2	75 6E 01	        mov     fail,#001h
 1030+ 1  03D5			??0109:
 1031:
 1032:	  03D5	75 F0 08	        mov     B,#08h              ; We'll be testing bits B.3, B.2 and B.1
 1033:	  03D8	C3		        clr     c
 1034:	  03D9	A2 F3		        mov     c,B.3
 1035:	  03DB	50 15		        jnc     tc_L0
 1036:	  03DD	A2 F2		        mov     c,B.2
 1037:	  03DF	40 11		        jc      tc_L0
 1038:	  03E1	C3		        clr     c
 1039:	  03E2	92 F1		        mov     B.1,c
 1040:	  03E4	20 F1 0B	        jb      B.1,tc_L0
 1041:	  03E7	D3		        setb    c
 1042:	  03E8	92 F1		        mov     B.1,c
 1043:	  03EA	30 F1 05	        jnb     B.1,tc_L0
 1044:
 1045:				        eot     'l',tc_L0
 1046+ 1			        putc    #'l'
 1047+ 2  03ED			??0113:
 1048+ 2			        ;jnb     SCON.1,putc_loop
 1049+ 2			        ;clr     SCON.1
 1050+ 2  03ED	75 99 6C	        mov     SBUF,#'l'
 1051+ 1  03F0	80 06		        sjmp    ??0112

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 20



 Line  I  Addr  Code            Source

 1052+ 1  03F2			tc_L0:  putc    #'?'
 1053+ 2  03F2			??0114:
 1054+ 2			        ;jnb     SCON.1,putc_loop
 1055+ 2			        ;clr     SCON.1
 1056+ 2  03F2	75 99 3F	        mov     SBUF,#'?'
 1057+ 1  03F5	75 6E 01	        mov     fail,#001h
 1058+ 1  03F8			??0112:
 1059:
 1060:	  03F8	75 2E 00	        mov     02eh,#00h           ; We'll be testing bits B.3 and B.2
 1061:	  03FB	D2 F3		        setb    B.3
 1062:	  03FD	A2 F3		        mov     c,B.3
 1063:	  03FF	50 0B		        jnc     tc_m0
 1064:	  0401	D2 F2		        setb    B.2
 1065:	  0403	A2 F2		        mov     c,B.2
 1066:	  0405	50 05		        jnc     tc_m0
 1067:
 1068:				        eot     'm',tc_m0
 1069+ 1			        putc    #'m'
 1070+ 2  0407			??0116:
 1071+ 2			        ;jnb     SCON.1,putc_loop
 1072+ 2			        ;clr     SCON.1
 1073+ 2  0407	75 99 6D	        mov     SBUF,#'m'
 1074+ 1  040A	80 06		        sjmp    ??0115
 1075+ 1  040C			tc_m0:  putc    #'?'
 1076+ 2  040C			??0117:
 1077+ 2			        ;jnb     SCON.1,putc_loop
 1078+ 2			        ;clr     SCON.1
 1079+ 2  040C	75 99 3F	        mov     SBUF,#'?'
 1080+ 1  040F	75 6E 01	        mov     fail,#001h
 1081+ 1  0412			??0115:
 1082:
 1083:				        ; (better read the following code in execution order)
 1084:	  0412	75 F0 08	        mov     B,#08h              ; We'll be testing bits B.3 and B.2
 1085:	  0415	80 09		        sjmp    tc_n1               ; jump forward so we can test jump backwards
 1086:	  0417	A2 F3		tc_n2:  mov     c,B.3               ; make sure the target bit is clear
 1087:	  0419	40 0F		        jc      tc_n0
 1088:	  041B	10 F2 0C	        jbc     B.2,tc_n0           ; JBC jumps not when target bit clear
 1089:	  041E	80 05		        sjmp    tc_n3
 1090:	  0420	10 F3 F4	tc_n1:  jbc     B.3,tc_n2           ; JBC jumps when target bit set
 1091:	  0423	80 05		        sjmp    tc_n0
 1092:	  0425			tc_n3:
 1093:
 1094:				        eot     'n',tc_n0
 1095+ 1			        putc    #'n'
 1096+ 2  0425			??0119:
 1097+ 2			        ;jnb     SCON.1,putc_loop
 1098+ 2			        ;clr     SCON.1
 1099+ 2  0425	75 99 6E	        mov     SBUF,#'n'
 1100+ 1  0428	80 06		        sjmp    ??0118
 1101+ 1  042A			tc_n0:  putc    #'?'
 1102+ 2  042A			??0120:
 1103+ 2			        ;jnb     SCON.1,putc_loop
 1104+ 2			        ;clr     SCON.1
 1105+ 2  042A	75 99 3F	        mov     SBUF,#'?'
 1106+ 1  042D	75 6E 01	        mov     fail,#001h
 1107+ 1  0430			??0118:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 21



 Line  I  Addr  Code            Source

 1108:
 1109:
 1110:
 1111:				        put_crlf                    ; end of test series
 1112+ 1			        putc    #13
 1113+ 2  0430			??0121:
 1114+ 2			        ;jnb     SCON.1,putc_loop
 1115+ 2			        ;clr     SCON.1
 1116+ 2  0430	75 99 0D	        mov     SBUF,#13
 1117+ 1			        putc    #10
 1118+ 2  0433			??0122:
 1119+ 2			        ;jnb     SCON.1,putc_loop
 1120+ 2			        ;clr     SCON.1
 1121+ 2  0433	75 99 0A	        mov     SBUF,#10
 1122:
 1123:				        ;-- Test series D ------------------------------------------------------
 1124:				        ;
 1125:				        ; a.- <XRL A, #imm>
 1126:				        ; b.- <RLC A>
 1127:				        ; c.- <RRC A>
 1128:				        ; d.- <RL A>, <RR A>
 1129:				        ;
 1130:				        ; This test executes a few NOPs too but does NOT check for unintended
 1131:				        ; side effects; we intersperse the nops between the other tests to at
 1132:				        ; least have a chance to catch buggy behavior but that's all.
 1133:
 1134:
 1135:				        putc    #'D'                ; start of test series
 1136+ 1  0436			??0123:
 1137+ 1			        ;jnb     SCON.1,putc_loop
 1138+ 1			        ;clr     SCON.1
 1139+ 1  0436	75 99 44	        mov     SBUF,#'D'
 1140:
 1141:	  0439	74 85		        mov     a,#085h             ; test XRL A,#imm before using it in
 1142:	  043B	64 44		        xrl     a,#044h             ; subsequent tests
 1143:	  043D	60 09		        jz      td_a0
 1144:	  043F	64 C1		        xrl     a,#0c1h
 1145:	  0441	70 05		        jnz     td_a0
 1146:
 1147:				        eot     'a',td_a0
 1148+ 1			        putc    #'a'
 1149+ 2  0443			??0125:
 1150+ 2			        ;jnb     SCON.1,putc_loop
 1151+ 2			        ;clr     SCON.1
 1152+ 2  0443	75 99 61	        mov     SBUF,#'a'
 1153+ 1  0446	80 06		        sjmp    ??0124
 1154+ 1  0448			td_a0:  putc    #'?'
 1155+ 2  0448			??0126:
 1156+ 2			        ;jnb     SCON.1,putc_loop
 1157+ 2			        ;clr     SCON.1
 1158+ 2  0448	75 99 3F	        mov     SBUF,#'?'
 1159+ 1  044B	75 6E 01	        mov     fail,#001h
 1160+ 1  044E			??0124:
 1161:
 1162:	  044E	74 85		        mov     a,#085h             ; Test RLC effects on ACC, ignore CY for now
 1163:	  0450	00		        nop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 22



 Line  I  Addr  Code            Source

 1164:	  0451	C3		        clr     c
 1165:	  0452	33		        rlc     a                   ; a = (a << 1) | 0
 1166:	  0453	F5 60		        mov     dir0,a
 1167:	  0455	64 0A		        xrl     a,#00ah             ; We can't use CJNE because it modifies CY
 1168:	  0457	70 16		        jnz     td_b0               ; check shifted acc
 1169:	  0459	E5 60		        mov     a,dir0
 1170:	  045B	33		        rlc     a                   ; rotate again...
 1171:	  045C	64 15		        xrl     a,#015h             ; ...and check shifted acc with CY at bit 0
 1172:	  045E	70 0F		        jnz     td_b0
 1173:
 1174:	  0460	74 85		        mov     a,#085h             ; Now check RLC effects on CY
 1175:	  0462	00		        nop
 1176:	  0463	C3		        clr     c
 1177:	  0464	33		        rlc     a
 1178:	  0465	50 08		        jnc     td_b0
 1179:	  0467	33		        rlc     a
 1180:	  0468	40 05		        jc      td_b0               ; CY==1 moved into ACC.0
 1181:
 1182:				        eot     'b',td_b0
 1183+ 1			        putc    #'b'
 1184+ 2  046A			??0128:
 1185+ 2			        ;jnb     SCON.1,putc_loop
 1186+ 2			        ;clr     SCON.1
 1187+ 2  046A	75 99 62	        mov     SBUF,#'b'
 1188+ 1  046D	80 06		        sjmp    ??0127
 1189+ 1  046F			td_b0:  putc    #'?'
 1190+ 2  046F			??0129:
 1191+ 2			        ;jnb     SCON.1,putc_loop
 1192+ 2			        ;clr     SCON.1
 1193+ 2  046F	75 99 3F	        mov     SBUF,#'?'
 1194+ 1  0472	75 6E 01	        mov     fail,#001h
 1195+ 1  0475			??0127:
 1196:
 1197:	  0475	74 85		        mov     a,#085h             ; Test RRC effects on ACC, ignore CY for now
 1198:	  0477	C3		        clr     c
 1199:	  0478	13		        rrc     a                   ; will set CY
 1200:	  0479	F5 60		        mov     dir0,a
 1201:	  047B	00		        nop
 1202:	  047C	64 42		        xrl     a,#042h             ; We can't use CJNE because it modifies CY
 1203:	  047E	70 15		        jnz     td_c0               ; check shifted acc
 1204:	  0480	E5 60		        mov     a,dir0
 1205:	  0482	13		        rrc     a                   ; rotate again...
 1206:	  0483	64 A1		        xrl     a,#0a1h             ; ...and check shifted acc with CY at bit 7
 1207:	  0485	70 0E		        jnz     td_c0
 1208:
 1209:	  0487	74 85		        mov     a,#085h             ; Now check RRC effects on CY
 1210:	  0489	C3		        clr     c
 1211:	  048A	13		        rrc     a
 1212:	  048B	50 08		        jnc     td_c0
 1213:	  048D	13		        rrc     a
 1214:	  048E	40 05		        jc      td_c0               ; CY==1 moved into ACC.0
 1215:
 1216:				        eot     'c',td_c0
 1217+ 1			        putc    #'c'
 1218+ 2  0490			??0131:
 1219+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 23



 Line  I  Addr  Code            Source

 1220+ 2			        ;clr     SCON.1
 1221+ 2  0490	75 99 63	        mov     SBUF,#'c'
 1222+ 1  0493	80 06		        sjmp    ??0130
 1223+ 1  0495			td_c0:  putc    #'?'
 1224+ 2  0495			??0132:
 1225+ 2			        ;jnb     SCON.1,putc_loop
 1226+ 2			        ;clr     SCON.1
 1227+ 2  0495	75 99 3F	        mov     SBUF,#'?'
 1228+ 1  0498	75 6E 01	        mov     fail,#001h
 1229+ 1  049B			??0130:
 1230:
 1231:	  049B	74 85		        mov     a,#085h             ; Test RL effects on ACC, ignore CY for now
 1232:	  049D	C3		        clr     c
 1233:	  049E	23		        rl      a                   ; a = (a << 1) | 0
 1234:	  049F	F5 60		        mov     dir0,a
 1235:	  04A1	64 0B		        xrl     a,#00bh             ; We can't use CJNE because it modifies CY
 1236:	  04A3	70 28		        jnz     td_d0               ; check shifted acc
 1237:	  04A5	E5 60		        mov     a,dir0
 1238:	  04A7	D3		        setb    c
 1239:	  04A8	23		        rl      a                   ; rotate again...
 1240:	  04A9	64 16		        xrl     a,#016h             ; ...and check shifted acc with CY at bit 0
 1241:	  04AB	70 20		        jnz     td_d0
 1242:
 1243:	  04AD	74 85		        mov     a,#085h             ; Test RR effects on ACC, ignore CY for now
 1244:	  04AF	C3		        clr     c
 1245:	  04B0	03		        rr      a                   ; will set CY
 1246:	  04B1	F5 60		        mov     dir0,a
 1247:	  04B3	64 C2		        xrl     a,#0c2h             ; We can't use CJNE because it modifies CY
 1248:	  04B5	70 16		        jnz     td_d0               ; check shifted acc
 1249:	  04B7	E5 60		        mov     a,dir0
 1250:	  04B9	03		        rr      a                   ; rotate again...
 1251:	  04BA	64 61		        xrl     a,#061h             ; ...and check shifted acc with CY at bit 7
 1252:	  04BC	70 0F		        jnz     td_d0
 1253:
 1254:	  04BE	74 FF		        mov     a,#0ffh             ; Now make sure RL and RR don't touch CY
 1255:	  04C0	C3		        clr     c
 1256:	  04C1	23		        rl      a
 1257:	  04C2	40 09		        jc      td_d0
 1258:	  04C4	03		        rr      a
 1259:	  04C5	03		        rr      a
 1260:	  04C6	40 05		        jc      td_d0
 1261:
 1262:				        eot     'd',td_d0
 1263+ 1			        putc    #'d'
 1264+ 2  04C8			??0134:
 1265+ 2			        ;jnb     SCON.1,putc_loop
 1266+ 2			        ;clr     SCON.1
 1267+ 2  04C8	75 99 64	        mov     SBUF,#'d'
 1268+ 1  04CB	80 06		        sjmp    ??0133
 1269+ 1  04CD			td_d0:  putc    #'?'
 1270+ 2  04CD			??0135:
 1271+ 2			        ;jnb     SCON.1,putc_loop
 1272+ 2			        ;clr     SCON.1
 1273+ 2  04CD	75 99 3F	        mov     SBUF,#'?'
 1274+ 1  04D0	75 6E 01	        mov     fail,#001h
 1275+ 1  04D3			??0133:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 24



 Line  I  Addr  Code            Source

 1276:
 1277:				        put_crlf                    ; end of test series
 1278+ 1			        putc    #13
 1279+ 2  04D3			??0136:
 1280+ 2			        ;jnb     SCON.1,putc_loop
 1281+ 2			        ;clr     SCON.1
 1282+ 2  04D3	75 99 0D	        mov     SBUF,#13
 1283+ 1			        putc    #10
 1284+ 2  04D6			??0137:
 1285+ 2			        ;jnb     SCON.1,putc_loop
 1286+ 2			        ;clr     SCON.1
 1287+ 2  04D6	75 99 0A	        mov     SBUF,#10
 1288:
 1289:				        ;-- Test series E ------------------------------------------------------
 1290:				        ; Increment
 1291:				        ; a.- <INC A>
 1292:				        ; b.- <INC Rn>
 1293:				        ; c.- <INC @Ri>
 1294:				        ; d.- <MOV dir,#imm>
 1295:				        ; e.- <INC dir>
 1296:				        ; f.- <DEC A>
 1297:				        ; g.- <DEC Rn>
 1298:				        ; h.- <DEC @Ri>
 1299:				        ; i.- <DEC dir>
 1300:
 1301:				        putc    #'E'                ; start of test series
 1302+ 1  04D9			??0138:
 1303+ 1			        ;jnb     SCON.1,putc_loop
 1304+ 1			        ;clr     SCON.1
 1305+ 1  04D9	75 99 45	        mov     SBUF,#'E'
 1306:
 1307:				te_ma   macro   target, error_loc
 1308:				        mov     target,#080h
 1309:				        inc     target
 1310:				        cjne    target,#081h,error_loc
 1311:				        mov     target,#0ffh
 1312:				        clr     c
 1313:				        inc     target
 1314:				        jc      error_loc
 1315:				        cjne    target,#000h,error_loc
 1316:				        endm
 1317:
 1318:				        te_ma   a,te_a0             ; Test <INC A>
 1319+ 1  04DC	74 80		        mov     a,#080h
 1320+ 1  04DE	04		        inc     a
 1321+ 1  04DF	B4 81 0E	        cjne    a,#081h,te_a0
 1322+ 1  04E2	74 FF		        mov     a,#0ffh
 1323+ 1  04E4	C3		        clr     c
 1324+ 1  04E5	04		        inc     a
 1325+ 1  04E6	40 08		        jc      te_a0
 1326+ 1  04E8	B4 00 05	        cjne    a,#000h,te_a0
 1327:
 1328:				        eot     'a',te_a0
 1329+ 1			        putc    #'a'
 1330+ 2  04EB			??0140:
 1331+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 25



 Line  I  Addr  Code            Source

 1332+ 2			        ;clr     SCON.1
 1333+ 2  04EB	75 99 61	        mov     SBUF,#'a'
 1334+ 1  04EE	80 06		        sjmp    ??0139
 1335+ 1  04F0			te_a0:  putc    #'?'
 1336+ 2  04F0			??0141:
 1337+ 2			        ;jnb     SCON.1,putc_loop
 1338+ 2			        ;clr     SCON.1
 1339+ 2  04F0	75 99 3F	        mov     SBUF,#'?'
 1340+ 1  04F3	75 6E 01	        mov     fail,#001h
 1341+ 1  04F6			??0139:
 1342:
 1343:	  04F6	78 66		        mov     r0,#066h
 1344:
 1345:				        te_ma   r0,te_b0
 1346+ 1  04F8	78 80		        mov     r0,#080h
 1347+ 1  04FA	08		        inc     r0
 1348+ 1  04FB	B8 81 77	        cjne    r0,#081h,te_b0
 1349+ 1  04FE	78 FF		        mov     r0,#0ffh
 1350+ 1  0500	C3		        clr     c
 1351+ 1  0501	08		        inc     r0
 1352+ 1  0502	40 71		        jc      te_b0
 1353+ 1  0504	B8 00 6E	        cjne    r0,#000h,te_b0
 1354:				        te_ma   r1,te_b0
 1355+ 1  0507	79 80		        mov     r1,#080h
 1356+ 1  0509	09		        inc     r1
 1357+ 1  050A	B9 81 68	        cjne    r1,#081h,te_b0
 1358+ 1  050D	79 FF		        mov     r1,#0ffh
 1359+ 1  050F	C3		        clr     c
 1360+ 1  0510	09		        inc     r1
 1361+ 1  0511	40 62		        jc      te_b0
 1362+ 1  0513	B9 00 5F	        cjne    r1,#000h,te_b0
 1363:				        te_ma   r2,te_b0
 1364+ 1  0516	7A 80		        mov     r2,#080h
 1365+ 1  0518	0A		        inc     r2
 1366+ 1  0519	BA 81 59	        cjne    r2,#081h,te_b0
 1367+ 1  051C	7A FF		        mov     r2,#0ffh
 1368+ 1  051E	C3		        clr     c
 1369+ 1  051F	0A		        inc     r2
 1370+ 1  0520	40 53		        jc      te_b0
 1371+ 1  0522	BA 00 50	        cjne    r2,#000h,te_b0
 1372:				        te_ma   r3,te_b0
 1373+ 1  0525	7B 80		        mov     r3,#080h
 1374+ 1  0527	0B		        inc     r3
 1375+ 1  0528	BB 81 4A	        cjne    r3,#081h,te_b0
 1376+ 1  052B	7B FF		        mov     r3,#0ffh
 1377+ 1  052D	C3		        clr     c
 1378+ 1  052E	0B		        inc     r3
 1379+ 1  052F	40 44		        jc      te_b0
 1380+ 1  0531	BB 00 41	        cjne    r3,#000h,te_b0
 1381:				        te_ma   r4,te_b0
 1382+ 1  0534	7C 80		        mov     r4,#080h
 1383+ 1  0536	0C		        inc     r4
 1384+ 1  0537	BC 81 3B	        cjne    r4,#081h,te_b0
 1385+ 1  053A	7C FF		        mov     r4,#0ffh
 1386+ 1  053C	C3		        clr     c
 1387+ 1  053D	0C		        inc     r4

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 26



 Line  I  Addr  Code            Source

 1388+ 1  053E	40 35		        jc      te_b0
 1389+ 1  0540	BC 00 32	        cjne    r4,#000h,te_b0
 1390:				        te_ma   r5,te_b0
 1391+ 1  0543	7D 80		        mov     r5,#080h
 1392+ 1  0545	0D		        inc     r5
 1393+ 1  0546	BD 81 2C	        cjne    r5,#081h,te_b0
 1394+ 1  0549	7D FF		        mov     r5,#0ffh
 1395+ 1  054B	C3		        clr     c
 1396+ 1  054C	0D		        inc     r5
 1397+ 1  054D	40 26		        jc      te_b0
 1398+ 1  054F	BD 00 23	        cjne    r5,#000h,te_b0
 1399:				        te_ma   r6,te_b0
 1400+ 1  0552	7E 80		        mov     r6,#080h
 1401+ 1  0554	0E		        inc     r6
 1402+ 1  0555	BE 81 1D	        cjne    r6,#081h,te_b0
 1403+ 1  0558	7E FF		        mov     r6,#0ffh
 1404+ 1  055A	C3		        clr     c
 1405+ 1  055B	0E		        inc     r6
 1406+ 1  055C	40 17		        jc      te_b0
 1407+ 1  055E	BE 00 14	        cjne    r6,#000h,te_b0
 1408:				        te_ma   r7,te_b0
 1409+ 1  0561	7F 80		        mov     r7,#080h
 1410+ 1  0563	0F		        inc     r7
 1411+ 1  0564	BF 81 0E	        cjne    r7,#081h,te_b0
 1412+ 1  0567	7F FF		        mov     r7,#0ffh
 1413+ 1  0569	C3		        clr     c
 1414+ 1  056A	0F		        inc     r7
 1415+ 1  056B	40 08		        jc      te_b0
 1416+ 1  056D	BF 00 05	        cjne    r7,#000h,te_b0
 1417:
 1418:				        eot     'b',te_b0
 1419+ 1			        putc    #'b'
 1420+ 2  0570			??0143:
 1421+ 2			        ;jnb     SCON.1,putc_loop
 1422+ 2			        ;clr     SCON.1
 1423+ 2  0570	75 99 62	        mov     SBUF,#'b'
 1424+ 1  0573	80 06		        sjmp    ??0142
 1425+ 1  0575			te_b0:  putc    #'?'
 1426+ 2  0575			??0144:
 1427+ 2			        ;jnb     SCON.1,putc_loop
 1428+ 2			        ;clr     SCON.1
 1429+ 2  0575	75 99 3F	        mov     SBUF,#'?'
 1430+ 1  0578	75 6E 01	        mov     fail,#001h
 1431+ 1  057B			??0142:
 1432:
 1433:	  057B	78 60		        mov     r0,#dir0
 1434:	  057D	79 31		        mov     r1,#031h
 1435:
 1436:				        te_ma   @r0,te_c0
 1437+ 1  057F	76 80		        mov     @r0,#080h
 1438+ 1  0581	06		        inc     @r0
 1439+ 1  0582	B6 81 1D	        cjne    @r0,#081h,te_c0
 1440+ 1  0585	76 FF		        mov     @r0,#0ffh
 1441+ 1  0587	C3		        clr     c
 1442+ 1  0588	06		        inc     @r0
 1443+ 1  0589	40 17		        jc      te_c0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 27



 Line  I  Addr  Code            Source

 1444+ 1  058B	B6 00 14	        cjne    @r0,#000h,te_c0
 1445:				        te_ma   @r1,te_c0
 1446+ 1  058E	77 80		        mov     @r1,#080h
 1447+ 1  0590	07		        inc     @r1
 1448+ 1  0591	B7 81 0E	        cjne    @r1,#081h,te_c0
 1449+ 1  0594	77 FF		        mov     @r1,#0ffh
 1450+ 1  0596	C3		        clr     c
 1451+ 1  0597	07		        inc     @r1
 1452+ 1  0598	40 08		        jc      te_c0
 1453+ 1  059A	B7 00 05	        cjne    @r1,#000h,te_c0
 1454:
 1455:				        eot     'c',te_c0
 1456+ 1			        putc    #'c'
 1457+ 2  059D			??0146:
 1458+ 2			        ;jnb     SCON.1,putc_loop
 1459+ 2			        ;clr     SCON.1
 1460+ 2  059D	75 99 63	        mov     SBUF,#'c'
 1461+ 1  05A0	80 06		        sjmp    ??0145
 1462+ 1  05A2			te_c0:  putc    #'?'
 1463+ 2  05A2			??0147:
 1464+ 2			        ;jnb     SCON.1,putc_loop
 1465+ 2			        ;clr     SCON.1
 1466+ 2  05A2	75 99 3F	        mov     SBUF,#'?'
 1467+ 1  05A5	75 6E 01	        mov     fail,#001h
 1468+ 1  05A8			??0145:
 1469:
 1470:	  05A8	75 60 34	        mov     dir0,#034h          ; Test <MOV dir,#imm> before using it in
 1471:	  05AB	E5 60		        mov     a,dir0              ; subsequent tests
 1472:	  05AD	B4 34 05	        cjne    a,#034h,te_d0
 1473:
 1474:				        eot     'd',te_d0
 1475+ 1			        putc    #'d'
 1476+ 2  05B0			??0149:
 1477+ 2			        ;jnb     SCON.1,putc_loop
 1478+ 2			        ;clr     SCON.1
 1479+ 2  05B0	75 99 64	        mov     SBUF,#'d'
 1480+ 1  05B3	80 06		        sjmp    ??0148
 1481+ 1  05B5			te_d0:  putc    #'?'
 1482+ 2  05B5			??0150:
 1483+ 2			        ;jnb     SCON.1,putc_loop
 1484+ 2			        ;clr     SCON.1
 1485+ 2  05B5	75 99 3F	        mov     SBUF,#'?'
 1486+ 1  05B8	75 6E 01	        mov     fail,#001h
 1487+ 1  05BB			??0148:
 1488:
 1489:	  05BB	75 39 80	        mov     039h,#080h
 1490:	  05BE	05 39		        inc     039h
 1491:	  05C0	E5 39		        mov     a,039h
 1492:	  05C2	B4 81 12	        cjne    a,#081h,te_e0
 1493:	  05C5	75 39 FF	        mov     039h,#0ffh
 1494:	  05C8	C3		        clr     c
 1495:	  05C9	05 39		        inc     039h
 1496:	  05CB	40 0A		        jc      te_e0
 1497:	  05CD	E5 39		        mov     a,039h
 1498:	  05CF	B4 00 05	        cjne    a,#000h,te_e0
 1499:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 28



 Line  I  Addr  Code            Source

 1500:				        eot     'e',te_e0
 1501+ 1			        putc    #'e'
 1502+ 2  05D2			??0152:
 1503+ 2			        ;jnb     SCON.1,putc_loop
 1504+ 2			        ;clr     SCON.1
 1505+ 2  05D2	75 99 65	        mov     SBUF,#'e'
 1506+ 1  05D5	80 06		        sjmp    ??0151
 1507+ 1  05D7			te_e0:  putc    #'?'
 1508+ 2  05D7			??0153:
 1509+ 2			        ;jnb     SCON.1,putc_loop
 1510+ 2			        ;clr     SCON.1
 1511+ 2  05D7	75 99 3F	        mov     SBUF,#'?'
 1512+ 1  05DA	75 6E 01	        mov     fail,#001h
 1513+ 1  05DD			??0151:
 1514:
 1515:				te_mf   macro   target, error_loc
 1516:				        mov     target,#001h
 1517:				        dec     target
 1518:				        cjne    target,#000h,error_loc
 1519:				        clr     c
 1520:				        dec     target
 1521:				        jc      error_loc
 1522:				        cjne    target,#0ffh,error_loc
 1523:				        endm
 1524:
 1525:				        te_mf   a,te_f0             ; Test <DEC A>
 1526+ 1  05DD	74 01		        mov     a,#001h
 1527+ 1  05DF	14		        dec     a
 1528+ 1  05E0	B4 00 0C	        cjne    a,#000h,te_f0
 1529+ 1  05E3	C3		        clr     c
 1530+ 1  05E4	14		        dec     a
 1531+ 1  05E5	40 08		        jc      te_f0
 1532+ 1  05E7	B4 FF 05	        cjne    a,#0ffh,te_f0
 1533:
 1534:				        eot     'f',te_f0
 1535+ 1			        putc    #'f'
 1536+ 2  05EA			??0155:
 1537+ 2			        ;jnb     SCON.1,putc_loop
 1538+ 2			        ;clr     SCON.1
 1539+ 2  05EA	75 99 66	        mov     SBUF,#'f'
 1540+ 1  05ED	80 06		        sjmp    ??0154
 1541+ 1  05EF			te_f0:  putc    #'?'
 1542+ 2  05EF			??0156:
 1543+ 2			        ;jnb     SCON.1,putc_loop
 1544+ 2			        ;clr     SCON.1
 1545+ 2  05EF	75 99 3F	        mov     SBUF,#'?'
 1546+ 1  05F2	75 6E 01	        mov     fail,#001h
 1547+ 1  05F5			??0154:
 1548:
 1549:	  05F5	78 66		        mov     r0,#066h
 1550:
 1551:				        te_mf   r0,te_g0
 1552+ 1  05F7	78 01		        mov     r0,#001h
 1553+ 1  05F9	18		        dec     r0
 1554+ 1  05FA	B8 00 67	        cjne    r0,#000h,te_g0
 1555+ 1  05FD	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 29



 Line  I  Addr  Code            Source

 1556+ 1  05FE	18		        dec     r0
 1557+ 1  05FF	40 63		        jc      te_g0
 1558+ 1  0601	B8 FF 60	        cjne    r0,#0ffh,te_g0
 1559:				        te_mf   r1,te_g0
 1560+ 1  0604	79 01		        mov     r1,#001h
 1561+ 1  0606	19		        dec     r1
 1562+ 1  0607	B9 00 5A	        cjne    r1,#000h,te_g0
 1563+ 1  060A	C3		        clr     c
 1564+ 1  060B	19		        dec     r1
 1565+ 1  060C	40 56		        jc      te_g0
 1566+ 1  060E	B9 FF 53	        cjne    r1,#0ffh,te_g0
 1567:				        te_mf   r2,te_g0
 1568+ 1  0611	7A 01		        mov     r2,#001h
 1569+ 1  0613	1A		        dec     r2
 1570+ 1  0614	BA 00 4D	        cjne    r2,#000h,te_g0
 1571+ 1  0617	C3		        clr     c
 1572+ 1  0618	1A		        dec     r2
 1573+ 1  0619	40 49		        jc      te_g0
 1574+ 1  061B	BA FF 46	        cjne    r2,#0ffh,te_g0
 1575:				        te_mf   r3,te_g0
 1576+ 1  061E	7B 01		        mov     r3,#001h
 1577+ 1  0620	1B		        dec     r3
 1578+ 1  0621	BB 00 40	        cjne    r3,#000h,te_g0
 1579+ 1  0624	C3		        clr     c
 1580+ 1  0625	1B		        dec     r3
 1581+ 1  0626	40 3C		        jc      te_g0
 1582+ 1  0628	BB FF 39	        cjne    r3,#0ffh,te_g0
 1583:				        te_mf   r4,te_g0
 1584+ 1  062B	7C 01		        mov     r4,#001h
 1585+ 1  062D	1C		        dec     r4
 1586+ 1  062E	BC 00 33	        cjne    r4,#000h,te_g0
 1587+ 1  0631	C3		        clr     c
 1588+ 1  0632	1C		        dec     r4
 1589+ 1  0633	40 2F		        jc      te_g0
 1590+ 1  0635	BC FF 2C	        cjne    r4,#0ffh,te_g0
 1591:				        te_mf   r5,te_g0
 1592+ 1  0638	7D 01		        mov     r5,#001h
 1593+ 1  063A	1D		        dec     r5
 1594+ 1  063B	BD 00 26	        cjne    r5,#000h,te_g0
 1595+ 1  063E	C3		        clr     c
 1596+ 1  063F	1D		        dec     r5
 1597+ 1  0640	40 22		        jc      te_g0
 1598+ 1  0642	BD FF 1F	        cjne    r5,#0ffh,te_g0
 1599:				        te_mf   r6,te_g0
 1600+ 1  0645	7E 01		        mov     r6,#001h
 1601+ 1  0647	1E		        dec     r6
 1602+ 1  0648	BE 00 19	        cjne    r6,#000h,te_g0
 1603+ 1  064B	C3		        clr     c
 1604+ 1  064C	1E		        dec     r6
 1605+ 1  064D	40 15		        jc      te_g0
 1606+ 1  064F	BE FF 12	        cjne    r6,#0ffh,te_g0
 1607:				        te_mf   r7,te_g0
 1608+ 1  0652	7F 01		        mov     r7,#001h
 1609+ 1  0654	1F		        dec     r7
 1610+ 1  0655	BF 00 0C	        cjne    r7,#000h,te_g0
 1611+ 1  0658	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 30



 Line  I  Addr  Code            Source

 1612+ 1  0659	1F		        dec     r7
 1613+ 1  065A	40 08		        jc      te_g0
 1614+ 1  065C	BF FF 05	        cjne    r7,#0ffh,te_g0
 1615:
 1616:				        eot     'g',te_g0
 1617+ 1			        putc    #'g'
 1618+ 2  065F			??0158:
 1619+ 2			        ;jnb     SCON.1,putc_loop
 1620+ 2			        ;clr     SCON.1
 1621+ 2  065F	75 99 67	        mov     SBUF,#'g'
 1622+ 1  0662	80 06		        sjmp    ??0157
 1623+ 1  0664			te_g0:  putc    #'?'
 1624+ 2  0664			??0159:
 1625+ 2			        ;jnb     SCON.1,putc_loop
 1626+ 2			        ;clr     SCON.1
 1627+ 2  0664	75 99 3F	        mov     SBUF,#'?'
 1628+ 1  0667	75 6E 01	        mov     fail,#001h
 1629+ 1  066A			??0157:
 1630:
 1631:	  066A	78 60		        mov     r0,#dir0
 1632:	  066C	79 31		        mov     r1,#031h
 1633:
 1634:				        te_mf   @r0,te_h0
 1635+ 1  066E	76 01		        mov     @r0,#001h
 1636+ 1  0670	16		        dec     @r0
 1637+ 1  0671	B6 00 19	        cjne    @r0,#000h,te_h0
 1638+ 1  0674	C3		        clr     c
 1639+ 1  0675	16		        dec     @r0
 1640+ 1  0676	40 15		        jc      te_h0
 1641+ 1  0678	B6 FF 12	        cjne    @r0,#0ffh,te_h0
 1642:				        te_mf   @r1,te_h0
 1643+ 1  067B	77 01		        mov     @r1,#001h
 1644+ 1  067D	17		        dec     @r1
 1645+ 1  067E	B7 00 0C	        cjne    @r1,#000h,te_h0
 1646+ 1  0681	C3		        clr     c
 1647+ 1  0682	17		        dec     @r1
 1648+ 1  0683	40 08		        jc      te_h0
 1649+ 1  0685	B7 FF 05	        cjne    @r1,#0ffh,te_h0
 1650:
 1651:				        eot     'h',te_h0
 1652+ 1			        putc    #'h'
 1653+ 2  0688			??0161:
 1654+ 2			        ;jnb     SCON.1,putc_loop
 1655+ 2			        ;clr     SCON.1
 1656+ 2  0688	75 99 68	        mov     SBUF,#'h'
 1657+ 1  068B	80 06		        sjmp    ??0160
 1658+ 1  068D			te_h0:  putc    #'?'
 1659+ 2  068D			??0162:
 1660+ 2			        ;jnb     SCON.1,putc_loop
 1661+ 2			        ;clr     SCON.1
 1662+ 2  068D	75 99 3F	        mov     SBUF,#'?'
 1663+ 1  0690	75 6E 01	        mov     fail,#001h
 1664+ 1  0693			??0160:
 1665:
 1666:	  0693	75 39 01	        mov     039h,#001h
 1667:	  0696	15 39		        dec     039h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 31



 Line  I  Addr  Code            Source

 1668:	  0698	E5 39		        mov     a,039h
 1669:	  069A	B4 00 12	        cjne    a,#00h,te_i0
 1670:	  069D	75 39 00	        mov     039h,#000h
 1671:	  06A0	C3		        clr     c
 1672:	  06A1	15 39		        dec     039h
 1673:	  06A3	40 0A		        jc      te_i0
 1674:	  06A5	E5 39		        mov     a,039h
 1675:	  06A7	B4 FF 05	        cjne    a,#0ffh,te_i0
 1676:
 1677:				        eot     'i',te_i0
 1678+ 1			        putc    #'i'
 1679+ 2  06AA			??0164:
 1680+ 2			        ;jnb     SCON.1,putc_loop
 1681+ 2			        ;clr     SCON.1
 1682+ 2  06AA	75 99 69	        mov     SBUF,#'i'
 1683+ 1  06AD	80 06		        sjmp    ??0163
 1684+ 1  06AF			te_i0:  putc    #'?'
 1685+ 2  06AF			??0165:
 1686+ 2			        ;jnb     SCON.1,putc_loop
 1687+ 2			        ;clr     SCON.1
 1688+ 2  06AF	75 99 3F	        mov     SBUF,#'?'
 1689+ 1  06B2	75 6E 01	        mov     fail,#001h
 1690+ 1  06B5			??0163:
 1691:
 1692:				        put_crlf                    ; end of test series
 1693+ 1			        putc    #13
 1694+ 2  06B5			??0166:
 1695+ 2			        ;jnb     SCON.1,putc_loop
 1696+ 2			        ;clr     SCON.1
 1697+ 2  06B5	75 99 0D	        mov     SBUF,#13
 1698+ 1			        putc    #10
 1699+ 2  06B8			??0167:
 1700+ 2			        ;jnb     SCON.1,putc_loop
 1701+ 2			        ;clr     SCON.1
 1702+ 2  06B8	75 99 0A	        mov     SBUF,#10
 1703:
 1704:
 1705:				        ;-- Test series F ------------------------------------------------------
 1706:				        ;
 1707:				        ; a.- <MOV dir,Rn>
 1708:				        ; b.- <MOV dir,@Ri>
 1709:				        ; c.- <MOV dir,dir>
 1710:				        ; d.- <MOV Rn,dir>
 1711:				        ; e.- <MOV @Ri,dir>
 1712:				        ; f.- <MOV Rn,A>
 1713:				        ; g.- <MOV @Ri,A>
 1714:				        ; h.- <MOV dir,A>
 1715:
 1716:
 1717:				        putc    #'F'                ; start of test series
 1718+ 1  06BB			??0168:
 1719+ 1			        ;jnb     SCON.1,putc_loop
 1720+ 1			        ;clr     SCON.1
 1721+ 1  06BB	75 99 46	        mov     SBUF,#'F'
 1722:
 1723:				tf_ma   macro   rn, n, error_loc

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 32



 Line  I  Addr  Code            Source

 1724:				        mov     rn,#(091h+n)
 1725:				        mov     039h,rn
 1726:				        mov     a,039h
 1727:				        cjne    a,#(091h+n),error_loc
 1728:				        endm
 1729:
 1730:				        tf_ma   r0,0,tf_a0
 1731+ 1  06BE	78 91		        mov     r0,#(091h+0)
 1732+ 1  06C0	88 39		        mov     039h,r0
 1733+ 1  06C2	E5 39		        mov     a,039h
 1734+ 1  06C4	B4 91 44	        cjne    a,#(091h+0),tf_a0
 1735:				        tf_ma   r1,1,tf_a0
 1736+ 1  06C7	79 92		        mov     r1,#(091h+1)
 1737+ 1  06C9	89 39		        mov     039h,r1
 1738+ 1  06CB	E5 39		        mov     a,039h
 1739+ 1  06CD	B4 92 3B	        cjne    a,#(091h+1),tf_a0
 1740:				        tf_ma   r2,2,tf_a0
 1741+ 1  06D0	7A 93		        mov     r2,#(091h+2)
 1742+ 1  06D2	8A 39		        mov     039h,r2
 1743+ 1  06D4	E5 39		        mov     a,039h
 1744+ 1  06D6	B4 93 32	        cjne    a,#(091h+2),tf_a0
 1745:				        tf_ma   r3,3,tf_a0
 1746+ 1  06D9	7B 94		        mov     r3,#(091h+3)
 1747+ 1  06DB	8B 39		        mov     039h,r3
 1748+ 1  06DD	E5 39		        mov     a,039h
 1749+ 1  06DF	B4 94 29	        cjne    a,#(091h+3),tf_a0
 1750:				        tf_ma   r4,4,tf_a0
 1751+ 1  06E2	7C 95		        mov     r4,#(091h+4)
 1752+ 1  06E4	8C 39		        mov     039h,r4
 1753+ 1  06E6	E5 39		        mov     a,039h
 1754+ 1  06E8	B4 95 20	        cjne    a,#(091h+4),tf_a0
 1755:				        tf_ma   r5,5,tf_a0
 1756+ 1  06EB	7D 96		        mov     r5,#(091h+5)
 1757+ 1  06ED	8D 39		        mov     039h,r5
 1758+ 1  06EF	E5 39		        mov     a,039h
 1759+ 1  06F1	B4 96 17	        cjne    a,#(091h+5),tf_a0
 1760:				        tf_ma   r6,6,tf_a0
 1761+ 1  06F4	7E 97		        mov     r6,#(091h+6)
 1762+ 1  06F6	8E 39		        mov     039h,r6
 1763+ 1  06F8	E5 39		        mov     a,039h
 1764+ 1  06FA	B4 97 0E	        cjne    a,#(091h+6),tf_a0
 1765:				        tf_ma   r7,7,tf_a0
 1766+ 1  06FD	7F 98		        mov     r7,#(091h+7)
 1767+ 1  06FF	8F 39		        mov     039h,r7
 1768+ 1  0701	E5 39		        mov     a,039h
 1769+ 1  0703	B4 98 05	        cjne    a,#(091h+7),tf_a0
 1770:
 1771:				        eot     'a',tf_a0
 1772+ 1			        putc    #'a'
 1773+ 2  0706			??0170:
 1774+ 2			        ;jnb     SCON.1,putc_loop
 1775+ 2			        ;clr     SCON.1
 1776+ 2  0706	75 99 61	        mov     SBUF,#'a'
 1777+ 1  0709	80 06		        sjmp    ??0169
 1778+ 1  070B			tf_a0:  putc    #'?'
 1779+ 2  070B			??0171:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 33



 Line  I  Addr  Code            Source

 1780+ 2			        ;jnb     SCON.1,putc_loop
 1781+ 2			        ;clr     SCON.1
 1782+ 2  070B	75 99 3F	        mov     SBUF,#'?'
 1783+ 1  070E	75 6E 01	        mov     fail,#001h
 1784+ 1  0711			??0169:
 1785:
 1786:				        tf_ma   @r0,0,tf_b0
 1787+ 1  0711	76 91		        mov     @r0,#(091h+0)
 1788+ 1  0713	86 39		        mov     039h,@r0
 1789+ 1  0715	E5 39		        mov     a,039h
 1790+ 1  0717	B4 91 0E	        cjne    a,#(091h+0),tf_b0
 1791:				        tf_ma   @r1,1,tf_b0
 1792+ 1  071A	77 92		        mov     @r1,#(091h+1)
 1793+ 1  071C	87 39		        mov     039h,@r1
 1794+ 1  071E	E5 39		        mov     a,039h
 1795+ 1  0720	B4 92 05	        cjne    a,#(091h+1),tf_b0
 1796:
 1797:				        eot     'b',tf_b0
 1798+ 1			        putc    #'b'
 1799+ 2  0723			??0173:
 1800+ 2			        ;jnb     SCON.1,putc_loop
 1801+ 2			        ;clr     SCON.1
 1802+ 2  0723	75 99 62	        mov     SBUF,#'b'
 1803+ 1  0726	80 06		        sjmp    ??0172
 1804+ 1  0728			tf_b0:  putc    #'?'
 1805+ 2  0728			??0174:
 1806+ 2			        ;jnb     SCON.1,putc_loop
 1807+ 2			        ;clr     SCON.1
 1808+ 2  0728	75 99 3F	        mov     SBUF,#'?'
 1809+ 1  072B	75 6E 01	        mov     fail,#001h
 1810+ 1  072E			??0172:
 1811:
 1812:	  072E	75 31 91	        mov     031h,#091h
 1813:	  0731	85 31 39	        mov     039h,031h
 1814:	  0734	E5 39		        mov     a,039h
 1815:	  0736	B4 91 05	        cjne    a,#091h,tf_c0
 1816:
 1817:				        eot     'c',tf_c0
 1818+ 1			        putc    #'c'
 1819+ 2  0739			??0176:
 1820+ 2			        ;jnb     SCON.1,putc_loop
 1821+ 2			        ;clr     SCON.1
 1822+ 2  0739	75 99 63	        mov     SBUF,#'c'
 1823+ 1  073C	80 06		        sjmp    ??0175
 1824+ 1  073E			tf_c0:  putc    #'?'
 1825+ 2  073E			??0177:
 1826+ 2			        ;jnb     SCON.1,putc_loop
 1827+ 2			        ;clr     SCON.1
 1828+ 2  073E	75 99 3F	        mov     SBUF,#'?'
 1829+ 1  0741	75 6E 01	        mov     fail,#001h
 1830+ 1  0744			??0175:
 1831:
 1832:				tf_md   macro   rn, n, error_loc
 1833:				        mov     039h,#(091h+n)
 1834:				        mov     rn,039h
 1835:				        cjne    rn,#(091h+n),error_loc

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 34



 Line  I  Addr  Code            Source

 1836:				        endm
 1837:
 1838:				        tf_md   r0,0,tf_d0
 1839+ 1  0744	75 39 91	        mov     039h,#(091h+0)
 1840+ 1  0747	A8 39		        mov     r0,039h
 1841+ 1  0749	B8 91 3D	        cjne    r0,#(091h+0),tf_d0
 1842:				        tf_md   r1,1,tf_d0
 1843+ 1  074C	75 39 92	        mov     039h,#(091h+1)
 1844+ 1  074F	A9 39		        mov     r1,039h
 1845+ 1  0751	B9 92 35	        cjne    r1,#(091h+1),tf_d0
 1846:				        tf_md   r2,2,tf_d0
 1847+ 1  0754	75 39 93	        mov     039h,#(091h+2)
 1848+ 1  0757	AA 39		        mov     r2,039h
 1849+ 1  0759	BA 93 2D	        cjne    r2,#(091h+2),tf_d0
 1850:				        tf_md   r3,3,tf_d0
 1851+ 1  075C	75 39 94	        mov     039h,#(091h+3)
 1852+ 1  075F	AB 39		        mov     r3,039h
 1853+ 1  0761	BB 94 25	        cjne    r3,#(091h+3),tf_d0
 1854:				        tf_md   r4,4,tf_d0
 1855+ 1  0764	75 39 95	        mov     039h,#(091h+4)
 1856+ 1  0767	AC 39		        mov     r4,039h
 1857+ 1  0769	BC 95 1D	        cjne    r4,#(091h+4),tf_d0
 1858:				        tf_md   r5,5,tf_d0
 1859+ 1  076C	75 39 96	        mov     039h,#(091h+5)
 1860+ 1  076F	AD 39		        mov     r5,039h
 1861+ 1  0771	BD 96 15	        cjne    r5,#(091h+5),tf_d0
 1862:				        tf_md   r6,6,tf_d0
 1863+ 1  0774	75 39 97	        mov     039h,#(091h+6)
 1864+ 1  0777	AE 39		        mov     r6,039h
 1865+ 1  0779	BE 97 0D	        cjne    r6,#(091h+6),tf_d0
 1866:				        tf_md   r7,7,tf_d0
 1867+ 1  077C	75 39 98	        mov     039h,#(091h+7)
 1868+ 1  077F	AF 39		        mov     r7,039h
 1869+ 1  0781	BF 98 05	        cjne    r7,#(091h+7),tf_d0
 1870:
 1871:				        eot     'd',tf_d0
 1872+ 1			        putc    #'d'
 1873+ 2  0784			??0179:
 1874+ 2			        ;jnb     SCON.1,putc_loop
 1875+ 2			        ;clr     SCON.1
 1876+ 2  0784	75 99 64	        mov     SBUF,#'d'
 1877+ 1  0787	80 06		        sjmp    ??0178
 1878+ 1  0789			tf_d0:  putc    #'?'
 1879+ 2  0789			??0180:
 1880+ 2			        ;jnb     SCON.1,putc_loop
 1881+ 2			        ;clr     SCON.1
 1882+ 2  0789	75 99 3F	        mov     SBUF,#'?'
 1883+ 1  078C	75 6E 01	        mov     fail,#001h
 1884+ 1  078F			??0178:
 1885:
 1886:	  078F	78 60		        mov     r0,#dir0
 1887:	  0791	79 31		        mov     r1,#031h
 1888:				        tf_md   @r0,0,tf_e0
 1889+ 1  0793	75 39 91	        mov     039h,#(091h+0)
 1890+ 1  0796	A6 39		        mov     @r0,039h
 1891+ 1  0798	B6 91 0D	        cjne    @r0,#(091h+0),tf_e0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 35



 Line  I  Addr  Code            Source

 1892:				        tf_md   @r1,1,tf_e0
 1893+ 1  079B	75 39 92	        mov     039h,#(091h+1)
 1894+ 1  079E	A7 39		        mov     @r1,039h
 1895+ 1  07A0	B7 92 05	        cjne    @r1,#(091h+1),tf_e0
 1896:
 1897:				        eot     'e',tf_e0
 1898+ 1			        putc    #'e'
 1899+ 2  07A3			??0182:
 1900+ 2			        ;jnb     SCON.1,putc_loop
 1901+ 2			        ;clr     SCON.1
 1902+ 2  07A3	75 99 65	        mov     SBUF,#'e'
 1903+ 1  07A6	80 06		        sjmp    ??0181
 1904+ 1  07A8			tf_e0:  putc    #'?'
 1905+ 2  07A8			??0183:
 1906+ 2			        ;jnb     SCON.1,putc_loop
 1907+ 2			        ;clr     SCON.1
 1908+ 2  07A8	75 99 3F	        mov     SBUF,#'?'
 1909+ 1  07AB	75 6E 01	        mov     fail,#001h
 1910+ 1  07AE			??0181:
 1911:
 1912:				tf_mf   macro   rn, n, error_loc
 1913:				        mov     a,#(091h+n)
 1914:				        mov     rn,a
 1915:				        cjne    rn,#(091h+n),error_loc
 1916:				        endm
 1917:
 1918:				        tf_mf   r0,0,tf_f0
 1919+ 1  07AE	74 91		        mov     a,#(091h+0)
 1920+ 1  07B0	F8		        mov     r0,a
 1921+ 1  07B1	B8 91 2F	        cjne    r0,#(091h+0),tf_f0
 1922:				        tf_mf   r1,1,tf_f0
 1923+ 1  07B4	74 92		        mov     a,#(091h+1)
 1924+ 1  07B6	F9		        mov     r1,a
 1925+ 1  07B7	B9 92 29	        cjne    r1,#(091h+1),tf_f0
 1926:				        tf_mf   r2,2,tf_f0
 1927+ 1  07BA	74 93		        mov     a,#(091h+2)
 1928+ 1  07BC	FA		        mov     r2,a
 1929+ 1  07BD	BA 93 23	        cjne    r2,#(091h+2),tf_f0
 1930:				        tf_mf   r3,3,tf_f0
 1931+ 1  07C0	74 94		        mov     a,#(091h+3)
 1932+ 1  07C2	FB		        mov     r3,a
 1933+ 1  07C3	BB 94 1D	        cjne    r3,#(091h+3),tf_f0
 1934:				        tf_mf   r4,4,tf_f0
 1935+ 1  07C6	74 95		        mov     a,#(091h+4)
 1936+ 1  07C8	FC		        mov     r4,a
 1937+ 1  07C9	BC 95 17	        cjne    r4,#(091h+4),tf_f0
 1938:				        tf_mf   r5,5,tf_f0
 1939+ 1  07CC	74 96		        mov     a,#(091h+5)
 1940+ 1  07CE	FD		        mov     r5,a
 1941+ 1  07CF	BD 96 11	        cjne    r5,#(091h+5),tf_f0
 1942:				        tf_mf   r6,6,tf_f0
 1943+ 1  07D2	74 97		        mov     a,#(091h+6)
 1944+ 1  07D4	FE		        mov     r6,a
 1945+ 1  07D5	BE 97 0B	        cjne    r6,#(091h+6),tf_f0
 1946:				        tf_mf   r7,7,tf_f0
 1947+ 1  07D8	74 98		        mov     a,#(091h+7)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 36



 Line  I  Addr  Code            Source

 1948+ 1  07DA	FF		        mov     r7,a
 1949+ 1  07DB	BF 98 05	        cjne    r7,#(091h+7),tf_f0
 1950:
 1951:				        eot     'f',tf_f0
 1952+ 1			        putc    #'f'
 1953+ 2  07DE			??0185:
 1954+ 2			        ;jnb     SCON.1,putc_loop
 1955+ 2			        ;clr     SCON.1
 1956+ 2  07DE	75 99 66	        mov     SBUF,#'f'
 1957+ 1  07E1	80 06		        sjmp    ??0184
 1958+ 1  07E3			tf_f0:  putc    #'?'
 1959+ 2  07E3			??0186:
 1960+ 2			        ;jnb     SCON.1,putc_loop
 1961+ 2			        ;clr     SCON.1
 1962+ 2  07E3	75 99 3F	        mov     SBUF,#'?'
 1963+ 1  07E6	75 6E 01	        mov     fail,#001h
 1964+ 1  07E9			??0184:
 1965:
 1966:	  07E9	78 60		        mov     r0,#dir0
 1967:	  07EB	79 31		        mov     r1,#031h
 1968:				        tf_mf   @r0,0,tf_g0
 1969+ 1  07ED	74 91		        mov     a,#(091h+0)
 1970+ 1  07EF	F6		        mov     @r0,a
 1971+ 1  07F0	B6 91 0B	        cjne    @r0,#(091h+0),tf_g0
 1972:				        tf_mf   @r1,1,tf_g0
 1973+ 1  07F3	74 92		        mov     a,#(091h+1)
 1974+ 1  07F5	F7		        mov     @r1,a
 1975+ 1  07F6	B7 92 05	        cjne    @r1,#(091h+1),tf_g0
 1976:
 1977:				        eot     'g',tf_g0
 1978+ 1			        putc    #'g'
 1979+ 2  07F9			??0188:
 1980+ 2			        ;jnb     SCON.1,putc_loop
 1981+ 2			        ;clr     SCON.1
 1982+ 2  07F9	75 99 67	        mov     SBUF,#'g'
 1983+ 1  07FC	80 06		        sjmp    ??0187
 1984+ 1  07FE			tf_g0:  putc    #'?'
 1985+ 2  07FE			??0189:
 1986+ 2			        ;jnb     SCON.1,putc_loop
 1987+ 2			        ;clr     SCON.1
 1988+ 2  07FE	75 99 3F	        mov     SBUF,#'?'
 1989+ 1  0801	75 6E 01	        mov     fail,#001h
 1990+ 1  0804			??0187:
 1991:
 1992:	  0804	75 60 79	        mov     dir0,#079h
 1993:	  0807	78 00		        mov     r0,#000h
 1994:	  0809	74 34		        mov     a,#34h
 1995:	  080B	F5 60		        mov     dir0,a
 1996:	  080D	A8 60		        mov     r0,dir0
 1997:	  080F	B8 34 05	        cjne    r0,#034h,tf_h0
 1998:
 1999:				        eot     'h',tf_h0
 2000+ 1			        putc    #'h'
 2001+ 2  0812			??0191:
 2002+ 2			        ;jnb     SCON.1,putc_loop
 2003+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 37



 Line  I  Addr  Code            Source

 2004+ 2  0812	75 99 68	        mov     SBUF,#'h'
 2005+ 1  0815	80 06		        sjmp    ??0190
 2006+ 1  0817			tf_h0:  putc    #'?'
 2007+ 2  0817			??0192:
 2008+ 2			        ;jnb     SCON.1,putc_loop
 2009+ 2			        ;clr     SCON.1
 2010+ 2  0817	75 99 3F	        mov     SBUF,#'?'
 2011+ 1  081A	75 6E 01	        mov     fail,#001h
 2012+ 1  081D			??0190:
 2013:
 2014:	  081D	74 00		        mov     a,#000h
 2015:
 2016:	  081F	79 31		        mov     r1,#031h
 2017:	  0821	75 31 56	        mov     031h,#056h
 2018:	  0824	78 60		        mov     r0,#dir0
 2019:	  0826	75 60 34	        mov     dir0,#034h
 2020:	  0829	E6		        mov     a,@r0
 2021:	  082A	B4 34 09	        cjne    a,#034h,tf_i0
 2022:	  082D	E7		        mov     a,@r1
 2023:	  082E	B4 56 05	        cjne    a,#056h,tf_i0
 2024:
 2025:				        eot     'i',tf_i0
 2026+ 1			        putc    #'i'
 2027+ 2  0831			??0194:
 2028+ 2			        ;jnb     SCON.1,putc_loop
 2029+ 2			        ;clr     SCON.1
 2030+ 2  0831	75 99 69	        mov     SBUF,#'i'
 2031+ 1  0834	80 06		        sjmp    ??0193
 2032+ 1  0836			tf_i0:  putc    #'?'
 2033+ 2  0836			??0195:
 2034+ 2			        ;jnb     SCON.1,putc_loop
 2035+ 2			        ;clr     SCON.1
 2036+ 2  0836	75 99 3F	        mov     SBUF,#'?'
 2037+ 1  0839	75 6E 01	        mov     fail,#001h
 2038+ 1  083C			??0193:
 2039:
 2040:				        put_crlf                    ; end of test series
 2041+ 1			        putc    #13
 2042+ 2  083C			??0196:
 2043+ 2			        ;jnb     SCON.1,putc_loop
 2044+ 2			        ;clr     SCON.1
 2045+ 2  083C	75 99 0D	        mov     SBUF,#13
 2046+ 1			        putc    #10
 2047+ 2  083F			??0197:
 2048+ 2			        ;jnb     SCON.1,putc_loop
 2049+ 2			        ;clr     SCON.1
 2050+ 2  083F	75 99 0A	        mov     SBUF,#10
 2051:
 2052:
 2053:				        ;-- Test series G ------------------------------------------------------
 2054:				        ; Note the XCG tests are specially lame even within this context.
 2055:				        ; a.- <CLR A>, <CPL A>, <SWAP A>
 2056:				        ; b.- <INC DPTR>
 2057:				        ; c.- <XCH A,dir>
 2058:				        ; d.- <XCH A,@Ri>
 2059:				        ; e.- <XCH A,Rn>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 38



 Line  I  Addr  Code            Source

 2060:
 2061:				        putc    #'G'                ; start of test series
 2062+ 1  0842			??0198:
 2063+ 1			        ;jnb     SCON.1,putc_loop
 2064+ 1			        ;clr     SCON.1
 2065+ 1  0842	75 99 47	        mov     SBUF,#'G'
 2066:
 2067:	  0845	74 55		        mov     a,#055h
 2068:	  0847	E4		        clr     a
 2069:	  0848	70 11		        jnz     tg_a0
 2070:
 2071:	  084A	74 55		        mov     a,#055h
 2072:	  084C	F4		        cpl     a
 2073:	  084D	B4 AA 0B	        cjne    a,#0aah,tg_a0
 2074:
 2075:	  0850	74 97		        mov     a,#097h
 2076:	  0852	C4		        swap    a
 2077:	  0853	B4 79 05	        cjne    a,#079h,tg_a0
 2078:
 2079:				        eot     'a',tg_a0
 2080+ 1			        putc    #'a'
 2081+ 2  0856			??0200:
 2082+ 2			        ;jnb     SCON.1,putc_loop
 2083+ 2			        ;clr     SCON.1
 2084+ 2  0856	75 99 61	        mov     SBUF,#'a'
 2085+ 1  0859	80 06		        sjmp    ??0199
 2086+ 1  085B			tg_a0:  putc    #'?'
 2087+ 2  085B			??0201:
 2088+ 2			        ;jnb     SCON.1,putc_loop
 2089+ 2			        ;clr     SCON.1
 2090+ 2  085B	75 99 3F	        mov     SBUF,#'?'
 2091+ 1  085E	75 6E 01	        mov     fail,#001h
 2092+ 1  0861			??0199:
 2093:
 2094:	  0861	75 83 12	        mov     DPH,#012h
 2095:	  0864	75 82 FD	        mov     DPL,#0fdh
 2096:	  0867	A3		        inc     dptr
 2097:	  0868	E5 83		        mov     a,DPH
 2098:	  086A	B4 12 20	        cjne    a,#012h,tg_b0
 2099:	  086D	E5 82		        mov     a,DPL
 2100:	  086F	B4 FE 1B	        cjne    a,#0feh,tg_b0
 2101:	  0872	A3		        inc     dptr
 2102:	  0873	E5 83		        mov     a,DPH
 2103:	  0875	B4 12 15	        cjne    a,#012h,tg_b0
 2104:	  0878	E5 82		        mov     a,DPL
 2105:	  087A	B4 FF 10	        cjne    a,#0ffh,tg_b0
 2106:	  087D	A3		        inc     dptr
 2107:	  087E	E5 83		        mov     a,DPH
 2108:	  0880	B4 13 0A	        cjne    a,#013h,tg_b0
 2109:	  0883	E5 82		        mov     a,DPL
 2110:	  0885	B4 00 05	        cjne    a,#000h,tg_b0
 2111:
 2112:				        eot     'b',tg_b0
 2113+ 1			        putc    #'b'
 2114+ 2  0888			??0203:
 2115+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 39



 Line  I  Addr  Code            Source

 2116+ 2			        ;clr     SCON.1
 2117+ 2  0888	75 99 62	        mov     SBUF,#'b'
 2118+ 1  088B	80 06		        sjmp    ??0202
 2119+ 1  088D			tg_b0:  putc    #'?'
 2120+ 2  088D			??0204:
 2121+ 2			        ;jnb     SCON.1,putc_loop
 2122+ 2			        ;clr     SCON.1
 2123+ 2  088D	75 99 3F	        mov     SBUF,#'?'
 2124+ 1  0890	75 6E 01	        mov     fail,#001h
 2125+ 1  0893			??0202:
 2126:
 2127:				        ; c.- <XCH A,dir>
 2128:	  0893	74 34		        mov     a,#34h
 2129:	  0895	75 13 57	        mov     13h,#57h
 2130:	  0898	C5 13		        xch     a,13h
 2131:	  089A	B4 57 0A	        cjne    a,#57h,tg_c0
 2132:	  089D	E5 13		        mov     a,13h
 2133:	  089F	B4 34 05	        cjne    a,#34h,tg_c0
 2134:
 2135:				        eot     'c',tg_c0
 2136+ 1			        putc    #'c'
 2137+ 2  08A2			??0206:
 2138+ 2			        ;jnb     SCON.1,putc_loop
 2139+ 2			        ;clr     SCON.1
 2140+ 2  08A2	75 99 63	        mov     SBUF,#'c'
 2141+ 1  08A5	80 06		        sjmp    ??0205
 2142+ 1  08A7			tg_c0:  putc    #'?'
 2143+ 2  08A7			??0207:
 2144+ 2			        ;jnb     SCON.1,putc_loop
 2145+ 2			        ;clr     SCON.1
 2146+ 2  08A7	75 99 3F	        mov     SBUF,#'?'
 2147+ 1  08AA	75 6E 01	        mov     fail,#001h
 2148+ 1  08AD			??0205:
 2149:
 2150:				        ; d.- <XCH A,@Ri>
 2151:	  08AD	74 91		        mov     a,#91h
 2152:	  08AF	75 29 78	        mov     29h,#78h
 2153:	  08B2	78 29		        mov     r0,#29h
 2154:	  08B4	C6		        xch     a,@r0
 2155:	  08B5	B4 78 1A	        cjne    a,#78h,tg_d0
 2156:	  08B8	E5 29		        mov     a,29h
 2157:	  08BA	B4 91 15	        cjne    a,#91h,tg_d0
 2158:
 2159:	  08BD	74 92		        mov     a,#92h
 2160:	  08BF	75 2A 78	        mov     2ah,#78h
 2161:	  08C2	79 2A		        mov     r1,#2ah
 2162:	  08C4	C7		        xch     a,@r1
 2163:	  08C5	B4 78 0A	        cjne    a,#78h,tg_d0
 2164:	  08C8	E5 2A		        mov     a,2ah
 2165:	  08CA	B4 92 05	        cjne    a,#92h,tg_d0
 2166:
 2167:				        eot     'd',tg_d0
 2168+ 1			        putc    #'d'
 2169+ 2  08CD			??0209:
 2170+ 2			        ;jnb     SCON.1,putc_loop
 2171+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 40



 Line  I  Addr  Code            Source

 2172+ 2  08CD	75 99 64	        mov     SBUF,#'d'
 2173+ 1  08D0	80 06		        sjmp    ??0208
 2174+ 1  08D2			tg_d0:  putc    #'?'
 2175+ 2  08D2			??0210:
 2176+ 2			        ;jnb     SCON.1,putc_loop
 2177+ 2			        ;clr     SCON.1
 2178+ 2  08D2	75 99 3F	        mov     SBUF,#'?'
 2179+ 1  08D5	75 6E 01	        mov     fail,#001h
 2180+ 1  08D8			??0208:
 2181:
 2182:				        ; e.- <XCHG A,Rn>
 2183:
 2184:				tg_ma   macro   rn, n, error_loc
 2185:				        mov     a,#(0c1h+n)
 2186:				        mov     rn,#(042h+n)
 2187:				        xch     a,rn
 2188:				        cjne    rn,#(0c1h+n),error_loc
 2189:				        cjne    a,#(042h+n),error_loc
 2190:				        endm
 2191:
 2192:				        tg_ma   r0, 19, tg_e0
 2193+ 1  08D8	74 D4		        mov     a,#(0c1h+19)
 2194+ 1  08DA	78 55		        mov     r0,#(042h+19)
 2195+ 1  08DC	C8		        xch     a,r0
 2196+ 1  08DD	B8 D4 55	        cjne    r0,#(0c1h+19),tg_e0
 2197+ 1  08E0	B4 55 52	        cjne    a,#(042h+19),tg_e0
 2198:				        tg_ma   r1, 18, tg_e0
 2199+ 1  08E3	74 D3		        mov     a,#(0c1h+18)
 2200+ 1  08E5	79 54		        mov     r1,#(042h+18)
 2201+ 1  08E7	C9		        xch     a,r1
 2202+ 1  08E8	B9 D3 4A	        cjne    r1,#(0c1h+18),tg_e0
 2203+ 1  08EB	B4 54 47	        cjne    a,#(042h+18),tg_e0
 2204:				        tg_ma   r2, 17, tg_e0
 2205+ 1  08EE	74 D2		        mov     a,#(0c1h+17)
 2206+ 1  08F0	7A 53		        mov     r2,#(042h+17)
 2207+ 1  08F2	CA		        xch     a,r2
 2208+ 1  08F3	BA D2 3F	        cjne    r2,#(0c1h+17),tg_e0
 2209+ 1  08F6	B4 53 3C	        cjne    a,#(042h+17),tg_e0
 2210:				        tg_ma   r3, 16, tg_e0
 2211+ 1  08F9	74 D1		        mov     a,#(0c1h+16)
 2212+ 1  08FB	7B 52		        mov     r3,#(042h+16)
 2213+ 1  08FD	CB		        xch     a,r3
 2214+ 1  08FE	BB D1 34	        cjne    r3,#(0c1h+16),tg_e0
 2215+ 1  0901	B4 52 31	        cjne    a,#(042h+16),tg_e0
 2216:				        tg_ma   r4, 15, tg_e0
 2217+ 1  0904	74 D0		        mov     a,#(0c1h+15)
 2218+ 1  0906	7C 51		        mov     r4,#(042h+15)
 2219+ 1  0908	CC		        xch     a,r4
 2220+ 1  0909	BC D0 29	        cjne    r4,#(0c1h+15),tg_e0
 2221+ 1  090C	B4 51 26	        cjne    a,#(042h+15),tg_e0
 2222:				        tg_ma   r5, 14, tg_e0
 2223+ 1  090F	74 CF		        mov     a,#(0c1h+14)
 2224+ 1  0911	7D 50		        mov     r5,#(042h+14)
 2225+ 1  0913	CD		        xch     a,r5
 2226+ 1  0914	BD CF 1E	        cjne    r5,#(0c1h+14),tg_e0
 2227+ 1  0917	B4 50 1B	        cjne    a,#(042h+14),tg_e0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 41



 Line  I  Addr  Code            Source

 2228:				        tg_ma   r6, 13, tg_e0
 2229+ 1  091A	74 CE		        mov     a,#(0c1h+13)
 2230+ 1  091C	7E 4F		        mov     r6,#(042h+13)
 2231+ 1  091E	CE		        xch     a,r6
 2232+ 1  091F	BE CE 13	        cjne    r6,#(0c1h+13),tg_e0
 2233+ 1  0922	B4 4F 10	        cjne    a,#(042h+13),tg_e0
 2234:				        tg_ma   r7, 12, tg_e0
 2235+ 1  0925	74 CD		        mov     a,#(0c1h+12)
 2236+ 1  0927	7F 4E		        mov     r7,#(042h+12)
 2237+ 1  0929	CF		        xch     a,r7
 2238+ 1  092A	BF CD 08	        cjne    r7,#(0c1h+12),tg_e0
 2239+ 1  092D	B4 4E 05	        cjne    a,#(042h+12),tg_e0
 2240:
 2241:				        eot     'e',tg_e0
 2242+ 1			        putc    #'e'
 2243+ 2  0930			??0212:
 2244+ 2			        ;jnb     SCON.1,putc_loop
 2245+ 2			        ;clr     SCON.1
 2246+ 2  0930	75 99 65	        mov     SBUF,#'e'
 2247+ 1  0933	80 06		        sjmp    ??0211
 2248+ 1  0935			tg_e0:  putc    #'?'
 2249+ 2  0935			??0213:
 2250+ 2			        ;jnb     SCON.1,putc_loop
 2251+ 2			        ;clr     SCON.1
 2252+ 2  0935	75 99 3F	        mov     SBUF,#'?'
 2253+ 1  0938	75 6E 01	        mov     fail,#001h
 2254+ 1  093B			??0211:
 2255:
 2256:
 2257:				        put_crlf                    ; end of test series
 2258+ 1			        putc    #13
 2259+ 2  093B			??0214:
 2260+ 2			        ;jnb     SCON.1,putc_loop
 2261+ 2			        ;clr     SCON.1
 2262+ 2  093B	75 99 0D	        mov     SBUF,#13
 2263+ 1			        putc    #10
 2264+ 2  093E			??0215:
 2265+ 2			        ;jnb     SCON.1,putc_loop
 2266+ 2			        ;clr     SCON.1
 2267+ 2  093E	75 99 0A	        mov     SBUF,#10
 2268:
 2269:
 2270:				        ;-- ALU opcode block test ----------------------------------------------
 2271:				        ; This set of macros is used to test families of opcodes, such as ORL,
 2272:				        ; ANL, ADD, etc. with all their addressing modes.
 2273:				        ;
 2274:				        ; a.- <OP A,dir>, <OP A,@Ri>, <OP A, Rn> (n=0,1)
 2275:				        ; b.- <OP A, Rn> (n=2,3)
 2276:				        ; c.- <OP A, Rn> (n=4,5)
 2277:				        ; d.- <OP A, Rn> (n=6,7)
 2278:				        ; e.- <OP dir,#imm>
 2279:				        ; f.- <OP A,#imm>
 2280:				        ; g.- <OP dir,A>
 2281:
 2282:				        ;store psw away for later comparison
 2283:				save_psw macro

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 42



 Line  I  Addr  Code            Source

 2284:				        mov     saved_psw,PSW
 2285:				        endm
 2286:
 2287:				        ; compare flags CY, AC and OV with expected values in <flags>
 2288:				tst_psw macro   flags,error_loc
 2289:				        mov     a,saved_psw
 2290:				        anl     a,#0c4h
 2291:				        xrl     a,#flags
 2292:				        anl     a,#0feh
 2293:				        jnz     error_loc
 2294:				        endm
 2295:
 2296:				        ; Set the CY flag to the value of the lsb of argument <flags>
 2297:				set_cy  macro   flags
 2298:				        local   cy_val
 2299:				cy_val  set     (flags and 1)
 2300:				        if      cy_val eq 1
 2301:				        setb    c
 2302:				        else
 2303:				        clr     c
 2304:				        endif
 2305:				        endm
 2306:
 2307:				        ; Test instruction <op> A, src
 2308:				        ;
 2309:				        ; flags = (<expected PSW> & 0xfe) | <input cy>
 2310:				        ; (P flag result is not tested)
 2311:				top_ma  macro   op,src,error_loc,flags
 2312:				        mov     src,#arg0
 2313:				        mov     a,#arg1
 2314:				        ifnb    <flags>
 2315:				        set_cy  flags
 2316:				        endif
 2317:				        op      a,src
 2318:				        ifnb    <flags>
 2319:				        save_psw
 2320:				        endif
 2321:				        cjne    a,#res,error_loc
 2322:				        ifnb    <flags>
 2323:				        tst_psw <flags>,error_loc
 2324:				        endif
 2325:				        endm
 2326:
 2327:				        ; Test instruction <op> dst, #arg0
 2328:				        ; (<flags> same as top_ma)
 2329:				top_mb  macro   op,dst,error_loc,flags
 2330:				        mov     dst,#arg1
 2331:				        ifnb    <flags>
 2332:				        set_cy  flags
 2333:				        endif
 2334:				        op      dst,#arg0
 2335:				        ifnb    <flags>
 2336:				        save_psw
 2337:				        endif
 2338:				        mov     ACC,dst
 2339:				        cjne    a,#res,error_loc

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 43



 Line  I  Addr  Code            Source

 2340:				        ifnb    <flags>
 2341:				        tst_psw <flags>,error_loc
 2342:				        endif
 2343:				        endm
 2344:
 2345:				        ; Test instruction <op> dir, A
 2346:				        ; (<flags> same as top_ma)
 2347:				top_mc  macro   op,error_loc,flags
 2348:				        mov     dir0,#arg0
 2349:				        mov     a,#arg1
 2350:				        ifnb    <flags>
 2351:				        set_cy  flags
 2352:				        endif
 2353:				        op      dir0,a
 2354:				        ifnb    <flags>
 2355:				        save_psw
 2356:				        endif
 2357:				        mov     a,dir0
 2358:				        cjne    a,#res,error_loc
 2359:				        ifnb    <flags>
 2360:				        tst_psw <flags>,error_loc
 2361:				        endif
 2362:				        endm
 2363:
 2364:				        ; Test ALU instruction with all addressing modes.
 2365:				        ; FIXME <op> A, #imm not tested!
 2366:				        ; op : Opcode to be tested
 2367:				        ; a0, a1 : Values used as 1st and 2nd args in all addressing modes
 2368:				        ; r : Expected result
 2369:				        ; am :
 2370:				        ; flags : <Expected PSW value>&0xfe | <input cy>
 2371:				        ; (if the parameter is unused, the macro skips the flag check)
 2372:				tst_alu macro   op,a0,a1,r,am,flags
 2373:				        local   tall_0d
 2374:				        local   tall_0a
 2375:				        local   tall_0b
 2376:				        local   tall_0c
 2377:				        local   tall_1
 2378:				        local   tall_2
 2379:				        local   tall_3
 2380:				        ; Put the argument and result data into variables for easier access
 2381:				        arg0    set a0
 2382:				        arg1    set a1
 2383:				        res     set r
 2384:
 2385:				        ; Test <op> A, dir
 2386:				        top_ma  op,dir0,tall_0a,<flags>
 2387:				        ; Test <op> A, @R0
 2388:				        mov     r0,#dir0
 2389:				        top_ma  op,@r0,tall_0a,<flags>
 2390:				        ; Test <op> A, @R1
 2391:				        mov     r1,#031h
 2392:				        top_ma  op,@r1,tall_0a,<flags>
 2393:
 2394:				        ; Now test <op> A, Rn for n in 0..7
 2395:				        top_ma  op,r0,tall_0a,<flags>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 44



 Line  I  Addr  Code            Source

 2396:				        top_ma  op,r1,tall_0a,<flags>
 2397:
 2398:				        eot     'a',tall_0a
 2399:
 2400:				        top_ma  op,r2,tall_0b,<flags>
 2401:				        top_ma  op,r3,tall_0b,<flags>
 2402:
 2403:				        eot     'b',tall_0b
 2404:
 2405:				        top_ma  op,r4,tall_0c,<flags>
 2406:				        top_ma  op,r5,tall_0c,<flags>
 2407:
 2408:				        eot     'c',tall_0c
 2409:
 2410:				        top_ma  op,r6,tall_0d,<flags>
 2411:				        top_ma  op,r7,tall_0d,<flags>
 2412:
 2413:				        eot     'd',tall_0d
 2414:				        ; Ok, <op> A, {dir | @Ri | Rn} done.
 2415:
 2416:				        ; Optionally test immediate addressing modes.
 2417:
 2418:				        if      (am and 1) ne 0
 2419:				        ; Test <op> A, #arg1...
 2420:				        top_mb  op,a,tall_1,<flags>
 2421:				        eot     'e',tall_1
 2422:				        endif
 2423:
 2424:				        if      (am and 2) ne 0
 2425:				        ; ...and <op> dir, #arg1
 2426:				        top_mb  op,dir0,tall_2,<flags>
 2427:				        eot     'f',tall_2
 2428:				        endif
 2429:
 2430:				        ; Optionally test <op> dir, A
 2431:				        if      (am and 4) ne 0
 2432:				        top_mc  op,tall_3,<flags>
 2433:				        eot     'g',tall_3
 2434:				        endif
 2435:
 2436:				        endm
 2437:
 2438:
 2439:				        ;-- Test series H ------------------------------------------------------
 2440:				        ; ANL
 2441:				        ; (See comments for 'ALU opcode block test')
 2442:
 2443:				        putc    #'H'                ; start of test series
 2444+ 1  0941			??0216:
 2445+ 1			        ;jnb     SCON.1,putc_loop
 2446+ 1			        ;clr     SCON.1
 2447+ 1  0941	75 99 48	        mov     SBUF,#'H'
 2448:
 2449:				        tst_alu anl,03ch,099h,018h,07h,
 2450+ 1			        ; Put the argument and result data into variables for easier access
 2451+ 1	N      003C	        arg0    set 03ch

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 45



 Line  I  Addr  Code            Source

 2452+ 1	N      0099	        arg1    set 099h
 2453+ 1	N      0018	        res     set 018h
 2454+ 1
 2455+ 1			        ; Test <op> A, dir
 2456+ 1			        top_ma  anl,dir0,??0218,<>
 2457+ 2  0944	75 60 3C	        mov     dir0,#arg0
 2458+ 2  0947	74 99		        mov     a,#arg1
 2459+ 2			        ifnb    <>
 2460+ 2			        set_cy
 2461+ 2			        endif
 2462+ 2  0949	55 60		        anl      a,dir0
 2463+ 2			        ifnb    <>
 2464+ 2			        save_psw
 2465+ 2			        endif
 2466+ 2  094B	B4 18 29	        cjne    a,#res,??0218
 2467+ 2			        ifnb    <>
 2468+ 2			        tst_psw <>,??0218
 2469+ 2			        endif
 2470+ 1			        ; Test <op> A, @R0
 2471+ 1  094E	78 60		        mov     r0,#dir0
 2472+ 1			        top_ma  anl,@r0,??0218,<>
 2473+ 2  0950	76 3C		        mov     @r0,#arg0
 2474+ 2  0952	74 99		        mov     a,#arg1
 2475+ 2			        ifnb    <>
 2476+ 2			        set_cy
 2477+ 2			        endif
 2478+ 2  0954	56		        anl      a,@r0
 2479+ 2			        ifnb    <>
 2480+ 2			        save_psw
 2481+ 2			        endif
 2482+ 2  0955	B4 18 1F	        cjne    a,#res,??0218
 2483+ 2			        ifnb    <>
 2484+ 2			        tst_psw <>,??0218
 2485+ 2			        endif
 2486+ 1			        ; Test <op> A, @R1
 2487+ 1  0958	79 31		        mov     r1,#031h
 2488+ 1			        top_ma  anl,@r1,??0218,<>
 2489+ 2  095A	77 3C		        mov     @r1,#arg0
 2490+ 2  095C	74 99		        mov     a,#arg1
 2491+ 2			        ifnb    <>
 2492+ 2			        set_cy
 2493+ 2			        endif
 2494+ 2  095E	57		        anl      a,@r1
 2495+ 2			        ifnb    <>
 2496+ 2			        save_psw
 2497+ 2			        endif
 2498+ 2  095F	B4 18 15	        cjne    a,#res,??0218
 2499+ 2			        ifnb    <>
 2500+ 2			        tst_psw <>,??0218
 2501+ 2			        endif
 2502+ 1
 2503+ 1			        ; Now test <op> A, Rn for n in 0..7
 2504+ 1			        top_ma  anl,r0,??0218,<>
 2505+ 2  0962	78 3C		        mov     r0,#arg0
 2506+ 2  0964	74 99		        mov     a,#arg1
 2507+ 2			        ifnb    <>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 46



 Line  I  Addr  Code            Source

 2508+ 2			        set_cy
 2509+ 2			        endif
 2510+ 2  0966	58		        anl      a,r0
 2511+ 2			        ifnb    <>
 2512+ 2			        save_psw
 2513+ 2			        endif
 2514+ 2  0967	B4 18 0D	        cjne    a,#res,??0218
 2515+ 2			        ifnb    <>
 2516+ 2			        tst_psw <>,??0218
 2517+ 2			        endif
 2518+ 1			        top_ma  anl,r1,??0218,<>
 2519+ 2  096A	79 3C		        mov     r1,#arg0
 2520+ 2  096C	74 99		        mov     a,#arg1
 2521+ 2			        ifnb    <>
 2522+ 2			        set_cy
 2523+ 2			        endif
 2524+ 2  096E	59		        anl      a,r1
 2525+ 2			        ifnb    <>
 2526+ 2			        save_psw
 2527+ 2			        endif
 2528+ 2  096F	B4 18 05	        cjne    a,#res,??0218
 2529+ 2			        ifnb    <>
 2530+ 2			        tst_psw <>,??0218
 2531+ 2			        endif
 2532+ 1
 2533+ 1			        eot     'a',??0218
 2534+ 2			        putc    #'a'
 2535+ 3  0972			??0225:
 2536+ 3			        ;jnb     SCON.1,putc_loop
 2537+ 3			        ;clr     SCON.1
 2538+ 3  0972	75 99 61	        mov     SBUF,#'a'
 2539+ 2  0975	80 06		        sjmp    ??0224
 2540+ 2  0977			??0218:  putc    #'?'
 2541+ 3  0977			??0226:
 2542+ 3			        ;jnb     SCON.1,putc_loop
 2543+ 3			        ;clr     SCON.1
 2544+ 3  0977	75 99 3F	        mov     SBUF,#'?'
 2545+ 2  097A	75 6E 01	        mov     fail,#001h
 2546+ 2  097D			??0224:
 2547+ 1
 2548+ 1			        top_ma  anl,r2,??0219,<>
 2549+ 2  097D	7A 3C		        mov     r2,#arg0
 2550+ 2  097F	74 99		        mov     a,#arg1
 2551+ 2			        ifnb    <>
 2552+ 2			        set_cy
 2553+ 2			        endif
 2554+ 2  0981	5A		        anl      a,r2
 2555+ 2			        ifnb    <>
 2556+ 2			        save_psw
 2557+ 2			        endif
 2558+ 2  0982	B4 18 0D	        cjne    a,#res,??0219
 2559+ 2			        ifnb    <>
 2560+ 2			        tst_psw <>,??0219
 2561+ 2			        endif
 2562+ 1			        top_ma  anl,r3,??0219,<>
 2563+ 2  0985	7B 3C		        mov     r3,#arg0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 47



 Line  I  Addr  Code            Source

 2564+ 2  0987	74 99		        mov     a,#arg1
 2565+ 2			        ifnb    <>
 2566+ 2			        set_cy
 2567+ 2			        endif
 2568+ 2  0989	5B		        anl      a,r3
 2569+ 2			        ifnb    <>
 2570+ 2			        save_psw
 2571+ 2			        endif
 2572+ 2  098A	B4 18 05	        cjne    a,#res,??0219
 2573+ 2			        ifnb    <>
 2574+ 2			        tst_psw <>,??0219
 2575+ 2			        endif
 2576+ 1
 2577+ 1			        eot     'b',??0219
 2578+ 2			        putc    #'b'
 2579+ 3  098D			??0228:
 2580+ 3			        ;jnb     SCON.1,putc_loop
 2581+ 3			        ;clr     SCON.1
 2582+ 3  098D	75 99 62	        mov     SBUF,#'b'
 2583+ 2  0990	80 06		        sjmp    ??0227
 2584+ 2  0992			??0219:  putc    #'?'
 2585+ 3  0992			??0229:
 2586+ 3			        ;jnb     SCON.1,putc_loop
 2587+ 3			        ;clr     SCON.1
 2588+ 3  0992	75 99 3F	        mov     SBUF,#'?'
 2589+ 2  0995	75 6E 01	        mov     fail,#001h
 2590+ 2  0998			??0227:
 2591+ 1
 2592+ 1			        top_ma  anl,r4,??0220,<>
 2593+ 2  0998	7C 3C		        mov     r4,#arg0
 2594+ 2  099A	74 99		        mov     a,#arg1
 2595+ 2			        ifnb    <>
 2596+ 2			        set_cy
 2597+ 2			        endif
 2598+ 2  099C	5C		        anl      a,r4
 2599+ 2			        ifnb    <>
 2600+ 2			        save_psw
 2601+ 2			        endif
 2602+ 2  099D	B4 18 0D	        cjne    a,#res,??0220
 2603+ 2			        ifnb    <>
 2604+ 2			        tst_psw <>,??0220
 2605+ 2			        endif
 2606+ 1			        top_ma  anl,r5,??0220,<>
 2607+ 2  09A0	7D 3C		        mov     r5,#arg0
 2608+ 2  09A2	74 99		        mov     a,#arg1
 2609+ 2			        ifnb    <>
 2610+ 2			        set_cy
 2611+ 2			        endif
 2612+ 2  09A4	5D		        anl      a,r5
 2613+ 2			        ifnb    <>
 2614+ 2			        save_psw
 2615+ 2			        endif
 2616+ 2  09A5	B4 18 05	        cjne    a,#res,??0220
 2617+ 2			        ifnb    <>
 2618+ 2			        tst_psw <>,??0220
 2619+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 48



 Line  I  Addr  Code            Source

 2620+ 1
 2621+ 1			        eot     'c',??0220
 2622+ 2			        putc    #'c'
 2623+ 3  09A8			??0231:
 2624+ 3			        ;jnb     SCON.1,putc_loop
 2625+ 3			        ;clr     SCON.1
 2626+ 3  09A8	75 99 63	        mov     SBUF,#'c'
 2627+ 2  09AB	80 06		        sjmp    ??0230
 2628+ 2  09AD			??0220:  putc    #'?'
 2629+ 3  09AD			??0232:
 2630+ 3			        ;jnb     SCON.1,putc_loop
 2631+ 3			        ;clr     SCON.1
 2632+ 3  09AD	75 99 3F	        mov     SBUF,#'?'
 2633+ 2  09B0	75 6E 01	        mov     fail,#001h
 2634+ 2  09B3			??0230:
 2635+ 1
 2636+ 1			        top_ma  anl,r6,??0217,<>
 2637+ 2  09B3	7E 3C		        mov     r6,#arg0
 2638+ 2  09B5	74 99		        mov     a,#arg1
 2639+ 2			        ifnb    <>
 2640+ 2			        set_cy
 2641+ 2			        endif
 2642+ 2  09B7	5E		        anl      a,r6
 2643+ 2			        ifnb    <>
 2644+ 2			        save_psw
 2645+ 2			        endif
 2646+ 2  09B8	B4 18 0D	        cjne    a,#res,??0217
 2647+ 2			        ifnb    <>
 2648+ 2			        tst_psw <>,??0217
 2649+ 2			        endif
 2650+ 1			        top_ma  anl,r7,??0217,<>
 2651+ 2  09BB	7F 3C		        mov     r7,#arg0
 2652+ 2  09BD	74 99		        mov     a,#arg1
 2653+ 2			        ifnb    <>
 2654+ 2			        set_cy
 2655+ 2			        endif
 2656+ 2  09BF	5F		        anl      a,r7
 2657+ 2			        ifnb    <>
 2658+ 2			        save_psw
 2659+ 2			        endif
 2660+ 2  09C0	B4 18 05	        cjne    a,#res,??0217
 2661+ 2			        ifnb    <>
 2662+ 2			        tst_psw <>,??0217
 2663+ 2			        endif
 2664+ 1
 2665+ 1			        eot     'd',??0217
 2666+ 2			        putc    #'d'
 2667+ 3  09C3			??0234:
 2668+ 3			        ;jnb     SCON.1,putc_loop
 2669+ 3			        ;clr     SCON.1
 2670+ 3  09C3	75 99 64	        mov     SBUF,#'d'
 2671+ 2  09C6	80 06		        sjmp    ??0233
 2672+ 2  09C8			??0217:  putc    #'?'
 2673+ 3  09C8			??0235:
 2674+ 3			        ;jnb     SCON.1,putc_loop
 2675+ 3			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 49



 Line  I  Addr  Code            Source

 2676+ 3  09C8	75 99 3F	        mov     SBUF,#'?'
 2677+ 2  09CB	75 6E 01	        mov     fail,#001h
 2678+ 2  09CE			??0233:
 2679+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 2680+ 1
 2681+ 1			        ; Optionally test immediate addressing modes.
 2682+ 1
 2683+ 1	N      FFFF	        if      (07h and 1) ne 0
 2684+ 1			        ; Test <op> A, #arg1...
 2685+ 1			        top_mb  anl,a,??0221,<>
 2686+ 2  09CE	74 99		        mov     a,#arg1
 2687+ 2			        ifnb    <>
 2688+ 2			        set_cy
 2689+ 2			        endif
 2690+ 2  09D0	54 3C		        anl      a,#arg0
 2691+ 2			        ifnb    <>
 2692+ 2			        save_psw
 2693+ 2			        endif
 2694+ 2  09D2	F5 E0		        mov     ACC,a
 2695+ 2  09D4	B4 18 05	        cjne    a,#res,??0221
 2696+ 2			        ifnb    <>
 2697+ 2			        tst_psw <>,??0221
 2698+ 2			        endif
 2699+ 1			        eot     'e',??0221
 2700+ 2			        putc    #'e'
 2701+ 3  09D7			??0237:
 2702+ 3			        ;jnb     SCON.1,putc_loop
 2703+ 3			        ;clr     SCON.1
 2704+ 3  09D7	75 99 65	        mov     SBUF,#'e'
 2705+ 2  09DA	80 06		        sjmp    ??0236
 2706+ 2  09DC			??0221:  putc    #'?'
 2707+ 3  09DC			??0238:
 2708+ 3			        ;jnb     SCON.1,putc_loop
 2709+ 3			        ;clr     SCON.1
 2710+ 3  09DC	75 99 3F	        mov     SBUF,#'?'
 2711+ 2  09DF	75 6E 01	        mov     fail,#001h
 2712+ 2  09E2			??0236:
 2713+ 1			        endif
 2714+ 1
 2715+ 1	N      FFFF	        if      (07h and 2) ne 0
 2716+ 1			        ; ...and <op> dir, #arg1
 2717+ 1			        top_mb  anl,dir0,??0222,<>
 2718+ 2  09E2	75 60 99	        mov     dir0,#arg1
 2719+ 2			        ifnb    <>
 2720+ 2			        set_cy
 2721+ 2			        endif
 2722+ 2  09E5	53 60 3C	        anl      dir0,#arg0
 2723+ 2			        ifnb    <>
 2724+ 2			        save_psw
 2725+ 2			        endif
 2726+ 2  09E8	85 60 E0	        mov     ACC,dir0
 2727+ 2  09EB	B4 18 05	        cjne    a,#res,??0222
 2728+ 2			        ifnb    <>
 2729+ 2			        tst_psw <>,??0222
 2730+ 2			        endif
 2731+ 1			        eot     'f',??0222

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 50



 Line  I  Addr  Code            Source

 2732+ 2			        putc    #'f'
 2733+ 3  09EE			??0240:
 2734+ 3			        ;jnb     SCON.1,putc_loop
 2735+ 3			        ;clr     SCON.1
 2736+ 3  09EE	75 99 66	        mov     SBUF,#'f'
 2737+ 2  09F1	80 06		        sjmp    ??0239
 2738+ 2  09F3			??0222:  putc    #'?'
 2739+ 3  09F3			??0241:
 2740+ 3			        ;jnb     SCON.1,putc_loop
 2741+ 3			        ;clr     SCON.1
 2742+ 3  09F3	75 99 3F	        mov     SBUF,#'?'
 2743+ 2  09F6	75 6E 01	        mov     fail,#001h
 2744+ 2  09F9			??0239:
 2745+ 1			        endif
 2746+ 1
 2747+ 1			        ; Optionally test <op> dir, A
 2748+ 1	N      FFFF	        if      (07h and 4) ne 0
 2749+ 1			        top_mc  anl,??0223,<>
 2750+ 2  09F9	75 60 3C	        mov     dir0,#arg0
 2751+ 2  09FC	74 99		        mov     a,#arg1
 2752+ 2			        ifnb    <>
 2753+ 2			        set_cy
 2754+ 2			        endif
 2755+ 2  09FE	52 60		        anl      dir0,a
 2756+ 2			        ifnb    <>
 2757+ 2			        save_psw
 2758+ 2			        endif
 2759+ 2  0A00	E5 60		        mov     a,dir0
 2760+ 2  0A02	B4 18 05	        cjne    a,#res,??0223
 2761+ 2			        ifnb    <>
 2762+ 2			        tst_psw <>,??0223
 2763+ 2			        endif
 2764+ 1			        eot     'g',??0223
 2765+ 2			        putc    #'g'
 2766+ 3  0A05			??0243:
 2767+ 3			        ;jnb     SCON.1,putc_loop
 2768+ 3			        ;clr     SCON.1
 2769+ 3  0A05	75 99 67	        mov     SBUF,#'g'
 2770+ 2  0A08	80 06		        sjmp    ??0242
 2771+ 2  0A0A			??0223:  putc    #'?'
 2772+ 3  0A0A			??0244:
 2773+ 3			        ;jnb     SCON.1,putc_loop
 2774+ 3			        ;clr     SCON.1
 2775+ 3  0A0A	75 99 3F	        mov     SBUF,#'?'
 2776+ 2  0A0D	75 6E 01	        mov     fail,#001h
 2777+ 2  0A10			??0242:
 2778+ 1			        endif
 2779+ 1
 2780:
 2781:				        put_crlf                    ; end of test series
 2782+ 1			        putc    #13
 2783+ 2  0A10			??0245:
 2784+ 2			        ;jnb     SCON.1,putc_loop
 2785+ 2			        ;clr     SCON.1
 2786+ 2  0A10	75 99 0D	        mov     SBUF,#13
 2787+ 1			        putc    #10

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 51



 Line  I  Addr  Code            Source

 2788+ 2  0A13			??0246:
 2789+ 2			        ;jnb     SCON.1,putc_loop
 2790+ 2			        ;clr     SCON.1
 2791+ 2  0A13	75 99 0A	        mov     SBUF,#10
 2792:
 2793:
 2794:				        ;-- Test series I ------------------------------------------------------
 2795:				        ; ORL
 2796:				        ; (See comments for 'ALU opcode block test')
 2797:
 2798:				        putc    #'I'                ; start of test series
 2799+ 1  0A16			??0247:
 2800+ 1			        ;jnb     SCON.1,putc_loop
 2801+ 1			        ;clr     SCON.1
 2802+ 1  0A16	75 99 49	        mov     SBUF,#'I'
 2803:
 2804:				        tst_alu orl,051h,092h,0d3h,07h,
 2805+ 1			        ; Put the argument and result data into variables for easier access
 2806+ 1	N      0051	        arg0    set 051h
 2807+ 1	N      0092	        arg1    set 092h
 2808+ 1	N      00D3	        res     set 0d3h
 2809+ 1
 2810+ 1			        ; Test <op> A, dir
 2811+ 1			        top_ma  orl,dir0,??0249,<>
 2812+ 2  0A19	75 60 51	        mov     dir0,#arg0
 2813+ 2  0A1C	74 92		        mov     a,#arg1
 2814+ 2			        ifnb    <>
 2815+ 2			        set_cy
 2816+ 2			        endif
 2817+ 2  0A1E	45 60		        orl      a,dir0
 2818+ 2			        ifnb    <>
 2819+ 2			        save_psw
 2820+ 2			        endif
 2821+ 2  0A20	B4 D3 29	        cjne    a,#res,??0249
 2822+ 2			        ifnb    <>
 2823+ 2			        tst_psw <>,??0249
 2824+ 2			        endif
 2825+ 1			        ; Test <op> A, @R0
 2826+ 1  0A23	78 60		        mov     r0,#dir0
 2827+ 1			        top_ma  orl,@r0,??0249,<>
 2828+ 2  0A25	76 51		        mov     @r0,#arg0
 2829+ 2  0A27	74 92		        mov     a,#arg1
 2830+ 2			        ifnb    <>
 2831+ 2			        set_cy
 2832+ 2			        endif
 2833+ 2  0A29	46		        orl      a,@r0
 2834+ 2			        ifnb    <>
 2835+ 2			        save_psw
 2836+ 2			        endif
 2837+ 2  0A2A	B4 D3 1F	        cjne    a,#res,??0249
 2838+ 2			        ifnb    <>
 2839+ 2			        tst_psw <>,??0249
 2840+ 2			        endif
 2841+ 1			        ; Test <op> A, @R1
 2842+ 1  0A2D	79 31		        mov     r1,#031h
 2843+ 1			        top_ma  orl,@r1,??0249,<>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 52



 Line  I  Addr  Code            Source

 2844+ 2  0A2F	77 51		        mov     @r1,#arg0
 2845+ 2  0A31	74 92		        mov     a,#arg1
 2846+ 2			        ifnb    <>
 2847+ 2			        set_cy
 2848+ 2			        endif
 2849+ 2  0A33	47		        orl      a,@r1
 2850+ 2			        ifnb    <>
 2851+ 2			        save_psw
 2852+ 2			        endif
 2853+ 2  0A34	B4 D3 15	        cjne    a,#res,??0249
 2854+ 2			        ifnb    <>
 2855+ 2			        tst_psw <>,??0249
 2856+ 2			        endif
 2857+ 1
 2858+ 1			        ; Now test <op> A, Rn for n in 0..7
 2859+ 1			        top_ma  orl,r0,??0249,<>
 2860+ 2  0A37	78 51		        mov     r0,#arg0
 2861+ 2  0A39	74 92		        mov     a,#arg1
 2862+ 2			        ifnb    <>
 2863+ 2			        set_cy
 2864+ 2			        endif
 2865+ 2  0A3B	48		        orl      a,r0
 2866+ 2			        ifnb    <>
 2867+ 2			        save_psw
 2868+ 2			        endif
 2869+ 2  0A3C	B4 D3 0D	        cjne    a,#res,??0249
 2870+ 2			        ifnb    <>
 2871+ 2			        tst_psw <>,??0249
 2872+ 2			        endif
 2873+ 1			        top_ma  orl,r1,??0249,<>
 2874+ 2  0A3F	79 51		        mov     r1,#arg0
 2875+ 2  0A41	74 92		        mov     a,#arg1
 2876+ 2			        ifnb    <>
 2877+ 2			        set_cy
 2878+ 2			        endif
 2879+ 2  0A43	49		        orl      a,r1
 2880+ 2			        ifnb    <>
 2881+ 2			        save_psw
 2882+ 2			        endif
 2883+ 2  0A44	B4 D3 05	        cjne    a,#res,??0249
 2884+ 2			        ifnb    <>
 2885+ 2			        tst_psw <>,??0249
 2886+ 2			        endif
 2887+ 1
 2888+ 1			        eot     'a',??0249
 2889+ 2			        putc    #'a'
 2890+ 3  0A47			??0256:
 2891+ 3			        ;jnb     SCON.1,putc_loop
 2892+ 3			        ;clr     SCON.1
 2893+ 3  0A47	75 99 61	        mov     SBUF,#'a'
 2894+ 2  0A4A	80 06		        sjmp    ??0255
 2895+ 2  0A4C			??0249:  putc    #'?'
 2896+ 3  0A4C			??0257:
 2897+ 3			        ;jnb     SCON.1,putc_loop
 2898+ 3			        ;clr     SCON.1
 2899+ 3  0A4C	75 99 3F	        mov     SBUF,#'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 53



 Line  I  Addr  Code            Source

 2900+ 2  0A4F	75 6E 01	        mov     fail,#001h
 2901+ 2  0A52			??0255:
 2902+ 1
 2903+ 1			        top_ma  orl,r2,??0250,<>
 2904+ 2  0A52	7A 51		        mov     r2,#arg0
 2905+ 2  0A54	74 92		        mov     a,#arg1
 2906+ 2			        ifnb    <>
 2907+ 2			        set_cy
 2908+ 2			        endif
 2909+ 2  0A56	4A		        orl      a,r2
 2910+ 2			        ifnb    <>
 2911+ 2			        save_psw
 2912+ 2			        endif
 2913+ 2  0A57	B4 D3 0D	        cjne    a,#res,??0250
 2914+ 2			        ifnb    <>
 2915+ 2			        tst_psw <>,??0250
 2916+ 2			        endif
 2917+ 1			        top_ma  orl,r3,??0250,<>
 2918+ 2  0A5A	7B 51		        mov     r3,#arg0
 2919+ 2  0A5C	74 92		        mov     a,#arg1
 2920+ 2			        ifnb    <>
 2921+ 2			        set_cy
 2922+ 2			        endif
 2923+ 2  0A5E	4B		        orl      a,r3
 2924+ 2			        ifnb    <>
 2925+ 2			        save_psw
 2926+ 2			        endif
 2927+ 2  0A5F	B4 D3 05	        cjne    a,#res,??0250
 2928+ 2			        ifnb    <>
 2929+ 2			        tst_psw <>,??0250
 2930+ 2			        endif
 2931+ 1
 2932+ 1			        eot     'b',??0250
 2933+ 2			        putc    #'b'
 2934+ 3  0A62			??0259:
 2935+ 3			        ;jnb     SCON.1,putc_loop
 2936+ 3			        ;clr     SCON.1
 2937+ 3  0A62	75 99 62	        mov     SBUF,#'b'
 2938+ 2  0A65	80 06		        sjmp    ??0258
 2939+ 2  0A67			??0250:  putc    #'?'
 2940+ 3  0A67			??0260:
 2941+ 3			        ;jnb     SCON.1,putc_loop
 2942+ 3			        ;clr     SCON.1
 2943+ 3  0A67	75 99 3F	        mov     SBUF,#'?'
 2944+ 2  0A6A	75 6E 01	        mov     fail,#001h
 2945+ 2  0A6D			??0258:
 2946+ 1
 2947+ 1			        top_ma  orl,r4,??0251,<>
 2948+ 2  0A6D	7C 51		        mov     r4,#arg0
 2949+ 2  0A6F	74 92		        mov     a,#arg1
 2950+ 2			        ifnb    <>
 2951+ 2			        set_cy
 2952+ 2			        endif
 2953+ 2  0A71	4C		        orl      a,r4
 2954+ 2			        ifnb    <>
 2955+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 54



 Line  I  Addr  Code            Source

 2956+ 2			        endif
 2957+ 2  0A72	B4 D3 0D	        cjne    a,#res,??0251
 2958+ 2			        ifnb    <>
 2959+ 2			        tst_psw <>,??0251
 2960+ 2			        endif
 2961+ 1			        top_ma  orl,r5,??0251,<>
 2962+ 2  0A75	7D 51		        mov     r5,#arg0
 2963+ 2  0A77	74 92		        mov     a,#arg1
 2964+ 2			        ifnb    <>
 2965+ 2			        set_cy
 2966+ 2			        endif
 2967+ 2  0A79	4D		        orl      a,r5
 2968+ 2			        ifnb    <>
 2969+ 2			        save_psw
 2970+ 2			        endif
 2971+ 2  0A7A	B4 D3 05	        cjne    a,#res,??0251
 2972+ 2			        ifnb    <>
 2973+ 2			        tst_psw <>,??0251
 2974+ 2			        endif
 2975+ 1
 2976+ 1			        eot     'c',??0251
 2977+ 2			        putc    #'c'
 2978+ 3  0A7D			??0262:
 2979+ 3			        ;jnb     SCON.1,putc_loop
 2980+ 3			        ;clr     SCON.1
 2981+ 3  0A7D	75 99 63	        mov     SBUF,#'c'
 2982+ 2  0A80	80 06		        sjmp    ??0261
 2983+ 2  0A82			??0251:  putc    #'?'
 2984+ 3  0A82			??0263:
 2985+ 3			        ;jnb     SCON.1,putc_loop
 2986+ 3			        ;clr     SCON.1
 2987+ 3  0A82	75 99 3F	        mov     SBUF,#'?'
 2988+ 2  0A85	75 6E 01	        mov     fail,#001h
 2989+ 2  0A88			??0261:
 2990+ 1
 2991+ 1			        top_ma  orl,r6,??0248,<>
 2992+ 2  0A88	7E 51		        mov     r6,#arg0
 2993+ 2  0A8A	74 92		        mov     a,#arg1
 2994+ 2			        ifnb    <>
 2995+ 2			        set_cy
 2996+ 2			        endif
 2997+ 2  0A8C	4E		        orl      a,r6
 2998+ 2			        ifnb    <>
 2999+ 2			        save_psw
 3000+ 2			        endif
 3001+ 2  0A8D	B4 D3 0D	        cjne    a,#res,??0248
 3002+ 2			        ifnb    <>
 3003+ 2			        tst_psw <>,??0248
 3004+ 2			        endif
 3005+ 1			        top_ma  orl,r7,??0248,<>
 3006+ 2  0A90	7F 51		        mov     r7,#arg0
 3007+ 2  0A92	74 92		        mov     a,#arg1
 3008+ 2			        ifnb    <>
 3009+ 2			        set_cy
 3010+ 2			        endif
 3011+ 2  0A94	4F		        orl      a,r7

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 55



 Line  I  Addr  Code            Source

 3012+ 2			        ifnb    <>
 3013+ 2			        save_psw
 3014+ 2			        endif
 3015+ 2  0A95	B4 D3 05	        cjne    a,#res,??0248
 3016+ 2			        ifnb    <>
 3017+ 2			        tst_psw <>,??0248
 3018+ 2			        endif
 3019+ 1
 3020+ 1			        eot     'd',??0248
 3021+ 2			        putc    #'d'
 3022+ 3  0A98			??0265:
 3023+ 3			        ;jnb     SCON.1,putc_loop
 3024+ 3			        ;clr     SCON.1
 3025+ 3  0A98	75 99 64	        mov     SBUF,#'d'
 3026+ 2  0A9B	80 06		        sjmp    ??0264
 3027+ 2  0A9D			??0248:  putc    #'?'
 3028+ 3  0A9D			??0266:
 3029+ 3			        ;jnb     SCON.1,putc_loop
 3030+ 3			        ;clr     SCON.1
 3031+ 3  0A9D	75 99 3F	        mov     SBUF,#'?'
 3032+ 2  0AA0	75 6E 01	        mov     fail,#001h
 3033+ 2  0AA3			??0264:
 3034+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 3035+ 1
 3036+ 1			        ; Optionally test immediate addressing modes.
 3037+ 1
 3038+ 1	N      FFFF	        if      (07h and 1) ne 0
 3039+ 1			        ; Test <op> A, #arg1...
 3040+ 1			        top_mb  orl,a,??0252,<>
 3041+ 2  0AA3	74 92		        mov     a,#arg1
 3042+ 2			        ifnb    <>
 3043+ 2			        set_cy
 3044+ 2			        endif
 3045+ 2  0AA5	44 51		        orl      a,#arg0
 3046+ 2			        ifnb    <>
 3047+ 2			        save_psw
 3048+ 2			        endif
 3049+ 2  0AA7	F5 E0		        mov     ACC,a
 3050+ 2  0AA9	B4 D3 05	        cjne    a,#res,??0252
 3051+ 2			        ifnb    <>
 3052+ 2			        tst_psw <>,??0252
 3053+ 2			        endif
 3054+ 1			        eot     'e',??0252
 3055+ 2			        putc    #'e'
 3056+ 3  0AAC			??0268:
 3057+ 3			        ;jnb     SCON.1,putc_loop
 3058+ 3			        ;clr     SCON.1
 3059+ 3  0AAC	75 99 65	        mov     SBUF,#'e'
 3060+ 2  0AAF	80 06		        sjmp    ??0267
 3061+ 2  0AB1			??0252:  putc    #'?'
 3062+ 3  0AB1			??0269:
 3063+ 3			        ;jnb     SCON.1,putc_loop
 3064+ 3			        ;clr     SCON.1
 3065+ 3  0AB1	75 99 3F	        mov     SBUF,#'?'
 3066+ 2  0AB4	75 6E 01	        mov     fail,#001h
 3067+ 2  0AB7			??0267:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 56



 Line  I  Addr  Code            Source

 3068+ 1			        endif
 3069+ 1
 3070+ 1	N      FFFF	        if      (07h and 2) ne 0
 3071+ 1			        ; ...and <op> dir, #arg1
 3072+ 1			        top_mb  orl,dir0,??0253,<>
 3073+ 2  0AB7	75 60 92	        mov     dir0,#arg1
 3074+ 2			        ifnb    <>
 3075+ 2			        set_cy
 3076+ 2			        endif
 3077+ 2  0ABA	43 60 51	        orl      dir0,#arg0
 3078+ 2			        ifnb    <>
 3079+ 2			        save_psw
 3080+ 2			        endif
 3081+ 2  0ABD	85 60 E0	        mov     ACC,dir0
 3082+ 2  0AC0	B4 D3 05	        cjne    a,#res,??0253
 3083+ 2			        ifnb    <>
 3084+ 2			        tst_psw <>,??0253
 3085+ 2			        endif
 3086+ 1			        eot     'f',??0253
 3087+ 2			        putc    #'f'
 3088+ 3  0AC3			??0271:
 3089+ 3			        ;jnb     SCON.1,putc_loop
 3090+ 3			        ;clr     SCON.1
 3091+ 3  0AC3	75 99 66	        mov     SBUF,#'f'
 3092+ 2  0AC6	80 06		        sjmp    ??0270
 3093+ 2  0AC8			??0253:  putc    #'?'
 3094+ 3  0AC8			??0272:
 3095+ 3			        ;jnb     SCON.1,putc_loop
 3096+ 3			        ;clr     SCON.1
 3097+ 3  0AC8	75 99 3F	        mov     SBUF,#'?'
 3098+ 2  0ACB	75 6E 01	        mov     fail,#001h
 3099+ 2  0ACE			??0270:
 3100+ 1			        endif
 3101+ 1
 3102+ 1			        ; Optionally test <op> dir, A
 3103+ 1	N      FFFF	        if      (07h and 4) ne 0
 3104+ 1			        top_mc  orl,??0254,<>
 3105+ 2  0ACE	75 60 51	        mov     dir0,#arg0
 3106+ 2  0AD1	74 92		        mov     a,#arg1
 3107+ 2			        ifnb    <>
 3108+ 2			        set_cy
 3109+ 2			        endif
 3110+ 2  0AD3	42 60		        orl      dir0,a
 3111+ 2			        ifnb    <>
 3112+ 2			        save_psw
 3113+ 2			        endif
 3114+ 2  0AD5	E5 60		        mov     a,dir0
 3115+ 2  0AD7	B4 D3 05	        cjne    a,#res,??0254
 3116+ 2			        ifnb    <>
 3117+ 2			        tst_psw <>,??0254
 3118+ 2			        endif
 3119+ 1			        eot     'g',??0254
 3120+ 2			        putc    #'g'
 3121+ 3  0ADA			??0274:
 3122+ 3			        ;jnb     SCON.1,putc_loop
 3123+ 3			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 57



 Line  I  Addr  Code            Source

 3124+ 3  0ADA	75 99 67	        mov     SBUF,#'g'
 3125+ 2  0ADD	80 06		        sjmp    ??0273
 3126+ 2  0ADF			??0254:  putc    #'?'
 3127+ 3  0ADF			??0275:
 3128+ 3			        ;jnb     SCON.1,putc_loop
 3129+ 3			        ;clr     SCON.1
 3130+ 3  0ADF	75 99 3F	        mov     SBUF,#'?'
 3131+ 2  0AE2	75 6E 01	        mov     fail,#001h
 3132+ 2  0AE5			??0273:
 3133+ 1			        endif
 3134+ 1
 3135:
 3136:				        put_crlf                    ; end of test series
 3137+ 1			        putc    #13
 3138+ 2  0AE5			??0276:
 3139+ 2			        ;jnb     SCON.1,putc_loop
 3140+ 2			        ;clr     SCON.1
 3141+ 2  0AE5	75 99 0D	        mov     SBUF,#13
 3142+ 1			        putc    #10
 3143+ 2  0AE8			??0277:
 3144+ 2			        ;jnb     SCON.1,putc_loop
 3145+ 2			        ;clr     SCON.1
 3146+ 2  0AE8	75 99 0A	        mov     SBUF,#10
 3147:
 3148:				        ;-- Test series J ------------------------------------------------------
 3149:				        ; XRL
 3150:				        ; (See comments for 'ALU opcode block test')
 3151:
 3152:
 3153:				        putc    #'J'                ; start of test series
 3154+ 1  0AEB			??0278:
 3155+ 1			        ;jnb     SCON.1,putc_loop
 3156+ 1			        ;clr     SCON.1
 3157+ 1  0AEB	75 99 4A	        mov     SBUF,#'J'
 3158:
 3159:				        tst_alu xrl,051h,033h,062h,07h,
 3160+ 1			        ; Put the argument and result data into variables for easier access
 3161+ 1	N      0051	        arg0    set 051h
 3162+ 1	N      0033	        arg1    set 033h
 3163+ 1	N      0062	        res     set 062h
 3164+ 1
 3165+ 1			        ; Test <op> A, dir
 3166+ 1			        top_ma  xrl,dir0,??0280,<>
 3167+ 2  0AEE	75 60 51	        mov     dir0,#arg0
 3168+ 2  0AF1	74 33		        mov     a,#arg1
 3169+ 2			        ifnb    <>
 3170+ 2			        set_cy
 3171+ 2			        endif
 3172+ 2  0AF3	65 60		        xrl      a,dir0
 3173+ 2			        ifnb    <>
 3174+ 2			        save_psw
 3175+ 2			        endif
 3176+ 2  0AF5	B4 62 29	        cjne    a,#res,??0280
 3177+ 2			        ifnb    <>
 3178+ 2			        tst_psw <>,??0280
 3179+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 58



 Line  I  Addr  Code            Source

 3180+ 1			        ; Test <op> A, @R0
 3181+ 1  0AF8	78 60		        mov     r0,#dir0
 3182+ 1			        top_ma  xrl,@r0,??0280,<>
 3183+ 2  0AFA	76 51		        mov     @r0,#arg0
 3184+ 2  0AFC	74 33		        mov     a,#arg1
 3185+ 2			        ifnb    <>
 3186+ 2			        set_cy
 3187+ 2			        endif
 3188+ 2  0AFE	66		        xrl      a,@r0
 3189+ 2			        ifnb    <>
 3190+ 2			        save_psw
 3191+ 2			        endif
 3192+ 2  0AFF	B4 62 1F	        cjne    a,#res,??0280
 3193+ 2			        ifnb    <>
 3194+ 2			        tst_psw <>,??0280
 3195+ 2			        endif
 3196+ 1			        ; Test <op> A, @R1
 3197+ 1  0B02	79 31		        mov     r1,#031h
 3198+ 1			        top_ma  xrl,@r1,??0280,<>
 3199+ 2  0B04	77 51		        mov     @r1,#arg0
 3200+ 2  0B06	74 33		        mov     a,#arg1
 3201+ 2			        ifnb    <>
 3202+ 2			        set_cy
 3203+ 2			        endif
 3204+ 2  0B08	67		        xrl      a,@r1
 3205+ 2			        ifnb    <>
 3206+ 2			        save_psw
 3207+ 2			        endif
 3208+ 2  0B09	B4 62 15	        cjne    a,#res,??0280
 3209+ 2			        ifnb    <>
 3210+ 2			        tst_psw <>,??0280
 3211+ 2			        endif
 3212+ 1
 3213+ 1			        ; Now test <op> A, Rn for n in 0..7
 3214+ 1			        top_ma  xrl,r0,??0280,<>
 3215+ 2  0B0C	78 51		        mov     r0,#arg0
 3216+ 2  0B0E	74 33		        mov     a,#arg1
 3217+ 2			        ifnb    <>
 3218+ 2			        set_cy
 3219+ 2			        endif
 3220+ 2  0B10	68		        xrl      a,r0
 3221+ 2			        ifnb    <>
 3222+ 2			        save_psw
 3223+ 2			        endif
 3224+ 2  0B11	B4 62 0D	        cjne    a,#res,??0280
 3225+ 2			        ifnb    <>
 3226+ 2			        tst_psw <>,??0280
 3227+ 2			        endif
 3228+ 1			        top_ma  xrl,r1,??0280,<>
 3229+ 2  0B14	79 51		        mov     r1,#arg0
 3230+ 2  0B16	74 33		        mov     a,#arg1
 3231+ 2			        ifnb    <>
 3232+ 2			        set_cy
 3233+ 2			        endif
 3234+ 2  0B18	69		        xrl      a,r1
 3235+ 2			        ifnb    <>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 59



 Line  I  Addr  Code            Source

 3236+ 2			        save_psw
 3237+ 2			        endif
 3238+ 2  0B19	B4 62 05	        cjne    a,#res,??0280
 3239+ 2			        ifnb    <>
 3240+ 2			        tst_psw <>,??0280
 3241+ 2			        endif
 3242+ 1
 3243+ 1			        eot     'a',??0280
 3244+ 2			        putc    #'a'
 3245+ 3  0B1C			??0287:
 3246+ 3			        ;jnb     SCON.1,putc_loop
 3247+ 3			        ;clr     SCON.1
 3248+ 3  0B1C	75 99 61	        mov     SBUF,#'a'
 3249+ 2  0B1F	80 06		        sjmp    ??0286
 3250+ 2  0B21			??0280:  putc    #'?'
 3251+ 3  0B21			??0288:
 3252+ 3			        ;jnb     SCON.1,putc_loop
 3253+ 3			        ;clr     SCON.1
 3254+ 3  0B21	75 99 3F	        mov     SBUF,#'?'
 3255+ 2  0B24	75 6E 01	        mov     fail,#001h
 3256+ 2  0B27			??0286:
 3257+ 1
 3258+ 1			        top_ma  xrl,r2,??0281,<>
 3259+ 2  0B27	7A 51		        mov     r2,#arg0
 3260+ 2  0B29	74 33		        mov     a,#arg1
 3261+ 2			        ifnb    <>
 3262+ 2			        set_cy
 3263+ 2			        endif
 3264+ 2  0B2B	6A		        xrl      a,r2
 3265+ 2			        ifnb    <>
 3266+ 2			        save_psw
 3267+ 2			        endif
 3268+ 2  0B2C	B4 62 0D	        cjne    a,#res,??0281
 3269+ 2			        ifnb    <>
 3270+ 2			        tst_psw <>,??0281
 3271+ 2			        endif
 3272+ 1			        top_ma  xrl,r3,??0281,<>
 3273+ 2  0B2F	7B 51		        mov     r3,#arg0
 3274+ 2  0B31	74 33		        mov     a,#arg1
 3275+ 2			        ifnb    <>
 3276+ 2			        set_cy
 3277+ 2			        endif
 3278+ 2  0B33	6B		        xrl      a,r3
 3279+ 2			        ifnb    <>
 3280+ 2			        save_psw
 3281+ 2			        endif
 3282+ 2  0B34	B4 62 05	        cjne    a,#res,??0281
 3283+ 2			        ifnb    <>
 3284+ 2			        tst_psw <>,??0281
 3285+ 2			        endif
 3286+ 1
 3287+ 1			        eot     'b',??0281
 3288+ 2			        putc    #'b'
 3289+ 3  0B37			??0290:
 3290+ 3			        ;jnb     SCON.1,putc_loop
 3291+ 3			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 60



 Line  I  Addr  Code            Source

 3292+ 3  0B37	75 99 62	        mov     SBUF,#'b'
 3293+ 2  0B3A	80 06		        sjmp    ??0289
 3294+ 2  0B3C			??0281:  putc    #'?'
 3295+ 3  0B3C			??0291:
 3296+ 3			        ;jnb     SCON.1,putc_loop
 3297+ 3			        ;clr     SCON.1
 3298+ 3  0B3C	75 99 3F	        mov     SBUF,#'?'
 3299+ 2  0B3F	75 6E 01	        mov     fail,#001h
 3300+ 2  0B42			??0289:
 3301+ 1
 3302+ 1			        top_ma  xrl,r4,??0282,<>
 3303+ 2  0B42	7C 51		        mov     r4,#arg0
 3304+ 2  0B44	74 33		        mov     a,#arg1
 3305+ 2			        ifnb    <>
 3306+ 2			        set_cy
 3307+ 2			        endif
 3308+ 2  0B46	6C		        xrl      a,r4
 3309+ 2			        ifnb    <>
 3310+ 2			        save_psw
 3311+ 2			        endif
 3312+ 2  0B47	B4 62 0D	        cjne    a,#res,??0282
 3313+ 2			        ifnb    <>
 3314+ 2			        tst_psw <>,??0282
 3315+ 2			        endif
 3316+ 1			        top_ma  xrl,r5,??0282,<>
 3317+ 2  0B4A	7D 51		        mov     r5,#arg0
 3318+ 2  0B4C	74 33		        mov     a,#arg1
 3319+ 2			        ifnb    <>
 3320+ 2			        set_cy
 3321+ 2			        endif
 3322+ 2  0B4E	6D		        xrl      a,r5
 3323+ 2			        ifnb    <>
 3324+ 2			        save_psw
 3325+ 2			        endif
 3326+ 2  0B4F	B4 62 05	        cjne    a,#res,??0282
 3327+ 2			        ifnb    <>
 3328+ 2			        tst_psw <>,??0282
 3329+ 2			        endif
 3330+ 1
 3331+ 1			        eot     'c',??0282
 3332+ 2			        putc    #'c'
 3333+ 3  0B52			??0293:
 3334+ 3			        ;jnb     SCON.1,putc_loop
 3335+ 3			        ;clr     SCON.1
 3336+ 3  0B52	75 99 63	        mov     SBUF,#'c'
 3337+ 2  0B55	80 06		        sjmp    ??0292
 3338+ 2  0B57			??0282:  putc    #'?'
 3339+ 3  0B57			??0294:
 3340+ 3			        ;jnb     SCON.1,putc_loop
 3341+ 3			        ;clr     SCON.1
 3342+ 3  0B57	75 99 3F	        mov     SBUF,#'?'
 3343+ 2  0B5A	75 6E 01	        mov     fail,#001h
 3344+ 2  0B5D			??0292:
 3345+ 1
 3346+ 1			        top_ma  xrl,r6,??0279,<>
 3347+ 2  0B5D	7E 51		        mov     r6,#arg0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 61



 Line  I  Addr  Code            Source

 3348+ 2  0B5F	74 33		        mov     a,#arg1
 3349+ 2			        ifnb    <>
 3350+ 2			        set_cy
 3351+ 2			        endif
 3352+ 2  0B61	6E		        xrl      a,r6
 3353+ 2			        ifnb    <>
 3354+ 2			        save_psw
 3355+ 2			        endif
 3356+ 2  0B62	B4 62 0D	        cjne    a,#res,??0279
 3357+ 2			        ifnb    <>
 3358+ 2			        tst_psw <>,??0279
 3359+ 2			        endif
 3360+ 1			        top_ma  xrl,r7,??0279,<>
 3361+ 2  0B65	7F 51		        mov     r7,#arg0
 3362+ 2  0B67	74 33		        mov     a,#arg1
 3363+ 2			        ifnb    <>
 3364+ 2			        set_cy
 3365+ 2			        endif
 3366+ 2  0B69	6F		        xrl      a,r7
 3367+ 2			        ifnb    <>
 3368+ 2			        save_psw
 3369+ 2			        endif
 3370+ 2  0B6A	B4 62 05	        cjne    a,#res,??0279
 3371+ 2			        ifnb    <>
 3372+ 2			        tst_psw <>,??0279
 3373+ 2			        endif
 3374+ 1
 3375+ 1			        eot     'd',??0279
 3376+ 2			        putc    #'d'
 3377+ 3  0B6D			??0296:
 3378+ 3			        ;jnb     SCON.1,putc_loop
 3379+ 3			        ;clr     SCON.1
 3380+ 3  0B6D	75 99 64	        mov     SBUF,#'d'
 3381+ 2  0B70	80 06		        sjmp    ??0295
 3382+ 2  0B72			??0279:  putc    #'?'
 3383+ 3  0B72			??0297:
 3384+ 3			        ;jnb     SCON.1,putc_loop
 3385+ 3			        ;clr     SCON.1
 3386+ 3  0B72	75 99 3F	        mov     SBUF,#'?'
 3387+ 2  0B75	75 6E 01	        mov     fail,#001h
 3388+ 2  0B78			??0295:
 3389+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 3390+ 1
 3391+ 1			        ; Optionally test immediate addressing modes.
 3392+ 1
 3393+ 1	N      FFFF	        if      (07h and 1) ne 0
 3394+ 1			        ; Test <op> A, #arg1...
 3395+ 1			        top_mb  xrl,a,??0283,<>
 3396+ 2  0B78	74 33		        mov     a,#arg1
 3397+ 2			        ifnb    <>
 3398+ 2			        set_cy
 3399+ 2			        endif
 3400+ 2  0B7A	64 51		        xrl      a,#arg0
 3401+ 2			        ifnb    <>
 3402+ 2			        save_psw
 3403+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 62



 Line  I  Addr  Code            Source

 3404+ 2  0B7C	F5 E0		        mov     ACC,a
 3405+ 2  0B7E	B4 62 05	        cjne    a,#res,??0283
 3406+ 2			        ifnb    <>
 3407+ 2			        tst_psw <>,??0283
 3408+ 2			        endif
 3409+ 1			        eot     'e',??0283
 3410+ 2			        putc    #'e'
 3411+ 3  0B81			??0299:
 3412+ 3			        ;jnb     SCON.1,putc_loop
 3413+ 3			        ;clr     SCON.1
 3414+ 3  0B81	75 99 65	        mov     SBUF,#'e'
 3415+ 2  0B84	80 06		        sjmp    ??0298
 3416+ 2  0B86			??0283:  putc    #'?'
 3417+ 3  0B86			??0300:
 3418+ 3			        ;jnb     SCON.1,putc_loop
 3419+ 3			        ;clr     SCON.1
 3420+ 3  0B86	75 99 3F	        mov     SBUF,#'?'
 3421+ 2  0B89	75 6E 01	        mov     fail,#001h
 3422+ 2  0B8C			??0298:
 3423+ 1			        endif
 3424+ 1
 3425+ 1	N      FFFF	        if      (07h and 2) ne 0
 3426+ 1			        ; ...and <op> dir, #arg1
 3427+ 1			        top_mb  xrl,dir0,??0284,<>
 3428+ 2  0B8C	75 60 33	        mov     dir0,#arg1
 3429+ 2			        ifnb    <>
 3430+ 2			        set_cy
 3431+ 2			        endif
 3432+ 2  0B8F	63 60 51	        xrl      dir0,#arg0
 3433+ 2			        ifnb    <>
 3434+ 2			        save_psw
 3435+ 2			        endif
 3436+ 2  0B92	85 60 E0	        mov     ACC,dir0
 3437+ 2  0B95	B4 62 05	        cjne    a,#res,??0284
 3438+ 2			        ifnb    <>
 3439+ 2			        tst_psw <>,??0284
 3440+ 2			        endif
 3441+ 1			        eot     'f',??0284
 3442+ 2			        putc    #'f'
 3443+ 3  0B98			??0302:
 3444+ 3			        ;jnb     SCON.1,putc_loop
 3445+ 3			        ;clr     SCON.1
 3446+ 3  0B98	75 99 66	        mov     SBUF,#'f'
 3447+ 2  0B9B	80 06		        sjmp    ??0301
 3448+ 2  0B9D			??0284:  putc    #'?'
 3449+ 3  0B9D			??0303:
 3450+ 3			        ;jnb     SCON.1,putc_loop
 3451+ 3			        ;clr     SCON.1
 3452+ 3  0B9D	75 99 3F	        mov     SBUF,#'?'
 3453+ 2  0BA0	75 6E 01	        mov     fail,#001h
 3454+ 2  0BA3			??0301:
 3455+ 1			        endif
 3456+ 1
 3457+ 1			        ; Optionally test <op> dir, A
 3458+ 1	N      FFFF	        if      (07h and 4) ne 0
 3459+ 1			        top_mc  xrl,??0285,<>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 63



 Line  I  Addr  Code            Source

 3460+ 2  0BA3	75 60 51	        mov     dir0,#arg0
 3461+ 2  0BA6	74 33		        mov     a,#arg1
 3462+ 2			        ifnb    <>
 3463+ 2			        set_cy
 3464+ 2			        endif
 3465+ 2  0BA8	62 60		        xrl      dir0,a
 3466+ 2			        ifnb    <>
 3467+ 2			        save_psw
 3468+ 2			        endif
 3469+ 2  0BAA	E5 60		        mov     a,dir0
 3470+ 2  0BAC	B4 62 05	        cjne    a,#res,??0285
 3471+ 2			        ifnb    <>
 3472+ 2			        tst_psw <>,??0285
 3473+ 2			        endif
 3474+ 1			        eot     'g',??0285
 3475+ 2			        putc    #'g'
 3476+ 3  0BAF			??0305:
 3477+ 3			        ;jnb     SCON.1,putc_loop
 3478+ 3			        ;clr     SCON.1
 3479+ 3  0BAF	75 99 67	        mov     SBUF,#'g'
 3480+ 2  0BB2	80 06		        sjmp    ??0304
 3481+ 2  0BB4			??0285:  putc    #'?'
 3482+ 3  0BB4			??0306:
 3483+ 3			        ;jnb     SCON.1,putc_loop
 3484+ 3			        ;clr     SCON.1
 3485+ 3  0BB4	75 99 3F	        mov     SBUF,#'?'
 3486+ 2  0BB7	75 6E 01	        mov     fail,#001h
 3487+ 2  0BBA			??0304:
 3488+ 1			        endif
 3489+ 1
 3490:
 3491:				        put_crlf                    ; end of test series
 3492+ 1			        putc    #13
 3493+ 2  0BBA			??0307:
 3494+ 2			        ;jnb     SCON.1,putc_loop
 3495+ 2			        ;clr     SCON.1
 3496+ 2  0BBA	75 99 0D	        mov     SBUF,#13
 3497+ 1			        putc    #10
 3498+ 2  0BBD			??0308:
 3499+ 2			        ;jnb     SCON.1,putc_loop
 3500+ 2			        ;clr     SCON.1
 3501+ 2  0BBD	75 99 0A	        mov     SBUF,#10
 3502:
 3503:				        ;-- Test series K ------------------------------------------------------
 3504:				        ; DJNZ
 3505:				        ; a.- <DJNZ dir,rel>, <DJNZ Rn,rel> tested only with small negative rels
 3506:
 3507:				        putc    #'K'                ; start of test series
 3508+ 1  0BC0			??0309:
 3509+ 1			        ;jnb     SCON.1,putc_loop
 3510+ 1			        ;clr     SCON.1
 3511+ 1  0BC0	75 99 4B	        mov     SBUF,#'K'
 3512:
 3513:				        ;tk_ma: test DJNZ with parametrizable addressing mode
 3514:				tk_ma   macro   dst,error_loc
 3515:				        local   tk_ma0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 64



 Line  I  Addr  Code            Source

 3516:				nloops  set     3
 3517:				        mov     dst,#nloops         ; We'll perform a fixed no. of iterations
 3518:				        mov     a,#(nloops+1)       ; A will or our control counter
 3519:				tk_ma0: dec     a
 3520:				        jz      error_loc           ; Break loop after nloops iterations
 3521:				        djnz    dst,tk_ma0          ; Test DJNZ instruction
 3522:				        cjne    a,#001,error_loc    ; Verify number of iterations is ok
 3523:				        endm
 3524:
 3525:				        tk_ma   dir0,tk_a0          ; <DJNZ dir,rel>
 3526+ 1	N      0003	nloops  set     3
 3527+ 1  0BC3	75 60 03	        mov     dir0,#nloops         ; We'll perform a fixed no. of iterations
 3528+ 1  0BC6	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3529+ 1  0BC8	14		??0310: dec     a
 3530+ 1  0BC9	60 0B		        jz      tk_a0           ; Break loop after nloops iterations
 3531+ 1  0BCB	D5 60 FA	        djnz    dir0,??0310          ; Test DJNZ instruction
 3532+ 1  0BCE	B4 01 05	        cjne    a,#001,tk_a0    ; Verify number of iterations is ok
 3533:
 3534:				        eot     'a',tk_a0
 3535+ 1			        putc    #'a'
 3536+ 2  0BD1			??0312:
 3537+ 2			        ;jnb     SCON.1,putc_loop
 3538+ 2			        ;clr     SCON.1
 3539+ 2  0BD1	75 99 61	        mov     SBUF,#'a'
 3540+ 1  0BD4	80 06		        sjmp    ??0311
 3541+ 1  0BD6			tk_a0:  putc    #'?'
 3542+ 2  0BD6			??0313:
 3543+ 2			        ;jnb     SCON.1,putc_loop
 3544+ 2			        ;clr     SCON.1
 3545+ 2  0BD6	75 99 3F	        mov     SBUF,#'?'
 3546+ 1  0BD9	75 6E 01	        mov     fail,#001h
 3547+ 1  0BDC			??0311:
 3548:
 3549:				        tk_ma   r0,tk_b0            ; <DJNZ Rn,rel>
 3550+ 1	N      0003	nloops  set     3
 3551+ 1  0BDC	78 03		        mov     r0,#nloops         ; We'll perform a fixed no. of iterations
 3552+ 1  0BDE	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3553+ 1  0BE0	14		??0314: dec     a
 3554+ 1  0BE1	60 5E		        jz      tk_b0           ; Break loop after nloops iterations
 3555+ 1  0BE3	D8 FB		        djnz    r0,??0314          ; Test DJNZ instruction
 3556+ 1  0BE5	B4 01 59	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3557:				        tk_ma   r1,tk_b0
 3558+ 1	N      0003	nloops  set     3
 3559+ 1  0BE8	79 03		        mov     r1,#nloops         ; We'll perform a fixed no. of iterations
 3560+ 1  0BEA	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3561+ 1  0BEC	14		??0315: dec     a
 3562+ 1  0BED	60 52		        jz      tk_b0           ; Break loop after nloops iterations
 3563+ 1  0BEF	D9 FB		        djnz    r1,??0315          ; Test DJNZ instruction
 3564+ 1  0BF1	B4 01 4D	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3565:				        tk_ma   r2,tk_b0
 3566+ 1	N      0003	nloops  set     3
 3567+ 1  0BF4	7A 03		        mov     r2,#nloops         ; We'll perform a fixed no. of iterations
 3568+ 1  0BF6	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3569+ 1  0BF8	14		??0316: dec     a
 3570+ 1  0BF9	60 46		        jz      tk_b0           ; Break loop after nloops iterations
 3571+ 1  0BFB	DA FB		        djnz    r2,??0316          ; Test DJNZ instruction

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 65



 Line  I  Addr  Code            Source

 3572+ 1  0BFD	B4 01 41	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3573:				        tk_ma   r3,tk_b0
 3574+ 1	N      0003	nloops  set     3
 3575+ 1  0C00	7B 03		        mov     r3,#nloops         ; We'll perform a fixed no. of iterations
 3576+ 1  0C02	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3577+ 1  0C04	14		??0317: dec     a
 3578+ 1  0C05	60 3A		        jz      tk_b0           ; Break loop after nloops iterations
 3579+ 1  0C07	DB FB		        djnz    r3,??0317          ; Test DJNZ instruction
 3580+ 1  0C09	B4 01 35	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3581:				        tk_ma   r4,tk_b0
 3582+ 1	N      0003	nloops  set     3
 3583+ 1  0C0C	7C 03		        mov     r4,#nloops         ; We'll perform a fixed no. of iterations
 3584+ 1  0C0E	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3585+ 1  0C10	14		??0318: dec     a
 3586+ 1  0C11	60 2E		        jz      tk_b0           ; Break loop after nloops iterations
 3587+ 1  0C13	DC FB		        djnz    r4,??0318          ; Test DJNZ instruction
 3588+ 1  0C15	B4 01 29	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3589:				        tk_ma   r5,tk_b0
 3590+ 1	N      0003	nloops  set     3
 3591+ 1  0C18	7D 03		        mov     r5,#nloops         ; We'll perform a fixed no. of iterations
 3592+ 1  0C1A	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3593+ 1  0C1C	14		??0319: dec     a
 3594+ 1  0C1D	60 22		        jz      tk_b0           ; Break loop after nloops iterations
 3595+ 1  0C1F	DD FB		        djnz    r5,??0319          ; Test DJNZ instruction
 3596+ 1  0C21	B4 01 1D	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3597:				        tk_ma   r6,tk_b0
 3598+ 1	N      0003	nloops  set     3
 3599+ 1  0C24	7E 03		        mov     r6,#nloops         ; We'll perform a fixed no. of iterations
 3600+ 1  0C26	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3601+ 1  0C28	14		??0320: dec     a
 3602+ 1  0C29	60 16		        jz      tk_b0           ; Break loop after nloops iterations
 3603+ 1  0C2B	DE FB		        djnz    r6,??0320          ; Test DJNZ instruction
 3604+ 1  0C2D	B4 01 11	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3605:				        tk_ma   r7,tk_b0
 3606+ 1	N      0003	nloops  set     3
 3607+ 1  0C30	7F 03		        mov     r7,#nloops         ; We'll perform a fixed no. of iterations
 3608+ 1  0C32	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3609+ 1  0C34	14		??0321: dec     a
 3610+ 1  0C35	60 0A		        jz      tk_b0           ; Break loop after nloops iterations
 3611+ 1  0C37	DF FB		        djnz    r7,??0321          ; Test DJNZ instruction
 3612+ 1  0C39	B4 01 05	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3613:
 3614:				        eot     'b',tk_b0
 3615+ 1			        putc    #'b'
 3616+ 2  0C3C			??0323:
 3617+ 2			        ;jnb     SCON.1,putc_loop
 3618+ 2			        ;clr     SCON.1
 3619+ 2  0C3C	75 99 62	        mov     SBUF,#'b'
 3620+ 1  0C3F	80 06		        sjmp    ??0322
 3621+ 1  0C41			tk_b0:  putc    #'?'
 3622+ 2  0C41			??0324:
 3623+ 2			        ;jnb     SCON.1,putc_loop
 3624+ 2			        ;clr     SCON.1
 3625+ 2  0C41	75 99 3F	        mov     SBUF,#'?'
 3626+ 1  0C44	75 6E 01	        mov     fail,#001h
 3627+ 1  0C47			??0322:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 66



 Line  I  Addr  Code            Source

 3628:
 3629:				        put_crlf                    ; end of test series
 3630+ 1			        putc    #13
 3631+ 2  0C47			??0325:
 3632+ 2			        ;jnb     SCON.1,putc_loop
 3633+ 2			        ;clr     SCON.1
 3634+ 2  0C47	75 99 0D	        mov     SBUF,#13
 3635+ 1			        putc    #10
 3636+ 2  0C4A			??0326:
 3637+ 2			        ;jnb     SCON.1,putc_loop
 3638+ 2			        ;clr     SCON.1
 3639+ 2  0C4A	75 99 0A	        mov     SBUF,#10
 3640:
 3641:
 3642:				        ;-- Test series L ------------------------------------------------------
 3643:				        ; ADD
 3644:				        ; (See comments for 'ALU opcode block test')
 3645:
 3646:
 3647:				        putc    #'L'                ; start of test series
 3648+ 1  0C4D			??0327:
 3649+ 1			        ;jnb     SCON.1,putc_loop
 3650+ 1			        ;clr     SCON.1
 3651+ 1  0C4D	75 99 4C	        mov     SBUF,#'L'
 3652:
 3653:				        putc    #'0'
 3654+ 1  0C50			??0328:
 3655+ 1			        ;jnb     SCON.1,putc_loop
 3656+ 1			        ;clr     SCON.1
 3657+ 1  0C50	75 99 30	        mov     SBUF,#'0'
 3658:				        tst_alu add,051h,033h,084h,01h,004h     ; /CY /AC  OV
 3659+ 1			        ; Put the argument and result data into variables for easier access
 3660+ 1	N      0051	        arg0    set 051h
 3661+ 1	N      0033	        arg1    set 033h
 3662+ 1	N      0084	        res     set 084h
 3663+ 1
 3664+ 1			        ; Test <op> A, dir
 3665+ 1			        top_ma  add,dir0,??0330,<004h>
 3666+ 2  0C53	75 60 51	        mov     dir0,#arg0
 3667+ 2  0C56	74 33		        mov     a,#arg1
 3668+ 2			        ifnb    <004h>
 3669+ 2			        set_cy  004h
 3670+ 3	N      0000	??0336  set     (004h and 1)
 3671+ 3	N      0000	        if      ??0336 eq 1
 3672+ 3			        setb    c
 3673+ 3			        else
 3674+ 3  0C58	C3		        clr     c
 3675+ 3			        endif
 3676+ 2			        endif
 3677+ 2  0C59	25 60		        add      a,dir0
 3678+ 2			        ifnb    <004h>
 3679+ 2			        save_psw
 3680+ 3  0C5B	85 D0 70	        mov     saved_psw,PSW
 3681+ 2			        endif
 3682+ 2  0C5E	B4 84 6B	        cjne    a,#res,??0330
 3683+ 2			        ifnb    <004h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 67



 Line  I  Addr  Code            Source

 3684+ 2			        tst_psw <004h>,??0330
 3685+ 3  0C61	E5 70		        mov     a,saved_psw
 3686+ 3  0C63	54 C4		        anl     a,#0c4h
 3687+ 3  0C65	64 04		        xrl     a,#004h
 3688+ 3  0C67	54 FE		        anl     a,#0feh
 3689+ 3  0C69	70 61		        jnz     ??0330
 3690+ 2			        endif
 3691+ 1			        ; Test <op> A, @R0
 3692+ 1  0C6B	78 60		        mov     r0,#dir0
 3693+ 1			        top_ma  add,@r0,??0330,<004h>
 3694+ 2  0C6D	76 51		        mov     @r0,#arg0
 3695+ 2  0C6F	74 33		        mov     a,#arg1
 3696+ 2			        ifnb    <004h>
 3697+ 2			        set_cy  004h
 3698+ 3	N      0000	??0337  set     (004h and 1)
 3699+ 3	N      0000	        if      ??0337 eq 1
 3700+ 3			        setb    c
 3701+ 3			        else
 3702+ 3  0C71	C3		        clr     c
 3703+ 3			        endif
 3704+ 2			        endif
 3705+ 2  0C72	26		        add      a,@r0
 3706+ 2			        ifnb    <004h>
 3707+ 2			        save_psw
 3708+ 3  0C73	85 D0 70	        mov     saved_psw,PSW
 3709+ 2			        endif
 3710+ 2  0C76	B4 84 53	        cjne    a,#res,??0330
 3711+ 2			        ifnb    <004h>
 3712+ 2			        tst_psw <004h>,??0330
 3713+ 3  0C79	E5 70		        mov     a,saved_psw
 3714+ 3  0C7B	54 C4		        anl     a,#0c4h
 3715+ 3  0C7D	64 04		        xrl     a,#004h
 3716+ 3  0C7F	54 FE		        anl     a,#0feh
 3717+ 3  0C81	70 49		        jnz     ??0330
 3718+ 2			        endif
 3719+ 1			        ; Test <op> A, @R1
 3720+ 1  0C83	79 31		        mov     r1,#031h
 3721+ 1			        top_ma  add,@r1,??0330,<004h>
 3722+ 2  0C85	77 51		        mov     @r1,#arg0
 3723+ 2  0C87	74 33		        mov     a,#arg1
 3724+ 2			        ifnb    <004h>
 3725+ 2			        set_cy  004h
 3726+ 3	N      0000	??0338  set     (004h and 1)
 3727+ 3	N      0000	        if      ??0338 eq 1
 3728+ 3			        setb    c
 3729+ 3			        else
 3730+ 3  0C89	C3		        clr     c
 3731+ 3			        endif
 3732+ 2			        endif
 3733+ 2  0C8A	27		        add      a,@r1
 3734+ 2			        ifnb    <004h>
 3735+ 2			        save_psw
 3736+ 3  0C8B	85 D0 70	        mov     saved_psw,PSW
 3737+ 2			        endif
 3738+ 2  0C8E	B4 84 3B	        cjne    a,#res,??0330
 3739+ 2			        ifnb    <004h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 68



 Line  I  Addr  Code            Source

 3740+ 2			        tst_psw <004h>,??0330
 3741+ 3  0C91	E5 70		        mov     a,saved_psw
 3742+ 3  0C93	54 C4		        anl     a,#0c4h
 3743+ 3  0C95	64 04		        xrl     a,#004h
 3744+ 3  0C97	54 FE		        anl     a,#0feh
 3745+ 3  0C99	70 31		        jnz     ??0330
 3746+ 2			        endif
 3747+ 1
 3748+ 1			        ; Now test <op> A, Rn for n in 0..7
 3749+ 1			        top_ma  add,r0,??0330,<004h>
 3750+ 2  0C9B	78 51		        mov     r0,#arg0
 3751+ 2  0C9D	74 33		        mov     a,#arg1
 3752+ 2			        ifnb    <004h>
 3753+ 2			        set_cy  004h
 3754+ 3	N      0000	??0339  set     (004h and 1)
 3755+ 3	N      0000	        if      ??0339 eq 1
 3756+ 3			        setb    c
 3757+ 3			        else
 3758+ 3  0C9F	C3		        clr     c
 3759+ 3			        endif
 3760+ 2			        endif
 3761+ 2  0CA0	28		        add      a,r0
 3762+ 2			        ifnb    <004h>
 3763+ 2			        save_psw
 3764+ 3  0CA1	85 D0 70	        mov     saved_psw,PSW
 3765+ 2			        endif
 3766+ 2  0CA4	B4 84 25	        cjne    a,#res,??0330
 3767+ 2			        ifnb    <004h>
 3768+ 2			        tst_psw <004h>,??0330
 3769+ 3  0CA7	E5 70		        mov     a,saved_psw
 3770+ 3  0CA9	54 C4		        anl     a,#0c4h
 3771+ 3  0CAB	64 04		        xrl     a,#004h
 3772+ 3  0CAD	54 FE		        anl     a,#0feh
 3773+ 3  0CAF	70 1B		        jnz     ??0330
 3774+ 2			        endif
 3775+ 1			        top_ma  add,r1,??0330,<004h>
 3776+ 2  0CB1	79 51		        mov     r1,#arg0
 3777+ 2  0CB3	74 33		        mov     a,#arg1
 3778+ 2			        ifnb    <004h>
 3779+ 2			        set_cy  004h
 3780+ 3	N      0000	??0340  set     (004h and 1)
 3781+ 3	N      0000	        if      ??0340 eq 1
 3782+ 3			        setb    c
 3783+ 3			        else
 3784+ 3  0CB5	C3		        clr     c
 3785+ 3			        endif
 3786+ 2			        endif
 3787+ 2  0CB6	29		        add      a,r1
 3788+ 2			        ifnb    <004h>
 3789+ 2			        save_psw
 3790+ 3  0CB7	85 D0 70	        mov     saved_psw,PSW
 3791+ 2			        endif
 3792+ 2  0CBA	B4 84 0F	        cjne    a,#res,??0330
 3793+ 2			        ifnb    <004h>
 3794+ 2			        tst_psw <004h>,??0330
 3795+ 3  0CBD	E5 70		        mov     a,saved_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 69



 Line  I  Addr  Code            Source

 3796+ 3  0CBF	54 C4		        anl     a,#0c4h
 3797+ 3  0CC1	64 04		        xrl     a,#004h
 3798+ 3  0CC3	54 FE		        anl     a,#0feh
 3799+ 3  0CC5	70 05		        jnz     ??0330
 3800+ 2			        endif
 3801+ 1
 3802+ 1			        eot     'a',??0330
 3803+ 2			        putc    #'a'
 3804+ 3  0CC7			??0342:
 3805+ 3			        ;jnb     SCON.1,putc_loop
 3806+ 3			        ;clr     SCON.1
 3807+ 3  0CC7	75 99 61	        mov     SBUF,#'a'
 3808+ 2  0CCA	80 06		        sjmp    ??0341
 3809+ 2  0CCC			??0330:  putc    #'?'
 3810+ 3  0CCC			??0343:
 3811+ 3			        ;jnb     SCON.1,putc_loop
 3812+ 3			        ;clr     SCON.1
 3813+ 3  0CCC	75 99 3F	        mov     SBUF,#'?'
 3814+ 2  0CCF	75 6E 01	        mov     fail,#001h
 3815+ 2  0CD2			??0341:
 3816+ 1
 3817+ 1			        top_ma  add,r2,??0331,<004h>
 3818+ 2  0CD2	7A 51		        mov     r2,#arg0
 3819+ 2  0CD4	74 33		        mov     a,#arg1
 3820+ 2			        ifnb    <004h>
 3821+ 2			        set_cy  004h
 3822+ 3	N      0000	??0344  set     (004h and 1)
 3823+ 3	N      0000	        if      ??0344 eq 1
 3824+ 3			        setb    c
 3825+ 3			        else
 3826+ 3  0CD6	C3		        clr     c
 3827+ 3			        endif
 3828+ 2			        endif
 3829+ 2  0CD7	2A		        add      a,r2
 3830+ 2			        ifnb    <004h>
 3831+ 2			        save_psw
 3832+ 3  0CD8	85 D0 70	        mov     saved_psw,PSW
 3833+ 2			        endif
 3834+ 2  0CDB	B4 84 25	        cjne    a,#res,??0331
 3835+ 2			        ifnb    <004h>
 3836+ 2			        tst_psw <004h>,??0331
 3837+ 3  0CDE	E5 70		        mov     a,saved_psw
 3838+ 3  0CE0	54 C4		        anl     a,#0c4h
 3839+ 3  0CE2	64 04		        xrl     a,#004h
 3840+ 3  0CE4	54 FE		        anl     a,#0feh
 3841+ 3  0CE6	70 1B		        jnz     ??0331
 3842+ 2			        endif
 3843+ 1			        top_ma  add,r3,??0331,<004h>
 3844+ 2  0CE8	7B 51		        mov     r3,#arg0
 3845+ 2  0CEA	74 33		        mov     a,#arg1
 3846+ 2			        ifnb    <004h>
 3847+ 2			        set_cy  004h
 3848+ 3	N      0000	??0345  set     (004h and 1)
 3849+ 3	N      0000	        if      ??0345 eq 1
 3850+ 3			        setb    c
 3851+ 3			        else

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 70



 Line  I  Addr  Code            Source

 3852+ 3  0CEC	C3		        clr     c
 3853+ 3			        endif
 3854+ 2			        endif
 3855+ 2  0CED	2B		        add      a,r3
 3856+ 2			        ifnb    <004h>
 3857+ 2			        save_psw
 3858+ 3  0CEE	85 D0 70	        mov     saved_psw,PSW
 3859+ 2			        endif
 3860+ 2  0CF1	B4 84 0F	        cjne    a,#res,??0331
 3861+ 2			        ifnb    <004h>
 3862+ 2			        tst_psw <004h>,??0331
 3863+ 3  0CF4	E5 70		        mov     a,saved_psw
 3864+ 3  0CF6	54 C4		        anl     a,#0c4h
 3865+ 3  0CF8	64 04		        xrl     a,#004h
 3866+ 3  0CFA	54 FE		        anl     a,#0feh
 3867+ 3  0CFC	70 05		        jnz     ??0331
 3868+ 2			        endif
 3869+ 1
 3870+ 1			        eot     'b',??0331
 3871+ 2			        putc    #'b'
 3872+ 3  0CFE			??0347:
 3873+ 3			        ;jnb     SCON.1,putc_loop
 3874+ 3			        ;clr     SCON.1
 3875+ 3  0CFE	75 99 62	        mov     SBUF,#'b'
 3876+ 2  0D01	80 06		        sjmp    ??0346
 3877+ 2  0D03			??0331:  putc    #'?'
 3878+ 3  0D03			??0348:
 3879+ 3			        ;jnb     SCON.1,putc_loop
 3880+ 3			        ;clr     SCON.1
 3881+ 3  0D03	75 99 3F	        mov     SBUF,#'?'
 3882+ 2  0D06	75 6E 01	        mov     fail,#001h
 3883+ 2  0D09			??0346:
 3884+ 1
 3885+ 1			        top_ma  add,r4,??0332,<004h>
 3886+ 2  0D09	7C 51		        mov     r4,#arg0
 3887+ 2  0D0B	74 33		        mov     a,#arg1
 3888+ 2			        ifnb    <004h>
 3889+ 2			        set_cy  004h
 3890+ 3	N      0000	??0349  set     (004h and 1)
 3891+ 3	N      0000	        if      ??0349 eq 1
 3892+ 3			        setb    c
 3893+ 3			        else
 3894+ 3  0D0D	C3		        clr     c
 3895+ 3			        endif
 3896+ 2			        endif
 3897+ 2  0D0E	2C		        add      a,r4
 3898+ 2			        ifnb    <004h>
 3899+ 2			        save_psw
 3900+ 3  0D0F	85 D0 70	        mov     saved_psw,PSW
 3901+ 2			        endif
 3902+ 2  0D12	B4 84 25	        cjne    a,#res,??0332
 3903+ 2			        ifnb    <004h>
 3904+ 2			        tst_psw <004h>,??0332
 3905+ 3  0D15	E5 70		        mov     a,saved_psw
 3906+ 3  0D17	54 C4		        anl     a,#0c4h
 3907+ 3  0D19	64 04		        xrl     a,#004h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 71



 Line  I  Addr  Code            Source

 3908+ 3  0D1B	54 FE		        anl     a,#0feh
 3909+ 3  0D1D	70 1B		        jnz     ??0332
 3910+ 2			        endif
 3911+ 1			        top_ma  add,r5,??0332,<004h>
 3912+ 2  0D1F	7D 51		        mov     r5,#arg0
 3913+ 2  0D21	74 33		        mov     a,#arg1
 3914+ 2			        ifnb    <004h>
 3915+ 2			        set_cy  004h
 3916+ 3	N      0000	??0350  set     (004h and 1)
 3917+ 3	N      0000	        if      ??0350 eq 1
 3918+ 3			        setb    c
 3919+ 3			        else
 3920+ 3  0D23	C3		        clr     c
 3921+ 3			        endif
 3922+ 2			        endif
 3923+ 2  0D24	2D		        add      a,r5
 3924+ 2			        ifnb    <004h>
 3925+ 2			        save_psw
 3926+ 3  0D25	85 D0 70	        mov     saved_psw,PSW
 3927+ 2			        endif
 3928+ 2  0D28	B4 84 0F	        cjne    a,#res,??0332
 3929+ 2			        ifnb    <004h>
 3930+ 2			        tst_psw <004h>,??0332
 3931+ 3  0D2B	E5 70		        mov     a,saved_psw
 3932+ 3  0D2D	54 C4		        anl     a,#0c4h
 3933+ 3  0D2F	64 04		        xrl     a,#004h
 3934+ 3  0D31	54 FE		        anl     a,#0feh
 3935+ 3  0D33	70 05		        jnz     ??0332
 3936+ 2			        endif
 3937+ 1
 3938+ 1			        eot     'c',??0332
 3939+ 2			        putc    #'c'
 3940+ 3  0D35			??0352:
 3941+ 3			        ;jnb     SCON.1,putc_loop
 3942+ 3			        ;clr     SCON.1
 3943+ 3  0D35	75 99 63	        mov     SBUF,#'c'
 3944+ 2  0D38	80 06		        sjmp    ??0351
 3945+ 2  0D3A			??0332:  putc    #'?'
 3946+ 3  0D3A			??0353:
 3947+ 3			        ;jnb     SCON.1,putc_loop
 3948+ 3			        ;clr     SCON.1
 3949+ 3  0D3A	75 99 3F	        mov     SBUF,#'?'
 3950+ 2  0D3D	75 6E 01	        mov     fail,#001h
 3951+ 2  0D40			??0351:
 3952+ 1
 3953+ 1			        top_ma  add,r6,??0329,<004h>
 3954+ 2  0D40	7E 51		        mov     r6,#arg0
 3955+ 2  0D42	74 33		        mov     a,#arg1
 3956+ 2			        ifnb    <004h>
 3957+ 2			        set_cy  004h
 3958+ 3	N      0000	??0354  set     (004h and 1)
 3959+ 3	N      0000	        if      ??0354 eq 1
 3960+ 3			        setb    c
 3961+ 3			        else
 3962+ 3  0D44	C3		        clr     c
 3963+ 3			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 72



 Line  I  Addr  Code            Source

 3964+ 2			        endif
 3965+ 2  0D45	2E		        add      a,r6
 3966+ 2			        ifnb    <004h>
 3967+ 2			        save_psw
 3968+ 3  0D46	85 D0 70	        mov     saved_psw,PSW
 3969+ 2			        endif
 3970+ 2  0D49	B4 84 25	        cjne    a,#res,??0329
 3971+ 2			        ifnb    <004h>
 3972+ 2			        tst_psw <004h>,??0329
 3973+ 3  0D4C	E5 70		        mov     a,saved_psw
 3974+ 3  0D4E	54 C4		        anl     a,#0c4h
 3975+ 3  0D50	64 04		        xrl     a,#004h
 3976+ 3  0D52	54 FE		        anl     a,#0feh
 3977+ 3  0D54	70 1B		        jnz     ??0329
 3978+ 2			        endif
 3979+ 1			        top_ma  add,r7,??0329,<004h>
 3980+ 2  0D56	7F 51		        mov     r7,#arg0
 3981+ 2  0D58	74 33		        mov     a,#arg1
 3982+ 2			        ifnb    <004h>
 3983+ 2			        set_cy  004h
 3984+ 3	N      0000	??0355  set     (004h and 1)
 3985+ 3	N      0000	        if      ??0355 eq 1
 3986+ 3			        setb    c
 3987+ 3			        else
 3988+ 3  0D5A	C3		        clr     c
 3989+ 3			        endif
 3990+ 2			        endif
 3991+ 2  0D5B	2F		        add      a,r7
 3992+ 2			        ifnb    <004h>
 3993+ 2			        save_psw
 3994+ 3  0D5C	85 D0 70	        mov     saved_psw,PSW
 3995+ 2			        endif
 3996+ 2  0D5F	B4 84 0F	        cjne    a,#res,??0329
 3997+ 2			        ifnb    <004h>
 3998+ 2			        tst_psw <004h>,??0329
 3999+ 3  0D62	E5 70		        mov     a,saved_psw
 4000+ 3  0D64	54 C4		        anl     a,#0c4h
 4001+ 3  0D66	64 04		        xrl     a,#004h
 4002+ 3  0D68	54 FE		        anl     a,#0feh
 4003+ 3  0D6A	70 05		        jnz     ??0329
 4004+ 2			        endif
 4005+ 1
 4006+ 1			        eot     'd',??0329
 4007+ 2			        putc    #'d'
 4008+ 3  0D6C			??0357:
 4009+ 3			        ;jnb     SCON.1,putc_loop
 4010+ 3			        ;clr     SCON.1
 4011+ 3  0D6C	75 99 64	        mov     SBUF,#'d'
 4012+ 2  0D6F	80 06		        sjmp    ??0356
 4013+ 2  0D71			??0329:  putc    #'?'
 4014+ 3  0D71			??0358:
 4015+ 3			        ;jnb     SCON.1,putc_loop
 4016+ 3			        ;clr     SCON.1
 4017+ 3  0D71	75 99 3F	        mov     SBUF,#'?'
 4018+ 2  0D74	75 6E 01	        mov     fail,#001h
 4019+ 2  0D77			??0356:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 73



 Line  I  Addr  Code            Source

 4020+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 4021+ 1
 4022+ 1			        ; Optionally test immediate addressing modes.
 4023+ 1
 4024+ 1	N      FFFF	        if      (01h and 1) ne 0
 4025+ 1			        ; Test <op> A, #arg1...
 4026+ 1			        top_mb  add,a,??0333,<004h>
 4027+ 2  0D77	74 33		        mov     a,#arg1
 4028+ 2			        ifnb    <004h>
 4029+ 2			        set_cy  004h
 4030+ 3	N      0000	??0359  set     (004h and 1)
 4031+ 3	N      0000	        if      ??0359 eq 1
 4032+ 3			        setb    c
 4033+ 3			        else
 4034+ 3  0D79	C3		        clr     c
 4035+ 3			        endif
 4036+ 2			        endif
 4037+ 2  0D7A	24 51		        add      a,#arg0
 4038+ 2			        ifnb    <004h>
 4039+ 2			        save_psw
 4040+ 3  0D7C	85 D0 70	        mov     saved_psw,PSW
 4041+ 2			        endif
 4042+ 2  0D7F	F5 E0		        mov     ACC,a
 4043+ 2  0D81	B4 84 0F	        cjne    a,#res,??0333
 4044+ 2			        ifnb    <004h>
 4045+ 2			        tst_psw <004h>,??0333
 4046+ 3  0D84	E5 70		        mov     a,saved_psw
 4047+ 3  0D86	54 C4		        anl     a,#0c4h
 4048+ 3  0D88	64 04		        xrl     a,#004h
 4049+ 3  0D8A	54 FE		        anl     a,#0feh
 4050+ 3  0D8C	70 05		        jnz     ??0333
 4051+ 2			        endif
 4052+ 1			        eot     'e',??0333
 4053+ 2			        putc    #'e'
 4054+ 3  0D8E			??0361:
 4055+ 3			        ;jnb     SCON.1,putc_loop
 4056+ 3			        ;clr     SCON.1
 4057+ 3  0D8E	75 99 65	        mov     SBUF,#'e'
 4058+ 2  0D91	80 06		        sjmp    ??0360
 4059+ 2  0D93			??0333:  putc    #'?'
 4060+ 3  0D93			??0362:
 4061+ 3			        ;jnb     SCON.1,putc_loop
 4062+ 3			        ;clr     SCON.1
 4063+ 3  0D93	75 99 3F	        mov     SBUF,#'?'
 4064+ 2  0D96	75 6E 01	        mov     fail,#001h
 4065+ 2  0D99			??0360:
 4066+ 1			        endif
 4067+ 1
 4068+ 1	N      0000	        if      (01h and 2) ne 0
 4069+ 1			        ; ...and <op> dir, #arg1
 4070+ 1			        top_mb  add,dir0,??0334,<004h>
 4071+ 1			        eot     'f',??0334
 4072+ 1			        endif
 4073+ 1
 4074+ 1			        ; Optionally test <op> dir, A
 4075+ 1	N      0000	        if      (01h and 4) ne 0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 74



 Line  I  Addr  Code            Source

 4076+ 1			        top_mc  add,??0335,<004h>
 4077+ 1			        eot     'g',??0335
 4078+ 1			        endif
 4079+ 1
 4080:				        putc    #'1'
 4081+ 1  0D99			??0363:
 4082+ 1			        ;jnb     SCON.1,putc_loop
 4083+ 1			        ;clr     SCON.1
 4084+ 1  0D99	75 99 31	        mov     SBUF,#'1'
 4085:				        tst_alu add,081h,093h,014h,01h,084h     ;  CY /AC  OV
 4086+ 1			        ; Put the argument and result data into variables for easier access
 4087+ 1	N      0081	        arg0    set 081h
 4088+ 1	N      0093	        arg1    set 093h
 4089+ 1	N      0014	        res     set 014h
 4090+ 1
 4091+ 1			        ; Test <op> A, dir
 4092+ 1			        top_ma  add,dir0,??0365,<084h>
 4093+ 2  0D9C	75 60 81	        mov     dir0,#arg0
 4094+ 2  0D9F	74 93		        mov     a,#arg1
 4095+ 2			        ifnb    <084h>
 4096+ 2			        set_cy  084h
 4097+ 3	N      0000	??0371  set     (084h and 1)
 4098+ 3	N      0000	        if      ??0371 eq 1
 4099+ 3			        setb    c
 4100+ 3			        else
 4101+ 3  0DA1	C3		        clr     c
 4102+ 3			        endif
 4103+ 2			        endif
 4104+ 2  0DA2	25 60		        add      a,dir0
 4105+ 2			        ifnb    <084h>
 4106+ 2			        save_psw
 4107+ 3  0DA4	85 D0 70	        mov     saved_psw,PSW
 4108+ 2			        endif
 4109+ 2  0DA7	B4 14 6B	        cjne    a,#res,??0365
 4110+ 2			        ifnb    <084h>
 4111+ 2			        tst_psw <084h>,??0365
 4112+ 3  0DAA	E5 70		        mov     a,saved_psw
 4113+ 3  0DAC	54 C4		        anl     a,#0c4h
 4114+ 3  0DAE	64 84		        xrl     a,#084h
 4115+ 3  0DB0	54 FE		        anl     a,#0feh
 4116+ 3  0DB2	70 61		        jnz     ??0365
 4117+ 2			        endif
 4118+ 1			        ; Test <op> A, @R0
 4119+ 1  0DB4	78 60		        mov     r0,#dir0
 4120+ 1			        top_ma  add,@r0,??0365,<084h>
 4121+ 2  0DB6	76 81		        mov     @r0,#arg0
 4122+ 2  0DB8	74 93		        mov     a,#arg1
 4123+ 2			        ifnb    <084h>
 4124+ 2			        set_cy  084h
 4125+ 3	N      0000	??0372  set     (084h and 1)
 4126+ 3	N      0000	        if      ??0372 eq 1
 4127+ 3			        setb    c
 4128+ 3			        else
 4129+ 3  0DBA	C3		        clr     c
 4130+ 3			        endif
 4131+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 75



 Line  I  Addr  Code            Source

 4132+ 2  0DBB	26		        add      a,@r0
 4133+ 2			        ifnb    <084h>
 4134+ 2			        save_psw
 4135+ 3  0DBC	85 D0 70	        mov     saved_psw,PSW
 4136+ 2			        endif
 4137+ 2  0DBF	B4 14 53	        cjne    a,#res,??0365
 4138+ 2			        ifnb    <084h>
 4139+ 2			        tst_psw <084h>,??0365
 4140+ 3  0DC2	E5 70		        mov     a,saved_psw
 4141+ 3  0DC4	54 C4		        anl     a,#0c4h
 4142+ 3  0DC6	64 84		        xrl     a,#084h
 4143+ 3  0DC8	54 FE		        anl     a,#0feh
 4144+ 3  0DCA	70 49		        jnz     ??0365
 4145+ 2			        endif
 4146+ 1			        ; Test <op> A, @R1
 4147+ 1  0DCC	79 31		        mov     r1,#031h
 4148+ 1			        top_ma  add,@r1,??0365,<084h>
 4149+ 2  0DCE	77 81		        mov     @r1,#arg0
 4150+ 2  0DD0	74 93		        mov     a,#arg1
 4151+ 2			        ifnb    <084h>
 4152+ 2			        set_cy  084h
 4153+ 3	N      0000	??0373  set     (084h and 1)
 4154+ 3	N      0000	        if      ??0373 eq 1
 4155+ 3			        setb    c
 4156+ 3			        else
 4157+ 3  0DD2	C3		        clr     c
 4158+ 3			        endif
 4159+ 2			        endif
 4160+ 2  0DD3	27		        add      a,@r1
 4161+ 2			        ifnb    <084h>
 4162+ 2			        save_psw
 4163+ 3  0DD4	85 D0 70	        mov     saved_psw,PSW
 4164+ 2			        endif
 4165+ 2  0DD7	B4 14 3B	        cjne    a,#res,??0365
 4166+ 2			        ifnb    <084h>
 4167+ 2			        tst_psw <084h>,??0365
 4168+ 3  0DDA	E5 70		        mov     a,saved_psw
 4169+ 3  0DDC	54 C4		        anl     a,#0c4h
 4170+ 3  0DDE	64 84		        xrl     a,#084h
 4171+ 3  0DE0	54 FE		        anl     a,#0feh
 4172+ 3  0DE2	70 31		        jnz     ??0365
 4173+ 2			        endif
 4174+ 1
 4175+ 1			        ; Now test <op> A, Rn for n in 0..7
 4176+ 1			        top_ma  add,r0,??0365,<084h>
 4177+ 2  0DE4	78 81		        mov     r0,#arg0
 4178+ 2  0DE6	74 93		        mov     a,#arg1
 4179+ 2			        ifnb    <084h>
 4180+ 2			        set_cy  084h
 4181+ 3	N      0000	??0374  set     (084h and 1)
 4182+ 3	N      0000	        if      ??0374 eq 1
 4183+ 3			        setb    c
 4184+ 3			        else
 4185+ 3  0DE8	C3		        clr     c
 4186+ 3			        endif
 4187+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 76



 Line  I  Addr  Code            Source

 4188+ 2  0DE9	28		        add      a,r0
 4189+ 2			        ifnb    <084h>
 4190+ 2			        save_psw
 4191+ 3  0DEA	85 D0 70	        mov     saved_psw,PSW
 4192+ 2			        endif
 4193+ 2  0DED	B4 14 25	        cjne    a,#res,??0365
 4194+ 2			        ifnb    <084h>
 4195+ 2			        tst_psw <084h>,??0365
 4196+ 3  0DF0	E5 70		        mov     a,saved_psw
 4197+ 3  0DF2	54 C4		        anl     a,#0c4h
 4198+ 3  0DF4	64 84		        xrl     a,#084h
 4199+ 3  0DF6	54 FE		        anl     a,#0feh
 4200+ 3  0DF8	70 1B		        jnz     ??0365
 4201+ 2			        endif
 4202+ 1			        top_ma  add,r1,??0365,<084h>
 4203+ 2  0DFA	79 81		        mov     r1,#arg0
 4204+ 2  0DFC	74 93		        mov     a,#arg1
 4205+ 2			        ifnb    <084h>
 4206+ 2			        set_cy  084h
 4207+ 3	N      0000	??0375  set     (084h and 1)
 4208+ 3	N      0000	        if      ??0375 eq 1
 4209+ 3			        setb    c
 4210+ 3			        else
 4211+ 3  0DFE	C3		        clr     c
 4212+ 3			        endif
 4213+ 2			        endif
 4214+ 2  0DFF	29		        add      a,r1
 4215+ 2			        ifnb    <084h>
 4216+ 2			        save_psw
 4217+ 3  0E00	85 D0 70	        mov     saved_psw,PSW
 4218+ 2			        endif
 4219+ 2  0E03	B4 14 0F	        cjne    a,#res,??0365
 4220+ 2			        ifnb    <084h>
 4221+ 2			        tst_psw <084h>,??0365
 4222+ 3  0E06	E5 70		        mov     a,saved_psw
 4223+ 3  0E08	54 C4		        anl     a,#0c4h
 4224+ 3  0E0A	64 84		        xrl     a,#084h
 4225+ 3  0E0C	54 FE		        anl     a,#0feh
 4226+ 3  0E0E	70 05		        jnz     ??0365
 4227+ 2			        endif
 4228+ 1
 4229+ 1			        eot     'a',??0365
 4230+ 2			        putc    #'a'
 4231+ 3  0E10			??0377:
 4232+ 3			        ;jnb     SCON.1,putc_loop
 4233+ 3			        ;clr     SCON.1
 4234+ 3  0E10	75 99 61	        mov     SBUF,#'a'
 4235+ 2  0E13	80 06		        sjmp    ??0376
 4236+ 2  0E15			??0365:  putc    #'?'
 4237+ 3  0E15			??0378:
 4238+ 3			        ;jnb     SCON.1,putc_loop
 4239+ 3			        ;clr     SCON.1
 4240+ 3  0E15	75 99 3F	        mov     SBUF,#'?'
 4241+ 2  0E18	75 6E 01	        mov     fail,#001h
 4242+ 2  0E1B			??0376:
 4243+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 77



 Line  I  Addr  Code            Source

 4244+ 1			        top_ma  add,r2,??0366,<084h>
 4245+ 2  0E1B	7A 81		        mov     r2,#arg0
 4246+ 2  0E1D	74 93		        mov     a,#arg1
 4247+ 2			        ifnb    <084h>
 4248+ 2			        set_cy  084h
 4249+ 3	N      0000	??0379  set     (084h and 1)
 4250+ 3	N      0000	        if      ??0379 eq 1
 4251+ 3			        setb    c
 4252+ 3			        else
 4253+ 3  0E1F	C3		        clr     c
 4254+ 3			        endif
 4255+ 2			        endif
 4256+ 2  0E20	2A		        add      a,r2
 4257+ 2			        ifnb    <084h>
 4258+ 2			        save_psw
 4259+ 3  0E21	85 D0 70	        mov     saved_psw,PSW
 4260+ 2			        endif
 4261+ 2  0E24	B4 14 25	        cjne    a,#res,??0366
 4262+ 2			        ifnb    <084h>
 4263+ 2			        tst_psw <084h>,??0366
 4264+ 3  0E27	E5 70		        mov     a,saved_psw
 4265+ 3  0E29	54 C4		        anl     a,#0c4h
 4266+ 3  0E2B	64 84		        xrl     a,#084h
 4267+ 3  0E2D	54 FE		        anl     a,#0feh
 4268+ 3  0E2F	70 1B		        jnz     ??0366
 4269+ 2			        endif
 4270+ 1			        top_ma  add,r3,??0366,<084h>
 4271+ 2  0E31	7B 81		        mov     r3,#arg0
 4272+ 2  0E33	74 93		        mov     a,#arg1
 4273+ 2			        ifnb    <084h>
 4274+ 2			        set_cy  084h
 4275+ 3	N      0000	??0380  set     (084h and 1)
 4276+ 3	N      0000	        if      ??0380 eq 1
 4277+ 3			        setb    c
 4278+ 3			        else
 4279+ 3  0E35	C3		        clr     c
 4280+ 3			        endif
 4281+ 2			        endif
 4282+ 2  0E36	2B		        add      a,r3
 4283+ 2			        ifnb    <084h>
 4284+ 2			        save_psw
 4285+ 3  0E37	85 D0 70	        mov     saved_psw,PSW
 4286+ 2			        endif
 4287+ 2  0E3A	B4 14 0F	        cjne    a,#res,??0366
 4288+ 2			        ifnb    <084h>
 4289+ 2			        tst_psw <084h>,??0366
 4290+ 3  0E3D	E5 70		        mov     a,saved_psw
 4291+ 3  0E3F	54 C4		        anl     a,#0c4h
 4292+ 3  0E41	64 84		        xrl     a,#084h
 4293+ 3  0E43	54 FE		        anl     a,#0feh
 4294+ 3  0E45	70 05		        jnz     ??0366
 4295+ 2			        endif
 4296+ 1
 4297+ 1			        eot     'b',??0366
 4298+ 2			        putc    #'b'
 4299+ 3  0E47			??0382:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 78



 Line  I  Addr  Code            Source

 4300+ 3			        ;jnb     SCON.1,putc_loop
 4301+ 3			        ;clr     SCON.1
 4302+ 3  0E47	75 99 62	        mov     SBUF,#'b'
 4303+ 2  0E4A	80 06		        sjmp    ??0381
 4304+ 2  0E4C			??0366:  putc    #'?'
 4305+ 3  0E4C			??0383:
 4306+ 3			        ;jnb     SCON.1,putc_loop
 4307+ 3			        ;clr     SCON.1
 4308+ 3  0E4C	75 99 3F	        mov     SBUF,#'?'
 4309+ 2  0E4F	75 6E 01	        mov     fail,#001h
 4310+ 2  0E52			??0381:
 4311+ 1
 4312+ 1			        top_ma  add,r4,??0367,<084h>
 4313+ 2  0E52	7C 81		        mov     r4,#arg0
 4314+ 2  0E54	74 93		        mov     a,#arg1
 4315+ 2			        ifnb    <084h>
 4316+ 2			        set_cy  084h
 4317+ 3	N      0000	??0384  set     (084h and 1)
 4318+ 3	N      0000	        if      ??0384 eq 1
 4319+ 3			        setb    c
 4320+ 3			        else
 4321+ 3  0E56	C3		        clr     c
 4322+ 3			        endif
 4323+ 2			        endif
 4324+ 2  0E57	2C		        add      a,r4
 4325+ 2			        ifnb    <084h>
 4326+ 2			        save_psw
 4327+ 3  0E58	85 D0 70	        mov     saved_psw,PSW
 4328+ 2			        endif
 4329+ 2  0E5B	B4 14 25	        cjne    a,#res,??0367
 4330+ 2			        ifnb    <084h>
 4331+ 2			        tst_psw <084h>,??0367
 4332+ 3  0E5E	E5 70		        mov     a,saved_psw
 4333+ 3  0E60	54 C4		        anl     a,#0c4h
 4334+ 3  0E62	64 84		        xrl     a,#084h
 4335+ 3  0E64	54 FE		        anl     a,#0feh
 4336+ 3  0E66	70 1B		        jnz     ??0367
 4337+ 2			        endif
 4338+ 1			        top_ma  add,r5,??0367,<084h>
 4339+ 2  0E68	7D 81		        mov     r5,#arg0
 4340+ 2  0E6A	74 93		        mov     a,#arg1
 4341+ 2			        ifnb    <084h>
 4342+ 2			        set_cy  084h
 4343+ 3	N      0000	??0385  set     (084h and 1)
 4344+ 3	N      0000	        if      ??0385 eq 1
 4345+ 3			        setb    c
 4346+ 3			        else
 4347+ 3  0E6C	C3		        clr     c
 4348+ 3			        endif
 4349+ 2			        endif
 4350+ 2  0E6D	2D		        add      a,r5
 4351+ 2			        ifnb    <084h>
 4352+ 2			        save_psw
 4353+ 3  0E6E	85 D0 70	        mov     saved_psw,PSW
 4354+ 2			        endif
 4355+ 2  0E71	B4 14 0F	        cjne    a,#res,??0367

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 79



 Line  I  Addr  Code            Source

 4356+ 2			        ifnb    <084h>
 4357+ 2			        tst_psw <084h>,??0367
 4358+ 3  0E74	E5 70		        mov     a,saved_psw
 4359+ 3  0E76	54 C4		        anl     a,#0c4h
 4360+ 3  0E78	64 84		        xrl     a,#084h
 4361+ 3  0E7A	54 FE		        anl     a,#0feh
 4362+ 3  0E7C	70 05		        jnz     ??0367
 4363+ 2			        endif
 4364+ 1
 4365+ 1			        eot     'c',??0367
 4366+ 2			        putc    #'c'
 4367+ 3  0E7E			??0387:
 4368+ 3			        ;jnb     SCON.1,putc_loop
 4369+ 3			        ;clr     SCON.1
 4370+ 3  0E7E	75 99 63	        mov     SBUF,#'c'
 4371+ 2  0E81	80 06		        sjmp    ??0386
 4372+ 2  0E83			??0367:  putc    #'?'
 4373+ 3  0E83			??0388:
 4374+ 3			        ;jnb     SCON.1,putc_loop
 4375+ 3			        ;clr     SCON.1
 4376+ 3  0E83	75 99 3F	        mov     SBUF,#'?'
 4377+ 2  0E86	75 6E 01	        mov     fail,#001h
 4378+ 2  0E89			??0386:
 4379+ 1
 4380+ 1			        top_ma  add,r6,??0364,<084h>
 4381+ 2  0E89	7E 81		        mov     r6,#arg0
 4382+ 2  0E8B	74 93		        mov     a,#arg1
 4383+ 2			        ifnb    <084h>
 4384+ 2			        set_cy  084h
 4385+ 3	N      0000	??0389  set     (084h and 1)
 4386+ 3	N      0000	        if      ??0389 eq 1
 4387+ 3			        setb    c
 4388+ 3			        else
 4389+ 3  0E8D	C3		        clr     c
 4390+ 3			        endif
 4391+ 2			        endif
 4392+ 2  0E8E	2E		        add      a,r6
 4393+ 2			        ifnb    <084h>
 4394+ 2			        save_psw
 4395+ 3  0E8F	85 D0 70	        mov     saved_psw,PSW
 4396+ 2			        endif
 4397+ 2  0E92	B4 14 25	        cjne    a,#res,??0364
 4398+ 2			        ifnb    <084h>
 4399+ 2			        tst_psw <084h>,??0364
 4400+ 3  0E95	E5 70		        mov     a,saved_psw
 4401+ 3  0E97	54 C4		        anl     a,#0c4h
 4402+ 3  0E99	64 84		        xrl     a,#084h
 4403+ 3  0E9B	54 FE		        anl     a,#0feh
 4404+ 3  0E9D	70 1B		        jnz     ??0364
 4405+ 2			        endif
 4406+ 1			        top_ma  add,r7,??0364,<084h>
 4407+ 2  0E9F	7F 81		        mov     r7,#arg0
 4408+ 2  0EA1	74 93		        mov     a,#arg1
 4409+ 2			        ifnb    <084h>
 4410+ 2			        set_cy  084h
 4411+ 3	N      0000	??0390  set     (084h and 1)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 80



 Line  I  Addr  Code            Source

 4412+ 3	N      0000	        if      ??0390 eq 1
 4413+ 3			        setb    c
 4414+ 3			        else
 4415+ 3  0EA3	C3		        clr     c
 4416+ 3			        endif
 4417+ 2			        endif
 4418+ 2  0EA4	2F		        add      a,r7
 4419+ 2			        ifnb    <084h>
 4420+ 2			        save_psw
 4421+ 3  0EA5	85 D0 70	        mov     saved_psw,PSW
 4422+ 2			        endif
 4423+ 2  0EA8	B4 14 0F	        cjne    a,#res,??0364
 4424+ 2			        ifnb    <084h>
 4425+ 2			        tst_psw <084h>,??0364
 4426+ 3  0EAB	E5 70		        mov     a,saved_psw
 4427+ 3  0EAD	54 C4		        anl     a,#0c4h
 4428+ 3  0EAF	64 84		        xrl     a,#084h
 4429+ 3  0EB1	54 FE		        anl     a,#0feh
 4430+ 3  0EB3	70 05		        jnz     ??0364
 4431+ 2			        endif
 4432+ 1
 4433+ 1			        eot     'd',??0364
 4434+ 2			        putc    #'d'
 4435+ 3  0EB5			??0392:
 4436+ 3			        ;jnb     SCON.1,putc_loop
 4437+ 3			        ;clr     SCON.1
 4438+ 3  0EB5	75 99 64	        mov     SBUF,#'d'
 4439+ 2  0EB8	80 06		        sjmp    ??0391
 4440+ 2  0EBA			??0364:  putc    #'?'
 4441+ 3  0EBA			??0393:
 4442+ 3			        ;jnb     SCON.1,putc_loop
 4443+ 3			        ;clr     SCON.1
 4444+ 3  0EBA	75 99 3F	        mov     SBUF,#'?'
 4445+ 2  0EBD	75 6E 01	        mov     fail,#001h
 4446+ 2  0EC0			??0391:
 4447+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 4448+ 1
 4449+ 1			        ; Optionally test immediate addressing modes.
 4450+ 1
 4451+ 1	N      FFFF	        if      (01h and 1) ne 0
 4452+ 1			        ; Test <op> A, #arg1...
 4453+ 1			        top_mb  add,a,??0368,<084h>
 4454+ 2  0EC0	74 93		        mov     a,#arg1
 4455+ 2			        ifnb    <084h>
 4456+ 2			        set_cy  084h
 4457+ 3	N      0000	??0394  set     (084h and 1)
 4458+ 3	N      0000	        if      ??0394 eq 1
 4459+ 3			        setb    c
 4460+ 3			        else
 4461+ 3  0EC2	C3		        clr     c
 4462+ 3			        endif
 4463+ 2			        endif
 4464+ 2  0EC3	24 81		        add      a,#arg0
 4465+ 2			        ifnb    <084h>
 4466+ 2			        save_psw
 4467+ 3  0EC5	85 D0 70	        mov     saved_psw,PSW

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 81



 Line  I  Addr  Code            Source

 4468+ 2			        endif
 4469+ 2  0EC8	F5 E0		        mov     ACC,a
 4470+ 2  0ECA	B4 14 0F	        cjne    a,#res,??0368
 4471+ 2			        ifnb    <084h>
 4472+ 2			        tst_psw <084h>,??0368
 4473+ 3  0ECD	E5 70		        mov     a,saved_psw
 4474+ 3  0ECF	54 C4		        anl     a,#0c4h
 4475+ 3  0ED1	64 84		        xrl     a,#084h
 4476+ 3  0ED3	54 FE		        anl     a,#0feh
 4477+ 3  0ED5	70 05		        jnz     ??0368
 4478+ 2			        endif
 4479+ 1			        eot     'e',??0368
 4480+ 2			        putc    #'e'
 4481+ 3  0ED7			??0396:
 4482+ 3			        ;jnb     SCON.1,putc_loop
 4483+ 3			        ;clr     SCON.1
 4484+ 3  0ED7	75 99 65	        mov     SBUF,#'e'
 4485+ 2  0EDA	80 06		        sjmp    ??0395
 4486+ 2  0EDC			??0368:  putc    #'?'
 4487+ 3  0EDC			??0397:
 4488+ 3			        ;jnb     SCON.1,putc_loop
 4489+ 3			        ;clr     SCON.1
 4490+ 3  0EDC	75 99 3F	        mov     SBUF,#'?'
 4491+ 2  0EDF	75 6E 01	        mov     fail,#001h
 4492+ 2  0EE2			??0395:
 4493+ 1			        endif
 4494+ 1
 4495+ 1	N      0000	        if      (01h and 2) ne 0
 4496+ 1			        ; ...and <op> dir, #arg1
 4497+ 1			        top_mb  add,dir0,??0369,<084h>
 4498+ 1			        eot     'f',??0369
 4499+ 1			        endif
 4500+ 1
 4501+ 1			        ; Optionally test <op> dir, A
 4502+ 1	N      0000	        if      (01h and 4) ne 0
 4503+ 1			        top_mc  add,??0370,<084h>
 4504+ 1			        eot     'g',??0370
 4505+ 1			        endif
 4506+ 1
 4507:				        putc    #'2'
 4508+ 1  0EE2			??0398:
 4509+ 1			        ;jnb     SCON.1,putc_loop
 4510+ 1			        ;clr     SCON.1
 4511+ 1  0EE2	75 99 32	        mov     SBUF,#'2'
 4512:				        tst_alu add,088h,098h,020h,01h,0c4h     ;  CY  AC  OV
 4513+ 1			        ; Put the argument and result data into variables for easier access
 4514+ 1	N      0088	        arg0    set 088h
 4515+ 1	N      0098	        arg1    set 098h
 4516+ 1	N      0020	        res     set 020h
 4517+ 1
 4518+ 1			        ; Test <op> A, dir
 4519+ 1			        top_ma  add,dir0,??0400,<0c4h>
 4520+ 2  0EE5	75 60 88	        mov     dir0,#arg0
 4521+ 2  0EE8	74 98		        mov     a,#arg1
 4522+ 2			        ifnb    <0c4h>
 4523+ 2			        set_cy  0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 82



 Line  I  Addr  Code            Source

 4524+ 3	N      0000	??0406  set     (0c4h and 1)
 4525+ 3	N      0000	        if      ??0406 eq 1
 4526+ 3			        setb    c
 4527+ 3			        else
 4528+ 3  0EEA	C3		        clr     c
 4529+ 3			        endif
 4530+ 2			        endif
 4531+ 2  0EEB	25 60		        add      a,dir0
 4532+ 2			        ifnb    <0c4h>
 4533+ 2			        save_psw
 4534+ 3  0EED	85 D0 70	        mov     saved_psw,PSW
 4535+ 2			        endif
 4536+ 2  0EF0	B4 20 6B	        cjne    a,#res,??0400
 4537+ 2			        ifnb    <0c4h>
 4538+ 2			        tst_psw <0c4h>,??0400
 4539+ 3  0EF3	E5 70		        mov     a,saved_psw
 4540+ 3  0EF5	54 C4		        anl     a,#0c4h
 4541+ 3  0EF7	64 C4		        xrl     a,#0c4h
 4542+ 3  0EF9	54 FE		        anl     a,#0feh
 4543+ 3  0EFB	70 61		        jnz     ??0400
 4544+ 2			        endif
 4545+ 1			        ; Test <op> A, @R0
 4546+ 1  0EFD	78 60		        mov     r0,#dir0
 4547+ 1			        top_ma  add,@r0,??0400,<0c4h>
 4548+ 2  0EFF	76 88		        mov     @r0,#arg0
 4549+ 2  0F01	74 98		        mov     a,#arg1
 4550+ 2			        ifnb    <0c4h>
 4551+ 2			        set_cy  0c4h
 4552+ 3	N      0000	??0407  set     (0c4h and 1)
 4553+ 3	N      0000	        if      ??0407 eq 1
 4554+ 3			        setb    c
 4555+ 3			        else
 4556+ 3  0F03	C3		        clr     c
 4557+ 3			        endif
 4558+ 2			        endif
 4559+ 2  0F04	26		        add      a,@r0
 4560+ 2			        ifnb    <0c4h>
 4561+ 2			        save_psw
 4562+ 3  0F05	85 D0 70	        mov     saved_psw,PSW
 4563+ 2			        endif
 4564+ 2  0F08	B4 20 53	        cjne    a,#res,??0400
 4565+ 2			        ifnb    <0c4h>
 4566+ 2			        tst_psw <0c4h>,??0400
 4567+ 3  0F0B	E5 70		        mov     a,saved_psw
 4568+ 3  0F0D	54 C4		        anl     a,#0c4h
 4569+ 3  0F0F	64 C4		        xrl     a,#0c4h
 4570+ 3  0F11	54 FE		        anl     a,#0feh
 4571+ 3  0F13	70 49		        jnz     ??0400
 4572+ 2			        endif
 4573+ 1			        ; Test <op> A, @R1
 4574+ 1  0F15	79 31		        mov     r1,#031h
 4575+ 1			        top_ma  add,@r1,??0400,<0c4h>
 4576+ 2  0F17	77 88		        mov     @r1,#arg0
 4577+ 2  0F19	74 98		        mov     a,#arg1
 4578+ 2			        ifnb    <0c4h>
 4579+ 2			        set_cy  0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 83



 Line  I  Addr  Code            Source

 4580+ 3	N      0000	??0408  set     (0c4h and 1)
 4581+ 3	N      0000	        if      ??0408 eq 1
 4582+ 3			        setb    c
 4583+ 3			        else
 4584+ 3  0F1B	C3		        clr     c
 4585+ 3			        endif
 4586+ 2			        endif
 4587+ 2  0F1C	27		        add      a,@r1
 4588+ 2			        ifnb    <0c4h>
 4589+ 2			        save_psw
 4590+ 3  0F1D	85 D0 70	        mov     saved_psw,PSW
 4591+ 2			        endif
 4592+ 2  0F20	B4 20 3B	        cjne    a,#res,??0400
 4593+ 2			        ifnb    <0c4h>
 4594+ 2			        tst_psw <0c4h>,??0400
 4595+ 3  0F23	E5 70		        mov     a,saved_psw
 4596+ 3  0F25	54 C4		        anl     a,#0c4h
 4597+ 3  0F27	64 C4		        xrl     a,#0c4h
 4598+ 3  0F29	54 FE		        anl     a,#0feh
 4599+ 3  0F2B	70 31		        jnz     ??0400
 4600+ 2			        endif
 4601+ 1
 4602+ 1			        ; Now test <op> A, Rn for n in 0..7
 4603+ 1			        top_ma  add,r0,??0400,<0c4h>
 4604+ 2  0F2D	78 88		        mov     r0,#arg0
 4605+ 2  0F2F	74 98		        mov     a,#arg1
 4606+ 2			        ifnb    <0c4h>
 4607+ 2			        set_cy  0c4h
 4608+ 3	N      0000	??0409  set     (0c4h and 1)
 4609+ 3	N      0000	        if      ??0409 eq 1
 4610+ 3			        setb    c
 4611+ 3			        else
 4612+ 3  0F31	C3		        clr     c
 4613+ 3			        endif
 4614+ 2			        endif
 4615+ 2  0F32	28		        add      a,r0
 4616+ 2			        ifnb    <0c4h>
 4617+ 2			        save_psw
 4618+ 3  0F33	85 D0 70	        mov     saved_psw,PSW
 4619+ 2			        endif
 4620+ 2  0F36	B4 20 25	        cjne    a,#res,??0400
 4621+ 2			        ifnb    <0c4h>
 4622+ 2			        tst_psw <0c4h>,??0400
 4623+ 3  0F39	E5 70		        mov     a,saved_psw
 4624+ 3  0F3B	54 C4		        anl     a,#0c4h
 4625+ 3  0F3D	64 C4		        xrl     a,#0c4h
 4626+ 3  0F3F	54 FE		        anl     a,#0feh
 4627+ 3  0F41	70 1B		        jnz     ??0400
 4628+ 2			        endif
 4629+ 1			        top_ma  add,r1,??0400,<0c4h>
 4630+ 2  0F43	79 88		        mov     r1,#arg0
 4631+ 2  0F45	74 98		        mov     a,#arg1
 4632+ 2			        ifnb    <0c4h>
 4633+ 2			        set_cy  0c4h
 4634+ 3	N      0000	??0410  set     (0c4h and 1)
 4635+ 3	N      0000	        if      ??0410 eq 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 84



 Line  I  Addr  Code            Source

 4636+ 3			        setb    c
 4637+ 3			        else
 4638+ 3  0F47	C3		        clr     c
 4639+ 3			        endif
 4640+ 2			        endif
 4641+ 2  0F48	29		        add      a,r1
 4642+ 2			        ifnb    <0c4h>
 4643+ 2			        save_psw
 4644+ 3  0F49	85 D0 70	        mov     saved_psw,PSW
 4645+ 2			        endif
 4646+ 2  0F4C	B4 20 0F	        cjne    a,#res,??0400
 4647+ 2			        ifnb    <0c4h>
 4648+ 2			        tst_psw <0c4h>,??0400
 4649+ 3  0F4F	E5 70		        mov     a,saved_psw
 4650+ 3  0F51	54 C4		        anl     a,#0c4h
 4651+ 3  0F53	64 C4		        xrl     a,#0c4h
 4652+ 3  0F55	54 FE		        anl     a,#0feh
 4653+ 3  0F57	70 05		        jnz     ??0400
 4654+ 2			        endif
 4655+ 1
 4656+ 1			        eot     'a',??0400
 4657+ 2			        putc    #'a'
 4658+ 3  0F59			??0412:
 4659+ 3			        ;jnb     SCON.1,putc_loop
 4660+ 3			        ;clr     SCON.1
 4661+ 3  0F59	75 99 61	        mov     SBUF,#'a'
 4662+ 2  0F5C	80 06		        sjmp    ??0411
 4663+ 2  0F5E			??0400:  putc    #'?'
 4664+ 3  0F5E			??0413:
 4665+ 3			        ;jnb     SCON.1,putc_loop
 4666+ 3			        ;clr     SCON.1
 4667+ 3  0F5E	75 99 3F	        mov     SBUF,#'?'
 4668+ 2  0F61	75 6E 01	        mov     fail,#001h
 4669+ 2  0F64			??0411:
 4670+ 1
 4671+ 1			        top_ma  add,r2,??0401,<0c4h>
 4672+ 2  0F64	7A 88		        mov     r2,#arg0
 4673+ 2  0F66	74 98		        mov     a,#arg1
 4674+ 2			        ifnb    <0c4h>
 4675+ 2			        set_cy  0c4h
 4676+ 3	N      0000	??0414  set     (0c4h and 1)
 4677+ 3	N      0000	        if      ??0414 eq 1
 4678+ 3			        setb    c
 4679+ 3			        else
 4680+ 3  0F68	C3		        clr     c
 4681+ 3			        endif
 4682+ 2			        endif
 4683+ 2  0F69	2A		        add      a,r2
 4684+ 2			        ifnb    <0c4h>
 4685+ 2			        save_psw
 4686+ 3  0F6A	85 D0 70	        mov     saved_psw,PSW
 4687+ 2			        endif
 4688+ 2  0F6D	B4 20 25	        cjne    a,#res,??0401
 4689+ 2			        ifnb    <0c4h>
 4690+ 2			        tst_psw <0c4h>,??0401
 4691+ 3  0F70	E5 70		        mov     a,saved_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 85



 Line  I  Addr  Code            Source

 4692+ 3  0F72	54 C4		        anl     a,#0c4h
 4693+ 3  0F74	64 C4		        xrl     a,#0c4h
 4694+ 3  0F76	54 FE		        anl     a,#0feh
 4695+ 3  0F78	70 1B		        jnz     ??0401
 4696+ 2			        endif
 4697+ 1			        top_ma  add,r3,??0401,<0c4h>
 4698+ 2  0F7A	7B 88		        mov     r3,#arg0
 4699+ 2  0F7C	74 98		        mov     a,#arg1
 4700+ 2			        ifnb    <0c4h>
 4701+ 2			        set_cy  0c4h
 4702+ 3	N      0000	??0415  set     (0c4h and 1)
 4703+ 3	N      0000	        if      ??0415 eq 1
 4704+ 3			        setb    c
 4705+ 3			        else
 4706+ 3  0F7E	C3		        clr     c
 4707+ 3			        endif
 4708+ 2			        endif
 4709+ 2  0F7F	2B		        add      a,r3
 4710+ 2			        ifnb    <0c4h>
 4711+ 2			        save_psw
 4712+ 3  0F80	85 D0 70	        mov     saved_psw,PSW
 4713+ 2			        endif
 4714+ 2  0F83	B4 20 0F	        cjne    a,#res,??0401
 4715+ 2			        ifnb    <0c4h>
 4716+ 2			        tst_psw <0c4h>,??0401
 4717+ 3  0F86	E5 70		        mov     a,saved_psw
 4718+ 3  0F88	54 C4		        anl     a,#0c4h
 4719+ 3  0F8A	64 C4		        xrl     a,#0c4h
 4720+ 3  0F8C	54 FE		        anl     a,#0feh
 4721+ 3  0F8E	70 05		        jnz     ??0401
 4722+ 2			        endif
 4723+ 1
 4724+ 1			        eot     'b',??0401
 4725+ 2			        putc    #'b'
 4726+ 3  0F90			??0417:
 4727+ 3			        ;jnb     SCON.1,putc_loop
 4728+ 3			        ;clr     SCON.1
 4729+ 3  0F90	75 99 62	        mov     SBUF,#'b'
 4730+ 2  0F93	80 06		        sjmp    ??0416
 4731+ 2  0F95			??0401:  putc    #'?'
 4732+ 3  0F95			??0418:
 4733+ 3			        ;jnb     SCON.1,putc_loop
 4734+ 3			        ;clr     SCON.1
 4735+ 3  0F95	75 99 3F	        mov     SBUF,#'?'
 4736+ 2  0F98	75 6E 01	        mov     fail,#001h
 4737+ 2  0F9B			??0416:
 4738+ 1
 4739+ 1			        top_ma  add,r4,??0402,<0c4h>
 4740+ 2  0F9B	7C 88		        mov     r4,#arg0
 4741+ 2  0F9D	74 98		        mov     a,#arg1
 4742+ 2			        ifnb    <0c4h>
 4743+ 2			        set_cy  0c4h
 4744+ 3	N      0000	??0419  set     (0c4h and 1)
 4745+ 3	N      0000	        if      ??0419 eq 1
 4746+ 3			        setb    c
 4747+ 3			        else

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 86



 Line  I  Addr  Code            Source

 4748+ 3  0F9F	C3		        clr     c
 4749+ 3			        endif
 4750+ 2			        endif
 4751+ 2  0FA0	2C		        add      a,r4
 4752+ 2			        ifnb    <0c4h>
 4753+ 2			        save_psw
 4754+ 3  0FA1	85 D0 70	        mov     saved_psw,PSW
 4755+ 2			        endif
 4756+ 2  0FA4	B4 20 25	        cjne    a,#res,??0402
 4757+ 2			        ifnb    <0c4h>
 4758+ 2			        tst_psw <0c4h>,??0402
 4759+ 3  0FA7	E5 70		        mov     a,saved_psw
 4760+ 3  0FA9	54 C4		        anl     a,#0c4h
 4761+ 3  0FAB	64 C4		        xrl     a,#0c4h
 4762+ 3  0FAD	54 FE		        anl     a,#0feh
 4763+ 3  0FAF	70 1B		        jnz     ??0402
 4764+ 2			        endif
 4765+ 1			        top_ma  add,r5,??0402,<0c4h>
 4766+ 2  0FB1	7D 88		        mov     r5,#arg0
 4767+ 2  0FB3	74 98		        mov     a,#arg1
 4768+ 2			        ifnb    <0c4h>
 4769+ 2			        set_cy  0c4h
 4770+ 3	N      0000	??0420  set     (0c4h and 1)
 4771+ 3	N      0000	        if      ??0420 eq 1
 4772+ 3			        setb    c
 4773+ 3			        else
 4774+ 3  0FB5	C3		        clr     c
 4775+ 3			        endif
 4776+ 2			        endif
 4777+ 2  0FB6	2D		        add      a,r5
 4778+ 2			        ifnb    <0c4h>
 4779+ 2			        save_psw
 4780+ 3  0FB7	85 D0 70	        mov     saved_psw,PSW
 4781+ 2			        endif
 4782+ 2  0FBA	B4 20 0F	        cjne    a,#res,??0402
 4783+ 2			        ifnb    <0c4h>
 4784+ 2			        tst_psw <0c4h>,??0402
 4785+ 3  0FBD	E5 70		        mov     a,saved_psw
 4786+ 3  0FBF	54 C4		        anl     a,#0c4h
 4787+ 3  0FC1	64 C4		        xrl     a,#0c4h
 4788+ 3  0FC3	54 FE		        anl     a,#0feh
 4789+ 3  0FC5	70 05		        jnz     ??0402
 4790+ 2			        endif
 4791+ 1
 4792+ 1			        eot     'c',??0402
 4793+ 2			        putc    #'c'
 4794+ 3  0FC7			??0422:
 4795+ 3			        ;jnb     SCON.1,putc_loop
 4796+ 3			        ;clr     SCON.1
 4797+ 3  0FC7	75 99 63	        mov     SBUF,#'c'
 4798+ 2  0FCA	80 06		        sjmp    ??0421
 4799+ 2  0FCC			??0402:  putc    #'?'
 4800+ 3  0FCC			??0423:
 4801+ 3			        ;jnb     SCON.1,putc_loop
 4802+ 3			        ;clr     SCON.1
 4803+ 3  0FCC	75 99 3F	        mov     SBUF,#'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 87



 Line  I  Addr  Code            Source

 4804+ 2  0FCF	75 6E 01	        mov     fail,#001h
 4805+ 2  0FD2			??0421:
 4806+ 1
 4807+ 1			        top_ma  add,r6,??0399,<0c4h>
 4808+ 2  0FD2	7E 88		        mov     r6,#arg0
 4809+ 2  0FD4	74 98		        mov     a,#arg1
 4810+ 2			        ifnb    <0c4h>
 4811+ 2			        set_cy  0c4h
 4812+ 3	N      0000	??0424  set     (0c4h and 1)
 4813+ 3	N      0000	        if      ??0424 eq 1
 4814+ 3			        setb    c
 4815+ 3			        else
 4816+ 3  0FD6	C3		        clr     c
 4817+ 3			        endif
 4818+ 2			        endif
 4819+ 2  0FD7	2E		        add      a,r6
 4820+ 2			        ifnb    <0c4h>
 4821+ 2			        save_psw
 4822+ 3  0FD8	85 D0 70	        mov     saved_psw,PSW
 4823+ 2			        endif
 4824+ 2  0FDB	B4 20 25	        cjne    a,#res,??0399
 4825+ 2			        ifnb    <0c4h>
 4826+ 2			        tst_psw <0c4h>,??0399
 4827+ 3  0FDE	E5 70		        mov     a,saved_psw
 4828+ 3  0FE0	54 C4		        anl     a,#0c4h
 4829+ 3  0FE2	64 C4		        xrl     a,#0c4h
 4830+ 3  0FE4	54 FE		        anl     a,#0feh
 4831+ 3  0FE6	70 1B		        jnz     ??0399
 4832+ 2			        endif
 4833+ 1			        top_ma  add,r7,??0399,<0c4h>
 4834+ 2  0FE8	7F 88		        mov     r7,#arg0
 4835+ 2  0FEA	74 98		        mov     a,#arg1
 4836+ 2			        ifnb    <0c4h>
 4837+ 2			        set_cy  0c4h
 4838+ 3	N      0000	??0425  set     (0c4h and 1)
 4839+ 3	N      0000	        if      ??0425 eq 1
 4840+ 3			        setb    c
 4841+ 3			        else
 4842+ 3  0FEC	C3		        clr     c
 4843+ 3			        endif
 4844+ 2			        endif
 4845+ 2  0FED	2F		        add      a,r7
 4846+ 2			        ifnb    <0c4h>
 4847+ 2			        save_psw
 4848+ 3  0FEE	85 D0 70	        mov     saved_psw,PSW
 4849+ 2			        endif
 4850+ 2  0FF1	B4 20 0F	        cjne    a,#res,??0399
 4851+ 2			        ifnb    <0c4h>
 4852+ 2			        tst_psw <0c4h>,??0399
 4853+ 3  0FF4	E5 70		        mov     a,saved_psw
 4854+ 3  0FF6	54 C4		        anl     a,#0c4h
 4855+ 3  0FF8	64 C4		        xrl     a,#0c4h
 4856+ 3  0FFA	54 FE		        anl     a,#0feh
 4857+ 3  0FFC	70 05		        jnz     ??0399
 4858+ 2			        endif
 4859+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 88



 Line  I  Addr  Code            Source

 4860+ 1			        eot     'd',??0399
 4861+ 2			        putc    #'d'
 4862+ 3  0FFE			??0427:
 4863+ 3			        ;jnb     SCON.1,putc_loop
 4864+ 3			        ;clr     SCON.1
 4865+ 3  0FFE	75 99 64	        mov     SBUF,#'d'
 4866+ 2  1001	80 06		        sjmp    ??0426
 4867+ 2  1003			??0399:  putc    #'?'
 4868+ 3  1003			??0428:
 4869+ 3			        ;jnb     SCON.1,putc_loop
 4870+ 3			        ;clr     SCON.1
 4871+ 3  1003	75 99 3F	        mov     SBUF,#'?'
 4872+ 2  1006	75 6E 01	        mov     fail,#001h
 4873+ 2  1009			??0426:
 4874+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 4875+ 1
 4876+ 1			        ; Optionally test immediate addressing modes.
 4877+ 1
 4878+ 1	N      FFFF	        if      (01h and 1) ne 0
 4879+ 1			        ; Test <op> A, #arg1...
 4880+ 1			        top_mb  add,a,??0403,<0c4h>
 4881+ 2  1009	74 98		        mov     a,#arg1
 4882+ 2			        ifnb    <0c4h>
 4883+ 2			        set_cy  0c4h
 4884+ 3	N      0000	??0429  set     (0c4h and 1)
 4885+ 3	N      0000	        if      ??0429 eq 1
 4886+ 3			        setb    c
 4887+ 3			        else
 4888+ 3  100B	C3		        clr     c
 4889+ 3			        endif
 4890+ 2			        endif
 4891+ 2  100C	24 88		        add      a,#arg0
 4892+ 2			        ifnb    <0c4h>
 4893+ 2			        save_psw
 4894+ 3  100E	85 D0 70	        mov     saved_psw,PSW
 4895+ 2			        endif
 4896+ 2  1011	F5 E0		        mov     ACC,a
 4897+ 2  1013	B4 20 0F	        cjne    a,#res,??0403
 4898+ 2			        ifnb    <0c4h>
 4899+ 2			        tst_psw <0c4h>,??0403
 4900+ 3  1016	E5 70		        mov     a,saved_psw
 4901+ 3  1018	54 C4		        anl     a,#0c4h
 4902+ 3  101A	64 C4		        xrl     a,#0c4h
 4903+ 3  101C	54 FE		        anl     a,#0feh
 4904+ 3  101E	70 05		        jnz     ??0403
 4905+ 2			        endif
 4906+ 1			        eot     'e',??0403
 4907+ 2			        putc    #'e'
 4908+ 3  1020			??0431:
 4909+ 3			        ;jnb     SCON.1,putc_loop
 4910+ 3			        ;clr     SCON.1
 4911+ 3  1020	75 99 65	        mov     SBUF,#'e'
 4912+ 2  1023	80 06		        sjmp    ??0430
 4913+ 2  1025			??0403:  putc    #'?'
 4914+ 3  1025			??0432:
 4915+ 3			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 89



 Line  I  Addr  Code            Source

 4916+ 3			        ;clr     SCON.1
 4917+ 3  1025	75 99 3F	        mov     SBUF,#'?'
 4918+ 2  1028	75 6E 01	        mov     fail,#001h
 4919+ 2  102B			??0430:
 4920+ 1			        endif
 4921+ 1
 4922+ 1	N      0000	        if      (01h and 2) ne 0
 4923+ 1			        ; ...and <op> dir, #arg1
 4924+ 1			        top_mb  add,dir0,??0404,<0c4h>
 4925+ 1			        eot     'f',??0404
 4926+ 1			        endif
 4927+ 1
 4928+ 1			        ; Optionally test <op> dir, A
 4929+ 1	N      0000	        if      (01h and 4) ne 0
 4930+ 1			        top_mc  add,??0405,<0c4h>
 4931+ 1			        eot     'g',??0405
 4932+ 1			        endif
 4933+ 1
 4934:				        putc    #'3'
 4935+ 1  102B			??0433:
 4936+ 1			        ;jnb     SCON.1,putc_loop
 4937+ 1			        ;clr     SCON.1
 4938+ 1  102B	75 99 33	        mov     SBUF,#'3'
 4939:				        tst_alu add,043h,0fbh,03eh,01h,080h     ;  CY /AC /OV
 4940+ 1			        ; Put the argument and result data into variables for easier access
 4941+ 1	N      0043	        arg0    set 043h
 4942+ 1	N      00FB	        arg1    set 0fbh
 4943+ 1	N      003E	        res     set 03eh
 4944+ 1
 4945+ 1			        ; Test <op> A, dir
 4946+ 1			        top_ma  add,dir0,??0435,<080h>
 4947+ 2  102E	75 60 43	        mov     dir0,#arg0
 4948+ 2  1031	74 FB		        mov     a,#arg1
 4949+ 2			        ifnb    <080h>
 4950+ 2			        set_cy  080h
 4951+ 3	N      0000	??0441  set     (080h and 1)
 4952+ 3	N      0000	        if      ??0441 eq 1
 4953+ 3			        setb    c
 4954+ 3			        else
 4955+ 3  1033	C3		        clr     c
 4956+ 3			        endif
 4957+ 2			        endif
 4958+ 2  1034	25 60		        add      a,dir0
 4959+ 2			        ifnb    <080h>
 4960+ 2			        save_psw
 4961+ 3  1036	85 D0 70	        mov     saved_psw,PSW
 4962+ 2			        endif
 4963+ 2  1039	B4 3E 6B	        cjne    a,#res,??0435
 4964+ 2			        ifnb    <080h>
 4965+ 2			        tst_psw <080h>,??0435
 4966+ 3  103C	E5 70		        mov     a,saved_psw
 4967+ 3  103E	54 C4		        anl     a,#0c4h
 4968+ 3  1040	64 80		        xrl     a,#080h
 4969+ 3  1042	54 FE		        anl     a,#0feh
 4970+ 3  1044	70 61		        jnz     ??0435
 4971+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 90



 Line  I  Addr  Code            Source

 4972+ 1			        ; Test <op> A, @R0
 4973+ 1  1046	78 60		        mov     r0,#dir0
 4974+ 1			        top_ma  add,@r0,??0435,<080h>
 4975+ 2  1048	76 43		        mov     @r0,#arg0
 4976+ 2  104A	74 FB		        mov     a,#arg1
 4977+ 2			        ifnb    <080h>
 4978+ 2			        set_cy  080h
 4979+ 3	N      0000	??0442  set     (080h and 1)
 4980+ 3	N      0000	        if      ??0442 eq 1
 4981+ 3			        setb    c
 4982+ 3			        else
 4983+ 3  104C	C3		        clr     c
 4984+ 3			        endif
 4985+ 2			        endif
 4986+ 2  104D	26		        add      a,@r0
 4987+ 2			        ifnb    <080h>
 4988+ 2			        save_psw
 4989+ 3  104E	85 D0 70	        mov     saved_psw,PSW
 4990+ 2			        endif
 4991+ 2  1051	B4 3E 53	        cjne    a,#res,??0435
 4992+ 2			        ifnb    <080h>
 4993+ 2			        tst_psw <080h>,??0435
 4994+ 3  1054	E5 70		        mov     a,saved_psw
 4995+ 3  1056	54 C4		        anl     a,#0c4h
 4996+ 3  1058	64 80		        xrl     a,#080h
 4997+ 3  105A	54 FE		        anl     a,#0feh
 4998+ 3  105C	70 49		        jnz     ??0435
 4999+ 2			        endif
 5000+ 1			        ; Test <op> A, @R1
 5001+ 1  105E	79 31		        mov     r1,#031h
 5002+ 1			        top_ma  add,@r1,??0435,<080h>
 5003+ 2  1060	77 43		        mov     @r1,#arg0
 5004+ 2  1062	74 FB		        mov     a,#arg1
 5005+ 2			        ifnb    <080h>
 5006+ 2			        set_cy  080h
 5007+ 3	N      0000	??0443  set     (080h and 1)
 5008+ 3	N      0000	        if      ??0443 eq 1
 5009+ 3			        setb    c
 5010+ 3			        else
 5011+ 3  1064	C3		        clr     c
 5012+ 3			        endif
 5013+ 2			        endif
 5014+ 2  1065	27		        add      a,@r1
 5015+ 2			        ifnb    <080h>
 5016+ 2			        save_psw
 5017+ 3  1066	85 D0 70	        mov     saved_psw,PSW
 5018+ 2			        endif
 5019+ 2  1069	B4 3E 3B	        cjne    a,#res,??0435
 5020+ 2			        ifnb    <080h>
 5021+ 2			        tst_psw <080h>,??0435
 5022+ 3  106C	E5 70		        mov     a,saved_psw
 5023+ 3  106E	54 C4		        anl     a,#0c4h
 5024+ 3  1070	64 80		        xrl     a,#080h
 5025+ 3  1072	54 FE		        anl     a,#0feh
 5026+ 3  1074	70 31		        jnz     ??0435
 5027+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 91



 Line  I  Addr  Code            Source

 5028+ 1
 5029+ 1			        ; Now test <op> A, Rn for n in 0..7
 5030+ 1			        top_ma  add,r0,??0435,<080h>
 5031+ 2  1076	78 43		        mov     r0,#arg0
 5032+ 2  1078	74 FB		        mov     a,#arg1
 5033+ 2			        ifnb    <080h>
 5034+ 2			        set_cy  080h
 5035+ 3	N      0000	??0444  set     (080h and 1)
 5036+ 3	N      0000	        if      ??0444 eq 1
 5037+ 3			        setb    c
 5038+ 3			        else
 5039+ 3  107A	C3		        clr     c
 5040+ 3			        endif
 5041+ 2			        endif
 5042+ 2  107B	28		        add      a,r0
 5043+ 2			        ifnb    <080h>
 5044+ 2			        save_psw
 5045+ 3  107C	85 D0 70	        mov     saved_psw,PSW
 5046+ 2			        endif
 5047+ 2  107F	B4 3E 25	        cjne    a,#res,??0435
 5048+ 2			        ifnb    <080h>
 5049+ 2			        tst_psw <080h>,??0435
 5050+ 3  1082	E5 70		        mov     a,saved_psw
 5051+ 3  1084	54 C4		        anl     a,#0c4h
 5052+ 3  1086	64 80		        xrl     a,#080h
 5053+ 3  1088	54 FE		        anl     a,#0feh
 5054+ 3  108A	70 1B		        jnz     ??0435
 5055+ 2			        endif
 5056+ 1			        top_ma  add,r1,??0435,<080h>
 5057+ 2  108C	79 43		        mov     r1,#arg0
 5058+ 2  108E	74 FB		        mov     a,#arg1
 5059+ 2			        ifnb    <080h>
 5060+ 2			        set_cy  080h
 5061+ 3	N      0000	??0445  set     (080h and 1)
 5062+ 3	N      0000	        if      ??0445 eq 1
 5063+ 3			        setb    c
 5064+ 3			        else
 5065+ 3  1090	C3		        clr     c
 5066+ 3			        endif
 5067+ 2			        endif
 5068+ 2  1091	29		        add      a,r1
 5069+ 2			        ifnb    <080h>
 5070+ 2			        save_psw
 5071+ 3  1092	85 D0 70	        mov     saved_psw,PSW
 5072+ 2			        endif
 5073+ 2  1095	B4 3E 0F	        cjne    a,#res,??0435
 5074+ 2			        ifnb    <080h>
 5075+ 2			        tst_psw <080h>,??0435
 5076+ 3  1098	E5 70		        mov     a,saved_psw
 5077+ 3  109A	54 C4		        anl     a,#0c4h
 5078+ 3  109C	64 80		        xrl     a,#080h
 5079+ 3  109E	54 FE		        anl     a,#0feh
 5080+ 3  10A0	70 05		        jnz     ??0435
 5081+ 2			        endif
 5082+ 1
 5083+ 1			        eot     'a',??0435

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 92



 Line  I  Addr  Code            Source

 5084+ 2			        putc    #'a'
 5085+ 3  10A2			??0447:
 5086+ 3			        ;jnb     SCON.1,putc_loop
 5087+ 3			        ;clr     SCON.1
 5088+ 3  10A2	75 99 61	        mov     SBUF,#'a'
 5089+ 2  10A5	80 06		        sjmp    ??0446
 5090+ 2  10A7			??0435:  putc    #'?'
 5091+ 3  10A7			??0448:
 5092+ 3			        ;jnb     SCON.1,putc_loop
 5093+ 3			        ;clr     SCON.1
 5094+ 3  10A7	75 99 3F	        mov     SBUF,#'?'
 5095+ 2  10AA	75 6E 01	        mov     fail,#001h
 5096+ 2  10AD			??0446:
 5097+ 1
 5098+ 1			        top_ma  add,r2,??0436,<080h>
 5099+ 2  10AD	7A 43		        mov     r2,#arg0
 5100+ 2  10AF	74 FB		        mov     a,#arg1
 5101+ 2			        ifnb    <080h>
 5102+ 2			        set_cy  080h
 5103+ 3	N      0000	??0449  set     (080h and 1)
 5104+ 3	N      0000	        if      ??0449 eq 1
 5105+ 3			        setb    c
 5106+ 3			        else
 5107+ 3  10B1	C3		        clr     c
 5108+ 3			        endif
 5109+ 2			        endif
 5110+ 2  10B2	2A		        add      a,r2
 5111+ 2			        ifnb    <080h>
 5112+ 2			        save_psw
 5113+ 3  10B3	85 D0 70	        mov     saved_psw,PSW
 5114+ 2			        endif
 5115+ 2  10B6	B4 3E 25	        cjne    a,#res,??0436
 5116+ 2			        ifnb    <080h>
 5117+ 2			        tst_psw <080h>,??0436
 5118+ 3  10B9	E5 70		        mov     a,saved_psw
 5119+ 3  10BB	54 C4		        anl     a,#0c4h
 5120+ 3  10BD	64 80		        xrl     a,#080h
 5121+ 3  10BF	54 FE		        anl     a,#0feh
 5122+ 3  10C1	70 1B		        jnz     ??0436
 5123+ 2			        endif
 5124+ 1			        top_ma  add,r3,??0436,<080h>
 5125+ 2  10C3	7B 43		        mov     r3,#arg0
 5126+ 2  10C5	74 FB		        mov     a,#arg1
 5127+ 2			        ifnb    <080h>
 5128+ 2			        set_cy  080h
 5129+ 3	N      0000	??0450  set     (080h and 1)
 5130+ 3	N      0000	        if      ??0450 eq 1
 5131+ 3			        setb    c
 5132+ 3			        else
 5133+ 3  10C7	C3		        clr     c
 5134+ 3			        endif
 5135+ 2			        endif
 5136+ 2  10C8	2B		        add      a,r3
 5137+ 2			        ifnb    <080h>
 5138+ 2			        save_psw
 5139+ 3  10C9	85 D0 70	        mov     saved_psw,PSW

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 93



 Line  I  Addr  Code            Source

 5140+ 2			        endif
 5141+ 2  10CC	B4 3E 0F	        cjne    a,#res,??0436
 5142+ 2			        ifnb    <080h>
 5143+ 2			        tst_psw <080h>,??0436
 5144+ 3  10CF	E5 70		        mov     a,saved_psw
 5145+ 3  10D1	54 C4		        anl     a,#0c4h
 5146+ 3  10D3	64 80		        xrl     a,#080h
 5147+ 3  10D5	54 FE		        anl     a,#0feh
 5148+ 3  10D7	70 05		        jnz     ??0436
 5149+ 2			        endif
 5150+ 1
 5151+ 1			        eot     'b',??0436
 5152+ 2			        putc    #'b'
 5153+ 3  10D9			??0452:
 5154+ 3			        ;jnb     SCON.1,putc_loop
 5155+ 3			        ;clr     SCON.1
 5156+ 3  10D9	75 99 62	        mov     SBUF,#'b'
 5157+ 2  10DC	80 06		        sjmp    ??0451
 5158+ 2  10DE			??0436:  putc    #'?'
 5159+ 3  10DE			??0453:
 5160+ 3			        ;jnb     SCON.1,putc_loop
 5161+ 3			        ;clr     SCON.1
 5162+ 3  10DE	75 99 3F	        mov     SBUF,#'?'
 5163+ 2  10E1	75 6E 01	        mov     fail,#001h
 5164+ 2  10E4			??0451:
 5165+ 1
 5166+ 1			        top_ma  add,r4,??0437,<080h>
 5167+ 2  10E4	7C 43		        mov     r4,#arg0
 5168+ 2  10E6	74 FB		        mov     a,#arg1
 5169+ 2			        ifnb    <080h>
 5170+ 2			        set_cy  080h
 5171+ 3	N      0000	??0454  set     (080h and 1)
 5172+ 3	N      0000	        if      ??0454 eq 1
 5173+ 3			        setb    c
 5174+ 3			        else
 5175+ 3  10E8	C3		        clr     c
 5176+ 3			        endif
 5177+ 2			        endif
 5178+ 2  10E9	2C		        add      a,r4
 5179+ 2			        ifnb    <080h>
 5180+ 2			        save_psw
 5181+ 3  10EA	85 D0 70	        mov     saved_psw,PSW
 5182+ 2			        endif
 5183+ 2  10ED	B4 3E 25	        cjne    a,#res,??0437
 5184+ 2			        ifnb    <080h>
 5185+ 2			        tst_psw <080h>,??0437
 5186+ 3  10F0	E5 70		        mov     a,saved_psw
 5187+ 3  10F2	54 C4		        anl     a,#0c4h
 5188+ 3  10F4	64 80		        xrl     a,#080h
 5189+ 3  10F6	54 FE		        anl     a,#0feh
 5190+ 3  10F8	70 1B		        jnz     ??0437
 5191+ 2			        endif
 5192+ 1			        top_ma  add,r5,??0437,<080h>
 5193+ 2  10FA	7D 43		        mov     r5,#arg0
 5194+ 2  10FC	74 FB		        mov     a,#arg1
 5195+ 2			        ifnb    <080h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 94



 Line  I  Addr  Code            Source

 5196+ 2			        set_cy  080h
 5197+ 3	N      0000	??0455  set     (080h and 1)
 5198+ 3	N      0000	        if      ??0455 eq 1
 5199+ 3			        setb    c
 5200+ 3			        else
 5201+ 3  10FE	C3		        clr     c
 5202+ 3			        endif
 5203+ 2			        endif
 5204+ 2  10FF	2D		        add      a,r5
 5205+ 2			        ifnb    <080h>
 5206+ 2			        save_psw
 5207+ 3  1100	85 D0 70	        mov     saved_psw,PSW
 5208+ 2			        endif
 5209+ 2  1103	B4 3E 0F	        cjne    a,#res,??0437
 5210+ 2			        ifnb    <080h>
 5211+ 2			        tst_psw <080h>,??0437
 5212+ 3  1106	E5 70		        mov     a,saved_psw
 5213+ 3  1108	54 C4		        anl     a,#0c4h
 5214+ 3  110A	64 80		        xrl     a,#080h
 5215+ 3  110C	54 FE		        anl     a,#0feh
 5216+ 3  110E	70 05		        jnz     ??0437
 5217+ 2			        endif
 5218+ 1
 5219+ 1			        eot     'c',??0437
 5220+ 2			        putc    #'c'
 5221+ 3  1110			??0457:
 5222+ 3			        ;jnb     SCON.1,putc_loop
 5223+ 3			        ;clr     SCON.1
 5224+ 3  1110	75 99 63	        mov     SBUF,#'c'
 5225+ 2  1113	80 06		        sjmp    ??0456
 5226+ 2  1115			??0437:  putc    #'?'
 5227+ 3  1115			??0458:
 5228+ 3			        ;jnb     SCON.1,putc_loop
 5229+ 3			        ;clr     SCON.1
 5230+ 3  1115	75 99 3F	        mov     SBUF,#'?'
 5231+ 2  1118	75 6E 01	        mov     fail,#001h
 5232+ 2  111B			??0456:
 5233+ 1
 5234+ 1			        top_ma  add,r6,??0434,<080h>
 5235+ 2  111B	7E 43		        mov     r6,#arg0
 5236+ 2  111D	74 FB		        mov     a,#arg1
 5237+ 2			        ifnb    <080h>
 5238+ 2			        set_cy  080h
 5239+ 3	N      0000	??0459  set     (080h and 1)
 5240+ 3	N      0000	        if      ??0459 eq 1
 5241+ 3			        setb    c
 5242+ 3			        else
 5243+ 3  111F	C3		        clr     c
 5244+ 3			        endif
 5245+ 2			        endif
 5246+ 2  1120	2E		        add      a,r6
 5247+ 2			        ifnb    <080h>
 5248+ 2			        save_psw
 5249+ 3  1121	85 D0 70	        mov     saved_psw,PSW
 5250+ 2			        endif
 5251+ 2  1124	B4 3E 25	        cjne    a,#res,??0434

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 95



 Line  I  Addr  Code            Source

 5252+ 2			        ifnb    <080h>
 5253+ 2			        tst_psw <080h>,??0434
 5254+ 3  1127	E5 70		        mov     a,saved_psw
 5255+ 3  1129	54 C4		        anl     a,#0c4h
 5256+ 3  112B	64 80		        xrl     a,#080h
 5257+ 3  112D	54 FE		        anl     a,#0feh
 5258+ 3  112F	70 1B		        jnz     ??0434
 5259+ 2			        endif
 5260+ 1			        top_ma  add,r7,??0434,<080h>
 5261+ 2  1131	7F 43		        mov     r7,#arg0
 5262+ 2  1133	74 FB		        mov     a,#arg1
 5263+ 2			        ifnb    <080h>
 5264+ 2			        set_cy  080h
 5265+ 3	N      0000	??0460  set     (080h and 1)
 5266+ 3	N      0000	        if      ??0460 eq 1
 5267+ 3			        setb    c
 5268+ 3			        else
 5269+ 3  1135	C3		        clr     c
 5270+ 3			        endif
 5271+ 2			        endif
 5272+ 2  1136	2F		        add      a,r7
 5273+ 2			        ifnb    <080h>
 5274+ 2			        save_psw
 5275+ 3  1137	85 D0 70	        mov     saved_psw,PSW
 5276+ 2			        endif
 5277+ 2  113A	B4 3E 0F	        cjne    a,#res,??0434
 5278+ 2			        ifnb    <080h>
 5279+ 2			        tst_psw <080h>,??0434
 5280+ 3  113D	E5 70		        mov     a,saved_psw
 5281+ 3  113F	54 C4		        anl     a,#0c4h
 5282+ 3  1141	64 80		        xrl     a,#080h
 5283+ 3  1143	54 FE		        anl     a,#0feh
 5284+ 3  1145	70 05		        jnz     ??0434
 5285+ 2			        endif
 5286+ 1
 5287+ 1			        eot     'd',??0434
 5288+ 2			        putc    #'d'
 5289+ 3  1147			??0462:
 5290+ 3			        ;jnb     SCON.1,putc_loop
 5291+ 3			        ;clr     SCON.1
 5292+ 3  1147	75 99 64	        mov     SBUF,#'d'
 5293+ 2  114A	80 06		        sjmp    ??0461
 5294+ 2  114C			??0434:  putc    #'?'
 5295+ 3  114C			??0463:
 5296+ 3			        ;jnb     SCON.1,putc_loop
 5297+ 3			        ;clr     SCON.1
 5298+ 3  114C	75 99 3F	        mov     SBUF,#'?'
 5299+ 2  114F	75 6E 01	        mov     fail,#001h
 5300+ 2  1152			??0461:
 5301+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 5302+ 1
 5303+ 1			        ; Optionally test immediate addressing modes.
 5304+ 1
 5305+ 1	N      FFFF	        if      (01h and 1) ne 0
 5306+ 1			        ; Test <op> A, #arg1...
 5307+ 1			        top_mb  add,a,??0438,<080h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 96



 Line  I  Addr  Code            Source

 5308+ 2  1152	74 FB		        mov     a,#arg1
 5309+ 2			        ifnb    <080h>
 5310+ 2			        set_cy  080h
 5311+ 3	N      0000	??0464  set     (080h and 1)
 5312+ 3	N      0000	        if      ??0464 eq 1
 5313+ 3			        setb    c
 5314+ 3			        else
 5315+ 3  1154	C3		        clr     c
 5316+ 3			        endif
 5317+ 2			        endif
 5318+ 2  1155	24 43		        add      a,#arg0
 5319+ 2			        ifnb    <080h>
 5320+ 2			        save_psw
 5321+ 3  1157	85 D0 70	        mov     saved_psw,PSW
 5322+ 2			        endif
 5323+ 2  115A	F5 E0		        mov     ACC,a
 5324+ 2  115C	B4 3E 0F	        cjne    a,#res,??0438
 5325+ 2			        ifnb    <080h>
 5326+ 2			        tst_psw <080h>,??0438
 5327+ 3  115F	E5 70		        mov     a,saved_psw
 5328+ 3  1161	54 C4		        anl     a,#0c4h
 5329+ 3  1163	64 80		        xrl     a,#080h
 5330+ 3  1165	54 FE		        anl     a,#0feh
 5331+ 3  1167	70 05		        jnz     ??0438
 5332+ 2			        endif
 5333+ 1			        eot     'e',??0438
 5334+ 2			        putc    #'e'
 5335+ 3  1169			??0466:
 5336+ 3			        ;jnb     SCON.1,putc_loop
 5337+ 3			        ;clr     SCON.1
 5338+ 3  1169	75 99 65	        mov     SBUF,#'e'
 5339+ 2  116C	80 06		        sjmp    ??0465
 5340+ 2  116E			??0438:  putc    #'?'
 5341+ 3  116E			??0467:
 5342+ 3			        ;jnb     SCON.1,putc_loop
 5343+ 3			        ;clr     SCON.1
 5344+ 3  116E	75 99 3F	        mov     SBUF,#'?'
 5345+ 2  1171	75 6E 01	        mov     fail,#001h
 5346+ 2  1174			??0465:
 5347+ 1			        endif
 5348+ 1
 5349+ 1	N      0000	        if      (01h and 2) ne 0
 5350+ 1			        ; ...and <op> dir, #arg1
 5351+ 1			        top_mb  add,dir0,??0439,<080h>
 5352+ 1			        eot     'f',??0439
 5353+ 1			        endif
 5354+ 1
 5355+ 1			        ; Optionally test <op> dir, A
 5356+ 1	N      0000	        if      (01h and 4) ne 0
 5357+ 1			        top_mc  add,??0440,<080h>
 5358+ 1			        eot     'g',??0440
 5359+ 1			        endif
 5360+ 1
 5361:
 5362:				        put_crlf                    ; end of test series
 5363+ 1			        putc    #13

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 97



 Line  I  Addr  Code            Source

 5364+ 2  1174			??0468:
 5365+ 2			        ;jnb     SCON.1,putc_loop
 5366+ 2			        ;clr     SCON.1
 5367+ 2  1174	75 99 0D	        mov     SBUF,#13
 5368+ 1			        putc    #10
 5369+ 2  1177			??0469:
 5370+ 2			        ;jnb     SCON.1,putc_loop
 5371+ 2			        ;clr     SCON.1
 5372+ 2  1177	75 99 0A	        mov     SBUF,#10
 5373:
 5374:
 5375:				        ;-- Test series M ------------------------------------------------------
 5376:				        ; ADDC
 5377:				        ; (See comments for 'ALU opcode block test')
 5378:				        ; Note the test runs 4 times for different values of operands
 5379:
 5380:				        putc    #'M'                ; start of test series
 5381+ 1  117A			??0470:
 5382+ 1			        ;jnb     SCON.1,putc_loop
 5383+ 1			        ;clr     SCON.1
 5384+ 1  117A	75 99 4D	        mov     SBUF,#'M'
 5385:
 5386:				        putc    #'0'
 5387+ 1  117D			??0471:
 5388+ 1			        ;jnb     SCON.1,putc_loop
 5389+ 1			        ;clr     SCON.1
 5390+ 1  117D	75 99 30	        mov     SBUF,#'0'
 5391:				        tst_alu addc,051h,033h,084h,01h,004h     ; /CY /AC  OV
 5392+ 1			        ; Put the argument and result data into variables for easier access
 5393+ 1	N      0051	        arg0    set 051h
 5394+ 1	N      0033	        arg1    set 033h
 5395+ 1	N      0084	        res     set 084h
 5396+ 1
 5397+ 1			        ; Test <op> A, dir
 5398+ 1			        top_ma  addc,dir0,??0473,<004h>
 5399+ 2  1180	75 60 51	        mov     dir0,#arg0
 5400+ 2  1183	74 33		        mov     a,#arg1
 5401+ 2			        ifnb    <004h>
 5402+ 2			        set_cy  004h
 5403+ 3	N      0000	??0479  set     (004h and 1)
 5404+ 3	N      0000	        if      ??0479 eq 1
 5405+ 3			        setb    c
 5406+ 3			        else
 5407+ 3  1185	C3		        clr     c
 5408+ 3			        endif
 5409+ 2			        endif
 5410+ 2  1186	35 60		        addc      a,dir0
 5411+ 2			        ifnb    <004h>
 5412+ 2			        save_psw
 5413+ 3  1188	85 D0 70	        mov     saved_psw,PSW
 5414+ 2			        endif
 5415+ 2  118B	B4 84 6B	        cjne    a,#res,??0473
 5416+ 2			        ifnb    <004h>
 5417+ 2			        tst_psw <004h>,??0473
 5418+ 3  118E	E5 70		        mov     a,saved_psw
 5419+ 3  1190	54 C4		        anl     a,#0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 98



 Line  I  Addr  Code            Source

 5420+ 3  1192	64 04		        xrl     a,#004h
 5421+ 3  1194	54 FE		        anl     a,#0feh
 5422+ 3  1196	70 61		        jnz     ??0473
 5423+ 2			        endif
 5424+ 1			        ; Test <op> A, @R0
 5425+ 1  1198	78 60		        mov     r0,#dir0
 5426+ 1			        top_ma  addc,@r0,??0473,<004h>
 5427+ 2  119A	76 51		        mov     @r0,#arg0
 5428+ 2  119C	74 33		        mov     a,#arg1
 5429+ 2			        ifnb    <004h>
 5430+ 2			        set_cy  004h
 5431+ 3	N      0000	??0480  set     (004h and 1)
 5432+ 3	N      0000	        if      ??0480 eq 1
 5433+ 3			        setb    c
 5434+ 3			        else
 5435+ 3  119E	C3		        clr     c
 5436+ 3			        endif
 5437+ 2			        endif
 5438+ 2  119F	36		        addc      a,@r0
 5439+ 2			        ifnb    <004h>
 5440+ 2			        save_psw
 5441+ 3  11A0	85 D0 70	        mov     saved_psw,PSW
 5442+ 2			        endif
 5443+ 2  11A3	B4 84 53	        cjne    a,#res,??0473
 5444+ 2			        ifnb    <004h>
 5445+ 2			        tst_psw <004h>,??0473
 5446+ 3  11A6	E5 70		        mov     a,saved_psw
 5447+ 3  11A8	54 C4		        anl     a,#0c4h
 5448+ 3  11AA	64 04		        xrl     a,#004h
 5449+ 3  11AC	54 FE		        anl     a,#0feh
 5450+ 3  11AE	70 49		        jnz     ??0473
 5451+ 2			        endif
 5452+ 1			        ; Test <op> A, @R1
 5453+ 1  11B0	79 31		        mov     r1,#031h
 5454+ 1			        top_ma  addc,@r1,??0473,<004h>
 5455+ 2  11B2	77 51		        mov     @r1,#arg0
 5456+ 2  11B4	74 33		        mov     a,#arg1
 5457+ 2			        ifnb    <004h>
 5458+ 2			        set_cy  004h
 5459+ 3	N      0000	??0481  set     (004h and 1)
 5460+ 3	N      0000	        if      ??0481 eq 1
 5461+ 3			        setb    c
 5462+ 3			        else
 5463+ 3  11B6	C3		        clr     c
 5464+ 3			        endif
 5465+ 2			        endif
 5466+ 2  11B7	37		        addc      a,@r1
 5467+ 2			        ifnb    <004h>
 5468+ 2			        save_psw
 5469+ 3  11B8	85 D0 70	        mov     saved_psw,PSW
 5470+ 2			        endif
 5471+ 2  11BB	B4 84 3B	        cjne    a,#res,??0473
 5472+ 2			        ifnb    <004h>
 5473+ 2			        tst_psw <004h>,??0473
 5474+ 3  11BE	E5 70		        mov     a,saved_psw
 5475+ 3  11C0	54 C4		        anl     a,#0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 99



 Line  I  Addr  Code            Source

 5476+ 3  11C2	64 04		        xrl     a,#004h
 5477+ 3  11C4	54 FE		        anl     a,#0feh
 5478+ 3  11C6	70 31		        jnz     ??0473
 5479+ 2			        endif
 5480+ 1
 5481+ 1			        ; Now test <op> A, Rn for n in 0..7
 5482+ 1			        top_ma  addc,r0,??0473,<004h>
 5483+ 2  11C8	78 51		        mov     r0,#arg0
 5484+ 2  11CA	74 33		        mov     a,#arg1
 5485+ 2			        ifnb    <004h>
 5486+ 2			        set_cy  004h
 5487+ 3	N      0000	??0482  set     (004h and 1)
 5488+ 3	N      0000	        if      ??0482 eq 1
 5489+ 3			        setb    c
 5490+ 3			        else
 5491+ 3  11CC	C3		        clr     c
 5492+ 3			        endif
 5493+ 2			        endif
 5494+ 2  11CD	38		        addc      a,r0
 5495+ 2			        ifnb    <004h>
 5496+ 2			        save_psw
 5497+ 3  11CE	85 D0 70	        mov     saved_psw,PSW
 5498+ 2			        endif
 5499+ 2  11D1	B4 84 25	        cjne    a,#res,??0473
 5500+ 2			        ifnb    <004h>
 5501+ 2			        tst_psw <004h>,??0473
 5502+ 3  11D4	E5 70		        mov     a,saved_psw
 5503+ 3  11D6	54 C4		        anl     a,#0c4h
 5504+ 3  11D8	64 04		        xrl     a,#004h
 5505+ 3  11DA	54 FE		        anl     a,#0feh
 5506+ 3  11DC	70 1B		        jnz     ??0473
 5507+ 2			        endif
 5508+ 1			        top_ma  addc,r1,??0473,<004h>
 5509+ 2  11DE	79 51		        mov     r1,#arg0
 5510+ 2  11E0	74 33		        mov     a,#arg1
 5511+ 2			        ifnb    <004h>
 5512+ 2			        set_cy  004h
 5513+ 3	N      0000	??0483  set     (004h and 1)
 5514+ 3	N      0000	        if      ??0483 eq 1
 5515+ 3			        setb    c
 5516+ 3			        else
 5517+ 3  11E2	C3		        clr     c
 5518+ 3			        endif
 5519+ 2			        endif
 5520+ 2  11E3	39		        addc      a,r1
 5521+ 2			        ifnb    <004h>
 5522+ 2			        save_psw
 5523+ 3  11E4	85 D0 70	        mov     saved_psw,PSW
 5524+ 2			        endif
 5525+ 2  11E7	B4 84 0F	        cjne    a,#res,??0473
 5526+ 2			        ifnb    <004h>
 5527+ 2			        tst_psw <004h>,??0473
 5528+ 3  11EA	E5 70		        mov     a,saved_psw
 5529+ 3  11EC	54 C4		        anl     a,#0c4h
 5530+ 3  11EE	64 04		        xrl     a,#004h
 5531+ 3  11F0	54 FE		        anl     a,#0feh

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 100



 Line  I  Addr  Code            Source

 5532+ 3  11F2	70 05		        jnz     ??0473
 5533+ 2			        endif
 5534+ 1
 5535+ 1			        eot     'a',??0473
 5536+ 2			        putc    #'a'
 5537+ 3  11F4			??0485:
 5538+ 3			        ;jnb     SCON.1,putc_loop
 5539+ 3			        ;clr     SCON.1
 5540+ 3  11F4	75 99 61	        mov     SBUF,#'a'
 5541+ 2  11F7	80 06		        sjmp    ??0484
 5542+ 2  11F9			??0473:  putc    #'?'
 5543+ 3  11F9			??0486:
 5544+ 3			        ;jnb     SCON.1,putc_loop
 5545+ 3			        ;clr     SCON.1
 5546+ 3  11F9	75 99 3F	        mov     SBUF,#'?'
 5547+ 2  11FC	75 6E 01	        mov     fail,#001h
 5548+ 2  11FF			??0484:
 5549+ 1
 5550+ 1			        top_ma  addc,r2,??0474,<004h>
 5551+ 2  11FF	7A 51		        mov     r2,#arg0
 5552+ 2  1201	74 33		        mov     a,#arg1
 5553+ 2			        ifnb    <004h>
 5554+ 2			        set_cy  004h
 5555+ 3	N      0000	??0487  set     (004h and 1)
 5556+ 3	N      0000	        if      ??0487 eq 1
 5557+ 3			        setb    c
 5558+ 3			        else
 5559+ 3  1203	C3		        clr     c
 5560+ 3			        endif
 5561+ 2			        endif
 5562+ 2  1204	3A		        addc      a,r2
 5563+ 2			        ifnb    <004h>
 5564+ 2			        save_psw
 5565+ 3  1205	85 D0 70	        mov     saved_psw,PSW
 5566+ 2			        endif
 5567+ 2  1208	B4 84 25	        cjne    a,#res,??0474
 5568+ 2			        ifnb    <004h>
 5569+ 2			        tst_psw <004h>,??0474
 5570+ 3  120B	E5 70		        mov     a,saved_psw
 5571+ 3  120D	54 C4		        anl     a,#0c4h
 5572+ 3  120F	64 04		        xrl     a,#004h
 5573+ 3  1211	54 FE		        anl     a,#0feh
 5574+ 3  1213	70 1B		        jnz     ??0474
 5575+ 2			        endif
 5576+ 1			        top_ma  addc,r3,??0474,<004h>
 5577+ 2  1215	7B 51		        mov     r3,#arg0
 5578+ 2  1217	74 33		        mov     a,#arg1
 5579+ 2			        ifnb    <004h>
 5580+ 2			        set_cy  004h
 5581+ 3	N      0000	??0488  set     (004h and 1)
 5582+ 3	N      0000	        if      ??0488 eq 1
 5583+ 3			        setb    c
 5584+ 3			        else
 5585+ 3  1219	C3		        clr     c
 5586+ 3			        endif
 5587+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 101



 Line  I  Addr  Code            Source

 5588+ 2  121A	3B		        addc      a,r3
 5589+ 2			        ifnb    <004h>
 5590+ 2			        save_psw
 5591+ 3  121B	85 D0 70	        mov     saved_psw,PSW
 5592+ 2			        endif
 5593+ 2  121E	B4 84 0F	        cjne    a,#res,??0474
 5594+ 2			        ifnb    <004h>
 5595+ 2			        tst_psw <004h>,??0474
 5596+ 3  1221	E5 70		        mov     a,saved_psw
 5597+ 3  1223	54 C4		        anl     a,#0c4h
 5598+ 3  1225	64 04		        xrl     a,#004h
 5599+ 3  1227	54 FE		        anl     a,#0feh
 5600+ 3  1229	70 05		        jnz     ??0474
 5601+ 2			        endif
 5602+ 1
 5603+ 1			        eot     'b',??0474
 5604+ 2			        putc    #'b'
 5605+ 3  122B			??0490:
 5606+ 3			        ;jnb     SCON.1,putc_loop
 5607+ 3			        ;clr     SCON.1
 5608+ 3  122B	75 99 62	        mov     SBUF,#'b'
 5609+ 2  122E	80 06		        sjmp    ??0489
 5610+ 2  1230			??0474:  putc    #'?'
 5611+ 3  1230			??0491:
 5612+ 3			        ;jnb     SCON.1,putc_loop
 5613+ 3			        ;clr     SCON.1
 5614+ 3  1230	75 99 3F	        mov     SBUF,#'?'
 5615+ 2  1233	75 6E 01	        mov     fail,#001h
 5616+ 2  1236			??0489:
 5617+ 1
 5618+ 1			        top_ma  addc,r4,??0475,<004h>
 5619+ 2  1236	7C 51		        mov     r4,#arg0
 5620+ 2  1238	74 33		        mov     a,#arg1
 5621+ 2			        ifnb    <004h>
 5622+ 2			        set_cy  004h
 5623+ 3	N      0000	??0492  set     (004h and 1)
 5624+ 3	N      0000	        if      ??0492 eq 1
 5625+ 3			        setb    c
 5626+ 3			        else
 5627+ 3  123A	C3		        clr     c
 5628+ 3			        endif
 5629+ 2			        endif
 5630+ 2  123B	3C		        addc      a,r4
 5631+ 2			        ifnb    <004h>
 5632+ 2			        save_psw
 5633+ 3  123C	85 D0 70	        mov     saved_psw,PSW
 5634+ 2			        endif
 5635+ 2  123F	B4 84 25	        cjne    a,#res,??0475
 5636+ 2			        ifnb    <004h>
 5637+ 2			        tst_psw <004h>,??0475
 5638+ 3  1242	E5 70		        mov     a,saved_psw
 5639+ 3  1244	54 C4		        anl     a,#0c4h
 5640+ 3  1246	64 04		        xrl     a,#004h
 5641+ 3  1248	54 FE		        anl     a,#0feh
 5642+ 3  124A	70 1B		        jnz     ??0475
 5643+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 102



 Line  I  Addr  Code            Source

 5644+ 1			        top_ma  addc,r5,??0475,<004h>
 5645+ 2  124C	7D 51		        mov     r5,#arg0
 5646+ 2  124E	74 33		        mov     a,#arg1
 5647+ 2			        ifnb    <004h>
 5648+ 2			        set_cy  004h
 5649+ 3	N      0000	??0493  set     (004h and 1)
 5650+ 3	N      0000	        if      ??0493 eq 1
 5651+ 3			        setb    c
 5652+ 3			        else
 5653+ 3  1250	C3		        clr     c
 5654+ 3			        endif
 5655+ 2			        endif
 5656+ 2  1251	3D		        addc      a,r5
 5657+ 2			        ifnb    <004h>
 5658+ 2			        save_psw
 5659+ 3  1252	85 D0 70	        mov     saved_psw,PSW
 5660+ 2			        endif
 5661+ 2  1255	B4 84 0F	        cjne    a,#res,??0475
 5662+ 2			        ifnb    <004h>
 5663+ 2			        tst_psw <004h>,??0475
 5664+ 3  1258	E5 70		        mov     a,saved_psw
 5665+ 3  125A	54 C4		        anl     a,#0c4h
 5666+ 3  125C	64 04		        xrl     a,#004h
 5667+ 3  125E	54 FE		        anl     a,#0feh
 5668+ 3  1260	70 05		        jnz     ??0475
 5669+ 2			        endif
 5670+ 1
 5671+ 1			        eot     'c',??0475
 5672+ 2			        putc    #'c'
 5673+ 3  1262			??0495:
 5674+ 3			        ;jnb     SCON.1,putc_loop
 5675+ 3			        ;clr     SCON.1
 5676+ 3  1262	75 99 63	        mov     SBUF,#'c'
 5677+ 2  1265	80 06		        sjmp    ??0494
 5678+ 2  1267			??0475:  putc    #'?'
 5679+ 3  1267			??0496:
 5680+ 3			        ;jnb     SCON.1,putc_loop
 5681+ 3			        ;clr     SCON.1
 5682+ 3  1267	75 99 3F	        mov     SBUF,#'?'
 5683+ 2  126A	75 6E 01	        mov     fail,#001h
 5684+ 2  126D			??0494:
 5685+ 1
 5686+ 1			        top_ma  addc,r6,??0472,<004h>
 5687+ 2  126D	7E 51		        mov     r6,#arg0
 5688+ 2  126F	74 33		        mov     a,#arg1
 5689+ 2			        ifnb    <004h>
 5690+ 2			        set_cy  004h
 5691+ 3	N      0000	??0497  set     (004h and 1)
 5692+ 3	N      0000	        if      ??0497 eq 1
 5693+ 3			        setb    c
 5694+ 3			        else
 5695+ 3  1271	C3		        clr     c
 5696+ 3			        endif
 5697+ 2			        endif
 5698+ 2  1272	3E		        addc      a,r6
 5699+ 2			        ifnb    <004h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 103



 Line  I  Addr  Code            Source

 5700+ 2			        save_psw
 5701+ 3  1273	85 D0 70	        mov     saved_psw,PSW
 5702+ 2			        endif
 5703+ 2  1276	B4 84 25	        cjne    a,#res,??0472
 5704+ 2			        ifnb    <004h>
 5705+ 2			        tst_psw <004h>,??0472
 5706+ 3  1279	E5 70		        mov     a,saved_psw
 5707+ 3  127B	54 C4		        anl     a,#0c4h
 5708+ 3  127D	64 04		        xrl     a,#004h
 5709+ 3  127F	54 FE		        anl     a,#0feh
 5710+ 3  1281	70 1B		        jnz     ??0472
 5711+ 2			        endif
 5712+ 1			        top_ma  addc,r7,??0472,<004h>
 5713+ 2  1283	7F 51		        mov     r7,#arg0
 5714+ 2  1285	74 33		        mov     a,#arg1
 5715+ 2			        ifnb    <004h>
 5716+ 2			        set_cy  004h
 5717+ 3	N      0000	??0498  set     (004h and 1)
 5718+ 3	N      0000	        if      ??0498 eq 1
 5719+ 3			        setb    c
 5720+ 3			        else
 5721+ 3  1287	C3		        clr     c
 5722+ 3			        endif
 5723+ 2			        endif
 5724+ 2  1288	3F		        addc      a,r7
 5725+ 2			        ifnb    <004h>
 5726+ 2			        save_psw
 5727+ 3  1289	85 D0 70	        mov     saved_psw,PSW
 5728+ 2			        endif
 5729+ 2  128C	B4 84 0F	        cjne    a,#res,??0472
 5730+ 2			        ifnb    <004h>
 5731+ 2			        tst_psw <004h>,??0472
 5732+ 3  128F	E5 70		        mov     a,saved_psw
 5733+ 3  1291	54 C4		        anl     a,#0c4h
 5734+ 3  1293	64 04		        xrl     a,#004h
 5735+ 3  1295	54 FE		        anl     a,#0feh
 5736+ 3  1297	70 05		        jnz     ??0472
 5737+ 2			        endif
 5738+ 1
 5739+ 1			        eot     'd',??0472
 5740+ 2			        putc    #'d'
 5741+ 3  1299			??0500:
 5742+ 3			        ;jnb     SCON.1,putc_loop
 5743+ 3			        ;clr     SCON.1
 5744+ 3  1299	75 99 64	        mov     SBUF,#'d'
 5745+ 2  129C	80 06		        sjmp    ??0499
 5746+ 2  129E			??0472:  putc    #'?'
 5747+ 3  129E			??0501:
 5748+ 3			        ;jnb     SCON.1,putc_loop
 5749+ 3			        ;clr     SCON.1
 5750+ 3  129E	75 99 3F	        mov     SBUF,#'?'
 5751+ 2  12A1	75 6E 01	        mov     fail,#001h
 5752+ 2  12A4			??0499:
 5753+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 5754+ 1
 5755+ 1			        ; Optionally test immediate addressing modes.

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 104



 Line  I  Addr  Code            Source

 5756+ 1
 5757+ 1	N      FFFF	        if      (01h and 1) ne 0
 5758+ 1			        ; Test <op> A, #arg1...
 5759+ 1			        top_mb  addc,a,??0476,<004h>
 5760+ 2  12A4	74 33		        mov     a,#arg1
 5761+ 2			        ifnb    <004h>
 5762+ 2			        set_cy  004h
 5763+ 3	N      0000	??0502  set     (004h and 1)
 5764+ 3	N      0000	        if      ??0502 eq 1
 5765+ 3			        setb    c
 5766+ 3			        else
 5767+ 3  12A6	C3		        clr     c
 5768+ 3			        endif
 5769+ 2			        endif
 5770+ 2  12A7	34 51		        addc      a,#arg0
 5771+ 2			        ifnb    <004h>
 5772+ 2			        save_psw
 5773+ 3  12A9	85 D0 70	        mov     saved_psw,PSW
 5774+ 2			        endif
 5775+ 2  12AC	F5 E0		        mov     ACC,a
 5776+ 2  12AE	B4 84 0F	        cjne    a,#res,??0476
 5777+ 2			        ifnb    <004h>
 5778+ 2			        tst_psw <004h>,??0476
 5779+ 3  12B1	E5 70		        mov     a,saved_psw
 5780+ 3  12B3	54 C4		        anl     a,#0c4h
 5781+ 3  12B5	64 04		        xrl     a,#004h
 5782+ 3  12B7	54 FE		        anl     a,#0feh
 5783+ 3  12B9	70 05		        jnz     ??0476
 5784+ 2			        endif
 5785+ 1			        eot     'e',??0476
 5786+ 2			        putc    #'e'
 5787+ 3  12BB			??0504:
 5788+ 3			        ;jnb     SCON.1,putc_loop
 5789+ 3			        ;clr     SCON.1
 5790+ 3  12BB	75 99 65	        mov     SBUF,#'e'
 5791+ 2  12BE	80 06		        sjmp    ??0503
 5792+ 2  12C0			??0476:  putc    #'?'
 5793+ 3  12C0			??0505:
 5794+ 3			        ;jnb     SCON.1,putc_loop
 5795+ 3			        ;clr     SCON.1
 5796+ 3  12C0	75 99 3F	        mov     SBUF,#'?'
 5797+ 2  12C3	75 6E 01	        mov     fail,#001h
 5798+ 2  12C6			??0503:
 5799+ 1			        endif
 5800+ 1
 5801+ 1	N      0000	        if      (01h and 2) ne 0
 5802+ 1			        ; ...and <op> dir, #arg1
 5803+ 1			        top_mb  addc,dir0,??0477,<004h>
 5804+ 1			        eot     'f',??0477
 5805+ 1			        endif
 5806+ 1
 5807+ 1			        ; Optionally test <op> dir, A
 5808+ 1	N      0000	        if      (01h and 4) ne 0
 5809+ 1			        top_mc  addc,??0478,<004h>
 5810+ 1			        eot     'g',??0478
 5811+ 1			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 105



 Line  I  Addr  Code            Source

 5812+ 1
 5813:				        putc    #'1'
 5814+ 1  12C6			??0506:
 5815+ 1			        ;jnb     SCON.1,putc_loop
 5816+ 1			        ;clr     SCON.1
 5817+ 1  12C6	75 99 31	        mov     SBUF,#'1'
 5818:				        tst_alu addc,081h,093h,014h,01h,084h     ;  CY /AC  OV
 5819+ 1			        ; Put the argument and result data into variables for easier access
 5820+ 1	N      0081	        arg0    set 081h
 5821+ 1	N      0093	        arg1    set 093h
 5822+ 1	N      0014	        res     set 014h
 5823+ 1
 5824+ 1			        ; Test <op> A, dir
 5825+ 1			        top_ma  addc,dir0,??0508,<084h>
 5826+ 2  12C9	75 60 81	        mov     dir0,#arg0
 5827+ 2  12CC	74 93		        mov     a,#arg1
 5828+ 2			        ifnb    <084h>
 5829+ 2			        set_cy  084h
 5830+ 3	N      0000	??0514  set     (084h and 1)
 5831+ 3	N      0000	        if      ??0514 eq 1
 5832+ 3			        setb    c
 5833+ 3			        else
 5834+ 3  12CE	C3		        clr     c
 5835+ 3			        endif
 5836+ 2			        endif
 5837+ 2  12CF	35 60		        addc      a,dir0
 5838+ 2			        ifnb    <084h>
 5839+ 2			        save_psw
 5840+ 3  12D1	85 D0 70	        mov     saved_psw,PSW
 5841+ 2			        endif
 5842+ 2  12D4	B4 14 6B	        cjne    a,#res,??0508
 5843+ 2			        ifnb    <084h>
 5844+ 2			        tst_psw <084h>,??0508
 5845+ 3  12D7	E5 70		        mov     a,saved_psw
 5846+ 3  12D9	54 C4		        anl     a,#0c4h
 5847+ 3  12DB	64 84		        xrl     a,#084h
 5848+ 3  12DD	54 FE		        anl     a,#0feh
 5849+ 3  12DF	70 61		        jnz     ??0508
 5850+ 2			        endif
 5851+ 1			        ; Test <op> A, @R0
 5852+ 1  12E1	78 60		        mov     r0,#dir0
 5853+ 1			        top_ma  addc,@r0,??0508,<084h>
 5854+ 2  12E3	76 81		        mov     @r0,#arg0
 5855+ 2  12E5	74 93		        mov     a,#arg1
 5856+ 2			        ifnb    <084h>
 5857+ 2			        set_cy  084h
 5858+ 3	N      0000	??0515  set     (084h and 1)
 5859+ 3	N      0000	        if      ??0515 eq 1
 5860+ 3			        setb    c
 5861+ 3			        else
 5862+ 3  12E7	C3		        clr     c
 5863+ 3			        endif
 5864+ 2			        endif
 5865+ 2  12E8	36		        addc      a,@r0
 5866+ 2			        ifnb    <084h>
 5867+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 106



 Line  I  Addr  Code            Source

 5868+ 3  12E9	85 D0 70	        mov     saved_psw,PSW
 5869+ 2			        endif
 5870+ 2  12EC	B4 14 53	        cjne    a,#res,??0508
 5871+ 2			        ifnb    <084h>
 5872+ 2			        tst_psw <084h>,??0508
 5873+ 3  12EF	E5 70		        mov     a,saved_psw
 5874+ 3  12F1	54 C4		        anl     a,#0c4h
 5875+ 3  12F3	64 84		        xrl     a,#084h
 5876+ 3  12F5	54 FE		        anl     a,#0feh
 5877+ 3  12F7	70 49		        jnz     ??0508
 5878+ 2			        endif
 5879+ 1			        ; Test <op> A, @R1
 5880+ 1  12F9	79 31		        mov     r1,#031h
 5881+ 1			        top_ma  addc,@r1,??0508,<084h>
 5882+ 2  12FB	77 81		        mov     @r1,#arg0
 5883+ 2  12FD	74 93		        mov     a,#arg1
 5884+ 2			        ifnb    <084h>
 5885+ 2			        set_cy  084h
 5886+ 3	N      0000	??0516  set     (084h and 1)
 5887+ 3	N      0000	        if      ??0516 eq 1
 5888+ 3			        setb    c
 5889+ 3			        else
 5890+ 3  12FF	C3		        clr     c
 5891+ 3			        endif
 5892+ 2			        endif
 5893+ 2  1300	37		        addc      a,@r1
 5894+ 2			        ifnb    <084h>
 5895+ 2			        save_psw
 5896+ 3  1301	85 D0 70	        mov     saved_psw,PSW
 5897+ 2			        endif
 5898+ 2  1304	B4 14 3B	        cjne    a,#res,??0508
 5899+ 2			        ifnb    <084h>
 5900+ 2			        tst_psw <084h>,??0508
 5901+ 3  1307	E5 70		        mov     a,saved_psw
 5902+ 3  1309	54 C4		        anl     a,#0c4h
 5903+ 3  130B	64 84		        xrl     a,#084h
 5904+ 3  130D	54 FE		        anl     a,#0feh
 5905+ 3  130F	70 31		        jnz     ??0508
 5906+ 2			        endif
 5907+ 1
 5908+ 1			        ; Now test <op> A, Rn for n in 0..7
 5909+ 1			        top_ma  addc,r0,??0508,<084h>
 5910+ 2  1311	78 81		        mov     r0,#arg0
 5911+ 2  1313	74 93		        mov     a,#arg1
 5912+ 2			        ifnb    <084h>
 5913+ 2			        set_cy  084h
 5914+ 3	N      0000	??0517  set     (084h and 1)
 5915+ 3	N      0000	        if      ??0517 eq 1
 5916+ 3			        setb    c
 5917+ 3			        else
 5918+ 3  1315	C3		        clr     c
 5919+ 3			        endif
 5920+ 2			        endif
 5921+ 2  1316	38		        addc      a,r0
 5922+ 2			        ifnb    <084h>
 5923+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 107



 Line  I  Addr  Code            Source

 5924+ 3  1317	85 D0 70	        mov     saved_psw,PSW
 5925+ 2			        endif
 5926+ 2  131A	B4 14 25	        cjne    a,#res,??0508
 5927+ 2			        ifnb    <084h>
 5928+ 2			        tst_psw <084h>,??0508
 5929+ 3  131D	E5 70		        mov     a,saved_psw
 5930+ 3  131F	54 C4		        anl     a,#0c4h
 5931+ 3  1321	64 84		        xrl     a,#084h
 5932+ 3  1323	54 FE		        anl     a,#0feh
 5933+ 3  1325	70 1B		        jnz     ??0508
 5934+ 2			        endif
 5935+ 1			        top_ma  addc,r1,??0508,<084h>
 5936+ 2  1327	79 81		        mov     r1,#arg0
 5937+ 2  1329	74 93		        mov     a,#arg1
 5938+ 2			        ifnb    <084h>
 5939+ 2			        set_cy  084h
 5940+ 3	N      0000	??0518  set     (084h and 1)
 5941+ 3	N      0000	        if      ??0518 eq 1
 5942+ 3			        setb    c
 5943+ 3			        else
 5944+ 3  132B	C3		        clr     c
 5945+ 3			        endif
 5946+ 2			        endif
 5947+ 2  132C	39		        addc      a,r1
 5948+ 2			        ifnb    <084h>
 5949+ 2			        save_psw
 5950+ 3  132D	85 D0 70	        mov     saved_psw,PSW
 5951+ 2			        endif
 5952+ 2  1330	B4 14 0F	        cjne    a,#res,??0508
 5953+ 2			        ifnb    <084h>
 5954+ 2			        tst_psw <084h>,??0508
 5955+ 3  1333	E5 70		        mov     a,saved_psw
 5956+ 3  1335	54 C4		        anl     a,#0c4h
 5957+ 3  1337	64 84		        xrl     a,#084h
 5958+ 3  1339	54 FE		        anl     a,#0feh
 5959+ 3  133B	70 05		        jnz     ??0508
 5960+ 2			        endif
 5961+ 1
 5962+ 1			        eot     'a',??0508
 5963+ 2			        putc    #'a'
 5964+ 3  133D			??0520:
 5965+ 3			        ;jnb     SCON.1,putc_loop
 5966+ 3			        ;clr     SCON.1
 5967+ 3  133D	75 99 61	        mov     SBUF,#'a'
 5968+ 2  1340	80 06		        sjmp    ??0519
 5969+ 2  1342			??0508:  putc    #'?'
 5970+ 3  1342			??0521:
 5971+ 3			        ;jnb     SCON.1,putc_loop
 5972+ 3			        ;clr     SCON.1
 5973+ 3  1342	75 99 3F	        mov     SBUF,#'?'
 5974+ 2  1345	75 6E 01	        mov     fail,#001h
 5975+ 2  1348			??0519:
 5976+ 1
 5977+ 1			        top_ma  addc,r2,??0509,<084h>
 5978+ 2  1348	7A 81		        mov     r2,#arg0
 5979+ 2  134A	74 93		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 108



 Line  I  Addr  Code            Source

 5980+ 2			        ifnb    <084h>
 5981+ 2			        set_cy  084h
 5982+ 3	N      0000	??0522  set     (084h and 1)
 5983+ 3	N      0000	        if      ??0522 eq 1
 5984+ 3			        setb    c
 5985+ 3			        else
 5986+ 3  134C	C3		        clr     c
 5987+ 3			        endif
 5988+ 2			        endif
 5989+ 2  134D	3A		        addc      a,r2
 5990+ 2			        ifnb    <084h>
 5991+ 2			        save_psw
 5992+ 3  134E	85 D0 70	        mov     saved_psw,PSW
 5993+ 2			        endif
 5994+ 2  1351	B4 14 25	        cjne    a,#res,??0509
 5995+ 2			        ifnb    <084h>
 5996+ 2			        tst_psw <084h>,??0509
 5997+ 3  1354	E5 70		        mov     a,saved_psw
 5998+ 3  1356	54 C4		        anl     a,#0c4h
 5999+ 3  1358	64 84		        xrl     a,#084h
 6000+ 3  135A	54 FE		        anl     a,#0feh
 6001+ 3  135C	70 1B		        jnz     ??0509
 6002+ 2			        endif
 6003+ 1			        top_ma  addc,r3,??0509,<084h>
 6004+ 2  135E	7B 81		        mov     r3,#arg0
 6005+ 2  1360	74 93		        mov     a,#arg1
 6006+ 2			        ifnb    <084h>
 6007+ 2			        set_cy  084h
 6008+ 3	N      0000	??0523  set     (084h and 1)
 6009+ 3	N      0000	        if      ??0523 eq 1
 6010+ 3			        setb    c
 6011+ 3			        else
 6012+ 3  1362	C3		        clr     c
 6013+ 3			        endif
 6014+ 2			        endif
 6015+ 2  1363	3B		        addc      a,r3
 6016+ 2			        ifnb    <084h>
 6017+ 2			        save_psw
 6018+ 3  1364	85 D0 70	        mov     saved_psw,PSW
 6019+ 2			        endif
 6020+ 2  1367	B4 14 0F	        cjne    a,#res,??0509
 6021+ 2			        ifnb    <084h>
 6022+ 2			        tst_psw <084h>,??0509
 6023+ 3  136A	E5 70		        mov     a,saved_psw
 6024+ 3  136C	54 C4		        anl     a,#0c4h
 6025+ 3  136E	64 84		        xrl     a,#084h
 6026+ 3  1370	54 FE		        anl     a,#0feh
 6027+ 3  1372	70 05		        jnz     ??0509
 6028+ 2			        endif
 6029+ 1
 6030+ 1			        eot     'b',??0509
 6031+ 2			        putc    #'b'
 6032+ 3  1374			??0525:
 6033+ 3			        ;jnb     SCON.1,putc_loop
 6034+ 3			        ;clr     SCON.1
 6035+ 3  1374	75 99 62	        mov     SBUF,#'b'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 109



 Line  I  Addr  Code            Source

 6036+ 2  1377	80 06		        sjmp    ??0524
 6037+ 2  1379			??0509:  putc    #'?'
 6038+ 3  1379			??0526:
 6039+ 3			        ;jnb     SCON.1,putc_loop
 6040+ 3			        ;clr     SCON.1
 6041+ 3  1379	75 99 3F	        mov     SBUF,#'?'
 6042+ 2  137C	75 6E 01	        mov     fail,#001h
 6043+ 2  137F			??0524:
 6044+ 1
 6045+ 1			        top_ma  addc,r4,??0510,<084h>
 6046+ 2  137F	7C 81		        mov     r4,#arg0
 6047+ 2  1381	74 93		        mov     a,#arg1
 6048+ 2			        ifnb    <084h>
 6049+ 2			        set_cy  084h
 6050+ 3	N      0000	??0527  set     (084h and 1)
 6051+ 3	N      0000	        if      ??0527 eq 1
 6052+ 3			        setb    c
 6053+ 3			        else
 6054+ 3  1383	C3		        clr     c
 6055+ 3			        endif
 6056+ 2			        endif
 6057+ 2  1384	3C		        addc      a,r4
 6058+ 2			        ifnb    <084h>
 6059+ 2			        save_psw
 6060+ 3  1385	85 D0 70	        mov     saved_psw,PSW
 6061+ 2			        endif
 6062+ 2  1388	B4 14 25	        cjne    a,#res,??0510
 6063+ 2			        ifnb    <084h>
 6064+ 2			        tst_psw <084h>,??0510
 6065+ 3  138B	E5 70		        mov     a,saved_psw
 6066+ 3  138D	54 C4		        anl     a,#0c4h
 6067+ 3  138F	64 84		        xrl     a,#084h
 6068+ 3  1391	54 FE		        anl     a,#0feh
 6069+ 3  1393	70 1B		        jnz     ??0510
 6070+ 2			        endif
 6071+ 1			        top_ma  addc,r5,??0510,<084h>
 6072+ 2  1395	7D 81		        mov     r5,#arg0
 6073+ 2  1397	74 93		        mov     a,#arg1
 6074+ 2			        ifnb    <084h>
 6075+ 2			        set_cy  084h
 6076+ 3	N      0000	??0528  set     (084h and 1)
 6077+ 3	N      0000	        if      ??0528 eq 1
 6078+ 3			        setb    c
 6079+ 3			        else
 6080+ 3  1399	C3		        clr     c
 6081+ 3			        endif
 6082+ 2			        endif
 6083+ 2  139A	3D		        addc      a,r5
 6084+ 2			        ifnb    <084h>
 6085+ 2			        save_psw
 6086+ 3  139B	85 D0 70	        mov     saved_psw,PSW
 6087+ 2			        endif
 6088+ 2  139E	B4 14 0F	        cjne    a,#res,??0510
 6089+ 2			        ifnb    <084h>
 6090+ 2			        tst_psw <084h>,??0510
 6091+ 3  13A1	E5 70		        mov     a,saved_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 110



 Line  I  Addr  Code            Source

 6092+ 3  13A3	54 C4		        anl     a,#0c4h
 6093+ 3  13A5	64 84		        xrl     a,#084h
 6094+ 3  13A7	54 FE		        anl     a,#0feh
 6095+ 3  13A9	70 05		        jnz     ??0510
 6096+ 2			        endif
 6097+ 1
 6098+ 1			        eot     'c',??0510
 6099+ 2			        putc    #'c'
 6100+ 3  13AB			??0530:
 6101+ 3			        ;jnb     SCON.1,putc_loop
 6102+ 3			        ;clr     SCON.1
 6103+ 3  13AB	75 99 63	        mov     SBUF,#'c'
 6104+ 2  13AE	80 06		        sjmp    ??0529
 6105+ 2  13B0			??0510:  putc    #'?'
 6106+ 3  13B0			??0531:
 6107+ 3			        ;jnb     SCON.1,putc_loop
 6108+ 3			        ;clr     SCON.1
 6109+ 3  13B0	75 99 3F	        mov     SBUF,#'?'
 6110+ 2  13B3	75 6E 01	        mov     fail,#001h
 6111+ 2  13B6			??0529:
 6112+ 1
 6113+ 1			        top_ma  addc,r6,??0507,<084h>
 6114+ 2  13B6	7E 81		        mov     r6,#arg0
 6115+ 2  13B8	74 93		        mov     a,#arg1
 6116+ 2			        ifnb    <084h>
 6117+ 2			        set_cy  084h
 6118+ 3	N      0000	??0532  set     (084h and 1)
 6119+ 3	N      0000	        if      ??0532 eq 1
 6120+ 3			        setb    c
 6121+ 3			        else
 6122+ 3  13BA	C3		        clr     c
 6123+ 3			        endif
 6124+ 2			        endif
 6125+ 2  13BB	3E		        addc      a,r6
 6126+ 2			        ifnb    <084h>
 6127+ 2			        save_psw
 6128+ 3  13BC	85 D0 70	        mov     saved_psw,PSW
 6129+ 2			        endif
 6130+ 2  13BF	B4 14 25	        cjne    a,#res,??0507
 6131+ 2			        ifnb    <084h>
 6132+ 2			        tst_psw <084h>,??0507
 6133+ 3  13C2	E5 70		        mov     a,saved_psw
 6134+ 3  13C4	54 C4		        anl     a,#0c4h
 6135+ 3  13C6	64 84		        xrl     a,#084h
 6136+ 3  13C8	54 FE		        anl     a,#0feh
 6137+ 3  13CA	70 1B		        jnz     ??0507
 6138+ 2			        endif
 6139+ 1			        top_ma  addc,r7,??0507,<084h>
 6140+ 2  13CC	7F 81		        mov     r7,#arg0
 6141+ 2  13CE	74 93		        mov     a,#arg1
 6142+ 2			        ifnb    <084h>
 6143+ 2			        set_cy  084h
 6144+ 3	N      0000	??0533  set     (084h and 1)
 6145+ 3	N      0000	        if      ??0533 eq 1
 6146+ 3			        setb    c
 6147+ 3			        else

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 111



 Line  I  Addr  Code            Source

 6148+ 3  13D0	C3		        clr     c
 6149+ 3			        endif
 6150+ 2			        endif
 6151+ 2  13D1	3F		        addc      a,r7
 6152+ 2			        ifnb    <084h>
 6153+ 2			        save_psw
 6154+ 3  13D2	85 D0 70	        mov     saved_psw,PSW
 6155+ 2			        endif
 6156+ 2  13D5	B4 14 0F	        cjne    a,#res,??0507
 6157+ 2			        ifnb    <084h>
 6158+ 2			        tst_psw <084h>,??0507
 6159+ 3  13D8	E5 70		        mov     a,saved_psw
 6160+ 3  13DA	54 C4		        anl     a,#0c4h
 6161+ 3  13DC	64 84		        xrl     a,#084h
 6162+ 3  13DE	54 FE		        anl     a,#0feh
 6163+ 3  13E0	70 05		        jnz     ??0507
 6164+ 2			        endif
 6165+ 1
 6166+ 1			        eot     'd',??0507
 6167+ 2			        putc    #'d'
 6168+ 3  13E2			??0535:
 6169+ 3			        ;jnb     SCON.1,putc_loop
 6170+ 3			        ;clr     SCON.1
 6171+ 3  13E2	75 99 64	        mov     SBUF,#'d'
 6172+ 2  13E5	80 06		        sjmp    ??0534
 6173+ 2  13E7			??0507:  putc    #'?'
 6174+ 3  13E7			??0536:
 6175+ 3			        ;jnb     SCON.1,putc_loop
 6176+ 3			        ;clr     SCON.1
 6177+ 3  13E7	75 99 3F	        mov     SBUF,#'?'
 6178+ 2  13EA	75 6E 01	        mov     fail,#001h
 6179+ 2  13ED			??0534:
 6180+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 6181+ 1
 6182+ 1			        ; Optionally test immediate addressing modes.
 6183+ 1
 6184+ 1	N      FFFF	        if      (01h and 1) ne 0
 6185+ 1			        ; Test <op> A, #arg1...
 6186+ 1			        top_mb  addc,a,??0511,<084h>
 6187+ 2  13ED	74 93		        mov     a,#arg1
 6188+ 2			        ifnb    <084h>
 6189+ 2			        set_cy  084h
 6190+ 3	N      0000	??0537  set     (084h and 1)
 6191+ 3	N      0000	        if      ??0537 eq 1
 6192+ 3			        setb    c
 6193+ 3			        else
 6194+ 3  13EF	C3		        clr     c
 6195+ 3			        endif
 6196+ 2			        endif
 6197+ 2  13F0	34 81		        addc      a,#arg0
 6198+ 2			        ifnb    <084h>
 6199+ 2			        save_psw
 6200+ 3  13F2	85 D0 70	        mov     saved_psw,PSW
 6201+ 2			        endif
 6202+ 2  13F5	F5 E0		        mov     ACC,a
 6203+ 2  13F7	B4 14 0F	        cjne    a,#res,??0511

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 112



 Line  I  Addr  Code            Source

 6204+ 2			        ifnb    <084h>
 6205+ 2			        tst_psw <084h>,??0511
 6206+ 3  13FA	E5 70		        mov     a,saved_psw
 6207+ 3  13FC	54 C4		        anl     a,#0c4h
 6208+ 3  13FE	64 84		        xrl     a,#084h
 6209+ 3  1400	54 FE		        anl     a,#0feh
 6210+ 3  1402	70 05		        jnz     ??0511
 6211+ 2			        endif
 6212+ 1			        eot     'e',??0511
 6213+ 2			        putc    #'e'
 6214+ 3  1404			??0539:
 6215+ 3			        ;jnb     SCON.1,putc_loop
 6216+ 3			        ;clr     SCON.1
 6217+ 3  1404	75 99 65	        mov     SBUF,#'e'
 6218+ 2  1407	80 06		        sjmp    ??0538
 6219+ 2  1409			??0511:  putc    #'?'
 6220+ 3  1409			??0540:
 6221+ 3			        ;jnb     SCON.1,putc_loop
 6222+ 3			        ;clr     SCON.1
 6223+ 3  1409	75 99 3F	        mov     SBUF,#'?'
 6224+ 2  140C	75 6E 01	        mov     fail,#001h
 6225+ 2  140F			??0538:
 6226+ 1			        endif
 6227+ 1
 6228+ 1	N      0000	        if      (01h and 2) ne 0
 6229+ 1			        ; ...and <op> dir, #arg1
 6230+ 1			        top_mb  addc,dir0,??0512,<084h>
 6231+ 1			        eot     'f',??0512
 6232+ 1			        endif
 6233+ 1
 6234+ 1			        ; Optionally test <op> dir, A
 6235+ 1	N      0000	        if      (01h and 4) ne 0
 6236+ 1			        top_mc  addc,??0513,<084h>
 6237+ 1			        eot     'g',??0513
 6238+ 1			        endif
 6239+ 1
 6240:				        putc    #'2'
 6241+ 1  140F			??0541:
 6242+ 1			        ;jnb     SCON.1,putc_loop
 6243+ 1			        ;clr     SCON.1
 6244+ 1  140F	75 99 32	        mov     SBUF,#'2'
 6245:				        tst_alu addc,088h,098h,020h,01h,0c4h     ;  CY  AC  OV
 6246+ 1			        ; Put the argument and result data into variables for easier access
 6247+ 1	N      0088	        arg0    set 088h
 6248+ 1	N      0098	        arg1    set 098h
 6249+ 1	N      0020	        res     set 020h
 6250+ 1
 6251+ 1			        ; Test <op> A, dir
 6252+ 1			        top_ma  addc,dir0,??0543,<0c4h>
 6253+ 2  1412	75 60 88	        mov     dir0,#arg0
 6254+ 2  1415	74 98		        mov     a,#arg1
 6255+ 2			        ifnb    <0c4h>
 6256+ 2			        set_cy  0c4h
 6257+ 3	N      0000	??0549  set     (0c4h and 1)
 6258+ 3	N      0000	        if      ??0549 eq 1
 6259+ 3			        setb    c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 113



 Line  I  Addr  Code            Source

 6260+ 3			        else
 6261+ 3  1417	C3		        clr     c
 6262+ 3			        endif
 6263+ 2			        endif
 6264+ 2  1418	35 60		        addc      a,dir0
 6265+ 2			        ifnb    <0c4h>
 6266+ 2			        save_psw
 6267+ 3  141A	85 D0 70	        mov     saved_psw,PSW
 6268+ 2			        endif
 6269+ 2  141D	B4 20 6B	        cjne    a,#res,??0543
 6270+ 2			        ifnb    <0c4h>
 6271+ 2			        tst_psw <0c4h>,??0543
 6272+ 3  1420	E5 70		        mov     a,saved_psw
 6273+ 3  1422	54 C4		        anl     a,#0c4h
 6274+ 3  1424	64 C4		        xrl     a,#0c4h
 6275+ 3  1426	54 FE		        anl     a,#0feh
 6276+ 3  1428	70 61		        jnz     ??0543
 6277+ 2			        endif
 6278+ 1			        ; Test <op> A, @R0
 6279+ 1  142A	78 60		        mov     r0,#dir0
 6280+ 1			        top_ma  addc,@r0,??0543,<0c4h>
 6281+ 2  142C	76 88		        mov     @r0,#arg0
 6282+ 2  142E	74 98		        mov     a,#arg1
 6283+ 2			        ifnb    <0c4h>
 6284+ 2			        set_cy  0c4h
 6285+ 3	N      0000	??0550  set     (0c4h and 1)
 6286+ 3	N      0000	        if      ??0550 eq 1
 6287+ 3			        setb    c
 6288+ 3			        else
 6289+ 3  1430	C3		        clr     c
 6290+ 3			        endif
 6291+ 2			        endif
 6292+ 2  1431	36		        addc      a,@r0
 6293+ 2			        ifnb    <0c4h>
 6294+ 2			        save_psw
 6295+ 3  1432	85 D0 70	        mov     saved_psw,PSW
 6296+ 2			        endif
 6297+ 2  1435	B4 20 53	        cjne    a,#res,??0543
 6298+ 2			        ifnb    <0c4h>
 6299+ 2			        tst_psw <0c4h>,??0543
 6300+ 3  1438	E5 70		        mov     a,saved_psw
 6301+ 3  143A	54 C4		        anl     a,#0c4h
 6302+ 3  143C	64 C4		        xrl     a,#0c4h
 6303+ 3  143E	54 FE		        anl     a,#0feh
 6304+ 3  1440	70 49		        jnz     ??0543
 6305+ 2			        endif
 6306+ 1			        ; Test <op> A, @R1
 6307+ 1  1442	79 31		        mov     r1,#031h
 6308+ 1			        top_ma  addc,@r1,??0543,<0c4h>
 6309+ 2  1444	77 88		        mov     @r1,#arg0
 6310+ 2  1446	74 98		        mov     a,#arg1
 6311+ 2			        ifnb    <0c4h>
 6312+ 2			        set_cy  0c4h
 6313+ 3	N      0000	??0551  set     (0c4h and 1)
 6314+ 3	N      0000	        if      ??0551 eq 1
 6315+ 3			        setb    c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 114



 Line  I  Addr  Code            Source

 6316+ 3			        else
 6317+ 3  1448	C3		        clr     c
 6318+ 3			        endif
 6319+ 2			        endif
 6320+ 2  1449	37		        addc      a,@r1
 6321+ 2			        ifnb    <0c4h>
 6322+ 2			        save_psw
 6323+ 3  144A	85 D0 70	        mov     saved_psw,PSW
 6324+ 2			        endif
 6325+ 2  144D	B4 20 3B	        cjne    a,#res,??0543
 6326+ 2			        ifnb    <0c4h>
 6327+ 2			        tst_psw <0c4h>,??0543
 6328+ 3  1450	E5 70		        mov     a,saved_psw
 6329+ 3  1452	54 C4		        anl     a,#0c4h
 6330+ 3  1454	64 C4		        xrl     a,#0c4h
 6331+ 3  1456	54 FE		        anl     a,#0feh
 6332+ 3  1458	70 31		        jnz     ??0543
 6333+ 2			        endif
 6334+ 1
 6335+ 1			        ; Now test <op> A, Rn for n in 0..7
 6336+ 1			        top_ma  addc,r0,??0543,<0c4h>
 6337+ 2  145A	78 88		        mov     r0,#arg0
 6338+ 2  145C	74 98		        mov     a,#arg1
 6339+ 2			        ifnb    <0c4h>
 6340+ 2			        set_cy  0c4h
 6341+ 3	N      0000	??0552  set     (0c4h and 1)
 6342+ 3	N      0000	        if      ??0552 eq 1
 6343+ 3			        setb    c
 6344+ 3			        else
 6345+ 3  145E	C3		        clr     c
 6346+ 3			        endif
 6347+ 2			        endif
 6348+ 2  145F	38		        addc      a,r0
 6349+ 2			        ifnb    <0c4h>
 6350+ 2			        save_psw
 6351+ 3  1460	85 D0 70	        mov     saved_psw,PSW
 6352+ 2			        endif
 6353+ 2  1463	B4 20 25	        cjne    a,#res,??0543
 6354+ 2			        ifnb    <0c4h>
 6355+ 2			        tst_psw <0c4h>,??0543
 6356+ 3  1466	E5 70		        mov     a,saved_psw
 6357+ 3  1468	54 C4		        anl     a,#0c4h
 6358+ 3  146A	64 C4		        xrl     a,#0c4h
 6359+ 3  146C	54 FE		        anl     a,#0feh
 6360+ 3  146E	70 1B		        jnz     ??0543
 6361+ 2			        endif
 6362+ 1			        top_ma  addc,r1,??0543,<0c4h>
 6363+ 2  1470	79 88		        mov     r1,#arg0
 6364+ 2  1472	74 98		        mov     a,#arg1
 6365+ 2			        ifnb    <0c4h>
 6366+ 2			        set_cy  0c4h
 6367+ 3	N      0000	??0553  set     (0c4h and 1)
 6368+ 3	N      0000	        if      ??0553 eq 1
 6369+ 3			        setb    c
 6370+ 3			        else
 6371+ 3  1474	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 115



 Line  I  Addr  Code            Source

 6372+ 3			        endif
 6373+ 2			        endif
 6374+ 2  1475	39		        addc      a,r1
 6375+ 2			        ifnb    <0c4h>
 6376+ 2			        save_psw
 6377+ 3  1476	85 D0 70	        mov     saved_psw,PSW
 6378+ 2			        endif
 6379+ 2  1479	B4 20 0F	        cjne    a,#res,??0543
 6380+ 2			        ifnb    <0c4h>
 6381+ 2			        tst_psw <0c4h>,??0543
 6382+ 3  147C	E5 70		        mov     a,saved_psw
 6383+ 3  147E	54 C4		        anl     a,#0c4h
 6384+ 3  1480	64 C4		        xrl     a,#0c4h
 6385+ 3  1482	54 FE		        anl     a,#0feh
 6386+ 3  1484	70 05		        jnz     ??0543
 6387+ 2			        endif
 6388+ 1
 6389+ 1			        eot     'a',??0543
 6390+ 2			        putc    #'a'
 6391+ 3  1486			??0555:
 6392+ 3			        ;jnb     SCON.1,putc_loop
 6393+ 3			        ;clr     SCON.1
 6394+ 3  1486	75 99 61	        mov     SBUF,#'a'
 6395+ 2  1489	80 06		        sjmp    ??0554
 6396+ 2  148B			??0543:  putc    #'?'
 6397+ 3  148B			??0556:
 6398+ 3			        ;jnb     SCON.1,putc_loop
 6399+ 3			        ;clr     SCON.1
 6400+ 3  148B	75 99 3F	        mov     SBUF,#'?'
 6401+ 2  148E	75 6E 01	        mov     fail,#001h
 6402+ 2  1491			??0554:
 6403+ 1
 6404+ 1			        top_ma  addc,r2,??0544,<0c4h>
 6405+ 2  1491	7A 88		        mov     r2,#arg0
 6406+ 2  1493	74 98		        mov     a,#arg1
 6407+ 2			        ifnb    <0c4h>
 6408+ 2			        set_cy  0c4h
 6409+ 3	N      0000	??0557  set     (0c4h and 1)
 6410+ 3	N      0000	        if      ??0557 eq 1
 6411+ 3			        setb    c
 6412+ 3			        else
 6413+ 3  1495	C3		        clr     c
 6414+ 3			        endif
 6415+ 2			        endif
 6416+ 2  1496	3A		        addc      a,r2
 6417+ 2			        ifnb    <0c4h>
 6418+ 2			        save_psw
 6419+ 3  1497	85 D0 70	        mov     saved_psw,PSW
 6420+ 2			        endif
 6421+ 2  149A	B4 20 25	        cjne    a,#res,??0544
 6422+ 2			        ifnb    <0c4h>
 6423+ 2			        tst_psw <0c4h>,??0544
 6424+ 3  149D	E5 70		        mov     a,saved_psw
 6425+ 3  149F	54 C4		        anl     a,#0c4h
 6426+ 3  14A1	64 C4		        xrl     a,#0c4h
 6427+ 3  14A3	54 FE		        anl     a,#0feh

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 116



 Line  I  Addr  Code            Source

 6428+ 3  14A5	70 1B		        jnz     ??0544
 6429+ 2			        endif
 6430+ 1			        top_ma  addc,r3,??0544,<0c4h>
 6431+ 2  14A7	7B 88		        mov     r3,#arg0
 6432+ 2  14A9	74 98		        mov     a,#arg1
 6433+ 2			        ifnb    <0c4h>
 6434+ 2			        set_cy  0c4h
 6435+ 3	N      0000	??0558  set     (0c4h and 1)
 6436+ 3	N      0000	        if      ??0558 eq 1
 6437+ 3			        setb    c
 6438+ 3			        else
 6439+ 3  14AB	C3		        clr     c
 6440+ 3			        endif
 6441+ 2			        endif
 6442+ 2  14AC	3B		        addc      a,r3
 6443+ 2			        ifnb    <0c4h>
 6444+ 2			        save_psw
 6445+ 3  14AD	85 D0 70	        mov     saved_psw,PSW
 6446+ 2			        endif
 6447+ 2  14B0	B4 20 0F	        cjne    a,#res,??0544
 6448+ 2			        ifnb    <0c4h>
 6449+ 2			        tst_psw <0c4h>,??0544
 6450+ 3  14B3	E5 70		        mov     a,saved_psw
 6451+ 3  14B5	54 C4		        anl     a,#0c4h
 6452+ 3  14B7	64 C4		        xrl     a,#0c4h
 6453+ 3  14B9	54 FE		        anl     a,#0feh
 6454+ 3  14BB	70 05		        jnz     ??0544
 6455+ 2			        endif
 6456+ 1
 6457+ 1			        eot     'b',??0544
 6458+ 2			        putc    #'b'
 6459+ 3  14BD			??0560:
 6460+ 3			        ;jnb     SCON.1,putc_loop
 6461+ 3			        ;clr     SCON.1
 6462+ 3  14BD	75 99 62	        mov     SBUF,#'b'
 6463+ 2  14C0	80 06		        sjmp    ??0559
 6464+ 2  14C2			??0544:  putc    #'?'
 6465+ 3  14C2			??0561:
 6466+ 3			        ;jnb     SCON.1,putc_loop
 6467+ 3			        ;clr     SCON.1
 6468+ 3  14C2	75 99 3F	        mov     SBUF,#'?'
 6469+ 2  14C5	75 6E 01	        mov     fail,#001h
 6470+ 2  14C8			??0559:
 6471+ 1
 6472+ 1			        top_ma  addc,r4,??0545,<0c4h>
 6473+ 2  14C8	7C 88		        mov     r4,#arg0
 6474+ 2  14CA	74 98		        mov     a,#arg1
 6475+ 2			        ifnb    <0c4h>
 6476+ 2			        set_cy  0c4h
 6477+ 3	N      0000	??0562  set     (0c4h and 1)
 6478+ 3	N      0000	        if      ??0562 eq 1
 6479+ 3			        setb    c
 6480+ 3			        else
 6481+ 3  14CC	C3		        clr     c
 6482+ 3			        endif
 6483+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 117



 Line  I  Addr  Code            Source

 6484+ 2  14CD	3C		        addc      a,r4
 6485+ 2			        ifnb    <0c4h>
 6486+ 2			        save_psw
 6487+ 3  14CE	85 D0 70	        mov     saved_psw,PSW
 6488+ 2			        endif
 6489+ 2  14D1	B4 20 25	        cjne    a,#res,??0545
 6490+ 2			        ifnb    <0c4h>
 6491+ 2			        tst_psw <0c4h>,??0545
 6492+ 3  14D4	E5 70		        mov     a,saved_psw
 6493+ 3  14D6	54 C4		        anl     a,#0c4h
 6494+ 3  14D8	64 C4		        xrl     a,#0c4h
 6495+ 3  14DA	54 FE		        anl     a,#0feh
 6496+ 3  14DC	70 1B		        jnz     ??0545
 6497+ 2			        endif
 6498+ 1			        top_ma  addc,r5,??0545,<0c4h>
 6499+ 2  14DE	7D 88		        mov     r5,#arg0
 6500+ 2  14E0	74 98		        mov     a,#arg1
 6501+ 2			        ifnb    <0c4h>
 6502+ 2			        set_cy  0c4h
 6503+ 3	N      0000	??0563  set     (0c4h and 1)
 6504+ 3	N      0000	        if      ??0563 eq 1
 6505+ 3			        setb    c
 6506+ 3			        else
 6507+ 3  14E2	C3		        clr     c
 6508+ 3			        endif
 6509+ 2			        endif
 6510+ 2  14E3	3D		        addc      a,r5
 6511+ 2			        ifnb    <0c4h>
 6512+ 2			        save_psw
 6513+ 3  14E4	85 D0 70	        mov     saved_psw,PSW
 6514+ 2			        endif
 6515+ 2  14E7	B4 20 0F	        cjne    a,#res,??0545
 6516+ 2			        ifnb    <0c4h>
 6517+ 2			        tst_psw <0c4h>,??0545
 6518+ 3  14EA	E5 70		        mov     a,saved_psw
 6519+ 3  14EC	54 C4		        anl     a,#0c4h
 6520+ 3  14EE	64 C4		        xrl     a,#0c4h
 6521+ 3  14F0	54 FE		        anl     a,#0feh
 6522+ 3  14F2	70 05		        jnz     ??0545
 6523+ 2			        endif
 6524+ 1
 6525+ 1			        eot     'c',??0545
 6526+ 2			        putc    #'c'
 6527+ 3  14F4			??0565:
 6528+ 3			        ;jnb     SCON.1,putc_loop
 6529+ 3			        ;clr     SCON.1
 6530+ 3  14F4	75 99 63	        mov     SBUF,#'c'
 6531+ 2  14F7	80 06		        sjmp    ??0564
 6532+ 2  14F9			??0545:  putc    #'?'
 6533+ 3  14F9			??0566:
 6534+ 3			        ;jnb     SCON.1,putc_loop
 6535+ 3			        ;clr     SCON.1
 6536+ 3  14F9	75 99 3F	        mov     SBUF,#'?'
 6537+ 2  14FC	75 6E 01	        mov     fail,#001h
 6538+ 2  14FF			??0564:
 6539+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 118



 Line  I  Addr  Code            Source

 6540+ 1			        top_ma  addc,r6,??0542,<0c4h>
 6541+ 2  14FF	7E 88		        mov     r6,#arg0
 6542+ 2  1501	74 98		        mov     a,#arg1
 6543+ 2			        ifnb    <0c4h>
 6544+ 2			        set_cy  0c4h
 6545+ 3	N      0000	??0567  set     (0c4h and 1)
 6546+ 3	N      0000	        if      ??0567 eq 1
 6547+ 3			        setb    c
 6548+ 3			        else
 6549+ 3  1503	C3		        clr     c
 6550+ 3			        endif
 6551+ 2			        endif
 6552+ 2  1504	3E		        addc      a,r6
 6553+ 2			        ifnb    <0c4h>
 6554+ 2			        save_psw
 6555+ 3  1505	85 D0 70	        mov     saved_psw,PSW
 6556+ 2			        endif
 6557+ 2  1508	B4 20 25	        cjne    a,#res,??0542
 6558+ 2			        ifnb    <0c4h>
 6559+ 2			        tst_psw <0c4h>,??0542
 6560+ 3  150B	E5 70		        mov     a,saved_psw
 6561+ 3  150D	54 C4		        anl     a,#0c4h
 6562+ 3  150F	64 C4		        xrl     a,#0c4h
 6563+ 3  1511	54 FE		        anl     a,#0feh
 6564+ 3  1513	70 1B		        jnz     ??0542
 6565+ 2			        endif
 6566+ 1			        top_ma  addc,r7,??0542,<0c4h>
 6567+ 2  1515	7F 88		        mov     r7,#arg0
 6568+ 2  1517	74 98		        mov     a,#arg1
 6569+ 2			        ifnb    <0c4h>
 6570+ 2			        set_cy  0c4h
 6571+ 3	N      0000	??0568  set     (0c4h and 1)
 6572+ 3	N      0000	        if      ??0568 eq 1
 6573+ 3			        setb    c
 6574+ 3			        else
 6575+ 3  1519	C3		        clr     c
 6576+ 3			        endif
 6577+ 2			        endif
 6578+ 2  151A	3F		        addc      a,r7
 6579+ 2			        ifnb    <0c4h>
 6580+ 2			        save_psw
 6581+ 3  151B	85 D0 70	        mov     saved_psw,PSW
 6582+ 2			        endif
 6583+ 2  151E	B4 20 0F	        cjne    a,#res,??0542
 6584+ 2			        ifnb    <0c4h>
 6585+ 2			        tst_psw <0c4h>,??0542
 6586+ 3  1521	E5 70		        mov     a,saved_psw
 6587+ 3  1523	54 C4		        anl     a,#0c4h
 6588+ 3  1525	64 C4		        xrl     a,#0c4h
 6589+ 3  1527	54 FE		        anl     a,#0feh
 6590+ 3  1529	70 05		        jnz     ??0542
 6591+ 2			        endif
 6592+ 1
 6593+ 1			        eot     'd',??0542
 6594+ 2			        putc    #'d'
 6595+ 3  152B			??0570:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 119



 Line  I  Addr  Code            Source

 6596+ 3			        ;jnb     SCON.1,putc_loop
 6597+ 3			        ;clr     SCON.1
 6598+ 3  152B	75 99 64	        mov     SBUF,#'d'
 6599+ 2  152E	80 06		        sjmp    ??0569
 6600+ 2  1530			??0542:  putc    #'?'
 6601+ 3  1530			??0571:
 6602+ 3			        ;jnb     SCON.1,putc_loop
 6603+ 3			        ;clr     SCON.1
 6604+ 3  1530	75 99 3F	        mov     SBUF,#'?'
 6605+ 2  1533	75 6E 01	        mov     fail,#001h
 6606+ 2  1536			??0569:
 6607+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 6608+ 1
 6609+ 1			        ; Optionally test immediate addressing modes.
 6610+ 1
 6611+ 1	N      FFFF	        if      (01h and 1) ne 0
 6612+ 1			        ; Test <op> A, #arg1...
 6613+ 1			        top_mb  addc,a,??0546,<0c4h>
 6614+ 2  1536	74 98		        mov     a,#arg1
 6615+ 2			        ifnb    <0c4h>
 6616+ 2			        set_cy  0c4h
 6617+ 3	N      0000	??0572  set     (0c4h and 1)
 6618+ 3	N      0000	        if      ??0572 eq 1
 6619+ 3			        setb    c
 6620+ 3			        else
 6621+ 3  1538	C3		        clr     c
 6622+ 3			        endif
 6623+ 2			        endif
 6624+ 2  1539	34 88		        addc      a,#arg0
 6625+ 2			        ifnb    <0c4h>
 6626+ 2			        save_psw
 6627+ 3  153B	85 D0 70	        mov     saved_psw,PSW
 6628+ 2			        endif
 6629+ 2  153E	F5 E0		        mov     ACC,a
 6630+ 2  1540	B4 20 0F	        cjne    a,#res,??0546
 6631+ 2			        ifnb    <0c4h>
 6632+ 2			        tst_psw <0c4h>,??0546
 6633+ 3  1543	E5 70		        mov     a,saved_psw
 6634+ 3  1545	54 C4		        anl     a,#0c4h
 6635+ 3  1547	64 C4		        xrl     a,#0c4h
 6636+ 3  1549	54 FE		        anl     a,#0feh
 6637+ 3  154B	70 05		        jnz     ??0546
 6638+ 2			        endif
 6639+ 1			        eot     'e',??0546
 6640+ 2			        putc    #'e'
 6641+ 3  154D			??0574:
 6642+ 3			        ;jnb     SCON.1,putc_loop
 6643+ 3			        ;clr     SCON.1
 6644+ 3  154D	75 99 65	        mov     SBUF,#'e'
 6645+ 2  1550	80 06		        sjmp    ??0573
 6646+ 2  1552			??0546:  putc    #'?'
 6647+ 3  1552			??0575:
 6648+ 3			        ;jnb     SCON.1,putc_loop
 6649+ 3			        ;clr     SCON.1
 6650+ 3  1552	75 99 3F	        mov     SBUF,#'?'
 6651+ 2  1555	75 6E 01	        mov     fail,#001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 120



 Line  I  Addr  Code            Source

 6652+ 2  1558			??0573:
 6653+ 1			        endif
 6654+ 1
 6655+ 1	N      0000	        if      (01h and 2) ne 0
 6656+ 1			        ; ...and <op> dir, #arg1
 6657+ 1			        top_mb  addc,dir0,??0547,<0c4h>
 6658+ 1			        eot     'f',??0547
 6659+ 1			        endif
 6660+ 1
 6661+ 1			        ; Optionally test <op> dir, A
 6662+ 1	N      0000	        if      (01h and 4) ne 0
 6663+ 1			        top_mc  addc,??0548,<0c4h>
 6664+ 1			        eot     'g',??0548
 6665+ 1			        endif
 6666+ 1
 6667:				        putc    #'3'
 6668+ 1  1558			??0576:
 6669+ 1			        ;jnb     SCON.1,putc_loop
 6670+ 1			        ;clr     SCON.1
 6671+ 1  1558	75 99 33	        mov     SBUF,#'3'
 6672:				        tst_alu addc,088h,098h,021h,01h,0c5h     ;  CY  AC  OV (CY input)
 6673+ 1			        ; Put the argument and result data into variables for easier access
 6674+ 1	N      0088	        arg0    set 088h
 6675+ 1	N      0098	        arg1    set 098h
 6676+ 1	N      0021	        res     set 021h
 6677+ 1
 6678+ 1			        ; Test <op> A, dir
 6679+ 1			        top_ma  addc,dir0,??0578,<0c5h>
 6680+ 2  155B	75 60 88	        mov     dir0,#arg0
 6681+ 2  155E	74 98		        mov     a,#arg1
 6682+ 2			        ifnb    <0c5h>
 6683+ 2			        set_cy  0c5h
 6684+ 3	N      0001	??0584  set     (0c5h and 1)
 6685+ 3	N      FFFF	        if      ??0584 eq 1
 6686+ 3  1560	D3		        setb    c
 6687+ 3			        else
 6688+ 3			        clr     c
 6689+ 3			        endif
 6690+ 2			        endif
 6691+ 2  1561	35 60		        addc      a,dir0
 6692+ 2			        ifnb    <0c5h>
 6693+ 2			        save_psw
 6694+ 3  1563	85 D0 70	        mov     saved_psw,PSW
 6695+ 2			        endif
 6696+ 2  1566	B4 21 6B	        cjne    a,#res,??0578
 6697+ 2			        ifnb    <0c5h>
 6698+ 2			        tst_psw <0c5h>,??0578
 6699+ 3  1569	E5 70		        mov     a,saved_psw
 6700+ 3  156B	54 C4		        anl     a,#0c4h
 6701+ 3  156D	64 C5		        xrl     a,#0c5h
 6702+ 3  156F	54 FE		        anl     a,#0feh
 6703+ 3  1571	70 61		        jnz     ??0578
 6704+ 2			        endif
 6705+ 1			        ; Test <op> A, @R0
 6706+ 1  1573	78 60		        mov     r0,#dir0
 6707+ 1			        top_ma  addc,@r0,??0578,<0c5h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 121



 Line  I  Addr  Code            Source

 6708+ 2  1575	76 88		        mov     @r0,#arg0
 6709+ 2  1577	74 98		        mov     a,#arg1
 6710+ 2			        ifnb    <0c5h>
 6711+ 2			        set_cy  0c5h
 6712+ 3	N      0001	??0585  set     (0c5h and 1)
 6713+ 3	N      FFFF	        if      ??0585 eq 1
 6714+ 3  1579	D3		        setb    c
 6715+ 3			        else
 6716+ 3			        clr     c
 6717+ 3			        endif
 6718+ 2			        endif
 6719+ 2  157A	36		        addc      a,@r0
 6720+ 2			        ifnb    <0c5h>
 6721+ 2			        save_psw
 6722+ 3  157B	85 D0 70	        mov     saved_psw,PSW
 6723+ 2			        endif
 6724+ 2  157E	B4 21 53	        cjne    a,#res,??0578
 6725+ 2			        ifnb    <0c5h>
 6726+ 2			        tst_psw <0c5h>,??0578
 6727+ 3  1581	E5 70		        mov     a,saved_psw
 6728+ 3  1583	54 C4		        anl     a,#0c4h
 6729+ 3  1585	64 C5		        xrl     a,#0c5h
 6730+ 3  1587	54 FE		        anl     a,#0feh
 6731+ 3  1589	70 49		        jnz     ??0578
 6732+ 2			        endif
 6733+ 1			        ; Test <op> A, @R1
 6734+ 1  158B	79 31		        mov     r1,#031h
 6735+ 1			        top_ma  addc,@r1,??0578,<0c5h>
 6736+ 2  158D	77 88		        mov     @r1,#arg0
 6737+ 2  158F	74 98		        mov     a,#arg1
 6738+ 2			        ifnb    <0c5h>
 6739+ 2			        set_cy  0c5h
 6740+ 3	N      0001	??0586  set     (0c5h and 1)
 6741+ 3	N      FFFF	        if      ??0586 eq 1
 6742+ 3  1591	D3		        setb    c
 6743+ 3			        else
 6744+ 3			        clr     c
 6745+ 3			        endif
 6746+ 2			        endif
 6747+ 2  1592	37		        addc      a,@r1
 6748+ 2			        ifnb    <0c5h>
 6749+ 2			        save_psw
 6750+ 3  1593	85 D0 70	        mov     saved_psw,PSW
 6751+ 2			        endif
 6752+ 2  1596	B4 21 3B	        cjne    a,#res,??0578
 6753+ 2			        ifnb    <0c5h>
 6754+ 2			        tst_psw <0c5h>,??0578
 6755+ 3  1599	E5 70		        mov     a,saved_psw
 6756+ 3  159B	54 C4		        anl     a,#0c4h
 6757+ 3  159D	64 C5		        xrl     a,#0c5h
 6758+ 3  159F	54 FE		        anl     a,#0feh
 6759+ 3  15A1	70 31		        jnz     ??0578
 6760+ 2			        endif
 6761+ 1
 6762+ 1			        ; Now test <op> A, Rn for n in 0..7
 6763+ 1			        top_ma  addc,r0,??0578,<0c5h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 122



 Line  I  Addr  Code            Source

 6764+ 2  15A3	78 88		        mov     r0,#arg0
 6765+ 2  15A5	74 98		        mov     a,#arg1
 6766+ 2			        ifnb    <0c5h>
 6767+ 2			        set_cy  0c5h
 6768+ 3	N      0001	??0587  set     (0c5h and 1)
 6769+ 3	N      FFFF	        if      ??0587 eq 1
 6770+ 3  15A7	D3		        setb    c
 6771+ 3			        else
 6772+ 3			        clr     c
 6773+ 3			        endif
 6774+ 2			        endif
 6775+ 2  15A8	38		        addc      a,r0
 6776+ 2			        ifnb    <0c5h>
 6777+ 2			        save_psw
 6778+ 3  15A9	85 D0 70	        mov     saved_psw,PSW
 6779+ 2			        endif
 6780+ 2  15AC	B4 21 25	        cjne    a,#res,??0578
 6781+ 2			        ifnb    <0c5h>
 6782+ 2			        tst_psw <0c5h>,??0578
 6783+ 3  15AF	E5 70		        mov     a,saved_psw
 6784+ 3  15B1	54 C4		        anl     a,#0c4h
 6785+ 3  15B3	64 C5		        xrl     a,#0c5h
 6786+ 3  15B5	54 FE		        anl     a,#0feh
 6787+ 3  15B7	70 1B		        jnz     ??0578
 6788+ 2			        endif
 6789+ 1			        top_ma  addc,r1,??0578,<0c5h>
 6790+ 2  15B9	79 88		        mov     r1,#arg0
 6791+ 2  15BB	74 98		        mov     a,#arg1
 6792+ 2			        ifnb    <0c5h>
 6793+ 2			        set_cy  0c5h
 6794+ 3	N      0001	??0588  set     (0c5h and 1)
 6795+ 3	N      FFFF	        if      ??0588 eq 1
 6796+ 3  15BD	D3		        setb    c
 6797+ 3			        else
 6798+ 3			        clr     c
 6799+ 3			        endif
 6800+ 2			        endif
 6801+ 2  15BE	39		        addc      a,r1
 6802+ 2			        ifnb    <0c5h>
 6803+ 2			        save_psw
 6804+ 3  15BF	85 D0 70	        mov     saved_psw,PSW
 6805+ 2			        endif
 6806+ 2  15C2	B4 21 0F	        cjne    a,#res,??0578
 6807+ 2			        ifnb    <0c5h>
 6808+ 2			        tst_psw <0c5h>,??0578
 6809+ 3  15C5	E5 70		        mov     a,saved_psw
 6810+ 3  15C7	54 C4		        anl     a,#0c4h
 6811+ 3  15C9	64 C5		        xrl     a,#0c5h
 6812+ 3  15CB	54 FE		        anl     a,#0feh
 6813+ 3  15CD	70 05		        jnz     ??0578
 6814+ 2			        endif
 6815+ 1
 6816+ 1			        eot     'a',??0578
 6817+ 2			        putc    #'a'
 6818+ 3  15CF			??0590:
 6819+ 3			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 123



 Line  I  Addr  Code            Source

 6820+ 3			        ;clr     SCON.1
 6821+ 3  15CF	75 99 61	        mov     SBUF,#'a'
 6822+ 2  15D2	80 06		        sjmp    ??0589
 6823+ 2  15D4			??0578:  putc    #'?'
 6824+ 3  15D4			??0591:
 6825+ 3			        ;jnb     SCON.1,putc_loop
 6826+ 3			        ;clr     SCON.1
 6827+ 3  15D4	75 99 3F	        mov     SBUF,#'?'
 6828+ 2  15D7	75 6E 01	        mov     fail,#001h
 6829+ 2  15DA			??0589:
 6830+ 1
 6831+ 1			        top_ma  addc,r2,??0579,<0c5h>
 6832+ 2  15DA	7A 88		        mov     r2,#arg0
 6833+ 2  15DC	74 98		        mov     a,#arg1
 6834+ 2			        ifnb    <0c5h>
 6835+ 2			        set_cy  0c5h
 6836+ 3	N      0001	??0592  set     (0c5h and 1)
 6837+ 3	N      FFFF	        if      ??0592 eq 1
 6838+ 3  15DE	D3		        setb    c
 6839+ 3			        else
 6840+ 3			        clr     c
 6841+ 3			        endif
 6842+ 2			        endif
 6843+ 2  15DF	3A		        addc      a,r2
 6844+ 2			        ifnb    <0c5h>
 6845+ 2			        save_psw
 6846+ 3  15E0	85 D0 70	        mov     saved_psw,PSW
 6847+ 2			        endif
 6848+ 2  15E3	B4 21 25	        cjne    a,#res,??0579
 6849+ 2			        ifnb    <0c5h>
 6850+ 2			        tst_psw <0c5h>,??0579
 6851+ 3  15E6	E5 70		        mov     a,saved_psw
 6852+ 3  15E8	54 C4		        anl     a,#0c4h
 6853+ 3  15EA	64 C5		        xrl     a,#0c5h
 6854+ 3  15EC	54 FE		        anl     a,#0feh
 6855+ 3  15EE	70 1B		        jnz     ??0579
 6856+ 2			        endif
 6857+ 1			        top_ma  addc,r3,??0579,<0c5h>
 6858+ 2  15F0	7B 88		        mov     r3,#arg0
 6859+ 2  15F2	74 98		        mov     a,#arg1
 6860+ 2			        ifnb    <0c5h>
 6861+ 2			        set_cy  0c5h
 6862+ 3	N      0001	??0593  set     (0c5h and 1)
 6863+ 3	N      FFFF	        if      ??0593 eq 1
 6864+ 3  15F4	D3		        setb    c
 6865+ 3			        else
 6866+ 3			        clr     c
 6867+ 3			        endif
 6868+ 2			        endif
 6869+ 2  15F5	3B		        addc      a,r3
 6870+ 2			        ifnb    <0c5h>
 6871+ 2			        save_psw
 6872+ 3  15F6	85 D0 70	        mov     saved_psw,PSW
 6873+ 2			        endif
 6874+ 2  15F9	B4 21 0F	        cjne    a,#res,??0579
 6875+ 2			        ifnb    <0c5h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 124



 Line  I  Addr  Code            Source

 6876+ 2			        tst_psw <0c5h>,??0579
 6877+ 3  15FC	E5 70		        mov     a,saved_psw
 6878+ 3  15FE	54 C4		        anl     a,#0c4h
 6879+ 3  1600	64 C5		        xrl     a,#0c5h
 6880+ 3  1602	54 FE		        anl     a,#0feh
 6881+ 3  1604	70 05		        jnz     ??0579
 6882+ 2			        endif
 6883+ 1
 6884+ 1			        eot     'b',??0579
 6885+ 2			        putc    #'b'
 6886+ 3  1606			??0595:
 6887+ 3			        ;jnb     SCON.1,putc_loop
 6888+ 3			        ;clr     SCON.1
 6889+ 3  1606	75 99 62	        mov     SBUF,#'b'
 6890+ 2  1609	80 06		        sjmp    ??0594
 6891+ 2  160B			??0579:  putc    #'?'
 6892+ 3  160B			??0596:
 6893+ 3			        ;jnb     SCON.1,putc_loop
 6894+ 3			        ;clr     SCON.1
 6895+ 3  160B	75 99 3F	        mov     SBUF,#'?'
 6896+ 2  160E	75 6E 01	        mov     fail,#001h
 6897+ 2  1611			??0594:
 6898+ 1
 6899+ 1			        top_ma  addc,r4,??0580,<0c5h>
 6900+ 2  1611	7C 88		        mov     r4,#arg0
 6901+ 2  1613	74 98		        mov     a,#arg1
 6902+ 2			        ifnb    <0c5h>
 6903+ 2			        set_cy  0c5h
 6904+ 3	N      0001	??0597  set     (0c5h and 1)
 6905+ 3	N      FFFF	        if      ??0597 eq 1
 6906+ 3  1615	D3		        setb    c
 6907+ 3			        else
 6908+ 3			        clr     c
 6909+ 3			        endif
 6910+ 2			        endif
 6911+ 2  1616	3C		        addc      a,r4
 6912+ 2			        ifnb    <0c5h>
 6913+ 2			        save_psw
 6914+ 3  1617	85 D0 70	        mov     saved_psw,PSW
 6915+ 2			        endif
 6916+ 2  161A	B4 21 25	        cjne    a,#res,??0580
 6917+ 2			        ifnb    <0c5h>
 6918+ 2			        tst_psw <0c5h>,??0580
 6919+ 3  161D	E5 70		        mov     a,saved_psw
 6920+ 3  161F	54 C4		        anl     a,#0c4h
 6921+ 3  1621	64 C5		        xrl     a,#0c5h
 6922+ 3  1623	54 FE		        anl     a,#0feh
 6923+ 3  1625	70 1B		        jnz     ??0580
 6924+ 2			        endif
 6925+ 1			        top_ma  addc,r5,??0580,<0c5h>
 6926+ 2  1627	7D 88		        mov     r5,#arg0
 6927+ 2  1629	74 98		        mov     a,#arg1
 6928+ 2			        ifnb    <0c5h>
 6929+ 2			        set_cy  0c5h
 6930+ 3	N      0001	??0598  set     (0c5h and 1)
 6931+ 3	N      FFFF	        if      ??0598 eq 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 125



 Line  I  Addr  Code            Source

 6932+ 3  162B	D3		        setb    c
 6933+ 3			        else
 6934+ 3			        clr     c
 6935+ 3			        endif
 6936+ 2			        endif
 6937+ 2  162C	3D		        addc      a,r5
 6938+ 2			        ifnb    <0c5h>
 6939+ 2			        save_psw
 6940+ 3  162D	85 D0 70	        mov     saved_psw,PSW
 6941+ 2			        endif
 6942+ 2  1630	B4 21 0F	        cjne    a,#res,??0580
 6943+ 2			        ifnb    <0c5h>
 6944+ 2			        tst_psw <0c5h>,??0580
 6945+ 3  1633	E5 70		        mov     a,saved_psw
 6946+ 3  1635	54 C4		        anl     a,#0c4h
 6947+ 3  1637	64 C5		        xrl     a,#0c5h
 6948+ 3  1639	54 FE		        anl     a,#0feh
 6949+ 3  163B	70 05		        jnz     ??0580
 6950+ 2			        endif
 6951+ 1
 6952+ 1			        eot     'c',??0580
 6953+ 2			        putc    #'c'
 6954+ 3  163D			??0600:
 6955+ 3			        ;jnb     SCON.1,putc_loop
 6956+ 3			        ;clr     SCON.1
 6957+ 3  163D	75 99 63	        mov     SBUF,#'c'
 6958+ 2  1640	80 06		        sjmp    ??0599
 6959+ 2  1642			??0580:  putc    #'?'
 6960+ 3  1642			??0601:
 6961+ 3			        ;jnb     SCON.1,putc_loop
 6962+ 3			        ;clr     SCON.1
 6963+ 3  1642	75 99 3F	        mov     SBUF,#'?'
 6964+ 2  1645	75 6E 01	        mov     fail,#001h
 6965+ 2  1648			??0599:
 6966+ 1
 6967+ 1			        top_ma  addc,r6,??0577,<0c5h>
 6968+ 2  1648	7E 88		        mov     r6,#arg0
 6969+ 2  164A	74 98		        mov     a,#arg1
 6970+ 2			        ifnb    <0c5h>
 6971+ 2			        set_cy  0c5h
 6972+ 3	N      0001	??0602  set     (0c5h and 1)
 6973+ 3	N      FFFF	        if      ??0602 eq 1
 6974+ 3  164C	D3		        setb    c
 6975+ 3			        else
 6976+ 3			        clr     c
 6977+ 3			        endif
 6978+ 2			        endif
 6979+ 2  164D	3E		        addc      a,r6
 6980+ 2			        ifnb    <0c5h>
 6981+ 2			        save_psw
 6982+ 3  164E	85 D0 70	        mov     saved_psw,PSW
 6983+ 2			        endif
 6984+ 2  1651	B4 21 25	        cjne    a,#res,??0577
 6985+ 2			        ifnb    <0c5h>
 6986+ 2			        tst_psw <0c5h>,??0577
 6987+ 3  1654	E5 70		        mov     a,saved_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 126



 Line  I  Addr  Code            Source

 6988+ 3  1656	54 C4		        anl     a,#0c4h
 6989+ 3  1658	64 C5		        xrl     a,#0c5h
 6990+ 3  165A	54 FE		        anl     a,#0feh
 6991+ 3  165C	70 1B		        jnz     ??0577
 6992+ 2			        endif
 6993+ 1			        top_ma  addc,r7,??0577,<0c5h>
 6994+ 2  165E	7F 88		        mov     r7,#arg0
 6995+ 2  1660	74 98		        mov     a,#arg1
 6996+ 2			        ifnb    <0c5h>
 6997+ 2			        set_cy  0c5h
 6998+ 3	N      0001	??0603  set     (0c5h and 1)
 6999+ 3	N      FFFF	        if      ??0603 eq 1
 7000+ 3  1662	D3		        setb    c
 7001+ 3			        else
 7002+ 3			        clr     c
 7003+ 3			        endif
 7004+ 2			        endif
 7005+ 2  1663	3F		        addc      a,r7
 7006+ 2			        ifnb    <0c5h>
 7007+ 2			        save_psw
 7008+ 3  1664	85 D0 70	        mov     saved_psw,PSW
 7009+ 2			        endif
 7010+ 2  1667	B4 21 0F	        cjne    a,#res,??0577
 7011+ 2			        ifnb    <0c5h>
 7012+ 2			        tst_psw <0c5h>,??0577
 7013+ 3  166A	E5 70		        mov     a,saved_psw
 7014+ 3  166C	54 C4		        anl     a,#0c4h
 7015+ 3  166E	64 C5		        xrl     a,#0c5h
 7016+ 3  1670	54 FE		        anl     a,#0feh
 7017+ 3  1672	70 05		        jnz     ??0577
 7018+ 2			        endif
 7019+ 1
 7020+ 1			        eot     'd',??0577
 7021+ 2			        putc    #'d'
 7022+ 3  1674			??0605:
 7023+ 3			        ;jnb     SCON.1,putc_loop
 7024+ 3			        ;clr     SCON.1
 7025+ 3  1674	75 99 64	        mov     SBUF,#'d'
 7026+ 2  1677	80 06		        sjmp    ??0604
 7027+ 2  1679			??0577:  putc    #'?'
 7028+ 3  1679			??0606:
 7029+ 3			        ;jnb     SCON.1,putc_loop
 7030+ 3			        ;clr     SCON.1
 7031+ 3  1679	75 99 3F	        mov     SBUF,#'?'
 7032+ 2  167C	75 6E 01	        mov     fail,#001h
 7033+ 2  167F			??0604:
 7034+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 7035+ 1
 7036+ 1			        ; Optionally test immediate addressing modes.
 7037+ 1
 7038+ 1	N      FFFF	        if      (01h and 1) ne 0
 7039+ 1			        ; Test <op> A, #arg1...
 7040+ 1			        top_mb  addc,a,??0581,<0c5h>
 7041+ 2  167F	74 98		        mov     a,#arg1
 7042+ 2			        ifnb    <0c5h>
 7043+ 2			        set_cy  0c5h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 127



 Line  I  Addr  Code            Source

 7044+ 3	N      0001	??0607  set     (0c5h and 1)
 7045+ 3	N      FFFF	        if      ??0607 eq 1
 7046+ 3  1681	D3		        setb    c
 7047+ 3			        else
 7048+ 3			        clr     c
 7049+ 3			        endif
 7050+ 2			        endif
 7051+ 2  1682	34 88		        addc      a,#arg0
 7052+ 2			        ifnb    <0c5h>
 7053+ 2			        save_psw
 7054+ 3  1684	85 D0 70	        mov     saved_psw,PSW
 7055+ 2			        endif
 7056+ 2  1687	F5 E0		        mov     ACC,a
 7057+ 2  1689	B4 21 0F	        cjne    a,#res,??0581
 7058+ 2			        ifnb    <0c5h>
 7059+ 2			        tst_psw <0c5h>,??0581
 7060+ 3  168C	E5 70		        mov     a,saved_psw
 7061+ 3  168E	54 C4		        anl     a,#0c4h
 7062+ 3  1690	64 C5		        xrl     a,#0c5h
 7063+ 3  1692	54 FE		        anl     a,#0feh
 7064+ 3  1694	70 05		        jnz     ??0581
 7065+ 2			        endif
 7066+ 1			        eot     'e',??0581
 7067+ 2			        putc    #'e'
 7068+ 3  1696			??0609:
 7069+ 3			        ;jnb     SCON.1,putc_loop
 7070+ 3			        ;clr     SCON.1
 7071+ 3  1696	75 99 65	        mov     SBUF,#'e'
 7072+ 2  1699	80 06		        sjmp    ??0608
 7073+ 2  169B			??0581:  putc    #'?'
 7074+ 3  169B			??0610:
 7075+ 3			        ;jnb     SCON.1,putc_loop
 7076+ 3			        ;clr     SCON.1
 7077+ 3  169B	75 99 3F	        mov     SBUF,#'?'
 7078+ 2  169E	75 6E 01	        mov     fail,#001h
 7079+ 2  16A1			??0608:
 7080+ 1			        endif
 7081+ 1
 7082+ 1	N      0000	        if      (01h and 2) ne 0
 7083+ 1			        ; ...and <op> dir, #arg1
 7084+ 1			        top_mb  addc,dir0,??0582,<0c5h>
 7085+ 1			        eot     'f',??0582
 7086+ 1			        endif
 7087+ 1
 7088+ 1			        ; Optionally test <op> dir, A
 7089+ 1	N      0000	        if      (01h and 4) ne 0
 7090+ 1			        top_mc  addc,??0583,<0c5h>
 7091+ 1			        eot     'g',??0583
 7092+ 1			        endif
 7093+ 1
 7094:				        putc    #'4'
 7095+ 1  16A1			??0611:
 7096+ 1			        ;jnb     SCON.1,putc_loop
 7097+ 1			        ;clr     SCON.1
 7098+ 1  16A1	75 99 34	        mov     SBUF,#'4'
 7099:				        tst_alu addc,043h,0fbh,03fh,01h,081h     ;  CY /AC /OV (CY input)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 128



 Line  I  Addr  Code            Source

 7100+ 1			        ; Put the argument and result data into variables for easier access
 7101+ 1	N      0043	        arg0    set 043h
 7102+ 1	N      00FB	        arg1    set 0fbh
 7103+ 1	N      003F	        res     set 03fh
 7104+ 1
 7105+ 1			        ; Test <op> A, dir
 7106+ 1			        top_ma  addc,dir0,??0613,<081h>
 7107+ 2  16A4	75 60 43	        mov     dir0,#arg0
 7108+ 2  16A7	74 FB		        mov     a,#arg1
 7109+ 2			        ifnb    <081h>
 7110+ 2			        set_cy  081h
 7111+ 3	N      0001	??0619  set     (081h and 1)
 7112+ 3	N      FFFF	        if      ??0619 eq 1
 7113+ 3  16A9	D3		        setb    c
 7114+ 3			        else
 7115+ 3			        clr     c
 7116+ 3			        endif
 7117+ 2			        endif
 7118+ 2  16AA	35 60		        addc      a,dir0
 7119+ 2			        ifnb    <081h>
 7120+ 2			        save_psw
 7121+ 3  16AC	85 D0 70	        mov     saved_psw,PSW
 7122+ 2			        endif
 7123+ 2  16AF	B4 3F 6B	        cjne    a,#res,??0613
 7124+ 2			        ifnb    <081h>
 7125+ 2			        tst_psw <081h>,??0613
 7126+ 3  16B2	E5 70		        mov     a,saved_psw
 7127+ 3  16B4	54 C4		        anl     a,#0c4h
 7128+ 3  16B6	64 81		        xrl     a,#081h
 7129+ 3  16B8	54 FE		        anl     a,#0feh
 7130+ 3  16BA	70 61		        jnz     ??0613
 7131+ 2			        endif
 7132+ 1			        ; Test <op> A, @R0
 7133+ 1  16BC	78 60		        mov     r0,#dir0
 7134+ 1			        top_ma  addc,@r0,??0613,<081h>
 7135+ 2  16BE	76 43		        mov     @r0,#arg0
 7136+ 2  16C0	74 FB		        mov     a,#arg1
 7137+ 2			        ifnb    <081h>
 7138+ 2			        set_cy  081h
 7139+ 3	N      0001	??0620  set     (081h and 1)
 7140+ 3	N      FFFF	        if      ??0620 eq 1
 7141+ 3  16C2	D3		        setb    c
 7142+ 3			        else
 7143+ 3			        clr     c
 7144+ 3			        endif
 7145+ 2			        endif
 7146+ 2  16C3	36		        addc      a,@r0
 7147+ 2			        ifnb    <081h>
 7148+ 2			        save_psw
 7149+ 3  16C4	85 D0 70	        mov     saved_psw,PSW
 7150+ 2			        endif
 7151+ 2  16C7	B4 3F 53	        cjne    a,#res,??0613
 7152+ 2			        ifnb    <081h>
 7153+ 2			        tst_psw <081h>,??0613
 7154+ 3  16CA	E5 70		        mov     a,saved_psw
 7155+ 3  16CC	54 C4		        anl     a,#0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 129



 Line  I  Addr  Code            Source

 7156+ 3  16CE	64 81		        xrl     a,#081h
 7157+ 3  16D0	54 FE		        anl     a,#0feh
 7158+ 3  16D2	70 49		        jnz     ??0613
 7159+ 2			        endif
 7160+ 1			        ; Test <op> A, @R1
 7161+ 1  16D4	79 31		        mov     r1,#031h
 7162+ 1			        top_ma  addc,@r1,??0613,<081h>
 7163+ 2  16D6	77 43		        mov     @r1,#arg0
 7164+ 2  16D8	74 FB		        mov     a,#arg1
 7165+ 2			        ifnb    <081h>
 7166+ 2			        set_cy  081h
 7167+ 3	N      0001	??0621  set     (081h and 1)
 7168+ 3	N      FFFF	        if      ??0621 eq 1
 7169+ 3  16DA	D3		        setb    c
 7170+ 3			        else
 7171+ 3			        clr     c
 7172+ 3			        endif
 7173+ 2			        endif
 7174+ 2  16DB	37		        addc      a,@r1
 7175+ 2			        ifnb    <081h>
 7176+ 2			        save_psw
 7177+ 3  16DC	85 D0 70	        mov     saved_psw,PSW
 7178+ 2			        endif
 7179+ 2  16DF	B4 3F 3B	        cjne    a,#res,??0613
 7180+ 2			        ifnb    <081h>
 7181+ 2			        tst_psw <081h>,??0613
 7182+ 3  16E2	E5 70		        mov     a,saved_psw
 7183+ 3  16E4	54 C4		        anl     a,#0c4h
 7184+ 3  16E6	64 81		        xrl     a,#081h
 7185+ 3  16E8	54 FE		        anl     a,#0feh
 7186+ 3  16EA	70 31		        jnz     ??0613
 7187+ 2			        endif
 7188+ 1
 7189+ 1			        ; Now test <op> A, Rn for n in 0..7
 7190+ 1			        top_ma  addc,r0,??0613,<081h>
 7191+ 2  16EC	78 43		        mov     r0,#arg0
 7192+ 2  16EE	74 FB		        mov     a,#arg1
 7193+ 2			        ifnb    <081h>
 7194+ 2			        set_cy  081h
 7195+ 3	N      0001	??0622  set     (081h and 1)
 7196+ 3	N      FFFF	        if      ??0622 eq 1
 7197+ 3  16F0	D3		        setb    c
 7198+ 3			        else
 7199+ 3			        clr     c
 7200+ 3			        endif
 7201+ 2			        endif
 7202+ 2  16F1	38		        addc      a,r0
 7203+ 2			        ifnb    <081h>
 7204+ 2			        save_psw
 7205+ 3  16F2	85 D0 70	        mov     saved_psw,PSW
 7206+ 2			        endif
 7207+ 2  16F5	B4 3F 25	        cjne    a,#res,??0613
 7208+ 2			        ifnb    <081h>
 7209+ 2			        tst_psw <081h>,??0613
 7210+ 3  16F8	E5 70		        mov     a,saved_psw
 7211+ 3  16FA	54 C4		        anl     a,#0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 130



 Line  I  Addr  Code            Source

 7212+ 3  16FC	64 81		        xrl     a,#081h
 7213+ 3  16FE	54 FE		        anl     a,#0feh
 7214+ 3  1700	70 1B		        jnz     ??0613
 7215+ 2			        endif
 7216+ 1			        top_ma  addc,r1,??0613,<081h>
 7217+ 2  1702	79 43		        mov     r1,#arg0
 7218+ 2  1704	74 FB		        mov     a,#arg1
 7219+ 2			        ifnb    <081h>
 7220+ 2			        set_cy  081h
 7221+ 3	N      0001	??0623  set     (081h and 1)
 7222+ 3	N      FFFF	        if      ??0623 eq 1
 7223+ 3  1706	D3		        setb    c
 7224+ 3			        else
 7225+ 3			        clr     c
 7226+ 3			        endif
 7227+ 2			        endif
 7228+ 2  1707	39		        addc      a,r1
 7229+ 2			        ifnb    <081h>
 7230+ 2			        save_psw
 7231+ 3  1708	85 D0 70	        mov     saved_psw,PSW
 7232+ 2			        endif
 7233+ 2  170B	B4 3F 0F	        cjne    a,#res,??0613
 7234+ 2			        ifnb    <081h>
 7235+ 2			        tst_psw <081h>,??0613
 7236+ 3  170E	E5 70		        mov     a,saved_psw
 7237+ 3  1710	54 C4		        anl     a,#0c4h
 7238+ 3  1712	64 81		        xrl     a,#081h
 7239+ 3  1714	54 FE		        anl     a,#0feh
 7240+ 3  1716	70 05		        jnz     ??0613
 7241+ 2			        endif
 7242+ 1
 7243+ 1			        eot     'a',??0613
 7244+ 2			        putc    #'a'
 7245+ 3  1718			??0625:
 7246+ 3			        ;jnb     SCON.1,putc_loop
 7247+ 3			        ;clr     SCON.1
 7248+ 3  1718	75 99 61	        mov     SBUF,#'a'
 7249+ 2  171B	80 06		        sjmp    ??0624
 7250+ 2  171D			??0613:  putc    #'?'
 7251+ 3  171D			??0626:
 7252+ 3			        ;jnb     SCON.1,putc_loop
 7253+ 3			        ;clr     SCON.1
 7254+ 3  171D	75 99 3F	        mov     SBUF,#'?'
 7255+ 2  1720	75 6E 01	        mov     fail,#001h
 7256+ 2  1723			??0624:
 7257+ 1
 7258+ 1			        top_ma  addc,r2,??0614,<081h>
 7259+ 2  1723	7A 43		        mov     r2,#arg0
 7260+ 2  1725	74 FB		        mov     a,#arg1
 7261+ 2			        ifnb    <081h>
 7262+ 2			        set_cy  081h
 7263+ 3	N      0001	??0627  set     (081h and 1)
 7264+ 3	N      FFFF	        if      ??0627 eq 1
 7265+ 3  1727	D3		        setb    c
 7266+ 3			        else
 7267+ 3			        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 131



 Line  I  Addr  Code            Source

 7268+ 3			        endif
 7269+ 2			        endif
 7270+ 2  1728	3A		        addc      a,r2
 7271+ 2			        ifnb    <081h>
 7272+ 2			        save_psw
 7273+ 3  1729	85 D0 70	        mov     saved_psw,PSW
 7274+ 2			        endif
 7275+ 2  172C	B4 3F 25	        cjne    a,#res,??0614
 7276+ 2			        ifnb    <081h>
 7277+ 2			        tst_psw <081h>,??0614
 7278+ 3  172F	E5 70		        mov     a,saved_psw
 7279+ 3  1731	54 C4		        anl     a,#0c4h
 7280+ 3  1733	64 81		        xrl     a,#081h
 7281+ 3  1735	54 FE		        anl     a,#0feh
 7282+ 3  1737	70 1B		        jnz     ??0614
 7283+ 2			        endif
 7284+ 1			        top_ma  addc,r3,??0614,<081h>
 7285+ 2  1739	7B 43		        mov     r3,#arg0
 7286+ 2  173B	74 FB		        mov     a,#arg1
 7287+ 2			        ifnb    <081h>
 7288+ 2			        set_cy  081h
 7289+ 3	N      0001	??0628  set     (081h and 1)
 7290+ 3	N      FFFF	        if      ??0628 eq 1
 7291+ 3  173D	D3		        setb    c
 7292+ 3			        else
 7293+ 3			        clr     c
 7294+ 3			        endif
 7295+ 2			        endif
 7296+ 2  173E	3B		        addc      a,r3
 7297+ 2			        ifnb    <081h>
 7298+ 2			        save_psw
 7299+ 3  173F	85 D0 70	        mov     saved_psw,PSW
 7300+ 2			        endif
 7301+ 2  1742	B4 3F 0F	        cjne    a,#res,??0614
 7302+ 2			        ifnb    <081h>
 7303+ 2			        tst_psw <081h>,??0614
 7304+ 3  1745	E5 70		        mov     a,saved_psw
 7305+ 3  1747	54 C4		        anl     a,#0c4h
 7306+ 3  1749	64 81		        xrl     a,#081h
 7307+ 3  174B	54 FE		        anl     a,#0feh
 7308+ 3  174D	70 05		        jnz     ??0614
 7309+ 2			        endif
 7310+ 1
 7311+ 1			        eot     'b',??0614
 7312+ 2			        putc    #'b'
 7313+ 3  174F			??0630:
 7314+ 3			        ;jnb     SCON.1,putc_loop
 7315+ 3			        ;clr     SCON.1
 7316+ 3  174F	75 99 62	        mov     SBUF,#'b'
 7317+ 2  1752	80 06		        sjmp    ??0629
 7318+ 2  1754			??0614:  putc    #'?'
 7319+ 3  1754			??0631:
 7320+ 3			        ;jnb     SCON.1,putc_loop
 7321+ 3			        ;clr     SCON.1
 7322+ 3  1754	75 99 3F	        mov     SBUF,#'?'
 7323+ 2  1757	75 6E 01	        mov     fail,#001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 132



 Line  I  Addr  Code            Source

 7324+ 2  175A			??0629:
 7325+ 1
 7326+ 1			        top_ma  addc,r4,??0615,<081h>
 7327+ 2  175A	7C 43		        mov     r4,#arg0
 7328+ 2  175C	74 FB		        mov     a,#arg1
 7329+ 2			        ifnb    <081h>
 7330+ 2			        set_cy  081h
 7331+ 3	N      0001	??0632  set     (081h and 1)
 7332+ 3	N      FFFF	        if      ??0632 eq 1
 7333+ 3  175E	D3		        setb    c
 7334+ 3			        else
 7335+ 3			        clr     c
 7336+ 3			        endif
 7337+ 2			        endif
 7338+ 2  175F	3C		        addc      a,r4
 7339+ 2			        ifnb    <081h>
 7340+ 2			        save_psw
 7341+ 3  1760	85 D0 70	        mov     saved_psw,PSW
 7342+ 2			        endif
 7343+ 2  1763	B4 3F 25	        cjne    a,#res,??0615
 7344+ 2			        ifnb    <081h>
 7345+ 2			        tst_psw <081h>,??0615
 7346+ 3  1766	E5 70		        mov     a,saved_psw
 7347+ 3  1768	54 C4		        anl     a,#0c4h
 7348+ 3  176A	64 81		        xrl     a,#081h
 7349+ 3  176C	54 FE		        anl     a,#0feh
 7350+ 3  176E	70 1B		        jnz     ??0615
 7351+ 2			        endif
 7352+ 1			        top_ma  addc,r5,??0615,<081h>
 7353+ 2  1770	7D 43		        mov     r5,#arg0
 7354+ 2  1772	74 FB		        mov     a,#arg1
 7355+ 2			        ifnb    <081h>
 7356+ 2			        set_cy  081h
 7357+ 3	N      0001	??0633  set     (081h and 1)
 7358+ 3	N      FFFF	        if      ??0633 eq 1
 7359+ 3  1774	D3		        setb    c
 7360+ 3			        else
 7361+ 3			        clr     c
 7362+ 3			        endif
 7363+ 2			        endif
 7364+ 2  1775	3D		        addc      a,r5
 7365+ 2			        ifnb    <081h>
 7366+ 2			        save_psw
 7367+ 3  1776	85 D0 70	        mov     saved_psw,PSW
 7368+ 2			        endif
 7369+ 2  1779	B4 3F 0F	        cjne    a,#res,??0615
 7370+ 2			        ifnb    <081h>
 7371+ 2			        tst_psw <081h>,??0615
 7372+ 3  177C	E5 70		        mov     a,saved_psw
 7373+ 3  177E	54 C4		        anl     a,#0c4h
 7374+ 3  1780	64 81		        xrl     a,#081h
 7375+ 3  1782	54 FE		        anl     a,#0feh
 7376+ 3  1784	70 05		        jnz     ??0615
 7377+ 2			        endif
 7378+ 1
 7379+ 1			        eot     'c',??0615

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 133



 Line  I  Addr  Code            Source

 7380+ 2			        putc    #'c'
 7381+ 3  1786			??0635:
 7382+ 3			        ;jnb     SCON.1,putc_loop
 7383+ 3			        ;clr     SCON.1
 7384+ 3  1786	75 99 63	        mov     SBUF,#'c'
 7385+ 2  1789	80 06		        sjmp    ??0634
 7386+ 2  178B			??0615:  putc    #'?'
 7387+ 3  178B			??0636:
 7388+ 3			        ;jnb     SCON.1,putc_loop
 7389+ 3			        ;clr     SCON.1
 7390+ 3  178B	75 99 3F	        mov     SBUF,#'?'
 7391+ 2  178E	75 6E 01	        mov     fail,#001h
 7392+ 2  1791			??0634:
 7393+ 1
 7394+ 1			        top_ma  addc,r6,??0612,<081h>
 7395+ 2  1791	7E 43		        mov     r6,#arg0
 7396+ 2  1793	74 FB		        mov     a,#arg1
 7397+ 2			        ifnb    <081h>
 7398+ 2			        set_cy  081h
 7399+ 3	N      0001	??0637  set     (081h and 1)
 7400+ 3	N      FFFF	        if      ??0637 eq 1
 7401+ 3  1795	D3		        setb    c
 7402+ 3			        else
 7403+ 3			        clr     c
 7404+ 3			        endif
 7405+ 2			        endif
 7406+ 2  1796	3E		        addc      a,r6
 7407+ 2			        ifnb    <081h>
 7408+ 2			        save_psw
 7409+ 3  1797	85 D0 70	        mov     saved_psw,PSW
 7410+ 2			        endif
 7411+ 2  179A	B4 3F 25	        cjne    a,#res,??0612
 7412+ 2			        ifnb    <081h>
 7413+ 2			        tst_psw <081h>,??0612
 7414+ 3  179D	E5 70		        mov     a,saved_psw
 7415+ 3  179F	54 C4		        anl     a,#0c4h
 7416+ 3  17A1	64 81		        xrl     a,#081h
 7417+ 3  17A3	54 FE		        anl     a,#0feh
 7418+ 3  17A5	70 1B		        jnz     ??0612
 7419+ 2			        endif
 7420+ 1			        top_ma  addc,r7,??0612,<081h>
 7421+ 2  17A7	7F 43		        mov     r7,#arg0
 7422+ 2  17A9	74 FB		        mov     a,#arg1
 7423+ 2			        ifnb    <081h>
 7424+ 2			        set_cy  081h
 7425+ 3	N      0001	??0638  set     (081h and 1)
 7426+ 3	N      FFFF	        if      ??0638 eq 1
 7427+ 3  17AB	D3		        setb    c
 7428+ 3			        else
 7429+ 3			        clr     c
 7430+ 3			        endif
 7431+ 2			        endif
 7432+ 2  17AC	3F		        addc      a,r7
 7433+ 2			        ifnb    <081h>
 7434+ 2			        save_psw
 7435+ 3  17AD	85 D0 70	        mov     saved_psw,PSW

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 134



 Line  I  Addr  Code            Source

 7436+ 2			        endif
 7437+ 2  17B0	B4 3F 0F	        cjne    a,#res,??0612
 7438+ 2			        ifnb    <081h>
 7439+ 2			        tst_psw <081h>,??0612
 7440+ 3  17B3	E5 70		        mov     a,saved_psw
 7441+ 3  17B5	54 C4		        anl     a,#0c4h
 7442+ 3  17B7	64 81		        xrl     a,#081h
 7443+ 3  17B9	54 FE		        anl     a,#0feh
 7444+ 3  17BB	70 05		        jnz     ??0612
 7445+ 2			        endif
 7446+ 1
 7447+ 1			        eot     'd',??0612
 7448+ 2			        putc    #'d'
 7449+ 3  17BD			??0640:
 7450+ 3			        ;jnb     SCON.1,putc_loop
 7451+ 3			        ;clr     SCON.1
 7452+ 3  17BD	75 99 64	        mov     SBUF,#'d'
 7453+ 2  17C0	80 06		        sjmp    ??0639
 7454+ 2  17C2			??0612:  putc    #'?'
 7455+ 3  17C2			??0641:
 7456+ 3			        ;jnb     SCON.1,putc_loop
 7457+ 3			        ;clr     SCON.1
 7458+ 3  17C2	75 99 3F	        mov     SBUF,#'?'
 7459+ 2  17C5	75 6E 01	        mov     fail,#001h
 7460+ 2  17C8			??0639:
 7461+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 7462+ 1
 7463+ 1			        ; Optionally test immediate addressing modes.
 7464+ 1
 7465+ 1	N      FFFF	        if      (01h and 1) ne 0
 7466+ 1			        ; Test <op> A, #arg1...
 7467+ 1			        top_mb  addc,a,??0616,<081h>
 7468+ 2  17C8	74 FB		        mov     a,#arg1
 7469+ 2			        ifnb    <081h>
 7470+ 2			        set_cy  081h
 7471+ 3	N      0001	??0642  set     (081h and 1)
 7472+ 3	N      FFFF	        if      ??0642 eq 1
 7473+ 3  17CA	D3		        setb    c
 7474+ 3			        else
 7475+ 3			        clr     c
 7476+ 3			        endif
 7477+ 2			        endif
 7478+ 2  17CB	34 43		        addc      a,#arg0
 7479+ 2			        ifnb    <081h>
 7480+ 2			        save_psw
 7481+ 3  17CD	85 D0 70	        mov     saved_psw,PSW
 7482+ 2			        endif
 7483+ 2  17D0	F5 E0		        mov     ACC,a
 7484+ 2  17D2	B4 3F 0F	        cjne    a,#res,??0616
 7485+ 2			        ifnb    <081h>
 7486+ 2			        tst_psw <081h>,??0616
 7487+ 3  17D5	E5 70		        mov     a,saved_psw
 7488+ 3  17D7	54 C4		        anl     a,#0c4h
 7489+ 3  17D9	64 81		        xrl     a,#081h
 7490+ 3  17DB	54 FE		        anl     a,#0feh
 7491+ 3  17DD	70 05		        jnz     ??0616

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 135



 Line  I  Addr  Code            Source

 7492+ 2			        endif
 7493+ 1			        eot     'e',??0616
 7494+ 2			        putc    #'e'
 7495+ 3  17DF			??0644:
 7496+ 3			        ;jnb     SCON.1,putc_loop
 7497+ 3			        ;clr     SCON.1
 7498+ 3  17DF	75 99 65	        mov     SBUF,#'e'
 7499+ 2  17E2	80 06		        sjmp    ??0643
 7500+ 2  17E4			??0616:  putc    #'?'
 7501+ 3  17E4			??0645:
 7502+ 3			        ;jnb     SCON.1,putc_loop
 7503+ 3			        ;clr     SCON.1
 7504+ 3  17E4	75 99 3F	        mov     SBUF,#'?'
 7505+ 2  17E7	75 6E 01	        mov     fail,#001h
 7506+ 2  17EA			??0643:
 7507+ 1			        endif
 7508+ 1
 7509+ 1	N      0000	        if      (01h and 2) ne 0
 7510+ 1			        ; ...and <op> dir, #arg1
 7511+ 1			        top_mb  addc,dir0,??0617,<081h>
 7512+ 1			        eot     'f',??0617
 7513+ 1			        endif
 7514+ 1
 7515+ 1			        ; Optionally test <op> dir, A
 7516+ 1	N      0000	        if      (01h and 4) ne 0
 7517+ 1			        top_mc  addc,??0618,<081h>
 7518+ 1			        eot     'g',??0618
 7519+ 1			        endif
 7520+ 1
 7521:
 7522:
 7523:				        put_crlf                    ; end of test series
 7524+ 1			        putc    #13
 7525+ 2  17EA			??0646:
 7526+ 2			        ;jnb     SCON.1,putc_loop
 7527+ 2			        ;clr     SCON.1
 7528+ 2  17EA	75 99 0D	        mov     SBUF,#13
 7529+ 1			        putc    #10
 7530+ 2  17ED			??0647:
 7531+ 2			        ;jnb     SCON.1,putc_loop
 7532+ 2			        ;clr     SCON.1
 7533+ 2  17ED	75 99 0A	        mov     SBUF,#10
 7534:
 7535:
 7536:				        ;-- Test series N ------------------------------------------------------
 7537:				        ; SUBB
 7538:				        ; (See comments for 'ALU opcode block test')
 7539:				        ; Note the test runs 4 times for different values of operands
 7540:
 7541:				        putc    #'N'                ; start of test series
 7542+ 1  17F0			??0648:
 7543+ 1			        ;jnb     SCON.1,putc_loop
 7544+ 1			        ;clr     SCON.1
 7545+ 1  17F0	75 99 4E	        mov     SBUF,#'N'
 7546:
 7547:				        putc    #'0'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 136



 Line  I  Addr  Code            Source

 7548+ 1  17F3			??0649:
 7549+ 1			        ;jnb     SCON.1,putc_loop
 7550+ 1			        ;clr     SCON.1
 7551+ 1  17F3	75 99 30	        mov     SBUF,#'0'
 7552:				        tst_alu subb,070h,073h,003h,01h,000h     ; /CY /AC /OV
 7553+ 1			        ; Put the argument and result data into variables for easier access
 7554+ 1	N      0070	        arg0    set 070h
 7555+ 1	N      0073	        arg1    set 073h
 7556+ 1	N      0003	        res     set 003h
 7557+ 1
 7558+ 1			        ; Test <op> A, dir
 7559+ 1			        top_ma  subb,dir0,??0651,<000h>
 7560+ 2  17F6	75 60 70	        mov     dir0,#arg0
 7561+ 2  17F9	74 73		        mov     a,#arg1
 7562+ 2			        ifnb    <000h>
 7563+ 2			        set_cy  000h
 7564+ 3	N      0000	??0657  set     (000h and 1)
 7565+ 3	N      0000	        if      ??0657 eq 1
 7566+ 3			        setb    c
 7567+ 3			        else
 7568+ 3  17FB	C3		        clr     c
 7569+ 3			        endif
 7570+ 2			        endif
 7571+ 2  17FC	95 60		        subb      a,dir0
 7572+ 2			        ifnb    <000h>
 7573+ 2			        save_psw
 7574+ 3  17FE	85 D0 70	        mov     saved_psw,PSW
 7575+ 2			        endif
 7576+ 2  1801	B4 03 6B	        cjne    a,#res,??0651
 7577+ 2			        ifnb    <000h>
 7578+ 2			        tst_psw <000h>,??0651
 7579+ 3  1804	E5 70		        mov     a,saved_psw
 7580+ 3  1806	54 C4		        anl     a,#0c4h
 7581+ 3  1808	64 00		        xrl     a,#000h
 7582+ 3  180A	54 FE		        anl     a,#0feh
 7583+ 3  180C	70 61		        jnz     ??0651
 7584+ 2			        endif
 7585+ 1			        ; Test <op> A, @R0
 7586+ 1  180E	78 60		        mov     r0,#dir0
 7587+ 1			        top_ma  subb,@r0,??0651,<000h>
 7588+ 2  1810	76 70		        mov     @r0,#arg0
 7589+ 2  1812	74 73		        mov     a,#arg1
 7590+ 2			        ifnb    <000h>
 7591+ 2			        set_cy  000h
 7592+ 3	N      0000	??0658  set     (000h and 1)
 7593+ 3	N      0000	        if      ??0658 eq 1
 7594+ 3			        setb    c
 7595+ 3			        else
 7596+ 3  1814	C3		        clr     c
 7597+ 3			        endif
 7598+ 2			        endif
 7599+ 2  1815	96		        subb      a,@r0
 7600+ 2			        ifnb    <000h>
 7601+ 2			        save_psw
 7602+ 3  1816	85 D0 70	        mov     saved_psw,PSW
 7603+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 137



 Line  I  Addr  Code            Source

 7604+ 2  1819	B4 03 53	        cjne    a,#res,??0651
 7605+ 2			        ifnb    <000h>
 7606+ 2			        tst_psw <000h>,??0651
 7607+ 3  181C	E5 70		        mov     a,saved_psw
 7608+ 3  181E	54 C4		        anl     a,#0c4h
 7609+ 3  1820	64 00		        xrl     a,#000h
 7610+ 3  1822	54 FE		        anl     a,#0feh
 7611+ 3  1824	70 49		        jnz     ??0651
 7612+ 2			        endif
 7613+ 1			        ; Test <op> A, @R1
 7614+ 1  1826	79 31		        mov     r1,#031h
 7615+ 1			        top_ma  subb,@r1,??0651,<000h>
 7616+ 2  1828	77 70		        mov     @r1,#arg0
 7617+ 2  182A	74 73		        mov     a,#arg1
 7618+ 2			        ifnb    <000h>
 7619+ 2			        set_cy  000h
 7620+ 3	N      0000	??0659  set     (000h and 1)
 7621+ 3	N      0000	        if      ??0659 eq 1
 7622+ 3			        setb    c
 7623+ 3			        else
 7624+ 3  182C	C3		        clr     c
 7625+ 3			        endif
 7626+ 2			        endif
 7627+ 2  182D	97		        subb      a,@r1
 7628+ 2			        ifnb    <000h>
 7629+ 2			        save_psw
 7630+ 3  182E	85 D0 70	        mov     saved_psw,PSW
 7631+ 2			        endif
 7632+ 2  1831	B4 03 3B	        cjne    a,#res,??0651
 7633+ 2			        ifnb    <000h>
 7634+ 2			        tst_psw <000h>,??0651
 7635+ 3  1834	E5 70		        mov     a,saved_psw
 7636+ 3  1836	54 C4		        anl     a,#0c4h
 7637+ 3  1838	64 00		        xrl     a,#000h
 7638+ 3  183A	54 FE		        anl     a,#0feh
 7639+ 3  183C	70 31		        jnz     ??0651
 7640+ 2			        endif
 7641+ 1
 7642+ 1			        ; Now test <op> A, Rn for n in 0..7
 7643+ 1			        top_ma  subb,r0,??0651,<000h>
 7644+ 2  183E	78 70		        mov     r0,#arg0
 7645+ 2  1840	74 73		        mov     a,#arg1
 7646+ 2			        ifnb    <000h>
 7647+ 2			        set_cy  000h
 7648+ 3	N      0000	??0660  set     (000h and 1)
 7649+ 3	N      0000	        if      ??0660 eq 1
 7650+ 3			        setb    c
 7651+ 3			        else
 7652+ 3  1842	C3		        clr     c
 7653+ 3			        endif
 7654+ 2			        endif
 7655+ 2  1843	98		        subb      a,r0
 7656+ 2			        ifnb    <000h>
 7657+ 2			        save_psw
 7658+ 3  1844	85 D0 70	        mov     saved_psw,PSW
 7659+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 138



 Line  I  Addr  Code            Source

 7660+ 2  1847	B4 03 25	        cjne    a,#res,??0651
 7661+ 2			        ifnb    <000h>
 7662+ 2			        tst_psw <000h>,??0651
 7663+ 3  184A	E5 70		        mov     a,saved_psw
 7664+ 3  184C	54 C4		        anl     a,#0c4h
 7665+ 3  184E	64 00		        xrl     a,#000h
 7666+ 3  1850	54 FE		        anl     a,#0feh
 7667+ 3  1852	70 1B		        jnz     ??0651
 7668+ 2			        endif
 7669+ 1			        top_ma  subb,r1,??0651,<000h>
 7670+ 2  1854	79 70		        mov     r1,#arg0
 7671+ 2  1856	74 73		        mov     a,#arg1
 7672+ 2			        ifnb    <000h>
 7673+ 2			        set_cy  000h
 7674+ 3	N      0000	??0661  set     (000h and 1)
 7675+ 3	N      0000	        if      ??0661 eq 1
 7676+ 3			        setb    c
 7677+ 3			        else
 7678+ 3  1858	C3		        clr     c
 7679+ 3			        endif
 7680+ 2			        endif
 7681+ 2  1859	99		        subb      a,r1
 7682+ 2			        ifnb    <000h>
 7683+ 2			        save_psw
 7684+ 3  185A	85 D0 70	        mov     saved_psw,PSW
 7685+ 2			        endif
 7686+ 2  185D	B4 03 0F	        cjne    a,#res,??0651
 7687+ 2			        ifnb    <000h>
 7688+ 2			        tst_psw <000h>,??0651
 7689+ 3  1860	E5 70		        mov     a,saved_psw
 7690+ 3  1862	54 C4		        anl     a,#0c4h
 7691+ 3  1864	64 00		        xrl     a,#000h
 7692+ 3  1866	54 FE		        anl     a,#0feh
 7693+ 3  1868	70 05		        jnz     ??0651
 7694+ 2			        endif
 7695+ 1
 7696+ 1			        eot     'a',??0651
 7697+ 2			        putc    #'a'
 7698+ 3  186A			??0663:
 7699+ 3			        ;jnb     SCON.1,putc_loop
 7700+ 3			        ;clr     SCON.1
 7701+ 3  186A	75 99 61	        mov     SBUF,#'a'
 7702+ 2  186D	80 06		        sjmp    ??0662
 7703+ 2  186F			??0651:  putc    #'?'
 7704+ 3  186F			??0664:
 7705+ 3			        ;jnb     SCON.1,putc_loop
 7706+ 3			        ;clr     SCON.1
 7707+ 3  186F	75 99 3F	        mov     SBUF,#'?'
 7708+ 2  1872	75 6E 01	        mov     fail,#001h
 7709+ 2  1875			??0662:
 7710+ 1
 7711+ 1			        top_ma  subb,r2,??0652,<000h>
 7712+ 2  1875	7A 70		        mov     r2,#arg0
 7713+ 2  1877	74 73		        mov     a,#arg1
 7714+ 2			        ifnb    <000h>
 7715+ 2			        set_cy  000h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 139



 Line  I  Addr  Code            Source

 7716+ 3	N      0000	??0665  set     (000h and 1)
 7717+ 3	N      0000	        if      ??0665 eq 1
 7718+ 3			        setb    c
 7719+ 3			        else
 7720+ 3  1879	C3		        clr     c
 7721+ 3			        endif
 7722+ 2			        endif
 7723+ 2  187A	9A		        subb      a,r2
 7724+ 2			        ifnb    <000h>
 7725+ 2			        save_psw
 7726+ 3  187B	85 D0 70	        mov     saved_psw,PSW
 7727+ 2			        endif
 7728+ 2  187E	B4 03 25	        cjne    a,#res,??0652
 7729+ 2			        ifnb    <000h>
 7730+ 2			        tst_psw <000h>,??0652
 7731+ 3  1881	E5 70		        mov     a,saved_psw
 7732+ 3  1883	54 C4		        anl     a,#0c4h
 7733+ 3  1885	64 00		        xrl     a,#000h
 7734+ 3  1887	54 FE		        anl     a,#0feh
 7735+ 3  1889	70 1B		        jnz     ??0652
 7736+ 2			        endif
 7737+ 1			        top_ma  subb,r3,??0652,<000h>
 7738+ 2  188B	7B 70		        mov     r3,#arg0
 7739+ 2  188D	74 73		        mov     a,#arg1
 7740+ 2			        ifnb    <000h>
 7741+ 2			        set_cy  000h
 7742+ 3	N      0000	??0666  set     (000h and 1)
 7743+ 3	N      0000	        if      ??0666 eq 1
 7744+ 3			        setb    c
 7745+ 3			        else
 7746+ 3  188F	C3		        clr     c
 7747+ 3			        endif
 7748+ 2			        endif
 7749+ 2  1890	9B		        subb      a,r3
 7750+ 2			        ifnb    <000h>
 7751+ 2			        save_psw
 7752+ 3  1891	85 D0 70	        mov     saved_psw,PSW
 7753+ 2			        endif
 7754+ 2  1894	B4 03 0F	        cjne    a,#res,??0652
 7755+ 2			        ifnb    <000h>
 7756+ 2			        tst_psw <000h>,??0652
 7757+ 3  1897	E5 70		        mov     a,saved_psw
 7758+ 3  1899	54 C4		        anl     a,#0c4h
 7759+ 3  189B	64 00		        xrl     a,#000h
 7760+ 3  189D	54 FE		        anl     a,#0feh
 7761+ 3  189F	70 05		        jnz     ??0652
 7762+ 2			        endif
 7763+ 1
 7764+ 1			        eot     'b',??0652
 7765+ 2			        putc    #'b'
 7766+ 3  18A1			??0668:
 7767+ 3			        ;jnb     SCON.1,putc_loop
 7768+ 3			        ;clr     SCON.1
 7769+ 3  18A1	75 99 62	        mov     SBUF,#'b'
 7770+ 2  18A4	80 06		        sjmp    ??0667
 7771+ 2  18A6			??0652:  putc    #'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 140



 Line  I  Addr  Code            Source

 7772+ 3  18A6			??0669:
 7773+ 3			        ;jnb     SCON.1,putc_loop
 7774+ 3			        ;clr     SCON.1
 7775+ 3  18A6	75 99 3F	        mov     SBUF,#'?'
 7776+ 2  18A9	75 6E 01	        mov     fail,#001h
 7777+ 2  18AC			??0667:
 7778+ 1
 7779+ 1			        top_ma  subb,r4,??0653,<000h>
 7780+ 2  18AC	7C 70		        mov     r4,#arg0
 7781+ 2  18AE	74 73		        mov     a,#arg1
 7782+ 2			        ifnb    <000h>
 7783+ 2			        set_cy  000h
 7784+ 3	N      0000	??0670  set     (000h and 1)
 7785+ 3	N      0000	        if      ??0670 eq 1
 7786+ 3			        setb    c
 7787+ 3			        else
 7788+ 3  18B0	C3		        clr     c
 7789+ 3			        endif
 7790+ 2			        endif
 7791+ 2  18B1	9C		        subb      a,r4
 7792+ 2			        ifnb    <000h>
 7793+ 2			        save_psw
 7794+ 3  18B2	85 D0 70	        mov     saved_psw,PSW
 7795+ 2			        endif
 7796+ 2  18B5	B4 03 25	        cjne    a,#res,??0653
 7797+ 2			        ifnb    <000h>
 7798+ 2			        tst_psw <000h>,??0653
 7799+ 3  18B8	E5 70		        mov     a,saved_psw
 7800+ 3  18BA	54 C4		        anl     a,#0c4h
 7801+ 3  18BC	64 00		        xrl     a,#000h
 7802+ 3  18BE	54 FE		        anl     a,#0feh
 7803+ 3  18C0	70 1B		        jnz     ??0653
 7804+ 2			        endif
 7805+ 1			        top_ma  subb,r5,??0653,<000h>
 7806+ 2  18C2	7D 70		        mov     r5,#arg0
 7807+ 2  18C4	74 73		        mov     a,#arg1
 7808+ 2			        ifnb    <000h>
 7809+ 2			        set_cy  000h
 7810+ 3	N      0000	??0671  set     (000h and 1)
 7811+ 3	N      0000	        if      ??0671 eq 1
 7812+ 3			        setb    c
 7813+ 3			        else
 7814+ 3  18C6	C3		        clr     c
 7815+ 3			        endif
 7816+ 2			        endif
 7817+ 2  18C7	9D		        subb      a,r5
 7818+ 2			        ifnb    <000h>
 7819+ 2			        save_psw
 7820+ 3  18C8	85 D0 70	        mov     saved_psw,PSW
 7821+ 2			        endif
 7822+ 2  18CB	B4 03 0F	        cjne    a,#res,??0653
 7823+ 2			        ifnb    <000h>
 7824+ 2			        tst_psw <000h>,??0653
 7825+ 3  18CE	E5 70		        mov     a,saved_psw
 7826+ 3  18D0	54 C4		        anl     a,#0c4h
 7827+ 3  18D2	64 00		        xrl     a,#000h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 141



 Line  I  Addr  Code            Source

 7828+ 3  18D4	54 FE		        anl     a,#0feh
 7829+ 3  18D6	70 05		        jnz     ??0653
 7830+ 2			        endif
 7831+ 1
 7832+ 1			        eot     'c',??0653
 7833+ 2			        putc    #'c'
 7834+ 3  18D8			??0673:
 7835+ 3			        ;jnb     SCON.1,putc_loop
 7836+ 3			        ;clr     SCON.1
 7837+ 3  18D8	75 99 63	        mov     SBUF,#'c'
 7838+ 2  18DB	80 06		        sjmp    ??0672
 7839+ 2  18DD			??0653:  putc    #'?'
 7840+ 3  18DD			??0674:
 7841+ 3			        ;jnb     SCON.1,putc_loop
 7842+ 3			        ;clr     SCON.1
 7843+ 3  18DD	75 99 3F	        mov     SBUF,#'?'
 7844+ 2  18E0	75 6E 01	        mov     fail,#001h
 7845+ 2  18E3			??0672:
 7846+ 1
 7847+ 1			        top_ma  subb,r6,??0650,<000h>
 7848+ 2  18E3	7E 70		        mov     r6,#arg0
 7849+ 2  18E5	74 73		        mov     a,#arg1
 7850+ 2			        ifnb    <000h>
 7851+ 2			        set_cy  000h
 7852+ 3	N      0000	??0675  set     (000h and 1)
 7853+ 3	N      0000	        if      ??0675 eq 1
 7854+ 3			        setb    c
 7855+ 3			        else
 7856+ 3  18E7	C3		        clr     c
 7857+ 3			        endif
 7858+ 2			        endif
 7859+ 2  18E8	9E		        subb      a,r6
 7860+ 2			        ifnb    <000h>
 7861+ 2			        save_psw
 7862+ 3  18E9	85 D0 70	        mov     saved_psw,PSW
 7863+ 2			        endif
 7864+ 2  18EC	B4 03 25	        cjne    a,#res,??0650
 7865+ 2			        ifnb    <000h>
 7866+ 2			        tst_psw <000h>,??0650
 7867+ 3  18EF	E5 70		        mov     a,saved_psw
 7868+ 3  18F1	54 C4		        anl     a,#0c4h
 7869+ 3  18F3	64 00		        xrl     a,#000h
 7870+ 3  18F5	54 FE		        anl     a,#0feh
 7871+ 3  18F7	70 1B		        jnz     ??0650
 7872+ 2			        endif
 7873+ 1			        top_ma  subb,r7,??0650,<000h>
 7874+ 2  18F9	7F 70		        mov     r7,#arg0
 7875+ 2  18FB	74 73		        mov     a,#arg1
 7876+ 2			        ifnb    <000h>
 7877+ 2			        set_cy  000h
 7878+ 3	N      0000	??0676  set     (000h and 1)
 7879+ 3	N      0000	        if      ??0676 eq 1
 7880+ 3			        setb    c
 7881+ 3			        else
 7882+ 3  18FD	C3		        clr     c
 7883+ 3			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 142



 Line  I  Addr  Code            Source

 7884+ 2			        endif
 7885+ 2  18FE	9F		        subb      a,r7
 7886+ 2			        ifnb    <000h>
 7887+ 2			        save_psw
 7888+ 3  18FF	85 D0 70	        mov     saved_psw,PSW
 7889+ 2			        endif
 7890+ 2  1902	B4 03 0F	        cjne    a,#res,??0650
 7891+ 2			        ifnb    <000h>
 7892+ 2			        tst_psw <000h>,??0650
 7893+ 3  1905	E5 70		        mov     a,saved_psw
 7894+ 3  1907	54 C4		        anl     a,#0c4h
 7895+ 3  1909	64 00		        xrl     a,#000h
 7896+ 3  190B	54 FE		        anl     a,#0feh
 7897+ 3  190D	70 05		        jnz     ??0650
 7898+ 2			        endif
 7899+ 1
 7900+ 1			        eot     'd',??0650
 7901+ 2			        putc    #'d'
 7902+ 3  190F			??0678:
 7903+ 3			        ;jnb     SCON.1,putc_loop
 7904+ 3			        ;clr     SCON.1
 7905+ 3  190F	75 99 64	        mov     SBUF,#'d'
 7906+ 2  1912	80 06		        sjmp    ??0677
 7907+ 2  1914			??0650:  putc    #'?'
 7908+ 3  1914			??0679:
 7909+ 3			        ;jnb     SCON.1,putc_loop
 7910+ 3			        ;clr     SCON.1
 7911+ 3  1914	75 99 3F	        mov     SBUF,#'?'
 7912+ 2  1917	75 6E 01	        mov     fail,#001h
 7913+ 2  191A			??0677:
 7914+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 7915+ 1
 7916+ 1			        ; Optionally test immediate addressing modes.
 7917+ 1
 7918+ 1	N      FFFF	        if      (01h and 1) ne 0
 7919+ 1			        ; Test <op> A, #arg1...
 7920+ 1			        top_mb  subb,a,??0654,<000h>
 7921+ 2  191A	74 73		        mov     a,#arg1
 7922+ 2			        ifnb    <000h>
 7923+ 2			        set_cy  000h
 7924+ 3	N      0000	??0680  set     (000h and 1)
 7925+ 3	N      0000	        if      ??0680 eq 1
 7926+ 3			        setb    c
 7927+ 3			        else
 7928+ 3  191C	C3		        clr     c
 7929+ 3			        endif
 7930+ 2			        endif
 7931+ 2  191D	94 70		        subb      a,#arg0
 7932+ 2			        ifnb    <000h>
 7933+ 2			        save_psw
 7934+ 3  191F	85 D0 70	        mov     saved_psw,PSW
 7935+ 2			        endif
 7936+ 2  1922	F5 E0		        mov     ACC,a
 7937+ 2  1924	B4 03 0F	        cjne    a,#res,??0654
 7938+ 2			        ifnb    <000h>
 7939+ 2			        tst_psw <000h>,??0654

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 143



 Line  I  Addr  Code            Source

 7940+ 3  1927	E5 70		        mov     a,saved_psw
 7941+ 3  1929	54 C4		        anl     a,#0c4h
 7942+ 3  192B	64 00		        xrl     a,#000h
 7943+ 3  192D	54 FE		        anl     a,#0feh
 7944+ 3  192F	70 05		        jnz     ??0654
 7945+ 2			        endif
 7946+ 1			        eot     'e',??0654
 7947+ 2			        putc    #'e'
 7948+ 3  1931			??0682:
 7949+ 3			        ;jnb     SCON.1,putc_loop
 7950+ 3			        ;clr     SCON.1
 7951+ 3  1931	75 99 65	        mov     SBUF,#'e'
 7952+ 2  1934	80 06		        sjmp    ??0681
 7953+ 2  1936			??0654:  putc    #'?'
 7954+ 3  1936			??0683:
 7955+ 3			        ;jnb     SCON.1,putc_loop
 7956+ 3			        ;clr     SCON.1
 7957+ 3  1936	75 99 3F	        mov     SBUF,#'?'
 7958+ 2  1939	75 6E 01	        mov     fail,#001h
 7959+ 2  193C			??0681:
 7960+ 1			        endif
 7961+ 1
 7962+ 1	N      0000	        if      (01h and 2) ne 0
 7963+ 1			        ; ...and <op> dir, #arg1
 7964+ 1			        top_mb  subb,dir0,??0655,<000h>
 7965+ 1			        eot     'f',??0655
 7966+ 1			        endif
 7967+ 1
 7968+ 1			        ; Optionally test <op> dir, A
 7969+ 1	N      0000	        if      (01h and 4) ne 0
 7970+ 1			        top_mc  subb,??0656,<000h>
 7971+ 1			        eot     'g',??0656
 7972+ 1			        endif
 7973+ 1
 7974:				        putc    #'1'
 7975+ 1  193C			??0684:
 7976+ 1			        ;jnb     SCON.1,putc_loop
 7977+ 1			        ;clr     SCON.1
 7978+ 1  193C	75 99 31	        mov     SBUF,#'1'
 7979:				        tst_alu subb,070h,073h,002h,01h,001h     ; /CY /AC /OV (CY input)
 7980+ 1			        ; Put the argument and result data into variables for easier access
 7981+ 1	N      0070	        arg0    set 070h
 7982+ 1	N      0073	        arg1    set 073h
 7983+ 1	N      0002	        res     set 002h
 7984+ 1
 7985+ 1			        ; Test <op> A, dir
 7986+ 1			        top_ma  subb,dir0,??0686,<001h>
 7987+ 2  193F	75 60 70	        mov     dir0,#arg0
 7988+ 2  1942	74 73		        mov     a,#arg1
 7989+ 2			        ifnb    <001h>
 7990+ 2			        set_cy  001h
 7991+ 3	N      0001	??0692  set     (001h and 1)
 7992+ 3	N      FFFF	        if      ??0692 eq 1
 7993+ 3  1944	D3		        setb    c
 7994+ 3			        else
 7995+ 3			        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 144



 Line  I  Addr  Code            Source

 7996+ 3			        endif
 7997+ 2			        endif
 7998+ 2  1945	95 60		        subb      a,dir0
 7999+ 2			        ifnb    <001h>
 8000+ 2			        save_psw
 8001+ 3  1947	85 D0 70	        mov     saved_psw,PSW
 8002+ 2			        endif
 8003+ 2  194A	B4 02 6B	        cjne    a,#res,??0686
 8004+ 2			        ifnb    <001h>
 8005+ 2			        tst_psw <001h>,??0686
 8006+ 3  194D	E5 70		        mov     a,saved_psw
 8007+ 3  194F	54 C4		        anl     a,#0c4h
 8008+ 3  1951	64 01		        xrl     a,#001h
 8009+ 3  1953	54 FE		        anl     a,#0feh
 8010+ 3  1955	70 61		        jnz     ??0686
 8011+ 2			        endif
 8012+ 1			        ; Test <op> A, @R0
 8013+ 1  1957	78 60		        mov     r0,#dir0
 8014+ 1			        top_ma  subb,@r0,??0686,<001h>
 8015+ 2  1959	76 70		        mov     @r0,#arg0
 8016+ 2  195B	74 73		        mov     a,#arg1
 8017+ 2			        ifnb    <001h>
 8018+ 2			        set_cy  001h
 8019+ 3	N      0001	??0693  set     (001h and 1)
 8020+ 3	N      FFFF	        if      ??0693 eq 1
 8021+ 3  195D	D3		        setb    c
 8022+ 3			        else
 8023+ 3			        clr     c
 8024+ 3			        endif
 8025+ 2			        endif
 8026+ 2  195E	96		        subb      a,@r0
 8027+ 2			        ifnb    <001h>
 8028+ 2			        save_psw
 8029+ 3  195F	85 D0 70	        mov     saved_psw,PSW
 8030+ 2			        endif
 8031+ 2  1962	B4 02 53	        cjne    a,#res,??0686
 8032+ 2			        ifnb    <001h>
 8033+ 2			        tst_psw <001h>,??0686
 8034+ 3  1965	E5 70		        mov     a,saved_psw
 8035+ 3  1967	54 C4		        anl     a,#0c4h
 8036+ 3  1969	64 01		        xrl     a,#001h
 8037+ 3  196B	54 FE		        anl     a,#0feh
 8038+ 3  196D	70 49		        jnz     ??0686
 8039+ 2			        endif
 8040+ 1			        ; Test <op> A, @R1
 8041+ 1  196F	79 31		        mov     r1,#031h
 8042+ 1			        top_ma  subb,@r1,??0686,<001h>
 8043+ 2  1971	77 70		        mov     @r1,#arg0
 8044+ 2  1973	74 73		        mov     a,#arg1
 8045+ 2			        ifnb    <001h>
 8046+ 2			        set_cy  001h
 8047+ 3	N      0001	??0694  set     (001h and 1)
 8048+ 3	N      FFFF	        if      ??0694 eq 1
 8049+ 3  1975	D3		        setb    c
 8050+ 3			        else
 8051+ 3			        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 145



 Line  I  Addr  Code            Source

 8052+ 3			        endif
 8053+ 2			        endif
 8054+ 2  1976	97		        subb      a,@r1
 8055+ 2			        ifnb    <001h>
 8056+ 2			        save_psw
 8057+ 3  1977	85 D0 70	        mov     saved_psw,PSW
 8058+ 2			        endif
 8059+ 2  197A	B4 02 3B	        cjne    a,#res,??0686
 8060+ 2			        ifnb    <001h>
 8061+ 2			        tst_psw <001h>,??0686
 8062+ 3  197D	E5 70		        mov     a,saved_psw
 8063+ 3  197F	54 C4		        anl     a,#0c4h
 8064+ 3  1981	64 01		        xrl     a,#001h
 8065+ 3  1983	54 FE		        anl     a,#0feh
 8066+ 3  1985	70 31		        jnz     ??0686
 8067+ 2			        endif
 8068+ 1
 8069+ 1			        ; Now test <op> A, Rn for n in 0..7
 8070+ 1			        top_ma  subb,r0,??0686,<001h>
 8071+ 2  1987	78 70		        mov     r0,#arg0
 8072+ 2  1989	74 73		        mov     a,#arg1
 8073+ 2			        ifnb    <001h>
 8074+ 2			        set_cy  001h
 8075+ 3	N      0001	??0695  set     (001h and 1)
 8076+ 3	N      FFFF	        if      ??0695 eq 1
 8077+ 3  198B	D3		        setb    c
 8078+ 3			        else
 8079+ 3			        clr     c
 8080+ 3			        endif
 8081+ 2			        endif
 8082+ 2  198C	98		        subb      a,r0
 8083+ 2			        ifnb    <001h>
 8084+ 2			        save_psw
 8085+ 3  198D	85 D0 70	        mov     saved_psw,PSW
 8086+ 2			        endif
 8087+ 2  1990	B4 02 25	        cjne    a,#res,??0686
 8088+ 2			        ifnb    <001h>
 8089+ 2			        tst_psw <001h>,??0686
 8090+ 3  1993	E5 70		        mov     a,saved_psw
 8091+ 3  1995	54 C4		        anl     a,#0c4h
 8092+ 3  1997	64 01		        xrl     a,#001h
 8093+ 3  1999	54 FE		        anl     a,#0feh
 8094+ 3  199B	70 1B		        jnz     ??0686
 8095+ 2			        endif
 8096+ 1			        top_ma  subb,r1,??0686,<001h>
 8097+ 2  199D	79 70		        mov     r1,#arg0
 8098+ 2  199F	74 73		        mov     a,#arg1
 8099+ 2			        ifnb    <001h>
 8100+ 2			        set_cy  001h
 8101+ 3	N      0001	??0696  set     (001h and 1)
 8102+ 3	N      FFFF	        if      ??0696 eq 1
 8103+ 3  19A1	D3		        setb    c
 8104+ 3			        else
 8105+ 3			        clr     c
 8106+ 3			        endif
 8107+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 146



 Line  I  Addr  Code            Source

 8108+ 2  19A2	99		        subb      a,r1
 8109+ 2			        ifnb    <001h>
 8110+ 2			        save_psw
 8111+ 3  19A3	85 D0 70	        mov     saved_psw,PSW
 8112+ 2			        endif
 8113+ 2  19A6	B4 02 0F	        cjne    a,#res,??0686
 8114+ 2			        ifnb    <001h>
 8115+ 2			        tst_psw <001h>,??0686
 8116+ 3  19A9	E5 70		        mov     a,saved_psw
 8117+ 3  19AB	54 C4		        anl     a,#0c4h
 8118+ 3  19AD	64 01		        xrl     a,#001h
 8119+ 3  19AF	54 FE		        anl     a,#0feh
 8120+ 3  19B1	70 05		        jnz     ??0686
 8121+ 2			        endif
 8122+ 1
 8123+ 1			        eot     'a',??0686
 8124+ 2			        putc    #'a'
 8125+ 3  19B3			??0698:
 8126+ 3			        ;jnb     SCON.1,putc_loop
 8127+ 3			        ;clr     SCON.1
 8128+ 3  19B3	75 99 61	        mov     SBUF,#'a'
 8129+ 2  19B6	80 06		        sjmp    ??0697
 8130+ 2  19B8			??0686:  putc    #'?'
 8131+ 3  19B8			??0699:
 8132+ 3			        ;jnb     SCON.1,putc_loop
 8133+ 3			        ;clr     SCON.1
 8134+ 3  19B8	75 99 3F	        mov     SBUF,#'?'
 8135+ 2  19BB	75 6E 01	        mov     fail,#001h
 8136+ 2  19BE			??0697:
 8137+ 1
 8138+ 1			        top_ma  subb,r2,??0687,<001h>
 8139+ 2  19BE	7A 70		        mov     r2,#arg0
 8140+ 2  19C0	74 73		        mov     a,#arg1
 8141+ 2			        ifnb    <001h>
 8142+ 2			        set_cy  001h
 8143+ 3	N      0001	??0700  set     (001h and 1)
 8144+ 3	N      FFFF	        if      ??0700 eq 1
 8145+ 3  19C2	D3		        setb    c
 8146+ 3			        else
 8147+ 3			        clr     c
 8148+ 3			        endif
 8149+ 2			        endif
 8150+ 2  19C3	9A		        subb      a,r2
 8151+ 2			        ifnb    <001h>
 8152+ 2			        save_psw
 8153+ 3  19C4	85 D0 70	        mov     saved_psw,PSW
 8154+ 2			        endif
 8155+ 2  19C7	B4 02 25	        cjne    a,#res,??0687
 8156+ 2			        ifnb    <001h>
 8157+ 2			        tst_psw <001h>,??0687
 8158+ 3  19CA	E5 70		        mov     a,saved_psw
 8159+ 3  19CC	54 C4		        anl     a,#0c4h
 8160+ 3  19CE	64 01		        xrl     a,#001h
 8161+ 3  19D0	54 FE		        anl     a,#0feh
 8162+ 3  19D2	70 1B		        jnz     ??0687
 8163+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 147



 Line  I  Addr  Code            Source

 8164+ 1			        top_ma  subb,r3,??0687,<001h>
 8165+ 2  19D4	7B 70		        mov     r3,#arg0
 8166+ 2  19D6	74 73		        mov     a,#arg1
 8167+ 2			        ifnb    <001h>
 8168+ 2			        set_cy  001h
 8169+ 3	N      0001	??0701  set     (001h and 1)
 8170+ 3	N      FFFF	        if      ??0701 eq 1
 8171+ 3  19D8	D3		        setb    c
 8172+ 3			        else
 8173+ 3			        clr     c
 8174+ 3			        endif
 8175+ 2			        endif
 8176+ 2  19D9	9B		        subb      a,r3
 8177+ 2			        ifnb    <001h>
 8178+ 2			        save_psw
 8179+ 3  19DA	85 D0 70	        mov     saved_psw,PSW
 8180+ 2			        endif
 8181+ 2  19DD	B4 02 0F	        cjne    a,#res,??0687
 8182+ 2			        ifnb    <001h>
 8183+ 2			        tst_psw <001h>,??0687
 8184+ 3  19E0	E5 70		        mov     a,saved_psw
 8185+ 3  19E2	54 C4		        anl     a,#0c4h
 8186+ 3  19E4	64 01		        xrl     a,#001h
 8187+ 3  19E6	54 FE		        anl     a,#0feh
 8188+ 3  19E8	70 05		        jnz     ??0687
 8189+ 2			        endif
 8190+ 1
 8191+ 1			        eot     'b',??0687
 8192+ 2			        putc    #'b'
 8193+ 3  19EA			??0703:
 8194+ 3			        ;jnb     SCON.1,putc_loop
 8195+ 3			        ;clr     SCON.1
 8196+ 3  19EA	75 99 62	        mov     SBUF,#'b'
 8197+ 2  19ED	80 06		        sjmp    ??0702
 8198+ 2  19EF			??0687:  putc    #'?'
 8199+ 3  19EF			??0704:
 8200+ 3			        ;jnb     SCON.1,putc_loop
 8201+ 3			        ;clr     SCON.1
 8202+ 3  19EF	75 99 3F	        mov     SBUF,#'?'
 8203+ 2  19F2	75 6E 01	        mov     fail,#001h
 8204+ 2  19F5			??0702:
 8205+ 1
 8206+ 1			        top_ma  subb,r4,??0688,<001h>
 8207+ 2  19F5	7C 70		        mov     r4,#arg0
 8208+ 2  19F7	74 73		        mov     a,#arg1
 8209+ 2			        ifnb    <001h>
 8210+ 2			        set_cy  001h
 8211+ 3	N      0001	??0705  set     (001h and 1)
 8212+ 3	N      FFFF	        if      ??0705 eq 1
 8213+ 3  19F9	D3		        setb    c
 8214+ 3			        else
 8215+ 3			        clr     c
 8216+ 3			        endif
 8217+ 2			        endif
 8218+ 2  19FA	9C		        subb      a,r4
 8219+ 2			        ifnb    <001h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 148



 Line  I  Addr  Code            Source

 8220+ 2			        save_psw
 8221+ 3  19FB	85 D0 70	        mov     saved_psw,PSW
 8222+ 2			        endif
 8223+ 2  19FE	B4 02 25	        cjne    a,#res,??0688
 8224+ 2			        ifnb    <001h>
 8225+ 2			        tst_psw <001h>,??0688
 8226+ 3  1A01	E5 70		        mov     a,saved_psw
 8227+ 3  1A03	54 C4		        anl     a,#0c4h
 8228+ 3  1A05	64 01		        xrl     a,#001h
 8229+ 3  1A07	54 FE		        anl     a,#0feh
 8230+ 3  1A09	70 1B		        jnz     ??0688
 8231+ 2			        endif
 8232+ 1			        top_ma  subb,r5,??0688,<001h>
 8233+ 2  1A0B	7D 70		        mov     r5,#arg0
 8234+ 2  1A0D	74 73		        mov     a,#arg1
 8235+ 2			        ifnb    <001h>
 8236+ 2			        set_cy  001h
 8237+ 3	N      0001	??0706  set     (001h and 1)
 8238+ 3	N      FFFF	        if      ??0706 eq 1
 8239+ 3  1A0F	D3		        setb    c
 8240+ 3			        else
 8241+ 3			        clr     c
 8242+ 3			        endif
 8243+ 2			        endif
 8244+ 2  1A10	9D		        subb      a,r5
 8245+ 2			        ifnb    <001h>
 8246+ 2			        save_psw
 8247+ 3  1A11	85 D0 70	        mov     saved_psw,PSW
 8248+ 2			        endif
 8249+ 2  1A14	B4 02 0F	        cjne    a,#res,??0688
 8250+ 2			        ifnb    <001h>
 8251+ 2			        tst_psw <001h>,??0688
 8252+ 3  1A17	E5 70		        mov     a,saved_psw
 8253+ 3  1A19	54 C4		        anl     a,#0c4h
 8254+ 3  1A1B	64 01		        xrl     a,#001h
 8255+ 3  1A1D	54 FE		        anl     a,#0feh
 8256+ 3  1A1F	70 05		        jnz     ??0688
 8257+ 2			        endif
 8258+ 1
 8259+ 1			        eot     'c',??0688
 8260+ 2			        putc    #'c'
 8261+ 3  1A21			??0708:
 8262+ 3			        ;jnb     SCON.1,putc_loop
 8263+ 3			        ;clr     SCON.1
 8264+ 3  1A21	75 99 63	        mov     SBUF,#'c'
 8265+ 2  1A24	80 06		        sjmp    ??0707
 8266+ 2  1A26			??0688:  putc    #'?'
 8267+ 3  1A26			??0709:
 8268+ 3			        ;jnb     SCON.1,putc_loop
 8269+ 3			        ;clr     SCON.1
 8270+ 3  1A26	75 99 3F	        mov     SBUF,#'?'
 8271+ 2  1A29	75 6E 01	        mov     fail,#001h
 8272+ 2  1A2C			??0707:
 8273+ 1
 8274+ 1			        top_ma  subb,r6,??0685,<001h>
 8275+ 2  1A2C	7E 70		        mov     r6,#arg0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 149



 Line  I  Addr  Code            Source

 8276+ 2  1A2E	74 73		        mov     a,#arg1
 8277+ 2			        ifnb    <001h>
 8278+ 2			        set_cy  001h
 8279+ 3	N      0001	??0710  set     (001h and 1)
 8280+ 3	N      FFFF	        if      ??0710 eq 1
 8281+ 3  1A30	D3		        setb    c
 8282+ 3			        else
 8283+ 3			        clr     c
 8284+ 3			        endif
 8285+ 2			        endif
 8286+ 2  1A31	9E		        subb      a,r6
 8287+ 2			        ifnb    <001h>
 8288+ 2			        save_psw
 8289+ 3  1A32	85 D0 70	        mov     saved_psw,PSW
 8290+ 2			        endif
 8291+ 2  1A35	B4 02 25	        cjne    a,#res,??0685
 8292+ 2			        ifnb    <001h>
 8293+ 2			        tst_psw <001h>,??0685
 8294+ 3  1A38	E5 70		        mov     a,saved_psw
 8295+ 3  1A3A	54 C4		        anl     a,#0c4h
 8296+ 3  1A3C	64 01		        xrl     a,#001h
 8297+ 3  1A3E	54 FE		        anl     a,#0feh
 8298+ 3  1A40	70 1B		        jnz     ??0685
 8299+ 2			        endif
 8300+ 1			        top_ma  subb,r7,??0685,<001h>
 8301+ 2  1A42	7F 70		        mov     r7,#arg0
 8302+ 2  1A44	74 73		        mov     a,#arg1
 8303+ 2			        ifnb    <001h>
 8304+ 2			        set_cy  001h
 8305+ 3	N      0001	??0711  set     (001h and 1)
 8306+ 3	N      FFFF	        if      ??0711 eq 1
 8307+ 3  1A46	D3		        setb    c
 8308+ 3			        else
 8309+ 3			        clr     c
 8310+ 3			        endif
 8311+ 2			        endif
 8312+ 2  1A47	9F		        subb      a,r7
 8313+ 2			        ifnb    <001h>
 8314+ 2			        save_psw
 8315+ 3  1A48	85 D0 70	        mov     saved_psw,PSW
 8316+ 2			        endif
 8317+ 2  1A4B	B4 02 0F	        cjne    a,#res,??0685
 8318+ 2			        ifnb    <001h>
 8319+ 2			        tst_psw <001h>,??0685
 8320+ 3  1A4E	E5 70		        mov     a,saved_psw
 8321+ 3  1A50	54 C4		        anl     a,#0c4h
 8322+ 3  1A52	64 01		        xrl     a,#001h
 8323+ 3  1A54	54 FE		        anl     a,#0feh
 8324+ 3  1A56	70 05		        jnz     ??0685
 8325+ 2			        endif
 8326+ 1
 8327+ 1			        eot     'd',??0685
 8328+ 2			        putc    #'d'
 8329+ 3  1A58			??0713:
 8330+ 3			        ;jnb     SCON.1,putc_loop
 8331+ 3			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 150



 Line  I  Addr  Code            Source

 8332+ 3  1A58	75 99 64	        mov     SBUF,#'d'
 8333+ 2  1A5B	80 06		        sjmp    ??0712
 8334+ 2  1A5D			??0685:  putc    #'?'
 8335+ 3  1A5D			??0714:
 8336+ 3			        ;jnb     SCON.1,putc_loop
 8337+ 3			        ;clr     SCON.1
 8338+ 3  1A5D	75 99 3F	        mov     SBUF,#'?'
 8339+ 2  1A60	75 6E 01	        mov     fail,#001h
 8340+ 2  1A63			??0712:
 8341+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 8342+ 1
 8343+ 1			        ; Optionally test immediate addressing modes.
 8344+ 1
 8345+ 1	N      FFFF	        if      (01h and 1) ne 0
 8346+ 1			        ; Test <op> A, #arg1...
 8347+ 1			        top_mb  subb,a,??0689,<001h>
 8348+ 2  1A63	74 73		        mov     a,#arg1
 8349+ 2			        ifnb    <001h>
 8350+ 2			        set_cy  001h
 8351+ 3	N      0001	??0715  set     (001h and 1)
 8352+ 3	N      FFFF	        if      ??0715 eq 1
 8353+ 3  1A65	D3		        setb    c
 8354+ 3			        else
 8355+ 3			        clr     c
 8356+ 3			        endif
 8357+ 2			        endif
 8358+ 2  1A66	94 70		        subb      a,#arg0
 8359+ 2			        ifnb    <001h>
 8360+ 2			        save_psw
 8361+ 3  1A68	85 D0 70	        mov     saved_psw,PSW
 8362+ 2			        endif
 8363+ 2  1A6B	F5 E0		        mov     ACC,a
 8364+ 2  1A6D	B4 02 0F	        cjne    a,#res,??0689
 8365+ 2			        ifnb    <001h>
 8366+ 2			        tst_psw <001h>,??0689
 8367+ 3  1A70	E5 70		        mov     a,saved_psw
 8368+ 3  1A72	54 C4		        anl     a,#0c4h
 8369+ 3  1A74	64 01		        xrl     a,#001h
 8370+ 3  1A76	54 FE		        anl     a,#0feh
 8371+ 3  1A78	70 05		        jnz     ??0689
 8372+ 2			        endif
 8373+ 1			        eot     'e',??0689
 8374+ 2			        putc    #'e'
 8375+ 3  1A7A			??0717:
 8376+ 3			        ;jnb     SCON.1,putc_loop
 8377+ 3			        ;clr     SCON.1
 8378+ 3  1A7A	75 99 65	        mov     SBUF,#'e'
 8379+ 2  1A7D	80 06		        sjmp    ??0716
 8380+ 2  1A7F			??0689:  putc    #'?'
 8381+ 3  1A7F			??0718:
 8382+ 3			        ;jnb     SCON.1,putc_loop
 8383+ 3			        ;clr     SCON.1
 8384+ 3  1A7F	75 99 3F	        mov     SBUF,#'?'
 8385+ 2  1A82	75 6E 01	        mov     fail,#001h
 8386+ 2  1A85			??0716:
 8387+ 1			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 151



 Line  I  Addr  Code            Source

 8388+ 1
 8389+ 1	N      0000	        if      (01h and 2) ne 0
 8390+ 1			        ; ...and <op> dir, #arg1
 8391+ 1			        top_mb  subb,dir0,??0690,<001h>
 8392+ 1			        eot     'f',??0690
 8393+ 1			        endif
 8394+ 1
 8395+ 1			        ; Optionally test <op> dir, A
 8396+ 1	N      0000	        if      (01h and 4) ne 0
 8397+ 1			        top_mc  subb,??0691,<001h>
 8398+ 1			        eot     'g',??0691
 8399+ 1			        endif
 8400+ 1
 8401:				        putc    #'2'
 8402+ 1  1A85			??0719:
 8403+ 1			        ;jnb     SCON.1,putc_loop
 8404+ 1			        ;clr     SCON.1
 8405+ 1  1A85	75 99 32	        mov     SBUF,#'2'
 8406:				        tst_alu subb,0c3h,0c5h,002h,01h,000h     ; /CY  AC /OV
 8407+ 1			        ; Put the argument and result data into variables for easier access
 8408+ 1	N      00C3	        arg0    set 0c3h
 8409+ 1	N      00C5	        arg1    set 0c5h
 8410+ 1	N      0002	        res     set 002h
 8411+ 1
 8412+ 1			        ; Test <op> A, dir
 8413+ 1			        top_ma  subb,dir0,??0721,<000h>
 8414+ 2  1A88	75 60 C3	        mov     dir0,#arg0
 8415+ 2  1A8B	74 C5		        mov     a,#arg1
 8416+ 2			        ifnb    <000h>
 8417+ 2			        set_cy  000h
 8418+ 3	N      0000	??0727  set     (000h and 1)
 8419+ 3	N      0000	        if      ??0727 eq 1
 8420+ 3			        setb    c
 8421+ 3			        else
 8422+ 3  1A8D	C3		        clr     c
 8423+ 3			        endif
 8424+ 2			        endif
 8425+ 2  1A8E	95 60		        subb      a,dir0
 8426+ 2			        ifnb    <000h>
 8427+ 2			        save_psw
 8428+ 3  1A90	85 D0 70	        mov     saved_psw,PSW
 8429+ 2			        endif
 8430+ 2  1A93	B4 02 6B	        cjne    a,#res,??0721
 8431+ 2			        ifnb    <000h>
 8432+ 2			        tst_psw <000h>,??0721
 8433+ 3  1A96	E5 70		        mov     a,saved_psw
 8434+ 3  1A98	54 C4		        anl     a,#0c4h
 8435+ 3  1A9A	64 00		        xrl     a,#000h
 8436+ 3  1A9C	54 FE		        anl     a,#0feh
 8437+ 3  1A9E	70 61		        jnz     ??0721
 8438+ 2			        endif
 8439+ 1			        ; Test <op> A, @R0
 8440+ 1  1AA0	78 60		        mov     r0,#dir0
 8441+ 1			        top_ma  subb,@r0,??0721,<000h>
 8442+ 2  1AA2	76 C3		        mov     @r0,#arg0
 8443+ 2  1AA4	74 C5		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 152



 Line  I  Addr  Code            Source

 8444+ 2			        ifnb    <000h>
 8445+ 2			        set_cy  000h
 8446+ 3	N      0000	??0728  set     (000h and 1)
 8447+ 3	N      0000	        if      ??0728 eq 1
 8448+ 3			        setb    c
 8449+ 3			        else
 8450+ 3  1AA6	C3		        clr     c
 8451+ 3			        endif
 8452+ 2			        endif
 8453+ 2  1AA7	96		        subb      a,@r0
 8454+ 2			        ifnb    <000h>
 8455+ 2			        save_psw
 8456+ 3  1AA8	85 D0 70	        mov     saved_psw,PSW
 8457+ 2			        endif
 8458+ 2  1AAB	B4 02 53	        cjne    a,#res,??0721
 8459+ 2			        ifnb    <000h>
 8460+ 2			        tst_psw <000h>,??0721
 8461+ 3  1AAE	E5 70		        mov     a,saved_psw
 8462+ 3  1AB0	54 C4		        anl     a,#0c4h
 8463+ 3  1AB2	64 00		        xrl     a,#000h
 8464+ 3  1AB4	54 FE		        anl     a,#0feh
 8465+ 3  1AB6	70 49		        jnz     ??0721
 8466+ 2			        endif
 8467+ 1			        ; Test <op> A, @R1
 8468+ 1  1AB8	79 31		        mov     r1,#031h
 8469+ 1			        top_ma  subb,@r1,??0721,<000h>
 8470+ 2  1ABA	77 C3		        mov     @r1,#arg0
 8471+ 2  1ABC	74 C5		        mov     a,#arg1
 8472+ 2			        ifnb    <000h>
 8473+ 2			        set_cy  000h
 8474+ 3	N      0000	??0729  set     (000h and 1)
 8475+ 3	N      0000	        if      ??0729 eq 1
 8476+ 3			        setb    c
 8477+ 3			        else
 8478+ 3  1ABE	C3		        clr     c
 8479+ 3			        endif
 8480+ 2			        endif
 8481+ 2  1ABF	97		        subb      a,@r1
 8482+ 2			        ifnb    <000h>
 8483+ 2			        save_psw
 8484+ 3  1AC0	85 D0 70	        mov     saved_psw,PSW
 8485+ 2			        endif
 8486+ 2  1AC3	B4 02 3B	        cjne    a,#res,??0721
 8487+ 2			        ifnb    <000h>
 8488+ 2			        tst_psw <000h>,??0721
 8489+ 3  1AC6	E5 70		        mov     a,saved_psw
 8490+ 3  1AC8	54 C4		        anl     a,#0c4h
 8491+ 3  1ACA	64 00		        xrl     a,#000h
 8492+ 3  1ACC	54 FE		        anl     a,#0feh
 8493+ 3  1ACE	70 31		        jnz     ??0721
 8494+ 2			        endif
 8495+ 1
 8496+ 1			        ; Now test <op> A, Rn for n in 0..7
 8497+ 1			        top_ma  subb,r0,??0721,<000h>
 8498+ 2  1AD0	78 C3		        mov     r0,#arg0
 8499+ 2  1AD2	74 C5		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 153



 Line  I  Addr  Code            Source

 8500+ 2			        ifnb    <000h>
 8501+ 2			        set_cy  000h
 8502+ 3	N      0000	??0730  set     (000h and 1)
 8503+ 3	N      0000	        if      ??0730 eq 1
 8504+ 3			        setb    c
 8505+ 3			        else
 8506+ 3  1AD4	C3		        clr     c
 8507+ 3			        endif
 8508+ 2			        endif
 8509+ 2  1AD5	98		        subb      a,r0
 8510+ 2			        ifnb    <000h>
 8511+ 2			        save_psw
 8512+ 3  1AD6	85 D0 70	        mov     saved_psw,PSW
 8513+ 2			        endif
 8514+ 2  1AD9	B4 02 25	        cjne    a,#res,??0721
 8515+ 2			        ifnb    <000h>
 8516+ 2			        tst_psw <000h>,??0721
 8517+ 3  1ADC	E5 70		        mov     a,saved_psw
 8518+ 3  1ADE	54 C4		        anl     a,#0c4h
 8519+ 3  1AE0	64 00		        xrl     a,#000h
 8520+ 3  1AE2	54 FE		        anl     a,#0feh
 8521+ 3  1AE4	70 1B		        jnz     ??0721
 8522+ 2			        endif
 8523+ 1			        top_ma  subb,r1,??0721,<000h>
 8524+ 2  1AE6	79 C3		        mov     r1,#arg0
 8525+ 2  1AE8	74 C5		        mov     a,#arg1
 8526+ 2			        ifnb    <000h>
 8527+ 2			        set_cy  000h
 8528+ 3	N      0000	??0731  set     (000h and 1)
 8529+ 3	N      0000	        if      ??0731 eq 1
 8530+ 3			        setb    c
 8531+ 3			        else
 8532+ 3  1AEA	C3		        clr     c
 8533+ 3			        endif
 8534+ 2			        endif
 8535+ 2  1AEB	99		        subb      a,r1
 8536+ 2			        ifnb    <000h>
 8537+ 2			        save_psw
 8538+ 3  1AEC	85 D0 70	        mov     saved_psw,PSW
 8539+ 2			        endif
 8540+ 2  1AEF	B4 02 0F	        cjne    a,#res,??0721
 8541+ 2			        ifnb    <000h>
 8542+ 2			        tst_psw <000h>,??0721
 8543+ 3  1AF2	E5 70		        mov     a,saved_psw
 8544+ 3  1AF4	54 C4		        anl     a,#0c4h
 8545+ 3  1AF6	64 00		        xrl     a,#000h
 8546+ 3  1AF8	54 FE		        anl     a,#0feh
 8547+ 3  1AFA	70 05		        jnz     ??0721
 8548+ 2			        endif
 8549+ 1
 8550+ 1			        eot     'a',??0721
 8551+ 2			        putc    #'a'
 8552+ 3  1AFC			??0733:
 8553+ 3			        ;jnb     SCON.1,putc_loop
 8554+ 3			        ;clr     SCON.1
 8555+ 3  1AFC	75 99 61	        mov     SBUF,#'a'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 154



 Line  I  Addr  Code            Source

 8556+ 2  1AFF	80 06		        sjmp    ??0732
 8557+ 2  1B01			??0721:  putc    #'?'
 8558+ 3  1B01			??0734:
 8559+ 3			        ;jnb     SCON.1,putc_loop
 8560+ 3			        ;clr     SCON.1
 8561+ 3  1B01	75 99 3F	        mov     SBUF,#'?'
 8562+ 2  1B04	75 6E 01	        mov     fail,#001h
 8563+ 2  1B07			??0732:
 8564+ 1
 8565+ 1			        top_ma  subb,r2,??0722,<000h>
 8566+ 2  1B07	7A C3		        mov     r2,#arg0
 8567+ 2  1B09	74 C5		        mov     a,#arg1
 8568+ 2			        ifnb    <000h>
 8569+ 2			        set_cy  000h
 8570+ 3	N      0000	??0735  set     (000h and 1)
 8571+ 3	N      0000	        if      ??0735 eq 1
 8572+ 3			        setb    c
 8573+ 3			        else
 8574+ 3  1B0B	C3		        clr     c
 8575+ 3			        endif
 8576+ 2			        endif
 8577+ 2  1B0C	9A		        subb      a,r2
 8578+ 2			        ifnb    <000h>
 8579+ 2			        save_psw
 8580+ 3  1B0D	85 D0 70	        mov     saved_psw,PSW
 8581+ 2			        endif
 8582+ 2  1B10	B4 02 25	        cjne    a,#res,??0722
 8583+ 2			        ifnb    <000h>
 8584+ 2			        tst_psw <000h>,??0722
 8585+ 3  1B13	E5 70		        mov     a,saved_psw
 8586+ 3  1B15	54 C4		        anl     a,#0c4h
 8587+ 3  1B17	64 00		        xrl     a,#000h
 8588+ 3  1B19	54 FE		        anl     a,#0feh
 8589+ 3  1B1B	70 1B		        jnz     ??0722
 8590+ 2			        endif
 8591+ 1			        top_ma  subb,r3,??0722,<000h>
 8592+ 2  1B1D	7B C3		        mov     r3,#arg0
 8593+ 2  1B1F	74 C5		        mov     a,#arg1
 8594+ 2			        ifnb    <000h>
 8595+ 2			        set_cy  000h
 8596+ 3	N      0000	??0736  set     (000h and 1)
 8597+ 3	N      0000	        if      ??0736 eq 1
 8598+ 3			        setb    c
 8599+ 3			        else
 8600+ 3  1B21	C3		        clr     c
 8601+ 3			        endif
 8602+ 2			        endif
 8603+ 2  1B22	9B		        subb      a,r3
 8604+ 2			        ifnb    <000h>
 8605+ 2			        save_psw
 8606+ 3  1B23	85 D0 70	        mov     saved_psw,PSW
 8607+ 2			        endif
 8608+ 2  1B26	B4 02 0F	        cjne    a,#res,??0722
 8609+ 2			        ifnb    <000h>
 8610+ 2			        tst_psw <000h>,??0722
 8611+ 3  1B29	E5 70		        mov     a,saved_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 155



 Line  I  Addr  Code            Source

 8612+ 3  1B2B	54 C4		        anl     a,#0c4h
 8613+ 3  1B2D	64 00		        xrl     a,#000h
 8614+ 3  1B2F	54 FE		        anl     a,#0feh
 8615+ 3  1B31	70 05		        jnz     ??0722
 8616+ 2			        endif
 8617+ 1
 8618+ 1			        eot     'b',??0722
 8619+ 2			        putc    #'b'
 8620+ 3  1B33			??0738:
 8621+ 3			        ;jnb     SCON.1,putc_loop
 8622+ 3			        ;clr     SCON.1
 8623+ 3  1B33	75 99 62	        mov     SBUF,#'b'
 8624+ 2  1B36	80 06		        sjmp    ??0737
 8625+ 2  1B38			??0722:  putc    #'?'
 8626+ 3  1B38			??0739:
 8627+ 3			        ;jnb     SCON.1,putc_loop
 8628+ 3			        ;clr     SCON.1
 8629+ 3  1B38	75 99 3F	        mov     SBUF,#'?'
 8630+ 2  1B3B	75 6E 01	        mov     fail,#001h
 8631+ 2  1B3E			??0737:
 8632+ 1
 8633+ 1			        top_ma  subb,r4,??0723,<000h>
 8634+ 2  1B3E	7C C3		        mov     r4,#arg0
 8635+ 2  1B40	74 C5		        mov     a,#arg1
 8636+ 2			        ifnb    <000h>
 8637+ 2			        set_cy  000h
 8638+ 3	N      0000	??0740  set     (000h and 1)
 8639+ 3	N      0000	        if      ??0740 eq 1
 8640+ 3			        setb    c
 8641+ 3			        else
 8642+ 3  1B42	C3		        clr     c
 8643+ 3			        endif
 8644+ 2			        endif
 8645+ 2  1B43	9C		        subb      a,r4
 8646+ 2			        ifnb    <000h>
 8647+ 2			        save_psw
 8648+ 3  1B44	85 D0 70	        mov     saved_psw,PSW
 8649+ 2			        endif
 8650+ 2  1B47	B4 02 25	        cjne    a,#res,??0723
 8651+ 2			        ifnb    <000h>
 8652+ 2			        tst_psw <000h>,??0723
 8653+ 3  1B4A	E5 70		        mov     a,saved_psw
 8654+ 3  1B4C	54 C4		        anl     a,#0c4h
 8655+ 3  1B4E	64 00		        xrl     a,#000h
 8656+ 3  1B50	54 FE		        anl     a,#0feh
 8657+ 3  1B52	70 1B		        jnz     ??0723
 8658+ 2			        endif
 8659+ 1			        top_ma  subb,r5,??0723,<000h>
 8660+ 2  1B54	7D C3		        mov     r5,#arg0
 8661+ 2  1B56	74 C5		        mov     a,#arg1
 8662+ 2			        ifnb    <000h>
 8663+ 2			        set_cy  000h
 8664+ 3	N      0000	??0741  set     (000h and 1)
 8665+ 3	N      0000	        if      ??0741 eq 1
 8666+ 3			        setb    c
 8667+ 3			        else

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 156



 Line  I  Addr  Code            Source

 8668+ 3  1B58	C3		        clr     c
 8669+ 3			        endif
 8670+ 2			        endif
 8671+ 2  1B59	9D		        subb      a,r5
 8672+ 2			        ifnb    <000h>
 8673+ 2			        save_psw
 8674+ 3  1B5A	85 D0 70	        mov     saved_psw,PSW
 8675+ 2			        endif
 8676+ 2  1B5D	B4 02 0F	        cjne    a,#res,??0723
 8677+ 2			        ifnb    <000h>
 8678+ 2			        tst_psw <000h>,??0723
 8679+ 3  1B60	E5 70		        mov     a,saved_psw
 8680+ 3  1B62	54 C4		        anl     a,#0c4h
 8681+ 3  1B64	64 00		        xrl     a,#000h
 8682+ 3  1B66	54 FE		        anl     a,#0feh
 8683+ 3  1B68	70 05		        jnz     ??0723
 8684+ 2			        endif
 8685+ 1
 8686+ 1			        eot     'c',??0723
 8687+ 2			        putc    #'c'
 8688+ 3  1B6A			??0743:
 8689+ 3			        ;jnb     SCON.1,putc_loop
 8690+ 3			        ;clr     SCON.1
 8691+ 3  1B6A	75 99 63	        mov     SBUF,#'c'
 8692+ 2  1B6D	80 06		        sjmp    ??0742
 8693+ 2  1B6F			??0723:  putc    #'?'
 8694+ 3  1B6F			??0744:
 8695+ 3			        ;jnb     SCON.1,putc_loop
 8696+ 3			        ;clr     SCON.1
 8697+ 3  1B6F	75 99 3F	        mov     SBUF,#'?'
 8698+ 2  1B72	75 6E 01	        mov     fail,#001h
 8699+ 2  1B75			??0742:
 8700+ 1
 8701+ 1			        top_ma  subb,r6,??0720,<000h>
 8702+ 2  1B75	7E C3		        mov     r6,#arg0
 8703+ 2  1B77	74 C5		        mov     a,#arg1
 8704+ 2			        ifnb    <000h>
 8705+ 2			        set_cy  000h
 8706+ 3	N      0000	??0745  set     (000h and 1)
 8707+ 3	N      0000	        if      ??0745 eq 1
 8708+ 3			        setb    c
 8709+ 3			        else
 8710+ 3  1B79	C3		        clr     c
 8711+ 3			        endif
 8712+ 2			        endif
 8713+ 2  1B7A	9E		        subb      a,r6
 8714+ 2			        ifnb    <000h>
 8715+ 2			        save_psw
 8716+ 3  1B7B	85 D0 70	        mov     saved_psw,PSW
 8717+ 2			        endif
 8718+ 2  1B7E	B4 02 25	        cjne    a,#res,??0720
 8719+ 2			        ifnb    <000h>
 8720+ 2			        tst_psw <000h>,??0720
 8721+ 3  1B81	E5 70		        mov     a,saved_psw
 8722+ 3  1B83	54 C4		        anl     a,#0c4h
 8723+ 3  1B85	64 00		        xrl     a,#000h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 157



 Line  I  Addr  Code            Source

 8724+ 3  1B87	54 FE		        anl     a,#0feh
 8725+ 3  1B89	70 1B		        jnz     ??0720
 8726+ 2			        endif
 8727+ 1			        top_ma  subb,r7,??0720,<000h>
 8728+ 2  1B8B	7F C3		        mov     r7,#arg0
 8729+ 2  1B8D	74 C5		        mov     a,#arg1
 8730+ 2			        ifnb    <000h>
 8731+ 2			        set_cy  000h
 8732+ 3	N      0000	??0746  set     (000h and 1)
 8733+ 3	N      0000	        if      ??0746 eq 1
 8734+ 3			        setb    c
 8735+ 3			        else
 8736+ 3  1B8F	C3		        clr     c
 8737+ 3			        endif
 8738+ 2			        endif
 8739+ 2  1B90	9F		        subb      a,r7
 8740+ 2			        ifnb    <000h>
 8741+ 2			        save_psw
 8742+ 3  1B91	85 D0 70	        mov     saved_psw,PSW
 8743+ 2			        endif
 8744+ 2  1B94	B4 02 0F	        cjne    a,#res,??0720
 8745+ 2			        ifnb    <000h>
 8746+ 2			        tst_psw <000h>,??0720
 8747+ 3  1B97	E5 70		        mov     a,saved_psw
 8748+ 3  1B99	54 C4		        anl     a,#0c4h
 8749+ 3  1B9B	64 00		        xrl     a,#000h
 8750+ 3  1B9D	54 FE		        anl     a,#0feh
 8751+ 3  1B9F	70 05		        jnz     ??0720
 8752+ 2			        endif
 8753+ 1
 8754+ 1			        eot     'd',??0720
 8755+ 2			        putc    #'d'
 8756+ 3  1BA1			??0748:
 8757+ 3			        ;jnb     SCON.1,putc_loop
 8758+ 3			        ;clr     SCON.1
 8759+ 3  1BA1	75 99 64	        mov     SBUF,#'d'
 8760+ 2  1BA4	80 06		        sjmp    ??0747
 8761+ 2  1BA6			??0720:  putc    #'?'
 8762+ 3  1BA6			??0749:
 8763+ 3			        ;jnb     SCON.1,putc_loop
 8764+ 3			        ;clr     SCON.1
 8765+ 3  1BA6	75 99 3F	        mov     SBUF,#'?'
 8766+ 2  1BA9	75 6E 01	        mov     fail,#001h
 8767+ 2  1BAC			??0747:
 8768+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 8769+ 1
 8770+ 1			        ; Optionally test immediate addressing modes.
 8771+ 1
 8772+ 1	N      FFFF	        if      (01h and 1) ne 0
 8773+ 1			        ; Test <op> A, #arg1...
 8774+ 1			        top_mb  subb,a,??0724,<000h>
 8775+ 2  1BAC	74 C5		        mov     a,#arg1
 8776+ 2			        ifnb    <000h>
 8777+ 2			        set_cy  000h
 8778+ 3	N      0000	??0750  set     (000h and 1)
 8779+ 3	N      0000	        if      ??0750 eq 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 158



 Line  I  Addr  Code            Source

 8780+ 3			        setb    c
 8781+ 3			        else
 8782+ 3  1BAE	C3		        clr     c
 8783+ 3			        endif
 8784+ 2			        endif
 8785+ 2  1BAF	94 C3		        subb      a,#arg0
 8786+ 2			        ifnb    <000h>
 8787+ 2			        save_psw
 8788+ 3  1BB1	85 D0 70	        mov     saved_psw,PSW
 8789+ 2			        endif
 8790+ 2  1BB4	F5 E0		        mov     ACC,a
 8791+ 2  1BB6	B4 02 0F	        cjne    a,#res,??0724
 8792+ 2			        ifnb    <000h>
 8793+ 2			        tst_psw <000h>,??0724
 8794+ 3  1BB9	E5 70		        mov     a,saved_psw
 8795+ 3  1BBB	54 C4		        anl     a,#0c4h
 8796+ 3  1BBD	64 00		        xrl     a,#000h
 8797+ 3  1BBF	54 FE		        anl     a,#0feh
 8798+ 3  1BC1	70 05		        jnz     ??0724
 8799+ 2			        endif
 8800+ 1			        eot     'e',??0724
 8801+ 2			        putc    #'e'
 8802+ 3  1BC3			??0752:
 8803+ 3			        ;jnb     SCON.1,putc_loop
 8804+ 3			        ;clr     SCON.1
 8805+ 3  1BC3	75 99 65	        mov     SBUF,#'e'
 8806+ 2  1BC6	80 06		        sjmp    ??0751
 8807+ 2  1BC8			??0724:  putc    #'?'
 8808+ 3  1BC8			??0753:
 8809+ 3			        ;jnb     SCON.1,putc_loop
 8810+ 3			        ;clr     SCON.1
 8811+ 3  1BC8	75 99 3F	        mov     SBUF,#'?'
 8812+ 2  1BCB	75 6E 01	        mov     fail,#001h
 8813+ 2  1BCE			??0751:
 8814+ 1			        endif
 8815+ 1
 8816+ 1	N      0000	        if      (01h and 2) ne 0
 8817+ 1			        ; ...and <op> dir, #arg1
 8818+ 1			        top_mb  subb,dir0,??0725,<000h>
 8819+ 1			        eot     'f',??0725
 8820+ 1			        endif
 8821+ 1
 8822+ 1			        ; Optionally test <op> dir, A
 8823+ 1	N      0000	        if      (01h and 4) ne 0
 8824+ 1			        top_mc  subb,??0726,<000h>
 8825+ 1			        eot     'g',??0726
 8826+ 1			        endif
 8827+ 1
 8828:				        putc    #'3'
 8829+ 1  1BCE			??0754:
 8830+ 1			        ;jnb     SCON.1,putc_loop
 8831+ 1			        ;clr     SCON.1
 8832+ 1  1BCE	75 99 33	        mov     SBUF,#'3'
 8833:				        tst_alu subb,0c3h,0c5h,001h,01h,001h     ; /CY  AC  OV (CY input)
 8834+ 1			        ; Put the argument and result data into variables for easier access
 8835+ 1	N      00C3	        arg0    set 0c3h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 159



 Line  I  Addr  Code            Source

 8836+ 1	N      00C5	        arg1    set 0c5h
 8837+ 1	N      0001	        res     set 001h
 8838+ 1
 8839+ 1			        ; Test <op> A, dir
 8840+ 1			        top_ma  subb,dir0,??0756,<001h>
 8841+ 2  1BD1	75 60 C3	        mov     dir0,#arg0
 8842+ 2  1BD4	74 C5		        mov     a,#arg1
 8843+ 2			        ifnb    <001h>
 8844+ 2			        set_cy  001h
 8845+ 3	N      0001	??0762  set     (001h and 1)
 8846+ 3	N      FFFF	        if      ??0762 eq 1
 8847+ 3  1BD6	D3		        setb    c
 8848+ 3			        else
 8849+ 3			        clr     c
 8850+ 3			        endif
 8851+ 2			        endif
 8852+ 2  1BD7	95 60		        subb      a,dir0
 8853+ 2			        ifnb    <001h>
 8854+ 2			        save_psw
 8855+ 3  1BD9	85 D0 70	        mov     saved_psw,PSW
 8856+ 2			        endif
 8857+ 2  1BDC	B4 01 6B	        cjne    a,#res,??0756
 8858+ 2			        ifnb    <001h>
 8859+ 2			        tst_psw <001h>,??0756
 8860+ 3  1BDF	E5 70		        mov     a,saved_psw
 8861+ 3  1BE1	54 C4		        anl     a,#0c4h
 8862+ 3  1BE3	64 01		        xrl     a,#001h
 8863+ 3  1BE5	54 FE		        anl     a,#0feh
 8864+ 3  1BE7	70 61		        jnz     ??0756
 8865+ 2			        endif
 8866+ 1			        ; Test <op> A, @R0
 8867+ 1  1BE9	78 60		        mov     r0,#dir0
 8868+ 1			        top_ma  subb,@r0,??0756,<001h>
 8869+ 2  1BEB	76 C3		        mov     @r0,#arg0
 8870+ 2  1BED	74 C5		        mov     a,#arg1
 8871+ 2			        ifnb    <001h>
 8872+ 2			        set_cy  001h
 8873+ 3	N      0001	??0763  set     (001h and 1)
 8874+ 3	N      FFFF	        if      ??0763 eq 1
 8875+ 3  1BEF	D3		        setb    c
 8876+ 3			        else
 8877+ 3			        clr     c
 8878+ 3			        endif
 8879+ 2			        endif
 8880+ 2  1BF0	96		        subb      a,@r0
 8881+ 2			        ifnb    <001h>
 8882+ 2			        save_psw
 8883+ 3  1BF1	85 D0 70	        mov     saved_psw,PSW
 8884+ 2			        endif
 8885+ 2  1BF4	B4 01 53	        cjne    a,#res,??0756
 8886+ 2			        ifnb    <001h>
 8887+ 2			        tst_psw <001h>,??0756
 8888+ 3  1BF7	E5 70		        mov     a,saved_psw
 8889+ 3  1BF9	54 C4		        anl     a,#0c4h
 8890+ 3  1BFB	64 01		        xrl     a,#001h
 8891+ 3  1BFD	54 FE		        anl     a,#0feh

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 160



 Line  I  Addr  Code            Source

 8892+ 3  1BFF	70 49		        jnz     ??0756
 8893+ 2			        endif
 8894+ 1			        ; Test <op> A, @R1
 8895+ 1  1C01	79 31		        mov     r1,#031h
 8896+ 1			        top_ma  subb,@r1,??0756,<001h>
 8897+ 2  1C03	77 C3		        mov     @r1,#arg0
 8898+ 2  1C05	74 C5		        mov     a,#arg1
 8899+ 2			        ifnb    <001h>
 8900+ 2			        set_cy  001h
 8901+ 3	N      0001	??0764  set     (001h and 1)
 8902+ 3	N      FFFF	        if      ??0764 eq 1
 8903+ 3  1C07	D3		        setb    c
 8904+ 3			        else
 8905+ 3			        clr     c
 8906+ 3			        endif
 8907+ 2			        endif
 8908+ 2  1C08	97		        subb      a,@r1
 8909+ 2			        ifnb    <001h>
 8910+ 2			        save_psw
 8911+ 3  1C09	85 D0 70	        mov     saved_psw,PSW
 8912+ 2			        endif
 8913+ 2  1C0C	B4 01 3B	        cjne    a,#res,??0756
 8914+ 2			        ifnb    <001h>
 8915+ 2			        tst_psw <001h>,??0756
 8916+ 3  1C0F	E5 70		        mov     a,saved_psw
 8917+ 3  1C11	54 C4		        anl     a,#0c4h
 8918+ 3  1C13	64 01		        xrl     a,#001h
 8919+ 3  1C15	54 FE		        anl     a,#0feh
 8920+ 3  1C17	70 31		        jnz     ??0756
 8921+ 2			        endif
 8922+ 1
 8923+ 1			        ; Now test <op> A, Rn for n in 0..7
 8924+ 1			        top_ma  subb,r0,??0756,<001h>
 8925+ 2  1C19	78 C3		        mov     r0,#arg0
 8926+ 2  1C1B	74 C5		        mov     a,#arg1
 8927+ 2			        ifnb    <001h>
 8928+ 2			        set_cy  001h
 8929+ 3	N      0001	??0765  set     (001h and 1)
 8930+ 3	N      FFFF	        if      ??0765 eq 1
 8931+ 3  1C1D	D3		        setb    c
 8932+ 3			        else
 8933+ 3			        clr     c
 8934+ 3			        endif
 8935+ 2			        endif
 8936+ 2  1C1E	98		        subb      a,r0
 8937+ 2			        ifnb    <001h>
 8938+ 2			        save_psw
 8939+ 3  1C1F	85 D0 70	        mov     saved_psw,PSW
 8940+ 2			        endif
 8941+ 2  1C22	B4 01 25	        cjne    a,#res,??0756
 8942+ 2			        ifnb    <001h>
 8943+ 2			        tst_psw <001h>,??0756
 8944+ 3  1C25	E5 70		        mov     a,saved_psw
 8945+ 3  1C27	54 C4		        anl     a,#0c4h
 8946+ 3  1C29	64 01		        xrl     a,#001h
 8947+ 3  1C2B	54 FE		        anl     a,#0feh

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 161



 Line  I  Addr  Code            Source

 8948+ 3  1C2D	70 1B		        jnz     ??0756
 8949+ 2			        endif
 8950+ 1			        top_ma  subb,r1,??0756,<001h>
 8951+ 2  1C2F	79 C3		        mov     r1,#arg0
 8952+ 2  1C31	74 C5		        mov     a,#arg1
 8953+ 2			        ifnb    <001h>
 8954+ 2			        set_cy  001h
 8955+ 3	N      0001	??0766  set     (001h and 1)
 8956+ 3	N      FFFF	        if      ??0766 eq 1
 8957+ 3  1C33	D3		        setb    c
 8958+ 3			        else
 8959+ 3			        clr     c
 8960+ 3			        endif
 8961+ 2			        endif
 8962+ 2  1C34	99		        subb      a,r1
 8963+ 2			        ifnb    <001h>
 8964+ 2			        save_psw
 8965+ 3  1C35	85 D0 70	        mov     saved_psw,PSW
 8966+ 2			        endif
 8967+ 2  1C38	B4 01 0F	        cjne    a,#res,??0756
 8968+ 2			        ifnb    <001h>
 8969+ 2			        tst_psw <001h>,??0756
 8970+ 3  1C3B	E5 70		        mov     a,saved_psw
 8971+ 3  1C3D	54 C4		        anl     a,#0c4h
 8972+ 3  1C3F	64 01		        xrl     a,#001h
 8973+ 3  1C41	54 FE		        anl     a,#0feh
 8974+ 3  1C43	70 05		        jnz     ??0756
 8975+ 2			        endif
 8976+ 1
 8977+ 1			        eot     'a',??0756
 8978+ 2			        putc    #'a'
 8979+ 3  1C45			??0768:
 8980+ 3			        ;jnb     SCON.1,putc_loop
 8981+ 3			        ;clr     SCON.1
 8982+ 3  1C45	75 99 61	        mov     SBUF,#'a'
 8983+ 2  1C48	80 06		        sjmp    ??0767
 8984+ 2  1C4A			??0756:  putc    #'?'
 8985+ 3  1C4A			??0769:
 8986+ 3			        ;jnb     SCON.1,putc_loop
 8987+ 3			        ;clr     SCON.1
 8988+ 3  1C4A	75 99 3F	        mov     SBUF,#'?'
 8989+ 2  1C4D	75 6E 01	        mov     fail,#001h
 8990+ 2  1C50			??0767:
 8991+ 1
 8992+ 1			        top_ma  subb,r2,??0757,<001h>
 8993+ 2  1C50	7A C3		        mov     r2,#arg0
 8994+ 2  1C52	74 C5		        mov     a,#arg1
 8995+ 2			        ifnb    <001h>
 8996+ 2			        set_cy  001h
 8997+ 3	N      0001	??0770  set     (001h and 1)
 8998+ 3	N      FFFF	        if      ??0770 eq 1
 8999+ 3  1C54	D3		        setb    c
 9000+ 3			        else
 9001+ 3			        clr     c
 9002+ 3			        endif
 9003+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 162



 Line  I  Addr  Code            Source

 9004+ 2  1C55	9A		        subb      a,r2
 9005+ 2			        ifnb    <001h>
 9006+ 2			        save_psw
 9007+ 3  1C56	85 D0 70	        mov     saved_psw,PSW
 9008+ 2			        endif
 9009+ 2  1C59	B4 01 25	        cjne    a,#res,??0757
 9010+ 2			        ifnb    <001h>
 9011+ 2			        tst_psw <001h>,??0757
 9012+ 3  1C5C	E5 70		        mov     a,saved_psw
 9013+ 3  1C5E	54 C4		        anl     a,#0c4h
 9014+ 3  1C60	64 01		        xrl     a,#001h
 9015+ 3  1C62	54 FE		        anl     a,#0feh
 9016+ 3  1C64	70 1B		        jnz     ??0757
 9017+ 2			        endif
 9018+ 1			        top_ma  subb,r3,??0757,<001h>
 9019+ 2  1C66	7B C3		        mov     r3,#arg0
 9020+ 2  1C68	74 C5		        mov     a,#arg1
 9021+ 2			        ifnb    <001h>
 9022+ 2			        set_cy  001h
 9023+ 3	N      0001	??0771  set     (001h and 1)
 9024+ 3	N      FFFF	        if      ??0771 eq 1
 9025+ 3  1C6A	D3		        setb    c
 9026+ 3			        else
 9027+ 3			        clr     c
 9028+ 3			        endif
 9029+ 2			        endif
 9030+ 2  1C6B	9B		        subb      a,r3
 9031+ 2			        ifnb    <001h>
 9032+ 2			        save_psw
 9033+ 3  1C6C	85 D0 70	        mov     saved_psw,PSW
 9034+ 2			        endif
 9035+ 2  1C6F	B4 01 0F	        cjne    a,#res,??0757
 9036+ 2			        ifnb    <001h>
 9037+ 2			        tst_psw <001h>,??0757
 9038+ 3  1C72	E5 70		        mov     a,saved_psw
 9039+ 3  1C74	54 C4		        anl     a,#0c4h
 9040+ 3  1C76	64 01		        xrl     a,#001h
 9041+ 3  1C78	54 FE		        anl     a,#0feh
 9042+ 3  1C7A	70 05		        jnz     ??0757
 9043+ 2			        endif
 9044+ 1
 9045+ 1			        eot     'b',??0757
 9046+ 2			        putc    #'b'
 9047+ 3  1C7C			??0773:
 9048+ 3			        ;jnb     SCON.1,putc_loop
 9049+ 3			        ;clr     SCON.1
 9050+ 3  1C7C	75 99 62	        mov     SBUF,#'b'
 9051+ 2  1C7F	80 06		        sjmp    ??0772
 9052+ 2  1C81			??0757:  putc    #'?'
 9053+ 3  1C81			??0774:
 9054+ 3			        ;jnb     SCON.1,putc_loop
 9055+ 3			        ;clr     SCON.1
 9056+ 3  1C81	75 99 3F	        mov     SBUF,#'?'
 9057+ 2  1C84	75 6E 01	        mov     fail,#001h
 9058+ 2  1C87			??0772:
 9059+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 163



 Line  I  Addr  Code            Source

 9060+ 1			        top_ma  subb,r4,??0758,<001h>
 9061+ 2  1C87	7C C3		        mov     r4,#arg0
 9062+ 2  1C89	74 C5		        mov     a,#arg1
 9063+ 2			        ifnb    <001h>
 9064+ 2			        set_cy  001h
 9065+ 3	N      0001	??0775  set     (001h and 1)
 9066+ 3	N      FFFF	        if      ??0775 eq 1
 9067+ 3  1C8B	D3		        setb    c
 9068+ 3			        else
 9069+ 3			        clr     c
 9070+ 3			        endif
 9071+ 2			        endif
 9072+ 2  1C8C	9C		        subb      a,r4
 9073+ 2			        ifnb    <001h>
 9074+ 2			        save_psw
 9075+ 3  1C8D	85 D0 70	        mov     saved_psw,PSW
 9076+ 2			        endif
 9077+ 2  1C90	B4 01 25	        cjne    a,#res,??0758
 9078+ 2			        ifnb    <001h>
 9079+ 2			        tst_psw <001h>,??0758
 9080+ 3  1C93	E5 70		        mov     a,saved_psw
 9081+ 3  1C95	54 C4		        anl     a,#0c4h
 9082+ 3  1C97	64 01		        xrl     a,#001h
 9083+ 3  1C99	54 FE		        anl     a,#0feh
 9084+ 3  1C9B	70 1B		        jnz     ??0758
 9085+ 2			        endif
 9086+ 1			        top_ma  subb,r5,??0758,<001h>
 9087+ 2  1C9D	7D C3		        mov     r5,#arg0
 9088+ 2  1C9F	74 C5		        mov     a,#arg1
 9089+ 2			        ifnb    <001h>
 9090+ 2			        set_cy  001h
 9091+ 3	N      0001	??0776  set     (001h and 1)
 9092+ 3	N      FFFF	        if      ??0776 eq 1
 9093+ 3  1CA1	D3		        setb    c
 9094+ 3			        else
 9095+ 3			        clr     c
 9096+ 3			        endif
 9097+ 2			        endif
 9098+ 2  1CA2	9D		        subb      a,r5
 9099+ 2			        ifnb    <001h>
 9100+ 2			        save_psw
 9101+ 3  1CA3	85 D0 70	        mov     saved_psw,PSW
 9102+ 2			        endif
 9103+ 2  1CA6	B4 01 0F	        cjne    a,#res,??0758
 9104+ 2			        ifnb    <001h>
 9105+ 2			        tst_psw <001h>,??0758
 9106+ 3  1CA9	E5 70		        mov     a,saved_psw
 9107+ 3  1CAB	54 C4		        anl     a,#0c4h
 9108+ 3  1CAD	64 01		        xrl     a,#001h
 9109+ 3  1CAF	54 FE		        anl     a,#0feh
 9110+ 3  1CB1	70 05		        jnz     ??0758
 9111+ 2			        endif
 9112+ 1
 9113+ 1			        eot     'c',??0758
 9114+ 2			        putc    #'c'
 9115+ 3  1CB3			??0778:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 164



 Line  I  Addr  Code            Source

 9116+ 3			        ;jnb     SCON.1,putc_loop
 9117+ 3			        ;clr     SCON.1
 9118+ 3  1CB3	75 99 63	        mov     SBUF,#'c'
 9119+ 2  1CB6	80 06		        sjmp    ??0777
 9120+ 2  1CB8			??0758:  putc    #'?'
 9121+ 3  1CB8			??0779:
 9122+ 3			        ;jnb     SCON.1,putc_loop
 9123+ 3			        ;clr     SCON.1
 9124+ 3  1CB8	75 99 3F	        mov     SBUF,#'?'
 9125+ 2  1CBB	75 6E 01	        mov     fail,#001h
 9126+ 2  1CBE			??0777:
 9127+ 1
 9128+ 1			        top_ma  subb,r6,??0755,<001h>
 9129+ 2  1CBE	7E C3		        mov     r6,#arg0
 9130+ 2  1CC0	74 C5		        mov     a,#arg1
 9131+ 2			        ifnb    <001h>
 9132+ 2			        set_cy  001h
 9133+ 3	N      0001	??0780  set     (001h and 1)
 9134+ 3	N      FFFF	        if      ??0780 eq 1
 9135+ 3  1CC2	D3		        setb    c
 9136+ 3			        else
 9137+ 3			        clr     c
 9138+ 3			        endif
 9139+ 2			        endif
 9140+ 2  1CC3	9E		        subb      a,r6
 9141+ 2			        ifnb    <001h>
 9142+ 2			        save_psw
 9143+ 3  1CC4	85 D0 70	        mov     saved_psw,PSW
 9144+ 2			        endif
 9145+ 2  1CC7	B4 01 25	        cjne    a,#res,??0755
 9146+ 2			        ifnb    <001h>
 9147+ 2			        tst_psw <001h>,??0755
 9148+ 3  1CCA	E5 70		        mov     a,saved_psw
 9149+ 3  1CCC	54 C4		        anl     a,#0c4h
 9150+ 3  1CCE	64 01		        xrl     a,#001h
 9151+ 3  1CD0	54 FE		        anl     a,#0feh
 9152+ 3  1CD2	70 1B		        jnz     ??0755
 9153+ 2			        endif
 9154+ 1			        top_ma  subb,r7,??0755,<001h>
 9155+ 2  1CD4	7F C3		        mov     r7,#arg0
 9156+ 2  1CD6	74 C5		        mov     a,#arg1
 9157+ 2			        ifnb    <001h>
 9158+ 2			        set_cy  001h
 9159+ 3	N      0001	??0781  set     (001h and 1)
 9160+ 3	N      FFFF	        if      ??0781 eq 1
 9161+ 3  1CD8	D3		        setb    c
 9162+ 3			        else
 9163+ 3			        clr     c
 9164+ 3			        endif
 9165+ 2			        endif
 9166+ 2  1CD9	9F		        subb      a,r7
 9167+ 2			        ifnb    <001h>
 9168+ 2			        save_psw
 9169+ 3  1CDA	85 D0 70	        mov     saved_psw,PSW
 9170+ 2			        endif
 9171+ 2  1CDD	B4 01 0F	        cjne    a,#res,??0755

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 165



 Line  I  Addr  Code            Source

 9172+ 2			        ifnb    <001h>
 9173+ 2			        tst_psw <001h>,??0755
 9174+ 3  1CE0	E5 70		        mov     a,saved_psw
 9175+ 3  1CE2	54 C4		        anl     a,#0c4h
 9176+ 3  1CE4	64 01		        xrl     a,#001h
 9177+ 3  1CE6	54 FE		        anl     a,#0feh
 9178+ 3  1CE8	70 05		        jnz     ??0755
 9179+ 2			        endif
 9180+ 1
 9181+ 1			        eot     'd',??0755
 9182+ 2			        putc    #'d'
 9183+ 3  1CEA			??0783:
 9184+ 3			        ;jnb     SCON.1,putc_loop
 9185+ 3			        ;clr     SCON.1
 9186+ 3  1CEA	75 99 64	        mov     SBUF,#'d'
 9187+ 2  1CED	80 06		        sjmp    ??0782
 9188+ 2  1CEF			??0755:  putc    #'?'
 9189+ 3  1CEF			??0784:
 9190+ 3			        ;jnb     SCON.1,putc_loop
 9191+ 3			        ;clr     SCON.1
 9192+ 3  1CEF	75 99 3F	        mov     SBUF,#'?'
 9193+ 2  1CF2	75 6E 01	        mov     fail,#001h
 9194+ 2  1CF5			??0782:
 9195+ 1			        ; Ok, <op> A, {dir | @Ri | Rn} done.
 9196+ 1
 9197+ 1			        ; Optionally test immediate addressing modes.
 9198+ 1
 9199+ 1	N      FFFF	        if      (01h and 1) ne 0
 9200+ 1			        ; Test <op> A, #arg1...
 9201+ 1			        top_mb  subb,a,??0759,<001h>
 9202+ 2  1CF5	74 C5		        mov     a,#arg1
 9203+ 2			        ifnb    <001h>
 9204+ 2			        set_cy  001h
 9205+ 3	N      0001	??0785  set     (001h and 1)
 9206+ 3	N      FFFF	        if      ??0785 eq 1
 9207+ 3  1CF7	D3		        setb    c
 9208+ 3			        else
 9209+ 3			        clr     c
 9210+ 3			        endif
 9211+ 2			        endif
 9212+ 2  1CF8	94 C3		        subb      a,#arg0
 9213+ 2			        ifnb    <001h>
 9214+ 2			        save_psw
 9215+ 3  1CFA	85 D0 70	        mov     saved_psw,PSW
 9216+ 2			        endif
 9217+ 2  1CFD	F5 E0		        mov     ACC,a
 9218+ 2  1CFF	B4 01 0F	        cjne    a,#res,??0759
 9219+ 2			        ifnb    <001h>
 9220+ 2			        tst_psw <001h>,??0759
 9221+ 3  1D02	E5 70		        mov     a,saved_psw
 9222+ 3  1D04	54 C4		        anl     a,#0c4h
 9223+ 3  1D06	64 01		        xrl     a,#001h
 9224+ 3  1D08	54 FE		        anl     a,#0feh
 9225+ 3  1D0A	70 05		        jnz     ??0759
 9226+ 2			        endif
 9227+ 1			        eot     'e',??0759

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 166



 Line  I  Addr  Code            Source

 9228+ 2			        putc    #'e'
 9229+ 3  1D0C			??0787:
 9230+ 3			        ;jnb     SCON.1,putc_loop
 9231+ 3			        ;clr     SCON.1
 9232+ 3  1D0C	75 99 65	        mov     SBUF,#'e'
 9233+ 2  1D0F	80 06		        sjmp    ??0786
 9234+ 2  1D11			??0759:  putc    #'?'
 9235+ 3  1D11			??0788:
 9236+ 3			        ;jnb     SCON.1,putc_loop
 9237+ 3			        ;clr     SCON.1
 9238+ 3  1D11	75 99 3F	        mov     SBUF,#'?'
 9239+ 2  1D14	75 6E 01	        mov     fail,#001h
 9240+ 2  1D17			??0786:
 9241+ 1			        endif
 9242+ 1
 9243+ 1	N      0000	        if      (01h and 2) ne 0
 9244+ 1			        ; ...and <op> dir, #arg1
 9245+ 1			        top_mb  subb,dir0,??0760,<001h>
 9246+ 1			        eot     'f',??0760
 9247+ 1			        endif
 9248+ 1
 9249+ 1			        ; Optionally test <op> dir, A
 9250+ 1	N      0000	        if      (01h and 4) ne 0
 9251+ 1			        top_mc  subb,??0761,<001h>
 9252+ 1			        eot     'g',??0761
 9253+ 1			        endif
 9254+ 1
 9255:
 9256:				        ; FIXME subb tests are specially weak
 9257:
 9258:				        put_crlf                    ; end of test series
 9259+ 1			        putc    #13
 9260+ 2  1D17			??0789:
 9261+ 2			        ;jnb     SCON.1,putc_loop
 9262+ 2			        ;clr     SCON.1
 9263+ 2  1D17	75 99 0D	        mov     SBUF,#13
 9264+ 1			        putc    #10
 9265+ 2  1D1A			??0790:
 9266+ 2			        ;jnb     SCON.1,putc_loop
 9267+ 2			        ;clr     SCON.1
 9268+ 2  1D1A	75 99 0A	        mov     SBUF,#10
 9269:
 9270:
 9271:				        ;-- Test series O ------------------------------------------------------
 9272:				        ; PUSH and POP
 9273:				        ; a.- <PUSH dir (IRAM)>
 9274:				        ; b.- <POP dir (IRAM)>
 9275:				        ; c.- <PUSH dir (SFR)>
 9276:				        ; d.- <POP dir (SFR)>
 9277:
 9278:				        putc    #'O'                ; start of test series
 9279+ 1  1D1D			??0791:
 9280+ 1			        ;jnb     SCON.1,putc_loop
 9281+ 1			        ;clr     SCON.1
 9282+ 1  1D1D	75 99 4F	        mov     SBUF,#'O'
 9283:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 167



 Line  I  Addr  Code            Source

 9284:				        ; <PUSH dir (IRAM)>
 9285:	  1D20	75 81 9F	        mov     SP,#stack0          ; prepare SP...
 9286:	  1D23	75 60 12	        mov     dir0,#012h          ; ...and data to be pushed
 9287:	  1D26	78 A0		        mov     r0,#(stack0+1)      ; r0->stack so we can verify data is pushed
 9288:	  1D28	76 00		        mov     @r0,#000h           ; clear target stack location
 9289:	  1D2A	C0 60		        push    dir0                ; <PUSH dir>
 9290:	  1D2C	E6		        mov     a,@r0               ; verify data has been pushed
 9291:	  1D2D	B4 12 0A	        cjne    a,#012h,to_a0
 9292:	  1D30	E5 81		        mov     a,SP                ; verify SP has been incremented
 9293:	  1D32	B4 A0 05	        cjne    a,#(stack0+1),to_a0
 9294:
 9295:				        eot     'a',to_a0
 9296+ 1			        putc    #'a'
 9297+ 2  1D35			??0793:
 9298+ 2			        ;jnb     SCON.1,putc_loop
 9299+ 2			        ;clr     SCON.1
 9300+ 2  1D35	75 99 61	        mov     SBUF,#'a'
 9301+ 1  1D38	80 06		        sjmp    ??0792
 9302+ 1  1D3A			to_a0:  putc    #'?'
 9303+ 2  1D3A			??0794:
 9304+ 2			        ;jnb     SCON.1,putc_loop
 9305+ 2			        ;clr     SCON.1
 9306+ 2  1D3A	75 99 3F	        mov     SBUF,#'?'
 9307+ 1  1D3D	75 6E 01	        mov     fail,#001h
 9308+ 1  1D40			??0792:
 9309:
 9310:				        ; <POP dir (IRAM)> We'll use the data that was pushed previously
 9311:	  1D40	75 61 00	        mov     dir1,#000h          ; clear POP target
 9312:	  1D43	E4		        clr     a
 9313:	  1D44	D0 61		        pop     dir1                ; <POP dir>
 9314:	  1D46	79 61		        mov     r1,#dir1            ; verify data has been popped
 9315:	  1D48	E7		        mov     a,@r1
 9316:	  1D49	B4 12 0A	        cjne    a,#012h,to_b0
 9317:	  1D4C	E5 81		        mov     a,SP                ; verify SP has been decremented
 9318:	  1D4E	B4 9F 05	        cjne    a,#stack0,to_b0
 9319:
 9320:				        eot     'b',to_b0
 9321+ 1			        putc    #'b'
 9322+ 2  1D51			??0796:
 9323+ 2			        ;jnb     SCON.1,putc_loop
 9324+ 2			        ;clr     SCON.1
 9325+ 2  1D51	75 99 62	        mov     SBUF,#'b'
 9326+ 1  1D54	80 06		        sjmp    ??0795
 9327+ 1  1D56			to_b0:  putc    #'?'
 9328+ 2  1D56			??0797:
 9329+ 2			        ;jnb     SCON.1,putc_loop
 9330+ 2			        ;clr     SCON.1
 9331+ 2  1D56	75 99 3F	        mov     SBUF,#'?'
 9332+ 1  1D59	75 6E 01	        mov     fail,#001h
 9333+ 1  1D5C			??0795:
 9334:
 9335:				        ; <PUSH dir (SFR)>
 9336:	  1D5C	75 81 9F	        mov     SP,#stack0          ; prepare SP...
 9337:	  1D5F	75 F0 42	        mov     B,#042h             ; ...and data to be pushed
 9338:	  1D62	78 A0		        mov     r0,#(stack0+1)      ; r0->stack so we can verify data is pushed
 9339:	  1D64	76 00		        mov     @r0,#000h           ; clear target stack location

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 168



 Line  I  Addr  Code            Source

 9340:	  1D66	C0 F0		        push    B                   ; <PUSH dir>
 9341:	  1D68	E6		        mov     a,@r0               ; verify data has been pushed
 9342:	  1D69	B4 42 0A	        cjne    a,#042h,to_c0
 9343:	  1D6C	E5 81		        mov     a,SP                ; verify SP has been incremented
 9344:	  1D6E	B4 A0 05	        cjne    a,#(stack0+1),to_c0
 9345:
 9346:				        eot     'c',to_c0
 9347+ 1			        putc    #'c'
 9348+ 2  1D71			??0799:
 9349+ 2			        ;jnb     SCON.1,putc_loop
 9350+ 2			        ;clr     SCON.1
 9351+ 2  1D71	75 99 63	        mov     SBUF,#'c'
 9352+ 1  1D74	80 06		        sjmp    ??0798
 9353+ 1  1D76			to_c0:  putc    #'?'
 9354+ 2  1D76			??0800:
 9355+ 2			        ;jnb     SCON.1,putc_loop
 9356+ 2			        ;clr     SCON.1
 9357+ 2  1D76	75 99 3F	        mov     SBUF,#'?'
 9358+ 1  1D79	75 6E 01	        mov     fail,#001h
 9359+ 1  1D7C			??0798:
 9360:
 9361:				        ; <POP dir (SFR)> We'll use the data that was pushed previously
 9362:	  1D7C	75 F0 00	        mov     B,#000h             ; clear POP target
 9363:	  1D7F	E4		        clr     a
 9364:	  1D80	D0 F0		        pop     B                   ; <POP dir>
 9365:	  1D82	E5 F0		        mov     a,B                 ; verify data has been popped
 9366:	  1D84	B4 42 0A	        cjne    a,#042h,to_d0
 9367:	  1D87	E5 81		        mov     a,SP                ; verify SP has been decremented
 9368:	  1D89	B4 9F 05	        cjne    a,#stack0,to_d0
 9369:
 9370:				        eot     'd',to_d0
 9371+ 1			        putc    #'d'
 9372+ 2  1D8C			??0802:
 9373+ 2			        ;jnb     SCON.1,putc_loop
 9374+ 2			        ;clr     SCON.1
 9375+ 2  1D8C	75 99 64	        mov     SBUF,#'d'
 9376+ 1  1D8F	80 06		        sjmp    ??0801
 9377+ 1  1D91			to_d0:  putc    #'?'
 9378+ 2  1D91			??0803:
 9379+ 2			        ;jnb     SCON.1,putc_loop
 9380+ 2			        ;clr     SCON.1
 9381+ 2  1D91	75 99 3F	        mov     SBUF,#'?'
 9382+ 1  1D94	75 6E 01	        mov     fail,#001h
 9383+ 1  1D97			??0801:
 9384:
 9385:				        put_crlf                    ; end of test series
 9386+ 1			        putc    #13
 9387+ 2  1D97			??0804:
 9388+ 2			        ;jnb     SCON.1,putc_loop
 9389+ 2			        ;clr     SCON.1
 9390+ 2  1D97	75 99 0D	        mov     SBUF,#13
 9391+ 1			        putc    #10
 9392+ 2  1D9A			??0805:
 9393+ 2			        ;jnb     SCON.1,putc_loop
 9394+ 2			        ;clr     SCON.1
 9395+ 2  1D9A	75 99 0A	        mov     SBUF,#10

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 169



 Line  I  Addr  Code            Source

 9396:
 9397:				        ;-- Test series P ------------------------------------------------------
 9398:				        ; Access to XRAM -- note that current tests are bare-bone minimal!
 9399:				        ; a.- <MOV DPTR, #16>
 9400:				        ; b.- <MOVX @DPTR, A>, <MOVX A, @DPTR>
 9401:				        ; c.- <MOVX @Ri, A>
 9402:				        ; d.- <MOVX A, @Ri>
 9403:
 9404:				        putc    #'P'                ; start of test series
 9405+ 1  1D9D			??0806:
 9406+ 1			        ;jnb     SCON.1,putc_loop
 9407+ 1			        ;clr     SCON.1
 9408+ 1  1D9D	75 99 50	        mov     SBUF,#'P'
 9409:
 9410:				        ; a.- <MOV DPTR, #16>
 9411:	  1DA0	75 83 65	        mov     DPH,#065h           ; initialize DPTR with known value...
 9412:	  1DA3	75 82 43	        mov     DPL,#043h
 9413:
 9414:	  1DA6	90 01 23	        mov     DPTR,#0123h         ; ...then load it through MOV...
 9415:	  1DA9	E5 83		        mov     a,DPH               ; ...and verify the load
 9416:	  1DAB	B4 01 0A	        cjne    a,#01h,tp_a0
 9417:	  1DAE	E5 82		        mov     a,DPL
 9418:	  1DB0	B4 23 05	        cjne    a,#23h,tp_a0
 9419:
 9420:				        eot     'a',tp_a0
 9421+ 1			        putc    #'a'
 9422+ 2  1DB3			??0808:
 9423+ 2			        ;jnb     SCON.1,putc_loop
 9424+ 2			        ;clr     SCON.1
 9425+ 2  1DB3	75 99 61	        mov     SBUF,#'a'
 9426+ 1  1DB6	80 06		        sjmp    ??0807
 9427+ 1  1DB8			tp_a0:  putc    #'?'
 9428+ 2  1DB8			??0809:
 9429+ 2			        ;jnb     SCON.1,putc_loop
 9430+ 2			        ;clr     SCON.1
 9431+ 2  1DB8	75 99 3F	        mov     SBUF,#'?'
 9432+ 1  1DBB	75 6E 01	        mov     fail,#001h
 9433+ 1  1DBE			??0807:
 9434:
 9435:
 9436:				        ; b.- <MOVX @DPTR, A>, <MOVX A, @DPTR>
 9437:				        ; We have no independent means to verify XRAM writes or reads, other
 9438:				        ; than the very instructions we're testing. So we should store a data
 9439:				        ; pattern on XRAM that is difficult to get back 'by chance'.
 9440:				        ; Ideally we would try all areas of XRAM, back-to-back operations, etc.
 9441:				        ; For the time being a simple word store will suffice.
 9442:	  1DBE	90 00 13	        mov     DPTR,#0013h         ; Store 55h, aah at XRAM[0013h]...
 9443:	  1DC1	74 55		        mov     A,#55h
 9444:	  1DC3	F0		        movx    @DPTR,a
 9445:	  1DC4	A3		        inc     DPTR
 9446:	  1DC5	F4		        cpl     a
 9447:	  1DC6	F0		        movx    @DPTR,a
 9448:
 9449:	  1DC7	90 00 13	        mov     DPTR,#0013h         ; ...then verify the store
 9450:	  1DCA	E0		        movx    a,@DPTR
 9451:	  1DCB	B4 55 0A	        cjne    a,#55h,tp_b0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 170



 Line  I  Addr  Code            Source

 9452:	  1DCE	A3		        inc     DPTR
 9453:	  1DCF	E0		        movx    a,@DPTR
 9454:	  1DD0	B4 AA 05	        cjne    a,#0aah,tp_b0
 9455:
 9456:				        eot     'b',tp_b0
 9457+ 1			        putc    #'b'
 9458+ 2  1DD3			??0811:
 9459+ 2			        ;jnb     SCON.1,putc_loop
 9460+ 2			        ;clr     SCON.1
 9461+ 2  1DD3	75 99 62	        mov     SBUF,#'b'
 9462+ 1  1DD6	80 06		        sjmp    ??0810
 9463+ 1  1DD8			tp_b0:  putc    #'?'
 9464+ 2  1DD8			??0812:
 9465+ 2			        ;jnb     SCON.1,putc_loop
 9466+ 2			        ;clr     SCON.1
 9467+ 2  1DD8	75 99 3F	        mov     SBUF,#'?'
 9468+ 1  1DDB	75 6E 01	        mov     fail,#001h
 9469+ 1  1DDE			??0810:
 9470:
 9471:				        ; c.- <MOVX @Ri, A>
 9472:	  1DDE	74 79		        mov     a,#79h              ; Let [0013h] = 79h and [0014h] = 97h
 9473:	  1DE0	90 00 13	        mov     dptr,#0013h
 9474:	  1DE3	78 13		        mov     r0,#13h             ;
 9475:	  1DE5	79 14		        mov     r1,#14h             ; Write using @Ri...
 9476:	  1DE7	F2		        movx    @r0,a
 9477:	  1DE8	14		        dec     a
 9478:	  1DE9	E0		        movx    a,@DPTR             ; ...verify using DPTR
 9479:	  1DEA	B4 79 0D	        cjne    a,#79h,tp_c0
 9480:	  1DED	A3		        inc     DPTR
 9481:	  1DEE	74 97		        mov     a,#97h
 9482:	  1DF0	F3		        movx    @r1,a
 9483:	  1DF1	E0		        movx    a,@DPTR
 9484:	  1DF2	B4 97 05	        cjne    a,#097h,tp_c0
 9485:
 9486:				        eot     'c',tp_c0
 9487+ 1			        putc    #'c'
 9488+ 2  1DF5			??0814:
 9489+ 2			        ;jnb     SCON.1,putc_loop
 9490+ 2			        ;clr     SCON.1
 9491+ 2  1DF5	75 99 63	        mov     SBUF,#'c'
 9492+ 1  1DF8	80 06		        sjmp    ??0813
 9493+ 1  1DFA			tp_c0:  putc    #'?'
 9494+ 2  1DFA			??0815:
 9495+ 2			        ;jnb     SCON.1,putc_loop
 9496+ 2			        ;clr     SCON.1
 9497+ 2  1DFA	75 99 3F	        mov     SBUF,#'?'
 9498+ 1  1DFD	75 6E 01	        mov     fail,#001h
 9499+ 1  1E00			??0813:
 9500:
 9501:				        ; d.- <MOVX A, @Ri>
 9502:	  1E00	74 79		        mov     a,#79h              ; Let [0013h] = 79h and [0014h] = 97h
 9503:	  1E02	90 00 13	        mov     dptr,#0013h
 9504:	  1E05	78 13		        mov     r0,#13h
 9505:	  1E07	79 14		        mov     r1,#14h
 9506:	  1E09	F0		        movx    @DPTR,a             ; Write using DPTR...
 9507:	  1E0A	14		        dec a

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 171



 Line  I  Addr  Code            Source

 9508:	  1E0B	E2		        movx    a,@r0               ; ... verify using @Ri
 9509:	  1E0C	B4 79 0E	        cjne    a,#79h,tp_d0
 9510:	  1E0F	74 97		        mov     a,#97h
 9511:	  1E11	A3		        inc     DPTR
 9512:	  1E12	F0		        movx    @DPTR,a
 9513:	  1E13	14		        dec a
 9514:	  1E14	E3		        movx    a,@r1
 9515:	  1E15	B4 97 05	        cjne    a,#097h,tp_d0
 9516:
 9517:				        eot     'd',tp_d0
 9518+ 1			        putc    #'d'
 9519+ 2  1E18			??0817:
 9520+ 2			        ;jnb     SCON.1,putc_loop
 9521+ 2			        ;clr     SCON.1
 9522+ 2  1E18	75 99 64	        mov     SBUF,#'d'
 9523+ 1  1E1B	80 06		        sjmp    ??0816
 9524+ 1  1E1D			tp_d0:  putc    #'?'
 9525+ 2  1E1D			??0818:
 9526+ 2			        ;jnb     SCON.1,putc_loop
 9527+ 2			        ;clr     SCON.1
 9528+ 2  1E1D	75 99 3F	        mov     SBUF,#'?'
 9529+ 1  1E20	75 6E 01	        mov     fail,#001h
 9530+ 1  1E23			??0816:
 9531:
 9532:				        put_crlf                    ; end of test series
 9533+ 1			        putc    #13
 9534+ 2  1E23			??0819:
 9535+ 2			        ;jnb     SCON.1,putc_loop
 9536+ 2			        ;clr     SCON.1
 9537+ 2  1E23	75 99 0D	        mov     SBUF,#13
 9538+ 1			        putc    #10
 9539+ 2  1E26			??0820:
 9540+ 2			        ;jnb     SCON.1,putc_loop
 9541+ 2			        ;clr     SCON.1
 9542+ 2  1E26	75 99 0A	        mov     SBUF,#10
 9543:
 9544:				        ;-- Test series Q ------------------------------------------------------
 9545:				        ; MOVC instructions
 9546:				        ; a.- <MOVC A, @A + PC>
 9547:				        ; b.- <MOVC A, @A + DPTR>
 9548:
 9549:				        putc    #'Q'                ; start of test series
 9550+ 1  1E29			??0821:
 9551+ 1			        ;jnb     SCON.1,putc_loop
 9552+ 1			        ;clr     SCON.1
 9553+ 1  1E29	75 99 51	        mov     SBUF,#'Q'
 9554:
 9555:				        ; a.- <MOVC A, @A + PC>
 9556:	  1E2C	74 03		        mov     a,#03h              ; we'll read the 4th byte in the table...
 9557:	  1E2E	24 02		        add     a,#02h              ; ...and must account for intervening sjmp
 9558:	  1E30	83		        movc    a,@a+PC
 9559:	  1E31	80 04		        sjmp    tq0
 9560:
 9561:	  1E33	07 13 19 21	tq1:    db      07h, 13h, 19h, 21h
 9562:	  1E37	B4 21 05	tq0:    cjne    a,#21h,tq_a0
 9563:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 172



 Line  I  Addr  Code            Source

 9564:				        eot     'a',tq_a0
 9565+ 1			        putc    #'a'
 9566+ 2  1E3A			??0823:
 9567+ 2			        ;jnb     SCON.1,putc_loop
 9568+ 2			        ;clr     SCON.1
 9569+ 2  1E3A	75 99 61	        mov     SBUF,#'a'
 9570+ 1  1E3D	80 06		        sjmp    ??0822
 9571+ 1  1E3F			tq_a0:  putc    #'?'
 9572+ 2  1E3F			??0824:
 9573+ 2			        ;jnb     SCON.1,putc_loop
 9574+ 2			        ;clr     SCON.1
 9575+ 2  1E3F	75 99 3F	        mov     SBUF,#'?'
 9576+ 1  1E42	75 6E 01	        mov     fail,#001h
 9577+ 1  1E45			??0822:
 9578:
 9579:				        ; b.- <MOVC A, @A + DPTR>
 9580:	  1E45	90 1E 33	        mov   DPTR,#tq1
 9581:
 9582:	  1E48	74 00		        mov   a,#00h
 9583:	  1E4A	93		        movc  a,@a+DPTR
 9584:	  1E4B	B4 07 17	        cjne  a,#07h,tq_b0
 9585:
 9586:	  1E4E	74 01		        mov   a,#01h
 9587:	  1E50	93		        movc  a,@a+DPTR
 9588:	  1E51	B4 13 11	        cjne  a,#13h,tq_b0
 9589:
 9590:	  1E54	74 02		        mov   a,#02h
 9591:	  1E56	93		        movc  a,@a+DPTR
 9592:	  1E57	B4 19 0B	        cjne  a,#19h,tq_b0
 9593:
 9594:	  1E5A	74 03		        mov   a,#03h
 9595:	  1E5C	93		        movc  a,@a+DPTR
 9596:	  1E5D	B4 21 05	        cjne  a,#21h,tq_b0
 9597:
 9598:				        eot     'b',tq_b0
 9599+ 1			        putc    #'b'
 9600+ 2  1E60			??0826:
 9601+ 2			        ;jnb     SCON.1,putc_loop
 9602+ 2			        ;clr     SCON.1
 9603+ 2  1E60	75 99 62	        mov     SBUF,#'b'
 9604+ 1  1E63	80 06		        sjmp    ??0825
 9605+ 1  1E65			tq_b0:  putc    #'?'
 9606+ 2  1E65			??0827:
 9607+ 2			        ;jnb     SCON.1,putc_loop
 9608+ 2			        ;clr     SCON.1
 9609+ 2  1E65	75 99 3F	        mov     SBUF,#'?'
 9610+ 1  1E68	75 6E 01	        mov     fail,#001h
 9611+ 1  1E6B			??0825:
 9612:
 9613:				        put_crlf                    ; end of test series
 9614+ 1			        putc    #13
 9615+ 2  1E6B			??0828:
 9616+ 2			        ;jnb     SCON.1,putc_loop
 9617+ 2			        ;clr     SCON.1
 9618+ 2  1E6B	75 99 0D	        mov     SBUF,#13
 9619+ 1			        putc    #10

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 173



 Line  I  Addr  Code            Source

 9620+ 2  1E6E			??0829:
 9621+ 2			        ;jnb     SCON.1,putc_loop
 9622+ 2			        ;clr     SCON.1
 9623+ 2  1E6E	75 99 0A	        mov     SBUF,#10
 9624:
 9625:
 9626:				        ;-- Test series R ------------------------------------------------------
 9627:				        ; ACALL, LCALL, JMP @A+DPTR, LJMP, AJMP instructions
 9628:				        ; a.- <ACALL addr8>     <-- uses LJMP too
 9629:				        ; b.- <LCALL addr16>    <-- uses LJMP too
 9630:				        ; c.- <JMP @A+DPTR>
 9631:				        ; d.- <LJMP addr16>
 9632:				        ; e.- <AJMP addr8>
 9633:				        ;
 9634:				        ; Biggest limitations:
 9635:				        ; .- Jumps to same page (== H addr byte) tested only at one page.
 9636:				        ;
 9637:				        ; Note RET is NOT tested here! we don't return from these calls, just
 9638:				        ; use them as jumps.
 9639:				        ;
 9640:
 9641:				        putc    #'R'                ; start of test series
 9642+ 1  1E71			??0830:
 9643+ 1			        ;jnb     SCON.1,putc_loop
 9644+ 1			        ;clr     SCON.1
 9645+ 1  1E71	75 99 52	        mov     SBUF,#'R'
 9646:
 9647:	  1E74	75 81 4F	        mov     SP,#4fh             ; Initialize SP...
 9648:	  1E77	75 50 00	        mov     50h,#00h            ; ...and clear stack area
 9649:	  1E7A	75 51 00	        mov     51h,#00h
 9650:	  1E7D	75 52 00	        mov     52h,#00h
 9651:	  1E80	75 53 00	        mov     53h,#00h
 9652:
 9653:				        ; a.- <ACALL addr8>
 9654:				        ; We should test all code pages eventually...
 9655:	  1E83	D1 87		        acall   tr_sub0             ; Do the call...
 9656:	  1E85	80 14		tr_rv0: sjmp    tr_a0
 9657:	  1E87			tr_sub0:
 9658:	  1E87	E5 81		        mov     A,SP
 9659:	  1E89	B4 51 0F	        cjne    A,#51h,tr_a0       ; ...verify the SP value...
 9660:	  1E8C	E5 50		        mov     A,50h
 9661:	  1E8E	B4 85 0A	        cjne    A,#LOW(tr_rv0),tr_a0 ; ...and verify the pushed ret address
 9662:	  1E91	E5 51		        mov     A,51h
 9663:	  1E93	B4 1E 05	        cjne    A,#HIGH(tr_rv0),tr_a0
 9664:
 9665:				        eot     'a',tr_a0
 9666+ 1			        putc    #'a'
 9667+ 2  1E96			??0832:
 9668+ 2			        ;jnb     SCON.1,putc_loop
 9669+ 2			        ;clr     SCON.1
 9670+ 2  1E96	75 99 61	        mov     SBUF,#'a'
 9671+ 1  1E99	80 06		        sjmp    ??0831
 9672+ 1  1E9B			tr_a0:  putc    #'?'
 9673+ 2  1E9B			??0833:
 9674+ 2			        ;jnb     SCON.1,putc_loop
 9675+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 174



 Line  I  Addr  Code            Source

 9676+ 2  1E9B	75 99 3F	        mov     SBUF,#'?'
 9677+ 1  1E9E	75 6E 01	        mov     fail,#001h
 9678+ 1  1EA1			??0831:
 9679:
 9680:				        ; b.- <LCALL addr16>
 9681:	  1EA1	12 80 0C	        lcall   tr_sub1             ; Do the call...
 9682:	  1EA4	80 06		tr_rv1: sjmp    tr_b0
 9683:	  1EA6	00		tr_rv2: nop
 9684:				        eot     'b',tr_b0
 9685+ 1			        putc    #'b'
 9686+ 2  1EA7			??0835:
 9687+ 2			        ;jnb     SCON.1,putc_loop
 9688+ 2			        ;clr     SCON.1
 9689+ 2  1EA7	75 99 62	        mov     SBUF,#'b'
 9690+ 1  1EAA	80 06		        sjmp    ??0834
 9691+ 1  1EAC			tr_b0:  putc    #'?'
 9692+ 2  1EAC			??0836:
 9693+ 2			        ;jnb     SCON.1,putc_loop
 9694+ 2			        ;clr     SCON.1
 9695+ 2  1EAC	75 99 3F	        mov     SBUF,#'?'
 9696+ 1  1EAF	75 6E 01	        mov     fail,#001h
 9697+ 1  1EB2			??0834:
 9698:
 9699:
 9700:				        ; c.- <JMP @A+DPTR>
 9701:				        ; Note that tr_sub2 is at 8000h so that we test the A+DPTR carry
 9702:				        ; propagation. Any address xx00h would do.
 9703:	  1EB2	90 7F CD	        mov     DPTR,#(tr_sub2-33h) ; Prepare DPTR and A so that their sum
 9704:	  1EB5	74 33		        mov     a,#33h              ; gives the target address.
 9705:	  1EB7	73		        jmp     @a+DPTR
 9706:	  1EB8	02 1E CA	        jmp     tr_c0
 9707:	  1EBB	00		        nop
 9708:	  1EBC	00		        nop
 9709:	  1EBD	74 00		tr_rv3: mov     a,#00h
 9710:	  1EBF	74 00		        mov     a,#00h
 9711:	  1EC1	74 00		        mov     a,#00h
 9712:	  1EC3	74 00		        mov     a,#00h
 9713:
 9714:				        eot     'c',tr_c0
 9715+ 1			        putc    #'c'
 9716+ 2  1EC5			??0838:
 9717+ 2			        ;jnb     SCON.1,putc_loop
 9718+ 2			        ;clr     SCON.1
 9719+ 2  1EC5	75 99 63	        mov     SBUF,#'c'
 9720+ 1  1EC8	80 06		        sjmp    ??0837
 9721+ 1  1ECA			tr_c0:  putc    #'?'
 9722+ 2  1ECA			??0839:
 9723+ 2			        ;jnb     SCON.1,putc_loop
 9724+ 2			        ;clr     SCON.1
 9725+ 2  1ECA	75 99 3F	        mov     SBUF,#'?'
 9726+ 1  1ECD	75 6E 01	        mov     fail,#001h
 9727+ 1  1ED0			??0837:
 9728:
 9729:				        ; d.- <LJMP addr16>
 9730:	  1ED0	02 80 06	        ljmp    tr_sub3
 9731:	  1ED3	02 1E DF	        jmp     tr_d0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 175



 Line  I  Addr  Code            Source

 9732:	  1ED6	00		        nop
 9733:	  1ED7	00		        nop
 9734:	  1ED8	00		tr_rv4: nop
 9735:	  1ED9	00		        nop
 9736:				        eot     'd',tr_d0
 9737+ 1			        putc    #'d'
 9738+ 2  1EDA			??0841:
 9739+ 2			        ;jnb     SCON.1,putc_loop
 9740+ 2			        ;clr     SCON.1
 9741+ 2  1EDA	75 99 64	        mov     SBUF,#'d'
 9742+ 1  1EDD	80 06		        sjmp    ??0840
 9743+ 1  1EDF			tr_d0:  putc    #'?'
 9744+ 2  1EDF			??0842:
 9745+ 2			        ;jnb     SCON.1,putc_loop
 9746+ 2			        ;clr     SCON.1
 9747+ 2  1EDF	75 99 3F	        mov     SBUF,#'?'
 9748+ 1  1EE2	75 6E 01	        mov     fail,#001h
 9749+ 1  1EE5			??0840:
 9750:
 9751:				        ; e.- <AJMP addr8>
 9752:				        ; We should test all code pages eventually...
 9753:	  1EE5	74 00		        mov     a,#00h
 9754:	  1EE7	C1 EB		        ajmp    tr_ajmp0            ; Do the jump...
 9755:	  1EE9	80 02		        sjmp    tr_rv5
 9756:	  1EEB			tr_ajmp0:
 9757:	  1EEB	74 42		        mov     a,#042h
 9758:	  1EED			tr_rv5:
 9759:	  1EED	B4 42 06	        cjne    A,#42h,tr_e0       ; ...and make sure we've actually been there
 9760:	  1EF0	00		        nop
 9761:
 9762:				        eot     'e',tr_e0
 9763+ 1			        putc    #'e'
 9764+ 2  1EF1			??0844:
 9765+ 2			        ;jnb     SCON.1,putc_loop
 9766+ 2			        ;clr     SCON.1
 9767+ 2  1EF1	75 99 65	        mov     SBUF,#'e'
 9768+ 1  1EF4	80 06		        sjmp    ??0843
 9769+ 1  1EF6			tr_e0:  putc    #'?'
 9770+ 2  1EF6			??0845:
 9771+ 2			        ;jnb     SCON.1,putc_loop
 9772+ 2			        ;clr     SCON.1
 9773+ 2  1EF6	75 99 3F	        mov     SBUF,#'?'
 9774+ 1  1EF9	75 6E 01	        mov     fail,#001h
 9775+ 1  1EFC			??0843:
 9776:
 9777:				        put_crlf                    ; end of test series
 9778+ 1			        putc    #13
 9779+ 2  1EFC			??0846:
 9780+ 2			        ;jnb     SCON.1,putc_loop
 9781+ 2			        ;clr     SCON.1
 9782+ 2  1EFC	75 99 0D	        mov     SBUF,#13
 9783+ 1			        putc    #10
 9784+ 2  1EFF			??0847:
 9785+ 2			        ;jnb     SCON.1,putc_loop
 9786+ 2			        ;clr     SCON.1
 9787+ 2  1EFF	75 99 0A	        mov     SBUF,#10

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 176



 Line  I  Addr  Code            Source

 9788:
 9789:
 9790:				        ;-- Test series S ------------------------------------------------------
 9791:				        ; RET, RETI instructions
 9792:				        ; a.- <RET>
 9793:				        ; b.- <RETI>
 9794:				        ;
 9795:				        ; RETs to different code pages (!= H addr byte) not tested!
 9796:				        ; Interrupt flag stuff not tested, only RET functionality
 9797:
 9798:				        putc    #'S'                ; start of test series
 9799+ 1  1F02			??0848:
 9800+ 1			        ;jnb     SCON.1,putc_loop
 9801+ 1			        ;clr     SCON.1
 9802+ 1  1F02	75 99 53	        mov     SBUF,#'S'
 9803:
 9804:
 9805:				        ; a.- <RET>
 9806:	  1F05	75 81 4F	        mov     SP,#4fh             ; Initialize SP...
 9807:	  1F08	75 4F 1F	        mov     4fh,#HIGH(s_sub0)   ; ...and load stack area with return
 9808:	  1F0B	75 4E 19	        mov     4eh,#LOW(s_sub0)    ; addresses to be tested
 9809:	  1F0E	75 4D 1F	        mov     4dh,#HIGH(s_sub1)
 9810:	  1F11	75 4C 23	        mov     4ch,#LOW(s_sub1)
 9811:
 9812:	  1F14	22		        ret                         ; Do the ret...
 9813:	  1F15	80 16		        sjmp    ts_a0
 9814:	  1F17	74 00		        mov     A,#00h
 9815:	  1F19	E5 81		s_sub0: mov     A,SP
 9816:	  1F1B	B4 4D 0F	        cjne    A,#4dh,ts_a0       ; ... and verify the SP value
 9817:
 9818:	  1F1E	22		        ret                         ; Do another ret...
 9819:	  1F1F	80 0C		        sjmp    ts_a0
 9820:	  1F21	74 00		        mov     A,#00h
 9821:	  1F23	E5 81		s_sub1: mov     A,SP
 9822:	  1F25	B4 4B 05	        cjne    A,#4bh,ts_a0       ; ... and verify the SP value
 9823:
 9824:				        eot     'a',ts_a0
 9825+ 1			        putc    #'a'
 9826+ 2  1F28			??0850:
 9827+ 2			        ;jnb     SCON.1,putc_loop
 9828+ 2			        ;clr     SCON.1
 9829+ 2  1F28	75 99 61	        mov     SBUF,#'a'
 9830+ 1  1F2B	80 06		        sjmp    ??0849
 9831+ 1  1F2D			ts_a0:  putc    #'?'
 9832+ 2  1F2D			??0851:
 9833+ 2			        ;jnb     SCON.1,putc_loop
 9834+ 2			        ;clr     SCON.1
 9835+ 2  1F2D	75 99 3F	        mov     SBUF,#'?'
 9836+ 1  1F30	75 6E 01	        mov     fail,#001h
 9837+ 1  1F33			??0849:
 9838:
 9839:
 9840:				        ; a.- <RETI>
 9841:	  1F33	75 81 4F	        mov     SP,#4fh             ; Initialize SP...
 9842:	  1F36	75 4F 1F	        mov     4fh,#HIGH(s_sub2)   ; ...and load stack area with return
 9843:	  1F39	75 4E 47	        mov     4eh,#LOW(s_sub2)    ; addresses to be tested

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 177



 Line  I  Addr  Code            Source

 9844:	  1F3C	75 4D 1F	        mov     4dh,#HIGH(s_sub3)
 9845:	  1F3F	75 4C 51	        mov     4ch,#LOW(s_sub3)
 9846:
 9847:	  1F42	22		        ret                         ; Do the ret...
 9848:	  1F43	80 E8		        sjmp    ts_a0
 9849:	  1F45	74 00		        mov     A,#00h
 9850:	  1F47	E5 81		s_sub2: mov     A,SP
 9851:	  1F49	B4 4D 0F	        cjne    A,#4dh,ts_b0       ; ... and verify the SP value
 9852:
 9853:	  1F4C	22		        ret                         ; Do another ret...
 9854:	  1F4D	80 DE		        sjmp    ts_a0
 9855:	  1F4F	74 00		        mov     A,#00h
 9856:	  1F51	E5 81		s_sub3: mov     A,SP
 9857:	  1F53	B4 4B 05	        cjne    A,#4bh,ts_b0       ; ... and verify the SP value
 9858:
 9859:				        eot     'b',ts_b0
 9860+ 1			        putc    #'b'
 9861+ 2  1F56			??0853:
 9862+ 2			        ;jnb     SCON.1,putc_loop
 9863+ 2			        ;clr     SCON.1
 9864+ 2  1F56	75 99 62	        mov     SBUF,#'b'
 9865+ 1  1F59	80 06		        sjmp    ??0852
 9866+ 1  1F5B			ts_b0:  putc    #'?'
 9867+ 2  1F5B			??0854:
 9868+ 2			        ;jnb     SCON.1,putc_loop
 9869+ 2			        ;clr     SCON.1
 9870+ 2  1F5B	75 99 3F	        mov     SBUF,#'?'
 9871+ 1  1F5E	75 6E 01	        mov     fail,#001h
 9872+ 1  1F61			??0852:
 9873:
 9874:				        ; Lots of things can go badly and we wouldn't know with this test...
 9875:				        put_crlf                    ; end of test series
 9876+ 1			        putc    #13
 9877+ 2  1F61			??0855:
 9878+ 2			        ;jnb     SCON.1,putc_loop
 9879+ 2			        ;clr     SCON.1
 9880+ 2  1F61	75 99 0D	        mov     SBUF,#13
 9881+ 1			        putc    #10
 9882+ 2  1F64			??0856:
 9883+ 2			        ;jnb     SCON.1,putc_loop
 9884+ 2			        ;clr     SCON.1
 9885+ 2  1F64	75 99 0A	        mov     SBUF,#10
 9886:
 9887:				        ;-- Test series T ------------------------------------------------------
 9888:				        ; MUL, DIV instructions
 9889:				        ; a.- <DIV>
 9890:				        ; b.- <MUL>
 9891:				        ;
 9892:
 9893:				        putc    #'T'                ; start of test series
 9894+ 1  1F67			??0857:
 9895+ 1			        ;jnb     SCON.1,putc_loop
 9896+ 1			        ;clr     SCON.1
 9897+ 1  1F67	75 99 54	        mov     SBUF,#'T'
 9898:
 9899:				        ; a.- <DIV>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 178



 Line  I  Addr  Code            Source

 9900:	  1F6A	75 F0 07	        mov     B,#07h              ; First of all, make sure B can be read back
 9901:	  1F6D	74 13		        mov     A,#13h
 9902:	  1F6F	E5 F0		        mov     A,B
 9903:	  1F71	B4 07 37	        cjne    A,#07h,tt_a0
 9904:
 9905:				        ; Now do a few representative DIVs using a table. The table has the
 9906:				        ; following format:
 9907:				        ; denominator, numerator, overflow, quotient, remainder
 9908:				        ; Where 'overflow' is 00h or 04h.
 9909:
 9910:				        ; DPTR will point to the start of the table, r0 will be the current data
 9911:				        ; byte offset and r1 the number of test cases remaiining.
 9912:	  1F74	90 1F B3	        mov     DPTR,#tt_a_tab
 9913:	  1F77	78 00		        mov     r0,#00h
 9914:	  1F79	79 09		        mov     r1,#((tt_a_tab_end-tt_a_tab)/5)
 9915:
 9916:	  1F7B			tt_a_loop:
 9917:	  1F7B	E8		        mov     a,r0
 9918:	  1F7C	08		        inc     r0
 9919:	  1F7D	93		        movc    a,@a+DPTR
 9920:	  1F7E	F5 F0		        mov     B,a
 9921:	  1F80	E8		        mov     a,r0
 9922:	  1F81	08		        inc     r0
 9923:	  1F82	93		        movc    a,@a+DPTR
 9924:	  1F83	84		        div     ab
 9925:	  1F84	F5 60		        mov     dir0,a
 9926:
 9927:	  1F86	E8		        mov     a,r0                ; Get expected OV flag
 9928:	  1F87	08		        inc     r0
 9929:	  1F88	93		        movc    a,@a+DPTR
 9930:	  1F89	70 15		        jnz     tt_a_divzero        ; If OV expected, skip verification of
 9931:	  1F8B	E5 D0		        mov     a,PSW               ; quotient and remainder
 9932:	  1F8D	54 04		        anl     a,#04h
 9933:	  1F8F	70 1A		        jnz     tt_a0
 9934:
 9935:	  1F91	E8		        mov     a,r0                ; Verify quotient...
 9936:	  1F92	08		        inc     r0
 9937:	  1F93	93		        movc    a,@a+DPTR
 9938:	  1F94	B5 60 14	        cjne    a,dir0,tt_a0
 9939:	  1F97	E8		        mov     a,r0                ; ...and verify remainder
 9940:	  1F98	08		        inc     r0
 9941:	  1F99	93		        movc    a,@a+DPTR
 9942:	  1F9A	B5 F0 0E	        cjne    a,B,tt_a0
 9943:	  1F9D	02 1F A2	        jmp     tt_a_next
 9944:
 9945:	  1FA0			tt_a_divzero:
 9946:	  1FA0	08		        inc     r0
 9947:	  1FA1	08		        inc     r0
 9948:	  1FA2			tt_a_next:
 9949:	  1FA2	19		        dec     r1                  ; go for next test vector, if any
 9950:	  1FA3	E9		        mov     a,r1
 9951:	  1FA4	70 D5		        jnz     tt_a_loop
 9952:
 9953:				        eot     'a',tt_a0
 9954+ 1			        putc    #'a'
 9955+ 2  1FA6			??0859:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 179



 Line  I  Addr  Code            Source

 9956+ 2			        ;jnb     SCON.1,putc_loop
 9957+ 2			        ;clr     SCON.1
 9958+ 2  1FA6	75 99 61	        mov     SBUF,#'a'
 9959+ 1  1FA9	80 06		        sjmp    ??0858
 9960+ 1  1FAB			tt_a0:  putc    #'?'
 9961+ 2  1FAB			??0860:
 9962+ 2			        ;jnb     SCON.1,putc_loop
 9963+ 2			        ;clr     SCON.1
 9964+ 2  1FAB	75 99 3F	        mov     SBUF,#'?'
 9965+ 1  1FAE	75 6E 01	        mov     fail,#001h
 9966+ 1  1FB1			??0858:
 9967:	  1FB1	80 2D		        sjmp    tt_a_tab_end
 9968:
 9969:	  1FB3			tt_a_tab:
 9970:	  1FB3	07 13 00 02	        db      7,19,0,2,5
	  1FB7	05
 9971:	  1FB8	07 11 00 02	        db      7,17,0,2,3
	  1FBC	03
 9972:	  1FBD	07 0D 00 01	        db      7,13,0,1,6
	  1FC1	06
 9973:	  1FC2	0D 11 00 01	        db      13,17,0,1,4
	  1FC6	04
 9974:	  1FC7	11 0D 00 00	        db      17,13,0,0,13
	  1FCB	0D
 9975:	  1FCC	00 0D 04 00	        db      0,13,4,0,13
	  1FD0	0D
 9976:	  1FD1	80 87 00 01	        db      80h,87h,0,1,7
	  1FD5	07
 9977:	  1FD6	01 FF 00 FF	        db      1,255,0,255,0
	  1FDA	00
 9978:	  1FDB	02 FF 00 7F	        db      2,255,0,127,1
	  1FDF	01
 9979:	  1FE0			tt_a_tab_end:
 9980:
 9981:				        ; b.- <MUL>
 9982:
 9983:				        ; Do with MUL the same we just did with DIV. The test data table has
 9984:				        ; the following format:
 9985:				        ; denominator, numerator, product high byte, product low byte.
 9986:
 9987:				        ; DPTR will point to the start of the table, r0 will be the current data
 9988:				        ; byte offset and r1 the number of test cases remaiining.
 9989:	  1FE0	90 20 21	        mov     DPTR,#tt_b_tab
 9990:	  1FE3	78 00		        mov     r0,#00h
 9991:	  1FE5	79 09		        mov     r1,#((tt_b_tab_end-tt_b_tab)/4)
 9992:
 9993:	  1FE7			tt_b_loop:
 9994:	  1FE7	E8		        mov     a,r0                ; Load B with test data...
 9995:	  1FE8	08		        inc     r0
 9996:	  1FE9	93		        movc    a,@a+DPTR
 9997:	  1FEA	F5 F0		        mov     B,a
 9998:	  1FEC	E8		        mov     a,r0                ; ...then load A with test data...
 9999:	  1FED	08		        inc     r0
10000:	  1FEE	93		        movc    a,@a+DPTR
10001:	  1FEF	A4		        mul     ab                  ; and do the MUL
10002:	  1FF0	F5 60		        mov     dir0,a              ; Save A for later checks

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 180



 Line  I  Addr  Code            Source

10003:
10004:	  1FF2	E8		        mov     a,r0                ; Verify product high byte
10005:				        ;inc     r0
10006:	  1FF3	93		        movc    a,@a+DPTR
10007:	  1FF4	60 08		        jz      tt_b_noovf
10008:
10009:	  1FF6	E5 D0		        mov     a,PSW               ; overflow expected
10010:	  1FF8	54 04		        anl     a,#04h
10011:	  1FFA	60 1D		        jz      tt_b0
10012:	  1FFC	80 06		        sjmp    tt_b_0
10013:
10014:	  1FFE			tt_b_noovf:
10015:	  1FFE	E5 D0		        mov     a,PSW               ; no overflow expected
10016:	  2000	54 04		        anl     a,#04h
10017:	  2002	70 15		        jnz     tt_b0
10018:
10019:	  2004			tt_b_0:
10020:	  2004	E8		        mov     a,r0                ; Verify product high byte
10021:	  2005	08		        inc     r0
10022:	  2006	93		        movc    a,@a+DPTR
10023:	  2007	B5 F0 0F	        cjne    a,B,tt_b0
10024:	  200A	E8		        mov     a,r0                ; ...and verify low byte
10025:	  200B	08		        inc     r0
10026:	  200C	93		        movc    a,@a+DPTR
10027:	  200D	B5 60 09	        cjne    a,dir0,tt_b0
10028:
10029:	  2010	19		        dec     r1                  ; go for next test vector, if any
10030:	  2011	E9		        mov     a,r1
10031:	  2012	70 D3		        jnz     tt_b_loop
10032:
10033:				        eot     'b',tt_b0
10034+ 1			        putc    #'b'
10035+ 2  2014			??0862:
10036+ 2			        ;jnb     SCON.1,putc_loop
10037+ 2			        ;clr     SCON.1
10038+ 2  2014	75 99 62	        mov     SBUF,#'b'
10039+ 1  2017	80 06		        sjmp    ??0861
10040+ 1  2019			tt_b0:  putc    #'?'
10041+ 2  2019			??0863:
10042+ 2			        ;jnb     SCON.1,putc_loop
10043+ 2			        ;clr     SCON.1
10044+ 2  2019	75 99 3F	        mov     SBUF,#'?'
10045+ 1  201C	75 6E 01	        mov     fail,#001h
10046+ 1  201F			??0861:
10047:	  201F	80 24		        sjmp    tt_b_tab_end
10048:
10049:	  2021			tt_b_tab:
10050:	  2021	07 13 00 85	        db      7,19,0,133
10051:	  2025	07 11 00 77	        db      7,17,0,119
10052:	  2029	07 0D 00 5B	        db      7,13,0,91
10053:	  202D	0D 11 00 DD	        db      13,17,0,221
10054:	  2031	11 0D 00 DD	        db      17,13,0,221
10055:	  2035	00 0D 00 00	        db      0,13,0,0
10056:	  2039	80 87 43 80	        db      80h,87h,43h,80h
10057:	  203D	01 FF 00 FF	        db      1,255,0,255
10058:	  2041	02 FF 01 FE	        db      2,255,01h,0feh

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 181



 Line  I  Addr  Code            Source

10059:	  2045			tt_b_tab_end:
10060:
10061:				        put_crlf                    ; end of test series
10062+ 1			        putc    #13
10063+ 2  2045			??0864:
10064+ 2			        ;jnb     SCON.1,putc_loop
10065+ 2			        ;clr     SCON.1
10066+ 2  2045	75 99 0D	        mov     SBUF,#13
10067+ 1			        putc    #10
10068+ 2  2048			??0865:
10069+ 2			        ;jnb     SCON.1,putc_loop
10070+ 2			        ;clr     SCON.1
10071+ 2  2048	75 99 0A	        mov     SBUF,#10
10072:
10073:
10074:
10075:				        ;-- Test series U ------------------------------------------------------
10076:				        ; Register banks
10077:				        ; a.- Write to register, read from indirect address.
10078:				        ; a.- Write to indirect address, read from register.
10079:				        ;
10080:
10081:				        putc    #'U'                ; start of test series
10082+ 1  204B			??0866:
10083+ 1			        ;jnb     SCON.1,putc_loop
10084+ 1			        ;clr     SCON.1
10085+ 1  204B	75 99 55	        mov     SBUF,#'U'
10086:
10087:
10088:	  204E	75 D0 00	        mov     PSW,#00h            ; Test bank 0
10089:	  2051	74 01		        mov     a,#00h + 1
10090:	  2053	12 20 70	        call    tu_a_test
10091:
10092:	  2056	75 D0 08	        mov     PSW,#08h            ; Test bank 1
10093:	  2059	74 09		        mov     a,#08h + 1
10094:	  205B	12 20 70	        call    tu_a_test
10095:
10096:	  205E	75 D0 10	        mov     PSW,#10h            ; Test bank 2
10097:	  2061	74 11		        mov     a,#10h + 1
10098:	  2063	12 20 70	        call    tu_a_test
10099:
10100:	  2066	75 D0 18	        mov     PSW,#18h            ; Test bank 3
10101:	  2069	74 19		        mov     a,#18h + 1
10102:	  206B	12 20 70	        call    tu_a_test
10103:
10104:	  206E	80 1E		        sjmp    tu_a_done
10105:
10106:	  2070			tu_a_test:
10107:	  2070	F8		        mov     r0,a                ; R0 points to R1 in the selected bank.
10108:
10109:	  2071	79 12		        mov     r1,#12h             ; Write to registers R1 and R7
10110:	  2073	7F 34		        mov     r7,#34h
10111:
10112:	  2075	E6		        mov     a,@r0               ; Check R1
10113:	  2076	B4 12 1B	        cjne    a,#12h,tu_a0
10114:	  2079	74 56		        mov     a,#56h              ; Ok, now write to R1 with reg addressing...

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 182



 Line  I  Addr  Code            Source

10115:	  207B	F6		        mov     @r0,a               ; ...and check by reading in indirect.
10116:	  207C	B9 56 15	        cjne    r1,#56h,tu_a0
10117:
10118:	  207F	E8		        mov     a,r0                ; Set R0 to point to R7 in selected bank
10119:	  2080	24 06		        add     a,#06h
10120:	  2082	F8		        mov     r0,a
10121:	  2083	E6		        mov     a,@r0               ; Check R7
10122:	  2084	B4 34 0D	        cjne    a,#34h,tu_a0
10123:
10124:	  2087	74 78		        mov     a,#78h              ; Ok, now write to R7 with reg addressing...
10125:	  2089	F6		        mov     @r0,a               ; ...and check by reading in indirect.
10126:	  208A	B4 78 07	        cjne    a,#78h,tu_a0
10127:
10128:	  208D	22		        ret
10129:
10130:	  208E			tu_a_done:
10131:	  208E	00		        nop
10132:				        eot     'a',tu_a0
10133+ 1			        putc    #'a'
10134+ 2  208F			??0868:
10135+ 2			        ;jnb     SCON.1,putc_loop
10136+ 2			        ;clr     SCON.1
10137+ 2  208F	75 99 61	        mov     SBUF,#'a'
10138+ 1  2092	80 06		        sjmp    ??0867
10139+ 1  2094			tu_a0:  putc    #'?'
10140+ 2  2094			??0869:
10141+ 2			        ;jnb     SCON.1,putc_loop
10142+ 2			        ;clr     SCON.1
10143+ 2  2094	75 99 3F	        mov     SBUF,#'?'
10144+ 1  2097	75 6E 01	        mov     fail,#001h
10145+ 1  209A			??0867:
10146:
10147:				        put_crlf                    ; end of test series
10148+ 1			        putc    #13
10149+ 2  209A			??0870:
10150+ 2			        ;jnb     SCON.1,putc_loop
10151+ 2			        ;clr     SCON.1
10152+ 2  209A	75 99 0D	        mov     SBUF,#13
10153+ 1			        putc    #10
10154+ 2  209D			??0871:
10155+ 2			        ;jnb     SCON.1,putc_loop
10156+ 2			        ;clr     SCON.1
10157+ 2  209D	75 99 0A	        mov     SBUF,#10
10158:
10159:
10160:				        ;-- Template for test series -------------------------------------------
10161:
10162:				        ;-- Test series X ------------------------------------------------------
10163:				        ;
10164:				        ; a.-
10165:
10166:				        ;putc    #'X'                ; start of test series
10167:				        ;put_crlf                    ; end of test series
10168:
10169:				        ;-----------------------------------------------------------------------
10170:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 183



 Line  I  Addr  Code            Source

10171:				        ; Test cases finished. Now print completion message dependent on the
10172:				        ; value of the fail flag.
10173:
10174:	  20A0	E5 6E		        mov     a,fail
10175:	  20A2	70 1A		        jnz     test_failed
10176:
10177:				        put_crlf
10178+ 1			        putc    #13
10179+ 2  20A4			??0872:
10180+ 2			        ;jnb     SCON.1,putc_loop
10181+ 2			        ;clr     SCON.1
10182+ 2  20A4	75 99 0D	        mov     SBUF,#13
10183+ 1			        putc    #10
10184+ 2  20A7			??0873:
10185+ 2			        ;jnb     SCON.1,putc_loop
10186+ 2			        ;clr     SCON.1
10187+ 2  20A7	75 99 0A	        mov     SBUF,#10
10188:				        putc    #'P'
10189+ 1  20AA			??0874:
10190+ 1			        ;jnb     SCON.1,putc_loop
10191+ 1			        ;clr     SCON.1
10192+ 1  20AA	75 99 50	        mov     SBUF,#'P'
10193:				        putc    #'A'
10194+ 1  20AD			??0875:
10195+ 1			        ;jnb     SCON.1,putc_loop
10196+ 1			        ;clr     SCON.1
10197+ 1  20AD	75 99 41	        mov     SBUF,#'A'
10198:				        putc    #'S'
10199+ 1  20B0			??0876:
10200+ 1			        ;jnb     SCON.1,putc_loop
10201+ 1			        ;clr     SCON.1
10202+ 1  20B0	75 99 53	        mov     SBUF,#'S'
10203:				        putc    #'S'
10204+ 1  20B3			??0877:
10205+ 1			        ;jnb     SCON.1,putc_loop
10206+ 1			        ;clr     SCON.1
10207+ 1  20B3	75 99 53	        mov     SBUF,#'S'
10208:				        put_crlf
10209+ 1			        putc    #13
10210+ 2  20B6			??0878:
10211+ 2			        ;jnb     SCON.1,putc_loop
10212+ 2			        ;clr     SCON.1
10213+ 2  20B6	75 99 0D	        mov     SBUF,#13
10214+ 1			        putc    #10
10215+ 2  20B9			??0879:
10216+ 2			        ;jnb     SCON.1,putc_loop
10217+ 2			        ;clr     SCON.1
10218+ 2  20B9	75 99 0A	        mov     SBUF,#10
10219:	  20BC	80 1A		        sjmp    quit
10220:
10221:	  20BE			test_failed:
10222:				        put_crlf
10223+ 1			        putc    #13
10224+ 2  20BE			??0880:
10225+ 2			        ;jnb     SCON.1,putc_loop
10226+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 184



 Line  I  Addr  Code            Source

10227+ 2  20BE	75 99 0D	        mov     SBUF,#13
10228+ 1			        putc    #10
10229+ 2  20C1			??0881:
10230+ 2			        ;jnb     SCON.1,putc_loop
10231+ 2			        ;clr     SCON.1
10232+ 2  20C1	75 99 0A	        mov     SBUF,#10
10233:				        putc    #'F'
10234+ 1  20C4			??0882:
10235+ 1			        ;jnb     SCON.1,putc_loop
10236+ 1			        ;clr     SCON.1
10237+ 1  20C4	75 99 46	        mov     SBUF,#'F'
10238:				        putc    #'A'
10239+ 1  20C7			??0883:
10240+ 1			        ;jnb     SCON.1,putc_loop
10241+ 1			        ;clr     SCON.1
10242+ 1  20C7	75 99 41	        mov     SBUF,#'A'
10243:				        putc    #'I'
10244+ 1  20CA			??0884:
10245+ 1			        ;jnb     SCON.1,putc_loop
10246+ 1			        ;clr     SCON.1
10247+ 1  20CA	75 99 49	        mov     SBUF,#'I'
10248:				        putc    #'L'
10249+ 1  20CD			??0885:
10250+ 1			        ;jnb     SCON.1,putc_loop
10251+ 1			        ;clr     SCON.1
10252+ 1  20CD	75 99 4C	        mov     SBUF,#'L'
10253:				        put_crlf
10254+ 1			        putc    #13
10255+ 2  20D0			??0886:
10256+ 2			        ;jnb     SCON.1,putc_loop
10257+ 2			        ;clr     SCON.1
10258+ 2  20D0	75 99 0D	        mov     SBUF,#13
10259+ 1			        putc    #10
10260+ 2  20D3			??0887:
10261+ 2			        ;jnb     SCON.1,putc_loop
10262+ 2			        ;clr     SCON.1
10263+ 2  20D3	75 99 0A	        mov     SBUF,#10
10264:	  20D6	80 00		        sjmp    quit
10265:
10266:				        ;-- End of test program, enter single-instruction endless loop
10267:	  20D8	01 D8		quit:   ajmp    $
10268:
10269:
10270:				        ; We'll place a few test routines in the 2nd half of the code space so
10271:				        ; we can test long jumps and calls onto different code pages.
10272:		N      8000	        org     8000h
10273:
10274:				        ; tr_sub2: part of the JMP @A+DPTR test.
10275:				        ; HAS TO BE in 8000h so we can test the A+DPTR carry propagation!
10276:	  8000			tr_sub2:
10277:	  8000	02 1E BD	        jmp     tr_rv3
10278:	  8003	02 1E CA	        jmp     tr_c0
10279:				        ; Make sure the assumption we'll make in the test is actually valid
10280:		N      0000	        if      LOW(tr_sub2) ne 0
10281:				        $error("Label 'tr_sub2' must be at an address multiple of 256 to properly test JMP @A+DPTR")
10282:				        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 185



 Line  I  Addr  Code            Source

10283:
10284:				        ; tr_sub3: part of the LJMP test.
10285:	  8006			tr_sub3:
10286:	  8006	02 1E D8	        jmp     tr_rv4
10287:	  8009	02 1E DF	        jmp     tr_d0
10288:
10289:				        ; tr_sub1: part of the LCALL test.
10290:	  800C			tr_sub1:
10291:	  800C	E5 81		        mov     A,SP
10292:	  800E	B4 53 0D	        cjne    A,#53h,tr_sub1_fail ; ...verify the SP value...
10293:	  8011	E5 52		        mov     A,52h               ; ...and verify the pushed ret address
10294:	  8013	B4 A4 08	        cjne    A,#LOW(tr_rv1),tr_sub1_fail
10295:	  8016	E5 53		        mov     A,53h
10296:	  8018	B4 1E 03	        cjne    A,#HIGH(tr_rv1),tr_sub1_fail
10297:	  801B	02 1E A6	        ljmp    tr_rv2
10298:	  801E			tr_sub1_fail:
10299:	  801E	02 1E AC	        ljmp    tr_b0
10300:
10301:
10302:				        end





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 186





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0000				  CODE	    0033	 177
??0001				  CODE	    0036	 185
??0002				  CODE	    003B	 192
??0003				  CODE	    0041	 198
??0004				  CODE	    0046	 206
??0005				  CODE	    0054	 215
??0006				  CODE	    005D	 222
??0007				  CODE	    0069	 232
??0008				  CODE	    007D	 252
??0009				  CODE	    0072	 241
??0010				  CODE	    0077	 247
??0011				  CODE	    0090	 271
??0012				  CODE	    0085	 260
??0013				  CODE	    008A	 266
??0014				  CODE	    0090	 275
??0015				  CODE	    0093	 280
??0016				  CODE	    0096	 297
??0017				  CODE	    00D4	 354
??0018				  CODE	    00C9	 343
??0019				  CODE	    00CE	 349
??0020				  CODE	    00D9	 359
??0021				  CODE	    00E8	 369
??0022				  CODE	    00EE	 375
??0023				  CODE	    00FE	 401
??0024				  CODE	    00FC	 400
??0025				  CODE	    00F6	 395
??0026				  CODE	    010E	 412
??0027				  CODE	    010C	 411
??0028				  CODE	    0106	 406
??0029				  CODE	    011E	 423
??0030				  CODE	    011C	 422
??0031				  CODE	    0116	 417
??0032				  CODE	    012E	 434
??0033				  CODE	    012C	 433
??0034				  CODE	    0126	 428
??0035				  CODE	    013E	 445
??0036				  CODE	    013C	 444
??0037				  CODE	    0136	 439
??0038				  CODE	    014E	 456
??0039				  CODE	    014C	 455
??0040				  CODE	    0146	 450
??0041				  CODE	    015E	 467
??0042				  CODE	    015C	 466
??0043				  CODE	    0156	 461
??0044				  CODE	    016E	 478
??0045				  CODE	    016C	 477
??0046				  CODE	    0166	 472
??0047				  CODE	    0190	 502
??0048				  CODE	    0185	 491
??0049				  CODE	    018A	 497

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 187



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0050				  CODE	    01A7	 525
??0051				  CODE	    019C	 514
??0052				  CODE	    01A1	 520
??0053				  CODE	    01D4	 567
??0054				  CODE	    01C9	 556
??0055				  CODE	    01CE	 562
??0056				  CODE	    01E3	 592
??0057				  CODE	    01E1	 591
??0058				  CODE	    01DB	 586
??0059				  CODE	    01F5	 604
??0060				  CODE	    01F3	 603
??0061				  CODE	    01ED	 598
??0062				  CODE	    0217	 629
??0063				  CODE	    020C	 618
??0064				  CODE	    0211	 624
??0065				  CODE	    022B	 640
??0066				  CODE	    0236	 648
??0067				  CODE	    0249	 668
??0068				  CODE	    023E	 657
??0069				  CODE	    0243	 663
??0070				  CODE	    0249	 672
??0071				  CODE	    024C	 677
??0072				  CODE	    024F	 706
??0073				  CODE	    025D	 716
??0074				  CODE	    0268	 724
??0075				  CODE	    027C	 744
??0076				  CODE	    0271	 733
??0077				  CODE	    0276	 739
??0078				  CODE	    0292	 764
??0079				  CODE	    0287	 753
??0080				  CODE	    028C	 759
??0081				  CODE	    029C	 772
??0082				  CODE	    02A6	 780
??0083				  CODE	    02B9	 800
??0084				  CODE	    02AE	 789
??0085				  CODE	    02B3	 795
??0086				  CODE	    02D6	 824
??0087				  CODE	    02CB	 813
??0088				  CODE	    02D0	 819
??0089				  CODE	    0303	 859
??0090				  CODE	    02F8	 848
??0091				  CODE	    02FD	 854
??0092				  CODE	    0326	 887
??0093				  CODE	    031B	 876
??0094				  CODE	    0320	 882
??0095				  CODE	    0340	 910
??0096				  CODE	    0335	 899
??0097				  CODE	    033A	 905
??0098				  CODE	    035E	 936
??0099				  CODE	    0353	 925
??0100				  CODE	    0358	 931
??0101				  CODE	    036C	 944
??0102				  CODE	    0377	 952
??0103				  CODE	    038B	 972
??0104				  CODE	    0380	 961
??0105				  CODE	    0385	 967

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 188



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0106				  CODE	    03A8	 995
??0107				  CODE	    039D	 984
??0108				  CODE	    03A2	 990
??0109				  CODE	    03D5	1030
??0110				  CODE	    03CA	1019
??0111				  CODE	    03CF	1025
??0112				  CODE	    03F8	1058
??0113				  CODE	    03ED	1047
??0114				  CODE	    03F2	1053
??0115				  CODE	    0412	1081
??0116				  CODE	    0407	1070
??0117				  CODE	    040C	1076
??0118				  CODE	    0430	1107
??0119				  CODE	    0425	1096
??0120				  CODE	    042A	1102
??0121				  CODE	    0430	1113
??0122				  CODE	    0433	1118
??0123				  CODE	    0436	1136
??0124				  CODE	    044E	1160
??0125				  CODE	    0443	1149
??0126				  CODE	    0448	1155
??0127				  CODE	    0475	1195
??0128				  CODE	    046A	1184
??0129				  CODE	    046F	1190
??0130				  CODE	    049B	1229
??0131				  CODE	    0490	1218
??0132				  CODE	    0495	1224
??0133				  CODE	    04D3	1275
??0134				  CODE	    04C8	1264
??0135				  CODE	    04CD	1270
??0136				  CODE	    04D3	1279
??0137				  CODE	    04D6	1284
??0138				  CODE	    04D9	1302
??0139				  CODE	    04F6	1341
??0140				  CODE	    04EB	1330
??0141				  CODE	    04F0	1336
??0142				  CODE	    057B	1431
??0143				  CODE	    0570	1420
??0144				  CODE	    0575	1426
??0145				  CODE	    05A8	1468
??0146				  CODE	    059D	1457
??0147				  CODE	    05A2	1463
??0148				  CODE	    05BB	1487
??0149				  CODE	    05B0	1476
??0150				  CODE	    05B5	1482
??0151				  CODE	    05DD	1513
??0152				  CODE	    05D2	1502
??0153				  CODE	    05D7	1508
??0154				  CODE	    05F5	1547
??0155				  CODE	    05EA	1536
??0156				  CODE	    05EF	1542
??0157				  CODE	    066A	1629
??0158				  CODE	    065F	1618
??0159				  CODE	    0664	1624
??0160				  CODE	    0693	1664
??0161				  CODE	    0688	1653

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 189



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0162				  CODE	    068D	1659
??0163				  CODE	    06B5	1690
??0164				  CODE	    06AA	1679
??0165				  CODE	    06AF	1685
??0166				  CODE	    06B5	1694
??0167				  CODE	    06B8	1699
??0168				  CODE	    06BB	1718
??0169				  CODE	    0711	1784
??0170				  CODE	    0706	1773
??0171				  CODE	    070B	1779
??0172				  CODE	    072E	1810
??0173				  CODE	    0723	1799
??0174				  CODE	    0728	1805
??0175				  CODE	    0744	1830
??0176				  CODE	    0739	1819
??0177				  CODE	    073E	1825
??0178				  CODE	    078F	1884
??0179				  CODE	    0784	1873
??0180				  CODE	    0789	1879
??0181				  CODE	    07AE	1910
??0182				  CODE	    07A3	1899
??0183				  CODE	    07A8	1905
??0184				  CODE	    07E9	1964
??0185				  CODE	    07DE	1953
??0186				  CODE	    07E3	1959
??0187				  CODE	    0804	1990
??0188				  CODE	    07F9	1979
??0189				  CODE	    07FE	1985
??0190				  CODE	    081D	2012
??0191				  CODE	    0812	2001
??0192				  CODE	    0817	2007
??0193				  CODE	    083C	2038
??0194				  CODE	    0831	2027
??0195				  CODE	    0836	2033
??0196				  CODE	    083C	2042
??0197				  CODE	    083F	2047
??0198				  CODE	    0842	2062
??0199				  CODE	    0861	2092
??0200				  CODE	    0856	2081
??0201				  CODE	    085B	2087
??0202				  CODE	    0893	2125
??0203				  CODE	    0888	2114
??0204				  CODE	    088D	2120
??0205				  CODE	    08AD	2148
??0206				  CODE	    08A2	2137
??0207				  CODE	    08A7	2143
??0208				  CODE	    08D8	2180
??0209				  CODE	    08CD	2169
??0210				  CODE	    08D2	2175
??0211				  CODE	    093B	2254
??0212				  CODE	    0930	2243
??0213				  CODE	    0935	2249
??0214				  CODE	    093B	2259
??0215				  CODE	    093E	2264
??0216				  CODE	    0941	2444
??0217				  CODE	    09C8	2672

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 190



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0218				  CODE	    0977	2540
??0219				  CODE	    0992	2584
??0220				  CODE	    09AD	2628
??0221				  CODE	    09DC	2706
??0222				  CODE	    09F3	2738
??0223				  CODE	    0A0A	2771
??0224				  CODE	    097D	2546
??0225				  CODE	    0972	2535
??0226				  CODE	    0977	2541
??0227				  CODE	    0998	2590
??0228				  CODE	    098D	2579
??0229				  CODE	    0992	2585
??0230				  CODE	    09B3	2634
??0231				  CODE	    09A8	2623
??0232				  CODE	    09AD	2629
??0233				  CODE	    09CE	2678
??0234				  CODE	    09C3	2667
??0235				  CODE	    09C8	2673
??0236				  CODE	    09E2	2712
??0237				  CODE	    09D7	2701
??0238				  CODE	    09DC	2707
??0239				  CODE	    09F9	2744
??0240				  CODE	    09EE	2733
??0241				  CODE	    09F3	2739
??0242				  CODE	    0A10	2777
??0243				  CODE	    0A05	2766
??0244				  CODE	    0A0A	2772
??0245				  CODE	    0A10	2783
??0246				  CODE	    0A13	2788
??0247				  CODE	    0A16	2799
??0248				  CODE	    0A9D	3027
??0249				  CODE	    0A4C	2895
??0250				  CODE	    0A67	2939
??0251				  CODE	    0A82	2983
??0252				  CODE	    0AB1	3061
??0253				  CODE	    0AC8	3093
??0254				  CODE	    0ADF	3126
??0255				  CODE	    0A52	2901
??0256				  CODE	    0A47	2890
??0257				  CODE	    0A4C	2896
??0258				  CODE	    0A6D	2945
??0259				  CODE	    0A62	2934
??0260				  CODE	    0A67	2940
??0261				  CODE	    0A88	2989
??0262				  CODE	    0A7D	2978
??0263				  CODE	    0A82	2984
??0264				  CODE	    0AA3	3033
??0265				  CODE	    0A98	3022
??0266				  CODE	    0A9D	3028
??0267				  CODE	    0AB7	3067
??0268				  CODE	    0AAC	3056
??0269				  CODE	    0AB1	3062
??0270				  CODE	    0ACE	3099
??0271				  CODE	    0AC3	3088
??0272				  CODE	    0AC8	3094
??0273				  CODE	    0AE5	3132

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 191



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0274				  CODE	    0ADA	3121
??0275				  CODE	    0ADF	3127
??0276				  CODE	    0AE5	3138
??0277				  CODE	    0AE8	3143
??0278				  CODE	    0AEB	3154
??0279				  CODE	    0B72	3382
??0280				  CODE	    0B21	3250
??0281				  CODE	    0B3C	3294
??0282				  CODE	    0B57	3338
??0283				  CODE	    0B86	3416
??0284				  CODE	    0B9D	3448
??0285				  CODE	    0BB4	3481
??0286				  CODE	    0B27	3256
??0287				  CODE	    0B1C	3245
??0288				  CODE	    0B21	3251
??0289				  CODE	    0B42	3300
??0290				  CODE	    0B37	3289
??0291				  CODE	    0B3C	3295
??0292				  CODE	    0B5D	3344
??0293				  CODE	    0B52	3333
??0294				  CODE	    0B57	3339
??0295				  CODE	    0B78	3388
??0296				  CODE	    0B6D	3377
??0297				  CODE	    0B72	3383
??0298				  CODE	    0B8C	3422
??0299				  CODE	    0B81	3411
??0300				  CODE	    0B86	3417
??0301				  CODE	    0BA3	3454
??0302				  CODE	    0B98	3443
??0303				  CODE	    0B9D	3449
??0304				  CODE	    0BBA	3487
??0305				  CODE	    0BAF	3476
??0306				  CODE	    0BB4	3482
??0307				  CODE	    0BBA	3493
??0308				  CODE	    0BBD	3498
??0309				  CODE	    0BC0	3508
??0310				  CODE	    0BC8	3529
??0311				  CODE	    0BDC	3547
??0312				  CODE	    0BD1	3536
??0313				  CODE	    0BD6	3542
??0314				  CODE	    0BE0	3553
??0315				  CODE	    0BEC	3561
??0316				  CODE	    0BF8	3569
??0317				  CODE	    0C04	3577
??0318				  CODE	    0C10	3585
??0319				  CODE	    0C1C	3593
??0320				  CODE	    0C28	3601
??0321				  CODE	    0C34	3609
??0322				  CODE	    0C47	3627
??0323				  CODE	    0C3C	3616
??0324				  CODE	    0C41	3622
??0325				  CODE	    0C47	3631
??0326				  CODE	    0C4A	3636
??0327				  CODE	    0C4D	3648
??0328				  CODE	    0C50	3654
??0329				  CODE	    0D71	4013

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 192



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0330				  CODE	    0CCC	3809
??0331				  CODE	    0D03	3877
??0332				  CODE	    0D3A	3945
??0333				  CODE	    0D93	4059
??0336				  NUMBER    0000	3670
??0337				  NUMBER    0000	3698
??0338				  NUMBER    0000	3726
??0339				  NUMBER    0000	3754
??0340				  NUMBER    0000	3780
??0341				  CODE	    0CD2	3815
??0342				  CODE	    0CC7	3804
??0343				  CODE	    0CCC	3810
??0344				  NUMBER    0000	3822
??0345				  NUMBER    0000	3848
??0346				  CODE	    0D09	3883
??0347				  CODE	    0CFE	3872
??0348				  CODE	    0D03	3878
??0349				  NUMBER    0000	3890
??0350				  NUMBER    0000	3916
??0351				  CODE	    0D40	3951
??0352				  CODE	    0D35	3940
??0353				  CODE	    0D3A	3946
??0354				  NUMBER    0000	3958
??0355				  NUMBER    0000	3984
??0356				  CODE	    0D77	4019
??0357				  CODE	    0D6C	4008
??0358				  CODE	    0D71	4014
??0359				  NUMBER    0000	4030
??0360				  CODE	    0D99	4065
??0361				  CODE	    0D8E	4054
??0362				  CODE	    0D93	4060
??0363				  CODE	    0D99	4081
??0364				  CODE	    0EBA	4440
??0365				  CODE	    0E15	4236
??0366				  CODE	    0E4C	4304
??0367				  CODE	    0E83	4372
??0368				  CODE	    0EDC	4486
??0371				  NUMBER    0000	4097
??0372				  NUMBER    0000	4125
??0373				  NUMBER    0000	4153
??0374				  NUMBER    0000	4181
??0375				  NUMBER    0000	4207
??0376				  CODE	    0E1B	4242
??0377				  CODE	    0E10	4231
??0378				  CODE	    0E15	4237
??0379				  NUMBER    0000	4249
??0380				  NUMBER    0000	4275
??0381				  CODE	    0E52	4310
??0382				  CODE	    0E47	4299
??0383				  CODE	    0E4C	4305
??0384				  NUMBER    0000	4317
??0385				  NUMBER    0000	4343
??0386				  CODE	    0E89	4378
??0387				  CODE	    0E7E	4367
??0388				  CODE	    0E83	4373
??0389				  NUMBER    0000	4385

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 193



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0390				  NUMBER    0000	4411
??0391				  CODE	    0EC0	4446
??0392				  CODE	    0EB5	4435
??0393				  CODE	    0EBA	4441
??0394				  NUMBER    0000	4457
??0395				  CODE	    0EE2	4492
??0396				  CODE	    0ED7	4481
??0397				  CODE	    0EDC	4487
??0398				  CODE	    0EE2	4508
??0399				  CODE	    1003	4867
??0400				  CODE	    0F5E	4663
??0401				  CODE	    0F95	4731
??0402				  CODE	    0FCC	4799
??0403				  CODE	    1025	4913
??0406				  NUMBER    0000	4524
??0407				  NUMBER    0000	4552
??0408				  NUMBER    0000	4580
??0409				  NUMBER    0000	4608
??0410				  NUMBER    0000	4634
??0411				  CODE	    0F64	4669
??0412				  CODE	    0F59	4658
??0413				  CODE	    0F5E	4664
??0414				  NUMBER    0000	4676
??0415				  NUMBER    0000	4702
??0416				  CODE	    0F9B	4737
??0417				  CODE	    0F90	4726
??0418				  CODE	    0F95	4732
??0419				  NUMBER    0000	4744
??0420				  NUMBER    0000	4770
??0421				  CODE	    0FD2	4805
??0422				  CODE	    0FC7	4794
??0423				  CODE	    0FCC	4800
??0424				  NUMBER    0000	4812
??0425				  NUMBER    0000	4838
??0426				  CODE	    1009	4873
??0427				  CODE	    0FFE	4862
??0428				  CODE	    1003	4868
??0429				  NUMBER    0000	4884
??0430				  CODE	    102B	4919
??0431				  CODE	    1020	4908
??0432				  CODE	    1025	4914
??0433				  CODE	    102B	4935
??0434				  CODE	    114C	5294
??0435				  CODE	    10A7	5090
??0436				  CODE	    10DE	5158
??0437				  CODE	    1115	5226
??0438				  CODE	    116E	5340
??0441				  NUMBER    0000	4951
??0442				  NUMBER    0000	4979
??0443				  NUMBER    0000	5007
??0444				  NUMBER    0000	5035
??0445				  NUMBER    0000	5061
??0446				  CODE	    10AD	5096
??0447				  CODE	    10A2	5085
??0448				  CODE	    10A7	5091
??0449				  NUMBER    0000	5103

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 194



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0450				  NUMBER    0000	5129
??0451				  CODE	    10E4	5164
??0452				  CODE	    10D9	5153
??0453				  CODE	    10DE	5159
??0454				  NUMBER    0000	5171
??0455				  NUMBER    0000	5197
??0456				  CODE	    111B	5232
??0457				  CODE	    1110	5221
??0458				  CODE	    1115	5227
??0459				  NUMBER    0000	5239
??0460				  NUMBER    0000	5265
??0461				  CODE	    1152	5300
??0462				  CODE	    1147	5289
??0463				  CODE	    114C	5295
??0464				  NUMBER    0000	5311
??0465				  CODE	    1174	5346
??0466				  CODE	    1169	5335
??0467				  CODE	    116E	5341
??0468				  CODE	    1174	5364
??0469				  CODE	    1177	5369
??0470				  CODE	    117A	5381
??0471				  CODE	    117D	5387
??0472				  CODE	    129E	5746
??0473				  CODE	    11F9	5542
??0474				  CODE	    1230	5610
??0475				  CODE	    1267	5678
??0476				  CODE	    12C0	5792
??0479				  NUMBER    0000	5403
??0480				  NUMBER    0000	5431
??0481				  NUMBER    0000	5459
??0482				  NUMBER    0000	5487
??0483				  NUMBER    0000	5513
??0484				  CODE	    11FF	5548
??0485				  CODE	    11F4	5537
??0486				  CODE	    11F9	5543
??0487				  NUMBER    0000	5555
??0488				  NUMBER    0000	5581
??0489				  CODE	    1236	5616
??0490				  CODE	    122B	5605
??0491				  CODE	    1230	5611
??0492				  NUMBER    0000	5623
??0493				  NUMBER    0000	5649
??0494				  CODE	    126D	5684
??0495				  CODE	    1262	5673
??0496				  CODE	    1267	5679
??0497				  NUMBER    0000	5691
??0498				  NUMBER    0000	5717
??0499				  CODE	    12A4	5752
??0500				  CODE	    1299	5741
??0501				  CODE	    129E	5747
??0502				  NUMBER    0000	5763
??0503				  CODE	    12C6	5798
??0504				  CODE	    12BB	5787
??0505				  CODE	    12C0	5793
??0506				  CODE	    12C6	5814
??0507				  CODE	    13E7	6173

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 195



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0508				  CODE	    1342	5969
??0509				  CODE	    1379	6037
??0510				  CODE	    13B0	6105
??0511				  CODE	    1409	6219
??0514				  NUMBER    0000	5830
??0515				  NUMBER    0000	5858
??0516				  NUMBER    0000	5886
??0517				  NUMBER    0000	5914
??0518				  NUMBER    0000	5940
??0519				  CODE	    1348	5975
??0520				  CODE	    133D	5964
??0521				  CODE	    1342	5970
??0522				  NUMBER    0000	5982
??0523				  NUMBER    0000	6008
??0524				  CODE	    137F	6043
??0525				  CODE	    1374	6032
??0526				  CODE	    1379	6038
??0527				  NUMBER    0000	6050
??0528				  NUMBER    0000	6076
??0529				  CODE	    13B6	6111
??0530				  CODE	    13AB	6100
??0531				  CODE	    13B0	6106
??0532				  NUMBER    0000	6118
??0533				  NUMBER    0000	6144
??0534				  CODE	    13ED	6179
??0535				  CODE	    13E2	6168
??0536				  CODE	    13E7	6174
??0537				  NUMBER    0000	6190
??0538				  CODE	    140F	6225
??0539				  CODE	    1404	6214
??0540				  CODE	    1409	6220
??0541				  CODE	    140F	6241
??0542				  CODE	    1530	6600
??0543				  CODE	    148B	6396
??0544				  CODE	    14C2	6464
??0545				  CODE	    14F9	6532
??0546				  CODE	    1552	6646
??0549				  NUMBER    0000	6257
??0550				  NUMBER    0000	6285
??0551				  NUMBER    0000	6313
??0552				  NUMBER    0000	6341
??0553				  NUMBER    0000	6367
??0554				  CODE	    1491	6402
??0555				  CODE	    1486	6391
??0556				  CODE	    148B	6397
??0557				  NUMBER    0000	6409
??0558				  NUMBER    0000	6435
??0559				  CODE	    14C8	6470
??0560				  CODE	    14BD	6459
??0561				  CODE	    14C2	6465
??0562				  NUMBER    0000	6477
??0563				  NUMBER    0000	6503
??0564				  CODE	    14FF	6538
??0565				  CODE	    14F4	6527
??0566				  CODE	    14F9	6533
??0567				  NUMBER    0000	6545

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 196



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0568				  NUMBER    0000	6571
??0569				  CODE	    1536	6606
??0570				  CODE	    152B	6595
??0571				  CODE	    1530	6601
??0572				  NUMBER    0000	6617
??0573				  CODE	    1558	6652
??0574				  CODE	    154D	6641
??0575				  CODE	    1552	6647
??0576				  CODE	    1558	6668
??0577				  CODE	    1679	7027
??0578				  CODE	    15D4	6823
??0579				  CODE	    160B	6891
??0580				  CODE	    1642	6959
??0581				  CODE	    169B	7073
??0584				  NUMBER    0001	6684
??0585				  NUMBER    0001	6712
??0586				  NUMBER    0001	6740
??0587				  NUMBER    0001	6768
??0588				  NUMBER    0001	6794
??0589				  CODE	    15DA	6829
??0590				  CODE	    15CF	6818
??0591				  CODE	    15D4	6824
??0592				  NUMBER    0001	6836
??0593				  NUMBER    0001	6862
??0594				  CODE	    1611	6897
??0595				  CODE	    1606	6886
??0596				  CODE	    160B	6892
??0597				  NUMBER    0001	6904
??0598				  NUMBER    0001	6930
??0599				  CODE	    1648	6965
??0600				  CODE	    163D	6954
??0601				  CODE	    1642	6960
??0602				  NUMBER    0001	6972
??0603				  NUMBER    0001	6998
??0604				  CODE	    167F	7033
??0605				  CODE	    1674	7022
??0606				  CODE	    1679	7028
??0607				  NUMBER    0001	7044
??0608				  CODE	    16A1	7079
??0609				  CODE	    1696	7068
??0610				  CODE	    169B	7074
??0611				  CODE	    16A1	7095
??0612				  CODE	    17C2	7454
??0613				  CODE	    171D	7250
??0614				  CODE	    1754	7318
??0615				  CODE	    178B	7386
??0616				  CODE	    17E4	7500
??0619				  NUMBER    0001	7111
??0620				  NUMBER    0001	7139
??0621				  NUMBER    0001	7167
??0622				  NUMBER    0001	7195
??0623				  NUMBER    0001	7221
??0624				  CODE	    1723	7256
??0625				  CODE	    1718	7245
??0626				  CODE	    171D	7251
??0627				  NUMBER    0001	7263

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 197



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0628				  NUMBER    0001	7289
??0629				  CODE	    175A	7324
??0630				  CODE	    174F	7313
??0631				  CODE	    1754	7319
??0632				  NUMBER    0001	7331
??0633				  NUMBER    0001	7357
??0634				  CODE	    1791	7392
??0635				  CODE	    1786	7381
??0636				  CODE	    178B	7387
??0637				  NUMBER    0001	7399
??0638				  NUMBER    0001	7425
??0639				  CODE	    17C8	7460
??0640				  CODE	    17BD	7449
??0641				  CODE	    17C2	7455
??0642				  NUMBER    0001	7471
??0643				  CODE	    17EA	7506
??0644				  CODE	    17DF	7495
??0645				  CODE	    17E4	7501
??0646				  CODE	    17EA	7525
??0647				  CODE	    17ED	7530
??0648				  CODE	    17F0	7542
??0649				  CODE	    17F3	7548
??0650				  CODE	    1914	7907
??0651				  CODE	    186F	7703
??0652				  CODE	    18A6	7771
??0653				  CODE	    18DD	7839
??0654				  CODE	    1936	7953
??0657				  NUMBER    0000	7564
??0658				  NUMBER    0000	7592
??0659				  NUMBER    0000	7620
??0660				  NUMBER    0000	7648
??0661				  NUMBER    0000	7674
??0662				  CODE	    1875	7709
??0663				  CODE	    186A	7698
??0664				  CODE	    186F	7704
??0665				  NUMBER    0000	7716
??0666				  NUMBER    0000	7742
??0667				  CODE	    18AC	7777
??0668				  CODE	    18A1	7766
??0669				  CODE	    18A6	7772
??0670				  NUMBER    0000	7784
??0671				  NUMBER    0000	7810
??0672				  CODE	    18E3	7845
??0673				  CODE	    18D8	7834
??0674				  CODE	    18DD	7840
??0675				  NUMBER    0000	7852
??0676				  NUMBER    0000	7878
??0677				  CODE	    191A	7913
??0678				  CODE	    190F	7902
??0679				  CODE	    1914	7908
??0680				  NUMBER    0000	7924
??0681				  CODE	    193C	7959
??0682				  CODE	    1931	7948
??0683				  CODE	    1936	7954
??0684				  CODE	    193C	7975
??0685				  CODE	    1A5D	8334

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 198



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0686				  CODE	    19B8	8130
??0687				  CODE	    19EF	8198
??0688				  CODE	    1A26	8266
??0689				  CODE	    1A7F	8380
??0692				  NUMBER    0001	7991
??0693				  NUMBER    0001	8019
??0694				  NUMBER    0001	8047
??0695				  NUMBER    0001	8075
??0696				  NUMBER    0001	8101
??0697				  CODE	    19BE	8136
??0698				  CODE	    19B3	8125
??0699				  CODE	    19B8	8131
??0700				  NUMBER    0001	8143
??0701				  NUMBER    0001	8169
??0702				  CODE	    19F5	8204
??0703				  CODE	    19EA	8193
??0704				  CODE	    19EF	8199
??0705				  NUMBER    0001	8211
??0706				  NUMBER    0001	8237
??0707				  CODE	    1A2C	8272
??0708				  CODE	    1A21	8261
??0709				  CODE	    1A26	8267
??0710				  NUMBER    0001	8279
??0711				  NUMBER    0001	8305
??0712				  CODE	    1A63	8340
??0713				  CODE	    1A58	8329
??0714				  CODE	    1A5D	8335
??0715				  NUMBER    0001	8351
??0716				  CODE	    1A85	8386
??0717				  CODE	    1A7A	8375
??0718				  CODE	    1A7F	8381
??0719				  CODE	    1A85	8402
??0720				  CODE	    1BA6	8761
??0721				  CODE	    1B01	8557
??0722				  CODE	    1B38	8625
??0723				  CODE	    1B6F	8693
??0724				  CODE	    1BC8	8807
??0727				  NUMBER    0000	8418
??0728				  NUMBER    0000	8446
??0729				  NUMBER    0000	8474
??0730				  NUMBER    0000	8502
??0731				  NUMBER    0000	8528
??0732				  CODE	    1B07	8563
??0733				  CODE	    1AFC	8552
??0734				  CODE	    1B01	8558
??0735				  NUMBER    0000	8570
??0736				  NUMBER    0000	8596
??0737				  CODE	    1B3E	8631
??0738				  CODE	    1B33	8620
??0739				  CODE	    1B38	8626
??0740				  NUMBER    0000	8638
??0741				  NUMBER    0000	8664
??0742				  CODE	    1B75	8699
??0743				  CODE	    1B6A	8688
??0744				  CODE	    1B6F	8694
??0745				  NUMBER    0000	8706

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 199



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0746				  NUMBER    0000	8732
??0747				  CODE	    1BAC	8767
??0748				  CODE	    1BA1	8756
??0749				  CODE	    1BA6	8762
??0750				  NUMBER    0000	8778
??0751				  CODE	    1BCE	8813
??0752				  CODE	    1BC3	8802
??0753				  CODE	    1BC8	8808
??0754				  CODE	    1BCE	8829
??0755				  CODE	    1CEF	9188
??0756				  CODE	    1C4A	8984
??0757				  CODE	    1C81	9052
??0758				  CODE	    1CB8	9120
??0759				  CODE	    1D11	9234
??0762				  NUMBER    0001	8845
??0763				  NUMBER    0001	8873
??0764				  NUMBER    0001	8901
??0765				  NUMBER    0001	8929
??0766				  NUMBER    0001	8955
??0767				  CODE	    1C50	8990
??0768				  CODE	    1C45	8979
??0769				  CODE	    1C4A	8985
??0770				  NUMBER    0001	8997
??0771				  NUMBER    0001	9023
??0772				  CODE	    1C87	9058
??0773				  CODE	    1C7C	9047
??0774				  CODE	    1C81	9053
??0775				  NUMBER    0001	9065
??0776				  NUMBER    0001	9091
??0777				  CODE	    1CBE	9126
??0778				  CODE	    1CB3	9115
??0779				  CODE	    1CB8	9121
??0780				  NUMBER    0001	9133
??0781				  NUMBER    0001	9159
??0782				  CODE	    1CF5	9194
??0783				  CODE	    1CEA	9183
??0784				  CODE	    1CEF	9189
??0785				  NUMBER    0001	9205
??0786				  CODE	    1D17	9240
??0787				  CODE	    1D0C	9229
??0788				  CODE	    1D11	9235
??0789				  CODE	    1D17	9260
??0790				  CODE	    1D1A	9265
??0791				  CODE	    1D1D	9279
??0792				  CODE	    1D40	9308
??0793				  CODE	    1D35	9297
??0794				  CODE	    1D3A	9303
??0795				  CODE	    1D5C	9333
??0796				  CODE	    1D51	9322
??0797				  CODE	    1D56	9328
??0798				  CODE	    1D7C	9359
??0799				  CODE	    1D71	9348
??0800				  CODE	    1D76	9354
??0801				  CODE	    1D97	9383
??0802				  CODE	    1D8C	9372
??0803				  CODE	    1D91	9378

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 200



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0804				  CODE	    1D97	9387
??0805				  CODE	    1D9A	9392
??0806				  CODE	    1D9D	9405
??0807				  CODE	    1DBE	9433
??0808				  CODE	    1DB3	9422
??0809				  CODE	    1DB8	9428
??0810				  CODE	    1DDE	9469
??0811				  CODE	    1DD3	9458
??0812				  CODE	    1DD8	9464
??0813				  CODE	    1E00	9499
??0814				  CODE	    1DF5	9488
??0815				  CODE	    1DFA	9494
??0816				  CODE	    1E23	9530
??0817				  CODE	    1E18	9519
??0818				  CODE	    1E1D	9525
??0819				  CODE	    1E23	9534
??0820				  CODE	    1E26	9539
??0821				  CODE	    1E29	9550
??0822				  CODE	    1E45	9577
??0823				  CODE	    1E3A	9566
??0824				  CODE	    1E3F	9572
??0825				  CODE	    1E6B	9611
??0826				  CODE	    1E60	9600
??0827				  CODE	    1E65	9606
??0828				  CODE	    1E6B	9615
??0829				  CODE	    1E6E	9620
??0830				  CODE	    1E71	9642
??0831				  CODE	    1EA1	9678
??0832				  CODE	    1E96	9667
??0833				  CODE	    1E9B	9673
??0834				  CODE	    1EB2	9697
??0835				  CODE	    1EA7	9686
??0836				  CODE	    1EAC	9692
??0837				  CODE	    1ED0	9727
??0838				  CODE	    1EC5	9716
??0839				  CODE	    1ECA	9722
??0840				  CODE	    1EE5	9749
??0841				  CODE	    1EDA	9738
??0842				  CODE	    1EDF	9744
??0843				  CODE	    1EFC	9775
??0844				  CODE	    1EF1	9764
??0845				  CODE	    1EF6	9770
??0846				  CODE	    1EFC	9779
??0847				  CODE	    1EFF	9784
??0848				  CODE	    1F02	9799
??0849				  CODE	    1F33	9837
??0850				  CODE	    1F28	9826
??0851				  CODE	    1F2D	9832
??0852				  CODE	    1F61	9872
??0853				  CODE	    1F56	9861
??0854				  CODE	    1F5B	9867
??0855				  CODE	    1F61	9877
??0856				  CODE	    1F64	9882
??0857				  CODE	    1F67	9894
??0858				  CODE	    1FB1	9966
??0859				  CODE	    1FA6	9955

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 201



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0860				  CODE	    1FAB	9961
??0861				  CODE	    201F       10046
??0862				  CODE	    2014       10035
??0863				  CODE	    2019       10041
??0864				  CODE	    2045       10063
??0865				  CODE	    2048       10068
??0866				  CODE	    204B       10082
??0867				  CODE	    209A       10145
??0868				  CODE	    208F       10134
??0869				  CODE	    2094       10140
??0870				  CODE	    209A       10149
??0871				  CODE	    209D       10154
??0872				  CODE	    20A4       10179
??0873				  CODE	    20A7       10184
??0874				  CODE	    20AA       10189
??0875				  CODE	    20AD       10194
??0876				  CODE	    20B0       10199
??0877				  CODE	    20B3       10204
??0878				  CODE	    20B6       10210
??0879				  CODE	    20B9       10215
??0880				  CODE	    20BE       10224
??0881				  CODE	    20C1       10229
??0882				  CODE	    20C4       10234
??0883				  CODE	    20C7       10239
??0884				  CODE	    20CA       10244
??0885				  CODE	    20CD       10249
??0886				  CODE	    20D0       10255
??0887				  CODE	    20D3       10260
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6	  87
ACC				  DATA	      E0	  58
ARG0				  NUMBER    00C3	2451
ARG1				  NUMBER    00C5	2452
B				  DATA	      F0	  59
CY				  BIT	      D7	  88
DIR0				  NUMBER    0060	 101
DIR1				  NUMBER    0061	 102
DPH				  DATA	      83	  41
DPL				  DATA	      82	  40
EA				  BIT	      AF	  73
EOT				  MACRO	        	 131
ES				  BIT	      AC	  71
ET0				  BIT	      A9	  68
EX0				  BIT	      A8	  67
EXTI0				  CODE	    0003	  92
EXTI1				  CODE	    0013	  94
EXTINT0				  DATA	      C0	  56
F0				  BIT	      D5	  86
FAIL				  NUMBER    006E	 103
IE				  DATA	      A8	  53
NLOOPS				  NUMBER    0003	3526
OV				  BIT	      D2	  83
P				  BIT	      D0	  82
P0				  DATA	      80	  38
P1				  DATA	      90	  49

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 202



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
P2				  DATA	      A0	  52
P3				  DATA	      B0	  54
PSW				  DATA	      D0	  57
PUTC				  MACRO	        	 112
PUT_CRLF			  MACRO	        	 121
QUIT				  CODE	    20D8       10267
RES				  NUMBER    0001	2453
RESET				  CODE	    0000	  91
RS0				  BIT	      D3	  84
RS1				  BIT	      D4	  85
RXIRQ				  BIT	      99	  77
RXRDY				  BIT	      9D	  79
SAVED_PSW			  NUMBER    0070	 104
SAVE_PSW			  MACRO	        	2283
SBUF				  DATA	      99	  51
SCON				  DATA	      98	  50
SET_CY				  MACRO	        	2297
SINT				  CODE	    0023	  96
SP				  DATA	      81	  39
STACK0				  NUMBER    009F	 105
START				  CODE	    0030	 153
S_SUB0				  CODE	    1F19	9815
S_SUB1				  CODE	    1F23	9821
S_SUB2				  CODE	    1F47	9850
S_SUB3				  CODE	    1F51	9856
T0ARL				  BIT	      8C	  63
T0CEN				  BIT	      8D	  64
T0IRQ				  BIT	      88	  62
TA_B0				  CODE	    0041	 197
TA_C0				  CODE	    0044	 204
TA_C1				  CODE	    004B	 211
TA_C2				  CODE	    005A	 220
TA_C3				  CODE	    0046	 205
TA_C4				  CODE	    0063	 227
TA_D1				  CODE	    006F	 237
TA_D2				  CODE	    0077	 246
TA_E1				  CODE	    008A	 265
TB_A1				  CODE	    00CE	 348
TB_B0				  CODE	    00DF	 364
TB_B1				  CODE	    00E8	 368
TB_B2				  CODE	    00EE	 374
TB_C0				  CODE	    0171	 480
TB_C1				  CODE	    0179	 483
TB_C2				  CODE	    018A	 496
TB_C3				  CODE	    017E	 485
TB_C4				  CODE	    0183	 487
TB_D0				  CODE	    01A1	 519
TB_E0				  CODE	    01CE	 561
TB_F0				  CODE	    01F8	 606
TB_F1				  CODE	    0200	 610
TB_F2				  CODE	    0211	 623
TB_F3				  CODE	    0205	 612
TB_F4				  CODE	    020A	 614
TB_G0				  CODE	    0243	 662
TB_G1				  CODE	    0231	 645
TB_G2				  CODE	    023C	 653

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 203



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TB_MA				  MACRO	        	 302
TB_MC				  MACRO	        	 380
TB_ME				  MACRO	        	 527
TB_MF				  MACRO	        	 569
TCH				  DATA	      8F	  48
TCL				  DATA	      8E	  47
TC_A0				  CODE	    0265	 722
TC_A1				  CODE	    0257	 713
TC_A2				  CODE	    026E	 729
TC_A3				  CODE	    0276	 738
TC_B1				  CODE	    028C	 758
TC_C0				  CODE	    02A4	 778
TC_C1				  CODE	    0296	 768
TC_C2				  CODE	    02AC	 785
TC_C3				  CODE	    02B3	 794
TC_D0				  CODE	    02D0	 818
TC_D1				  CODE	    02C1	 806
TC_E0				  CODE	    02FD	 853
TC_F0				  CODE	    0320	 881
TC_G0				  CODE	    033A	 904
TC_H0				  CODE	    0358	 930
TC_H1				  CODE	    034E	 919
TC_H2				  CODE	    0345	 915
TC_H3				  CODE	    0353	 921
TC_I0				  CODE	    0374	 950
TC_I1				  CODE	    0366	 941
TC_I2				  CODE	    037D	 957
TC_I3				  CODE	    0385	 966
TC_J0				  CODE	    03A2	 989
TC_J1				  CODE	    0393	 977
TC_K0				  CODE	    03CF	1024
TC_L0				  CODE	    03F2	1052
TC_M0				  CODE	    040C	1075
TC_N0				  CODE	    042A	1101
TC_N1				  CODE	    0420	1090
TC_N2				  CODE	    0417	1086
TC_N3				  CODE	    0425	1092
TD_A0				  CODE	    0448	1154
TD_B0				  CODE	    046F	1189
TD_C0				  CODE	    0495	1223
TD_D0				  CODE	    04CD	1269
TEST_FAILED			  CODE	    20BE       10221
TE_A0				  CODE	    04F0	1335
TE_B0				  CODE	    0575	1425
TE_C0				  CODE	    05A2	1462
TE_D0				  CODE	    05B5	1481
TE_E0				  CODE	    05D7	1507
TE_F0				  CODE	    05EF	1541
TE_G0				  CODE	    0664	1623
TE_H0				  CODE	    068D	1658
TE_I0				  CODE	    06AF	1684
TE_MA				  MACRO	        	1307
TE_MF				  MACRO	        	1515
TF_A0				  CODE	    070B	1778
TF_B0				  CODE	    0728	1804
TF_C0				  CODE	    073E	1824

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 204



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TF_D0				  CODE	    0789	1878
TF_E0				  CODE	    07A8	1904
TF_F0				  CODE	    07E3	1958
TF_G0				  CODE	    07FE	1984
TF_H0				  CODE	    0817	2006
TF_I0				  CODE	    0836	2032
TF_MA				  MACRO	        	1723
TF_MD				  MACRO	        	1832
TF_MF				  MACRO	        	1912
TG_A0				  CODE	    085B	2086
TG_B0				  CODE	    088D	2119
TG_C0				  CODE	    08A7	2142
TG_D0				  CODE	    08D2	2174
TG_E0				  CODE	    0935	2248
TG_MA				  MACRO	        	2184
TH				  DATA	      8D	  46
TIMER0				  CODE	    000B	  93
TIMER1				  CODE	    001B	  95
TIMER2				  CODE	    002B	  97
TK_A0				  CODE	    0BD6	3541
TK_B0				  CODE	    0C41	3621
TK_MA				  MACRO	        	3514
TL				  DATA	      8C	  45
TOP_MA				  MACRO	        	2311
TOP_MB				  MACRO	        	2329
TOP_MC				  MACRO	        	2347
TO_A0				  CODE	    1D3A	9302
TO_B0				  CODE	    1D56	9327
TO_C0				  CODE	    1D76	9353
TO_D0				  CODE	    1D91	9377
TP_A0				  CODE	    1DB8	9427
TP_B0				  CODE	    1DD8	9463
TP_C0				  CODE	    1DFA	9493
TP_D0				  CODE	    1E1D	9524
TQ0				  CODE	    1E37	9562
TQ1				  CODE	    1E33	9561
TQ_A0				  CODE	    1E3F	9571
TQ_B0				  CODE	    1E65	9605
TR_A0				  CODE	    1E9B	9672
TR_AJMP0			  CODE	    1EEB	9756
TR_B0				  CODE	    1EAC	9691
TR_C0				  CODE	    1ECA	9721
TR_D0				  CODE	    1EDF	9743
TR_E0				  CODE	    1EF6	9769
TR_RV0				  CODE	    1E85	9656
TR_RV1				  CODE	    1EA4	9682
TR_RV2				  CODE	    1EA6	9683
TR_RV3				  CODE	    1EBD	9709
TR_RV4				  CODE	    1ED8	9734
TR_RV5				  CODE	    1EED	9758
TR_SUB0				  CODE	    1E87	9657
TR_SUB1				  CODE	    800C       10290
TR_SUB1_FAIL			  CODE	    801E       10298
TR_SUB2				  CODE	    8000       10276
TR_SUB3				  CODE	    8006       10285
TSTAT				  DATA	      88	  43

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 205



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TST_ALU				  MACRO	        	2372
TST_PSW				  MACRO	        	2288
TS_A0				  CODE	    1F2D	9831
TS_B0				  CODE	    1F5B	9866
TT_A0				  CODE	    1FAB	9960
TT_A_DIVZERO			  CODE	    1FA0	9945
TT_A_LOOP			  CODE	    1F7B	9916
TT_A_NEXT			  CODE	    1FA2	9948
TT_A_TAB			  CODE	    1FB3	9969
TT_A_TAB_END			  CODE	    1FE0	9979
TT_B0				  CODE	    2019       10040
TT_B_0				  CODE	    2004       10019
TT_B_LOOP			  CODE	    1FE7	9993
TT_B_NOOVF			  CODE	    1FFE       10014
TT_B_TAB			  CODE	    2021       10049
TT_B_TAB_END			  CODE	    2045       10059
TU_A0				  CODE	    2094       10139
TU_A_DONE			  CODE	    208E       10130
TU_A_TEST			  CODE	    2070       10106
TXIRQ				  BIT	      98	  76
TXRDY				  BIT	      9C	  78
