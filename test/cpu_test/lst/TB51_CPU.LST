
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	src\tb51_cpu.a51
	Object File:	bin\tb51_cpu.hex
	List File:	lst\tb51_cpu.lst



 Line  I  Addr  Code            Source

    1:				;-------------------------------------------------------------------------------
    2:				; tb51_cpu.a51 -- MCS51 instruction set test bench.
    3:				;-------------------------------------------------------------------------------
    4:				; This program is meant to verify the basic operation of an MCS51 CPU
    5:				; instruction set implementation.
    6:				; It is far too weak to rely on it exclusively but it can help detect gross
    7:				; implementation errors (overclocked CPUs, timing errors in FPGA cores, that
    8:				; kind of thing).
    9:				;
   10:				; The program is not yet ready to run on actual hardware (UART interface).
   11:				;
   12:				; For a full verification of the instruction set, an instruction set exerciser
   13:				; such as 'zexall' for the Z80 would be more suitable. This one is too weak.
   14:				;
   15:				; The program is meant to run in actual hardware or on a simulated environment.
   16:				; In the latter case you can use the co-simulation features of the light52
   17:				; project to pinpoint bugs.
   18:				;
   19:				; FIXME add assembly option to run tests in an (possibly infinite) loop.
   20:				;-------------------------------------------------------------------------------
   21:				; Major limitations:
   22:				;   1.- PSW is not checked for undue changes.
   23:				;   2.- <#imm> instructions are tested with one imm value only.
   24:				;   3.- <rel> jumps tested with small values (not near corner values).
   25:				;   4.- <bit> tested on 1 byte only, on 2 bits only.
   26:				;   5.- BCD instructions (DA, XCHG) not tested at all.
   27:				;
   28:				; Note there are too many limitations to list. Use this test bench as a first
   29:				; approximation only. If your CPU fails this test, it must be dead!
   30:				;-------------------------------------------------------------------------------
   31:
   32:				        ; Include the definitions for the light52 derivative
   33:				        $nomod51
   34:				        $include (light52.mcu)
   35: 1			;   Light52 processor definition file (for ASEM-51 assembler)
   36: 1			;   =========================================================
   37: 1
   38: 1	N	 80	P0          DATA        080H
   39: 1	N	 81	SP          DATA        081H
   40: 1	N	 82	DPL         DATA        082H
   41: 1	N	 83	DPH         DATA        083H
   42: 1			;PCON      DATA        087H
   43: 1	N	 88	TSTAT       DATA        088H

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   44: 1			;TMOD      DATA        089H
   45: 1	N	 8C	TL          DATA        08CH
   46: 1	N	 8D	TH          DATA        08DH
   47: 1	N	 8E	TCL         DATA        08EH
   48: 1	N	 8F	TCH         DATA        08FH
   49: 1	N	 90	P1          DATA        090H
   50: 1	N	 98	SCON        DATA        098H
   51: 1	N	 99	SBUF        DATA        099H
   52: 1	N	 A0	P2          DATA        0A0H
   53: 1	N	 A8	IE          DATA        0A8H
   54: 1	N	 B0	P3          DATA        0B0H
   55: 1			;IP        DATA        0B8H
   56: 1	N	 C0	EXTINT0     DATA        0C0H
   57: 1	N	 D0	PSW         DATA        0D0H
   58: 1	N	 E0	ACC         DATA        0E0H
   59: 1	N	 F0	B           DATA        0F0H
   60: 1
   61: 1			; TSTAT flags
   62: 1	N	 88	T0IRQ       BIT         088H
   63: 1	N	 8C	T0ARL       BIT         08CH
   64: 1	N	 8D	T0CEN       BIT         08DH
   65: 1
   66: 1			; IE flags
   67: 1	N	 A8	EX0         BIT         0A8H
   68: 1	N	 A9	ET0         BIT         0A9H
   69: 1			;EX1         BIT        0AAH
   70: 1			;ET1         BIT        0ABH
   71: 1	N	 AC	ES          BIT         0ACH
   72: 1			;ET2         BIT        0ADH
   73: 1	N	 AF	EA          BIT         0AFH
   74: 1
   75: 1			; SCON flags
   76: 1	N	 98	TXIRQ       BIT         098H
   77: 1	N	 99	RXIRQ       BIT         099H
   78: 1	N	 9C	TXRDY       BIT         09CH
   79: 1	N	 9D	RXRDY       BIT         09DH
   80: 1
   81: 1			; PSW flags
   82: 1	N	 D0	P           BIT        0D0H
   83: 1	N	 D2	OV          BIT        0D2H
   84: 1	N	 D3	RS0         BIT        0D3H
   85: 1	N	 D4	RS1         BIT        0D4H
   86: 1	N	 D5	F0          BIT        0D5H
   87: 1	N	 D6	AC          BIT        0D6H
   88: 1	N	 D7	CY          BIT        0D7H
   89: 1
   90: 1			; Interrupt vectors
   91: 1	N      0000	RESET       CODE       000H
   92: 1	N      0003	EXTI0       CODE       003H
   93: 1	N      000B	TIMER0      CODE       00BH
   94: 1	N      0013	EXTI1       CODE       013H
   95: 1	N      001B	TIMER1      CODE       01BH
   96: 1	N      0023	SINT        CODE       023H
   97: 1	N      002B	TIMER2      CODE       02BH
   98:
   99:				        ;-- Parameters common to all tests -------------------------------------

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

  100:
  101:		N      0060	dir0    set     060h                ; Address used in direct addressing tests
  102:		N      0061	dir1    set     061h                ; Address used in direct addressing tests
  103:		N      006E	fail    set     06eh                ; (IDATA) set to 1 upon test failure
  104:		N      0070	saved_psw set   070h                ; (IDATA) temp store for PSW value
  105:		N      009F	stack0  set     09fh                ; (IDATA) stack addr used for push/pop tests
  106:
  107:
  108:				        ;-- Macros common to all tests -----------------------------------------
  109:
  110:				        ; putc: send character to console (UART)
  111:				        ; If you change this macro, make sure it DOES NOT MODIFY PSW!
  112:				putc    macro   character
  113:				        local   putc_loop
  114:				putc_loop:
  115:				        ;jnb     SCON.1,putc_loop
  116:				        ;clr     SCON.1
  117:				        mov     SBUF,character
  118:				        endm
  119:
  120:				        ; put_crlf: send CR+LF to console
  121:				put_crlf macro
  122:				        putc    #13
  123:				        putc    #10
  124:				        endm
  125:
  126:				        ;eot char, label: 'end of test' to be used at the end of all tests.
  127:				        ; If you run into this macro it will print character 'char' and
  128:				        ; continue.
  129:				        ; If you jump to label 'label', it will instead print char '?' and
  130:				        ; will set variable 'fail' to 1, then it will continue.
  131:				eot     macro   char,label
  132:				        local   skip
  133:				        putc    #char
  134:				        sjmp    skip
  135:				label:  putc    #'?'
  136:				        mov     fail,#001h
  137:				skip:
  138:				        endm
  139:
  140:				        ;-- Reset & interrupt vectors ------------------------------------------
  141:
  142:		N      0000	        org     00h
  143:	  0000	02 00 30	        ljmp    start               ; We'll assume LJMP works this far...
  144:		N      0003	        org     03h
  145:		N      000B	        org     0bh
  146:		N      0013	        org     13h
  147:		N      001B	        org     1bh
  148:		N      0023	        org     23h
  149:
  150:
  151:				        ;-- Main test program --------------------------------------------------
  152:		N      0030	        org     30h
  153:	  0030			start:
  154:				        ; Initialize serial port
  155:				        ;(leave it with the default configuration: 19200-8-N-1)

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

  156:				        ;mov     TMOD,#20h           ; C/T = 0, Mode = 2
  157:				        ;mov     TH1,#0fdh           ; 9600 bauds @11.xxx MHz
  158:				        ;mov     TCON,#40h           ; Enable T1
  159:				        ;mov     SCON,#52h           ; 8/N/1, TI enabled
  160:
  161:				        ; Clear failure flag
  162:	  0030	75 6E 00	        mov     fail,#000h
  163:
  164:
  165:				        ;-- Test series A ------------------------------------------------------
  166:				        ; Test the basic opcodes needed in later tests:
  167:				        ; a.- Serial port initialization is OK
  168:				        ; a.- Bootstrap instructions work as used
  169:				        ; b.- <SJMP rel> (small positive rel only)
  170:				        ; c.- ACC can be loaded with direct mode addressing (as an SFR)
  171:				        ; c.- <CJNE a,#imm,rel>
  172:				        ; d.- <DJNZ dir, rel> (small positive rel only)
  173:				        ; e.- <MOV  a,dir>
  174:				        ; Note that one instance of LJMP has been tested too.
  175:
  176:				        putc    #'A'                ; start of test series
  177+ 1  0033			??0000:
  178+ 1			        ;jnb     SCON.1,putc_loop
  179+ 1			        ;clr     SCON.1
  180+ 1  0033	75 99 41	        mov     SBUF,#'A'
  181:
  182:				        ; If we arrive here at all, and you see the chars in the
  183:				        ; terminal, the A.a test has passed
  184:				        putc    #'a'
  185+ 1  0036			??0001:
  186+ 1			        ;jnb     SCON.1,putc_loop
  187+ 1			        ;clr     SCON.1
  188+ 1  0036	75 99 61	        mov     SBUF,#'a'
  189:
  190:	  0039	80 06		        sjmp    ta_b0               ; <SJMP rel> with very small positive rel
  191:				        putc    #'?'
  192+ 1  003B			??0002:
  193+ 1			        ;jnb     SCON.1,putc_loop
  194+ 1			        ;clr     SCON.1
  195+ 1  003B	75 99 3F	        mov     SBUF,#'?'
  196:	  003E	75 6E 01	        mov     fail,#001h
  197:	  0041			ta_b0:  putc    #'b'
  198+ 1  0041			??0003:
  199+ 1			        ;jnb     SCON.1,putc_loop
  200+ 1			        ;clr     SCON.1
  201+ 1  0041	75 99 62	        mov     SBUF,#'b'
  202:
  203:
  204:	  0044	80 05		ta_c0:  sjmp    ta_c1
  205:	  0046			ta_c3:  putc    #'c'
  206+ 1  0046			??0004:
  207+ 1			        ;jnb     SCON.1,putc_loop
  208+ 1			        ;clr     SCON.1
  209+ 1  0046	75 99 63	        mov     SBUF,#'c'
  210:	  0049	80 18		        sjmp    ta_c4
  211:	  004B	75 E0 5A	ta_c1:  mov     0e0h,#5ah           ; load A as SFR

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



 Line  I  Addr  Code            Source

  212:	  004E	B4 5A F5	        cjne    a,#5ah,ta_c3        ; test cjne with == args...
  213:	  0051	B4 7A 06	        cjne    a,#7ah,ta_c2        ; ...with != args, rel>0...
  214:				        putc    #'?'
  215+ 1  0054			??0005:
  216+ 1			        ;jnb     SCON.1,putc_loop
  217+ 1			        ;clr     SCON.1
  218+ 1  0054	75 99 3F	        mov     SBUF,#'?'
  219:	  0057	75 6E 01	        mov     fail,#001h
  220:	  005A	B4 7A E9	ta_c2:  cjne    a,#7ah,ta_c3        ; ...and with != args, rel<0
  221:				        putc    #'?'
  222+ 1  005D			??0006:
  223+ 1			        ;jnb     SCON.1,putc_loop
  224+ 1			        ;clr     SCON.1
  225+ 1  005D	75 99 3F	        mov     SBUF,#'?'
  226:	  0060	75 6E 01	        mov     fail,#001h
  227:	  0063			ta_c4:
  228:
  229:	  0063	75 60 02	        mov     dir0,#02h
  230:	  0066	D5 60 06	        djnz    dir0,ta_d1
  231:				        putc    #'?'
  232+ 1  0069			??0007:
  233+ 1			        ;jnb     SCON.1,putc_loop
  234+ 1			        ;clr     SCON.1
  235+ 1  0069	75 99 3F	        mov     SBUF,#'?'
  236:	  006C	75 6E 01	        mov     fail,#001h
  237:	  006F	D5 60 05	ta_d1:  djnz    dir0,ta_d2
  238:
  239:				        eot     'd',ta_d2
  240+ 1			        putc    #'d'
  241+ 2  0072			??0009:
  242+ 2			        ;jnb     SCON.1,putc_loop
  243+ 2			        ;clr     SCON.1
  244+ 2  0072	75 99 64	        mov     SBUF,#'d'
  245+ 1  0075	80 06		        sjmp    ??0008
  246+ 1  0077			ta_d2:  putc    #'?'
  247+ 2  0077			??0010:
  248+ 2			        ;jnb     SCON.1,putc_loop
  249+ 2			        ;clr     SCON.1
  250+ 2  0077	75 99 3F	        mov     SBUF,#'?'
  251+ 1  007A	75 6E 01	        mov     fail,#001h
  252+ 1  007D			??0008:
  253:
  254:	  007D	75 60 A5	        mov     dir0,#0a5h          ; test mov a,dir
  255:	  0080	E5 60		        mov     a,dir0
  256:	  0082	B4 A5 05	        cjne    a,#0a5h,ta_e1
  257:
  258:				        eot     'e',ta_e1
  259+ 1			        putc    #'e'
  260+ 2  0085			??0012:
  261+ 2			        ;jnb     SCON.1,putc_loop
  262+ 2			        ;clr     SCON.1
  263+ 2  0085	75 99 65	        mov     SBUF,#'e'
  264+ 1  0088	80 06		        sjmp    ??0011
  265+ 1  008A			ta_e1:  putc    #'?'
  266+ 2  008A			??0013:
  267+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6



 Line  I  Addr  Code            Source

  268+ 2			        ;clr     SCON.1
  269+ 2  008A	75 99 3F	        mov     SBUF,#'?'
  270+ 1  008D	75 6E 01	        mov     fail,#001h
  271+ 1  0090			??0011:
  272:
  273:				        put_crlf                    ; end of test series
  274+ 1			        putc    #13
  275+ 2  0090			??0014:
  276+ 2			        ;jnb     SCON.1,putc_loop
  277+ 2			        ;clr     SCON.1
  278+ 2  0090	75 99 0D	        mov     SBUF,#13
  279+ 1			        putc    #10
  280+ 2  0093			??0015:
  281+ 2			        ;jnb     SCON.1,putc_loop
  282+ 2			        ;clr     SCON.1
  283+ 2  0093	75 99 0A	        mov     SBUF,#10
  284:
  285:				        ;-- Test series B ------------------------------------------------------
  286:				        ; Test CJNE plus a few aux opcodes
  287:				        ; a.- <MOV Rn, #imm>
  288:				        ; a.- <MOV a, Rn>
  289:				        ; b.- <JC rel>, <JNC rel>
  290:				        ; c.- <CJNE Rn, #imm, rel>
  291:				        ; d.- <SETB C>, <CLR C>, <CPL C>
  292:				        ; e.- <MOV @Ri, #imm>
  293:				        ; f.- <CJNE @Ri, #imm, rel>
  294:				        ; g.- <CJNE A, dir, rel>
  295:
  296:				        putc    #'B'                ; start of test series
  297+ 1  0096			??0016:
  298+ 1			        ;jnb     SCON.1,putc_loop
  299+ 1			        ;clr     SCON.1
  300+ 1  0096	75 99 42	        mov     SBUF,#'B'
  301:
  302:				tb_ma   macro   reg,val
  303:				        mov     reg,val
  304:				        mov     a,reg
  305:				        cjne    a,val,tb_a1
  306:				        endm
  307:
  308:				        tb_ma   r0,#081h
  309+ 1  0099	78 81		        mov     r0,#081h
  310+ 1  009B	E8		        mov     a,r0
  311+ 1  009C	B4 81 2F	        cjne    a,#081h,tb_a1
  312:				        tb_ma   r1,#043h
  313+ 1  009F	79 43		        mov     r1,#043h
  314+ 1  00A1	E9		        mov     a,r1
  315+ 1  00A2	B4 43 29	        cjne    a,#043h,tb_a1
  316:				        tb_ma   r2,#027h
  317+ 1  00A5	7A 27		        mov     r2,#027h
  318+ 1  00A7	EA		        mov     a,r2
  319+ 1  00A8	B4 27 23	        cjne    a,#027h,tb_a1
  320:				        tb_ma   r3,#0c2h
  321+ 1  00AB	7B C2		        mov     r3,#0c2h
  322+ 1  00AD	EB		        mov     a,r3
  323+ 1  00AE	B4 C2 1D	        cjne    a,#0c2h,tb_a1

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 7



 Line  I  Addr  Code            Source

  324:				        tb_ma   r4,#0f1h
  325+ 1  00B1	7C F1		        mov     r4,#0f1h
  326+ 1  00B3	EC		        mov     a,r4
  327+ 1  00B4	B4 F1 17	        cjne    a,#0f1h,tb_a1
  328:				        tb_ma   r5,#004h
  329+ 1  00B7	7D 04		        mov     r5,#004h
  330+ 1  00B9	ED		        mov     a,r5
  331+ 1  00BA	B4 04 11	        cjne    a,#004h,tb_a1
  332:				        tb_ma   r6,#092h
  333+ 1  00BD	7E 92		        mov     r6,#092h
  334+ 1  00BF	EE		        mov     a,r6
  335+ 1  00C0	B4 92 0B	        cjne    a,#092h,tb_a1
  336:				        tb_ma   r7,#01fh
  337+ 1  00C3	7F 1F		        mov     r7,#01fh
  338+ 1  00C5	EF		        mov     a,r7
  339+ 1  00C6	B4 1F 05	        cjne    a,#01fh,tb_a1
  340:
  341:				        eot     'a',tb_a1
  342+ 1			        putc    #'a'
  343+ 2  00C9			??0018:
  344+ 2			        ;jnb     SCON.1,putc_loop
  345+ 2			        ;clr     SCON.1
  346+ 2  00C9	75 99 61	        mov     SBUF,#'a'
  347+ 1  00CC	80 06		        sjmp    ??0017
  348+ 1  00CE			tb_a1:  putc    #'?'
  349+ 2  00CE			??0019:
  350+ 2			        ;jnb     SCON.1,putc_loop
  351+ 2			        ;clr     SCON.1
  352+ 2  00CE	75 99 3F	        mov     SBUF,#'?'
  353+ 1  00D1	75 6E 01	        mov     fail,#001h
  354+ 1  00D4			??0017:
  355:
  356:	  00D4	75 D0 80	        mov     PSW,#80h            ; <JC rel>, <JNC rel>
  357:	  00D7	40 06		        jc      tb_b0
  358:				        putc    #'?'
  359+ 1  00D9			??0020:
  360+ 1			        ;jnb     SCON.1,putc_loop
  361+ 1			        ;clr     SCON.1
  362+ 1  00D9	75 99 3F	        mov     SBUF,#'?'
  363:	  00DC	75 6E 01	        mov     fail,#001h
  364:	  00DF	50 07		tb_b0:  jnc     tb_b1
  365:	  00E1	75 D0 00	        mov     PSW,#00h
  366:	  00E4	40 02		        jc      tb_b1
  367:	  00E6	50 06		        jnc     tb_b2
  368:	  00E8			tb_b1:  putc    #'?'
  369+ 1  00E8			??0021:
  370+ 1			        ;jnb     SCON.1,putc_loop
  371+ 1			        ;clr     SCON.1
  372+ 1  00E8	75 99 3F	        mov     SBUF,#'?'
  373:	  00EB	75 6E 01	        mov     fail,#001h
  374:	  00EE			tb_b2:  putc    #'b'
  375+ 1  00EE			??0022:
  376+ 1			        ;jnb     SCON.1,putc_loop
  377+ 1			        ;clr     SCON.1
  378+ 1  00EE	75 99 62	        mov     SBUF,#'b'
  379:

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 8



 Line  I  Addr  Code            Source

  380:				tb_mc   macro   reg,val
  381:				        local   tb_mc0
  382:				        local   tb_mc1
  383:				        mov     reg,val+1
  384:				        cjne    reg,val,tb_mc0
  385:				        putc    #'?'
  386:				        mov     fail,#001h
  387:				tb_mc1: mov     reg,val
  388:				tb_mc0: cjne    reg,val,tb_mc1
  389:				        endm
  390:
  391:				        tb_mc   r0,#091h            ; first test the jumps for all Rn regs
  392+ 1  00F1	78 92		        mov     r0,#091h+1
  393+ 1  00F3	B8 91 08	        cjne    r0,#091h,??0023
  394+ 1			        putc    #'?'
  395+ 2  00F6			??0025:
  396+ 2			        ;jnb     SCON.1,putc_loop
  397+ 2			        ;clr     SCON.1
  398+ 2  00F6	75 99 3F	        mov     SBUF,#'?'
  399+ 1  00F9	75 6E 01	        mov     fail,#001h
  400+ 1  00FC	78 91		??0024: mov     r0,#091h
  401+ 1  00FE	B8 91 FB	??0023: cjne    r0,#091h,??0024
  402:				        tb_mc   r1,#0a2h
  403+ 1  0101	79 A3		        mov     r1,#0a2h+1
  404+ 1  0103	B9 A2 08	        cjne    r1,#0a2h,??0026
  405+ 1			        putc    #'?'
  406+ 2  0106			??0028:
  407+ 2			        ;jnb     SCON.1,putc_loop
  408+ 2			        ;clr     SCON.1
  409+ 2  0106	75 99 3F	        mov     SBUF,#'?'
  410+ 1  0109	75 6E 01	        mov     fail,#001h
  411+ 1  010C	79 A2		??0027: mov     r1,#0a2h
  412+ 1  010E	B9 A2 FB	??0026: cjne    r1,#0a2h,??0027
  413:				        tb_mc   r2,#0b3h
  414+ 1  0111	7A B4		        mov     r2,#0b3h+1
  415+ 1  0113	BA B3 08	        cjne    r2,#0b3h,??0029
  416+ 1			        putc    #'?'
  417+ 2  0116			??0031:
  418+ 2			        ;jnb     SCON.1,putc_loop
  419+ 2			        ;clr     SCON.1
  420+ 2  0116	75 99 3F	        mov     SBUF,#'?'
  421+ 1  0119	75 6E 01	        mov     fail,#001h
  422+ 1  011C	7A B3		??0030: mov     r2,#0b3h
  423+ 1  011E	BA B3 FB	??0029: cjne    r2,#0b3h,??0030
  424:				        tb_mc   r3,#0c4h
  425+ 1  0121	7B C5		        mov     r3,#0c4h+1
  426+ 1  0123	BB C4 08	        cjne    r3,#0c4h,??0032
  427+ 1			        putc    #'?'
  428+ 2  0126			??0034:
  429+ 2			        ;jnb     SCON.1,putc_loop
  430+ 2			        ;clr     SCON.1
  431+ 2  0126	75 99 3F	        mov     SBUF,#'?'
  432+ 1  0129	75 6E 01	        mov     fail,#001h
  433+ 1  012C	7B C4		??0033: mov     r3,#0c4h
  434+ 1  012E	BB C4 FB	??0032: cjne    r3,#0c4h,??0033
  435:				        tb_mc   r4,#0d5h

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 9



 Line  I  Addr  Code            Source

  436+ 1  0131	7C D6		        mov     r4,#0d5h+1
  437+ 1  0133	BC D5 08	        cjne    r4,#0d5h,??0035
  438+ 1			        putc    #'?'
  439+ 2  0136			??0037:
  440+ 2			        ;jnb     SCON.1,putc_loop
  441+ 2			        ;clr     SCON.1
  442+ 2  0136	75 99 3F	        mov     SBUF,#'?'
  443+ 1  0139	75 6E 01	        mov     fail,#001h
  444+ 1  013C	7C D5		??0036: mov     r4,#0d5h
  445+ 1  013E	BC D5 FB	??0035: cjne    r4,#0d5h,??0036
  446:				        tb_mc   r5,#0e6h
  447+ 1  0141	7D E7		        mov     r5,#0e6h+1
  448+ 1  0143	BD E6 08	        cjne    r5,#0e6h,??0038
  449+ 1			        putc    #'?'
  450+ 2  0146			??0040:
  451+ 2			        ;jnb     SCON.1,putc_loop
  452+ 2			        ;clr     SCON.1
  453+ 2  0146	75 99 3F	        mov     SBUF,#'?'
  454+ 1  0149	75 6E 01	        mov     fail,#001h
  455+ 1  014C	7D E6		??0039: mov     r5,#0e6h
  456+ 1  014E	BD E6 FB	??0038: cjne    r5,#0e6h,??0039
  457:				        tb_mc   r6,#0f7h
  458+ 1  0151	7E F8		        mov     r6,#0f7h+1
  459+ 1  0153	BE F7 08	        cjne    r6,#0f7h,??0041
  460+ 1			        putc    #'?'
  461+ 2  0156			??0043:
  462+ 2			        ;jnb     SCON.1,putc_loop
  463+ 2			        ;clr     SCON.1
  464+ 2  0156	75 99 3F	        mov     SBUF,#'?'
  465+ 1  0159	75 6E 01	        mov     fail,#001h
  466+ 1  015C	7E F7		??0042: mov     r6,#0f7h
  467+ 1  015E	BE F7 FB	??0041: cjne    r6,#0f7h,??0042
  468:				        tb_mc   r7,#008h
  469+ 1  0161	7F 09		        mov     r7,#008h+1
  470+ 1  0163	BF 08 08	        cjne    r7,#008h,??0044
  471+ 1			        putc    #'?'
  472+ 2  0166			??0046:
  473+ 2			        ;jnb     SCON.1,putc_loop
  474+ 2			        ;clr     SCON.1
  475+ 2  0166	75 99 3F	        mov     SBUF,#'?'
  476+ 1  0169	75 6E 01	        mov     fail,#001h
  477+ 1  016C	7F 08		??0045: mov     r7,#008h
  478+ 1  016E	BF 08 FB	??0044: cjne    r7,#008h,??0045
  479:
  480:	  0171	75 D0 00	tb_c0:  mov     PSW,#00h            ; now test the C flag with a single Rn reg
  481:	  0174	78 34		        mov     r0,#034h
  482:	  0176	B8 35 00	        cjne    r0,#035h,tb_c1
  483:	  0179	50 0F		tb_c1:  jnc     tb_c2
  484:	  017B	B8 34 00	        cjne    r0,#034h,tb_c3
  485:	  017E	40 0A		tb_c3:  jc      tb_c2
  486:	  0180	B8 33 00	        cjne    r0,#033h,tb_c4
  487:	  0183	40 05		tb_c4:  jc      tb_c2
  488:
  489:				        eot     'c',tb_c2
  490+ 1			        putc    #'c'
  491+ 2  0185			??0048:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 10



 Line  I  Addr  Code            Source

  492+ 2			        ;jnb     SCON.1,putc_loop
  493+ 2			        ;clr     SCON.1
  494+ 2  0185	75 99 63	        mov     SBUF,#'c'
  495+ 1  0188	80 06		        sjmp    ??0047
  496+ 1  018A			tb_c2:  putc    #'?'
  497+ 2  018A			??0049:
  498+ 2			        ;jnb     SCON.1,putc_loop
  499+ 2			        ;clr     SCON.1
  500+ 2  018A	75 99 3F	        mov     SBUF,#'?'
  501+ 1  018D	75 6E 01	        mov     fail,#001h
  502+ 1  0190			??0047:
  503:
  504:	  0190	75 D0 80	        mov     PSW,#80h            ; test C set, reset and complement
  505:	  0193	C3		        clr     c
  506:	  0194	40 0B		        jc      tb_d0
  507:	  0196	D3		        setb    c
  508:	  0197	50 08		        jnc     tb_d0
  509:	  0199	B3		        cpl     c
  510:	  019A	40 05		        jc      tb_d0
  511:
  512:				        eot     'd',tb_d0
  513+ 1			        putc    #'d'
  514+ 2  019C			??0051:
  515+ 2			        ;jnb     SCON.1,putc_loop
  516+ 2			        ;clr     SCON.1
  517+ 2  019C	75 99 64	        mov     SBUF,#'d'
  518+ 1  019F	80 06		        sjmp    ??0050
  519+ 1  01A1			tb_d0:  putc    #'?'
  520+ 2  01A1			??0052:
  521+ 2			        ;jnb     SCON.1,putc_loop
  522+ 2			        ;clr     SCON.1
  523+ 2  01A1	75 99 3F	        mov     SBUF,#'?'
  524+ 1  01A4	75 6E 01	        mov     fail,#001h
  525+ 1  01A7			??0050:
  526:
  527:				tb_me   macro   reg
  528:				        mov     reg,#dir0
  529:				        mov     dir0,#12h
  530:				        mov     a,dir0
  531:				        cjne    a,#012h,tb_e0
  532:				        mov     @reg,#0f5h
  533:				        mov     a,dir0
  534:				        cjne    a,#0f5h,tb_e0
  535:				        endm
  536:
  537:				        tb_me   r0                  ; test <mov @ri, #imm> with both regs
  538+ 1  01A7	78 60		        mov     r0,#dir0
  539+ 1  01A9	75 60 12	        mov     dir0,#12h
  540+ 1  01AC	E5 60		        mov     a,dir0
  541+ 1  01AE	B4 12 1D	        cjne    a,#012h,tb_e0
  542+ 1  01B1	76 F5		        mov     @r0,#0f5h
  543+ 1  01B3	E5 60		        mov     a,dir0
  544+ 1  01B5	B4 F5 16	        cjne    a,#0f5h,tb_e0
  545:				        tb_me   r1
  546+ 1  01B8	79 60		        mov     r1,#dir0
  547+ 1  01BA	75 60 12	        mov     dir0,#12h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 11



 Line  I  Addr  Code            Source

  548+ 1  01BD	E5 60		        mov     a,dir0
  549+ 1  01BF	B4 12 0C	        cjne    a,#012h,tb_e0
  550+ 1  01C2	77 F5		        mov     @r1,#0f5h
  551+ 1  01C4	E5 60		        mov     a,dir0
  552+ 1  01C6	B4 F5 05	        cjne    a,#0f5h,tb_e0
  553:
  554:				        eot     'e',tb_e0
  555+ 1			        putc    #'e'
  556+ 2  01C9			??0054:
  557+ 2			        ;jnb     SCON.1,putc_loop
  558+ 2			        ;clr     SCON.1
  559+ 2  01C9	75 99 65	        mov     SBUF,#'e'
  560+ 1  01CC	80 06		        sjmp    ??0053
  561+ 1  01CE			tb_e0:  putc    #'?'
  562+ 2  01CE			??0055:
  563+ 2			        ;jnb     SCON.1,putc_loop
  564+ 2			        ;clr     SCON.1
  565+ 2  01CE	75 99 3F	        mov     SBUF,#'?'
  566+ 1  01D1	75 6E 01	        mov     fail,#001h
  567+ 1  01D4			??0053:
  568:
  569:				tb_mf   macro   reg,val
  570:				        local   tb_mf0
  571:				        local   tb_mf1
  572:				        mov     reg,#30h
  573:				        mov     @reg,val+1
  574:				        cjne    @reg,val,tb_mf0
  575:				        putc    #'?'
  576:				        mov     fail,#001h
  577:				tb_mf1: mov     @reg,val
  578:				tb_mf0: cjne    @reg,val,tb_mf1
  579:				        endm
  580:
  581:				        tb_mf   r0,#12h
  582+ 1  01D4	78 30		        mov     r0,#30h
  583+ 1  01D6	76 13		        mov     @r0,#12h+1
  584+ 1  01D8	B6 12 08	        cjne    @r0,#12h,??0056
  585+ 1			        putc    #'?'
  586+ 2  01DB			??0058:
  587+ 2			        ;jnb     SCON.1,putc_loop
  588+ 2			        ;clr     SCON.1
  589+ 2  01DB	75 99 3F	        mov     SBUF,#'?'
  590+ 1  01DE	75 6E 01	        mov     fail,#001h
  591+ 1  01E1	76 12		??0057: mov     @r0,#12h
  592+ 1  01E3	B6 12 FB	??0056: cjne    @r0,#12h,??0057
  593:				        tb_mf   r1,#34h
  594+ 1  01E6	79 30		        mov     r1,#30h
  595+ 1  01E8	77 35		        mov     @r1,#34h+1
  596+ 1  01EA	B7 34 08	        cjne    @r1,#34h,??0059
  597+ 1			        putc    #'?'
  598+ 2  01ED			??0061:
  599+ 2			        ;jnb     SCON.1,putc_loop
  600+ 2			        ;clr     SCON.1
  601+ 2  01ED	75 99 3F	        mov     SBUF,#'?'
  602+ 1  01F0	75 6E 01	        mov     fail,#001h
  603+ 1  01F3	77 34		??0060: mov     @r1,#34h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 12



 Line  I  Addr  Code            Source

  604+ 1  01F5	B7 34 FB	??0059: cjne    @r1,#34h,??0060
  605:
  606:	  01F8	78 30		tb_f0:  mov     r0,#30h             ; now test the C flag with a single Rn reg
  607:	  01FA	C3		        clr     c
  608:	  01FB	76 34		        mov     @r0,#034h
  609:	  01FD	B6 35 00	        cjne    @r0,#035h,tb_f1
  610:	  0200	50 0F		tb_f1:  jnc     tb_f2
  611:	  0202	B6 34 00	        cjne    @r0,#034h,tb_f3
  612:	  0205	40 0A		tb_f3:  jc      tb_f2
  613:	  0207	B6 33 00	        cjne    @r0,#033h,tb_f4
  614:	  020A	40 05		tb_f4:  jc      tb_f2
  615:
  616:				        eot     'f',tb_f2
  617+ 1			        putc    #'f'
  618+ 2  020C			??0063:
  619+ 2			        ;jnb     SCON.1,putc_loop
  620+ 2			        ;clr     SCON.1
  621+ 2  020C	75 99 66	        mov     SBUF,#'f'
  622+ 1  020F	80 06		        sjmp    ??0062
  623+ 1  0211			tb_f2:  putc    #'?'
  624+ 2  0211			??0064:
  625+ 2			        ;jnb     SCON.1,putc_loop
  626+ 2			        ;clr     SCON.1
  627+ 2  0211	75 99 3F	        mov     SBUF,#'?'
  628+ 1  0214	75 6E 01	        mov     fail,#001h
  629+ 1  0217			??0062:
  630:
  631:	  0217	75 60 C0	        mov     dir0,#0c0h
  632:	  021A	75 31 C1	        mov     031h,#0c1h
  633:	  021D	75 32 C2	        mov     032h,#0c2h
  634:	  0220	C3		        clr     c
  635:	  0221	74 C1		        mov     a,#0c1h
  636:	  0223	B5 31 1D	        cjne    a,031h,tb_g0
  637:	  0226	40 1B		        jc      tb_g0
  638:	  0228	B5 32 06	        cjne    a,032h,tb_g1
  639:				        putc    #'?'
  640+ 1  022B			??0065:
  641+ 1			        ;jnb     SCON.1,putc_loop
  642+ 1			        ;clr     SCON.1
  643+ 1  022B	75 99 3F	        mov     SBUF,#'?'
  644:	  022E	75 6E 01	        mov     fail,#001h
  645:	  0231	50 10		tb_g1:  jnc     tb_g0
  646:	  0233	B5 60 06	        cjne    a,dir0,tb_g2
  647:				        putc    #'$'
  648+ 1  0236			??0066:
  649+ 1			        ;jnb     SCON.1,putc_loop
  650+ 1			        ;clr     SCON.1
  651+ 1  0236	75 99 24	        mov     SBUF,#'$'
  652:	  0239	75 6E 01	        mov     fail,#001h
  653:	  023C	40 05		tb_g2:  jc      tb_g0
  654:
  655:				        eot     'g',tb_g0
  656+ 1			        putc    #'g'
  657+ 2  023E			??0068:
  658+ 2			        ;jnb     SCON.1,putc_loop
  659+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 13



 Line  I  Addr  Code            Source

  660+ 2  023E	75 99 67	        mov     SBUF,#'g'
  661+ 1  0241	80 06		        sjmp    ??0067
  662+ 1  0243			tb_g0:  putc    #'?'
  663+ 2  0243			??0069:
  664+ 2			        ;jnb     SCON.1,putc_loop
  665+ 2			        ;clr     SCON.1
  666+ 2  0243	75 99 3F	        mov     SBUF,#'?'
  667+ 1  0246	75 6E 01	        mov     fail,#001h
  668+ 1  0249			??0067:
  669:
  670:				        put_crlf                    ; end of test series
  671+ 1			        putc    #13
  672+ 2  0249			??0070:
  673+ 2			        ;jnb     SCON.1,putc_loop
  674+ 2			        ;clr     SCON.1
  675+ 2  0249	75 99 0D	        mov     SBUF,#13
  676+ 1			        putc    #10
  677+ 2  024C			??0071:
  678+ 2			        ;jnb     SCON.1,putc_loop
  679+ 2			        ;clr     SCON.1
  680+ 2  024C	75 99 0A	        mov     SBUF,#10
  681:
  682:
  683:				        ;-- Test series C ------------------------------------------------------
  684:				        ; Bit operations and the rest of the conditional rel jumps
  685:				        ; The following tests will use a bit address within the IRAM
  686:				        ; a.- <JB bit, rel>, <JNB bit, rel>
  687:				        ; b.- <MOV A, #imm>
  688:				        ; c.- <JZ rel>, <JNZ rel>
  689:				        ; d.- <CLR bit>, <CPL bit>
  690:				        ; e.- <ANL C, bit>, <ORL C, bit>
  691:				        ; e.- <ANL C, /bit>, <ORL C, /bit>
  692:				        ; f.- <MOV C,bit>, <MOV bit, C>
  693:				        ; g.- <SETB bit>
  694:				        ; h.- <JBC bit>
  695:				        ; The following tests are the same as above except a bit address within
  696:				        ; SFR B is used.
  697:				        ; i.- <JB bit, rel>, <JNB bit, rel>
  698:				        ; j.- <CLR bit>, <CPL bit>
  699:				        ; k.- <ANL C, bit>, <ORL C, bit>
  700:				        ; k.- <ANL C, /bit>, <ORL C, /bit>
  701:				        ; l.- <MOV C,bit>, <MOV bit, C>
  702:				        ; m.- <SETB bit>
  703:				        ; n.- <JBC bit>
  704:
  705:				        putc    #'C'                ; start of test series
  706+ 1  024F			??0072:
  707+ 1			        ;jnb     SCON.1,putc_loop
  708+ 1			        ;clr     SCON.1
  709+ 1  024F	75 99 43	        mov     SBUF,#'C'
  710:
  711:	  0252	75 2F 80	        mov     02fh,#80h           ; We'll be testing bits 2F.7 and 2F.6
  712:	  0255	80 0E		        sjmp    tc_a0
  713:	  0257	30 7F 1C	tc_a1:  jnb     07fh,tc_a3          ; JNB jumps not on bit set
  714:	  025A	30 7E 11	        jnb     07eh,tc_a2          ; JNB jumps on bit clear
  715:				        putc    #'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 14



 Line  I  Addr  Code            Source

  716+ 1  025D			??0073:
  717+ 1			        ;jnb     SCON.1,putc_loop
  718+ 1			        ;clr     SCON.1
  719+ 1  025D	75 99 3F	        mov     SBUF,#'?'
  720:	  0260	75 6E 01	        mov     fail,#001h
  721:	  0263	80 11		        sjmp    tc_a3
  722:	  0265	20 7F EF	tc_a0:  jb      07fh,tc_a1          ; JB jumps on bit set
  723:				        putc    #'!'
  724+ 1  0268			??0074:
  725+ 1			        ;jnb     SCON.1,putc_loop
  726+ 1			        ;clr     SCON.1
  727+ 1  0268	75 99 21	        mov     SBUF,#'!'
  728:	  026B	75 6E 01	        mov     fail,#001h
  729:	  026E	20 7E 05	tc_a2:  jb      07eh,tc_a3          ; JB jumps not on bit clear
  730:
  731:				        eot     'a',tc_a3
  732+ 1			        putc    #'a'
  733+ 2  0271			??0076:
  734+ 2			        ;jnb     SCON.1,putc_loop
  735+ 2			        ;clr     SCON.1
  736+ 2  0271	75 99 61	        mov     SBUF,#'a'
  737+ 1  0274	80 06		        sjmp    ??0075
  738+ 1  0276			tc_a3:  putc    #'?'
  739+ 2  0276			??0077:
  740+ 2			        ;jnb     SCON.1,putc_loop
  741+ 2			        ;clr     SCON.1
  742+ 2  0276	75 99 3F	        mov     SBUF,#'?'
  743+ 1  0279	75 6E 01	        mov     fail,#001h
  744+ 1  027C			??0075:
  745:
  746:	  027C	75 E0 79	        mov     0e0h,#079h          ; init acc (as sfr) with some data
  747:	  027F	B4 79 0A	        cjne    a,#079h,tc_b1
  748:	  0282	74 5A		        mov     a,#05ah             ; now load a with imm data...
  749:	  0284	B4 5A 05	        cjne    a,#05ah,tc_b1       ; ...and make sure a got the data
  750:
  751:				        eot     'b',tc_b1
  752+ 1			        putc    #'b'
  753+ 2  0287			??0079:
  754+ 2			        ;jnb     SCON.1,putc_loop
  755+ 2			        ;clr     SCON.1
  756+ 2  0287	75 99 62	        mov     SBUF,#'b'
  757+ 1  028A	80 06		        sjmp    ??0078
  758+ 1  028C			tc_b1:  putc    #'?'
  759+ 2  028C			??0080:
  760+ 2			        ;jnb     SCON.1,putc_loop
  761+ 2			        ;clr     SCON.1
  762+ 2  028C	75 99 3F	        mov     SBUF,#'?'
  763+ 1  028F	75 6E 01	        mov     fail,#001h
  764+ 1  0292			??0078:
  765:
  766:	  0292	74 80		        mov     a,#80h
  767:	  0294	80 0E		        sjmp    tc_c0
  768:	  0296	60 1B		tc_c1:  jz      tc_c3               ; JZ jumps not on acc!=0
  769:	  0298	74 00		        mov     a,#00h
  770:	  029A	60 10		        jz      tc_c2               ; JZ jumps on acc==0
  771:				        putc    #'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 15



 Line  I  Addr  Code            Source

  772+ 1  029C			??0081:
  773+ 1			        ;jnb     SCON.1,putc_loop
  774+ 1			        ;clr     SCON.1
  775+ 1  029C	75 99 3F	        mov     SBUF,#'?'
  776:	  029F	75 6E 01	        mov     fail,#001h
  777:	  02A2	80 0F		        sjmp    tc_c3
  778:	  02A4	70 F0		tc_c0:  jnz     tc_c1               ; JNZ jumps on acc!=0
  779:				        putc    #'!'
  780+ 1  02A6			??0082:
  781+ 1			        ;jnb     SCON.1,putc_loop
  782+ 1			        ;clr     SCON.1
  783+ 1  02A6	75 99 21	        mov     SBUF,#'!'
  784:	  02A9	75 6E 01	        mov     fail,#001h
  785:	  02AC	70 05		tc_c2:  jnz     tc_c3               ; JNZ jumps not on acc==0
  786:
  787:				        eot     'c',tc_c3
  788+ 1			        putc    #'c'
  789+ 2  02AE			??0084:
  790+ 2			        ;jnb     SCON.1,putc_loop
  791+ 2			        ;clr     SCON.1
  792+ 2  02AE	75 99 63	        mov     SBUF,#'c'
  793+ 1  02B1	80 06		        sjmp    ??0083
  794+ 1  02B3			tc_c3:  putc    #'?'
  795+ 2  02B3			??0085:
  796+ 2			        ;jnb     SCON.1,putc_loop
  797+ 2			        ;clr     SCON.1
  798+ 2  02B3	75 99 3F	        mov     SBUF,#'?'
  799+ 1  02B6	75 6E 01	        mov     fail,#001h
  800+ 1  02B9			??0083:
  801:
  802:
  803:	  02B9	75 2F 80	        mov     02fh,#80h           ; We'll be testing bit 2F.7
  804:	  02BC	20 7F 02	        jb      07fh,tc_d1
  805:	  02BF	80 0F		        sjmp    tc_d0
  806:	  02C1	C2 7F		tc_d1:  clr     07fh
  807:	  02C3	20 7F 0A	        jb      07fh,tc_d0
  808:	  02C6	B2 7F		        cpl     07fh
  809:	  02C8	30 7F 05	        jnb     07fh,tc_d0
  810:
  811:				        eot     'd',tc_d0
  812+ 1			        putc    #'d'
  813+ 2  02CB			??0087:
  814+ 2			        ;jnb     SCON.1,putc_loop
  815+ 2			        ;clr     SCON.1
  816+ 2  02CB	75 99 64	        mov     SBUF,#'d'
  817+ 1  02CE	80 06		        sjmp    ??0086
  818+ 1  02D0			tc_d0:  putc    #'?'
  819+ 2  02D0			??0088:
  820+ 2			        ;jnb     SCON.1,putc_loop
  821+ 2			        ;clr     SCON.1
  822+ 2  02D0	75 99 3F	        mov     SBUF,#'?'
  823+ 1  02D3	75 6E 01	        mov     fail,#001h
  824+ 1  02D6			??0086:
  825:
  826:	  02D6	75 2E 08	        mov     02eh,#08h           ; We'll be testing bits 2E.3 and 2E.2
  827:	  02D9	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 16



 Line  I  Addr  Code            Source

  828:	  02DA	82 73		        anl     c,073h              ; Test ANL in all 4 input combinations
  829:	  02DC	40 1F		        jc      tc_e0
  830:	  02DE	D3		        setb    c
  831:	  02DF	82 73		        anl     c,073h
  832:	  02E1	50 1A		        jnc     tc_e0
  833:	  02E3	B0 72		        anl     c,/072h
  834:	  02E5	50 16		        jnc     tc_e0
  835:				                                    ; CY == 1
  836:	  02E7	72 73		        orl     c,073h              ; ORL-ing with 1 should give 1
  837:	  02E9	50 12		        jnc     tc_e0
  838:	  02EB	72 72		        orl     c,072h
  839:	  02ED	50 0E		        jnc     tc_e0
  840:	  02EF	C3		        clr     c                   ; CY == 0
  841:	  02F0	72 73		        orl     c,073h              ; Now ORL c, 'bit' should give 'bit'
  842:	  02F2	50 09		        jnc     tc_e0
  843:	  02F4	A0 72		        orl     c,/072h
  844:	  02F6	50 05		        jnc     tc_e0
  845:
  846:				        eot     'e',tc_e0
  847+ 1			        putc    #'e'
  848+ 2  02F8			??0090:
  849+ 2			        ;jnb     SCON.1,putc_loop
  850+ 2			        ;clr     SCON.1
  851+ 2  02F8	75 99 65	        mov     SBUF,#'e'
  852+ 1  02FB	80 06		        sjmp    ??0089
  853+ 1  02FD			tc_e0:  putc    #'?'
  854+ 2  02FD			??0091:
  855+ 2			        ;jnb     SCON.1,putc_loop
  856+ 2			        ;clr     SCON.1
  857+ 2  02FD	75 99 3F	        mov     SBUF,#'?'
  858+ 1  0300	75 6E 01	        mov     fail,#001h
  859+ 1  0303			??0089:
  860:
  861:	  0303	75 2E 08	        mov     02eh,#08h           ; We'll be testing bits 2E.3 and 2E.2
  862:	  0306	C3		        clr     c
  863:	  0307	A2 73		        mov     c,073h
  864:	  0309	50 15		        jnc     tc_f0
  865:	  030B	A2 72		        mov     c,072h
  866:	  030D	40 11		        jc      tc_f0
  867:	  030F	C3		        clr     c
  868:	  0310	92 71		        mov     071h,c
  869:	  0312	20 71 0B	        jb      071h,tc_f0
  870:	  0315	D3		        setb    c
  871:	  0316	92 71		        mov     071h,c
  872:	  0318	30 71 05	        jnb     071h,tc_f0
  873:
  874:				        eot     'f',tc_f0
  875+ 1			        putc    #'f'
  876+ 2  031B			??0093:
  877+ 2			        ;jnb     SCON.1,putc_loop
  878+ 2			        ;clr     SCON.1
  879+ 2  031B	75 99 66	        mov     SBUF,#'f'
  880+ 1  031E	80 06		        sjmp    ??0092
  881+ 1  0320			tc_f0:  putc    #'?'
  882+ 2  0320			??0094:
  883+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 17



 Line  I  Addr  Code            Source

  884+ 2			        ;clr     SCON.1
  885+ 2  0320	75 99 3F	        mov     SBUF,#'?'
  886+ 1  0323	75 6E 01	        mov     fail,#001h
  887+ 1  0326			??0092:
  888:
  889:	  0326	75 2E 00	        mov     02eh,#00h           ; We'll be testing bits 2E.3 and 2E.2
  890:	  0329	D2 73		        setb    073h
  891:	  032B	A2 73		        mov     c,073h
  892:	  032D	50 0B		        jnc     tc_g0
  893:	  032F	D2 72		        setb    072h
  894:	  0331	A2 72		        mov     c,072h
  895:	  0333	50 05		        jnc     tc_g0
  896:
  897:				        eot     'g',tc_g0
  898+ 1			        putc    #'g'
  899+ 2  0335			??0096:
  900+ 2			        ;jnb     SCON.1,putc_loop
  901+ 2			        ;clr     SCON.1
  902+ 2  0335	75 99 67	        mov     SBUF,#'g'
  903+ 1  0338	80 06		        sjmp    ??0095
  904+ 1  033A			tc_g0:  putc    #'?'
  905+ 2  033A			??0097:
  906+ 2			        ;jnb     SCON.1,putc_loop
  907+ 2			        ;clr     SCON.1
  908+ 2  033A	75 99 3F	        mov     SBUF,#'?'
  909+ 1  033D	75 6E 01	        mov     fail,#001h
  910+ 1  0340			??0095:
  911:
  912:				        ; (better read the following code in execution order)
  913:	  0340	75 2E 08	        mov     02eh,#08h           ; We'll be testing bits 2E.3 and 2E.2
  914:	  0343	80 09		        sjmp    tc_h1               ; jump forward so we can test jump backwards
  915:	  0345	A2 73		tc_h2:  mov     c,073h              ; make sure the target bit is clear
  916:	  0347	40 0F		        jc      tc_h0
  917:	  0349	10 72 0C	        jbc     072h,tc_h0          ; JBC jumps not when target bit clear
  918:	  034C	80 05		        sjmp    tc_h3
  919:	  034E	10 73 F4	tc_h1:  jbc     073h,tc_h2          ; JBC jumps when target bit set
  920:	  0351	80 05		        sjmp    tc_h0
  921:	  0353			tc_h3:
  922:
  923:				        eot     'h',tc_h0
  924+ 1			        putc    #'h'
  925+ 2  0353			??0099:
  926+ 2			        ;jnb     SCON.1,putc_loop
  927+ 2			        ;clr     SCON.1
  928+ 2  0353	75 99 68	        mov     SBUF,#'h'
  929+ 1  0356	80 06		        sjmp    ??0098
  930+ 1  0358			tc_h0:  putc    #'?'
  931+ 2  0358			??0100:
  932+ 2			        ;jnb     SCON.1,putc_loop
  933+ 2			        ;clr     SCON.1
  934+ 2  0358	75 99 3F	        mov     SBUF,#'?'
  935+ 1  035B	75 6E 01	        mov     fail,#001h
  936+ 1  035E			??0098:
  937:
  938:	  035E	75 2F 00	        mov     02fh,#00h
  939:	  0361	75 F0 80	        mov     B,#80h              ; We'll be testing bits B.7 and B.6

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 18



 Line  I  Addr  Code            Source

  940:	  0364	80 0E		        sjmp    tc_i0
  941:	  0366	30 F7 1C	tc_i1:  jnb     B.7,tc_i3           ; JNB jumps not on bit set
  942:	  0369	30 F6 11	        jnb     B.6,tc_i2           ; JNB jumps on bit clear
  943:				        putc    #'?'
  944+ 1  036C			??0101:
  945+ 1			        ;jnb     SCON.1,putc_loop
  946+ 1			        ;clr     SCON.1
  947+ 1  036C	75 99 3F	        mov     SBUF,#'?'
  948:	  036F	75 6E 01	        mov     fail,#001h
  949:	  0372	80 11		        sjmp    tc_i3
  950:	  0374	20 F7 EF	tc_i0:  jb      B.7,tc_i1           ; JB jumps on bit set
  951:				        putc    #'!'
  952+ 1  0377			??0102:
  953+ 1			        ;jnb     SCON.1,putc_loop
  954+ 1			        ;clr     SCON.1
  955+ 1  0377	75 99 21	        mov     SBUF,#'!'
  956:	  037A	75 6E 01	        mov     fail,#001h
  957:	  037D	20 F6 05	tc_i2:  jb      B.6,tc_i3           ; JB jumps not on bit clear
  958:
  959:				        eot     'i',tc_i3
  960+ 1			        putc    #'i'
  961+ 2  0380			??0104:
  962+ 2			        ;jnb     SCON.1,putc_loop
  963+ 2			        ;clr     SCON.1
  964+ 2  0380	75 99 69	        mov     SBUF,#'i'
  965+ 1  0383	80 06		        sjmp    ??0103
  966+ 1  0385			tc_i3:  putc    #'?'
  967+ 2  0385			??0105:
  968+ 2			        ;jnb     SCON.1,putc_loop
  969+ 2			        ;clr     SCON.1
  970+ 2  0385	75 99 3F	        mov     SBUF,#'?'
  971+ 1  0388	75 6E 01	        mov     fail,#001h
  972+ 1  038B			??0103:
  973:
  974:	  038B	75 F0 80	        mov     B,#80h              ; We'll be testing bit B.7
  975:	  038E	20 F7 02	        jb      B.7,tc_j1
  976:	  0391	80 0F		        sjmp    tc_j0
  977:	  0393	C2 F7		tc_j1:  clr     B.7
  978:	  0395	20 F7 0A	        jb      B.7,tc_j0
  979:	  0398	B2 F7		        cpl     B.7
  980:	  039A	30 F7 05	        jnb     B.7,tc_j0
  981:
  982:				        eot     'j',tc_j0
  983+ 1			        putc    #'j'
  984+ 2  039D			??0107:
  985+ 2			        ;jnb     SCON.1,putc_loop
  986+ 2			        ;clr     SCON.1
  987+ 2  039D	75 99 6A	        mov     SBUF,#'j'
  988+ 1  03A0	80 06		        sjmp    ??0106
  989+ 1  03A2			tc_j0:  putc    #'?'
  990+ 2  03A2			??0108:
  991+ 2			        ;jnb     SCON.1,putc_loop
  992+ 2			        ;clr     SCON.1
  993+ 2  03A2	75 99 3F	        mov     SBUF,#'?'
  994+ 1  03A5	75 6E 01	        mov     fail,#001h
  995+ 1  03A8			??0106:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 19



 Line  I  Addr  Code            Source

  996:
  997:	  03A8	75 F0 08	        mov     B,#08h              ; We'll be testing bits B.3 and B.2
  998:	  03AB	C3		        clr     c
  999:	  03AC	82 F3		        anl     c,B.3               ; Test ANL in all 4 input combinations
 1000:	  03AE	40 1F		        jc      tc_k0
 1001:	  03B0	D3		        setb    c
 1002:	  03B1	82 F3		        anl     c,B.3
 1003:	  03B3	50 1A		        jnc     tc_k0
 1004:	  03B5	B0 F2		        anl     c,/B.2
 1005:	  03B7	50 16		        jnc     tc_k0
 1006:				                                    ; CY == 1
 1007:	  03B9	72 F3		        orl     c,B.3               ; ORL-ing with 1 should give 1
 1008:	  03BB	50 12		        jnc     tc_k0
 1009:	  03BD	72 F2		        orl     c,B.2
 1010:	  03BF	50 0E		        jnc     tc_k0
 1011:	  03C1	C3		        clr     c                   ; CY == 0
 1012:	  03C2	72 F3		        orl     c,B.3               ; Now ORL c, 'bit' should give 'bit'
 1013:	  03C4	50 09		        jnc     tc_k0
 1014:	  03C6	A0 F2		        orl     c,/B.2
 1015:	  03C8	50 05		        jnc     tc_k0
 1016:
 1017:				        eot     'k',tc_k0
 1018+ 1			        putc    #'k'
 1019+ 2  03CA			??0110:
 1020+ 2			        ;jnb     SCON.1,putc_loop
 1021+ 2			        ;clr     SCON.1
 1022+ 2  03CA	75 99 6B	        mov     SBUF,#'k'
 1023+ 1  03CD	80 06		        sjmp    ??0109
 1024+ 1  03CF			tc_k0:  putc    #'?'
 1025+ 2  03CF			??0111:
 1026+ 2			        ;jnb     SCON.1,putc_loop
 1027+ 2			        ;clr     SCON.1
 1028+ 2  03CF	75 99 3F	        mov     SBUF,#'?'
 1029+ 1  03D2	75 6E 01	        mov     fail,#001h
 1030+ 1  03D5			??0109:
 1031:
 1032:	  03D5	75 F0 08	        mov     B,#08h              ; We'll be testing bits B.3, B.2 and B.1
 1033:	  03D8	C3		        clr     c
 1034:	  03D9	A2 F3		        mov     c,B.3
 1035:	  03DB	50 15		        jnc     tc_L0
 1036:	  03DD	A2 F2		        mov     c,B.2
 1037:	  03DF	40 11		        jc      tc_L0
 1038:	  03E1	C3		        clr     c
 1039:	  03E2	92 F1		        mov     B.1,c
 1040:	  03E4	20 F1 0B	        jb      B.1,tc_L0
 1041:	  03E7	D3		        setb    c
 1042:	  03E8	92 F1		        mov     B.1,c
 1043:	  03EA	30 F1 05	        jnb     B.1,tc_L0
 1044:
 1045:				        eot     'l',tc_L0
 1046+ 1			        putc    #'l'
 1047+ 2  03ED			??0113:
 1048+ 2			        ;jnb     SCON.1,putc_loop
 1049+ 2			        ;clr     SCON.1
 1050+ 2  03ED	75 99 6C	        mov     SBUF,#'l'
 1051+ 1  03F0	80 06		        sjmp    ??0112

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 20



 Line  I  Addr  Code            Source

 1052+ 1  03F2			tc_L0:  putc    #'?'
 1053+ 2  03F2			??0114:
 1054+ 2			        ;jnb     SCON.1,putc_loop
 1055+ 2			        ;clr     SCON.1
 1056+ 2  03F2	75 99 3F	        mov     SBUF,#'?'
 1057+ 1  03F5	75 6E 01	        mov     fail,#001h
 1058+ 1  03F8			??0112:
 1059:
 1060:	  03F8	75 2E 00	        mov     02eh,#00h           ; We'll be testing bits B.3 and B.2
 1061:	  03FB	D2 F3		        setb    B.3
 1062:	  03FD	A2 F3		        mov     c,B.3
 1063:	  03FF	50 0B		        jnc     tc_m0
 1064:	  0401	D2 F2		        setb    B.2
 1065:	  0403	A2 F2		        mov     c,B.2
 1066:	  0405	50 05		        jnc     tc_m0
 1067:
 1068:				        eot     'm',tc_m0
 1069+ 1			        putc    #'m'
 1070+ 2  0407			??0116:
 1071+ 2			        ;jnb     SCON.1,putc_loop
 1072+ 2			        ;clr     SCON.1
 1073+ 2  0407	75 99 6D	        mov     SBUF,#'m'
 1074+ 1  040A	80 06		        sjmp    ??0115
 1075+ 1  040C			tc_m0:  putc    #'?'
 1076+ 2  040C			??0117:
 1077+ 2			        ;jnb     SCON.1,putc_loop
 1078+ 2			        ;clr     SCON.1
 1079+ 2  040C	75 99 3F	        mov     SBUF,#'?'
 1080+ 1  040F	75 6E 01	        mov     fail,#001h
 1081+ 1  0412			??0115:
 1082:
 1083:				        ; (better read the following code in execution order)
 1084:	  0412	75 F0 08	        mov     B,#08h              ; We'll be testing bits B.3 and B.2
 1085:	  0415	80 09		        sjmp    tc_n1               ; jump forward so we can test jump backwards
 1086:	  0417	A2 F3		tc_n2:  mov     c,B.3               ; make sure the target bit is clear
 1087:	  0419	40 0F		        jc      tc_n0
 1088:	  041B	10 F2 0C	        jbc     B.2,tc_n0           ; JBC jumps not when target bit clear
 1089:	  041E	80 05		        sjmp    tc_n3
 1090:	  0420	10 F3 F4	tc_n1:  jbc     B.3,tc_n2           ; JBC jumps when target bit set
 1091:	  0423	80 05		        sjmp    tc_n0
 1092:	  0425			tc_n3:
 1093:
 1094:				        eot     'n',tc_n0
 1095+ 1			        putc    #'n'
 1096+ 2  0425			??0119:
 1097+ 2			        ;jnb     SCON.1,putc_loop
 1098+ 2			        ;clr     SCON.1
 1099+ 2  0425	75 99 6E	        mov     SBUF,#'n'
 1100+ 1  0428	80 06		        sjmp    ??0118
 1101+ 1  042A			tc_n0:  putc    #'?'
 1102+ 2  042A			??0120:
 1103+ 2			        ;jnb     SCON.1,putc_loop
 1104+ 2			        ;clr     SCON.1
 1105+ 2  042A	75 99 3F	        mov     SBUF,#'?'
 1106+ 1  042D	75 6E 01	        mov     fail,#001h
 1107+ 1  0430			??0118:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 21



 Line  I  Addr  Code            Source

 1108:
 1109:
 1110:
 1111:				        put_crlf                    ; end of test series
 1112+ 1			        putc    #13
 1113+ 2  0430			??0121:
 1114+ 2			        ;jnb     SCON.1,putc_loop
 1115+ 2			        ;clr     SCON.1
 1116+ 2  0430	75 99 0D	        mov     SBUF,#13
 1117+ 1			        putc    #10
 1118+ 2  0433			??0122:
 1119+ 2			        ;jnb     SCON.1,putc_loop
 1120+ 2			        ;clr     SCON.1
 1121+ 2  0433	75 99 0A	        mov     SBUF,#10
 1122:
 1123:				        ;-- Test series D ------------------------------------------------------
 1124:				        ;
 1125:				        ; a.- <XRL A, #imm>
 1126:				        ; b.- <RLC A>
 1127:				        ; c.- <RRC A>
 1128:				        ; d.- <RL A>, <RR A>
 1129:				        ;
 1130:				        ; This test executes a few NOPs too but does NOT check for unintended
 1131:				        ; side effects; we intersperse the nops between the other tests to at
 1132:				        ; least have a chance to catch buggy behavior but that's all.
 1133:
 1134:
 1135:				        putc    #'D'                ; start of test series
 1136+ 1  0436			??0123:
 1137+ 1			        ;jnb     SCON.1,putc_loop
 1138+ 1			        ;clr     SCON.1
 1139+ 1  0436	75 99 44	        mov     SBUF,#'D'
 1140:
 1141:	  0439	74 85		        mov     a,#085h             ; test XRL A,#imm before using it in
 1142:	  043B	64 44		        xrl     a,#044h             ; subsequent tests
 1143:	  043D	60 09		        jz      td_a0
 1144:	  043F	64 C1		        xrl     a,#0c1h
 1145:	  0441	70 05		        jnz     td_a0
 1146:
 1147:				        eot     'a',td_a0
 1148+ 1			        putc    #'a'
 1149+ 2  0443			??0125:
 1150+ 2			        ;jnb     SCON.1,putc_loop
 1151+ 2			        ;clr     SCON.1
 1152+ 2  0443	75 99 61	        mov     SBUF,#'a'
 1153+ 1  0446	80 06		        sjmp    ??0124
 1154+ 1  0448			td_a0:  putc    #'?'
 1155+ 2  0448			??0126:
 1156+ 2			        ;jnb     SCON.1,putc_loop
 1157+ 2			        ;clr     SCON.1
 1158+ 2  0448	75 99 3F	        mov     SBUF,#'?'
 1159+ 1  044B	75 6E 01	        mov     fail,#001h
 1160+ 1  044E			??0124:
 1161:
 1162:	  044E	74 85		        mov     a,#085h             ; Test RLC effects on ACC, ignore CY for now
 1163:	  0450	00		        nop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 22



 Line  I  Addr  Code            Source

 1164:	  0451	C3		        clr     c
 1165:	  0452	33		        rlc     a                   ; a = (a << 1) | 0
 1166:	  0453	F5 60		        mov     dir0,a
 1167:	  0455	64 0A		        xrl     a,#00ah             ; We can't use CJNE because it modifies CY
 1168:	  0457	70 16		        jnz     td_b0               ; check shifted acc
 1169:	  0459	E5 60		        mov     a,dir0
 1170:	  045B	33		        rlc     a                   ; rotate again...
 1171:	  045C	64 15		        xrl     a,#015h             ; ...and check shifted acc with CY at bit 0
 1172:	  045E	70 0F		        jnz     td_b0
 1173:
 1174:	  0460	74 85		        mov     a,#085h             ; Now check RLC effects on CY
 1175:	  0462	00		        nop
 1176:	  0463	C3		        clr     c
 1177:	  0464	33		        rlc     a
 1178:	  0465	50 08		        jnc     td_b0
 1179:	  0467	33		        rlc     a
 1180:	  0468	40 05		        jc      td_b0               ; CY==1 moved into ACC.0
 1181:
 1182:				        eot     'b',td_b0
 1183+ 1			        putc    #'b'
 1184+ 2  046A			??0128:
 1185+ 2			        ;jnb     SCON.1,putc_loop
 1186+ 2			        ;clr     SCON.1
 1187+ 2  046A	75 99 62	        mov     SBUF,#'b'
 1188+ 1  046D	80 06		        sjmp    ??0127
 1189+ 1  046F			td_b0:  putc    #'?'
 1190+ 2  046F			??0129:
 1191+ 2			        ;jnb     SCON.1,putc_loop
 1192+ 2			        ;clr     SCON.1
 1193+ 2  046F	75 99 3F	        mov     SBUF,#'?'
 1194+ 1  0472	75 6E 01	        mov     fail,#001h
 1195+ 1  0475			??0127:
 1196:
 1197:	  0475	74 85		        mov     a,#085h             ; Test RRC effects on ACC, ignore CY for now
 1198:	  0477	C3		        clr     c
 1199:	  0478	13		        rrc     a                   ; will set CY
 1200:	  0479	F5 60		        mov     dir0,a
 1201:	  047B	00		        nop
 1202:	  047C	64 42		        xrl     a,#042h             ; We can't use CJNE because it modifies CY
 1203:	  047E	70 15		        jnz     td_c0               ; check shifted acc
 1204:	  0480	E5 60		        mov     a,dir0
 1205:	  0482	13		        rrc     a                   ; rotate again...
 1206:	  0483	64 A1		        xrl     a,#0a1h             ; ...and check shifted acc with CY at bit 7
 1207:	  0485	70 0E		        jnz     td_c0
 1208:
 1209:	  0487	74 85		        mov     a,#085h             ; Now check RRC effects on CY
 1210:	  0489	C3		        clr     c
 1211:	  048A	13		        rrc     a
 1212:	  048B	50 08		        jnc     td_c0
 1213:	  048D	13		        rrc     a
 1214:	  048E	40 05		        jc      td_c0               ; CY==1 moved into ACC.0
 1215:
 1216:				        eot     'c',td_c0
 1217+ 1			        putc    #'c'
 1218+ 2  0490			??0131:
 1219+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 23



 Line  I  Addr  Code            Source

 1220+ 2			        ;clr     SCON.1
 1221+ 2  0490	75 99 63	        mov     SBUF,#'c'
 1222+ 1  0493	80 06		        sjmp    ??0130
 1223+ 1  0495			td_c0:  putc    #'?'
 1224+ 2  0495			??0132:
 1225+ 2			        ;jnb     SCON.1,putc_loop
 1226+ 2			        ;clr     SCON.1
 1227+ 2  0495	75 99 3F	        mov     SBUF,#'?'
 1228+ 1  0498	75 6E 01	        mov     fail,#001h
 1229+ 1  049B			??0130:
 1230:
 1231:	  049B	74 85		        mov     a,#085h             ; Test RL effects on ACC, ignore CY for now
 1232:	  049D	C3		        clr     c
 1233:	  049E	23		        rl      a                   ; a = (a << 1) | 0
 1234:	  049F	F5 60		        mov     dir0,a
 1235:	  04A1	64 0B		        xrl     a,#00bh             ; We can't use CJNE because it modifies CY
 1236:	  04A3	70 28		        jnz     td_d0               ; check shifted acc
 1237:	  04A5	E5 60		        mov     a,dir0
 1238:	  04A7	D3		        setb    c
 1239:	  04A8	23		        rl      a                   ; rotate again...
 1240:	  04A9	64 16		        xrl     a,#016h             ; ...and check shifted acc with CY at bit 0
 1241:	  04AB	70 20		        jnz     td_d0
 1242:
 1243:	  04AD	74 85		        mov     a,#085h             ; Test RR effects on ACC, ignore CY for now
 1244:	  04AF	C3		        clr     c
 1245:	  04B0	03		        rr      a                   ; will set CY
 1246:	  04B1	F5 60		        mov     dir0,a
 1247:	  04B3	64 C2		        xrl     a,#0c2h             ; We can't use CJNE because it modifies CY
 1248:	  04B5	70 16		        jnz     td_d0               ; check shifted acc
 1249:	  04B7	E5 60		        mov     a,dir0
 1250:	  04B9	03		        rr      a                   ; rotate again...
 1251:	  04BA	64 61		        xrl     a,#061h             ; ...and check shifted acc with CY at bit 7
 1252:	  04BC	70 0F		        jnz     td_d0
 1253:
 1254:	  04BE	74 FF		        mov     a,#0ffh             ; Now make sure RL and RR don't touch CY
 1255:	  04C0	C3		        clr     c
 1256:	  04C1	23		        rl      a
 1257:	  04C2	40 09		        jc      td_d0
 1258:	  04C4	03		        rr      a
 1259:	  04C5	03		        rr      a
 1260:	  04C6	40 05		        jc      td_d0
 1261:
 1262:				        eot     'd',td_d0
 1263+ 1			        putc    #'d'
 1264+ 2  04C8			??0134:
 1265+ 2			        ;jnb     SCON.1,putc_loop
 1266+ 2			        ;clr     SCON.1
 1267+ 2  04C8	75 99 64	        mov     SBUF,#'d'
 1268+ 1  04CB	80 06		        sjmp    ??0133
 1269+ 1  04CD			td_d0:  putc    #'?'
 1270+ 2  04CD			??0135:
 1271+ 2			        ;jnb     SCON.1,putc_loop
 1272+ 2			        ;clr     SCON.1
 1273+ 2  04CD	75 99 3F	        mov     SBUF,#'?'
 1274+ 1  04D0	75 6E 01	        mov     fail,#001h
 1275+ 1  04D3			??0133:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 24



 Line  I  Addr  Code            Source

 1276:
 1277:				        put_crlf                    ; end of test series
 1278+ 1			        putc    #13
 1279+ 2  04D3			??0136:
 1280+ 2			        ;jnb     SCON.1,putc_loop
 1281+ 2			        ;clr     SCON.1
 1282+ 2  04D3	75 99 0D	        mov     SBUF,#13
 1283+ 1			        putc    #10
 1284+ 2  04D6			??0137:
 1285+ 2			        ;jnb     SCON.1,putc_loop
 1286+ 2			        ;clr     SCON.1
 1287+ 2  04D6	75 99 0A	        mov     SBUF,#10
 1288:
 1289:				        ;-- Test series E ------------------------------------------------------
 1290:				        ; Increment
 1291:				        ; a.- <INC A>
 1292:				        ; b.- <INC Rn>
 1293:				        ; c.- <INC @Ri>
 1294:				        ; d.- <MOV dir,#imm>
 1295:				        ; e.- <INC dir>
 1296:				        ; f.- <DEC A>
 1297:				        ; g.- <DEC Rn>
 1298:				        ; h.- <DEC @Ri>
 1299:				        ; i.- <DEC dir>
 1300:
 1301:				        putc    #'E'                ; start of test series
 1302+ 1  04D9			??0138:
 1303+ 1			        ;jnb     SCON.1,putc_loop
 1304+ 1			        ;clr     SCON.1
 1305+ 1  04D9	75 99 45	        mov     SBUF,#'E'
 1306:
 1307:				te_ma   macro   target, error_loc
 1308:				        mov     target,#080h
 1309:				        inc     target
 1310:				        cjne    target,#081h,error_loc
 1311:				        mov     target,#0ffh
 1312:				        clr     c
 1313:				        inc     target
 1314:				        jc      error_loc
 1315:				        cjne    target,#000h,error_loc
 1316:				        endm
 1317:
 1318:				        te_ma   a,te_a0             ; Test <INC A>
 1319+ 1  04DC	74 80		        mov     a,#080h
 1320+ 1  04DE	04		        inc     a
 1321+ 1  04DF	B4 81 0E	        cjne    a,#081h,te_a0
 1322+ 1  04E2	74 FF		        mov     a,#0ffh
 1323+ 1  04E4	C3		        clr     c
 1324+ 1  04E5	04		        inc     a
 1325+ 1  04E6	40 08		        jc      te_a0
 1326+ 1  04E8	B4 00 05	        cjne    a,#000h,te_a0
 1327:
 1328:				        eot     'a',te_a0
 1329+ 1			        putc    #'a'
 1330+ 2  04EB			??0140:
 1331+ 2			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 25



 Line  I  Addr  Code            Source

 1332+ 2			        ;clr     SCON.1
 1333+ 2  04EB	75 99 61	        mov     SBUF,#'a'
 1334+ 1  04EE	80 06		        sjmp    ??0139
 1335+ 1  04F0			te_a0:  putc    #'?'
 1336+ 2  04F0			??0141:
 1337+ 2			        ;jnb     SCON.1,putc_loop
 1338+ 2			        ;clr     SCON.1
 1339+ 2  04F0	75 99 3F	        mov     SBUF,#'?'
 1340+ 1  04F3	75 6E 01	        mov     fail,#001h
 1341+ 1  04F6			??0139:
 1342:
 1343:	  04F6	78 66		        mov     r0,#066h
 1344:
 1345:				        te_ma   r0,te_b0
 1346+ 1  04F8	78 80		        mov     r0,#080h
 1347+ 1  04FA	08		        inc     r0
 1348+ 1  04FB	B8 81 77	        cjne    r0,#081h,te_b0
 1349+ 1  04FE	78 FF		        mov     r0,#0ffh
 1350+ 1  0500	C3		        clr     c
 1351+ 1  0501	08		        inc     r0
 1352+ 1  0502	40 71		        jc      te_b0
 1353+ 1  0504	B8 00 6E	        cjne    r0,#000h,te_b0
 1354:				        te_ma   r1,te_b0
 1355+ 1  0507	79 80		        mov     r1,#080h
 1356+ 1  0509	09		        inc     r1
 1357+ 1  050A	B9 81 68	        cjne    r1,#081h,te_b0
 1358+ 1  050D	79 FF		        mov     r1,#0ffh
 1359+ 1  050F	C3		        clr     c
 1360+ 1  0510	09		        inc     r1
 1361+ 1  0511	40 62		        jc      te_b0
 1362+ 1  0513	B9 00 5F	        cjne    r1,#000h,te_b0
 1363:				        te_ma   r2,te_b0
 1364+ 1  0516	7A 80		        mov     r2,#080h
 1365+ 1  0518	0A		        inc     r2
 1366+ 1  0519	BA 81 59	        cjne    r2,#081h,te_b0
 1367+ 1  051C	7A FF		        mov     r2,#0ffh
 1368+ 1  051E	C3		        clr     c
 1369+ 1  051F	0A		        inc     r2
 1370+ 1  0520	40 53		        jc      te_b0
 1371+ 1  0522	BA 00 50	        cjne    r2,#000h,te_b0
 1372:				        te_ma   r3,te_b0
 1373+ 1  0525	7B 80		        mov     r3,#080h
 1374+ 1  0527	0B		        inc     r3
 1375+ 1  0528	BB 81 4A	        cjne    r3,#081h,te_b0
 1376+ 1  052B	7B FF		        mov     r3,#0ffh
 1377+ 1  052D	C3		        clr     c
 1378+ 1  052E	0B		        inc     r3
 1379+ 1  052F	40 44		        jc      te_b0
 1380+ 1  0531	BB 00 41	        cjne    r3,#000h,te_b0
 1381:				        te_ma   r4,te_b0
 1382+ 1  0534	7C 80		        mov     r4,#080h
 1383+ 1  0536	0C		        inc     r4
 1384+ 1  0537	BC 81 3B	        cjne    r4,#081h,te_b0
 1385+ 1  053A	7C FF		        mov     r4,#0ffh
 1386+ 1  053C	C3		        clr     c
 1387+ 1  053D	0C		        inc     r4

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 26



 Line  I  Addr  Code            Source

 1388+ 1  053E	40 35		        jc      te_b0
 1389+ 1  0540	BC 00 32	        cjne    r4,#000h,te_b0
 1390:				        te_ma   r5,te_b0
 1391+ 1  0543	7D 80		        mov     r5,#080h
 1392+ 1  0545	0D		        inc     r5
 1393+ 1  0546	BD 81 2C	        cjne    r5,#081h,te_b0
 1394+ 1  0549	7D FF		        mov     r5,#0ffh
 1395+ 1  054B	C3		        clr     c
 1396+ 1  054C	0D		        inc     r5
 1397+ 1  054D	40 26		        jc      te_b0
 1398+ 1  054F	BD 00 23	        cjne    r5,#000h,te_b0
 1399:				        te_ma   r6,te_b0
 1400+ 1  0552	7E 80		        mov     r6,#080h
 1401+ 1  0554	0E		        inc     r6
 1402+ 1  0555	BE 81 1D	        cjne    r6,#081h,te_b0
 1403+ 1  0558	7E FF		        mov     r6,#0ffh
 1404+ 1  055A	C3		        clr     c
 1405+ 1  055B	0E		        inc     r6
 1406+ 1  055C	40 17		        jc      te_b0
 1407+ 1  055E	BE 00 14	        cjne    r6,#000h,te_b0
 1408:				        te_ma   r7,te_b0
 1409+ 1  0561	7F 80		        mov     r7,#080h
 1410+ 1  0563	0F		        inc     r7
 1411+ 1  0564	BF 81 0E	        cjne    r7,#081h,te_b0
 1412+ 1  0567	7F FF		        mov     r7,#0ffh
 1413+ 1  0569	C3		        clr     c
 1414+ 1  056A	0F		        inc     r7
 1415+ 1  056B	40 08		        jc      te_b0
 1416+ 1  056D	BF 00 05	        cjne    r7,#000h,te_b0
 1417:
 1418:				        eot     'b',te_b0
 1419+ 1			        putc    #'b'
 1420+ 2  0570			??0143:
 1421+ 2			        ;jnb     SCON.1,putc_loop
 1422+ 2			        ;clr     SCON.1
 1423+ 2  0570	75 99 62	        mov     SBUF,#'b'
 1424+ 1  0573	80 06		        sjmp    ??0142
 1425+ 1  0575			te_b0:  putc    #'?'
 1426+ 2  0575			??0144:
 1427+ 2			        ;jnb     SCON.1,putc_loop
 1428+ 2			        ;clr     SCON.1
 1429+ 2  0575	75 99 3F	        mov     SBUF,#'?'
 1430+ 1  0578	75 6E 01	        mov     fail,#001h
 1431+ 1  057B			??0142:
 1432:
 1433:	  057B	78 60		        mov     r0,#dir0
 1434:	  057D	79 31		        mov     r1,#031h
 1435:
 1436:				        te_ma   @r0,te_c0
 1437+ 1  057F	76 80		        mov     @r0,#080h
 1438+ 1  0581	06		        inc     @r0
 1439+ 1  0582	B6 81 1D	        cjne    @r0,#081h,te_c0
 1440+ 1  0585	76 FF		        mov     @r0,#0ffh
 1441+ 1  0587	C3		        clr     c
 1442+ 1  0588	06		        inc     @r0
 1443+ 1  0589	40 17		        jc      te_c0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 27



 Line  I  Addr  Code            Source

 1444+ 1  058B	B6 00 14	        cjne    @r0,#000h,te_c0
 1445:				        te_ma   @r1,te_c0
 1446+ 1  058E	77 80		        mov     @r1,#080h
 1447+ 1  0590	07		        inc     @r1
 1448+ 1  0591	B7 81 0E	        cjne    @r1,#081h,te_c0
 1449+ 1  0594	77 FF		        mov     @r1,#0ffh
 1450+ 1  0596	C3		        clr     c
 1451+ 1  0597	07		        inc     @r1
 1452+ 1  0598	40 08		        jc      te_c0
 1453+ 1  059A	B7 00 05	        cjne    @r1,#000h,te_c0
 1454:
 1455:				        eot     'c',te_c0
 1456+ 1			        putc    #'c'
 1457+ 2  059D			??0146:
 1458+ 2			        ;jnb     SCON.1,putc_loop
 1459+ 2			        ;clr     SCON.1
 1460+ 2  059D	75 99 63	        mov     SBUF,#'c'
 1461+ 1  05A0	80 06		        sjmp    ??0145
 1462+ 1  05A2			te_c0:  putc    #'?'
 1463+ 2  05A2			??0147:
 1464+ 2			        ;jnb     SCON.1,putc_loop
 1465+ 2			        ;clr     SCON.1
 1466+ 2  05A2	75 99 3F	        mov     SBUF,#'?'
 1467+ 1  05A5	75 6E 01	        mov     fail,#001h
 1468+ 1  05A8			??0145:
 1469:
 1470:	  05A8	75 60 34	        mov     dir0,#034h          ; Test <MOV dir,#imm> before using it in
 1471:	  05AB	E5 60		        mov     a,dir0              ; subsequent tests
 1472:	  05AD	B4 34 05	        cjne    a,#034h,te_d0
 1473:
 1474:				        eot     'd',te_d0
 1475+ 1			        putc    #'d'
 1476+ 2  05B0			??0149:
 1477+ 2			        ;jnb     SCON.1,putc_loop
 1478+ 2			        ;clr     SCON.1
 1479+ 2  05B0	75 99 64	        mov     SBUF,#'d'
 1480+ 1  05B3	80 06		        sjmp    ??0148
 1481+ 1  05B5			te_d0:  putc    #'?'
 1482+ 2  05B5			??0150:
 1483+ 2			        ;jnb     SCON.1,putc_loop
 1484+ 2			        ;clr     SCON.1
 1485+ 2  05B5	75 99 3F	        mov     SBUF,#'?'
 1486+ 1  05B8	75 6E 01	        mov     fail,#001h
 1487+ 1  05BB			??0148:
 1488:
 1489:	  05BB	75 39 80	        mov     039h,#080h
 1490:	  05BE	05 39		        inc     039h
 1491:	  05C0	E5 39		        mov     a,039h
 1492:	  05C2	B4 81 12	        cjne    a,#081h,te_e0
 1493:	  05C5	75 39 FF	        mov     039h,#0ffh
 1494:	  05C8	C3		        clr     c
 1495:	  05C9	05 39		        inc     039h
 1496:	  05CB	40 0A		        jc      te_e0
 1497:	  05CD	E5 39		        mov     a,039h
 1498:	  05CF	B4 00 05	        cjne    a,#000h,te_e0
 1499:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 28



 Line  I  Addr  Code            Source

 1500:				        eot     'e',te_e0
 1501+ 1			        putc    #'e'
 1502+ 2  05D2			??0152:
 1503+ 2			        ;jnb     SCON.1,putc_loop
 1504+ 2			        ;clr     SCON.1
 1505+ 2  05D2	75 99 65	        mov     SBUF,#'e'
 1506+ 1  05D5	80 06		        sjmp    ??0151
 1507+ 1  05D7			te_e0:  putc    #'?'
 1508+ 2  05D7			??0153:
 1509+ 2			        ;jnb     SCON.1,putc_loop
 1510+ 2			        ;clr     SCON.1
 1511+ 2  05D7	75 99 3F	        mov     SBUF,#'?'
 1512+ 1  05DA	75 6E 01	        mov     fail,#001h
 1513+ 1  05DD			??0151:
 1514:
 1515:				te_mf   macro   target, error_loc
 1516:				        mov     target,#001h
 1517:				        dec     target
 1518:				        cjne    target,#000h,error_loc
 1519:				        clr     c
 1520:				        dec     target
 1521:				        jc      error_loc
 1522:				        cjne    target,#0ffh,error_loc
 1523:				        endm
 1524:
 1525:				        te_ma   a,te_f0             ; Test <INC A>
 1526+ 1  05DD	74 80		        mov     a,#080h
 1527+ 1  05DF	04		        inc     a
 1528+ 1  05E0	B4 81 0E	        cjne    a,#081h,te_f0
 1529+ 1  05E3	74 FF		        mov     a,#0ffh
 1530+ 1  05E5	C3		        clr     c
 1531+ 1  05E6	04		        inc     a
 1532+ 1  05E7	40 08		        jc      te_f0
 1533+ 1  05E9	B4 00 05	        cjne    a,#000h,te_f0
 1534:
 1535:				        eot     'f',te_f0
 1536+ 1			        putc    #'f'
 1537+ 2  05EC			??0155:
 1538+ 2			        ;jnb     SCON.1,putc_loop
 1539+ 2			        ;clr     SCON.1
 1540+ 2  05EC	75 99 66	        mov     SBUF,#'f'
 1541+ 1  05EF	80 06		        sjmp    ??0154
 1542+ 1  05F1			te_f0:  putc    #'?'
 1543+ 2  05F1			??0156:
 1544+ 2			        ;jnb     SCON.1,putc_loop
 1545+ 2			        ;clr     SCON.1
 1546+ 2  05F1	75 99 3F	        mov     SBUF,#'?'
 1547+ 1  05F4	75 6E 01	        mov     fail,#001h
 1548+ 1  05F7			??0154:
 1549:
 1550:	  05F7	78 66		        mov     r0,#066h
 1551:
 1552:				        te_ma   r0,te_g0
 1553+ 1  05F9	78 80		        mov     r0,#080h
 1554+ 1  05FB	08		        inc     r0
 1555+ 1  05FC	B8 81 77	        cjne    r0,#081h,te_g0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 29



 Line  I  Addr  Code            Source

 1556+ 1  05FF	78 FF		        mov     r0,#0ffh
 1557+ 1  0601	C3		        clr     c
 1558+ 1  0602	08		        inc     r0
 1559+ 1  0603	40 71		        jc      te_g0
 1560+ 1  0605	B8 00 6E	        cjne    r0,#000h,te_g0
 1561:				        te_ma   r1,te_g0
 1562+ 1  0608	79 80		        mov     r1,#080h
 1563+ 1  060A	09		        inc     r1
 1564+ 1  060B	B9 81 68	        cjne    r1,#081h,te_g0
 1565+ 1  060E	79 FF		        mov     r1,#0ffh
 1566+ 1  0610	C3		        clr     c
 1567+ 1  0611	09		        inc     r1
 1568+ 1  0612	40 62		        jc      te_g0
 1569+ 1  0614	B9 00 5F	        cjne    r1,#000h,te_g0
 1570:				        te_ma   r2,te_g0
 1571+ 1  0617	7A 80		        mov     r2,#080h
 1572+ 1  0619	0A		        inc     r2
 1573+ 1  061A	BA 81 59	        cjne    r2,#081h,te_g0
 1574+ 1  061D	7A FF		        mov     r2,#0ffh
 1575+ 1  061F	C3		        clr     c
 1576+ 1  0620	0A		        inc     r2
 1577+ 1  0621	40 53		        jc      te_g0
 1578+ 1  0623	BA 00 50	        cjne    r2,#000h,te_g0
 1579:				        te_ma   r3,te_g0
 1580+ 1  0626	7B 80		        mov     r3,#080h
 1581+ 1  0628	0B		        inc     r3
 1582+ 1  0629	BB 81 4A	        cjne    r3,#081h,te_g0
 1583+ 1  062C	7B FF		        mov     r3,#0ffh
 1584+ 1  062E	C3		        clr     c
 1585+ 1  062F	0B		        inc     r3
 1586+ 1  0630	40 44		        jc      te_g0
 1587+ 1  0632	BB 00 41	        cjne    r3,#000h,te_g0
 1588:				        te_ma   r4,te_g0
 1589+ 1  0635	7C 80		        mov     r4,#080h
 1590+ 1  0637	0C		        inc     r4
 1591+ 1  0638	BC 81 3B	        cjne    r4,#081h,te_g0
 1592+ 1  063B	7C FF		        mov     r4,#0ffh
 1593+ 1  063D	C3		        clr     c
 1594+ 1  063E	0C		        inc     r4
 1595+ 1  063F	40 35		        jc      te_g0
 1596+ 1  0641	BC 00 32	        cjne    r4,#000h,te_g0
 1597:				        te_ma   r5,te_g0
 1598+ 1  0644	7D 80		        mov     r5,#080h
 1599+ 1  0646	0D		        inc     r5
 1600+ 1  0647	BD 81 2C	        cjne    r5,#081h,te_g0
 1601+ 1  064A	7D FF		        mov     r5,#0ffh
 1602+ 1  064C	C3		        clr     c
 1603+ 1  064D	0D		        inc     r5
 1604+ 1  064E	40 26		        jc      te_g0
 1605+ 1  0650	BD 00 23	        cjne    r5,#000h,te_g0
 1606:				        te_ma   r6,te_g0
 1607+ 1  0653	7E 80		        mov     r6,#080h
 1608+ 1  0655	0E		        inc     r6
 1609+ 1  0656	BE 81 1D	        cjne    r6,#081h,te_g0
 1610+ 1  0659	7E FF		        mov     r6,#0ffh
 1611+ 1  065B	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 30



 Line  I  Addr  Code            Source

 1612+ 1  065C	0E		        inc     r6
 1613+ 1  065D	40 17		        jc      te_g0
 1614+ 1  065F	BE 00 14	        cjne    r6,#000h,te_g0
 1615:				        te_ma   r7,te_g0
 1616+ 1  0662	7F 80		        mov     r7,#080h
 1617+ 1  0664	0F		        inc     r7
 1618+ 1  0665	BF 81 0E	        cjne    r7,#081h,te_g0
 1619+ 1  0668	7F FF		        mov     r7,#0ffh
 1620+ 1  066A	C3		        clr     c
 1621+ 1  066B	0F		        inc     r7
 1622+ 1  066C	40 08		        jc      te_g0
 1623+ 1  066E	BF 00 05	        cjne    r7,#000h,te_g0
 1624:
 1625:				        eot     'g',te_g0
 1626+ 1			        putc    #'g'
 1627+ 2  0671			??0158:
 1628+ 2			        ;jnb     SCON.1,putc_loop
 1629+ 2			        ;clr     SCON.1
 1630+ 2  0671	75 99 67	        mov     SBUF,#'g'
 1631+ 1  0674	80 06		        sjmp    ??0157
 1632+ 1  0676			te_g0:  putc    #'?'
 1633+ 2  0676			??0159:
 1634+ 2			        ;jnb     SCON.1,putc_loop
 1635+ 2			        ;clr     SCON.1
 1636+ 2  0676	75 99 3F	        mov     SBUF,#'?'
 1637+ 1  0679	75 6E 01	        mov     fail,#001h
 1638+ 1  067C			??0157:
 1639:
 1640:	  067C	78 60		        mov     r0,#dir0
 1641:	  067E	79 31		        mov     r1,#031h
 1642:
 1643:				        te_ma   @r0,te_h0
 1644+ 1  0680	76 80		        mov     @r0,#080h
 1645+ 1  0682	06		        inc     @r0
 1646+ 1  0683	B6 81 1D	        cjne    @r0,#081h,te_h0
 1647+ 1  0686	76 FF		        mov     @r0,#0ffh
 1648+ 1  0688	C3		        clr     c
 1649+ 1  0689	06		        inc     @r0
 1650+ 1  068A	40 17		        jc      te_h0
 1651+ 1  068C	B6 00 14	        cjne    @r0,#000h,te_h0
 1652:				        te_ma   @r1,te_h0
 1653+ 1  068F	77 80		        mov     @r1,#080h
 1654+ 1  0691	07		        inc     @r1
 1655+ 1  0692	B7 81 0E	        cjne    @r1,#081h,te_h0
 1656+ 1  0695	77 FF		        mov     @r1,#0ffh
 1657+ 1  0697	C3		        clr     c
 1658+ 1  0698	07		        inc     @r1
 1659+ 1  0699	40 08		        jc      te_h0
 1660+ 1  069B	B7 00 05	        cjne    @r1,#000h,te_h0
 1661:
 1662:				        eot     'h',te_h0
 1663+ 1			        putc    #'h'
 1664+ 2  069E			??0161:
 1665+ 2			        ;jnb     SCON.1,putc_loop
 1666+ 2			        ;clr     SCON.1
 1667+ 2  069E	75 99 68	        mov     SBUF,#'h'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 31



 Line  I  Addr  Code            Source

 1668+ 1  06A1	80 06		        sjmp    ??0160
 1669+ 1  06A3			te_h0:  putc    #'?'
 1670+ 2  06A3			??0162:
 1671+ 2			        ;jnb     SCON.1,putc_loop
 1672+ 2			        ;clr     SCON.1
 1673+ 2  06A3	75 99 3F	        mov     SBUF,#'?'
 1674+ 1  06A6	75 6E 01	        mov     fail,#001h
 1675+ 1  06A9			??0160:
 1676:
 1677:	  06A9	75 60 34	        mov     dir0,#034h          ; Test <MOV dir,#imm> before using it in
 1678:	  06AC	E5 60		        mov     a,dir0              ; subsequent tests
 1679:	  06AE	B4 34 05	        cjne    a,#034h,te_i0
 1680:
 1681:				        eot     'i',te_i0
 1682+ 1			        putc    #'i'
 1683+ 2  06B1			??0164:
 1684+ 2			        ;jnb     SCON.1,putc_loop
 1685+ 2			        ;clr     SCON.1
 1686+ 2  06B1	75 99 69	        mov     SBUF,#'i'
 1687+ 1  06B4	80 06		        sjmp    ??0163
 1688+ 1  06B6			te_i0:  putc    #'?'
 1689+ 2  06B6			??0165:
 1690+ 2			        ;jnb     SCON.1,putc_loop
 1691+ 2			        ;clr     SCON.1
 1692+ 2  06B6	75 99 3F	        mov     SBUF,#'?'
 1693+ 1  06B9	75 6E 01	        mov     fail,#001h
 1694+ 1  06BC			??0163:
 1695:
 1696:				        put_crlf                    ; end of test series
 1697+ 1			        putc    #13
 1698+ 2  06BC			??0166:
 1699+ 2			        ;jnb     SCON.1,putc_loop
 1700+ 2			        ;clr     SCON.1
 1701+ 2  06BC	75 99 0D	        mov     SBUF,#13
 1702+ 1			        putc    #10
 1703+ 2  06BF			??0167:
 1704+ 2			        ;jnb     SCON.1,putc_loop
 1705+ 2			        ;clr     SCON.1
 1706+ 2  06BF	75 99 0A	        mov     SBUF,#10
 1707:
 1708:
 1709:				        ;-- Test series F ------------------------------------------------------
 1710:				        ;
 1711:				        ; a.- <MOV dir,Rn>
 1712:				        ; b.- <MOV dir,@Ri>
 1713:				        ; c.- <MOV dir,dir>
 1714:				        ; d.- <MOV Rn,dir>
 1715:				        ; e.- <MOV @Ri,dir>
 1716:				        ; f.- <MOV Rn,A>
 1717:				        ; g.- <MOV @Ri,A>
 1718:				        ; h.- <MOV dir,A>
 1719:
 1720:
 1721:				        putc    #'F'                ; start of test series
 1722+ 1  06C2			??0168:
 1723+ 1			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 32



 Line  I  Addr  Code            Source

 1724+ 1			        ;clr     SCON.1
 1725+ 1  06C2	75 99 46	        mov     SBUF,#'F'
 1726:
 1727:				tf_ma   macro   rn, n, error_loc
 1728:				        mov     rn,#(091h+n)
 1729:				        mov     039h,rn
 1730:				        mov     a,039h
 1731:				        cjne    a,#(091h+n),error_loc
 1732:				        endm
 1733:
 1734:				        tf_ma   r0,0,tf_a0
 1735+ 1  06C5	78 91		        mov     r0,#(091h+0)
 1736+ 1  06C7	88 39		        mov     039h,r0
 1737+ 1  06C9	E5 39		        mov     a,039h
 1738+ 1  06CB	B4 91 44	        cjne    a,#(091h+0),tf_a0
 1739:				        tf_ma   r1,1,tf_a0
 1740+ 1  06CE	79 92		        mov     r1,#(091h+1)
 1741+ 1  06D0	89 39		        mov     039h,r1
 1742+ 1  06D2	E5 39		        mov     a,039h
 1743+ 1  06D4	B4 92 3B	        cjne    a,#(091h+1),tf_a0
 1744:				        tf_ma   r2,2,tf_a0
 1745+ 1  06D7	7A 93		        mov     r2,#(091h+2)
 1746+ 1  06D9	8A 39		        mov     039h,r2
 1747+ 1  06DB	E5 39		        mov     a,039h
 1748+ 1  06DD	B4 93 32	        cjne    a,#(091h+2),tf_a0
 1749:				        tf_ma   r3,3,tf_a0
 1750+ 1  06E0	7B 94		        mov     r3,#(091h+3)
 1751+ 1  06E2	8B 39		        mov     039h,r3
 1752+ 1  06E4	E5 39		        mov     a,039h
 1753+ 1  06E6	B4 94 29	        cjne    a,#(091h+3),tf_a0
 1754:				        tf_ma   r4,4,tf_a0
 1755+ 1  06E9	7C 95		        mov     r4,#(091h+4)
 1756+ 1  06EB	8C 39		        mov     039h,r4
 1757+ 1  06ED	E5 39		        mov     a,039h
 1758+ 1  06EF	B4 95 20	        cjne    a,#(091h+4),tf_a0
 1759:				        tf_ma   r5,5,tf_a0
 1760+ 1  06F2	7D 96		        mov     r5,#(091h+5)
 1761+ 1  06F4	8D 39		        mov     039h,r5
 1762+ 1  06F6	E5 39		        mov     a,039h
 1763+ 1  06F8	B4 96 17	        cjne    a,#(091h+5),tf_a0
 1764:				        tf_ma   r6,6,tf_a0
 1765+ 1  06FB	7E 97		        mov     r6,#(091h+6)
 1766+ 1  06FD	8E 39		        mov     039h,r6
 1767+ 1  06FF	E5 39		        mov     a,039h
 1768+ 1  0701	B4 97 0E	        cjne    a,#(091h+6),tf_a0
 1769:				        tf_ma   r7,7,tf_a0
 1770+ 1  0704	7F 98		        mov     r7,#(091h+7)
 1771+ 1  0706	8F 39		        mov     039h,r7
 1772+ 1  0708	E5 39		        mov     a,039h
 1773+ 1  070A	B4 98 05	        cjne    a,#(091h+7),tf_a0
 1774:
 1775:				        eot     'a',tf_a0
 1776+ 1			        putc    #'a'
 1777+ 2  070D			??0170:
 1778+ 2			        ;jnb     SCON.1,putc_loop
 1779+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 33



 Line  I  Addr  Code            Source

 1780+ 2  070D	75 99 61	        mov     SBUF,#'a'
 1781+ 1  0710	80 06		        sjmp    ??0169
 1782+ 1  0712			tf_a0:  putc    #'?'
 1783+ 2  0712			??0171:
 1784+ 2			        ;jnb     SCON.1,putc_loop
 1785+ 2			        ;clr     SCON.1
 1786+ 2  0712	75 99 3F	        mov     SBUF,#'?'
 1787+ 1  0715	75 6E 01	        mov     fail,#001h
 1788+ 1  0718			??0169:
 1789:
 1790:				        tf_ma   @r0,0,tf_b0
 1791+ 1  0718	76 91		        mov     @r0,#(091h+0)
 1792+ 1  071A	86 39		        mov     039h,@r0
 1793+ 1  071C	E5 39		        mov     a,039h
 1794+ 1  071E	B4 91 0E	        cjne    a,#(091h+0),tf_b0
 1795:				        tf_ma   @r1,1,tf_b0
 1796+ 1  0721	77 92		        mov     @r1,#(091h+1)
 1797+ 1  0723	87 39		        mov     039h,@r1
 1798+ 1  0725	E5 39		        mov     a,039h
 1799+ 1  0727	B4 92 05	        cjne    a,#(091h+1),tf_b0
 1800:
 1801:				        eot     'b',tf_b0
 1802+ 1			        putc    #'b'
 1803+ 2  072A			??0173:
 1804+ 2			        ;jnb     SCON.1,putc_loop
 1805+ 2			        ;clr     SCON.1
 1806+ 2  072A	75 99 62	        mov     SBUF,#'b'
 1807+ 1  072D	80 06		        sjmp    ??0172
 1808+ 1  072F			tf_b0:  putc    #'?'
 1809+ 2  072F			??0174:
 1810+ 2			        ;jnb     SCON.1,putc_loop
 1811+ 2			        ;clr     SCON.1
 1812+ 2  072F	75 99 3F	        mov     SBUF,#'?'
 1813+ 1  0732	75 6E 01	        mov     fail,#001h
 1814+ 1  0735			??0172:
 1815:
 1816:	  0735	75 31 91	        mov     031h,#091h
 1817:	  0738	85 31 39	        mov     039h,031h
 1818:	  073B	E5 39		        mov     a,039h
 1819:	  073D	B4 91 05	        cjne    a,#091h,tf_c0
 1820:
 1821:				        eot     'c',tf_c0
 1822+ 1			        putc    #'c'
 1823+ 2  0740			??0176:
 1824+ 2			        ;jnb     SCON.1,putc_loop
 1825+ 2			        ;clr     SCON.1
 1826+ 2  0740	75 99 63	        mov     SBUF,#'c'
 1827+ 1  0743	80 06		        sjmp    ??0175
 1828+ 1  0745			tf_c0:  putc    #'?'
 1829+ 2  0745			??0177:
 1830+ 2			        ;jnb     SCON.1,putc_loop
 1831+ 2			        ;clr     SCON.1
 1832+ 2  0745	75 99 3F	        mov     SBUF,#'?'
 1833+ 1  0748	75 6E 01	        mov     fail,#001h
 1834+ 1  074B			??0175:
 1835:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 34



 Line  I  Addr  Code            Source

 1836:				tf_md   macro   rn, n, error_loc
 1837:				        mov     039h,#(091h+n)
 1838:				        mov     rn,039h
 1839:				        cjne    rn,#(091h+n),error_loc
 1840:				        endm
 1841:
 1842:				        tf_md   r0,0,tf_d0
 1843+ 1  074B	75 39 91	        mov     039h,#(091h+0)
 1844+ 1  074E	A8 39		        mov     r0,039h
 1845+ 1  0750	B8 91 3D	        cjne    r0,#(091h+0),tf_d0
 1846:				        tf_md   r1,1,tf_d0
 1847+ 1  0753	75 39 92	        mov     039h,#(091h+1)
 1848+ 1  0756	A9 39		        mov     r1,039h
 1849+ 1  0758	B9 92 35	        cjne    r1,#(091h+1),tf_d0
 1850:				        tf_md   r2,2,tf_d0
 1851+ 1  075B	75 39 93	        mov     039h,#(091h+2)
 1852+ 1  075E	AA 39		        mov     r2,039h
 1853+ 1  0760	BA 93 2D	        cjne    r2,#(091h+2),tf_d0
 1854:				        tf_md   r3,3,tf_d0
 1855+ 1  0763	75 39 94	        mov     039h,#(091h+3)
 1856+ 1  0766	AB 39		        mov     r3,039h
 1857+ 1  0768	BB 94 25	        cjne    r3,#(091h+3),tf_d0
 1858:				        tf_md   r4,4,tf_d0
 1859+ 1  076B	75 39 95	        mov     039h,#(091h+4)
 1860+ 1  076E	AC 39		        mov     r4,039h
 1861+ 1  0770	BC 95 1D	        cjne    r4,#(091h+4),tf_d0
 1862:				        tf_md   r5,5,tf_d0
 1863+ 1  0773	75 39 96	        mov     039h,#(091h+5)
 1864+ 1  0776	AD 39		        mov     r5,039h
 1865+ 1  0778	BD 96 15	        cjne    r5,#(091h+5),tf_d0
 1866:				        tf_md   r6,6,tf_d0
 1867+ 1  077B	75 39 97	        mov     039h,#(091h+6)
 1868+ 1  077E	AE 39		        mov     r6,039h
 1869+ 1  0780	BE 97 0D	        cjne    r6,#(091h+6),tf_d0
 1870:				        tf_md   r7,7,tf_d0
 1871+ 1  0783	75 39 98	        mov     039h,#(091h+7)
 1872+ 1  0786	AF 39		        mov     r7,039h
 1873+ 1  0788	BF 98 05	        cjne    r7,#(091h+7),tf_d0
 1874:
 1875:				        eot     'd',tf_d0
 1876+ 1			        putc    #'d'
 1877+ 2  078B			??0179:
 1878+ 2			        ;jnb     SCON.1,putc_loop
 1879+ 2			        ;clr     SCON.1
 1880+ 2  078B	75 99 64	        mov     SBUF,#'d'
 1881+ 1  078E	80 06		        sjmp    ??0178
 1882+ 1  0790			tf_d0:  putc    #'?'
 1883+ 2  0790			??0180:
 1884+ 2			        ;jnb     SCON.1,putc_loop
 1885+ 2			        ;clr     SCON.1
 1886+ 2  0790	75 99 3F	        mov     SBUF,#'?'
 1887+ 1  0793	75 6E 01	        mov     fail,#001h
 1888+ 1  0796			??0178:
 1889:
 1890:	  0796	78 60		        mov     r0,#dir0
 1891:	  0798	79 31		        mov     r1,#031h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 35



 Line  I  Addr  Code            Source

 1892:				        tf_md   @r0,0,tf_e0
 1893+ 1  079A	75 39 91	        mov     039h,#(091h+0)
 1894+ 1  079D	A6 39		        mov     @r0,039h
 1895+ 1  079F	B6 91 0D	        cjne    @r0,#(091h+0),tf_e0
 1896:				        tf_md   @r1,1,tf_e0
 1897+ 1  07A2	75 39 92	        mov     039h,#(091h+1)
 1898+ 1  07A5	A7 39		        mov     @r1,039h
 1899+ 1  07A7	B7 92 05	        cjne    @r1,#(091h+1),tf_e0
 1900:
 1901:				        eot     'e',tf_e0
 1902+ 1			        putc    #'e'
 1903+ 2  07AA			??0182:
 1904+ 2			        ;jnb     SCON.1,putc_loop
 1905+ 2			        ;clr     SCON.1
 1906+ 2  07AA	75 99 65	        mov     SBUF,#'e'
 1907+ 1  07AD	80 06		        sjmp    ??0181
 1908+ 1  07AF			tf_e0:  putc    #'?'
 1909+ 2  07AF			??0183:
 1910+ 2			        ;jnb     SCON.1,putc_loop
 1911+ 2			        ;clr     SCON.1
 1912+ 2  07AF	75 99 3F	        mov     SBUF,#'?'
 1913+ 1  07B2	75 6E 01	        mov     fail,#001h
 1914+ 1  07B5			??0181:
 1915:
 1916:				tf_mf   macro   rn, n, error_loc
 1917:				        mov     a,#(091h+n)
 1918:				        mov     rn,a
 1919:				        cjne    rn,#(091h+n),error_loc
 1920:				        endm
 1921:
 1922:				        tf_mf   r0,0,tf_f0
 1923+ 1  07B5	74 91		        mov     a,#(091h+0)
 1924+ 1  07B7	F8		        mov     r0,a
 1925+ 1  07B8	B8 91 2F	        cjne    r0,#(091h+0),tf_f0
 1926:				        tf_mf   r1,1,tf_f0
 1927+ 1  07BB	74 92		        mov     a,#(091h+1)
 1928+ 1  07BD	F9		        mov     r1,a
 1929+ 1  07BE	B9 92 29	        cjne    r1,#(091h+1),tf_f0
 1930:				        tf_mf   r2,2,tf_f0
 1931+ 1  07C1	74 93		        mov     a,#(091h+2)
 1932+ 1  07C3	FA		        mov     r2,a
 1933+ 1  07C4	BA 93 23	        cjne    r2,#(091h+2),tf_f0
 1934:				        tf_mf   r3,3,tf_f0
 1935+ 1  07C7	74 94		        mov     a,#(091h+3)
 1936+ 1  07C9	FB		        mov     r3,a
 1937+ 1  07CA	BB 94 1D	        cjne    r3,#(091h+3),tf_f0
 1938:				        tf_mf   r5,4,tf_f0
 1939+ 1  07CD	74 95		        mov     a,#(091h+4)
 1940+ 1  07CF	FD		        mov     r5,a
 1941+ 1  07D0	BD 95 17	        cjne    r5,#(091h+4),tf_f0
 1942:				        tf_mf   r5,5,tf_f0
 1943+ 1  07D3	74 96		        mov     a,#(091h+5)
 1944+ 1  07D5	FD		        mov     r5,a
 1945+ 1  07D6	BD 96 11	        cjne    r5,#(091h+5),tf_f0
 1946:				        tf_mf   r6,6,tf_f0
 1947+ 1  07D9	74 97		        mov     a,#(091h+6)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 36



 Line  I  Addr  Code            Source

 1948+ 1  07DB	FE		        mov     r6,a
 1949+ 1  07DC	BE 97 0B	        cjne    r6,#(091h+6),tf_f0
 1950:				        tf_mf   r7,7,tf_f0
 1951+ 1  07DF	74 98		        mov     a,#(091h+7)
 1952+ 1  07E1	FF		        mov     r7,a
 1953+ 1  07E2	BF 98 05	        cjne    r7,#(091h+7),tf_f0
 1954:
 1955:				        eot     'f',tf_f0
 1956+ 1			        putc    #'f'
 1957+ 2  07E5			??0185:
 1958+ 2			        ;jnb     SCON.1,putc_loop
 1959+ 2			        ;clr     SCON.1
 1960+ 2  07E5	75 99 66	        mov     SBUF,#'f'
 1961+ 1  07E8	80 06		        sjmp    ??0184
 1962+ 1  07EA			tf_f0:  putc    #'?'
 1963+ 2  07EA			??0186:
 1964+ 2			        ;jnb     SCON.1,putc_loop
 1965+ 2			        ;clr     SCON.1
 1966+ 2  07EA	75 99 3F	        mov     SBUF,#'?'
 1967+ 1  07ED	75 6E 01	        mov     fail,#001h
 1968+ 1  07F0			??0184:
 1969:
 1970:	  07F0	78 60		        mov     r0,#dir0
 1971:	  07F2	79 31		        mov     r1,#031h
 1972:				        tf_mf   @r0,0,tf_g0
 1973+ 1  07F4	74 91		        mov     a,#(091h+0)
 1974+ 1  07F6	F6		        mov     @r0,a
 1975+ 1  07F7	B6 91 0B	        cjne    @r0,#(091h+0),tf_g0
 1976:				        tf_mf   @r1,1,tf_g0
 1977+ 1  07FA	74 92		        mov     a,#(091h+1)
 1978+ 1  07FC	F7		        mov     @r1,a
 1979+ 1  07FD	B7 92 05	        cjne    @r1,#(091h+1),tf_g0
 1980:
 1981:				        eot     'g',tf_g0
 1982+ 1			        putc    #'g'
 1983+ 2  0800			??0188:
 1984+ 2			        ;jnb     SCON.1,putc_loop
 1985+ 2			        ;clr     SCON.1
 1986+ 2  0800	75 99 67	        mov     SBUF,#'g'
 1987+ 1  0803	80 06		        sjmp    ??0187
 1988+ 1  0805			tf_g0:  putc    #'?'
 1989+ 2  0805			??0189:
 1990+ 2			        ;jnb     SCON.1,putc_loop
 1991+ 2			        ;clr     SCON.1
 1992+ 2  0805	75 99 3F	        mov     SBUF,#'?'
 1993+ 1  0808	75 6E 01	        mov     fail,#001h
 1994+ 1  080B			??0187:
 1995:
 1996:	  080B	75 60 79	        mov     dir0,#079h
 1997:	  080E	78 00		        mov     r0,#000h
 1998:	  0810	74 34		        mov     a,#34h
 1999:	  0812	F5 60		        mov     dir0,a
 2000:	  0814	A8 60		        mov     r0,dir0
 2001:	  0816	B8 34 05	        cjne    r0,#034h,tf_h0
 2002:
 2003:				        eot     'h',tf_h0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 37



 Line  I  Addr  Code            Source

 2004+ 1			        putc    #'h'
 2005+ 2  0819			??0191:
 2006+ 2			        ;jnb     SCON.1,putc_loop
 2007+ 2			        ;clr     SCON.1
 2008+ 2  0819	75 99 68	        mov     SBUF,#'h'
 2009+ 1  081C	80 06		        sjmp    ??0190
 2010+ 1  081E			tf_h0:  putc    #'?'
 2011+ 2  081E			??0192:
 2012+ 2			        ;jnb     SCON.1,putc_loop
 2013+ 2			        ;clr     SCON.1
 2014+ 2  081E	75 99 3F	        mov     SBUF,#'?'
 2015+ 1  0821	75 6E 01	        mov     fail,#001h
 2016+ 1  0824			??0190:
 2017:
 2018:	  0824	74 00		        mov     a,#000h
 2019:
 2020:	  0826	79 31		        mov     r1,#031h
 2021:	  0828	75 31 56	        mov     031h,#056h
 2022:	  082B	78 60		        mov     r0,#dir0
 2023:	  082D	75 60 34	        mov     dir0,#034h
 2024:	  0830	E6		        mov     a,@r0
 2025:	  0831	B4 34 09	        cjne    a,#034h,tf_i0
 2026:	  0834	E7		        mov     a,@r1
 2027:	  0835	B4 56 05	        cjne    a,#056h,tf_i0
 2028:
 2029:				        eot     'i',tf_i0
 2030+ 1			        putc    #'i'
 2031+ 2  0838			??0194:
 2032+ 2			        ;jnb     SCON.1,putc_loop
 2033+ 2			        ;clr     SCON.1
 2034+ 2  0838	75 99 69	        mov     SBUF,#'i'
 2035+ 1  083B	80 06		        sjmp    ??0193
 2036+ 1  083D			tf_i0:  putc    #'?'
 2037+ 2  083D			??0195:
 2038+ 2			        ;jnb     SCON.1,putc_loop
 2039+ 2			        ;clr     SCON.1
 2040+ 2  083D	75 99 3F	        mov     SBUF,#'?'
 2041+ 1  0840	75 6E 01	        mov     fail,#001h
 2042+ 1  0843			??0193:
 2043:
 2044:				        put_crlf                    ; end of test series
 2045+ 1			        putc    #13
 2046+ 2  0843			??0196:
 2047+ 2			        ;jnb     SCON.1,putc_loop
 2048+ 2			        ;clr     SCON.1
 2049+ 2  0843	75 99 0D	        mov     SBUF,#13
 2050+ 1			        putc    #10
 2051+ 2  0846			??0197:
 2052+ 2			        ;jnb     SCON.1,putc_loop
 2053+ 2			        ;clr     SCON.1
 2054+ 2  0846	75 99 0A	        mov     SBUF,#10
 2055:
 2056:
 2057:				        ;-- Test series G ------------------------------------------------------
 2058:				        ; Note the XCG tests are specially lame even within this context.
 2059:				        ; a.- <CLR A>, <CPL A>, <SWAP A>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 38



 Line  I  Addr  Code            Source

 2060:				        ; b.- <INC DPTR>
 2061:				        ; c.- <XCH A,dir>
 2062:				        ; d.- <XCH A,@Ri>
 2063:				        ; e.- <XCH A,Rn>
 2064:
 2065:				        putc    #'G'                ; start of test series
 2066+ 1  0849			??0198:
 2067+ 1			        ;jnb     SCON.1,putc_loop
 2068+ 1			        ;clr     SCON.1
 2069+ 1  0849	75 99 47	        mov     SBUF,#'G'
 2070:
 2071:	  084C	74 55		        mov     a,#055h
 2072:	  084E	E4		        clr     a
 2073:	  084F	70 11		        jnz     tg_a0
 2074:
 2075:	  0851	74 55		        mov     a,#055h
 2076:	  0853	F4		        cpl     a
 2077:	  0854	B4 AA 0B	        cjne    a,#0aah,tg_a0
 2078:
 2079:	  0857	74 97		        mov     a,#097h
 2080:	  0859	C4		        swap    a
 2081:	  085A	B4 79 05	        cjne    a,#079h,tg_a0
 2082:
 2083:				        eot     'a',tg_a0
 2084+ 1			        putc    #'a'
 2085+ 2  085D			??0200:
 2086+ 2			        ;jnb     SCON.1,putc_loop
 2087+ 2			        ;clr     SCON.1
 2088+ 2  085D	75 99 61	        mov     SBUF,#'a'
 2089+ 1  0860	80 06		        sjmp    ??0199
 2090+ 1  0862			tg_a0:  putc    #'?'
 2091+ 2  0862			??0201:
 2092+ 2			        ;jnb     SCON.1,putc_loop
 2093+ 2			        ;clr     SCON.1
 2094+ 2  0862	75 99 3F	        mov     SBUF,#'?'
 2095+ 1  0865	75 6E 01	        mov     fail,#001h
 2096+ 1  0868			??0199:
 2097:
 2098:	  0868	75 83 12	        mov     DPH,#012h
 2099:	  086B	75 82 FD	        mov     DPL,#0fdh
 2100:	  086E	A3		        inc     dptr
 2101:	  086F	E5 83		        mov     a,DPH
 2102:	  0871	B4 12 20	        cjne    a,#012h,tg_b0
 2103:	  0874	E5 82		        mov     a,DPL
 2104:	  0876	B4 FE 1B	        cjne    a,#0feh,tg_b0
 2105:	  0879	A3		        inc     dptr
 2106:	  087A	E5 83		        mov     a,DPH
 2107:	  087C	B4 12 15	        cjne    a,#012h,tg_b0
 2108:	  087F	E5 82		        mov     a,DPL
 2109:	  0881	B4 FF 10	        cjne    a,#0ffh,tg_b0
 2110:	  0884	A3		        inc     dptr
 2111:	  0885	E5 83		        mov     a,DPH
 2112:	  0887	B4 13 0A	        cjne    a,#013h,tg_b0
 2113:	  088A	E5 82		        mov     a,DPL
 2114:	  088C	B4 00 05	        cjne    a,#000h,tg_b0
 2115:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 39



 Line  I  Addr  Code            Source

 2116:				        eot     'b',tg_b0
 2117+ 1			        putc    #'b'
 2118+ 2  088F			??0203:
 2119+ 2			        ;jnb     SCON.1,putc_loop
 2120+ 2			        ;clr     SCON.1
 2121+ 2  088F	75 99 62	        mov     SBUF,#'b'
 2122+ 1  0892	80 06		        sjmp    ??0202
 2123+ 1  0894			tg_b0:  putc    #'?'
 2124+ 2  0894			??0204:
 2125+ 2			        ;jnb     SCON.1,putc_loop
 2126+ 2			        ;clr     SCON.1
 2127+ 2  0894	75 99 3F	        mov     SBUF,#'?'
 2128+ 1  0897	75 6E 01	        mov     fail,#001h
 2129+ 1  089A			??0202:
 2130:
 2131:				        ; c.- <XCH A,dir>
 2132:	  089A	74 34		        mov     a,#34h
 2133:	  089C	75 13 57	        mov     13h,#57h
 2134:	  089F	C5 13		        xch     a,13h
 2135:	  08A1	B4 57 0A	        cjne    a,#57h,tg_c0
 2136:	  08A4	E5 13		        mov     a,13h
 2137:	  08A6	B4 34 05	        cjne    a,#34h,tg_c0
 2138:
 2139:				        eot     'c',tg_c0
 2140+ 1			        putc    #'c'
 2141+ 2  08A9			??0206:
 2142+ 2			        ;jnb     SCON.1,putc_loop
 2143+ 2			        ;clr     SCON.1
 2144+ 2  08A9	75 99 63	        mov     SBUF,#'c'
 2145+ 1  08AC	80 06		        sjmp    ??0205
 2146+ 1  08AE			tg_c0:  putc    #'?'
 2147+ 2  08AE			??0207:
 2148+ 2			        ;jnb     SCON.1,putc_loop
 2149+ 2			        ;clr     SCON.1
 2150+ 2  08AE	75 99 3F	        mov     SBUF,#'?'
 2151+ 1  08B1	75 6E 01	        mov     fail,#001h
 2152+ 1  08B4			??0205:
 2153:
 2154:				        ; d.- <XCH A,@Ri>
 2155:	  08B4	74 91		        mov     a,#91h
 2156:	  08B6	75 29 78	        mov     29h,#78h
 2157:	  08B9	79 29		        mov     r1,#29h
 2158:	  08BB	C7		        xch     a,@r1
 2159:	  08BC	B4 78 0A	        cjne    a,#78h,tg_d0
 2160:	  08BF	E5 29		        mov     a,29h
 2161:	  08C1	B4 91 05	        cjne    a,#91h,tg_d0
 2162:
 2163:				        eot     'd',tg_d0
 2164+ 1			        putc    #'d'
 2165+ 2  08C4			??0209:
 2166+ 2			        ;jnb     SCON.1,putc_loop
 2167+ 2			        ;clr     SCON.1
 2168+ 2  08C4	75 99 64	        mov     SBUF,#'d'
 2169+ 1  08C7	80 06		        sjmp    ??0208
 2170+ 1  08C9			tg_d0:  putc    #'?'
 2171+ 2  08C9			??0210:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 40



 Line  I  Addr  Code            Source

 2172+ 2			        ;jnb     SCON.1,putc_loop
 2173+ 2			        ;clr     SCON.1
 2174+ 2  08C9	75 99 3F	        mov     SBUF,#'?'
 2175+ 1  08CC	75 6E 01	        mov     fail,#001h
 2176+ 1  08CF			??0208:
 2177:
 2178:				        ; e.- <XCHG A,Rn>
 2179:	  08CF	74 43		        mov     a,#43h
 2180:	  08D1	7E A2		        mov     r6,#0a2h
 2181:	  08D3	CE		        xch     a,r6
 2182:	  08D4	B4 A2 09	        cjne    a,#0a2h,tg_e0
 2183:	  08D7	EE		        mov     a,r6
 2184:	  08D8	B4 43 05	        cjne    a,#43h,tg_e0
 2185:
 2186:				        eot     'e',tg_e0
 2187+ 1			        putc    #'e'
 2188+ 2  08DB			??0212:
 2189+ 2			        ;jnb     SCON.1,putc_loop
 2190+ 2			        ;clr     SCON.1
 2191+ 2  08DB	75 99 65	        mov     SBUF,#'e'
 2192+ 1  08DE	80 06		        sjmp    ??0211
 2193+ 1  08E0			tg_e0:  putc    #'?'
 2194+ 2  08E0			??0213:
 2195+ 2			        ;jnb     SCON.1,putc_loop
 2196+ 2			        ;clr     SCON.1
 2197+ 2  08E0	75 99 3F	        mov     SBUF,#'?'
 2198+ 1  08E3	75 6E 01	        mov     fail,#001h
 2199+ 1  08E6			??0211:
 2200:
 2201:
 2202:				        put_crlf                    ; end of test series
 2203+ 1			        putc    #13
 2204+ 2  08E6			??0214:
 2205+ 2			        ;jnb     SCON.1,putc_loop
 2206+ 2			        ;clr     SCON.1
 2207+ 2  08E6	75 99 0D	        mov     SBUF,#13
 2208+ 1			        putc    #10
 2209+ 2  08E9			??0215:
 2210+ 2			        ;jnb     SCON.1,putc_loop
 2211+ 2			        ;clr     SCON.1
 2212+ 2  08E9	75 99 0A	        mov     SBUF,#10
 2213:
 2214:
 2215:				        ;-- ALU opcode block test ----------------------------------------------
 2216:				        ; This set of macros is used to test families of opcodes, such as ORL,
 2217:				        ; ANL, ADD, etc. with all their addressing modes.
 2218:				        ;
 2219:				        ; a.- <OP A,dir>, <OP A,@Ri>, <OP A, Rn> (n=0,1)
 2220:				        ; b.- <OP A, Rn> (n=2,3)
 2221:				        ; c.- <OP A, Rn> (n=4,5)
 2222:				        ; d.- <OP A, Rn> (n=6,7)
 2223:				        ; e.- <OP dir,#imm>, <OP A,#imm>
 2224:				        ; f.- <OP dir,A>
 2225:
 2226:				        ;store psw away for later comparison
 2227:				save_psw macro

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 41



 Line  I  Addr  Code            Source

 2228:				        mov     saved_psw,PSW
 2229:				        endm
 2230:
 2231:				        ; compare flags CY, AC and OV with expected values in <flags>
 2232:				tst_psw macro   flags,error_loc
 2233:				        mov     a,saved_psw
 2234:				        anl     a,#0c4h
 2235:				        xrl     a,#flags
 2236:				        anl     a,#0feh
 2237:				        jnz     error_loc
 2238:				        endm
 2239:
 2240:				        ; Set the CY flag to the value of the lsb of argument <flags>
 2241:				set_cy  macro   flags
 2242:				        local   cy_val
 2243:				cy_val  set     (flags and 1)
 2244:				        if      cy_val eq 1
 2245:				        setb    c
 2246:				        else
 2247:				        clr     c
 2248:				        endif
 2249:				        endm
 2250:
 2251:				        ;
 2252:				        ;
 2253:				        ; flags = (<expected PSW> & 0xfe) | <input cy>
 2254:				        ; (P flag result is not tested)
 2255:				top_ma  macro   op,src,error_loc,flags
 2256:				        mov     src,#arg0
 2257:				        mov     a,#arg1
 2258:				        ifnb    <flags>
 2259:				        set_cy  flags
 2260:				        endif
 2261:				        op      a,src
 2262:				        ifnb    <flags>
 2263:				        save_psw
 2264:				        endif
 2265:				        cjne    a,#res,error_loc
 2266:				        ifnb    <flags>
 2267:				        tst_psw <flags>,error_loc
 2268:				        endif
 2269:				        endm
 2270:
 2271:				top_mb  macro   op,dst,error_loc,flags
 2272:				        mov     dst,#arg0
 2273:				        ifnb    <flags>
 2274:				        set_cy  flags
 2275:				        endif
 2276:				        op      dst,#arg1
 2277:				        ifnb    <flags>
 2278:				        save_psw
 2279:				        endif
 2280:				        mov     ACC,dst
 2281:				        cjne    a,#res,error_loc
 2282:				        ifnb    <flags>
 2283:				        tst_psw <flags>,error_loc

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 42



 Line  I  Addr  Code            Source

 2284:				        endif
 2285:				        endm
 2286:
 2287:				top_mc  macro   op,error_loc,flags
 2288:				        mov     dir0,#arg0
 2289:				        mov     a,#arg1
 2290:				        ifnb    <flags>
 2291:				        set_cy  flags
 2292:				        endif
 2293:				        op      dir0,a
 2294:				        ifnb    <flags>
 2295:				        save_psw
 2296:				        endif
 2297:				        mov     a,dir0
 2298:				        cjne    a,#res,error_loc
 2299:				        ifnb    <flags>
 2300:				        tst_psw <flags>,error_loc
 2301:				        endif
 2302:				        endm
 2303:
 2304:				        ;
 2305:				        ;
 2306:				tst_alu macro   op,a0,a1,r,flags
 2307:				        local   tall_0d
 2308:				        local   tall_0a
 2309:				        local   tall_0b
 2310:				        local   tall_0c
 2311:				        local   tall_1
 2312:				        local   tall_2
 2313:
 2314:				        arg0    set a0
 2315:				        arg1    set a1
 2316:				        res     set r
 2317:
 2318:				        top_ma  op,dir0,tall_0a,<flags>
 2319:				        mov     r0,#dir0
 2320:				        top_ma  op,@r0,tall_0a,<flags>
 2321:				        mov     r1,#031h
 2322:				        top_ma  op,@r1,tall_0a,<flags>
 2323:
 2324:				        top_ma  op,r0,tall_0a,<flags>
 2325:				        top_ma  op,r1,tall_0a,<flags>
 2326:
 2327:				        eot     'a',tall_0a
 2328:
 2329:				        top_ma  op,r2,tall_0b,<flags>
 2330:				        top_ma  op,r3,tall_0b,<flags>
 2331:
 2332:				        eot     'b',tall_0b
 2333:
 2334:				        top_ma  op,r4,tall_0c,<flags>
 2335:				        top_ma  op,r5,tall_0c,<flags>
 2336:
 2337:				        eot     'c',tall_0c
 2338:
 2339:				        top_ma  op,r6,tall_0d,<flags>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 43



 Line  I  Addr  Code            Source

 2340:				        top_ma  op,r7,tall_0d,<flags>
 2341:
 2342:				        eot     'd',tall_0d
 2343:
 2344:				        ifb     <flags>
 2345:
 2346:				        top_mb  op,a,tall_1,<flags>
 2347:				        top_mb  op,dir0,tall_1,<flags>
 2348:
 2349:				        eot     'e',tall_1
 2350:
 2351:				        top_mc  op,tall_2,<flags>
 2352:
 2353:				        eot     'f',tall_2
 2354:				        endif
 2355:				        endm
 2356:
 2357:
 2358:				        ;-- Test series H ------------------------------------------------------
 2359:				        ; ANL
 2360:				        ; (See comments for 'ALU opcode block test')
 2361:
 2362:				        putc    #'H'                ; start of test series
 2363+ 1  08EC			??0216:
 2364+ 1			        ;jnb     SCON.1,putc_loop
 2365+ 1			        ;clr     SCON.1
 2366+ 1  08EC	75 99 48	        mov     SBUF,#'H'
 2367:
 2368:				        tst_alu anl,03ch,099h,018h,
 2369+ 1
 2370+ 1	N      003C	        arg0    set 03ch
 2371+ 1	N      0099	        arg1    set 099h
 2372+ 1	N      0018	        res     set 018h
 2373+ 1
 2374+ 1			        top_ma  anl,dir0,??0218,<>
 2375+ 2  08EF	75 60 3C	        mov     dir0,#arg0
 2376+ 2  08F2	74 99		        mov     a,#arg1
 2377+ 2			        ifnb    <>
 2378+ 2			        set_cy
 2379+ 2			        endif
 2380+ 2  08F4	55 60		        anl      a,dir0
 2381+ 2			        ifnb    <>
 2382+ 2			        save_psw
 2383+ 2			        endif
 2384+ 2  08F6	B4 18 29	        cjne    a,#res,??0218
 2385+ 2			        ifnb    <>
 2386+ 2			        tst_psw <>,??0218
 2387+ 2			        endif
 2388+ 1  08F9	78 60		        mov     r0,#dir0
 2389+ 1			        top_ma  anl,@r0,??0218,<>
 2390+ 2  08FB	76 3C		        mov     @r0,#arg0
 2391+ 2  08FD	74 99		        mov     a,#arg1
 2392+ 2			        ifnb    <>
 2393+ 2			        set_cy
 2394+ 2			        endif
 2395+ 2  08FF	56		        anl      a,@r0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 44



 Line  I  Addr  Code            Source

 2396+ 2			        ifnb    <>
 2397+ 2			        save_psw
 2398+ 2			        endif
 2399+ 2  0900	B4 18 1F	        cjne    a,#res,??0218
 2400+ 2			        ifnb    <>
 2401+ 2			        tst_psw <>,??0218
 2402+ 2			        endif
 2403+ 1  0903	79 31		        mov     r1,#031h
 2404+ 1			        top_ma  anl,@r1,??0218,<>
 2405+ 2  0905	77 3C		        mov     @r1,#arg0
 2406+ 2  0907	74 99		        mov     a,#arg1
 2407+ 2			        ifnb    <>
 2408+ 2			        set_cy
 2409+ 2			        endif
 2410+ 2  0909	57		        anl      a,@r1
 2411+ 2			        ifnb    <>
 2412+ 2			        save_psw
 2413+ 2			        endif
 2414+ 2  090A	B4 18 15	        cjne    a,#res,??0218
 2415+ 2			        ifnb    <>
 2416+ 2			        tst_psw <>,??0218
 2417+ 2			        endif
 2418+ 1
 2419+ 1			        top_ma  anl,r0,??0218,<>
 2420+ 2  090D	78 3C		        mov     r0,#arg0
 2421+ 2  090F	74 99		        mov     a,#arg1
 2422+ 2			        ifnb    <>
 2423+ 2			        set_cy
 2424+ 2			        endif
 2425+ 2  0911	58		        anl      a,r0
 2426+ 2			        ifnb    <>
 2427+ 2			        save_psw
 2428+ 2			        endif
 2429+ 2  0912	B4 18 0D	        cjne    a,#res,??0218
 2430+ 2			        ifnb    <>
 2431+ 2			        tst_psw <>,??0218
 2432+ 2			        endif
 2433+ 1			        top_ma  anl,r1,??0218,<>
 2434+ 2  0915	79 3C		        mov     r1,#arg0
 2435+ 2  0917	74 99		        mov     a,#arg1
 2436+ 2			        ifnb    <>
 2437+ 2			        set_cy
 2438+ 2			        endif
 2439+ 2  0919	59		        anl      a,r1
 2440+ 2			        ifnb    <>
 2441+ 2			        save_psw
 2442+ 2			        endif
 2443+ 2  091A	B4 18 05	        cjne    a,#res,??0218
 2444+ 2			        ifnb    <>
 2445+ 2			        tst_psw <>,??0218
 2446+ 2			        endif
 2447+ 1
 2448+ 1			        eot     'a',??0218
 2449+ 2			        putc    #'a'
 2450+ 3  091D			??0224:
 2451+ 3			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 45



 Line  I  Addr  Code            Source

 2452+ 3			        ;clr     SCON.1
 2453+ 3  091D	75 99 61	        mov     SBUF,#'a'
 2454+ 2  0920	80 06		        sjmp    ??0223
 2455+ 2  0922			??0218:  putc    #'?'
 2456+ 3  0922			??0225:
 2457+ 3			        ;jnb     SCON.1,putc_loop
 2458+ 3			        ;clr     SCON.1
 2459+ 3  0922	75 99 3F	        mov     SBUF,#'?'
 2460+ 2  0925	75 6E 01	        mov     fail,#001h
 2461+ 2  0928			??0223:
 2462+ 1
 2463+ 1			        top_ma  anl,r2,??0219,<>
 2464+ 2  0928	7A 3C		        mov     r2,#arg0
 2465+ 2  092A	74 99		        mov     a,#arg1
 2466+ 2			        ifnb    <>
 2467+ 2			        set_cy
 2468+ 2			        endif
 2469+ 2  092C	5A		        anl      a,r2
 2470+ 2			        ifnb    <>
 2471+ 2			        save_psw
 2472+ 2			        endif
 2473+ 2  092D	B4 18 0D	        cjne    a,#res,??0219
 2474+ 2			        ifnb    <>
 2475+ 2			        tst_psw <>,??0219
 2476+ 2			        endif
 2477+ 1			        top_ma  anl,r3,??0219,<>
 2478+ 2  0930	7B 3C		        mov     r3,#arg0
 2479+ 2  0932	74 99		        mov     a,#arg1
 2480+ 2			        ifnb    <>
 2481+ 2			        set_cy
 2482+ 2			        endif
 2483+ 2  0934	5B		        anl      a,r3
 2484+ 2			        ifnb    <>
 2485+ 2			        save_psw
 2486+ 2			        endif
 2487+ 2  0935	B4 18 05	        cjne    a,#res,??0219
 2488+ 2			        ifnb    <>
 2489+ 2			        tst_psw <>,??0219
 2490+ 2			        endif
 2491+ 1
 2492+ 1			        eot     'b',??0219
 2493+ 2			        putc    #'b'
 2494+ 3  0938			??0227:
 2495+ 3			        ;jnb     SCON.1,putc_loop
 2496+ 3			        ;clr     SCON.1
 2497+ 3  0938	75 99 62	        mov     SBUF,#'b'
 2498+ 2  093B	80 06		        sjmp    ??0226
 2499+ 2  093D			??0219:  putc    #'?'
 2500+ 3  093D			??0228:
 2501+ 3			        ;jnb     SCON.1,putc_loop
 2502+ 3			        ;clr     SCON.1
 2503+ 3  093D	75 99 3F	        mov     SBUF,#'?'
 2504+ 2  0940	75 6E 01	        mov     fail,#001h
 2505+ 2  0943			??0226:
 2506+ 1
 2507+ 1			        top_ma  anl,r4,??0220,<>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 46



 Line  I  Addr  Code            Source

 2508+ 2  0943	7C 3C		        mov     r4,#arg0
 2509+ 2  0945	74 99		        mov     a,#arg1
 2510+ 2			        ifnb    <>
 2511+ 2			        set_cy
 2512+ 2			        endif
 2513+ 2  0947	5C		        anl      a,r4
 2514+ 2			        ifnb    <>
 2515+ 2			        save_psw
 2516+ 2			        endif
 2517+ 2  0948	B4 18 0D	        cjne    a,#res,??0220
 2518+ 2			        ifnb    <>
 2519+ 2			        tst_psw <>,??0220
 2520+ 2			        endif
 2521+ 1			        top_ma  anl,r5,??0220,<>
 2522+ 2  094B	7D 3C		        mov     r5,#arg0
 2523+ 2  094D	74 99		        mov     a,#arg1
 2524+ 2			        ifnb    <>
 2525+ 2			        set_cy
 2526+ 2			        endif
 2527+ 2  094F	5D		        anl      a,r5
 2528+ 2			        ifnb    <>
 2529+ 2			        save_psw
 2530+ 2			        endif
 2531+ 2  0950	B4 18 05	        cjne    a,#res,??0220
 2532+ 2			        ifnb    <>
 2533+ 2			        tst_psw <>,??0220
 2534+ 2			        endif
 2535+ 1
 2536+ 1			        eot     'c',??0220
 2537+ 2			        putc    #'c'
 2538+ 3  0953			??0230:
 2539+ 3			        ;jnb     SCON.1,putc_loop
 2540+ 3			        ;clr     SCON.1
 2541+ 3  0953	75 99 63	        mov     SBUF,#'c'
 2542+ 2  0956	80 06		        sjmp    ??0229
 2543+ 2  0958			??0220:  putc    #'?'
 2544+ 3  0958			??0231:
 2545+ 3			        ;jnb     SCON.1,putc_loop
 2546+ 3			        ;clr     SCON.1
 2547+ 3  0958	75 99 3F	        mov     SBUF,#'?'
 2548+ 2  095B	75 6E 01	        mov     fail,#001h
 2549+ 2  095E			??0229:
 2550+ 1
 2551+ 1			        top_ma  anl,r6,??0217,<>
 2552+ 2  095E	7E 3C		        mov     r6,#arg0
 2553+ 2  0960	74 99		        mov     a,#arg1
 2554+ 2			        ifnb    <>
 2555+ 2			        set_cy
 2556+ 2			        endif
 2557+ 2  0962	5E		        anl      a,r6
 2558+ 2			        ifnb    <>
 2559+ 2			        save_psw
 2560+ 2			        endif
 2561+ 2  0963	B4 18 0D	        cjne    a,#res,??0217
 2562+ 2			        ifnb    <>
 2563+ 2			        tst_psw <>,??0217

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 47



 Line  I  Addr  Code            Source

 2564+ 2			        endif
 2565+ 1			        top_ma  anl,r7,??0217,<>
 2566+ 2  0966	7F 3C		        mov     r7,#arg0
 2567+ 2  0968	74 99		        mov     a,#arg1
 2568+ 2			        ifnb    <>
 2569+ 2			        set_cy
 2570+ 2			        endif
 2571+ 2  096A	5F		        anl      a,r7
 2572+ 2			        ifnb    <>
 2573+ 2			        save_psw
 2574+ 2			        endif
 2575+ 2  096B	B4 18 05	        cjne    a,#res,??0217
 2576+ 2			        ifnb    <>
 2577+ 2			        tst_psw <>,??0217
 2578+ 2			        endif
 2579+ 1
 2580+ 1			        eot     'd',??0217
 2581+ 2			        putc    #'d'
 2582+ 3  096E			??0233:
 2583+ 3			        ;jnb     SCON.1,putc_loop
 2584+ 3			        ;clr     SCON.1
 2585+ 3  096E	75 99 64	        mov     SBUF,#'d'
 2586+ 2  0971	80 06		        sjmp    ??0232
 2587+ 2  0973			??0217:  putc    #'?'
 2588+ 3  0973			??0234:
 2589+ 3			        ;jnb     SCON.1,putc_loop
 2590+ 3			        ;clr     SCON.1
 2591+ 3  0973	75 99 3F	        mov     SBUF,#'?'
 2592+ 2  0976	75 6E 01	        mov     fail,#001h
 2593+ 2  0979			??0232:
 2594+ 1
 2595+ 1			        ifb     <>
 2596+ 1
 2597+ 1			        top_mb  anl,a,??0221,<>
 2598+ 2  0979	74 3C		        mov     a,#arg0
 2599+ 2			        ifnb    <>
 2600+ 2			        set_cy
 2601+ 2			        endif
 2602+ 2  097B	54 99		        anl      a,#arg1
 2603+ 2			        ifnb    <>
 2604+ 2			        save_psw
 2605+ 2			        endif
 2606+ 2  097D	F5 E0		        mov     ACC,a
 2607+ 2  097F	B4 18 11	        cjne    a,#res,??0221
 2608+ 2			        ifnb    <>
 2609+ 2			        tst_psw <>,??0221
 2610+ 2			        endif
 2611+ 1			        top_mb  anl,dir0,??0221,<>
 2612+ 2  0982	75 60 3C	        mov     dir0,#arg0
 2613+ 2			        ifnb    <>
 2614+ 2			        set_cy
 2615+ 2			        endif
 2616+ 2  0985	53 60 99	        anl      dir0,#arg1
 2617+ 2			        ifnb    <>
 2618+ 2			        save_psw
 2619+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 48



 Line  I  Addr  Code            Source

 2620+ 2  0988	85 60 E0	        mov     ACC,dir0
 2621+ 2  098B	B4 18 05	        cjne    a,#res,??0221
 2622+ 2			        ifnb    <>
 2623+ 2			        tst_psw <>,??0221
 2624+ 2			        endif
 2625+ 1
 2626+ 1			        eot     'e',??0221
 2627+ 2			        putc    #'e'
 2628+ 3  098E			??0236:
 2629+ 3			        ;jnb     SCON.1,putc_loop
 2630+ 3			        ;clr     SCON.1
 2631+ 3  098E	75 99 65	        mov     SBUF,#'e'
 2632+ 2  0991	80 06		        sjmp    ??0235
 2633+ 2  0993			??0221:  putc    #'?'
 2634+ 3  0993			??0237:
 2635+ 3			        ;jnb     SCON.1,putc_loop
 2636+ 3			        ;clr     SCON.1
 2637+ 3  0993	75 99 3F	        mov     SBUF,#'?'
 2638+ 2  0996	75 6E 01	        mov     fail,#001h
 2639+ 2  0999			??0235:
 2640+ 1
 2641+ 1			        top_mc  anl,??0222,<>
 2642+ 2  0999	75 60 3C	        mov     dir0,#arg0
 2643+ 2  099C	74 99		        mov     a,#arg1
 2644+ 2			        ifnb    <>
 2645+ 2			        set_cy
 2646+ 2			        endif
 2647+ 2  099E	52 60		        anl      dir0,a
 2648+ 2			        ifnb    <>
 2649+ 2			        save_psw
 2650+ 2			        endif
 2651+ 2  09A0	E5 60		        mov     a,dir0
 2652+ 2  09A2	B4 18 05	        cjne    a,#res,??0222
 2653+ 2			        ifnb    <>
 2654+ 2			        tst_psw <>,??0222
 2655+ 2			        endif
 2656+ 1
 2657+ 1			        eot     'f',??0222
 2658+ 2			        putc    #'f'
 2659+ 3  09A5			??0239:
 2660+ 3			        ;jnb     SCON.1,putc_loop
 2661+ 3			        ;clr     SCON.1
 2662+ 3  09A5	75 99 66	        mov     SBUF,#'f'
 2663+ 2  09A8	80 06		        sjmp    ??0238
 2664+ 2  09AA			??0222:  putc    #'?'
 2665+ 3  09AA			??0240:
 2666+ 3			        ;jnb     SCON.1,putc_loop
 2667+ 3			        ;clr     SCON.1
 2668+ 3  09AA	75 99 3F	        mov     SBUF,#'?'
 2669+ 2  09AD	75 6E 01	        mov     fail,#001h
 2670+ 2  09B0			??0238:
 2671+ 1			        endif
 2672:
 2673:				        put_crlf                    ; end of test series
 2674+ 1			        putc    #13
 2675+ 2  09B0			??0241:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 49



 Line  I  Addr  Code            Source

 2676+ 2			        ;jnb     SCON.1,putc_loop
 2677+ 2			        ;clr     SCON.1
 2678+ 2  09B0	75 99 0D	        mov     SBUF,#13
 2679+ 1			        putc    #10
 2680+ 2  09B3			??0242:
 2681+ 2			        ;jnb     SCON.1,putc_loop
 2682+ 2			        ;clr     SCON.1
 2683+ 2  09B3	75 99 0A	        mov     SBUF,#10
 2684:
 2685:
 2686:				        ;-- Test series I ------------------------------------------------------
 2687:				        ; ORL
 2688:				        ; (See comments for 'ALU opcode block test')
 2689:
 2690:				        putc    #'I'                ; start of test series
 2691+ 1  09B6			??0243:
 2692+ 1			        ;jnb     SCON.1,putc_loop
 2693+ 1			        ;clr     SCON.1
 2694+ 1  09B6	75 99 49	        mov     SBUF,#'I'
 2695:
 2696:				        tst_alu orl,051h,092h,0d3h,
 2697+ 1
 2698+ 1	N      0051	        arg0    set 051h
 2699+ 1	N      0092	        arg1    set 092h
 2700+ 1	N      00D3	        res     set 0d3h
 2701+ 1
 2702+ 1			        top_ma  orl,dir0,??0245,<>
 2703+ 2  09B9	75 60 51	        mov     dir0,#arg0
 2704+ 2  09BC	74 92		        mov     a,#arg1
 2705+ 2			        ifnb    <>
 2706+ 2			        set_cy
 2707+ 2			        endif
 2708+ 2  09BE	45 60		        orl      a,dir0
 2709+ 2			        ifnb    <>
 2710+ 2			        save_psw
 2711+ 2			        endif
 2712+ 2  09C0	B4 D3 29	        cjne    a,#res,??0245
 2713+ 2			        ifnb    <>
 2714+ 2			        tst_psw <>,??0245
 2715+ 2			        endif
 2716+ 1  09C3	78 60		        mov     r0,#dir0
 2717+ 1			        top_ma  orl,@r0,??0245,<>
 2718+ 2  09C5	76 51		        mov     @r0,#arg0
 2719+ 2  09C7	74 92		        mov     a,#arg1
 2720+ 2			        ifnb    <>
 2721+ 2			        set_cy
 2722+ 2			        endif
 2723+ 2  09C9	46		        orl      a,@r0
 2724+ 2			        ifnb    <>
 2725+ 2			        save_psw
 2726+ 2			        endif
 2727+ 2  09CA	B4 D3 1F	        cjne    a,#res,??0245
 2728+ 2			        ifnb    <>
 2729+ 2			        tst_psw <>,??0245
 2730+ 2			        endif
 2731+ 1  09CD	79 31		        mov     r1,#031h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 50



 Line  I  Addr  Code            Source

 2732+ 1			        top_ma  orl,@r1,??0245,<>
 2733+ 2  09CF	77 51		        mov     @r1,#arg0
 2734+ 2  09D1	74 92		        mov     a,#arg1
 2735+ 2			        ifnb    <>
 2736+ 2			        set_cy
 2737+ 2			        endif
 2738+ 2  09D3	47		        orl      a,@r1
 2739+ 2			        ifnb    <>
 2740+ 2			        save_psw
 2741+ 2			        endif
 2742+ 2  09D4	B4 D3 15	        cjne    a,#res,??0245
 2743+ 2			        ifnb    <>
 2744+ 2			        tst_psw <>,??0245
 2745+ 2			        endif
 2746+ 1
 2747+ 1			        top_ma  orl,r0,??0245,<>
 2748+ 2  09D7	78 51		        mov     r0,#arg0
 2749+ 2  09D9	74 92		        mov     a,#arg1
 2750+ 2			        ifnb    <>
 2751+ 2			        set_cy
 2752+ 2			        endif
 2753+ 2  09DB	48		        orl      a,r0
 2754+ 2			        ifnb    <>
 2755+ 2			        save_psw
 2756+ 2			        endif
 2757+ 2  09DC	B4 D3 0D	        cjne    a,#res,??0245
 2758+ 2			        ifnb    <>
 2759+ 2			        tst_psw <>,??0245
 2760+ 2			        endif
 2761+ 1			        top_ma  orl,r1,??0245,<>
 2762+ 2  09DF	79 51		        mov     r1,#arg0
 2763+ 2  09E1	74 92		        mov     a,#arg1
 2764+ 2			        ifnb    <>
 2765+ 2			        set_cy
 2766+ 2			        endif
 2767+ 2  09E3	49		        orl      a,r1
 2768+ 2			        ifnb    <>
 2769+ 2			        save_psw
 2770+ 2			        endif
 2771+ 2  09E4	B4 D3 05	        cjne    a,#res,??0245
 2772+ 2			        ifnb    <>
 2773+ 2			        tst_psw <>,??0245
 2774+ 2			        endif
 2775+ 1
 2776+ 1			        eot     'a',??0245
 2777+ 2			        putc    #'a'
 2778+ 3  09E7			??0251:
 2779+ 3			        ;jnb     SCON.1,putc_loop
 2780+ 3			        ;clr     SCON.1
 2781+ 3  09E7	75 99 61	        mov     SBUF,#'a'
 2782+ 2  09EA	80 06		        sjmp    ??0250
 2783+ 2  09EC			??0245:  putc    #'?'
 2784+ 3  09EC			??0252:
 2785+ 3			        ;jnb     SCON.1,putc_loop
 2786+ 3			        ;clr     SCON.1
 2787+ 3  09EC	75 99 3F	        mov     SBUF,#'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 51



 Line  I  Addr  Code            Source

 2788+ 2  09EF	75 6E 01	        mov     fail,#001h
 2789+ 2  09F2			??0250:
 2790+ 1
 2791+ 1			        top_ma  orl,r2,??0246,<>
 2792+ 2  09F2	7A 51		        mov     r2,#arg0
 2793+ 2  09F4	74 92		        mov     a,#arg1
 2794+ 2			        ifnb    <>
 2795+ 2			        set_cy
 2796+ 2			        endif
 2797+ 2  09F6	4A		        orl      a,r2
 2798+ 2			        ifnb    <>
 2799+ 2			        save_psw
 2800+ 2			        endif
 2801+ 2  09F7	B4 D3 0D	        cjne    a,#res,??0246
 2802+ 2			        ifnb    <>
 2803+ 2			        tst_psw <>,??0246
 2804+ 2			        endif
 2805+ 1			        top_ma  orl,r3,??0246,<>
 2806+ 2  09FA	7B 51		        mov     r3,#arg0
 2807+ 2  09FC	74 92		        mov     a,#arg1
 2808+ 2			        ifnb    <>
 2809+ 2			        set_cy
 2810+ 2			        endif
 2811+ 2  09FE	4B		        orl      a,r3
 2812+ 2			        ifnb    <>
 2813+ 2			        save_psw
 2814+ 2			        endif
 2815+ 2  09FF	B4 D3 05	        cjne    a,#res,??0246
 2816+ 2			        ifnb    <>
 2817+ 2			        tst_psw <>,??0246
 2818+ 2			        endif
 2819+ 1
 2820+ 1			        eot     'b',??0246
 2821+ 2			        putc    #'b'
 2822+ 3  0A02			??0254:
 2823+ 3			        ;jnb     SCON.1,putc_loop
 2824+ 3			        ;clr     SCON.1
 2825+ 3  0A02	75 99 62	        mov     SBUF,#'b'
 2826+ 2  0A05	80 06		        sjmp    ??0253
 2827+ 2  0A07			??0246:  putc    #'?'
 2828+ 3  0A07			??0255:
 2829+ 3			        ;jnb     SCON.1,putc_loop
 2830+ 3			        ;clr     SCON.1
 2831+ 3  0A07	75 99 3F	        mov     SBUF,#'?'
 2832+ 2  0A0A	75 6E 01	        mov     fail,#001h
 2833+ 2  0A0D			??0253:
 2834+ 1
 2835+ 1			        top_ma  orl,r4,??0247,<>
 2836+ 2  0A0D	7C 51		        mov     r4,#arg0
 2837+ 2  0A0F	74 92		        mov     a,#arg1
 2838+ 2			        ifnb    <>
 2839+ 2			        set_cy
 2840+ 2			        endif
 2841+ 2  0A11	4C		        orl      a,r4
 2842+ 2			        ifnb    <>
 2843+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 52



 Line  I  Addr  Code            Source

 2844+ 2			        endif
 2845+ 2  0A12	B4 D3 0D	        cjne    a,#res,??0247
 2846+ 2			        ifnb    <>
 2847+ 2			        tst_psw <>,??0247
 2848+ 2			        endif
 2849+ 1			        top_ma  orl,r5,??0247,<>
 2850+ 2  0A15	7D 51		        mov     r5,#arg0
 2851+ 2  0A17	74 92		        mov     a,#arg1
 2852+ 2			        ifnb    <>
 2853+ 2			        set_cy
 2854+ 2			        endif
 2855+ 2  0A19	4D		        orl      a,r5
 2856+ 2			        ifnb    <>
 2857+ 2			        save_psw
 2858+ 2			        endif
 2859+ 2  0A1A	B4 D3 05	        cjne    a,#res,??0247
 2860+ 2			        ifnb    <>
 2861+ 2			        tst_psw <>,??0247
 2862+ 2			        endif
 2863+ 1
 2864+ 1			        eot     'c',??0247
 2865+ 2			        putc    #'c'
 2866+ 3  0A1D			??0257:
 2867+ 3			        ;jnb     SCON.1,putc_loop
 2868+ 3			        ;clr     SCON.1
 2869+ 3  0A1D	75 99 63	        mov     SBUF,#'c'
 2870+ 2  0A20	80 06		        sjmp    ??0256
 2871+ 2  0A22			??0247:  putc    #'?'
 2872+ 3  0A22			??0258:
 2873+ 3			        ;jnb     SCON.1,putc_loop
 2874+ 3			        ;clr     SCON.1
 2875+ 3  0A22	75 99 3F	        mov     SBUF,#'?'
 2876+ 2  0A25	75 6E 01	        mov     fail,#001h
 2877+ 2  0A28			??0256:
 2878+ 1
 2879+ 1			        top_ma  orl,r6,??0244,<>
 2880+ 2  0A28	7E 51		        mov     r6,#arg0
 2881+ 2  0A2A	74 92		        mov     a,#arg1
 2882+ 2			        ifnb    <>
 2883+ 2			        set_cy
 2884+ 2			        endif
 2885+ 2  0A2C	4E		        orl      a,r6
 2886+ 2			        ifnb    <>
 2887+ 2			        save_psw
 2888+ 2			        endif
 2889+ 2  0A2D	B4 D3 0D	        cjne    a,#res,??0244
 2890+ 2			        ifnb    <>
 2891+ 2			        tst_psw <>,??0244
 2892+ 2			        endif
 2893+ 1			        top_ma  orl,r7,??0244,<>
 2894+ 2  0A30	7F 51		        mov     r7,#arg0
 2895+ 2  0A32	74 92		        mov     a,#arg1
 2896+ 2			        ifnb    <>
 2897+ 2			        set_cy
 2898+ 2			        endif
 2899+ 2  0A34	4F		        orl      a,r7

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 53



 Line  I  Addr  Code            Source

 2900+ 2			        ifnb    <>
 2901+ 2			        save_psw
 2902+ 2			        endif
 2903+ 2  0A35	B4 D3 05	        cjne    a,#res,??0244
 2904+ 2			        ifnb    <>
 2905+ 2			        tst_psw <>,??0244
 2906+ 2			        endif
 2907+ 1
 2908+ 1			        eot     'd',??0244
 2909+ 2			        putc    #'d'
 2910+ 3  0A38			??0260:
 2911+ 3			        ;jnb     SCON.1,putc_loop
 2912+ 3			        ;clr     SCON.1
 2913+ 3  0A38	75 99 64	        mov     SBUF,#'d'
 2914+ 2  0A3B	80 06		        sjmp    ??0259
 2915+ 2  0A3D			??0244:  putc    #'?'
 2916+ 3  0A3D			??0261:
 2917+ 3			        ;jnb     SCON.1,putc_loop
 2918+ 3			        ;clr     SCON.1
 2919+ 3  0A3D	75 99 3F	        mov     SBUF,#'?'
 2920+ 2  0A40	75 6E 01	        mov     fail,#001h
 2921+ 2  0A43			??0259:
 2922+ 1
 2923+ 1			        ifb     <>
 2924+ 1
 2925+ 1			        top_mb  orl,a,??0248,<>
 2926+ 2  0A43	74 51		        mov     a,#arg0
 2927+ 2			        ifnb    <>
 2928+ 2			        set_cy
 2929+ 2			        endif
 2930+ 2  0A45	44 92		        orl      a,#arg1
 2931+ 2			        ifnb    <>
 2932+ 2			        save_psw
 2933+ 2			        endif
 2934+ 2  0A47	F5 E0		        mov     ACC,a
 2935+ 2  0A49	B4 D3 11	        cjne    a,#res,??0248
 2936+ 2			        ifnb    <>
 2937+ 2			        tst_psw <>,??0248
 2938+ 2			        endif
 2939+ 1			        top_mb  orl,dir0,??0248,<>
 2940+ 2  0A4C	75 60 51	        mov     dir0,#arg0
 2941+ 2			        ifnb    <>
 2942+ 2			        set_cy
 2943+ 2			        endif
 2944+ 2  0A4F	43 60 92	        orl      dir0,#arg1
 2945+ 2			        ifnb    <>
 2946+ 2			        save_psw
 2947+ 2			        endif
 2948+ 2  0A52	85 60 E0	        mov     ACC,dir0
 2949+ 2  0A55	B4 D3 05	        cjne    a,#res,??0248
 2950+ 2			        ifnb    <>
 2951+ 2			        tst_psw <>,??0248
 2952+ 2			        endif
 2953+ 1
 2954+ 1			        eot     'e',??0248
 2955+ 2			        putc    #'e'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 54



 Line  I  Addr  Code            Source

 2956+ 3  0A58			??0263:
 2957+ 3			        ;jnb     SCON.1,putc_loop
 2958+ 3			        ;clr     SCON.1
 2959+ 3  0A58	75 99 65	        mov     SBUF,#'e'
 2960+ 2  0A5B	80 06		        sjmp    ??0262
 2961+ 2  0A5D			??0248:  putc    #'?'
 2962+ 3  0A5D			??0264:
 2963+ 3			        ;jnb     SCON.1,putc_loop
 2964+ 3			        ;clr     SCON.1
 2965+ 3  0A5D	75 99 3F	        mov     SBUF,#'?'
 2966+ 2  0A60	75 6E 01	        mov     fail,#001h
 2967+ 2  0A63			??0262:
 2968+ 1
 2969+ 1			        top_mc  orl,??0249,<>
 2970+ 2  0A63	75 60 51	        mov     dir0,#arg0
 2971+ 2  0A66	74 92		        mov     a,#arg1
 2972+ 2			        ifnb    <>
 2973+ 2			        set_cy
 2974+ 2			        endif
 2975+ 2  0A68	42 60		        orl      dir0,a
 2976+ 2			        ifnb    <>
 2977+ 2			        save_psw
 2978+ 2			        endif
 2979+ 2  0A6A	E5 60		        mov     a,dir0
 2980+ 2  0A6C	B4 D3 05	        cjne    a,#res,??0249
 2981+ 2			        ifnb    <>
 2982+ 2			        tst_psw <>,??0249
 2983+ 2			        endif
 2984+ 1
 2985+ 1			        eot     'f',??0249
 2986+ 2			        putc    #'f'
 2987+ 3  0A6F			??0266:
 2988+ 3			        ;jnb     SCON.1,putc_loop
 2989+ 3			        ;clr     SCON.1
 2990+ 3  0A6F	75 99 66	        mov     SBUF,#'f'
 2991+ 2  0A72	80 06		        sjmp    ??0265
 2992+ 2  0A74			??0249:  putc    #'?'
 2993+ 3  0A74			??0267:
 2994+ 3			        ;jnb     SCON.1,putc_loop
 2995+ 3			        ;clr     SCON.1
 2996+ 3  0A74	75 99 3F	        mov     SBUF,#'?'
 2997+ 2  0A77	75 6E 01	        mov     fail,#001h
 2998+ 2  0A7A			??0265:
 2999+ 1			        endif
 3000:
 3001:				        put_crlf                    ; end of test series
 3002+ 1			        putc    #13
 3003+ 2  0A7A			??0268:
 3004+ 2			        ;jnb     SCON.1,putc_loop
 3005+ 2			        ;clr     SCON.1
 3006+ 2  0A7A	75 99 0D	        mov     SBUF,#13
 3007+ 1			        putc    #10
 3008+ 2  0A7D			??0269:
 3009+ 2			        ;jnb     SCON.1,putc_loop
 3010+ 2			        ;clr     SCON.1
 3011+ 2  0A7D	75 99 0A	        mov     SBUF,#10

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 55



 Line  I  Addr  Code            Source

 3012:
 3013:				        ;-- Test series J ------------------------------------------------------
 3014:				        ; XRL
 3015:				        ; (See comments for 'ALU opcode block test')
 3016:
 3017:
 3018:				        putc    #'J'                ; start of test series
 3019+ 1  0A80			??0270:
 3020+ 1			        ;jnb     SCON.1,putc_loop
 3021+ 1			        ;clr     SCON.1
 3022+ 1  0A80	75 99 4A	        mov     SBUF,#'J'
 3023:
 3024:				        tst_alu xrl,051h,033h,062h,
 3025+ 1
 3026+ 1	N      0051	        arg0    set 051h
 3027+ 1	N      0033	        arg1    set 033h
 3028+ 1	N      0062	        res     set 062h
 3029+ 1
 3030+ 1			        top_ma  xrl,dir0,??0272,<>
 3031+ 2  0A83	75 60 51	        mov     dir0,#arg0
 3032+ 2  0A86	74 33		        mov     a,#arg1
 3033+ 2			        ifnb    <>
 3034+ 2			        set_cy
 3035+ 2			        endif
 3036+ 2  0A88	65 60		        xrl      a,dir0
 3037+ 2			        ifnb    <>
 3038+ 2			        save_psw
 3039+ 2			        endif
 3040+ 2  0A8A	B4 62 29	        cjne    a,#res,??0272
 3041+ 2			        ifnb    <>
 3042+ 2			        tst_psw <>,??0272
 3043+ 2			        endif
 3044+ 1  0A8D	78 60		        mov     r0,#dir0
 3045+ 1			        top_ma  xrl,@r0,??0272,<>
 3046+ 2  0A8F	76 51		        mov     @r0,#arg0
 3047+ 2  0A91	74 33		        mov     a,#arg1
 3048+ 2			        ifnb    <>
 3049+ 2			        set_cy
 3050+ 2			        endif
 3051+ 2  0A93	66		        xrl      a,@r0
 3052+ 2			        ifnb    <>
 3053+ 2			        save_psw
 3054+ 2			        endif
 3055+ 2  0A94	B4 62 1F	        cjne    a,#res,??0272
 3056+ 2			        ifnb    <>
 3057+ 2			        tst_psw <>,??0272
 3058+ 2			        endif
 3059+ 1  0A97	79 31		        mov     r1,#031h
 3060+ 1			        top_ma  xrl,@r1,??0272,<>
 3061+ 2  0A99	77 51		        mov     @r1,#arg0
 3062+ 2  0A9B	74 33		        mov     a,#arg1
 3063+ 2			        ifnb    <>
 3064+ 2			        set_cy
 3065+ 2			        endif
 3066+ 2  0A9D	67		        xrl      a,@r1
 3067+ 2			        ifnb    <>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 56



 Line  I  Addr  Code            Source

 3068+ 2			        save_psw
 3069+ 2			        endif
 3070+ 2  0A9E	B4 62 15	        cjne    a,#res,??0272
 3071+ 2			        ifnb    <>
 3072+ 2			        tst_psw <>,??0272
 3073+ 2			        endif
 3074+ 1
 3075+ 1			        top_ma  xrl,r0,??0272,<>
 3076+ 2  0AA1	78 51		        mov     r0,#arg0
 3077+ 2  0AA3	74 33		        mov     a,#arg1
 3078+ 2			        ifnb    <>
 3079+ 2			        set_cy
 3080+ 2			        endif
 3081+ 2  0AA5	68		        xrl      a,r0
 3082+ 2			        ifnb    <>
 3083+ 2			        save_psw
 3084+ 2			        endif
 3085+ 2  0AA6	B4 62 0D	        cjne    a,#res,??0272
 3086+ 2			        ifnb    <>
 3087+ 2			        tst_psw <>,??0272
 3088+ 2			        endif
 3089+ 1			        top_ma  xrl,r1,??0272,<>
 3090+ 2  0AA9	79 51		        mov     r1,#arg0
 3091+ 2  0AAB	74 33		        mov     a,#arg1
 3092+ 2			        ifnb    <>
 3093+ 2			        set_cy
 3094+ 2			        endif
 3095+ 2  0AAD	69		        xrl      a,r1
 3096+ 2			        ifnb    <>
 3097+ 2			        save_psw
 3098+ 2			        endif
 3099+ 2  0AAE	B4 62 05	        cjne    a,#res,??0272
 3100+ 2			        ifnb    <>
 3101+ 2			        tst_psw <>,??0272
 3102+ 2			        endif
 3103+ 1
 3104+ 1			        eot     'a',??0272
 3105+ 2			        putc    #'a'
 3106+ 3  0AB1			??0278:
 3107+ 3			        ;jnb     SCON.1,putc_loop
 3108+ 3			        ;clr     SCON.1
 3109+ 3  0AB1	75 99 61	        mov     SBUF,#'a'
 3110+ 2  0AB4	80 06		        sjmp    ??0277
 3111+ 2  0AB6			??0272:  putc    #'?'
 3112+ 3  0AB6			??0279:
 3113+ 3			        ;jnb     SCON.1,putc_loop
 3114+ 3			        ;clr     SCON.1
 3115+ 3  0AB6	75 99 3F	        mov     SBUF,#'?'
 3116+ 2  0AB9	75 6E 01	        mov     fail,#001h
 3117+ 2  0ABC			??0277:
 3118+ 1
 3119+ 1			        top_ma  xrl,r2,??0273,<>
 3120+ 2  0ABC	7A 51		        mov     r2,#arg0
 3121+ 2  0ABE	74 33		        mov     a,#arg1
 3122+ 2			        ifnb    <>
 3123+ 2			        set_cy

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 57



 Line  I  Addr  Code            Source

 3124+ 2			        endif
 3125+ 2  0AC0	6A		        xrl      a,r2
 3126+ 2			        ifnb    <>
 3127+ 2			        save_psw
 3128+ 2			        endif
 3129+ 2  0AC1	B4 62 0D	        cjne    a,#res,??0273
 3130+ 2			        ifnb    <>
 3131+ 2			        tst_psw <>,??0273
 3132+ 2			        endif
 3133+ 1			        top_ma  xrl,r3,??0273,<>
 3134+ 2  0AC4	7B 51		        mov     r3,#arg0
 3135+ 2  0AC6	74 33		        mov     a,#arg1
 3136+ 2			        ifnb    <>
 3137+ 2			        set_cy
 3138+ 2			        endif
 3139+ 2  0AC8	6B		        xrl      a,r3
 3140+ 2			        ifnb    <>
 3141+ 2			        save_psw
 3142+ 2			        endif
 3143+ 2  0AC9	B4 62 05	        cjne    a,#res,??0273
 3144+ 2			        ifnb    <>
 3145+ 2			        tst_psw <>,??0273
 3146+ 2			        endif
 3147+ 1
 3148+ 1			        eot     'b',??0273
 3149+ 2			        putc    #'b'
 3150+ 3  0ACC			??0281:
 3151+ 3			        ;jnb     SCON.1,putc_loop
 3152+ 3			        ;clr     SCON.1
 3153+ 3  0ACC	75 99 62	        mov     SBUF,#'b'
 3154+ 2  0ACF	80 06		        sjmp    ??0280
 3155+ 2  0AD1			??0273:  putc    #'?'
 3156+ 3  0AD1			??0282:
 3157+ 3			        ;jnb     SCON.1,putc_loop
 3158+ 3			        ;clr     SCON.1
 3159+ 3  0AD1	75 99 3F	        mov     SBUF,#'?'
 3160+ 2  0AD4	75 6E 01	        mov     fail,#001h
 3161+ 2  0AD7			??0280:
 3162+ 1
 3163+ 1			        top_ma  xrl,r4,??0274,<>
 3164+ 2  0AD7	7C 51		        mov     r4,#arg0
 3165+ 2  0AD9	74 33		        mov     a,#arg1
 3166+ 2			        ifnb    <>
 3167+ 2			        set_cy
 3168+ 2			        endif
 3169+ 2  0ADB	6C		        xrl      a,r4
 3170+ 2			        ifnb    <>
 3171+ 2			        save_psw
 3172+ 2			        endif
 3173+ 2  0ADC	B4 62 0D	        cjne    a,#res,??0274
 3174+ 2			        ifnb    <>
 3175+ 2			        tst_psw <>,??0274
 3176+ 2			        endif
 3177+ 1			        top_ma  xrl,r5,??0274,<>
 3178+ 2  0ADF	7D 51		        mov     r5,#arg0
 3179+ 2  0AE1	74 33		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 58



 Line  I  Addr  Code            Source

 3180+ 2			        ifnb    <>
 3181+ 2			        set_cy
 3182+ 2			        endif
 3183+ 2  0AE3	6D		        xrl      a,r5
 3184+ 2			        ifnb    <>
 3185+ 2			        save_psw
 3186+ 2			        endif
 3187+ 2  0AE4	B4 62 05	        cjne    a,#res,??0274
 3188+ 2			        ifnb    <>
 3189+ 2			        tst_psw <>,??0274
 3190+ 2			        endif
 3191+ 1
 3192+ 1			        eot     'c',??0274
 3193+ 2			        putc    #'c'
 3194+ 3  0AE7			??0284:
 3195+ 3			        ;jnb     SCON.1,putc_loop
 3196+ 3			        ;clr     SCON.1
 3197+ 3  0AE7	75 99 63	        mov     SBUF,#'c'
 3198+ 2  0AEA	80 06		        sjmp    ??0283
 3199+ 2  0AEC			??0274:  putc    #'?'
 3200+ 3  0AEC			??0285:
 3201+ 3			        ;jnb     SCON.1,putc_loop
 3202+ 3			        ;clr     SCON.1
 3203+ 3  0AEC	75 99 3F	        mov     SBUF,#'?'
 3204+ 2  0AEF	75 6E 01	        mov     fail,#001h
 3205+ 2  0AF2			??0283:
 3206+ 1
 3207+ 1			        top_ma  xrl,r6,??0271,<>
 3208+ 2  0AF2	7E 51		        mov     r6,#arg0
 3209+ 2  0AF4	74 33		        mov     a,#arg1
 3210+ 2			        ifnb    <>
 3211+ 2			        set_cy
 3212+ 2			        endif
 3213+ 2  0AF6	6E		        xrl      a,r6
 3214+ 2			        ifnb    <>
 3215+ 2			        save_psw
 3216+ 2			        endif
 3217+ 2  0AF7	B4 62 0D	        cjne    a,#res,??0271
 3218+ 2			        ifnb    <>
 3219+ 2			        tst_psw <>,??0271
 3220+ 2			        endif
 3221+ 1			        top_ma  xrl,r7,??0271,<>
 3222+ 2  0AFA	7F 51		        mov     r7,#arg0
 3223+ 2  0AFC	74 33		        mov     a,#arg1
 3224+ 2			        ifnb    <>
 3225+ 2			        set_cy
 3226+ 2			        endif
 3227+ 2  0AFE	6F		        xrl      a,r7
 3228+ 2			        ifnb    <>
 3229+ 2			        save_psw
 3230+ 2			        endif
 3231+ 2  0AFF	B4 62 05	        cjne    a,#res,??0271
 3232+ 2			        ifnb    <>
 3233+ 2			        tst_psw <>,??0271
 3234+ 2			        endif
 3235+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 59



 Line  I  Addr  Code            Source

 3236+ 1			        eot     'd',??0271
 3237+ 2			        putc    #'d'
 3238+ 3  0B02			??0287:
 3239+ 3			        ;jnb     SCON.1,putc_loop
 3240+ 3			        ;clr     SCON.1
 3241+ 3  0B02	75 99 64	        mov     SBUF,#'d'
 3242+ 2  0B05	80 06		        sjmp    ??0286
 3243+ 2  0B07			??0271:  putc    #'?'
 3244+ 3  0B07			??0288:
 3245+ 3			        ;jnb     SCON.1,putc_loop
 3246+ 3			        ;clr     SCON.1
 3247+ 3  0B07	75 99 3F	        mov     SBUF,#'?'
 3248+ 2  0B0A	75 6E 01	        mov     fail,#001h
 3249+ 2  0B0D			??0286:
 3250+ 1
 3251+ 1			        ifb     <>
 3252+ 1
 3253+ 1			        top_mb  xrl,a,??0275,<>
 3254+ 2  0B0D	74 51		        mov     a,#arg0
 3255+ 2			        ifnb    <>
 3256+ 2			        set_cy
 3257+ 2			        endif
 3258+ 2  0B0F	64 33		        xrl      a,#arg1
 3259+ 2			        ifnb    <>
 3260+ 2			        save_psw
 3261+ 2			        endif
 3262+ 2  0B11	F5 E0		        mov     ACC,a
 3263+ 2  0B13	B4 62 11	        cjne    a,#res,??0275
 3264+ 2			        ifnb    <>
 3265+ 2			        tst_psw <>,??0275
 3266+ 2			        endif
 3267+ 1			        top_mb  xrl,dir0,??0275,<>
 3268+ 2  0B16	75 60 51	        mov     dir0,#arg0
 3269+ 2			        ifnb    <>
 3270+ 2			        set_cy
 3271+ 2			        endif
 3272+ 2  0B19	63 60 33	        xrl      dir0,#arg1
 3273+ 2			        ifnb    <>
 3274+ 2			        save_psw
 3275+ 2			        endif
 3276+ 2  0B1C	85 60 E0	        mov     ACC,dir0
 3277+ 2  0B1F	B4 62 05	        cjne    a,#res,??0275
 3278+ 2			        ifnb    <>
 3279+ 2			        tst_psw <>,??0275
 3280+ 2			        endif
 3281+ 1
 3282+ 1			        eot     'e',??0275
 3283+ 2			        putc    #'e'
 3284+ 3  0B22			??0290:
 3285+ 3			        ;jnb     SCON.1,putc_loop
 3286+ 3			        ;clr     SCON.1
 3287+ 3  0B22	75 99 65	        mov     SBUF,#'e'
 3288+ 2  0B25	80 06		        sjmp    ??0289
 3289+ 2  0B27			??0275:  putc    #'?'
 3290+ 3  0B27			??0291:
 3291+ 3			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 60



 Line  I  Addr  Code            Source

 3292+ 3			        ;clr     SCON.1
 3293+ 3  0B27	75 99 3F	        mov     SBUF,#'?'
 3294+ 2  0B2A	75 6E 01	        mov     fail,#001h
 3295+ 2  0B2D			??0289:
 3296+ 1
 3297+ 1			        top_mc  xrl,??0276,<>
 3298+ 2  0B2D	75 60 51	        mov     dir0,#arg0
 3299+ 2  0B30	74 33		        mov     a,#arg1
 3300+ 2			        ifnb    <>
 3301+ 2			        set_cy
 3302+ 2			        endif
 3303+ 2  0B32	62 60		        xrl      dir0,a
 3304+ 2			        ifnb    <>
 3305+ 2			        save_psw
 3306+ 2			        endif
 3307+ 2  0B34	E5 60		        mov     a,dir0
 3308+ 2  0B36	B4 62 05	        cjne    a,#res,??0276
 3309+ 2			        ifnb    <>
 3310+ 2			        tst_psw <>,??0276
 3311+ 2			        endif
 3312+ 1
 3313+ 1			        eot     'f',??0276
 3314+ 2			        putc    #'f'
 3315+ 3  0B39			??0293:
 3316+ 3			        ;jnb     SCON.1,putc_loop
 3317+ 3			        ;clr     SCON.1
 3318+ 3  0B39	75 99 66	        mov     SBUF,#'f'
 3319+ 2  0B3C	80 06		        sjmp    ??0292
 3320+ 2  0B3E			??0276:  putc    #'?'
 3321+ 3  0B3E			??0294:
 3322+ 3			        ;jnb     SCON.1,putc_loop
 3323+ 3			        ;clr     SCON.1
 3324+ 3  0B3E	75 99 3F	        mov     SBUF,#'?'
 3325+ 2  0B41	75 6E 01	        mov     fail,#001h
 3326+ 2  0B44			??0292:
 3327+ 1			        endif
 3328:
 3329:				        put_crlf                    ; end of test series
 3330+ 1			        putc    #13
 3331+ 2  0B44			??0295:
 3332+ 2			        ;jnb     SCON.1,putc_loop
 3333+ 2			        ;clr     SCON.1
 3334+ 2  0B44	75 99 0D	        mov     SBUF,#13
 3335+ 1			        putc    #10
 3336+ 2  0B47			??0296:
 3337+ 2			        ;jnb     SCON.1,putc_loop
 3338+ 2			        ;clr     SCON.1
 3339+ 2  0B47	75 99 0A	        mov     SBUF,#10
 3340:
 3341:				        ;-- Test series K ------------------------------------------------------
 3342:				        ; DJNZ
 3343:				        ; a.- <DJNZ dir,rel>, <DJNZ Rn,rel> tested only with small negative rels
 3344:
 3345:				        putc    #'K'                ; start of test series
 3346+ 1  0B4A			??0297:
 3347+ 1			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 61



 Line  I  Addr  Code            Source

 3348+ 1			        ;clr     SCON.1
 3349+ 1  0B4A	75 99 4B	        mov     SBUF,#'K'
 3350:
 3351:				        ;tk_ma: test DJNZ with parametrizable addressing mode
 3352:				tk_ma   macro   dst,error_loc
 3353:				        local   tk_ma0
 3354:				nloops  set     3
 3355:				        mov     dst,#nloops         ; We'll perform a fixed no. of iterations
 3356:				        mov     a,#(nloops+1)       ; A will or our control counter
 3357:				tk_ma0: dec     a
 3358:				        jz      error_loc           ; Break loop after nloops iterations
 3359:				        djnz    dst,tk_ma0          ; Test DJNZ instruction
 3360:				        cjne    a,#001,error_loc    ; Verify number of iterations is ok
 3361:				        endm
 3362:
 3363:				        tk_ma   dir0,tk_a0          ; <DJNZ dir,rel>
 3364+ 1	N      0003	nloops  set     3
 3365+ 1  0B4D	75 60 03	        mov     dir0,#nloops         ; We'll perform a fixed no. of iterations
 3366+ 1  0B50	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3367+ 1  0B52	14		??0298: dec     a
 3368+ 1  0B53	60 0B		        jz      tk_a0           ; Break loop after nloops iterations
 3369+ 1  0B55	D5 60 FA	        djnz    dir0,??0298          ; Test DJNZ instruction
 3370+ 1  0B58	B4 01 05	        cjne    a,#001,tk_a0    ; Verify number of iterations is ok
 3371:
 3372:				        eot     'a',tk_a0
 3373+ 1			        putc    #'a'
 3374+ 2  0B5B			??0300:
 3375+ 2			        ;jnb     SCON.1,putc_loop
 3376+ 2			        ;clr     SCON.1
 3377+ 2  0B5B	75 99 61	        mov     SBUF,#'a'
 3378+ 1  0B5E	80 06		        sjmp    ??0299
 3379+ 1  0B60			tk_a0:  putc    #'?'
 3380+ 2  0B60			??0301:
 3381+ 2			        ;jnb     SCON.1,putc_loop
 3382+ 2			        ;clr     SCON.1
 3383+ 2  0B60	75 99 3F	        mov     SBUF,#'?'
 3384+ 1  0B63	75 6E 01	        mov     fail,#001h
 3385+ 1  0B66			??0299:
 3386:
 3387:				        tk_ma   r0,tk_b0            ; <DJNZ Rn,rel>
 3388+ 1	N      0003	nloops  set     3
 3389+ 1  0B66	78 03		        mov     r0,#nloops         ; We'll perform a fixed no. of iterations
 3390+ 1  0B68	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3391+ 1  0B6A	14		??0302: dec     a
 3392+ 1  0B6B	60 5E		        jz      tk_b0           ; Break loop after nloops iterations
 3393+ 1  0B6D	D8 FB		        djnz    r0,??0302          ; Test DJNZ instruction
 3394+ 1  0B6F	B4 01 59	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3395:				        tk_ma   r1,tk_b0
 3396+ 1	N      0003	nloops  set     3
 3397+ 1  0B72	79 03		        mov     r1,#nloops         ; We'll perform a fixed no. of iterations
 3398+ 1  0B74	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3399+ 1  0B76	14		??0303: dec     a
 3400+ 1  0B77	60 52		        jz      tk_b0           ; Break loop after nloops iterations
 3401+ 1  0B79	D9 FB		        djnz    r1,??0303          ; Test DJNZ instruction
 3402+ 1  0B7B	B4 01 4D	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3403:				        tk_ma   r2,tk_b0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 62



 Line  I  Addr  Code            Source

 3404+ 1	N      0003	nloops  set     3
 3405+ 1  0B7E	7A 03		        mov     r2,#nloops         ; We'll perform a fixed no. of iterations
 3406+ 1  0B80	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3407+ 1  0B82	14		??0304: dec     a
 3408+ 1  0B83	60 46		        jz      tk_b0           ; Break loop after nloops iterations
 3409+ 1  0B85	DA FB		        djnz    r2,??0304          ; Test DJNZ instruction
 3410+ 1  0B87	B4 01 41	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3411:				        tk_ma   r3,tk_b0
 3412+ 1	N      0003	nloops  set     3
 3413+ 1  0B8A	7B 03		        mov     r3,#nloops         ; We'll perform a fixed no. of iterations
 3414+ 1  0B8C	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3415+ 1  0B8E	14		??0305: dec     a
 3416+ 1  0B8F	60 3A		        jz      tk_b0           ; Break loop after nloops iterations
 3417+ 1  0B91	DB FB		        djnz    r3,??0305          ; Test DJNZ instruction
 3418+ 1  0B93	B4 01 35	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3419:				        tk_ma   r4,tk_b0
 3420+ 1	N      0003	nloops  set     3
 3421+ 1  0B96	7C 03		        mov     r4,#nloops         ; We'll perform a fixed no. of iterations
 3422+ 1  0B98	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3423+ 1  0B9A	14		??0306: dec     a
 3424+ 1  0B9B	60 2E		        jz      tk_b0           ; Break loop after nloops iterations
 3425+ 1  0B9D	DC FB		        djnz    r4,??0306          ; Test DJNZ instruction
 3426+ 1  0B9F	B4 01 29	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3427:				        tk_ma   r5,tk_b0
 3428+ 1	N      0003	nloops  set     3
 3429+ 1  0BA2	7D 03		        mov     r5,#nloops         ; We'll perform a fixed no. of iterations
 3430+ 1  0BA4	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3431+ 1  0BA6	14		??0307: dec     a
 3432+ 1  0BA7	60 22		        jz      tk_b0           ; Break loop after nloops iterations
 3433+ 1  0BA9	DD FB		        djnz    r5,??0307          ; Test DJNZ instruction
 3434+ 1  0BAB	B4 01 1D	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3435:				        tk_ma   r6,tk_b0
 3436+ 1	N      0003	nloops  set     3
 3437+ 1  0BAE	7E 03		        mov     r6,#nloops         ; We'll perform a fixed no. of iterations
 3438+ 1  0BB0	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3439+ 1  0BB2	14		??0308: dec     a
 3440+ 1  0BB3	60 16		        jz      tk_b0           ; Break loop after nloops iterations
 3441+ 1  0BB5	DE FB		        djnz    r6,??0308          ; Test DJNZ instruction
 3442+ 1  0BB7	B4 01 11	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3443:				        tk_ma   r7,tk_b0
 3444+ 1	N      0003	nloops  set     3
 3445+ 1  0BBA	7F 03		        mov     r7,#nloops         ; We'll perform a fixed no. of iterations
 3446+ 1  0BBC	74 04		        mov     a,#(nloops+1)       ; A will or our control counter
 3447+ 1  0BBE	14		??0309: dec     a
 3448+ 1  0BBF	60 0A		        jz      tk_b0           ; Break loop after nloops iterations
 3449+ 1  0BC1	DF FB		        djnz    r7,??0309          ; Test DJNZ instruction
 3450+ 1  0BC3	B4 01 05	        cjne    a,#001,tk_b0    ; Verify number of iterations is ok
 3451:
 3452:				        eot     'b',tk_b0
 3453+ 1			        putc    #'b'
 3454+ 2  0BC6			??0311:
 3455+ 2			        ;jnb     SCON.1,putc_loop
 3456+ 2			        ;clr     SCON.1
 3457+ 2  0BC6	75 99 62	        mov     SBUF,#'b'
 3458+ 1  0BC9	80 06		        sjmp    ??0310
 3459+ 1  0BCB			tk_b0:  putc    #'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 63



 Line  I  Addr  Code            Source

 3460+ 2  0BCB			??0312:
 3461+ 2			        ;jnb     SCON.1,putc_loop
 3462+ 2			        ;clr     SCON.1
 3463+ 2  0BCB	75 99 3F	        mov     SBUF,#'?'
 3464+ 1  0BCE	75 6E 01	        mov     fail,#001h
 3465+ 1  0BD1			??0310:
 3466:
 3467:				        put_crlf                    ; end of test series
 3468+ 1			        putc    #13
 3469+ 2  0BD1			??0313:
 3470+ 2			        ;jnb     SCON.1,putc_loop
 3471+ 2			        ;clr     SCON.1
 3472+ 2  0BD1	75 99 0D	        mov     SBUF,#13
 3473+ 1			        putc    #10
 3474+ 2  0BD4			??0314:
 3475+ 2			        ;jnb     SCON.1,putc_loop
 3476+ 2			        ;clr     SCON.1
 3477+ 2  0BD4	75 99 0A	        mov     SBUF,#10
 3478:
 3479:
 3480:				        ;-- Test series L ------------------------------------------------------
 3481:				        ; ADD
 3482:				        ; (See comments for 'ALU opcode block test')
 3483:
 3484:
 3485:				        putc    #'L'                ; start of test series
 3486+ 1  0BD7			??0315:
 3487+ 1			        ;jnb     SCON.1,putc_loop
 3488+ 1			        ;clr     SCON.1
 3489+ 1  0BD7	75 99 4C	        mov     SBUF,#'L'
 3490:
 3491:				        putc    #'0'
 3492+ 1  0BDA			??0316:
 3493+ 1			        ;jnb     SCON.1,putc_loop
 3494+ 1			        ;clr     SCON.1
 3495+ 1  0BDA	75 99 30	        mov     SBUF,#'0'
 3496:				        tst_alu add,051h,033h,084h,004h     ; /CY /AC  OV
 3497+ 1
 3498+ 1	N      0051	        arg0    set 051h
 3499+ 1	N      0033	        arg1    set 033h
 3500+ 1	N      0084	        res     set 084h
 3501+ 1
 3502+ 1			        top_ma  add,dir0,??0318,<004h>
 3503+ 2  0BDD	75 60 51	        mov     dir0,#arg0
 3504+ 2  0BE0	74 33		        mov     a,#arg1
 3505+ 2			        ifnb    <004h>
 3506+ 2			        set_cy  004h
 3507+ 3	N      0000	??0323  set     (004h and 1)
 3508+ 3	N      0000	        if      ??0323 eq 1
 3509+ 3			        setb    c
 3510+ 3			        else
 3511+ 3  0BE2	C3		        clr     c
 3512+ 3			        endif
 3513+ 2			        endif
 3514+ 2  0BE3	25 60		        add      a,dir0
 3515+ 2			        ifnb    <004h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 64



 Line  I  Addr  Code            Source

 3516+ 2			        save_psw
 3517+ 3  0BE5	85 D0 70	        mov     saved_psw,PSW
 3518+ 2			        endif
 3519+ 2  0BE8	B4 84 6B	        cjne    a,#res,??0318
 3520+ 2			        ifnb    <004h>
 3521+ 2			        tst_psw <004h>,??0318
 3522+ 3  0BEB	E5 70		        mov     a,saved_psw
 3523+ 3  0BED	54 C4		        anl     a,#0c4h
 3524+ 3  0BEF	64 04		        xrl     a,#004h
 3525+ 3  0BF1	54 FE		        anl     a,#0feh
 3526+ 3  0BF3	70 61		        jnz     ??0318
 3527+ 2			        endif
 3528+ 1  0BF5	78 60		        mov     r0,#dir0
 3529+ 1			        top_ma  add,@r0,??0318,<004h>
 3530+ 2  0BF7	76 51		        mov     @r0,#arg0
 3531+ 2  0BF9	74 33		        mov     a,#arg1
 3532+ 2			        ifnb    <004h>
 3533+ 2			        set_cy  004h
 3534+ 3	N      0000	??0324  set     (004h and 1)
 3535+ 3	N      0000	        if      ??0324 eq 1
 3536+ 3			        setb    c
 3537+ 3			        else
 3538+ 3  0BFB	C3		        clr     c
 3539+ 3			        endif
 3540+ 2			        endif
 3541+ 2  0BFC	26		        add      a,@r0
 3542+ 2			        ifnb    <004h>
 3543+ 2			        save_psw
 3544+ 3  0BFD	85 D0 70	        mov     saved_psw,PSW
 3545+ 2			        endif
 3546+ 2  0C00	B4 84 53	        cjne    a,#res,??0318
 3547+ 2			        ifnb    <004h>
 3548+ 2			        tst_psw <004h>,??0318
 3549+ 3  0C03	E5 70		        mov     a,saved_psw
 3550+ 3  0C05	54 C4		        anl     a,#0c4h
 3551+ 3  0C07	64 04		        xrl     a,#004h
 3552+ 3  0C09	54 FE		        anl     a,#0feh
 3553+ 3  0C0B	70 49		        jnz     ??0318
 3554+ 2			        endif
 3555+ 1  0C0D	79 31		        mov     r1,#031h
 3556+ 1			        top_ma  add,@r1,??0318,<004h>
 3557+ 2  0C0F	77 51		        mov     @r1,#arg0
 3558+ 2  0C11	74 33		        mov     a,#arg1
 3559+ 2			        ifnb    <004h>
 3560+ 2			        set_cy  004h
 3561+ 3	N      0000	??0325  set     (004h and 1)
 3562+ 3	N      0000	        if      ??0325 eq 1
 3563+ 3			        setb    c
 3564+ 3			        else
 3565+ 3  0C13	C3		        clr     c
 3566+ 3			        endif
 3567+ 2			        endif
 3568+ 2  0C14	27		        add      a,@r1
 3569+ 2			        ifnb    <004h>
 3570+ 2			        save_psw
 3571+ 3  0C15	85 D0 70	        mov     saved_psw,PSW

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 65



 Line  I  Addr  Code            Source

 3572+ 2			        endif
 3573+ 2  0C18	B4 84 3B	        cjne    a,#res,??0318
 3574+ 2			        ifnb    <004h>
 3575+ 2			        tst_psw <004h>,??0318
 3576+ 3  0C1B	E5 70		        mov     a,saved_psw
 3577+ 3  0C1D	54 C4		        anl     a,#0c4h
 3578+ 3  0C1F	64 04		        xrl     a,#004h
 3579+ 3  0C21	54 FE		        anl     a,#0feh
 3580+ 3  0C23	70 31		        jnz     ??0318
 3581+ 2			        endif
 3582+ 1
 3583+ 1			        top_ma  add,r0,??0318,<004h>
 3584+ 2  0C25	78 51		        mov     r0,#arg0
 3585+ 2  0C27	74 33		        mov     a,#arg1
 3586+ 2			        ifnb    <004h>
 3587+ 2			        set_cy  004h
 3588+ 3	N      0000	??0326  set     (004h and 1)
 3589+ 3	N      0000	        if      ??0326 eq 1
 3590+ 3			        setb    c
 3591+ 3			        else
 3592+ 3  0C29	C3		        clr     c
 3593+ 3			        endif
 3594+ 2			        endif
 3595+ 2  0C2A	28		        add      a,r0
 3596+ 2			        ifnb    <004h>
 3597+ 2			        save_psw
 3598+ 3  0C2B	85 D0 70	        mov     saved_psw,PSW
 3599+ 2			        endif
 3600+ 2  0C2E	B4 84 25	        cjne    a,#res,??0318
 3601+ 2			        ifnb    <004h>
 3602+ 2			        tst_psw <004h>,??0318
 3603+ 3  0C31	E5 70		        mov     a,saved_psw
 3604+ 3  0C33	54 C4		        anl     a,#0c4h
 3605+ 3  0C35	64 04		        xrl     a,#004h
 3606+ 3  0C37	54 FE		        anl     a,#0feh
 3607+ 3  0C39	70 1B		        jnz     ??0318
 3608+ 2			        endif
 3609+ 1			        top_ma  add,r1,??0318,<004h>
 3610+ 2  0C3B	79 51		        mov     r1,#arg0
 3611+ 2  0C3D	74 33		        mov     a,#arg1
 3612+ 2			        ifnb    <004h>
 3613+ 2			        set_cy  004h
 3614+ 3	N      0000	??0327  set     (004h and 1)
 3615+ 3	N      0000	        if      ??0327 eq 1
 3616+ 3			        setb    c
 3617+ 3			        else
 3618+ 3  0C3F	C3		        clr     c
 3619+ 3			        endif
 3620+ 2			        endif
 3621+ 2  0C40	29		        add      a,r1
 3622+ 2			        ifnb    <004h>
 3623+ 2			        save_psw
 3624+ 3  0C41	85 D0 70	        mov     saved_psw,PSW
 3625+ 2			        endif
 3626+ 2  0C44	B4 84 0F	        cjne    a,#res,??0318
 3627+ 2			        ifnb    <004h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 66



 Line  I  Addr  Code            Source

 3628+ 2			        tst_psw <004h>,??0318
 3629+ 3  0C47	E5 70		        mov     a,saved_psw
 3630+ 3  0C49	54 C4		        anl     a,#0c4h
 3631+ 3  0C4B	64 04		        xrl     a,#004h
 3632+ 3  0C4D	54 FE		        anl     a,#0feh
 3633+ 3  0C4F	70 05		        jnz     ??0318
 3634+ 2			        endif
 3635+ 1
 3636+ 1			        eot     'a',??0318
 3637+ 2			        putc    #'a'
 3638+ 3  0C51			??0329:
 3639+ 3			        ;jnb     SCON.1,putc_loop
 3640+ 3			        ;clr     SCON.1
 3641+ 3  0C51	75 99 61	        mov     SBUF,#'a'
 3642+ 2  0C54	80 06		        sjmp    ??0328
 3643+ 2  0C56			??0318:  putc    #'?'
 3644+ 3  0C56			??0330:
 3645+ 3			        ;jnb     SCON.1,putc_loop
 3646+ 3			        ;clr     SCON.1
 3647+ 3  0C56	75 99 3F	        mov     SBUF,#'?'
 3648+ 2  0C59	75 6E 01	        mov     fail,#001h
 3649+ 2  0C5C			??0328:
 3650+ 1
 3651+ 1			        top_ma  add,r2,??0319,<004h>
 3652+ 2  0C5C	7A 51		        mov     r2,#arg0
 3653+ 2  0C5E	74 33		        mov     a,#arg1
 3654+ 2			        ifnb    <004h>
 3655+ 2			        set_cy  004h
 3656+ 3	N      0000	??0331  set     (004h and 1)
 3657+ 3	N      0000	        if      ??0331 eq 1
 3658+ 3			        setb    c
 3659+ 3			        else
 3660+ 3  0C60	C3		        clr     c
 3661+ 3			        endif
 3662+ 2			        endif
 3663+ 2  0C61	2A		        add      a,r2
 3664+ 2			        ifnb    <004h>
 3665+ 2			        save_psw
 3666+ 3  0C62	85 D0 70	        mov     saved_psw,PSW
 3667+ 2			        endif
 3668+ 2  0C65	B4 84 25	        cjne    a,#res,??0319
 3669+ 2			        ifnb    <004h>
 3670+ 2			        tst_psw <004h>,??0319
 3671+ 3  0C68	E5 70		        mov     a,saved_psw
 3672+ 3  0C6A	54 C4		        anl     a,#0c4h
 3673+ 3  0C6C	64 04		        xrl     a,#004h
 3674+ 3  0C6E	54 FE		        anl     a,#0feh
 3675+ 3  0C70	70 1B		        jnz     ??0319
 3676+ 2			        endif
 3677+ 1			        top_ma  add,r3,??0319,<004h>
 3678+ 2  0C72	7B 51		        mov     r3,#arg0
 3679+ 2  0C74	74 33		        mov     a,#arg1
 3680+ 2			        ifnb    <004h>
 3681+ 2			        set_cy  004h
 3682+ 3	N      0000	??0332  set     (004h and 1)
 3683+ 3	N      0000	        if      ??0332 eq 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 67



 Line  I  Addr  Code            Source

 3684+ 3			        setb    c
 3685+ 3			        else
 3686+ 3  0C76	C3		        clr     c
 3687+ 3			        endif
 3688+ 2			        endif
 3689+ 2  0C77	2B		        add      a,r3
 3690+ 2			        ifnb    <004h>
 3691+ 2			        save_psw
 3692+ 3  0C78	85 D0 70	        mov     saved_psw,PSW
 3693+ 2			        endif
 3694+ 2  0C7B	B4 84 0F	        cjne    a,#res,??0319
 3695+ 2			        ifnb    <004h>
 3696+ 2			        tst_psw <004h>,??0319
 3697+ 3  0C7E	E5 70		        mov     a,saved_psw
 3698+ 3  0C80	54 C4		        anl     a,#0c4h
 3699+ 3  0C82	64 04		        xrl     a,#004h
 3700+ 3  0C84	54 FE		        anl     a,#0feh
 3701+ 3  0C86	70 05		        jnz     ??0319
 3702+ 2			        endif
 3703+ 1
 3704+ 1			        eot     'b',??0319
 3705+ 2			        putc    #'b'
 3706+ 3  0C88			??0334:
 3707+ 3			        ;jnb     SCON.1,putc_loop
 3708+ 3			        ;clr     SCON.1
 3709+ 3  0C88	75 99 62	        mov     SBUF,#'b'
 3710+ 2  0C8B	80 06		        sjmp    ??0333
 3711+ 2  0C8D			??0319:  putc    #'?'
 3712+ 3  0C8D			??0335:
 3713+ 3			        ;jnb     SCON.1,putc_loop
 3714+ 3			        ;clr     SCON.1
 3715+ 3  0C8D	75 99 3F	        mov     SBUF,#'?'
 3716+ 2  0C90	75 6E 01	        mov     fail,#001h
 3717+ 2  0C93			??0333:
 3718+ 1
 3719+ 1			        top_ma  add,r4,??0320,<004h>
 3720+ 2  0C93	7C 51		        mov     r4,#arg0
 3721+ 2  0C95	74 33		        mov     a,#arg1
 3722+ 2			        ifnb    <004h>
 3723+ 2			        set_cy  004h
 3724+ 3	N      0000	??0336  set     (004h and 1)
 3725+ 3	N      0000	        if      ??0336 eq 1
 3726+ 3			        setb    c
 3727+ 3			        else
 3728+ 3  0C97	C3		        clr     c
 3729+ 3			        endif
 3730+ 2			        endif
 3731+ 2  0C98	2C		        add      a,r4
 3732+ 2			        ifnb    <004h>
 3733+ 2			        save_psw
 3734+ 3  0C99	85 D0 70	        mov     saved_psw,PSW
 3735+ 2			        endif
 3736+ 2  0C9C	B4 84 25	        cjne    a,#res,??0320
 3737+ 2			        ifnb    <004h>
 3738+ 2			        tst_psw <004h>,??0320
 3739+ 3  0C9F	E5 70		        mov     a,saved_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 68



 Line  I  Addr  Code            Source

 3740+ 3  0CA1	54 C4		        anl     a,#0c4h
 3741+ 3  0CA3	64 04		        xrl     a,#004h
 3742+ 3  0CA5	54 FE		        anl     a,#0feh
 3743+ 3  0CA7	70 1B		        jnz     ??0320
 3744+ 2			        endif
 3745+ 1			        top_ma  add,r5,??0320,<004h>
 3746+ 2  0CA9	7D 51		        mov     r5,#arg0
 3747+ 2  0CAB	74 33		        mov     a,#arg1
 3748+ 2			        ifnb    <004h>
 3749+ 2			        set_cy  004h
 3750+ 3	N      0000	??0337  set     (004h and 1)
 3751+ 3	N      0000	        if      ??0337 eq 1
 3752+ 3			        setb    c
 3753+ 3			        else
 3754+ 3  0CAD	C3		        clr     c
 3755+ 3			        endif
 3756+ 2			        endif
 3757+ 2  0CAE	2D		        add      a,r5
 3758+ 2			        ifnb    <004h>
 3759+ 2			        save_psw
 3760+ 3  0CAF	85 D0 70	        mov     saved_psw,PSW
 3761+ 2			        endif
 3762+ 2  0CB2	B4 84 0F	        cjne    a,#res,??0320
 3763+ 2			        ifnb    <004h>
 3764+ 2			        tst_psw <004h>,??0320
 3765+ 3  0CB5	E5 70		        mov     a,saved_psw
 3766+ 3  0CB7	54 C4		        anl     a,#0c4h
 3767+ 3  0CB9	64 04		        xrl     a,#004h
 3768+ 3  0CBB	54 FE		        anl     a,#0feh
 3769+ 3  0CBD	70 05		        jnz     ??0320
 3770+ 2			        endif
 3771+ 1
 3772+ 1			        eot     'c',??0320
 3773+ 2			        putc    #'c'
 3774+ 3  0CBF			??0339:
 3775+ 3			        ;jnb     SCON.1,putc_loop
 3776+ 3			        ;clr     SCON.1
 3777+ 3  0CBF	75 99 63	        mov     SBUF,#'c'
 3778+ 2  0CC2	80 06		        sjmp    ??0338
 3779+ 2  0CC4			??0320:  putc    #'?'
 3780+ 3  0CC4			??0340:
 3781+ 3			        ;jnb     SCON.1,putc_loop
 3782+ 3			        ;clr     SCON.1
 3783+ 3  0CC4	75 99 3F	        mov     SBUF,#'?'
 3784+ 2  0CC7	75 6E 01	        mov     fail,#001h
 3785+ 2  0CCA			??0338:
 3786+ 1
 3787+ 1			        top_ma  add,r6,??0317,<004h>
 3788+ 2  0CCA	7E 51		        mov     r6,#arg0
 3789+ 2  0CCC	74 33		        mov     a,#arg1
 3790+ 2			        ifnb    <004h>
 3791+ 2			        set_cy  004h
 3792+ 3	N      0000	??0341  set     (004h and 1)
 3793+ 3	N      0000	        if      ??0341 eq 1
 3794+ 3			        setb    c
 3795+ 3			        else

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 69



 Line  I  Addr  Code            Source

 3796+ 3  0CCE	C3		        clr     c
 3797+ 3			        endif
 3798+ 2			        endif
 3799+ 2  0CCF	2E		        add      a,r6
 3800+ 2			        ifnb    <004h>
 3801+ 2			        save_psw
 3802+ 3  0CD0	85 D0 70	        mov     saved_psw,PSW
 3803+ 2			        endif
 3804+ 2  0CD3	B4 84 25	        cjne    a,#res,??0317
 3805+ 2			        ifnb    <004h>
 3806+ 2			        tst_psw <004h>,??0317
 3807+ 3  0CD6	E5 70		        mov     a,saved_psw
 3808+ 3  0CD8	54 C4		        anl     a,#0c4h
 3809+ 3  0CDA	64 04		        xrl     a,#004h
 3810+ 3  0CDC	54 FE		        anl     a,#0feh
 3811+ 3  0CDE	70 1B		        jnz     ??0317
 3812+ 2			        endif
 3813+ 1			        top_ma  add,r7,??0317,<004h>
 3814+ 2  0CE0	7F 51		        mov     r7,#arg0
 3815+ 2  0CE2	74 33		        mov     a,#arg1
 3816+ 2			        ifnb    <004h>
 3817+ 2			        set_cy  004h
 3818+ 3	N      0000	??0342  set     (004h and 1)
 3819+ 3	N      0000	        if      ??0342 eq 1
 3820+ 3			        setb    c
 3821+ 3			        else
 3822+ 3  0CE4	C3		        clr     c
 3823+ 3			        endif
 3824+ 2			        endif
 3825+ 2  0CE5	2F		        add      a,r7
 3826+ 2			        ifnb    <004h>
 3827+ 2			        save_psw
 3828+ 3  0CE6	85 D0 70	        mov     saved_psw,PSW
 3829+ 2			        endif
 3830+ 2  0CE9	B4 84 0F	        cjne    a,#res,??0317
 3831+ 2			        ifnb    <004h>
 3832+ 2			        tst_psw <004h>,??0317
 3833+ 3  0CEC	E5 70		        mov     a,saved_psw
 3834+ 3  0CEE	54 C4		        anl     a,#0c4h
 3835+ 3  0CF0	64 04		        xrl     a,#004h
 3836+ 3  0CF2	54 FE		        anl     a,#0feh
 3837+ 3  0CF4	70 05		        jnz     ??0317
 3838+ 2			        endif
 3839+ 1
 3840+ 1			        eot     'd',??0317
 3841+ 2			        putc    #'d'
 3842+ 3  0CF6			??0344:
 3843+ 3			        ;jnb     SCON.1,putc_loop
 3844+ 3			        ;clr     SCON.1
 3845+ 3  0CF6	75 99 64	        mov     SBUF,#'d'
 3846+ 2  0CF9	80 06		        sjmp    ??0343
 3847+ 2  0CFB			??0317:  putc    #'?'
 3848+ 3  0CFB			??0345:
 3849+ 3			        ;jnb     SCON.1,putc_loop
 3850+ 3			        ;clr     SCON.1
 3851+ 3  0CFB	75 99 3F	        mov     SBUF,#'?'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 70



 Line  I  Addr  Code            Source

 3852+ 2  0CFE	75 6E 01	        mov     fail,#001h
 3853+ 2  0D01			??0343:
 3854+ 1
 3855+ 1			        ifb     <004h>
 3856+ 1
 3857+ 1			        top_mb  add,a,??0321,<004h>
 3858+ 1			        top_mb  add,dir0,??0321,<004h>
 3859+ 1
 3860+ 1			        eot     'e',??0321
 3861+ 1
 3862+ 1			        top_mc  add,??0322,<004h>
 3863+ 1
 3864+ 1			        eot     'f',??0322
 3865+ 1			        endif
 3866:				        putc    #'1'
 3867+ 1  0D01			??0346:
 3868+ 1			        ;jnb     SCON.1,putc_loop
 3869+ 1			        ;clr     SCON.1
 3870+ 1  0D01	75 99 31	        mov     SBUF,#'1'
 3871:				        tst_alu add,081h,093h,014h,084h     ;  CY /AC  OV
 3872+ 1
 3873+ 1	N      0081	        arg0    set 081h
 3874+ 1	N      0093	        arg1    set 093h
 3875+ 1	N      0014	        res     set 014h
 3876+ 1
 3877+ 1			        top_ma  add,dir0,??0348,<084h>
 3878+ 2  0D04	75 60 81	        mov     dir0,#arg0
 3879+ 2  0D07	74 93		        mov     a,#arg1
 3880+ 2			        ifnb    <084h>
 3881+ 2			        set_cy  084h
 3882+ 3	N      0000	??0353  set     (084h and 1)
 3883+ 3	N      0000	        if      ??0353 eq 1
 3884+ 3			        setb    c
 3885+ 3			        else
 3886+ 3  0D09	C3		        clr     c
 3887+ 3			        endif
 3888+ 2			        endif
 3889+ 2  0D0A	25 60		        add      a,dir0
 3890+ 2			        ifnb    <084h>
 3891+ 2			        save_psw
 3892+ 3  0D0C	85 D0 70	        mov     saved_psw,PSW
 3893+ 2			        endif
 3894+ 2  0D0F	B4 14 6B	        cjne    a,#res,??0348
 3895+ 2			        ifnb    <084h>
 3896+ 2			        tst_psw <084h>,??0348
 3897+ 3  0D12	E5 70		        mov     a,saved_psw
 3898+ 3  0D14	54 C4		        anl     a,#0c4h
 3899+ 3  0D16	64 84		        xrl     a,#084h
 3900+ 3  0D18	54 FE		        anl     a,#0feh
 3901+ 3  0D1A	70 61		        jnz     ??0348
 3902+ 2			        endif
 3903+ 1  0D1C	78 60		        mov     r0,#dir0
 3904+ 1			        top_ma  add,@r0,??0348,<084h>
 3905+ 2  0D1E	76 81		        mov     @r0,#arg0
 3906+ 2  0D20	74 93		        mov     a,#arg1
 3907+ 2			        ifnb    <084h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 71



 Line  I  Addr  Code            Source

 3908+ 2			        set_cy  084h
 3909+ 3	N      0000	??0354  set     (084h and 1)
 3910+ 3	N      0000	        if      ??0354 eq 1
 3911+ 3			        setb    c
 3912+ 3			        else
 3913+ 3  0D22	C3		        clr     c
 3914+ 3			        endif
 3915+ 2			        endif
 3916+ 2  0D23	26		        add      a,@r0
 3917+ 2			        ifnb    <084h>
 3918+ 2			        save_psw
 3919+ 3  0D24	85 D0 70	        mov     saved_psw,PSW
 3920+ 2			        endif
 3921+ 2  0D27	B4 14 53	        cjne    a,#res,??0348
 3922+ 2			        ifnb    <084h>
 3923+ 2			        tst_psw <084h>,??0348
 3924+ 3  0D2A	E5 70		        mov     a,saved_psw
 3925+ 3  0D2C	54 C4		        anl     a,#0c4h
 3926+ 3  0D2E	64 84		        xrl     a,#084h
 3927+ 3  0D30	54 FE		        anl     a,#0feh
 3928+ 3  0D32	70 49		        jnz     ??0348
 3929+ 2			        endif
 3930+ 1  0D34	79 31		        mov     r1,#031h
 3931+ 1			        top_ma  add,@r1,??0348,<084h>
 3932+ 2  0D36	77 81		        mov     @r1,#arg0
 3933+ 2  0D38	74 93		        mov     a,#arg1
 3934+ 2			        ifnb    <084h>
 3935+ 2			        set_cy  084h
 3936+ 3	N      0000	??0355  set     (084h and 1)
 3937+ 3	N      0000	        if      ??0355 eq 1
 3938+ 3			        setb    c
 3939+ 3			        else
 3940+ 3  0D3A	C3		        clr     c
 3941+ 3			        endif
 3942+ 2			        endif
 3943+ 2  0D3B	27		        add      a,@r1
 3944+ 2			        ifnb    <084h>
 3945+ 2			        save_psw
 3946+ 3  0D3C	85 D0 70	        mov     saved_psw,PSW
 3947+ 2			        endif
 3948+ 2  0D3F	B4 14 3B	        cjne    a,#res,??0348
 3949+ 2			        ifnb    <084h>
 3950+ 2			        tst_psw <084h>,??0348
 3951+ 3  0D42	E5 70		        mov     a,saved_psw
 3952+ 3  0D44	54 C4		        anl     a,#0c4h
 3953+ 3  0D46	64 84		        xrl     a,#084h
 3954+ 3  0D48	54 FE		        anl     a,#0feh
 3955+ 3  0D4A	70 31		        jnz     ??0348
 3956+ 2			        endif
 3957+ 1
 3958+ 1			        top_ma  add,r0,??0348,<084h>
 3959+ 2  0D4C	78 81		        mov     r0,#arg0
 3960+ 2  0D4E	74 93		        mov     a,#arg1
 3961+ 2			        ifnb    <084h>
 3962+ 2			        set_cy  084h
 3963+ 3	N      0000	??0356  set     (084h and 1)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 72



 Line  I  Addr  Code            Source

 3964+ 3	N      0000	        if      ??0356 eq 1
 3965+ 3			        setb    c
 3966+ 3			        else
 3967+ 3  0D50	C3		        clr     c
 3968+ 3			        endif
 3969+ 2			        endif
 3970+ 2  0D51	28		        add      a,r0
 3971+ 2			        ifnb    <084h>
 3972+ 2			        save_psw
 3973+ 3  0D52	85 D0 70	        mov     saved_psw,PSW
 3974+ 2			        endif
 3975+ 2  0D55	B4 14 25	        cjne    a,#res,??0348
 3976+ 2			        ifnb    <084h>
 3977+ 2			        tst_psw <084h>,??0348
 3978+ 3  0D58	E5 70		        mov     a,saved_psw
 3979+ 3  0D5A	54 C4		        anl     a,#0c4h
 3980+ 3  0D5C	64 84		        xrl     a,#084h
 3981+ 3  0D5E	54 FE		        anl     a,#0feh
 3982+ 3  0D60	70 1B		        jnz     ??0348
 3983+ 2			        endif
 3984+ 1			        top_ma  add,r1,??0348,<084h>
 3985+ 2  0D62	79 81		        mov     r1,#arg0
 3986+ 2  0D64	74 93		        mov     a,#arg1
 3987+ 2			        ifnb    <084h>
 3988+ 2			        set_cy  084h
 3989+ 3	N      0000	??0357  set     (084h and 1)
 3990+ 3	N      0000	        if      ??0357 eq 1
 3991+ 3			        setb    c
 3992+ 3			        else
 3993+ 3  0D66	C3		        clr     c
 3994+ 3			        endif
 3995+ 2			        endif
 3996+ 2  0D67	29		        add      a,r1
 3997+ 2			        ifnb    <084h>
 3998+ 2			        save_psw
 3999+ 3  0D68	85 D0 70	        mov     saved_psw,PSW
 4000+ 2			        endif
 4001+ 2  0D6B	B4 14 0F	        cjne    a,#res,??0348
 4002+ 2			        ifnb    <084h>
 4003+ 2			        tst_psw <084h>,??0348
 4004+ 3  0D6E	E5 70		        mov     a,saved_psw
 4005+ 3  0D70	54 C4		        anl     a,#0c4h
 4006+ 3  0D72	64 84		        xrl     a,#084h
 4007+ 3  0D74	54 FE		        anl     a,#0feh
 4008+ 3  0D76	70 05		        jnz     ??0348
 4009+ 2			        endif
 4010+ 1
 4011+ 1			        eot     'a',??0348
 4012+ 2			        putc    #'a'
 4013+ 3  0D78			??0359:
 4014+ 3			        ;jnb     SCON.1,putc_loop
 4015+ 3			        ;clr     SCON.1
 4016+ 3  0D78	75 99 61	        mov     SBUF,#'a'
 4017+ 2  0D7B	80 06		        sjmp    ??0358
 4018+ 2  0D7D			??0348:  putc    #'?'
 4019+ 3  0D7D			??0360:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 73



 Line  I  Addr  Code            Source

 4020+ 3			        ;jnb     SCON.1,putc_loop
 4021+ 3			        ;clr     SCON.1
 4022+ 3  0D7D	75 99 3F	        mov     SBUF,#'?'
 4023+ 2  0D80	75 6E 01	        mov     fail,#001h
 4024+ 2  0D83			??0358:
 4025+ 1
 4026+ 1			        top_ma  add,r2,??0349,<084h>
 4027+ 2  0D83	7A 81		        mov     r2,#arg0
 4028+ 2  0D85	74 93		        mov     a,#arg1
 4029+ 2			        ifnb    <084h>
 4030+ 2			        set_cy  084h
 4031+ 3	N      0000	??0361  set     (084h and 1)
 4032+ 3	N      0000	        if      ??0361 eq 1
 4033+ 3			        setb    c
 4034+ 3			        else
 4035+ 3  0D87	C3		        clr     c
 4036+ 3			        endif
 4037+ 2			        endif
 4038+ 2  0D88	2A		        add      a,r2
 4039+ 2			        ifnb    <084h>
 4040+ 2			        save_psw
 4041+ 3  0D89	85 D0 70	        mov     saved_psw,PSW
 4042+ 2			        endif
 4043+ 2  0D8C	B4 14 25	        cjne    a,#res,??0349
 4044+ 2			        ifnb    <084h>
 4045+ 2			        tst_psw <084h>,??0349
 4046+ 3  0D8F	E5 70		        mov     a,saved_psw
 4047+ 3  0D91	54 C4		        anl     a,#0c4h
 4048+ 3  0D93	64 84		        xrl     a,#084h
 4049+ 3  0D95	54 FE		        anl     a,#0feh
 4050+ 3  0D97	70 1B		        jnz     ??0349
 4051+ 2			        endif
 4052+ 1			        top_ma  add,r3,??0349,<084h>
 4053+ 2  0D99	7B 81		        mov     r3,#arg0
 4054+ 2  0D9B	74 93		        mov     a,#arg1
 4055+ 2			        ifnb    <084h>
 4056+ 2			        set_cy  084h
 4057+ 3	N      0000	??0362  set     (084h and 1)
 4058+ 3	N      0000	        if      ??0362 eq 1
 4059+ 3			        setb    c
 4060+ 3			        else
 4061+ 3  0D9D	C3		        clr     c
 4062+ 3			        endif
 4063+ 2			        endif
 4064+ 2  0D9E	2B		        add      a,r3
 4065+ 2			        ifnb    <084h>
 4066+ 2			        save_psw
 4067+ 3  0D9F	85 D0 70	        mov     saved_psw,PSW
 4068+ 2			        endif
 4069+ 2  0DA2	B4 14 0F	        cjne    a,#res,??0349
 4070+ 2			        ifnb    <084h>
 4071+ 2			        tst_psw <084h>,??0349
 4072+ 3  0DA5	E5 70		        mov     a,saved_psw
 4073+ 3  0DA7	54 C4		        anl     a,#0c4h
 4074+ 3  0DA9	64 84		        xrl     a,#084h
 4075+ 3  0DAB	54 FE		        anl     a,#0feh

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 74



 Line  I  Addr  Code            Source

 4076+ 3  0DAD	70 05		        jnz     ??0349
 4077+ 2			        endif
 4078+ 1
 4079+ 1			        eot     'b',??0349
 4080+ 2			        putc    #'b'
 4081+ 3  0DAF			??0364:
 4082+ 3			        ;jnb     SCON.1,putc_loop
 4083+ 3			        ;clr     SCON.1
 4084+ 3  0DAF	75 99 62	        mov     SBUF,#'b'
 4085+ 2  0DB2	80 06		        sjmp    ??0363
 4086+ 2  0DB4			??0349:  putc    #'?'
 4087+ 3  0DB4			??0365:
 4088+ 3			        ;jnb     SCON.1,putc_loop
 4089+ 3			        ;clr     SCON.1
 4090+ 3  0DB4	75 99 3F	        mov     SBUF,#'?'
 4091+ 2  0DB7	75 6E 01	        mov     fail,#001h
 4092+ 2  0DBA			??0363:
 4093+ 1
 4094+ 1			        top_ma  add,r4,??0350,<084h>
 4095+ 2  0DBA	7C 81		        mov     r4,#arg0
 4096+ 2  0DBC	74 93		        mov     a,#arg1
 4097+ 2			        ifnb    <084h>
 4098+ 2			        set_cy  084h
 4099+ 3	N      0000	??0366  set     (084h and 1)
 4100+ 3	N      0000	        if      ??0366 eq 1
 4101+ 3			        setb    c
 4102+ 3			        else
 4103+ 3  0DBE	C3		        clr     c
 4104+ 3			        endif
 4105+ 2			        endif
 4106+ 2  0DBF	2C		        add      a,r4
 4107+ 2			        ifnb    <084h>
 4108+ 2			        save_psw
 4109+ 3  0DC0	85 D0 70	        mov     saved_psw,PSW
 4110+ 2			        endif
 4111+ 2  0DC3	B4 14 25	        cjne    a,#res,??0350
 4112+ 2			        ifnb    <084h>
 4113+ 2			        tst_psw <084h>,??0350
 4114+ 3  0DC6	E5 70		        mov     a,saved_psw
 4115+ 3  0DC8	54 C4		        anl     a,#0c4h
 4116+ 3  0DCA	64 84		        xrl     a,#084h
 4117+ 3  0DCC	54 FE		        anl     a,#0feh
 4118+ 3  0DCE	70 1B		        jnz     ??0350
 4119+ 2			        endif
 4120+ 1			        top_ma  add,r5,??0350,<084h>
 4121+ 2  0DD0	7D 81		        mov     r5,#arg0
 4122+ 2  0DD2	74 93		        mov     a,#arg1
 4123+ 2			        ifnb    <084h>
 4124+ 2			        set_cy  084h
 4125+ 3	N      0000	??0367  set     (084h and 1)
 4126+ 3	N      0000	        if      ??0367 eq 1
 4127+ 3			        setb    c
 4128+ 3			        else
 4129+ 3  0DD4	C3		        clr     c
 4130+ 3			        endif
 4131+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 75



 Line  I  Addr  Code            Source

 4132+ 2  0DD5	2D		        add      a,r5
 4133+ 2			        ifnb    <084h>
 4134+ 2			        save_psw
 4135+ 3  0DD6	85 D0 70	        mov     saved_psw,PSW
 4136+ 2			        endif
 4137+ 2  0DD9	B4 14 0F	        cjne    a,#res,??0350
 4138+ 2			        ifnb    <084h>
 4139+ 2			        tst_psw <084h>,??0350
 4140+ 3  0DDC	E5 70		        mov     a,saved_psw
 4141+ 3  0DDE	54 C4		        anl     a,#0c4h
 4142+ 3  0DE0	64 84		        xrl     a,#084h
 4143+ 3  0DE2	54 FE		        anl     a,#0feh
 4144+ 3  0DE4	70 05		        jnz     ??0350
 4145+ 2			        endif
 4146+ 1
 4147+ 1			        eot     'c',??0350
 4148+ 2			        putc    #'c'
 4149+ 3  0DE6			??0369:
 4150+ 3			        ;jnb     SCON.1,putc_loop
 4151+ 3			        ;clr     SCON.1
 4152+ 3  0DE6	75 99 63	        mov     SBUF,#'c'
 4153+ 2  0DE9	80 06		        sjmp    ??0368
 4154+ 2  0DEB			??0350:  putc    #'?'
 4155+ 3  0DEB			??0370:
 4156+ 3			        ;jnb     SCON.1,putc_loop
 4157+ 3			        ;clr     SCON.1
 4158+ 3  0DEB	75 99 3F	        mov     SBUF,#'?'
 4159+ 2  0DEE	75 6E 01	        mov     fail,#001h
 4160+ 2  0DF1			??0368:
 4161+ 1
 4162+ 1			        top_ma  add,r6,??0347,<084h>
 4163+ 2  0DF1	7E 81		        mov     r6,#arg0
 4164+ 2  0DF3	74 93		        mov     a,#arg1
 4165+ 2			        ifnb    <084h>
 4166+ 2			        set_cy  084h
 4167+ 3	N      0000	??0371  set     (084h and 1)
 4168+ 3	N      0000	        if      ??0371 eq 1
 4169+ 3			        setb    c
 4170+ 3			        else
 4171+ 3  0DF5	C3		        clr     c
 4172+ 3			        endif
 4173+ 2			        endif
 4174+ 2  0DF6	2E		        add      a,r6
 4175+ 2			        ifnb    <084h>
 4176+ 2			        save_psw
 4177+ 3  0DF7	85 D0 70	        mov     saved_psw,PSW
 4178+ 2			        endif
 4179+ 2  0DFA	B4 14 25	        cjne    a,#res,??0347
 4180+ 2			        ifnb    <084h>
 4181+ 2			        tst_psw <084h>,??0347
 4182+ 3  0DFD	E5 70		        mov     a,saved_psw
 4183+ 3  0DFF	54 C4		        anl     a,#0c4h
 4184+ 3  0E01	64 84		        xrl     a,#084h
 4185+ 3  0E03	54 FE		        anl     a,#0feh
 4186+ 3  0E05	70 1B		        jnz     ??0347
 4187+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 76



 Line  I  Addr  Code            Source

 4188+ 1			        top_ma  add,r7,??0347,<084h>
 4189+ 2  0E07	7F 81		        mov     r7,#arg0
 4190+ 2  0E09	74 93		        mov     a,#arg1
 4191+ 2			        ifnb    <084h>
 4192+ 2			        set_cy  084h
 4193+ 3	N      0000	??0372  set     (084h and 1)
 4194+ 3	N      0000	        if      ??0372 eq 1
 4195+ 3			        setb    c
 4196+ 3			        else
 4197+ 3  0E0B	C3		        clr     c
 4198+ 3			        endif
 4199+ 2			        endif
 4200+ 2  0E0C	2F		        add      a,r7
 4201+ 2			        ifnb    <084h>
 4202+ 2			        save_psw
 4203+ 3  0E0D	85 D0 70	        mov     saved_psw,PSW
 4204+ 2			        endif
 4205+ 2  0E10	B4 14 0F	        cjne    a,#res,??0347
 4206+ 2			        ifnb    <084h>
 4207+ 2			        tst_psw <084h>,??0347
 4208+ 3  0E13	E5 70		        mov     a,saved_psw
 4209+ 3  0E15	54 C4		        anl     a,#0c4h
 4210+ 3  0E17	64 84		        xrl     a,#084h
 4211+ 3  0E19	54 FE		        anl     a,#0feh
 4212+ 3  0E1B	70 05		        jnz     ??0347
 4213+ 2			        endif
 4214+ 1
 4215+ 1			        eot     'd',??0347
 4216+ 2			        putc    #'d'
 4217+ 3  0E1D			??0374:
 4218+ 3			        ;jnb     SCON.1,putc_loop
 4219+ 3			        ;clr     SCON.1
 4220+ 3  0E1D	75 99 64	        mov     SBUF,#'d'
 4221+ 2  0E20	80 06		        sjmp    ??0373
 4222+ 2  0E22			??0347:  putc    #'?'
 4223+ 3  0E22			??0375:
 4224+ 3			        ;jnb     SCON.1,putc_loop
 4225+ 3			        ;clr     SCON.1
 4226+ 3  0E22	75 99 3F	        mov     SBUF,#'?'
 4227+ 2  0E25	75 6E 01	        mov     fail,#001h
 4228+ 2  0E28			??0373:
 4229+ 1
 4230+ 1			        ifb     <084h>
 4231+ 1
 4232+ 1			        top_mb  add,a,??0351,<084h>
 4233+ 1			        top_mb  add,dir0,??0351,<084h>
 4234+ 1
 4235+ 1			        eot     'e',??0351
 4236+ 1
 4237+ 1			        top_mc  add,??0352,<084h>
 4238+ 1
 4239+ 1			        eot     'f',??0352
 4240+ 1			        endif
 4241:				        putc    #'2'
 4242+ 1  0E28			??0376:
 4243+ 1			        ;jnb     SCON.1,putc_loop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 77



 Line  I  Addr  Code            Source

 4244+ 1			        ;clr     SCON.1
 4245+ 1  0E28	75 99 32	        mov     SBUF,#'2'
 4246:				        tst_alu add,088h,098h,020h,0c4h     ;  CY  AC  OV
 4247+ 1
 4248+ 1	N      0088	        arg0    set 088h
 4249+ 1	N      0098	        arg1    set 098h
 4250+ 1	N      0020	        res     set 020h
 4251+ 1
 4252+ 1			        top_ma  add,dir0,??0378,<0c4h>
 4253+ 2  0E2B	75 60 88	        mov     dir0,#arg0
 4254+ 2  0E2E	74 98		        mov     a,#arg1
 4255+ 2			        ifnb    <0c4h>
 4256+ 2			        set_cy  0c4h
 4257+ 3	N      0000	??0383  set     (0c4h and 1)
 4258+ 3	N      0000	        if      ??0383 eq 1
 4259+ 3			        setb    c
 4260+ 3			        else
 4261+ 3  0E30	C3		        clr     c
 4262+ 3			        endif
 4263+ 2			        endif
 4264+ 2  0E31	25 60		        add      a,dir0
 4265+ 2			        ifnb    <0c4h>
 4266+ 2			        save_psw
 4267+ 3  0E33	85 D0 70	        mov     saved_psw,PSW
 4268+ 2			        endif
 4269+ 2  0E36	B4 20 6B	        cjne    a,#res,??0378
 4270+ 2			        ifnb    <0c4h>
 4271+ 2			        tst_psw <0c4h>,??0378
 4272+ 3  0E39	E5 70		        mov     a,saved_psw
 4273+ 3  0E3B	54 C4		        anl     a,#0c4h
 4274+ 3  0E3D	64 C4		        xrl     a,#0c4h
 4275+ 3  0E3F	54 FE		        anl     a,#0feh
 4276+ 3  0E41	70 61		        jnz     ??0378
 4277+ 2			        endif
 4278+ 1  0E43	78 60		        mov     r0,#dir0
 4279+ 1			        top_ma  add,@r0,??0378,<0c4h>
 4280+ 2  0E45	76 88		        mov     @r0,#arg0
 4281+ 2  0E47	74 98		        mov     a,#arg1
 4282+ 2			        ifnb    <0c4h>
 4283+ 2			        set_cy  0c4h
 4284+ 3	N      0000	??0384  set     (0c4h and 1)
 4285+ 3	N      0000	        if      ??0384 eq 1
 4286+ 3			        setb    c
 4287+ 3			        else
 4288+ 3  0E49	C3		        clr     c
 4289+ 3			        endif
 4290+ 2			        endif
 4291+ 2  0E4A	26		        add      a,@r0
 4292+ 2			        ifnb    <0c4h>
 4293+ 2			        save_psw
 4294+ 3  0E4B	85 D0 70	        mov     saved_psw,PSW
 4295+ 2			        endif
 4296+ 2  0E4E	B4 20 53	        cjne    a,#res,??0378
 4297+ 2			        ifnb    <0c4h>
 4298+ 2			        tst_psw <0c4h>,??0378
 4299+ 3  0E51	E5 70		        mov     a,saved_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 78



 Line  I  Addr  Code            Source

 4300+ 3  0E53	54 C4		        anl     a,#0c4h
 4301+ 3  0E55	64 C4		        xrl     a,#0c4h
 4302+ 3  0E57	54 FE		        anl     a,#0feh
 4303+ 3  0E59	70 49		        jnz     ??0378
 4304+ 2			        endif
 4305+ 1  0E5B	79 31		        mov     r1,#031h
 4306+ 1			        top_ma  add,@r1,??0378,<0c4h>
 4307+ 2  0E5D	77 88		        mov     @r1,#arg0
 4308+ 2  0E5F	74 98		        mov     a,#arg1
 4309+ 2			        ifnb    <0c4h>
 4310+ 2			        set_cy  0c4h
 4311+ 3	N      0000	??0385  set     (0c4h and 1)
 4312+ 3	N      0000	        if      ??0385 eq 1
 4313+ 3			        setb    c
 4314+ 3			        else
 4315+ 3  0E61	C3		        clr     c
 4316+ 3			        endif
 4317+ 2			        endif
 4318+ 2  0E62	27		        add      a,@r1
 4319+ 2			        ifnb    <0c4h>
 4320+ 2			        save_psw
 4321+ 3  0E63	85 D0 70	        mov     saved_psw,PSW
 4322+ 2			        endif
 4323+ 2  0E66	B4 20 3B	        cjne    a,#res,??0378
 4324+ 2			        ifnb    <0c4h>
 4325+ 2			        tst_psw <0c4h>,??0378
 4326+ 3  0E69	E5 70		        mov     a,saved_psw
 4327+ 3  0E6B	54 C4		        anl     a,#0c4h
 4328+ 3  0E6D	64 C4		        xrl     a,#0c4h
 4329+ 3  0E6F	54 FE		        anl     a,#0feh
 4330+ 3  0E71	70 31		        jnz     ??0378
 4331+ 2			        endif
 4332+ 1
 4333+ 1			        top_ma  add,r0,??0378,<0c4h>
 4334+ 2  0E73	78 88		        mov     r0,#arg0
 4335+ 2  0E75	74 98		        mov     a,#arg1
 4336+ 2			        ifnb    <0c4h>
 4337+ 2			        set_cy  0c4h
 4338+ 3	N      0000	??0386  set     (0c4h and 1)
 4339+ 3	N      0000	        if      ??0386 eq 1
 4340+ 3			        setb    c
 4341+ 3			        else
 4342+ 3  0E77	C3		        clr     c
 4343+ 3			        endif
 4344+ 2			        endif
 4345+ 2  0E78	28		        add      a,r0
 4346+ 2			        ifnb    <0c4h>
 4347+ 2			        save_psw
 4348+ 3  0E79	85 D0 70	        mov     saved_psw,PSW
 4349+ 2			        endif
 4350+ 2  0E7C	B4 20 25	        cjne    a,#res,??0378
 4351+ 2			        ifnb    <0c4h>
 4352+ 2			        tst_psw <0c4h>,??0378
 4353+ 3  0E7F	E5 70		        mov     a,saved_psw
 4354+ 3  0E81	54 C4		        anl     a,#0c4h
 4355+ 3  0E83	64 C4		        xrl     a,#0c4h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 79



 Line  I  Addr  Code            Source

 4356+ 3  0E85	54 FE		        anl     a,#0feh
 4357+ 3  0E87	70 1B		        jnz     ??0378
 4358+ 2			        endif
 4359+ 1			        top_ma  add,r1,??0378,<0c4h>
 4360+ 2  0E89	79 88		        mov     r1,#arg0
 4361+ 2  0E8B	74 98		        mov     a,#arg1
 4362+ 2			        ifnb    <0c4h>
 4363+ 2			        set_cy  0c4h
 4364+ 3	N      0000	??0387  set     (0c4h and 1)
 4365+ 3	N      0000	        if      ??0387 eq 1
 4366+ 3			        setb    c
 4367+ 3			        else
 4368+ 3  0E8D	C3		        clr     c
 4369+ 3			        endif
 4370+ 2			        endif
 4371+ 2  0E8E	29		        add      a,r1
 4372+ 2			        ifnb    <0c4h>
 4373+ 2			        save_psw
 4374+ 3  0E8F	85 D0 70	        mov     saved_psw,PSW
 4375+ 2			        endif
 4376+ 2  0E92	B4 20 0F	        cjne    a,#res,??0378
 4377+ 2			        ifnb    <0c4h>
 4378+ 2			        tst_psw <0c4h>,??0378
 4379+ 3  0E95	E5 70		        mov     a,saved_psw
 4380+ 3  0E97	54 C4		        anl     a,#0c4h
 4381+ 3  0E99	64 C4		        xrl     a,#0c4h
 4382+ 3  0E9B	54 FE		        anl     a,#0feh
 4383+ 3  0E9D	70 05		        jnz     ??0378
 4384+ 2			        endif
 4385+ 1
 4386+ 1			        eot     'a',??0378
 4387+ 2			        putc    #'a'
 4388+ 3  0E9F			??0389:
 4389+ 3			        ;jnb     SCON.1,putc_loop
 4390+ 3			        ;clr     SCON.1
 4391+ 3  0E9F	75 99 61	        mov     SBUF,#'a'
 4392+ 2  0EA2	80 06		        sjmp    ??0388
 4393+ 2  0EA4			??0378:  putc    #'?'
 4394+ 3  0EA4			??0390:
 4395+ 3			        ;jnb     SCON.1,putc_loop
 4396+ 3			        ;clr     SCON.1
 4397+ 3  0EA4	75 99 3F	        mov     SBUF,#'?'
 4398+ 2  0EA7	75 6E 01	        mov     fail,#001h
 4399+ 2  0EAA			??0388:
 4400+ 1
 4401+ 1			        top_ma  add,r2,??0379,<0c4h>
 4402+ 2  0EAA	7A 88		        mov     r2,#arg0
 4403+ 2  0EAC	74 98		        mov     a,#arg1
 4404+ 2			        ifnb    <0c4h>
 4405+ 2			        set_cy  0c4h
 4406+ 3	N      0000	??0391  set     (0c4h and 1)
 4407+ 3	N      0000	        if      ??0391 eq 1
 4408+ 3			        setb    c
 4409+ 3			        else
 4410+ 3  0EAE	C3		        clr     c
 4411+ 3			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 80



 Line  I  Addr  Code            Source

 4412+ 2			        endif
 4413+ 2  0EAF	2A		        add      a,r2
 4414+ 2			        ifnb    <0c4h>
 4415+ 2			        save_psw
 4416+ 3  0EB0	85 D0 70	        mov     saved_psw,PSW
 4417+ 2			        endif
 4418+ 2  0EB3	B4 20 25	        cjne    a,#res,??0379
 4419+ 2			        ifnb    <0c4h>
 4420+ 2			        tst_psw <0c4h>,??0379
 4421+ 3  0EB6	E5 70		        mov     a,saved_psw
 4422+ 3  0EB8	54 C4		        anl     a,#0c4h
 4423+ 3  0EBA	64 C4		        xrl     a,#0c4h
 4424+ 3  0EBC	54 FE		        anl     a,#0feh
 4425+ 3  0EBE	70 1B		        jnz     ??0379
 4426+ 2			        endif
 4427+ 1			        top_ma  add,r3,??0379,<0c4h>
 4428+ 2  0EC0	7B 88		        mov     r3,#arg0
 4429+ 2  0EC2	74 98		        mov     a,#arg1
 4430+ 2			        ifnb    <0c4h>
 4431+ 2			        set_cy  0c4h
 4432+ 3	N      0000	??0392  set     (0c4h and 1)
 4433+ 3	N      0000	        if      ??0392 eq 1
 4434+ 3			        setb    c
 4435+ 3			        else
 4436+ 3  0EC4	C3		        clr     c
 4437+ 3			        endif
 4438+ 2			        endif
 4439+ 2  0EC5	2B		        add      a,r3
 4440+ 2			        ifnb    <0c4h>
 4441+ 2			        save_psw
 4442+ 3  0EC6	85 D0 70	        mov     saved_psw,PSW
 4443+ 2			        endif
 4444+ 2  0EC9	B4 20 0F	        cjne    a,#res,??0379
 4445+ 2			        ifnb    <0c4h>
 4446+ 2			        tst_psw <0c4h>,??0379
 4447+ 3  0ECC	E5 70		        mov     a,saved_psw
 4448+ 3  0ECE	54 C4		        anl     a,#0c4h
 4449+ 3  0ED0	64 C4		        xrl     a,#0c4h
 4450+ 3  0ED2	54 FE		        anl     a,#0feh
 4451+ 3  0ED4	70 05		        jnz     ??0379
 4452+ 2			        endif
 4453+ 1
 4454+ 1			        eot     'b',??0379
 4455+ 2			        putc    #'b'
 4456+ 3  0ED6			??0394:
 4457+ 3			        ;jnb     SCON.1,putc_loop
 4458+ 3			        ;clr     SCON.1
 4459+ 3  0ED6	75 99 62	        mov     SBUF,#'b'
 4460+ 2  0ED9	80 06		        sjmp    ??0393
 4461+ 2  0EDB			??0379:  putc    #'?'
 4462+ 3  0EDB			??0395:
 4463+ 3			        ;jnb     SCON.1,putc_loop
 4464+ 3			        ;clr     SCON.1
 4465+ 3  0EDB	75 99 3F	        mov     SBUF,#'?'
 4466+ 2  0EDE	75 6E 01	        mov     fail,#001h
 4467+ 2  0EE1			??0393:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 81



 Line  I  Addr  Code            Source

 4468+ 1
 4469+ 1			        top_ma  add,r4,??0380,<0c4h>
 4470+ 2  0EE1	7C 88		        mov     r4,#arg0
 4471+ 2  0EE3	74 98		        mov     a,#arg1
 4472+ 2			        ifnb    <0c4h>
 4473+ 2			        set_cy  0c4h
 4474+ 3	N      0000	??0396  set     (0c4h and 1)
 4475+ 3	N      0000	        if      ??0396 eq 1
 4476+ 3			        setb    c
 4477+ 3			        else
 4478+ 3  0EE5	C3		        clr     c
 4479+ 3			        endif
 4480+ 2			        endif
 4481+ 2  0EE6	2C		        add      a,r4
 4482+ 2			        ifnb    <0c4h>
 4483+ 2			        save_psw
 4484+ 3  0EE7	85 D0 70	        mov     saved_psw,PSW
 4485+ 2			        endif
 4486+ 2  0EEA	B4 20 25	        cjne    a,#res,??0380
 4487+ 2			        ifnb    <0c4h>
 4488+ 2			        tst_psw <0c4h>,??0380
 4489+ 3  0EED	E5 70		        mov     a,saved_psw
 4490+ 3  0EEF	54 C4		        anl     a,#0c4h
 4491+ 3  0EF1	64 C4		        xrl     a,#0c4h
 4492+ 3  0EF3	54 FE		        anl     a,#0feh
 4493+ 3  0EF5	70 1B		        jnz     ??0380
 4494+ 2			        endif
 4495+ 1			        top_ma  add,r5,??0380,<0c4h>
 4496+ 2  0EF7	7D 88		        mov     r5,#arg0
 4497+ 2  0EF9	74 98		        mov     a,#arg1
 4498+ 2			        ifnb    <0c4h>
 4499+ 2			        set_cy  0c4h
 4500+ 3	N      0000	??0397  set     (0c4h and 1)
 4501+ 3	N      0000	        if      ??0397 eq 1
 4502+ 3			        setb    c
 4503+ 3			        else
 4504+ 3  0EFB	C3		        clr     c
 4505+ 3			        endif
 4506+ 2			        endif
 4507+ 2  0EFC	2D		        add      a,r5
 4508+ 2			        ifnb    <0c4h>
 4509+ 2			        save_psw
 4510+ 3  0EFD	85 D0 70	        mov     saved_psw,PSW
 4511+ 2			        endif
 4512+ 2  0F00	B4 20 0F	        cjne    a,#res,??0380
 4513+ 2			        ifnb    <0c4h>
 4514+ 2			        tst_psw <0c4h>,??0380
 4515+ 3  0F03	E5 70		        mov     a,saved_psw
 4516+ 3  0F05	54 C4		        anl     a,#0c4h
 4517+ 3  0F07	64 C4		        xrl     a,#0c4h
 4518+ 3  0F09	54 FE		        anl     a,#0feh
 4519+ 3  0F0B	70 05		        jnz     ??0380
 4520+ 2			        endif
 4521+ 1
 4522+ 1			        eot     'c',??0380
 4523+ 2			        putc    #'c'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 82



 Line  I  Addr  Code            Source

 4524+ 3  0F0D			??0399:
 4525+ 3			        ;jnb     SCON.1,putc_loop
 4526+ 3			        ;clr     SCON.1
 4527+ 3  0F0D	75 99 63	        mov     SBUF,#'c'
 4528+ 2  0F10	80 06		        sjmp    ??0398
 4529+ 2  0F12			??0380:  putc    #'?'
 4530+ 3  0F12			??0400:
 4531+ 3			        ;jnb     SCON.1,putc_loop
 4532+ 3			        ;clr     SCON.1
 4533+ 3  0F12	75 99 3F	        mov     SBUF,#'?'
 4534+ 2  0F15	75 6E 01	        mov     fail,#001h
 4535+ 2  0F18			??0398:
 4536+ 1
 4537+ 1			        top_ma  add,r6,??0377,<0c4h>
 4538+ 2  0F18	7E 88		        mov     r6,#arg0
 4539+ 2  0F1A	74 98		        mov     a,#arg1
 4540+ 2			        ifnb    <0c4h>
 4541+ 2			        set_cy  0c4h
 4542+ 3	N      0000	??0401  set     (0c4h and 1)
 4543+ 3	N      0000	        if      ??0401 eq 1
 4544+ 3			        setb    c
 4545+ 3			        else
 4546+ 3  0F1C	C3		        clr     c
 4547+ 3			        endif
 4548+ 2			        endif
 4549+ 2  0F1D	2E		        add      a,r6
 4550+ 2			        ifnb    <0c4h>
 4551+ 2			        save_psw
 4552+ 3  0F1E	85 D0 70	        mov     saved_psw,PSW
 4553+ 2			        endif
 4554+ 2  0F21	B4 20 25	        cjne    a,#res,??0377
 4555+ 2			        ifnb    <0c4h>
 4556+ 2			        tst_psw <0c4h>,??0377
 4557+ 3  0F24	E5 70		        mov     a,saved_psw
 4558+ 3  0F26	54 C4		        anl     a,#0c4h
 4559+ 3  0F28	64 C4		        xrl     a,#0c4h
 4560+ 3  0F2A	54 FE		        anl     a,#0feh
 4561+ 3  0F2C	70 1B		        jnz     ??0377
 4562+ 2			        endif
 4563+ 1			        top_ma  add,r7,??0377,<0c4h>
 4564+ 2  0F2E	7F 88		        mov     r7,#arg0
 4565+ 2  0F30	74 98		        mov     a,#arg1
 4566+ 2			        ifnb    <0c4h>
 4567+ 2			        set_cy  0c4h
 4568+ 3	N      0000	??0402  set     (0c4h and 1)
 4569+ 3	N      0000	        if      ??0402 eq 1
 4570+ 3			        setb    c
 4571+ 3			        else
 4572+ 3  0F32	C3		        clr     c
 4573+ 3			        endif
 4574+ 2			        endif
 4575+ 2  0F33	2F		        add      a,r7
 4576+ 2			        ifnb    <0c4h>
 4577+ 2			        save_psw
 4578+ 3  0F34	85 D0 70	        mov     saved_psw,PSW
 4579+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 83



 Line  I  Addr  Code            Source

 4580+ 2  0F37	B4 20 0F	        cjne    a,#res,??0377
 4581+ 2			        ifnb    <0c4h>
 4582+ 2			        tst_psw <0c4h>,??0377
 4583+ 3  0F3A	E5 70		        mov     a,saved_psw
 4584+ 3  0F3C	54 C4		        anl     a,#0c4h
 4585+ 3  0F3E	64 C4		        xrl     a,#0c4h
 4586+ 3  0F40	54 FE		        anl     a,#0feh
 4587+ 3  0F42	70 05		        jnz     ??0377
 4588+ 2			        endif
 4589+ 1
 4590+ 1			        eot     'd',??0377
 4591+ 2			        putc    #'d'
 4592+ 3  0F44			??0404:
 4593+ 3			        ;jnb     SCON.1,putc_loop
 4594+ 3			        ;clr     SCON.1
 4595+ 3  0F44	75 99 64	        mov     SBUF,#'d'
 4596+ 2  0F47	80 06		        sjmp    ??0403
 4597+ 2  0F49			??0377:  putc    #'?'
 4598+ 3  0F49			??0405:
 4599+ 3			        ;jnb     SCON.1,putc_loop
 4600+ 3			        ;clr     SCON.1
 4601+ 3  0F49	75 99 3F	        mov     SBUF,#'?'
 4602+ 2  0F4C	75 6E 01	        mov     fail,#001h
 4603+ 2  0F4F			??0403:
 4604+ 1
 4605+ 1			        ifb     <0c4h>
 4606+ 1
 4607+ 1			        top_mb  add,a,??0381,<0c4h>
 4608+ 1			        top_mb  add,dir0,??0381,<0c4h>
 4609+ 1
 4610+ 1			        eot     'e',??0381
 4611+ 1
 4612+ 1			        top_mc  add,??0382,<0c4h>
 4613+ 1
 4614+ 1			        eot     'f',??0382
 4615+ 1			        endif
 4616:				        putc    #'3'
 4617+ 1  0F4F			??0406:
 4618+ 1			        ;jnb     SCON.1,putc_loop
 4619+ 1			        ;clr     SCON.1
 4620+ 1  0F4F	75 99 33	        mov     SBUF,#'3'
 4621:				        tst_alu add,043h,0fbh,03eh,080h     ;  CY /AC /OV
 4622+ 1
 4623+ 1	N      0043	        arg0    set 043h
 4624+ 1	N      00FB	        arg1    set 0fbh
 4625+ 1	N      003E	        res     set 03eh
 4626+ 1
 4627+ 1			        top_ma  add,dir0,??0408,<080h>
 4628+ 2  0F52	75 60 43	        mov     dir0,#arg0
 4629+ 2  0F55	74 FB		        mov     a,#arg1
 4630+ 2			        ifnb    <080h>
 4631+ 2			        set_cy  080h
 4632+ 3	N      0000	??0413  set     (080h and 1)
 4633+ 3	N      0000	        if      ??0413 eq 1
 4634+ 3			        setb    c
 4635+ 3			        else

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 84



 Line  I  Addr  Code            Source

 4636+ 3  0F57	C3		        clr     c
 4637+ 3			        endif
 4638+ 2			        endif
 4639+ 2  0F58	25 60		        add      a,dir0
 4640+ 2			        ifnb    <080h>
 4641+ 2			        save_psw
 4642+ 3  0F5A	85 D0 70	        mov     saved_psw,PSW
 4643+ 2			        endif
 4644+ 2  0F5D	B4 3E 6B	        cjne    a,#res,??0408
 4645+ 2			        ifnb    <080h>
 4646+ 2			        tst_psw <080h>,??0408
 4647+ 3  0F60	E5 70		        mov     a,saved_psw
 4648+ 3  0F62	54 C4		        anl     a,#0c4h
 4649+ 3  0F64	64 80		        xrl     a,#080h
 4650+ 3  0F66	54 FE		        anl     a,#0feh
 4651+ 3  0F68	70 61		        jnz     ??0408
 4652+ 2			        endif
 4653+ 1  0F6A	78 60		        mov     r0,#dir0
 4654+ 1			        top_ma  add,@r0,??0408,<080h>
 4655+ 2  0F6C	76 43		        mov     @r0,#arg0
 4656+ 2  0F6E	74 FB		        mov     a,#arg1
 4657+ 2			        ifnb    <080h>
 4658+ 2			        set_cy  080h
 4659+ 3	N      0000	??0414  set     (080h and 1)
 4660+ 3	N      0000	        if      ??0414 eq 1
 4661+ 3			        setb    c
 4662+ 3			        else
 4663+ 3  0F70	C3		        clr     c
 4664+ 3			        endif
 4665+ 2			        endif
 4666+ 2  0F71	26		        add      a,@r0
 4667+ 2			        ifnb    <080h>
 4668+ 2			        save_psw
 4669+ 3  0F72	85 D0 70	        mov     saved_psw,PSW
 4670+ 2			        endif
 4671+ 2  0F75	B4 3E 53	        cjne    a,#res,??0408
 4672+ 2			        ifnb    <080h>
 4673+ 2			        tst_psw <080h>,??0408
 4674+ 3  0F78	E5 70		        mov     a,saved_psw
 4675+ 3  0F7A	54 C4		        anl     a,#0c4h
 4676+ 3  0F7C	64 80		        xrl     a,#080h
 4677+ 3  0F7E	54 FE		        anl     a,#0feh
 4678+ 3  0F80	70 49		        jnz     ??0408
 4679+ 2			        endif
 4680+ 1  0F82	79 31		        mov     r1,#031h
 4681+ 1			        top_ma  add,@r1,??0408,<080h>
 4682+ 2  0F84	77 43		        mov     @r1,#arg0
 4683+ 2  0F86	74 FB		        mov     a,#arg1
 4684+ 2			        ifnb    <080h>
 4685+ 2			        set_cy  080h
 4686+ 3	N      0000	??0415  set     (080h and 1)
 4687+ 3	N      0000	        if      ??0415 eq 1
 4688+ 3			        setb    c
 4689+ 3			        else
 4690+ 3  0F88	C3		        clr     c
 4691+ 3			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 85



 Line  I  Addr  Code            Source

 4692+ 2			        endif
 4693+ 2  0F89	27		        add      a,@r1
 4694+ 2			        ifnb    <080h>
 4695+ 2			        save_psw
 4696+ 3  0F8A	85 D0 70	        mov     saved_psw,PSW
 4697+ 2			        endif
 4698+ 2  0F8D	B4 3E 3B	        cjne    a,#res,??0408
 4699+ 2			        ifnb    <080h>
 4700+ 2			        tst_psw <080h>,??0408
 4701+ 3  0F90	E5 70		        mov     a,saved_psw
 4702+ 3  0F92	54 C4		        anl     a,#0c4h
 4703+ 3  0F94	64 80		        xrl     a,#080h
 4704+ 3  0F96	54 FE		        anl     a,#0feh
 4705+ 3  0F98	70 31		        jnz     ??0408
 4706+ 2			        endif
 4707+ 1
 4708+ 1			        top_ma  add,r0,??0408,<080h>
 4709+ 2  0F9A	78 43		        mov     r0,#arg0
 4710+ 2  0F9C	74 FB		        mov     a,#arg1
 4711+ 2			        ifnb    <080h>
 4712+ 2			        set_cy  080h
 4713+ 3	N      0000	??0416  set     (080h and 1)
 4714+ 3	N      0000	        if      ??0416 eq 1
 4715+ 3			        setb    c
 4716+ 3			        else
 4717+ 3  0F9E	C3		        clr     c
 4718+ 3			        endif
 4719+ 2			        endif
 4720+ 2  0F9F	28		        add      a,r0
 4721+ 2			        ifnb    <080h>
 4722+ 2			        save_psw
 4723+ 3  0FA0	85 D0 70	        mov     saved_psw,PSW
 4724+ 2			        endif
 4725+ 2  0FA3	B4 3E 25	        cjne    a,#res,??0408
 4726+ 2			        ifnb    <080h>
 4727+ 2			        tst_psw <080h>,??0408
 4728+ 3  0FA6	E5 70		        mov     a,saved_psw
 4729+ 3  0FA8	54 C4		        anl     a,#0c4h
 4730+ 3  0FAA	64 80		        xrl     a,#080h
 4731+ 3  0FAC	54 FE		        anl     a,#0feh
 4732+ 3  0FAE	70 1B		        jnz     ??0408
 4733+ 2			        endif
 4734+ 1			        top_ma  add,r1,??0408,<080h>
 4735+ 2  0FB0	79 43		        mov     r1,#arg0
 4736+ 2  0FB2	74 FB		        mov     a,#arg1
 4737+ 2			        ifnb    <080h>
 4738+ 2			        set_cy  080h
 4739+ 3	N      0000	??0417  set     (080h and 1)
 4740+ 3	N      0000	        if      ??0417 eq 1
 4741+ 3			        setb    c
 4742+ 3			        else
 4743+ 3  0FB4	C3		        clr     c
 4744+ 3			        endif
 4745+ 2			        endif
 4746+ 2  0FB5	29		        add      a,r1
 4747+ 2			        ifnb    <080h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 86



 Line  I  Addr  Code            Source

 4748+ 2			        save_psw
 4749+ 3  0FB6	85 D0 70	        mov     saved_psw,PSW
 4750+ 2			        endif
 4751+ 2  0FB9	B4 3E 0F	        cjne    a,#res,??0408
 4752+ 2			        ifnb    <080h>
 4753+ 2			        tst_psw <080h>,??0408
 4754+ 3  0FBC	E5 70		        mov     a,saved_psw
 4755+ 3  0FBE	54 C4		        anl     a,#0c4h
 4756+ 3  0FC0	64 80		        xrl     a,#080h
 4757+ 3  0FC2	54 FE		        anl     a,#0feh
 4758+ 3  0FC4	70 05		        jnz     ??0408
 4759+ 2			        endif
 4760+ 1
 4761+ 1			        eot     'a',??0408
 4762+ 2			        putc    #'a'
 4763+ 3  0FC6			??0419:
 4764+ 3			        ;jnb     SCON.1,putc_loop
 4765+ 3			        ;clr     SCON.1
 4766+ 3  0FC6	75 99 61	        mov     SBUF,#'a'
 4767+ 2  0FC9	80 06		        sjmp    ??0418
 4768+ 2  0FCB			??0408:  putc    #'?'
 4769+ 3  0FCB			??0420:
 4770+ 3			        ;jnb     SCON.1,putc_loop
 4771+ 3			        ;clr     SCON.1
 4772+ 3  0FCB	75 99 3F	        mov     SBUF,#'?'
 4773+ 2  0FCE	75 6E 01	        mov     fail,#001h
 4774+ 2  0FD1			??0418:
 4775+ 1
 4776+ 1			        top_ma  add,r2,??0409,<080h>
 4777+ 2  0FD1	7A 43		        mov     r2,#arg0
 4778+ 2  0FD3	74 FB		        mov     a,#arg1
 4779+ 2			        ifnb    <080h>
 4780+ 2			        set_cy  080h
 4781+ 3	N      0000	??0421  set     (080h and 1)
 4782+ 3	N      0000	        if      ??0421 eq 1
 4783+ 3			        setb    c
 4784+ 3			        else
 4785+ 3  0FD5	C3		        clr     c
 4786+ 3			        endif
 4787+ 2			        endif
 4788+ 2  0FD6	2A		        add      a,r2
 4789+ 2			        ifnb    <080h>
 4790+ 2			        save_psw
 4791+ 3  0FD7	85 D0 70	        mov     saved_psw,PSW
 4792+ 2			        endif
 4793+ 2  0FDA	B4 3E 25	        cjne    a,#res,??0409
 4794+ 2			        ifnb    <080h>
 4795+ 2			        tst_psw <080h>,??0409
 4796+ 3  0FDD	E5 70		        mov     a,saved_psw
 4797+ 3  0FDF	54 C4		        anl     a,#0c4h
 4798+ 3  0FE1	64 80		        xrl     a,#080h
 4799+ 3  0FE3	54 FE		        anl     a,#0feh
 4800+ 3  0FE5	70 1B		        jnz     ??0409
 4801+ 2			        endif
 4802+ 1			        top_ma  add,r3,??0409,<080h>
 4803+ 2  0FE7	7B 43		        mov     r3,#arg0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 87



 Line  I  Addr  Code            Source

 4804+ 2  0FE9	74 FB		        mov     a,#arg1
 4805+ 2			        ifnb    <080h>
 4806+ 2			        set_cy  080h
 4807+ 3	N      0000	??0422  set     (080h and 1)
 4808+ 3	N      0000	        if      ??0422 eq 1
 4809+ 3			        setb    c
 4810+ 3			        else
 4811+ 3  0FEB	C3		        clr     c
 4812+ 3			        endif
 4813+ 2			        endif
 4814+ 2  0FEC	2B		        add      a,r3
 4815+ 2			        ifnb    <080h>
 4816+ 2			        save_psw
 4817+ 3  0FED	85 D0 70	        mov     saved_psw,PSW
 4818+ 2			        endif
 4819+ 2  0FF0	B4 3E 0F	        cjne    a,#res,??0409
 4820+ 2			        ifnb    <080h>
 4821+ 2			        tst_psw <080h>,??0409
 4822+ 3  0FF3	E5 70		        mov     a,saved_psw
 4823+ 3  0FF5	54 C4		        anl     a,#0c4h
 4824+ 3  0FF7	64 80		        xrl     a,#080h
 4825+ 3  0FF9	54 FE		        anl     a,#0feh
 4826+ 3  0FFB	70 05		        jnz     ??0409
 4827+ 2			        endif
 4828+ 1
 4829+ 1			        eot     'b',??0409
 4830+ 2			        putc    #'b'
 4831+ 3  0FFD			??0424:
 4832+ 3			        ;jnb     SCON.1,putc_loop
 4833+ 3			        ;clr     SCON.1
 4834+ 3  0FFD	75 99 62	        mov     SBUF,#'b'
 4835+ 2  1000	80 06		        sjmp    ??0423
 4836+ 2  1002			??0409:  putc    #'?'
 4837+ 3  1002			??0425:
 4838+ 3			        ;jnb     SCON.1,putc_loop
 4839+ 3			        ;clr     SCON.1
 4840+ 3  1002	75 99 3F	        mov     SBUF,#'?'
 4841+ 2  1005	75 6E 01	        mov     fail,#001h
 4842+ 2  1008			??0423:
 4843+ 1
 4844+ 1			        top_ma  add,r4,??0410,<080h>
 4845+ 2  1008	7C 43		        mov     r4,#arg0
 4846+ 2  100A	74 FB		        mov     a,#arg1
 4847+ 2			        ifnb    <080h>
 4848+ 2			        set_cy  080h
 4849+ 3	N      0000	??0426  set     (080h and 1)
 4850+ 3	N      0000	        if      ??0426 eq 1
 4851+ 3			        setb    c
 4852+ 3			        else
 4853+ 3  100C	C3		        clr     c
 4854+ 3			        endif
 4855+ 2			        endif
 4856+ 2  100D	2C		        add      a,r4
 4857+ 2			        ifnb    <080h>
 4858+ 2			        save_psw
 4859+ 3  100E	85 D0 70	        mov     saved_psw,PSW

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 88



 Line  I  Addr  Code            Source

 4860+ 2			        endif
 4861+ 2  1011	B4 3E 25	        cjne    a,#res,??0410
 4862+ 2			        ifnb    <080h>
 4863+ 2			        tst_psw <080h>,??0410
 4864+ 3  1014	E5 70		        mov     a,saved_psw
 4865+ 3  1016	54 C4		        anl     a,#0c4h
 4866+ 3  1018	64 80		        xrl     a,#080h
 4867+ 3  101A	54 FE		        anl     a,#0feh
 4868+ 3  101C	70 1B		        jnz     ??0410
 4869+ 2			        endif
 4870+ 1			        top_ma  add,r5,??0410,<080h>
 4871+ 2  101E	7D 43		        mov     r5,#arg0
 4872+ 2  1020	74 FB		        mov     a,#arg1
 4873+ 2			        ifnb    <080h>
 4874+ 2			        set_cy  080h
 4875+ 3	N      0000	??0427  set     (080h and 1)
 4876+ 3	N      0000	        if      ??0427 eq 1
 4877+ 3			        setb    c
 4878+ 3			        else
 4879+ 3  1022	C3		        clr     c
 4880+ 3			        endif
 4881+ 2			        endif
 4882+ 2  1023	2D		        add      a,r5
 4883+ 2			        ifnb    <080h>
 4884+ 2			        save_psw
 4885+ 3  1024	85 D0 70	        mov     saved_psw,PSW
 4886+ 2			        endif
 4887+ 2  1027	B4 3E 0F	        cjne    a,#res,??0410
 4888+ 2			        ifnb    <080h>
 4889+ 2			        tst_psw <080h>,??0410
 4890+ 3  102A	E5 70		        mov     a,saved_psw
 4891+ 3  102C	54 C4		        anl     a,#0c4h
 4892+ 3  102E	64 80		        xrl     a,#080h
 4893+ 3  1030	54 FE		        anl     a,#0feh
 4894+ 3  1032	70 05		        jnz     ??0410
 4895+ 2			        endif
 4896+ 1
 4897+ 1			        eot     'c',??0410
 4898+ 2			        putc    #'c'
 4899+ 3  1034			??0429:
 4900+ 3			        ;jnb     SCON.1,putc_loop
 4901+ 3			        ;clr     SCON.1
 4902+ 3  1034	75 99 63	        mov     SBUF,#'c'
 4903+ 2  1037	80 06		        sjmp    ??0428
 4904+ 2  1039			??0410:  putc    #'?'
 4905+ 3  1039			??0430:
 4906+ 3			        ;jnb     SCON.1,putc_loop
 4907+ 3			        ;clr     SCON.1
 4908+ 3  1039	75 99 3F	        mov     SBUF,#'?'
 4909+ 2  103C	75 6E 01	        mov     fail,#001h
 4910+ 2  103F			??0428:
 4911+ 1
 4912+ 1			        top_ma  add,r6,??0407,<080h>
 4913+ 2  103F	7E 43		        mov     r6,#arg0
 4914+ 2  1041	74 FB		        mov     a,#arg1
 4915+ 2			        ifnb    <080h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 89



 Line  I  Addr  Code            Source

 4916+ 2			        set_cy  080h
 4917+ 3	N      0000	??0431  set     (080h and 1)
 4918+ 3	N      0000	        if      ??0431 eq 1
 4919+ 3			        setb    c
 4920+ 3			        else
 4921+ 3  1043	C3		        clr     c
 4922+ 3			        endif
 4923+ 2			        endif
 4924+ 2  1044	2E		        add      a,r6
 4925+ 2			        ifnb    <080h>
 4926+ 2			        save_psw
 4927+ 3  1045	85 D0 70	        mov     saved_psw,PSW
 4928+ 2			        endif
 4929+ 2  1048	B4 3E 25	        cjne    a,#res,??0407
 4930+ 2			        ifnb    <080h>
 4931+ 2			        tst_psw <080h>,??0407
 4932+ 3  104B	E5 70		        mov     a,saved_psw
 4933+ 3  104D	54 C4		        anl     a,#0c4h
 4934+ 3  104F	64 80		        xrl     a,#080h
 4935+ 3  1051	54 FE		        anl     a,#0feh
 4936+ 3  1053	70 1B		        jnz     ??0407
 4937+ 2			        endif
 4938+ 1			        top_ma  add,r7,??0407,<080h>
 4939+ 2  1055	7F 43		        mov     r7,#arg0
 4940+ 2  1057	74 FB		        mov     a,#arg1
 4941+ 2			        ifnb    <080h>
 4942+ 2			        set_cy  080h
 4943+ 3	N      0000	??0432  set     (080h and 1)
 4944+ 3	N      0000	        if      ??0432 eq 1
 4945+ 3			        setb    c
 4946+ 3			        else
 4947+ 3  1059	C3		        clr     c
 4948+ 3			        endif
 4949+ 2			        endif
 4950+ 2  105A	2F		        add      a,r7
 4951+ 2			        ifnb    <080h>
 4952+ 2			        save_psw
 4953+ 3  105B	85 D0 70	        mov     saved_psw,PSW
 4954+ 2			        endif
 4955+ 2  105E	B4 3E 0F	        cjne    a,#res,??0407
 4956+ 2			        ifnb    <080h>
 4957+ 2			        tst_psw <080h>,??0407
 4958+ 3  1061	E5 70		        mov     a,saved_psw
 4959+ 3  1063	54 C4		        anl     a,#0c4h
 4960+ 3  1065	64 80		        xrl     a,#080h
 4961+ 3  1067	54 FE		        anl     a,#0feh
 4962+ 3  1069	70 05		        jnz     ??0407
 4963+ 2			        endif
 4964+ 1
 4965+ 1			        eot     'd',??0407
 4966+ 2			        putc    #'d'
 4967+ 3  106B			??0434:
 4968+ 3			        ;jnb     SCON.1,putc_loop
 4969+ 3			        ;clr     SCON.1
 4970+ 3  106B	75 99 64	        mov     SBUF,#'d'
 4971+ 2  106E	80 06		        sjmp    ??0433

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 90



 Line  I  Addr  Code            Source

 4972+ 2  1070			??0407:  putc    #'?'
 4973+ 3  1070			??0435:
 4974+ 3			        ;jnb     SCON.1,putc_loop
 4975+ 3			        ;clr     SCON.1
 4976+ 3  1070	75 99 3F	        mov     SBUF,#'?'
 4977+ 2  1073	75 6E 01	        mov     fail,#001h
 4978+ 2  1076			??0433:
 4979+ 1
 4980+ 1			        ifb     <080h>
 4981+ 1
 4982+ 1			        top_mb  add,a,??0411,<080h>
 4983+ 1			        top_mb  add,dir0,??0411,<080h>
 4984+ 1
 4985+ 1			        eot     'e',??0411
 4986+ 1
 4987+ 1			        top_mc  add,??0412,<080h>
 4988+ 1
 4989+ 1			        eot     'f',??0412
 4990+ 1			        endif
 4991:
 4992:				        put_crlf                    ; end of test series
 4993+ 1			        putc    #13
 4994+ 2  1076			??0436:
 4995+ 2			        ;jnb     SCON.1,putc_loop
 4996+ 2			        ;clr     SCON.1
 4997+ 2  1076	75 99 0D	        mov     SBUF,#13
 4998+ 1			        putc    #10
 4999+ 2  1079			??0437:
 5000+ 2			        ;jnb     SCON.1,putc_loop
 5001+ 2			        ;clr     SCON.1
 5002+ 2  1079	75 99 0A	        mov     SBUF,#10
 5003:
 5004:
 5005:				        ;-- Test series M ------------------------------------------------------
 5006:				        ; ADDC
 5007:				        ; (See comments for 'ALU opcode block test')
 5008:				        ; Note the test runs 4 times for different values of operands
 5009:
 5010:				        putc    #'M'                ; start of test series
 5011+ 1  107C			??0438:
 5012+ 1			        ;jnb     SCON.1,putc_loop
 5013+ 1			        ;clr     SCON.1
 5014+ 1  107C	75 99 4D	        mov     SBUF,#'M'
 5015:
 5016:				        putc    #'0'
 5017+ 1  107F			??0439:
 5018+ 1			        ;jnb     SCON.1,putc_loop
 5019+ 1			        ;clr     SCON.1
 5020+ 1  107F	75 99 30	        mov     SBUF,#'0'
 5021:				        tst_alu addc,051h,033h,084h,004h     ; /CY /AC  OV
 5022+ 1
 5023+ 1	N      0051	        arg0    set 051h
 5024+ 1	N      0033	        arg1    set 033h
 5025+ 1	N      0084	        res     set 084h
 5026+ 1
 5027+ 1			        top_ma  addc,dir0,??0441,<004h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 91



 Line  I  Addr  Code            Source

 5028+ 2  1082	75 60 51	        mov     dir0,#arg0
 5029+ 2  1085	74 33		        mov     a,#arg1
 5030+ 2			        ifnb    <004h>
 5031+ 2			        set_cy  004h
 5032+ 3	N      0000	??0446  set     (004h and 1)
 5033+ 3	N      0000	        if      ??0446 eq 1
 5034+ 3			        setb    c
 5035+ 3			        else
 5036+ 3  1087	C3		        clr     c
 5037+ 3			        endif
 5038+ 2			        endif
 5039+ 2  1088	35 60		        addc      a,dir0
 5040+ 2			        ifnb    <004h>
 5041+ 2			        save_psw
 5042+ 3  108A	85 D0 70	        mov     saved_psw,PSW
 5043+ 2			        endif
 5044+ 2  108D	B4 84 6B	        cjne    a,#res,??0441
 5045+ 2			        ifnb    <004h>
 5046+ 2			        tst_psw <004h>,??0441
 5047+ 3  1090	E5 70		        mov     a,saved_psw
 5048+ 3  1092	54 C4		        anl     a,#0c4h
 5049+ 3  1094	64 04		        xrl     a,#004h
 5050+ 3  1096	54 FE		        anl     a,#0feh
 5051+ 3  1098	70 61		        jnz     ??0441
 5052+ 2			        endif
 5053+ 1  109A	78 60		        mov     r0,#dir0
 5054+ 1			        top_ma  addc,@r0,??0441,<004h>
 5055+ 2  109C	76 51		        mov     @r0,#arg0
 5056+ 2  109E	74 33		        mov     a,#arg1
 5057+ 2			        ifnb    <004h>
 5058+ 2			        set_cy  004h
 5059+ 3	N      0000	??0447  set     (004h and 1)
 5060+ 3	N      0000	        if      ??0447 eq 1
 5061+ 3			        setb    c
 5062+ 3			        else
 5063+ 3  10A0	C3		        clr     c
 5064+ 3			        endif
 5065+ 2			        endif
 5066+ 2  10A1	36		        addc      a,@r0
 5067+ 2			        ifnb    <004h>
 5068+ 2			        save_psw
 5069+ 3  10A2	85 D0 70	        mov     saved_psw,PSW
 5070+ 2			        endif
 5071+ 2  10A5	B4 84 53	        cjne    a,#res,??0441
 5072+ 2			        ifnb    <004h>
 5073+ 2			        tst_psw <004h>,??0441
 5074+ 3  10A8	E5 70		        mov     a,saved_psw
 5075+ 3  10AA	54 C4		        anl     a,#0c4h
 5076+ 3  10AC	64 04		        xrl     a,#004h
 5077+ 3  10AE	54 FE		        anl     a,#0feh
 5078+ 3  10B0	70 49		        jnz     ??0441
 5079+ 2			        endif
 5080+ 1  10B2	79 31		        mov     r1,#031h
 5081+ 1			        top_ma  addc,@r1,??0441,<004h>
 5082+ 2  10B4	77 51		        mov     @r1,#arg0
 5083+ 2  10B6	74 33		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 92



 Line  I  Addr  Code            Source

 5084+ 2			        ifnb    <004h>
 5085+ 2			        set_cy  004h
 5086+ 3	N      0000	??0448  set     (004h and 1)
 5087+ 3	N      0000	        if      ??0448 eq 1
 5088+ 3			        setb    c
 5089+ 3			        else
 5090+ 3  10B8	C3		        clr     c
 5091+ 3			        endif
 5092+ 2			        endif
 5093+ 2  10B9	37		        addc      a,@r1
 5094+ 2			        ifnb    <004h>
 5095+ 2			        save_psw
 5096+ 3  10BA	85 D0 70	        mov     saved_psw,PSW
 5097+ 2			        endif
 5098+ 2  10BD	B4 84 3B	        cjne    a,#res,??0441
 5099+ 2			        ifnb    <004h>
 5100+ 2			        tst_psw <004h>,??0441
 5101+ 3  10C0	E5 70		        mov     a,saved_psw
 5102+ 3  10C2	54 C4		        anl     a,#0c4h
 5103+ 3  10C4	64 04		        xrl     a,#004h
 5104+ 3  10C6	54 FE		        anl     a,#0feh
 5105+ 3  10C8	70 31		        jnz     ??0441
 5106+ 2			        endif
 5107+ 1
 5108+ 1			        top_ma  addc,r0,??0441,<004h>
 5109+ 2  10CA	78 51		        mov     r0,#arg0
 5110+ 2  10CC	74 33		        mov     a,#arg1
 5111+ 2			        ifnb    <004h>
 5112+ 2			        set_cy  004h
 5113+ 3	N      0000	??0449  set     (004h and 1)
 5114+ 3	N      0000	        if      ??0449 eq 1
 5115+ 3			        setb    c
 5116+ 3			        else
 5117+ 3  10CE	C3		        clr     c
 5118+ 3			        endif
 5119+ 2			        endif
 5120+ 2  10CF	38		        addc      a,r0
 5121+ 2			        ifnb    <004h>
 5122+ 2			        save_psw
 5123+ 3  10D0	85 D0 70	        mov     saved_psw,PSW
 5124+ 2			        endif
 5125+ 2  10D3	B4 84 25	        cjne    a,#res,??0441
 5126+ 2			        ifnb    <004h>
 5127+ 2			        tst_psw <004h>,??0441
 5128+ 3  10D6	E5 70		        mov     a,saved_psw
 5129+ 3  10D8	54 C4		        anl     a,#0c4h
 5130+ 3  10DA	64 04		        xrl     a,#004h
 5131+ 3  10DC	54 FE		        anl     a,#0feh
 5132+ 3  10DE	70 1B		        jnz     ??0441
 5133+ 2			        endif
 5134+ 1			        top_ma  addc,r1,??0441,<004h>
 5135+ 2  10E0	79 51		        mov     r1,#arg0
 5136+ 2  10E2	74 33		        mov     a,#arg1
 5137+ 2			        ifnb    <004h>
 5138+ 2			        set_cy  004h
 5139+ 3	N      0000	??0450  set     (004h and 1)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 93



 Line  I  Addr  Code            Source

 5140+ 3	N      0000	        if      ??0450 eq 1
 5141+ 3			        setb    c
 5142+ 3			        else
 5143+ 3  10E4	C3		        clr     c
 5144+ 3			        endif
 5145+ 2			        endif
 5146+ 2  10E5	39		        addc      a,r1
 5147+ 2			        ifnb    <004h>
 5148+ 2			        save_psw
 5149+ 3  10E6	85 D0 70	        mov     saved_psw,PSW
 5150+ 2			        endif
 5151+ 2  10E9	B4 84 0F	        cjne    a,#res,??0441
 5152+ 2			        ifnb    <004h>
 5153+ 2			        tst_psw <004h>,??0441
 5154+ 3  10EC	E5 70		        mov     a,saved_psw
 5155+ 3  10EE	54 C4		        anl     a,#0c4h
 5156+ 3  10F0	64 04		        xrl     a,#004h
 5157+ 3  10F2	54 FE		        anl     a,#0feh
 5158+ 3  10F4	70 05		        jnz     ??0441
 5159+ 2			        endif
 5160+ 1
 5161+ 1			        eot     'a',??0441
 5162+ 2			        putc    #'a'
 5163+ 3  10F6			??0452:
 5164+ 3			        ;jnb     SCON.1,putc_loop
 5165+ 3			        ;clr     SCON.1
 5166+ 3  10F6	75 99 61	        mov     SBUF,#'a'
 5167+ 2  10F9	80 06		        sjmp    ??0451
 5168+ 2  10FB			??0441:  putc    #'?'
 5169+ 3  10FB			??0453:
 5170+ 3			        ;jnb     SCON.1,putc_loop
 5171+ 3			        ;clr     SCON.1
 5172+ 3  10FB	75 99 3F	        mov     SBUF,#'?'
 5173+ 2  10FE	75 6E 01	        mov     fail,#001h
 5174+ 2  1101			??0451:
 5175+ 1
 5176+ 1			        top_ma  addc,r2,??0442,<004h>
 5177+ 2  1101	7A 51		        mov     r2,#arg0
 5178+ 2  1103	74 33		        mov     a,#arg1
 5179+ 2			        ifnb    <004h>
 5180+ 2			        set_cy  004h
 5181+ 3	N      0000	??0454  set     (004h and 1)
 5182+ 3	N      0000	        if      ??0454 eq 1
 5183+ 3			        setb    c
 5184+ 3			        else
 5185+ 3  1105	C3		        clr     c
 5186+ 3			        endif
 5187+ 2			        endif
 5188+ 2  1106	3A		        addc      a,r2
 5189+ 2			        ifnb    <004h>
 5190+ 2			        save_psw
 5191+ 3  1107	85 D0 70	        mov     saved_psw,PSW
 5192+ 2			        endif
 5193+ 2  110A	B4 84 25	        cjne    a,#res,??0442
 5194+ 2			        ifnb    <004h>
 5195+ 2			        tst_psw <004h>,??0442

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 94



 Line  I  Addr  Code            Source

 5196+ 3  110D	E5 70		        mov     a,saved_psw
 5197+ 3  110F	54 C4		        anl     a,#0c4h
 5198+ 3  1111	64 04		        xrl     a,#004h
 5199+ 3  1113	54 FE		        anl     a,#0feh
 5200+ 3  1115	70 1B		        jnz     ??0442
 5201+ 2			        endif
 5202+ 1			        top_ma  addc,r3,??0442,<004h>
 5203+ 2  1117	7B 51		        mov     r3,#arg0
 5204+ 2  1119	74 33		        mov     a,#arg1
 5205+ 2			        ifnb    <004h>
 5206+ 2			        set_cy  004h
 5207+ 3	N      0000	??0455  set     (004h and 1)
 5208+ 3	N      0000	        if      ??0455 eq 1
 5209+ 3			        setb    c
 5210+ 3			        else
 5211+ 3  111B	C3		        clr     c
 5212+ 3			        endif
 5213+ 2			        endif
 5214+ 2  111C	3B		        addc      a,r3
 5215+ 2			        ifnb    <004h>
 5216+ 2			        save_psw
 5217+ 3  111D	85 D0 70	        mov     saved_psw,PSW
 5218+ 2			        endif
 5219+ 2  1120	B4 84 0F	        cjne    a,#res,??0442
 5220+ 2			        ifnb    <004h>
 5221+ 2			        tst_psw <004h>,??0442
 5222+ 3  1123	E5 70		        mov     a,saved_psw
 5223+ 3  1125	54 C4		        anl     a,#0c4h
 5224+ 3  1127	64 04		        xrl     a,#004h
 5225+ 3  1129	54 FE		        anl     a,#0feh
 5226+ 3  112B	70 05		        jnz     ??0442
 5227+ 2			        endif
 5228+ 1
 5229+ 1			        eot     'b',??0442
 5230+ 2			        putc    #'b'
 5231+ 3  112D			??0457:
 5232+ 3			        ;jnb     SCON.1,putc_loop
 5233+ 3			        ;clr     SCON.1
 5234+ 3  112D	75 99 62	        mov     SBUF,#'b'
 5235+ 2  1130	80 06		        sjmp    ??0456
 5236+ 2  1132			??0442:  putc    #'?'
 5237+ 3  1132			??0458:
 5238+ 3			        ;jnb     SCON.1,putc_loop
 5239+ 3			        ;clr     SCON.1
 5240+ 3  1132	75 99 3F	        mov     SBUF,#'?'
 5241+ 2  1135	75 6E 01	        mov     fail,#001h
 5242+ 2  1138			??0456:
 5243+ 1
 5244+ 1			        top_ma  addc,r4,??0443,<004h>
 5245+ 2  1138	7C 51		        mov     r4,#arg0
 5246+ 2  113A	74 33		        mov     a,#arg1
 5247+ 2			        ifnb    <004h>
 5248+ 2			        set_cy  004h
 5249+ 3	N      0000	??0459  set     (004h and 1)
 5250+ 3	N      0000	        if      ??0459 eq 1
 5251+ 3			        setb    c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 95



 Line  I  Addr  Code            Source

 5252+ 3			        else
 5253+ 3  113C	C3		        clr     c
 5254+ 3			        endif
 5255+ 2			        endif
 5256+ 2  113D	3C		        addc      a,r4
 5257+ 2			        ifnb    <004h>
 5258+ 2			        save_psw
 5259+ 3  113E	85 D0 70	        mov     saved_psw,PSW
 5260+ 2			        endif
 5261+ 2  1141	B4 84 25	        cjne    a,#res,??0443
 5262+ 2			        ifnb    <004h>
 5263+ 2			        tst_psw <004h>,??0443
 5264+ 3  1144	E5 70		        mov     a,saved_psw
 5265+ 3  1146	54 C4		        anl     a,#0c4h
 5266+ 3  1148	64 04		        xrl     a,#004h
 5267+ 3  114A	54 FE		        anl     a,#0feh
 5268+ 3  114C	70 1B		        jnz     ??0443
 5269+ 2			        endif
 5270+ 1			        top_ma  addc,r5,??0443,<004h>
 5271+ 2  114E	7D 51		        mov     r5,#arg0
 5272+ 2  1150	74 33		        mov     a,#arg1
 5273+ 2			        ifnb    <004h>
 5274+ 2			        set_cy  004h
 5275+ 3	N      0000	??0460  set     (004h and 1)
 5276+ 3	N      0000	        if      ??0460 eq 1
 5277+ 3			        setb    c
 5278+ 3			        else
 5279+ 3  1152	C3		        clr     c
 5280+ 3			        endif
 5281+ 2			        endif
 5282+ 2  1153	3D		        addc      a,r5
 5283+ 2			        ifnb    <004h>
 5284+ 2			        save_psw
 5285+ 3  1154	85 D0 70	        mov     saved_psw,PSW
 5286+ 2			        endif
 5287+ 2  1157	B4 84 0F	        cjne    a,#res,??0443
 5288+ 2			        ifnb    <004h>
 5289+ 2			        tst_psw <004h>,??0443
 5290+ 3  115A	E5 70		        mov     a,saved_psw
 5291+ 3  115C	54 C4		        anl     a,#0c4h
 5292+ 3  115E	64 04		        xrl     a,#004h
 5293+ 3  1160	54 FE		        anl     a,#0feh
 5294+ 3  1162	70 05		        jnz     ??0443
 5295+ 2			        endif
 5296+ 1
 5297+ 1			        eot     'c',??0443
 5298+ 2			        putc    #'c'
 5299+ 3  1164			??0462:
 5300+ 3			        ;jnb     SCON.1,putc_loop
 5301+ 3			        ;clr     SCON.1
 5302+ 3  1164	75 99 63	        mov     SBUF,#'c'
 5303+ 2  1167	80 06		        sjmp    ??0461
 5304+ 2  1169			??0443:  putc    #'?'
 5305+ 3  1169			??0463:
 5306+ 3			        ;jnb     SCON.1,putc_loop
 5307+ 3			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 96



 Line  I  Addr  Code            Source

 5308+ 3  1169	75 99 3F	        mov     SBUF,#'?'
 5309+ 2  116C	75 6E 01	        mov     fail,#001h
 5310+ 2  116F			??0461:
 5311+ 1
 5312+ 1			        top_ma  addc,r6,??0440,<004h>
 5313+ 2  116F	7E 51		        mov     r6,#arg0
 5314+ 2  1171	74 33		        mov     a,#arg1
 5315+ 2			        ifnb    <004h>
 5316+ 2			        set_cy  004h
 5317+ 3	N      0000	??0464  set     (004h and 1)
 5318+ 3	N      0000	        if      ??0464 eq 1
 5319+ 3			        setb    c
 5320+ 3			        else
 5321+ 3  1173	C3		        clr     c
 5322+ 3			        endif
 5323+ 2			        endif
 5324+ 2  1174	3E		        addc      a,r6
 5325+ 2			        ifnb    <004h>
 5326+ 2			        save_psw
 5327+ 3  1175	85 D0 70	        mov     saved_psw,PSW
 5328+ 2			        endif
 5329+ 2  1178	B4 84 25	        cjne    a,#res,??0440
 5330+ 2			        ifnb    <004h>
 5331+ 2			        tst_psw <004h>,??0440
 5332+ 3  117B	E5 70		        mov     a,saved_psw
 5333+ 3  117D	54 C4		        anl     a,#0c4h
 5334+ 3  117F	64 04		        xrl     a,#004h
 5335+ 3  1181	54 FE		        anl     a,#0feh
 5336+ 3  1183	70 1B		        jnz     ??0440
 5337+ 2			        endif
 5338+ 1			        top_ma  addc,r7,??0440,<004h>
 5339+ 2  1185	7F 51		        mov     r7,#arg0
 5340+ 2  1187	74 33		        mov     a,#arg1
 5341+ 2			        ifnb    <004h>
 5342+ 2			        set_cy  004h
 5343+ 3	N      0000	??0465  set     (004h and 1)
 5344+ 3	N      0000	        if      ??0465 eq 1
 5345+ 3			        setb    c
 5346+ 3			        else
 5347+ 3  1189	C3		        clr     c
 5348+ 3			        endif
 5349+ 2			        endif
 5350+ 2  118A	3F		        addc      a,r7
 5351+ 2			        ifnb    <004h>
 5352+ 2			        save_psw
 5353+ 3  118B	85 D0 70	        mov     saved_psw,PSW
 5354+ 2			        endif
 5355+ 2  118E	B4 84 0F	        cjne    a,#res,??0440
 5356+ 2			        ifnb    <004h>
 5357+ 2			        tst_psw <004h>,??0440
 5358+ 3  1191	E5 70		        mov     a,saved_psw
 5359+ 3  1193	54 C4		        anl     a,#0c4h
 5360+ 3  1195	64 04		        xrl     a,#004h
 5361+ 3  1197	54 FE		        anl     a,#0feh
 5362+ 3  1199	70 05		        jnz     ??0440
 5363+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 97



 Line  I  Addr  Code            Source

 5364+ 1
 5365+ 1			        eot     'd',??0440
 5366+ 2			        putc    #'d'
 5367+ 3  119B			??0467:
 5368+ 3			        ;jnb     SCON.1,putc_loop
 5369+ 3			        ;clr     SCON.1
 5370+ 3  119B	75 99 64	        mov     SBUF,#'d'
 5371+ 2  119E	80 06		        sjmp    ??0466
 5372+ 2  11A0			??0440:  putc    #'?'
 5373+ 3  11A0			??0468:
 5374+ 3			        ;jnb     SCON.1,putc_loop
 5375+ 3			        ;clr     SCON.1
 5376+ 3  11A0	75 99 3F	        mov     SBUF,#'?'
 5377+ 2  11A3	75 6E 01	        mov     fail,#001h
 5378+ 2  11A6			??0466:
 5379+ 1
 5380+ 1			        ifb     <004h>
 5381+ 1
 5382+ 1			        top_mb  addc,a,??0444,<004h>
 5383+ 1			        top_mb  addc,dir0,??0444,<004h>
 5384+ 1
 5385+ 1			        eot     'e',??0444
 5386+ 1
 5387+ 1			        top_mc  addc,??0445,<004h>
 5388+ 1
 5389+ 1			        eot     'f',??0445
 5390+ 1			        endif
 5391:				        putc    #'1'
 5392+ 1  11A6			??0469:
 5393+ 1			        ;jnb     SCON.1,putc_loop
 5394+ 1			        ;clr     SCON.1
 5395+ 1  11A6	75 99 31	        mov     SBUF,#'1'
 5396:				        tst_alu addc,081h,093h,014h,084h     ;  CY /AC  OV
 5397+ 1
 5398+ 1	N      0081	        arg0    set 081h
 5399+ 1	N      0093	        arg1    set 093h
 5400+ 1	N      0014	        res     set 014h
 5401+ 1
 5402+ 1			        top_ma  addc,dir0,??0471,<084h>
 5403+ 2  11A9	75 60 81	        mov     dir0,#arg0
 5404+ 2  11AC	74 93		        mov     a,#arg1
 5405+ 2			        ifnb    <084h>
 5406+ 2			        set_cy  084h
 5407+ 3	N      0000	??0476  set     (084h and 1)
 5408+ 3	N      0000	        if      ??0476 eq 1
 5409+ 3			        setb    c
 5410+ 3			        else
 5411+ 3  11AE	C3		        clr     c
 5412+ 3			        endif
 5413+ 2			        endif
 5414+ 2  11AF	35 60		        addc      a,dir0
 5415+ 2			        ifnb    <084h>
 5416+ 2			        save_psw
 5417+ 3  11B1	85 D0 70	        mov     saved_psw,PSW
 5418+ 2			        endif
 5419+ 2  11B4	B4 14 6B	        cjne    a,#res,??0471

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 98



 Line  I  Addr  Code            Source

 5420+ 2			        ifnb    <084h>
 5421+ 2			        tst_psw <084h>,??0471
 5422+ 3  11B7	E5 70		        mov     a,saved_psw
 5423+ 3  11B9	54 C4		        anl     a,#0c4h
 5424+ 3  11BB	64 84		        xrl     a,#084h
 5425+ 3  11BD	54 FE		        anl     a,#0feh
 5426+ 3  11BF	70 61		        jnz     ??0471
 5427+ 2			        endif
 5428+ 1  11C1	78 60		        mov     r0,#dir0
 5429+ 1			        top_ma  addc,@r0,??0471,<084h>
 5430+ 2  11C3	76 81		        mov     @r0,#arg0
 5431+ 2  11C5	74 93		        mov     a,#arg1
 5432+ 2			        ifnb    <084h>
 5433+ 2			        set_cy  084h
 5434+ 3	N      0000	??0477  set     (084h and 1)
 5435+ 3	N      0000	        if      ??0477 eq 1
 5436+ 3			        setb    c
 5437+ 3			        else
 5438+ 3  11C7	C3		        clr     c
 5439+ 3			        endif
 5440+ 2			        endif
 5441+ 2  11C8	36		        addc      a,@r0
 5442+ 2			        ifnb    <084h>
 5443+ 2			        save_psw
 5444+ 3  11C9	85 D0 70	        mov     saved_psw,PSW
 5445+ 2			        endif
 5446+ 2  11CC	B4 14 53	        cjne    a,#res,??0471
 5447+ 2			        ifnb    <084h>
 5448+ 2			        tst_psw <084h>,??0471
 5449+ 3  11CF	E5 70		        mov     a,saved_psw
 5450+ 3  11D1	54 C4		        anl     a,#0c4h
 5451+ 3  11D3	64 84		        xrl     a,#084h
 5452+ 3  11D5	54 FE		        anl     a,#0feh
 5453+ 3  11D7	70 49		        jnz     ??0471
 5454+ 2			        endif
 5455+ 1  11D9	79 31		        mov     r1,#031h
 5456+ 1			        top_ma  addc,@r1,??0471,<084h>
 5457+ 2  11DB	77 81		        mov     @r1,#arg0
 5458+ 2  11DD	74 93		        mov     a,#arg1
 5459+ 2			        ifnb    <084h>
 5460+ 2			        set_cy  084h
 5461+ 3	N      0000	??0478  set     (084h and 1)
 5462+ 3	N      0000	        if      ??0478 eq 1
 5463+ 3			        setb    c
 5464+ 3			        else
 5465+ 3  11DF	C3		        clr     c
 5466+ 3			        endif
 5467+ 2			        endif
 5468+ 2  11E0	37		        addc      a,@r1
 5469+ 2			        ifnb    <084h>
 5470+ 2			        save_psw
 5471+ 3  11E1	85 D0 70	        mov     saved_psw,PSW
 5472+ 2			        endif
 5473+ 2  11E4	B4 14 3B	        cjne    a,#res,??0471
 5474+ 2			        ifnb    <084h>
 5475+ 2			        tst_psw <084h>,??0471

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 99



 Line  I  Addr  Code            Source

 5476+ 3  11E7	E5 70		        mov     a,saved_psw
 5477+ 3  11E9	54 C4		        anl     a,#0c4h
 5478+ 3  11EB	64 84		        xrl     a,#084h
 5479+ 3  11ED	54 FE		        anl     a,#0feh
 5480+ 3  11EF	70 31		        jnz     ??0471
 5481+ 2			        endif
 5482+ 1
 5483+ 1			        top_ma  addc,r0,??0471,<084h>
 5484+ 2  11F1	78 81		        mov     r0,#arg0
 5485+ 2  11F3	74 93		        mov     a,#arg1
 5486+ 2			        ifnb    <084h>
 5487+ 2			        set_cy  084h
 5488+ 3	N      0000	??0479  set     (084h and 1)
 5489+ 3	N      0000	        if      ??0479 eq 1
 5490+ 3			        setb    c
 5491+ 3			        else
 5492+ 3  11F5	C3		        clr     c
 5493+ 3			        endif
 5494+ 2			        endif
 5495+ 2  11F6	38		        addc      a,r0
 5496+ 2			        ifnb    <084h>
 5497+ 2			        save_psw
 5498+ 3  11F7	85 D0 70	        mov     saved_psw,PSW
 5499+ 2			        endif
 5500+ 2  11FA	B4 14 25	        cjne    a,#res,??0471
 5501+ 2			        ifnb    <084h>
 5502+ 2			        tst_psw <084h>,??0471
 5503+ 3  11FD	E5 70		        mov     a,saved_psw
 5504+ 3  11FF	54 C4		        anl     a,#0c4h
 5505+ 3  1201	64 84		        xrl     a,#084h
 5506+ 3  1203	54 FE		        anl     a,#0feh
 5507+ 3  1205	70 1B		        jnz     ??0471
 5508+ 2			        endif
 5509+ 1			        top_ma  addc,r1,??0471,<084h>
 5510+ 2  1207	79 81		        mov     r1,#arg0
 5511+ 2  1209	74 93		        mov     a,#arg1
 5512+ 2			        ifnb    <084h>
 5513+ 2			        set_cy  084h
 5514+ 3	N      0000	??0480  set     (084h and 1)
 5515+ 3	N      0000	        if      ??0480 eq 1
 5516+ 3			        setb    c
 5517+ 3			        else
 5518+ 3  120B	C3		        clr     c
 5519+ 3			        endif
 5520+ 2			        endif
 5521+ 2  120C	39		        addc      a,r1
 5522+ 2			        ifnb    <084h>
 5523+ 2			        save_psw
 5524+ 3  120D	85 D0 70	        mov     saved_psw,PSW
 5525+ 2			        endif
 5526+ 2  1210	B4 14 0F	        cjne    a,#res,??0471
 5527+ 2			        ifnb    <084h>
 5528+ 2			        tst_psw <084h>,??0471
 5529+ 3  1213	E5 70		        mov     a,saved_psw
 5530+ 3  1215	54 C4		        anl     a,#0c4h
 5531+ 3  1217	64 84		        xrl     a,#084h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 100



 Line  I  Addr  Code            Source

 5532+ 3  1219	54 FE		        anl     a,#0feh
 5533+ 3  121B	70 05		        jnz     ??0471
 5534+ 2			        endif
 5535+ 1
 5536+ 1			        eot     'a',??0471
 5537+ 2			        putc    #'a'
 5538+ 3  121D			??0482:
 5539+ 3			        ;jnb     SCON.1,putc_loop
 5540+ 3			        ;clr     SCON.1
 5541+ 3  121D	75 99 61	        mov     SBUF,#'a'
 5542+ 2  1220	80 06		        sjmp    ??0481
 5543+ 2  1222			??0471:  putc    #'?'
 5544+ 3  1222			??0483:
 5545+ 3			        ;jnb     SCON.1,putc_loop
 5546+ 3			        ;clr     SCON.1
 5547+ 3  1222	75 99 3F	        mov     SBUF,#'?'
 5548+ 2  1225	75 6E 01	        mov     fail,#001h
 5549+ 2  1228			??0481:
 5550+ 1
 5551+ 1			        top_ma  addc,r2,??0472,<084h>
 5552+ 2  1228	7A 81		        mov     r2,#arg0
 5553+ 2  122A	74 93		        mov     a,#arg1
 5554+ 2			        ifnb    <084h>
 5555+ 2			        set_cy  084h
 5556+ 3	N      0000	??0484  set     (084h and 1)
 5557+ 3	N      0000	        if      ??0484 eq 1
 5558+ 3			        setb    c
 5559+ 3			        else
 5560+ 3  122C	C3		        clr     c
 5561+ 3			        endif
 5562+ 2			        endif
 5563+ 2  122D	3A		        addc      a,r2
 5564+ 2			        ifnb    <084h>
 5565+ 2			        save_psw
 5566+ 3  122E	85 D0 70	        mov     saved_psw,PSW
 5567+ 2			        endif
 5568+ 2  1231	B4 14 25	        cjne    a,#res,??0472
 5569+ 2			        ifnb    <084h>
 5570+ 2			        tst_psw <084h>,??0472
 5571+ 3  1234	E5 70		        mov     a,saved_psw
 5572+ 3  1236	54 C4		        anl     a,#0c4h
 5573+ 3  1238	64 84		        xrl     a,#084h
 5574+ 3  123A	54 FE		        anl     a,#0feh
 5575+ 3  123C	70 1B		        jnz     ??0472
 5576+ 2			        endif
 5577+ 1			        top_ma  addc,r3,??0472,<084h>
 5578+ 2  123E	7B 81		        mov     r3,#arg0
 5579+ 2  1240	74 93		        mov     a,#arg1
 5580+ 2			        ifnb    <084h>
 5581+ 2			        set_cy  084h
 5582+ 3	N      0000	??0485  set     (084h and 1)
 5583+ 3	N      0000	        if      ??0485 eq 1
 5584+ 3			        setb    c
 5585+ 3			        else
 5586+ 3  1242	C3		        clr     c
 5587+ 3			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 101



 Line  I  Addr  Code            Source

 5588+ 2			        endif
 5589+ 2  1243	3B		        addc      a,r3
 5590+ 2			        ifnb    <084h>
 5591+ 2			        save_psw
 5592+ 3  1244	85 D0 70	        mov     saved_psw,PSW
 5593+ 2			        endif
 5594+ 2  1247	B4 14 0F	        cjne    a,#res,??0472
 5595+ 2			        ifnb    <084h>
 5596+ 2			        tst_psw <084h>,??0472
 5597+ 3  124A	E5 70		        mov     a,saved_psw
 5598+ 3  124C	54 C4		        anl     a,#0c4h
 5599+ 3  124E	64 84		        xrl     a,#084h
 5600+ 3  1250	54 FE		        anl     a,#0feh
 5601+ 3  1252	70 05		        jnz     ??0472
 5602+ 2			        endif
 5603+ 1
 5604+ 1			        eot     'b',??0472
 5605+ 2			        putc    #'b'
 5606+ 3  1254			??0487:
 5607+ 3			        ;jnb     SCON.1,putc_loop
 5608+ 3			        ;clr     SCON.1
 5609+ 3  1254	75 99 62	        mov     SBUF,#'b'
 5610+ 2  1257	80 06		        sjmp    ??0486
 5611+ 2  1259			??0472:  putc    #'?'
 5612+ 3  1259			??0488:
 5613+ 3			        ;jnb     SCON.1,putc_loop
 5614+ 3			        ;clr     SCON.1
 5615+ 3  1259	75 99 3F	        mov     SBUF,#'?'
 5616+ 2  125C	75 6E 01	        mov     fail,#001h
 5617+ 2  125F			??0486:
 5618+ 1
 5619+ 1			        top_ma  addc,r4,??0473,<084h>
 5620+ 2  125F	7C 81		        mov     r4,#arg0
 5621+ 2  1261	74 93		        mov     a,#arg1
 5622+ 2			        ifnb    <084h>
 5623+ 2			        set_cy  084h
 5624+ 3	N      0000	??0489  set     (084h and 1)
 5625+ 3	N      0000	        if      ??0489 eq 1
 5626+ 3			        setb    c
 5627+ 3			        else
 5628+ 3  1263	C3		        clr     c
 5629+ 3			        endif
 5630+ 2			        endif
 5631+ 2  1264	3C		        addc      a,r4
 5632+ 2			        ifnb    <084h>
 5633+ 2			        save_psw
 5634+ 3  1265	85 D0 70	        mov     saved_psw,PSW
 5635+ 2			        endif
 5636+ 2  1268	B4 14 25	        cjne    a,#res,??0473
 5637+ 2			        ifnb    <084h>
 5638+ 2			        tst_psw <084h>,??0473
 5639+ 3  126B	E5 70		        mov     a,saved_psw
 5640+ 3  126D	54 C4		        anl     a,#0c4h
 5641+ 3  126F	64 84		        xrl     a,#084h
 5642+ 3  1271	54 FE		        anl     a,#0feh
 5643+ 3  1273	70 1B		        jnz     ??0473

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 102



 Line  I  Addr  Code            Source

 5644+ 2			        endif
 5645+ 1			        top_ma  addc,r5,??0473,<084h>
 5646+ 2  1275	7D 81		        mov     r5,#arg0
 5647+ 2  1277	74 93		        mov     a,#arg1
 5648+ 2			        ifnb    <084h>
 5649+ 2			        set_cy  084h
 5650+ 3	N      0000	??0490  set     (084h and 1)
 5651+ 3	N      0000	        if      ??0490 eq 1
 5652+ 3			        setb    c
 5653+ 3			        else
 5654+ 3  1279	C3		        clr     c
 5655+ 3			        endif
 5656+ 2			        endif
 5657+ 2  127A	3D		        addc      a,r5
 5658+ 2			        ifnb    <084h>
 5659+ 2			        save_psw
 5660+ 3  127B	85 D0 70	        mov     saved_psw,PSW
 5661+ 2			        endif
 5662+ 2  127E	B4 14 0F	        cjne    a,#res,??0473
 5663+ 2			        ifnb    <084h>
 5664+ 2			        tst_psw <084h>,??0473
 5665+ 3  1281	E5 70		        mov     a,saved_psw
 5666+ 3  1283	54 C4		        anl     a,#0c4h
 5667+ 3  1285	64 84		        xrl     a,#084h
 5668+ 3  1287	54 FE		        anl     a,#0feh
 5669+ 3  1289	70 05		        jnz     ??0473
 5670+ 2			        endif
 5671+ 1
 5672+ 1			        eot     'c',??0473
 5673+ 2			        putc    #'c'
 5674+ 3  128B			??0492:
 5675+ 3			        ;jnb     SCON.1,putc_loop
 5676+ 3			        ;clr     SCON.1
 5677+ 3  128B	75 99 63	        mov     SBUF,#'c'
 5678+ 2  128E	80 06		        sjmp    ??0491
 5679+ 2  1290			??0473:  putc    #'?'
 5680+ 3  1290			??0493:
 5681+ 3			        ;jnb     SCON.1,putc_loop
 5682+ 3			        ;clr     SCON.1
 5683+ 3  1290	75 99 3F	        mov     SBUF,#'?'
 5684+ 2  1293	75 6E 01	        mov     fail,#001h
 5685+ 2  1296			??0491:
 5686+ 1
 5687+ 1			        top_ma  addc,r6,??0470,<084h>
 5688+ 2  1296	7E 81		        mov     r6,#arg0
 5689+ 2  1298	74 93		        mov     a,#arg1
 5690+ 2			        ifnb    <084h>
 5691+ 2			        set_cy  084h
 5692+ 3	N      0000	??0494  set     (084h and 1)
 5693+ 3	N      0000	        if      ??0494 eq 1
 5694+ 3			        setb    c
 5695+ 3			        else
 5696+ 3  129A	C3		        clr     c
 5697+ 3			        endif
 5698+ 2			        endif
 5699+ 2  129B	3E		        addc      a,r6

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 103



 Line  I  Addr  Code            Source

 5700+ 2			        ifnb    <084h>
 5701+ 2			        save_psw
 5702+ 3  129C	85 D0 70	        mov     saved_psw,PSW
 5703+ 2			        endif
 5704+ 2  129F	B4 14 25	        cjne    a,#res,??0470
 5705+ 2			        ifnb    <084h>
 5706+ 2			        tst_psw <084h>,??0470
 5707+ 3  12A2	E5 70		        mov     a,saved_psw
 5708+ 3  12A4	54 C4		        anl     a,#0c4h
 5709+ 3  12A6	64 84		        xrl     a,#084h
 5710+ 3  12A8	54 FE		        anl     a,#0feh
 5711+ 3  12AA	70 1B		        jnz     ??0470
 5712+ 2			        endif
 5713+ 1			        top_ma  addc,r7,??0470,<084h>
 5714+ 2  12AC	7F 81		        mov     r7,#arg0
 5715+ 2  12AE	74 93		        mov     a,#arg1
 5716+ 2			        ifnb    <084h>
 5717+ 2			        set_cy  084h
 5718+ 3	N      0000	??0495  set     (084h and 1)
 5719+ 3	N      0000	        if      ??0495 eq 1
 5720+ 3			        setb    c
 5721+ 3			        else
 5722+ 3  12B0	C3		        clr     c
 5723+ 3			        endif
 5724+ 2			        endif
 5725+ 2  12B1	3F		        addc      a,r7
 5726+ 2			        ifnb    <084h>
 5727+ 2			        save_psw
 5728+ 3  12B2	85 D0 70	        mov     saved_psw,PSW
 5729+ 2			        endif
 5730+ 2  12B5	B4 14 0F	        cjne    a,#res,??0470
 5731+ 2			        ifnb    <084h>
 5732+ 2			        tst_psw <084h>,??0470
 5733+ 3  12B8	E5 70		        mov     a,saved_psw
 5734+ 3  12BA	54 C4		        anl     a,#0c4h
 5735+ 3  12BC	64 84		        xrl     a,#084h
 5736+ 3  12BE	54 FE		        anl     a,#0feh
 5737+ 3  12C0	70 05		        jnz     ??0470
 5738+ 2			        endif
 5739+ 1
 5740+ 1			        eot     'd',??0470
 5741+ 2			        putc    #'d'
 5742+ 3  12C2			??0497:
 5743+ 3			        ;jnb     SCON.1,putc_loop
 5744+ 3			        ;clr     SCON.1
 5745+ 3  12C2	75 99 64	        mov     SBUF,#'d'
 5746+ 2  12C5	80 06		        sjmp    ??0496
 5747+ 2  12C7			??0470:  putc    #'?'
 5748+ 3  12C7			??0498:
 5749+ 3			        ;jnb     SCON.1,putc_loop
 5750+ 3			        ;clr     SCON.1
 5751+ 3  12C7	75 99 3F	        mov     SBUF,#'?'
 5752+ 2  12CA	75 6E 01	        mov     fail,#001h
 5753+ 2  12CD			??0496:
 5754+ 1
 5755+ 1			        ifb     <084h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 104



 Line  I  Addr  Code            Source

 5756+ 1
 5757+ 1			        top_mb  addc,a,??0474,<084h>
 5758+ 1			        top_mb  addc,dir0,??0474,<084h>
 5759+ 1
 5760+ 1			        eot     'e',??0474
 5761+ 1
 5762+ 1			        top_mc  addc,??0475,<084h>
 5763+ 1
 5764+ 1			        eot     'f',??0475
 5765+ 1			        endif
 5766:				        putc    #'2'
 5767+ 1  12CD			??0499:
 5768+ 1			        ;jnb     SCON.1,putc_loop
 5769+ 1			        ;clr     SCON.1
 5770+ 1  12CD	75 99 32	        mov     SBUF,#'2'
 5771:				        tst_alu addc,088h,098h,020h,0c4h     ;  CY  AC  OV
 5772+ 1
 5773+ 1	N      0088	        arg0    set 088h
 5774+ 1	N      0098	        arg1    set 098h
 5775+ 1	N      0020	        res     set 020h
 5776+ 1
 5777+ 1			        top_ma  addc,dir0,??0501,<0c4h>
 5778+ 2  12D0	75 60 88	        mov     dir0,#arg0
 5779+ 2  12D3	74 98		        mov     a,#arg1
 5780+ 2			        ifnb    <0c4h>
 5781+ 2			        set_cy  0c4h
 5782+ 3	N      0000	??0506  set     (0c4h and 1)
 5783+ 3	N      0000	        if      ??0506 eq 1
 5784+ 3			        setb    c
 5785+ 3			        else
 5786+ 3  12D5	C3		        clr     c
 5787+ 3			        endif
 5788+ 2			        endif
 5789+ 2  12D6	35 60		        addc      a,dir0
 5790+ 2			        ifnb    <0c4h>
 5791+ 2			        save_psw
 5792+ 3  12D8	85 D0 70	        mov     saved_psw,PSW
 5793+ 2			        endif
 5794+ 2  12DB	B4 20 6B	        cjne    a,#res,??0501
 5795+ 2			        ifnb    <0c4h>
 5796+ 2			        tst_psw <0c4h>,??0501
 5797+ 3  12DE	E5 70		        mov     a,saved_psw
 5798+ 3  12E0	54 C4		        anl     a,#0c4h
 5799+ 3  12E2	64 C4		        xrl     a,#0c4h
 5800+ 3  12E4	54 FE		        anl     a,#0feh
 5801+ 3  12E6	70 61		        jnz     ??0501
 5802+ 2			        endif
 5803+ 1  12E8	78 60		        mov     r0,#dir0
 5804+ 1			        top_ma  addc,@r0,??0501,<0c4h>
 5805+ 2  12EA	76 88		        mov     @r0,#arg0
 5806+ 2  12EC	74 98		        mov     a,#arg1
 5807+ 2			        ifnb    <0c4h>
 5808+ 2			        set_cy  0c4h
 5809+ 3	N      0000	??0507  set     (0c4h and 1)
 5810+ 3	N      0000	        if      ??0507 eq 1
 5811+ 3			        setb    c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 105



 Line  I  Addr  Code            Source

 5812+ 3			        else
 5813+ 3  12EE	C3		        clr     c
 5814+ 3			        endif
 5815+ 2			        endif
 5816+ 2  12EF	36		        addc      a,@r0
 5817+ 2			        ifnb    <0c4h>
 5818+ 2			        save_psw
 5819+ 3  12F0	85 D0 70	        mov     saved_psw,PSW
 5820+ 2			        endif
 5821+ 2  12F3	B4 20 53	        cjne    a,#res,??0501
 5822+ 2			        ifnb    <0c4h>
 5823+ 2			        tst_psw <0c4h>,??0501
 5824+ 3  12F6	E5 70		        mov     a,saved_psw
 5825+ 3  12F8	54 C4		        anl     a,#0c4h
 5826+ 3  12FA	64 C4		        xrl     a,#0c4h
 5827+ 3  12FC	54 FE		        anl     a,#0feh
 5828+ 3  12FE	70 49		        jnz     ??0501
 5829+ 2			        endif
 5830+ 1  1300	79 31		        mov     r1,#031h
 5831+ 1			        top_ma  addc,@r1,??0501,<0c4h>
 5832+ 2  1302	77 88		        mov     @r1,#arg0
 5833+ 2  1304	74 98		        mov     a,#arg1
 5834+ 2			        ifnb    <0c4h>
 5835+ 2			        set_cy  0c4h
 5836+ 3	N      0000	??0508  set     (0c4h and 1)
 5837+ 3	N      0000	        if      ??0508 eq 1
 5838+ 3			        setb    c
 5839+ 3			        else
 5840+ 3  1306	C3		        clr     c
 5841+ 3			        endif
 5842+ 2			        endif
 5843+ 2  1307	37		        addc      a,@r1
 5844+ 2			        ifnb    <0c4h>
 5845+ 2			        save_psw
 5846+ 3  1308	85 D0 70	        mov     saved_psw,PSW
 5847+ 2			        endif
 5848+ 2  130B	B4 20 3B	        cjne    a,#res,??0501
 5849+ 2			        ifnb    <0c4h>
 5850+ 2			        tst_psw <0c4h>,??0501
 5851+ 3  130E	E5 70		        mov     a,saved_psw
 5852+ 3  1310	54 C4		        anl     a,#0c4h
 5853+ 3  1312	64 C4		        xrl     a,#0c4h
 5854+ 3  1314	54 FE		        anl     a,#0feh
 5855+ 3  1316	70 31		        jnz     ??0501
 5856+ 2			        endif
 5857+ 1
 5858+ 1			        top_ma  addc,r0,??0501,<0c4h>
 5859+ 2  1318	78 88		        mov     r0,#arg0
 5860+ 2  131A	74 98		        mov     a,#arg1
 5861+ 2			        ifnb    <0c4h>
 5862+ 2			        set_cy  0c4h
 5863+ 3	N      0000	??0509  set     (0c4h and 1)
 5864+ 3	N      0000	        if      ??0509 eq 1
 5865+ 3			        setb    c
 5866+ 3			        else
 5867+ 3  131C	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 106



 Line  I  Addr  Code            Source

 5868+ 3			        endif
 5869+ 2			        endif
 5870+ 2  131D	38		        addc      a,r0
 5871+ 2			        ifnb    <0c4h>
 5872+ 2			        save_psw
 5873+ 3  131E	85 D0 70	        mov     saved_psw,PSW
 5874+ 2			        endif
 5875+ 2  1321	B4 20 25	        cjne    a,#res,??0501
 5876+ 2			        ifnb    <0c4h>
 5877+ 2			        tst_psw <0c4h>,??0501
 5878+ 3  1324	E5 70		        mov     a,saved_psw
 5879+ 3  1326	54 C4		        anl     a,#0c4h
 5880+ 3  1328	64 C4		        xrl     a,#0c4h
 5881+ 3  132A	54 FE		        anl     a,#0feh
 5882+ 3  132C	70 1B		        jnz     ??0501
 5883+ 2			        endif
 5884+ 1			        top_ma  addc,r1,??0501,<0c4h>
 5885+ 2  132E	79 88		        mov     r1,#arg0
 5886+ 2  1330	74 98		        mov     a,#arg1
 5887+ 2			        ifnb    <0c4h>
 5888+ 2			        set_cy  0c4h
 5889+ 3	N      0000	??0510  set     (0c4h and 1)
 5890+ 3	N      0000	        if      ??0510 eq 1
 5891+ 3			        setb    c
 5892+ 3			        else
 5893+ 3  1332	C3		        clr     c
 5894+ 3			        endif
 5895+ 2			        endif
 5896+ 2  1333	39		        addc      a,r1
 5897+ 2			        ifnb    <0c4h>
 5898+ 2			        save_psw
 5899+ 3  1334	85 D0 70	        mov     saved_psw,PSW
 5900+ 2			        endif
 5901+ 2  1337	B4 20 0F	        cjne    a,#res,??0501
 5902+ 2			        ifnb    <0c4h>
 5903+ 2			        tst_psw <0c4h>,??0501
 5904+ 3  133A	E5 70		        mov     a,saved_psw
 5905+ 3  133C	54 C4		        anl     a,#0c4h
 5906+ 3  133E	64 C4		        xrl     a,#0c4h
 5907+ 3  1340	54 FE		        anl     a,#0feh
 5908+ 3  1342	70 05		        jnz     ??0501
 5909+ 2			        endif
 5910+ 1
 5911+ 1			        eot     'a',??0501
 5912+ 2			        putc    #'a'
 5913+ 3  1344			??0512:
 5914+ 3			        ;jnb     SCON.1,putc_loop
 5915+ 3			        ;clr     SCON.1
 5916+ 3  1344	75 99 61	        mov     SBUF,#'a'
 5917+ 2  1347	80 06		        sjmp    ??0511
 5918+ 2  1349			??0501:  putc    #'?'
 5919+ 3  1349			??0513:
 5920+ 3			        ;jnb     SCON.1,putc_loop
 5921+ 3			        ;clr     SCON.1
 5922+ 3  1349	75 99 3F	        mov     SBUF,#'?'
 5923+ 2  134C	75 6E 01	        mov     fail,#001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 107



 Line  I  Addr  Code            Source

 5924+ 2  134F			??0511:
 5925+ 1
 5926+ 1			        top_ma  addc,r2,??0502,<0c4h>
 5927+ 2  134F	7A 88		        mov     r2,#arg0
 5928+ 2  1351	74 98		        mov     a,#arg1
 5929+ 2			        ifnb    <0c4h>
 5930+ 2			        set_cy  0c4h
 5931+ 3	N      0000	??0514  set     (0c4h and 1)
 5932+ 3	N      0000	        if      ??0514 eq 1
 5933+ 3			        setb    c
 5934+ 3			        else
 5935+ 3  1353	C3		        clr     c
 5936+ 3			        endif
 5937+ 2			        endif
 5938+ 2  1354	3A		        addc      a,r2
 5939+ 2			        ifnb    <0c4h>
 5940+ 2			        save_psw
 5941+ 3  1355	85 D0 70	        mov     saved_psw,PSW
 5942+ 2			        endif
 5943+ 2  1358	B4 20 25	        cjne    a,#res,??0502
 5944+ 2			        ifnb    <0c4h>
 5945+ 2			        tst_psw <0c4h>,??0502
 5946+ 3  135B	E5 70		        mov     a,saved_psw
 5947+ 3  135D	54 C4		        anl     a,#0c4h
 5948+ 3  135F	64 C4		        xrl     a,#0c4h
 5949+ 3  1361	54 FE		        anl     a,#0feh
 5950+ 3  1363	70 1B		        jnz     ??0502
 5951+ 2			        endif
 5952+ 1			        top_ma  addc,r3,??0502,<0c4h>
 5953+ 2  1365	7B 88		        mov     r3,#arg0
 5954+ 2  1367	74 98		        mov     a,#arg1
 5955+ 2			        ifnb    <0c4h>
 5956+ 2			        set_cy  0c4h
 5957+ 3	N      0000	??0515  set     (0c4h and 1)
 5958+ 3	N      0000	        if      ??0515 eq 1
 5959+ 3			        setb    c
 5960+ 3			        else
 5961+ 3  1369	C3		        clr     c
 5962+ 3			        endif
 5963+ 2			        endif
 5964+ 2  136A	3B		        addc      a,r3
 5965+ 2			        ifnb    <0c4h>
 5966+ 2			        save_psw
 5967+ 3  136B	85 D0 70	        mov     saved_psw,PSW
 5968+ 2			        endif
 5969+ 2  136E	B4 20 0F	        cjne    a,#res,??0502
 5970+ 2			        ifnb    <0c4h>
 5971+ 2			        tst_psw <0c4h>,??0502
 5972+ 3  1371	E5 70		        mov     a,saved_psw
 5973+ 3  1373	54 C4		        anl     a,#0c4h
 5974+ 3  1375	64 C4		        xrl     a,#0c4h
 5975+ 3  1377	54 FE		        anl     a,#0feh
 5976+ 3  1379	70 05		        jnz     ??0502
 5977+ 2			        endif
 5978+ 1
 5979+ 1			        eot     'b',??0502

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 108



 Line  I  Addr  Code            Source

 5980+ 2			        putc    #'b'
 5981+ 3  137B			??0517:
 5982+ 3			        ;jnb     SCON.1,putc_loop
 5983+ 3			        ;clr     SCON.1
 5984+ 3  137B	75 99 62	        mov     SBUF,#'b'
 5985+ 2  137E	80 06		        sjmp    ??0516
 5986+ 2  1380			??0502:  putc    #'?'
 5987+ 3  1380			??0518:
 5988+ 3			        ;jnb     SCON.1,putc_loop
 5989+ 3			        ;clr     SCON.1
 5990+ 3  1380	75 99 3F	        mov     SBUF,#'?'
 5991+ 2  1383	75 6E 01	        mov     fail,#001h
 5992+ 2  1386			??0516:
 5993+ 1
 5994+ 1			        top_ma  addc,r4,??0503,<0c4h>
 5995+ 2  1386	7C 88		        mov     r4,#arg0
 5996+ 2  1388	74 98		        mov     a,#arg1
 5997+ 2			        ifnb    <0c4h>
 5998+ 2			        set_cy  0c4h
 5999+ 3	N      0000	??0519  set     (0c4h and 1)
 6000+ 3	N      0000	        if      ??0519 eq 1
 6001+ 3			        setb    c
 6002+ 3			        else
 6003+ 3  138A	C3		        clr     c
 6004+ 3			        endif
 6005+ 2			        endif
 6006+ 2  138B	3C		        addc      a,r4
 6007+ 2			        ifnb    <0c4h>
 6008+ 2			        save_psw
 6009+ 3  138C	85 D0 70	        mov     saved_psw,PSW
 6010+ 2			        endif
 6011+ 2  138F	B4 20 25	        cjne    a,#res,??0503
 6012+ 2			        ifnb    <0c4h>
 6013+ 2			        tst_psw <0c4h>,??0503
 6014+ 3  1392	E5 70		        mov     a,saved_psw
 6015+ 3  1394	54 C4		        anl     a,#0c4h
 6016+ 3  1396	64 C4		        xrl     a,#0c4h
 6017+ 3  1398	54 FE		        anl     a,#0feh
 6018+ 3  139A	70 1B		        jnz     ??0503
 6019+ 2			        endif
 6020+ 1			        top_ma  addc,r5,??0503,<0c4h>
 6021+ 2  139C	7D 88		        mov     r5,#arg0
 6022+ 2  139E	74 98		        mov     a,#arg1
 6023+ 2			        ifnb    <0c4h>
 6024+ 2			        set_cy  0c4h
 6025+ 3	N      0000	??0520  set     (0c4h and 1)
 6026+ 3	N      0000	        if      ??0520 eq 1
 6027+ 3			        setb    c
 6028+ 3			        else
 6029+ 3  13A0	C3		        clr     c
 6030+ 3			        endif
 6031+ 2			        endif
 6032+ 2  13A1	3D		        addc      a,r5
 6033+ 2			        ifnb    <0c4h>
 6034+ 2			        save_psw
 6035+ 3  13A2	85 D0 70	        mov     saved_psw,PSW

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 109



 Line  I  Addr  Code            Source

 6036+ 2			        endif
 6037+ 2  13A5	B4 20 0F	        cjne    a,#res,??0503
 6038+ 2			        ifnb    <0c4h>
 6039+ 2			        tst_psw <0c4h>,??0503
 6040+ 3  13A8	E5 70		        mov     a,saved_psw
 6041+ 3  13AA	54 C4		        anl     a,#0c4h
 6042+ 3  13AC	64 C4		        xrl     a,#0c4h
 6043+ 3  13AE	54 FE		        anl     a,#0feh
 6044+ 3  13B0	70 05		        jnz     ??0503
 6045+ 2			        endif
 6046+ 1
 6047+ 1			        eot     'c',??0503
 6048+ 2			        putc    #'c'
 6049+ 3  13B2			??0522:
 6050+ 3			        ;jnb     SCON.1,putc_loop
 6051+ 3			        ;clr     SCON.1
 6052+ 3  13B2	75 99 63	        mov     SBUF,#'c'
 6053+ 2  13B5	80 06		        sjmp    ??0521
 6054+ 2  13B7			??0503:  putc    #'?'
 6055+ 3  13B7			??0523:
 6056+ 3			        ;jnb     SCON.1,putc_loop
 6057+ 3			        ;clr     SCON.1
 6058+ 3  13B7	75 99 3F	        mov     SBUF,#'?'
 6059+ 2  13BA	75 6E 01	        mov     fail,#001h
 6060+ 2  13BD			??0521:
 6061+ 1
 6062+ 1			        top_ma  addc,r6,??0500,<0c4h>
 6063+ 2  13BD	7E 88		        mov     r6,#arg0
 6064+ 2  13BF	74 98		        mov     a,#arg1
 6065+ 2			        ifnb    <0c4h>
 6066+ 2			        set_cy  0c4h
 6067+ 3	N      0000	??0524  set     (0c4h and 1)
 6068+ 3	N      0000	        if      ??0524 eq 1
 6069+ 3			        setb    c
 6070+ 3			        else
 6071+ 3  13C1	C3		        clr     c
 6072+ 3			        endif
 6073+ 2			        endif
 6074+ 2  13C2	3E		        addc      a,r6
 6075+ 2			        ifnb    <0c4h>
 6076+ 2			        save_psw
 6077+ 3  13C3	85 D0 70	        mov     saved_psw,PSW
 6078+ 2			        endif
 6079+ 2  13C6	B4 20 25	        cjne    a,#res,??0500
 6080+ 2			        ifnb    <0c4h>
 6081+ 2			        tst_psw <0c4h>,??0500
 6082+ 3  13C9	E5 70		        mov     a,saved_psw
 6083+ 3  13CB	54 C4		        anl     a,#0c4h
 6084+ 3  13CD	64 C4		        xrl     a,#0c4h
 6085+ 3  13CF	54 FE		        anl     a,#0feh
 6086+ 3  13D1	70 1B		        jnz     ??0500
 6087+ 2			        endif
 6088+ 1			        top_ma  addc,r7,??0500,<0c4h>
 6089+ 2  13D3	7F 88		        mov     r7,#arg0
 6090+ 2  13D5	74 98		        mov     a,#arg1
 6091+ 2			        ifnb    <0c4h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 110



 Line  I  Addr  Code            Source

 6092+ 2			        set_cy  0c4h
 6093+ 3	N      0000	??0525  set     (0c4h and 1)
 6094+ 3	N      0000	        if      ??0525 eq 1
 6095+ 3			        setb    c
 6096+ 3			        else
 6097+ 3  13D7	C3		        clr     c
 6098+ 3			        endif
 6099+ 2			        endif
 6100+ 2  13D8	3F		        addc      a,r7
 6101+ 2			        ifnb    <0c4h>
 6102+ 2			        save_psw
 6103+ 3  13D9	85 D0 70	        mov     saved_psw,PSW
 6104+ 2			        endif
 6105+ 2  13DC	B4 20 0F	        cjne    a,#res,??0500
 6106+ 2			        ifnb    <0c4h>
 6107+ 2			        tst_psw <0c4h>,??0500
 6108+ 3  13DF	E5 70		        mov     a,saved_psw
 6109+ 3  13E1	54 C4		        anl     a,#0c4h
 6110+ 3  13E3	64 C4		        xrl     a,#0c4h
 6111+ 3  13E5	54 FE		        anl     a,#0feh
 6112+ 3  13E7	70 05		        jnz     ??0500
 6113+ 2			        endif
 6114+ 1
 6115+ 1			        eot     'd',??0500
 6116+ 2			        putc    #'d'
 6117+ 3  13E9			??0527:
 6118+ 3			        ;jnb     SCON.1,putc_loop
 6119+ 3			        ;clr     SCON.1
 6120+ 3  13E9	75 99 64	        mov     SBUF,#'d'
 6121+ 2  13EC	80 06		        sjmp    ??0526
 6122+ 2  13EE			??0500:  putc    #'?'
 6123+ 3  13EE			??0528:
 6124+ 3			        ;jnb     SCON.1,putc_loop
 6125+ 3			        ;clr     SCON.1
 6126+ 3  13EE	75 99 3F	        mov     SBUF,#'?'
 6127+ 2  13F1	75 6E 01	        mov     fail,#001h
 6128+ 2  13F4			??0526:
 6129+ 1
 6130+ 1			        ifb     <0c4h>
 6131+ 1
 6132+ 1			        top_mb  addc,a,??0504,<0c4h>
 6133+ 1			        top_mb  addc,dir0,??0504,<0c4h>
 6134+ 1
 6135+ 1			        eot     'e',??0504
 6136+ 1
 6137+ 1			        top_mc  addc,??0505,<0c4h>
 6138+ 1
 6139+ 1			        eot     'f',??0505
 6140+ 1			        endif
 6141:				        putc    #'3'
 6142+ 1  13F4			??0529:
 6143+ 1			        ;jnb     SCON.1,putc_loop
 6144+ 1			        ;clr     SCON.1
 6145+ 1  13F4	75 99 33	        mov     SBUF,#'3'
 6146:				        tst_alu addc,088h,098h,021h,0c5h     ;  CY  AC  OV (CY input)
 6147+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 111



 Line  I  Addr  Code            Source

 6148+ 1	N      0088	        arg0    set 088h
 6149+ 1	N      0098	        arg1    set 098h
 6150+ 1	N      0021	        res     set 021h
 6151+ 1
 6152+ 1			        top_ma  addc,dir0,??0531,<0c5h>
 6153+ 2  13F7	75 60 88	        mov     dir0,#arg0
 6154+ 2  13FA	74 98		        mov     a,#arg1
 6155+ 2			        ifnb    <0c5h>
 6156+ 2			        set_cy  0c5h
 6157+ 3	N      0001	??0536  set     (0c5h and 1)
 6158+ 3	N      FFFF	        if      ??0536 eq 1
 6159+ 3  13FC	D3		        setb    c
 6160+ 3			        else
 6161+ 3			        clr     c
 6162+ 3			        endif
 6163+ 2			        endif
 6164+ 2  13FD	35 60		        addc      a,dir0
 6165+ 2			        ifnb    <0c5h>
 6166+ 2			        save_psw
 6167+ 3  13FF	85 D0 70	        mov     saved_psw,PSW
 6168+ 2			        endif
 6169+ 2  1402	B4 21 6B	        cjne    a,#res,??0531
 6170+ 2			        ifnb    <0c5h>
 6171+ 2			        tst_psw <0c5h>,??0531
 6172+ 3  1405	E5 70		        mov     a,saved_psw
 6173+ 3  1407	54 C4		        anl     a,#0c4h
 6174+ 3  1409	64 C5		        xrl     a,#0c5h
 6175+ 3  140B	54 FE		        anl     a,#0feh
 6176+ 3  140D	70 61		        jnz     ??0531
 6177+ 2			        endif
 6178+ 1  140F	78 60		        mov     r0,#dir0
 6179+ 1			        top_ma  addc,@r0,??0531,<0c5h>
 6180+ 2  1411	76 88		        mov     @r0,#arg0
 6181+ 2  1413	74 98		        mov     a,#arg1
 6182+ 2			        ifnb    <0c5h>
 6183+ 2			        set_cy  0c5h
 6184+ 3	N      0001	??0537  set     (0c5h and 1)
 6185+ 3	N      FFFF	        if      ??0537 eq 1
 6186+ 3  1415	D3		        setb    c
 6187+ 3			        else
 6188+ 3			        clr     c
 6189+ 3			        endif
 6190+ 2			        endif
 6191+ 2  1416	36		        addc      a,@r0
 6192+ 2			        ifnb    <0c5h>
 6193+ 2			        save_psw
 6194+ 3  1417	85 D0 70	        mov     saved_psw,PSW
 6195+ 2			        endif
 6196+ 2  141A	B4 21 53	        cjne    a,#res,??0531
 6197+ 2			        ifnb    <0c5h>
 6198+ 2			        tst_psw <0c5h>,??0531
 6199+ 3  141D	E5 70		        mov     a,saved_psw
 6200+ 3  141F	54 C4		        anl     a,#0c4h
 6201+ 3  1421	64 C5		        xrl     a,#0c5h
 6202+ 3  1423	54 FE		        anl     a,#0feh
 6203+ 3  1425	70 49		        jnz     ??0531

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 112



 Line  I  Addr  Code            Source

 6204+ 2			        endif
 6205+ 1  1427	79 31		        mov     r1,#031h
 6206+ 1			        top_ma  addc,@r1,??0531,<0c5h>
 6207+ 2  1429	77 88		        mov     @r1,#arg0
 6208+ 2  142B	74 98		        mov     a,#arg1
 6209+ 2			        ifnb    <0c5h>
 6210+ 2			        set_cy  0c5h
 6211+ 3	N      0001	??0538  set     (0c5h and 1)
 6212+ 3	N      FFFF	        if      ??0538 eq 1
 6213+ 3  142D	D3		        setb    c
 6214+ 3			        else
 6215+ 3			        clr     c
 6216+ 3			        endif
 6217+ 2			        endif
 6218+ 2  142E	37		        addc      a,@r1
 6219+ 2			        ifnb    <0c5h>
 6220+ 2			        save_psw
 6221+ 3  142F	85 D0 70	        mov     saved_psw,PSW
 6222+ 2			        endif
 6223+ 2  1432	B4 21 3B	        cjne    a,#res,??0531
 6224+ 2			        ifnb    <0c5h>
 6225+ 2			        tst_psw <0c5h>,??0531
 6226+ 3  1435	E5 70		        mov     a,saved_psw
 6227+ 3  1437	54 C4		        anl     a,#0c4h
 6228+ 3  1439	64 C5		        xrl     a,#0c5h
 6229+ 3  143B	54 FE		        anl     a,#0feh
 6230+ 3  143D	70 31		        jnz     ??0531
 6231+ 2			        endif
 6232+ 1
 6233+ 1			        top_ma  addc,r0,??0531,<0c5h>
 6234+ 2  143F	78 88		        mov     r0,#arg0
 6235+ 2  1441	74 98		        mov     a,#arg1
 6236+ 2			        ifnb    <0c5h>
 6237+ 2			        set_cy  0c5h
 6238+ 3	N      0001	??0539  set     (0c5h and 1)
 6239+ 3	N      FFFF	        if      ??0539 eq 1
 6240+ 3  1443	D3		        setb    c
 6241+ 3			        else
 6242+ 3			        clr     c
 6243+ 3			        endif
 6244+ 2			        endif
 6245+ 2  1444	38		        addc      a,r0
 6246+ 2			        ifnb    <0c5h>
 6247+ 2			        save_psw
 6248+ 3  1445	85 D0 70	        mov     saved_psw,PSW
 6249+ 2			        endif
 6250+ 2  1448	B4 21 25	        cjne    a,#res,??0531
 6251+ 2			        ifnb    <0c5h>
 6252+ 2			        tst_psw <0c5h>,??0531
 6253+ 3  144B	E5 70		        mov     a,saved_psw
 6254+ 3  144D	54 C4		        anl     a,#0c4h
 6255+ 3  144F	64 C5		        xrl     a,#0c5h
 6256+ 3  1451	54 FE		        anl     a,#0feh
 6257+ 3  1453	70 1B		        jnz     ??0531
 6258+ 2			        endif
 6259+ 1			        top_ma  addc,r1,??0531,<0c5h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 113



 Line  I  Addr  Code            Source

 6260+ 2  1455	79 88		        mov     r1,#arg0
 6261+ 2  1457	74 98		        mov     a,#arg1
 6262+ 2			        ifnb    <0c5h>
 6263+ 2			        set_cy  0c5h
 6264+ 3	N      0001	??0540  set     (0c5h and 1)
 6265+ 3	N      FFFF	        if      ??0540 eq 1
 6266+ 3  1459	D3		        setb    c
 6267+ 3			        else
 6268+ 3			        clr     c
 6269+ 3			        endif
 6270+ 2			        endif
 6271+ 2  145A	39		        addc      a,r1
 6272+ 2			        ifnb    <0c5h>
 6273+ 2			        save_psw
 6274+ 3  145B	85 D0 70	        mov     saved_psw,PSW
 6275+ 2			        endif
 6276+ 2  145E	B4 21 0F	        cjne    a,#res,??0531
 6277+ 2			        ifnb    <0c5h>
 6278+ 2			        tst_psw <0c5h>,??0531
 6279+ 3  1461	E5 70		        mov     a,saved_psw
 6280+ 3  1463	54 C4		        anl     a,#0c4h
 6281+ 3  1465	64 C5		        xrl     a,#0c5h
 6282+ 3  1467	54 FE		        anl     a,#0feh
 6283+ 3  1469	70 05		        jnz     ??0531
 6284+ 2			        endif
 6285+ 1
 6286+ 1			        eot     'a',??0531
 6287+ 2			        putc    #'a'
 6288+ 3  146B			??0542:
 6289+ 3			        ;jnb     SCON.1,putc_loop
 6290+ 3			        ;clr     SCON.1
 6291+ 3  146B	75 99 61	        mov     SBUF,#'a'
 6292+ 2  146E	80 06		        sjmp    ??0541
 6293+ 2  1470			??0531:  putc    #'?'
 6294+ 3  1470			??0543:
 6295+ 3			        ;jnb     SCON.1,putc_loop
 6296+ 3			        ;clr     SCON.1
 6297+ 3  1470	75 99 3F	        mov     SBUF,#'?'
 6298+ 2  1473	75 6E 01	        mov     fail,#001h
 6299+ 2  1476			??0541:
 6300+ 1
 6301+ 1			        top_ma  addc,r2,??0532,<0c5h>
 6302+ 2  1476	7A 88		        mov     r2,#arg0
 6303+ 2  1478	74 98		        mov     a,#arg1
 6304+ 2			        ifnb    <0c5h>
 6305+ 2			        set_cy  0c5h
 6306+ 3	N      0001	??0544  set     (0c5h and 1)
 6307+ 3	N      FFFF	        if      ??0544 eq 1
 6308+ 3  147A	D3		        setb    c
 6309+ 3			        else
 6310+ 3			        clr     c
 6311+ 3			        endif
 6312+ 2			        endif
 6313+ 2  147B	3A		        addc      a,r2
 6314+ 2			        ifnb    <0c5h>
 6315+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 114



 Line  I  Addr  Code            Source

 6316+ 3  147C	85 D0 70	        mov     saved_psw,PSW
 6317+ 2			        endif
 6318+ 2  147F	B4 21 25	        cjne    a,#res,??0532
 6319+ 2			        ifnb    <0c5h>
 6320+ 2			        tst_psw <0c5h>,??0532
 6321+ 3  1482	E5 70		        mov     a,saved_psw
 6322+ 3  1484	54 C4		        anl     a,#0c4h
 6323+ 3  1486	64 C5		        xrl     a,#0c5h
 6324+ 3  1488	54 FE		        anl     a,#0feh
 6325+ 3  148A	70 1B		        jnz     ??0532
 6326+ 2			        endif
 6327+ 1			        top_ma  addc,r3,??0532,<0c5h>
 6328+ 2  148C	7B 88		        mov     r3,#arg0
 6329+ 2  148E	74 98		        mov     a,#arg1
 6330+ 2			        ifnb    <0c5h>
 6331+ 2			        set_cy  0c5h
 6332+ 3	N      0001	??0545  set     (0c5h and 1)
 6333+ 3	N      FFFF	        if      ??0545 eq 1
 6334+ 3  1490	D3		        setb    c
 6335+ 3			        else
 6336+ 3			        clr     c
 6337+ 3			        endif
 6338+ 2			        endif
 6339+ 2  1491	3B		        addc      a,r3
 6340+ 2			        ifnb    <0c5h>
 6341+ 2			        save_psw
 6342+ 3  1492	85 D0 70	        mov     saved_psw,PSW
 6343+ 2			        endif
 6344+ 2  1495	B4 21 0F	        cjne    a,#res,??0532
 6345+ 2			        ifnb    <0c5h>
 6346+ 2			        tst_psw <0c5h>,??0532
 6347+ 3  1498	E5 70		        mov     a,saved_psw
 6348+ 3  149A	54 C4		        anl     a,#0c4h
 6349+ 3  149C	64 C5		        xrl     a,#0c5h
 6350+ 3  149E	54 FE		        anl     a,#0feh
 6351+ 3  14A0	70 05		        jnz     ??0532
 6352+ 2			        endif
 6353+ 1
 6354+ 1			        eot     'b',??0532
 6355+ 2			        putc    #'b'
 6356+ 3  14A2			??0547:
 6357+ 3			        ;jnb     SCON.1,putc_loop
 6358+ 3			        ;clr     SCON.1
 6359+ 3  14A2	75 99 62	        mov     SBUF,#'b'
 6360+ 2  14A5	80 06		        sjmp    ??0546
 6361+ 2  14A7			??0532:  putc    #'?'
 6362+ 3  14A7			??0548:
 6363+ 3			        ;jnb     SCON.1,putc_loop
 6364+ 3			        ;clr     SCON.1
 6365+ 3  14A7	75 99 3F	        mov     SBUF,#'?'
 6366+ 2  14AA	75 6E 01	        mov     fail,#001h
 6367+ 2  14AD			??0546:
 6368+ 1
 6369+ 1			        top_ma  addc,r4,??0533,<0c5h>
 6370+ 2  14AD	7C 88		        mov     r4,#arg0
 6371+ 2  14AF	74 98		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 115



 Line  I  Addr  Code            Source

 6372+ 2			        ifnb    <0c5h>
 6373+ 2			        set_cy  0c5h
 6374+ 3	N      0001	??0549  set     (0c5h and 1)
 6375+ 3	N      FFFF	        if      ??0549 eq 1
 6376+ 3  14B1	D3		        setb    c
 6377+ 3			        else
 6378+ 3			        clr     c
 6379+ 3			        endif
 6380+ 2			        endif
 6381+ 2  14B2	3C		        addc      a,r4
 6382+ 2			        ifnb    <0c5h>
 6383+ 2			        save_psw
 6384+ 3  14B3	85 D0 70	        mov     saved_psw,PSW
 6385+ 2			        endif
 6386+ 2  14B6	B4 21 25	        cjne    a,#res,??0533
 6387+ 2			        ifnb    <0c5h>
 6388+ 2			        tst_psw <0c5h>,??0533
 6389+ 3  14B9	E5 70		        mov     a,saved_psw
 6390+ 3  14BB	54 C4		        anl     a,#0c4h
 6391+ 3  14BD	64 C5		        xrl     a,#0c5h
 6392+ 3  14BF	54 FE		        anl     a,#0feh
 6393+ 3  14C1	70 1B		        jnz     ??0533
 6394+ 2			        endif
 6395+ 1			        top_ma  addc,r5,??0533,<0c5h>
 6396+ 2  14C3	7D 88		        mov     r5,#arg0
 6397+ 2  14C5	74 98		        mov     a,#arg1
 6398+ 2			        ifnb    <0c5h>
 6399+ 2			        set_cy  0c5h
 6400+ 3	N      0001	??0550  set     (0c5h and 1)
 6401+ 3	N      FFFF	        if      ??0550 eq 1
 6402+ 3  14C7	D3		        setb    c
 6403+ 3			        else
 6404+ 3			        clr     c
 6405+ 3			        endif
 6406+ 2			        endif
 6407+ 2  14C8	3D		        addc      a,r5
 6408+ 2			        ifnb    <0c5h>
 6409+ 2			        save_psw
 6410+ 3  14C9	85 D0 70	        mov     saved_psw,PSW
 6411+ 2			        endif
 6412+ 2  14CC	B4 21 0F	        cjne    a,#res,??0533
 6413+ 2			        ifnb    <0c5h>
 6414+ 2			        tst_psw <0c5h>,??0533
 6415+ 3  14CF	E5 70		        mov     a,saved_psw
 6416+ 3  14D1	54 C4		        anl     a,#0c4h
 6417+ 3  14D3	64 C5		        xrl     a,#0c5h
 6418+ 3  14D5	54 FE		        anl     a,#0feh
 6419+ 3  14D7	70 05		        jnz     ??0533
 6420+ 2			        endif
 6421+ 1
 6422+ 1			        eot     'c',??0533
 6423+ 2			        putc    #'c'
 6424+ 3  14D9			??0552:
 6425+ 3			        ;jnb     SCON.1,putc_loop
 6426+ 3			        ;clr     SCON.1
 6427+ 3  14D9	75 99 63	        mov     SBUF,#'c'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 116



 Line  I  Addr  Code            Source

 6428+ 2  14DC	80 06		        sjmp    ??0551
 6429+ 2  14DE			??0533:  putc    #'?'
 6430+ 3  14DE			??0553:
 6431+ 3			        ;jnb     SCON.1,putc_loop
 6432+ 3			        ;clr     SCON.1
 6433+ 3  14DE	75 99 3F	        mov     SBUF,#'?'
 6434+ 2  14E1	75 6E 01	        mov     fail,#001h
 6435+ 2  14E4			??0551:
 6436+ 1
 6437+ 1			        top_ma  addc,r6,??0530,<0c5h>
 6438+ 2  14E4	7E 88		        mov     r6,#arg0
 6439+ 2  14E6	74 98		        mov     a,#arg1
 6440+ 2			        ifnb    <0c5h>
 6441+ 2			        set_cy  0c5h
 6442+ 3	N      0001	??0554  set     (0c5h and 1)
 6443+ 3	N      FFFF	        if      ??0554 eq 1
 6444+ 3  14E8	D3		        setb    c
 6445+ 3			        else
 6446+ 3			        clr     c
 6447+ 3			        endif
 6448+ 2			        endif
 6449+ 2  14E9	3E		        addc      a,r6
 6450+ 2			        ifnb    <0c5h>
 6451+ 2			        save_psw
 6452+ 3  14EA	85 D0 70	        mov     saved_psw,PSW
 6453+ 2			        endif
 6454+ 2  14ED	B4 21 25	        cjne    a,#res,??0530
 6455+ 2			        ifnb    <0c5h>
 6456+ 2			        tst_psw <0c5h>,??0530
 6457+ 3  14F0	E5 70		        mov     a,saved_psw
 6458+ 3  14F2	54 C4		        anl     a,#0c4h
 6459+ 3  14F4	64 C5		        xrl     a,#0c5h
 6460+ 3  14F6	54 FE		        anl     a,#0feh
 6461+ 3  14F8	70 1B		        jnz     ??0530
 6462+ 2			        endif
 6463+ 1			        top_ma  addc,r7,??0530,<0c5h>
 6464+ 2  14FA	7F 88		        mov     r7,#arg0
 6465+ 2  14FC	74 98		        mov     a,#arg1
 6466+ 2			        ifnb    <0c5h>
 6467+ 2			        set_cy  0c5h
 6468+ 3	N      0001	??0555  set     (0c5h and 1)
 6469+ 3	N      FFFF	        if      ??0555 eq 1
 6470+ 3  14FE	D3		        setb    c
 6471+ 3			        else
 6472+ 3			        clr     c
 6473+ 3			        endif
 6474+ 2			        endif
 6475+ 2  14FF	3F		        addc      a,r7
 6476+ 2			        ifnb    <0c5h>
 6477+ 2			        save_psw
 6478+ 3  1500	85 D0 70	        mov     saved_psw,PSW
 6479+ 2			        endif
 6480+ 2  1503	B4 21 0F	        cjne    a,#res,??0530
 6481+ 2			        ifnb    <0c5h>
 6482+ 2			        tst_psw <0c5h>,??0530
 6483+ 3  1506	E5 70		        mov     a,saved_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 117



 Line  I  Addr  Code            Source

 6484+ 3  1508	54 C4		        anl     a,#0c4h
 6485+ 3  150A	64 C5		        xrl     a,#0c5h
 6486+ 3  150C	54 FE		        anl     a,#0feh
 6487+ 3  150E	70 05		        jnz     ??0530
 6488+ 2			        endif
 6489+ 1
 6490+ 1			        eot     'd',??0530
 6491+ 2			        putc    #'d'
 6492+ 3  1510			??0557:
 6493+ 3			        ;jnb     SCON.1,putc_loop
 6494+ 3			        ;clr     SCON.1
 6495+ 3  1510	75 99 64	        mov     SBUF,#'d'
 6496+ 2  1513	80 06		        sjmp    ??0556
 6497+ 2  1515			??0530:  putc    #'?'
 6498+ 3  1515			??0558:
 6499+ 3			        ;jnb     SCON.1,putc_loop
 6500+ 3			        ;clr     SCON.1
 6501+ 3  1515	75 99 3F	        mov     SBUF,#'?'
 6502+ 2  1518	75 6E 01	        mov     fail,#001h
 6503+ 2  151B			??0556:
 6504+ 1
 6505+ 1			        ifb     <0c5h>
 6506+ 1
 6507+ 1			        top_mb  addc,a,??0534,<0c5h>
 6508+ 1			        top_mb  addc,dir0,??0534,<0c5h>
 6509+ 1
 6510+ 1			        eot     'e',??0534
 6511+ 1
 6512+ 1			        top_mc  addc,??0535,<0c5h>
 6513+ 1
 6514+ 1			        eot     'f',??0535
 6515+ 1			        endif
 6516:				        putc    #'4'
 6517+ 1  151B			??0559:
 6518+ 1			        ;jnb     SCON.1,putc_loop
 6519+ 1			        ;clr     SCON.1
 6520+ 1  151B	75 99 34	        mov     SBUF,#'4'
 6521:				        tst_alu addc,043h,0fbh,03fh,081h     ;  CY /AC /OV (CY input)
 6522+ 1
 6523+ 1	N      0043	        arg0    set 043h
 6524+ 1	N      00FB	        arg1    set 0fbh
 6525+ 1	N      003F	        res     set 03fh
 6526+ 1
 6527+ 1			        top_ma  addc,dir0,??0561,<081h>
 6528+ 2  151E	75 60 43	        mov     dir0,#arg0
 6529+ 2  1521	74 FB		        mov     a,#arg1
 6530+ 2			        ifnb    <081h>
 6531+ 2			        set_cy  081h
 6532+ 3	N      0001	??0566  set     (081h and 1)
 6533+ 3	N      FFFF	        if      ??0566 eq 1
 6534+ 3  1523	D3		        setb    c
 6535+ 3			        else
 6536+ 3			        clr     c
 6537+ 3			        endif
 6538+ 2			        endif
 6539+ 2  1524	35 60		        addc      a,dir0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 118



 Line  I  Addr  Code            Source

 6540+ 2			        ifnb    <081h>
 6541+ 2			        save_psw
 6542+ 3  1526	85 D0 70	        mov     saved_psw,PSW
 6543+ 2			        endif
 6544+ 2  1529	B4 3F 6B	        cjne    a,#res,??0561
 6545+ 2			        ifnb    <081h>
 6546+ 2			        tst_psw <081h>,??0561
 6547+ 3  152C	E5 70		        mov     a,saved_psw
 6548+ 3  152E	54 C4		        anl     a,#0c4h
 6549+ 3  1530	64 81		        xrl     a,#081h
 6550+ 3  1532	54 FE		        anl     a,#0feh
 6551+ 3  1534	70 61		        jnz     ??0561
 6552+ 2			        endif
 6553+ 1  1536	78 60		        mov     r0,#dir0
 6554+ 1			        top_ma  addc,@r0,??0561,<081h>
 6555+ 2  1538	76 43		        mov     @r0,#arg0
 6556+ 2  153A	74 FB		        mov     a,#arg1
 6557+ 2			        ifnb    <081h>
 6558+ 2			        set_cy  081h
 6559+ 3	N      0001	??0567  set     (081h and 1)
 6560+ 3	N      FFFF	        if      ??0567 eq 1
 6561+ 3  153C	D3		        setb    c
 6562+ 3			        else
 6563+ 3			        clr     c
 6564+ 3			        endif
 6565+ 2			        endif
 6566+ 2  153D	36		        addc      a,@r0
 6567+ 2			        ifnb    <081h>
 6568+ 2			        save_psw
 6569+ 3  153E	85 D0 70	        mov     saved_psw,PSW
 6570+ 2			        endif
 6571+ 2  1541	B4 3F 53	        cjne    a,#res,??0561
 6572+ 2			        ifnb    <081h>
 6573+ 2			        tst_psw <081h>,??0561
 6574+ 3  1544	E5 70		        mov     a,saved_psw
 6575+ 3  1546	54 C4		        anl     a,#0c4h
 6576+ 3  1548	64 81		        xrl     a,#081h
 6577+ 3  154A	54 FE		        anl     a,#0feh
 6578+ 3  154C	70 49		        jnz     ??0561
 6579+ 2			        endif
 6580+ 1  154E	79 31		        mov     r1,#031h
 6581+ 1			        top_ma  addc,@r1,??0561,<081h>
 6582+ 2  1550	77 43		        mov     @r1,#arg0
 6583+ 2  1552	74 FB		        mov     a,#arg1
 6584+ 2			        ifnb    <081h>
 6585+ 2			        set_cy  081h
 6586+ 3	N      0001	??0568  set     (081h and 1)
 6587+ 3	N      FFFF	        if      ??0568 eq 1
 6588+ 3  1554	D3		        setb    c
 6589+ 3			        else
 6590+ 3			        clr     c
 6591+ 3			        endif
 6592+ 2			        endif
 6593+ 2  1555	37		        addc      a,@r1
 6594+ 2			        ifnb    <081h>
 6595+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 119



 Line  I  Addr  Code            Source

 6596+ 3  1556	85 D0 70	        mov     saved_psw,PSW
 6597+ 2			        endif
 6598+ 2  1559	B4 3F 3B	        cjne    a,#res,??0561
 6599+ 2			        ifnb    <081h>
 6600+ 2			        tst_psw <081h>,??0561
 6601+ 3  155C	E5 70		        mov     a,saved_psw
 6602+ 3  155E	54 C4		        anl     a,#0c4h
 6603+ 3  1560	64 81		        xrl     a,#081h
 6604+ 3  1562	54 FE		        anl     a,#0feh
 6605+ 3  1564	70 31		        jnz     ??0561
 6606+ 2			        endif
 6607+ 1
 6608+ 1			        top_ma  addc,r0,??0561,<081h>
 6609+ 2  1566	78 43		        mov     r0,#arg0
 6610+ 2  1568	74 FB		        mov     a,#arg1
 6611+ 2			        ifnb    <081h>
 6612+ 2			        set_cy  081h
 6613+ 3	N      0001	??0569  set     (081h and 1)
 6614+ 3	N      FFFF	        if      ??0569 eq 1
 6615+ 3  156A	D3		        setb    c
 6616+ 3			        else
 6617+ 3			        clr     c
 6618+ 3			        endif
 6619+ 2			        endif
 6620+ 2  156B	38		        addc      a,r0
 6621+ 2			        ifnb    <081h>
 6622+ 2			        save_psw
 6623+ 3  156C	85 D0 70	        mov     saved_psw,PSW
 6624+ 2			        endif
 6625+ 2  156F	B4 3F 25	        cjne    a,#res,??0561
 6626+ 2			        ifnb    <081h>
 6627+ 2			        tst_psw <081h>,??0561
 6628+ 3  1572	E5 70		        mov     a,saved_psw
 6629+ 3  1574	54 C4		        anl     a,#0c4h
 6630+ 3  1576	64 81		        xrl     a,#081h
 6631+ 3  1578	54 FE		        anl     a,#0feh
 6632+ 3  157A	70 1B		        jnz     ??0561
 6633+ 2			        endif
 6634+ 1			        top_ma  addc,r1,??0561,<081h>
 6635+ 2  157C	79 43		        mov     r1,#arg0
 6636+ 2  157E	74 FB		        mov     a,#arg1
 6637+ 2			        ifnb    <081h>
 6638+ 2			        set_cy  081h
 6639+ 3	N      0001	??0570  set     (081h and 1)
 6640+ 3	N      FFFF	        if      ??0570 eq 1
 6641+ 3  1580	D3		        setb    c
 6642+ 3			        else
 6643+ 3			        clr     c
 6644+ 3			        endif
 6645+ 2			        endif
 6646+ 2  1581	39		        addc      a,r1
 6647+ 2			        ifnb    <081h>
 6648+ 2			        save_psw
 6649+ 3  1582	85 D0 70	        mov     saved_psw,PSW
 6650+ 2			        endif
 6651+ 2  1585	B4 3F 0F	        cjne    a,#res,??0561

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 120



 Line  I  Addr  Code            Source

 6652+ 2			        ifnb    <081h>
 6653+ 2			        tst_psw <081h>,??0561
 6654+ 3  1588	E5 70		        mov     a,saved_psw
 6655+ 3  158A	54 C4		        anl     a,#0c4h
 6656+ 3  158C	64 81		        xrl     a,#081h
 6657+ 3  158E	54 FE		        anl     a,#0feh
 6658+ 3  1590	70 05		        jnz     ??0561
 6659+ 2			        endif
 6660+ 1
 6661+ 1			        eot     'a',??0561
 6662+ 2			        putc    #'a'
 6663+ 3  1592			??0572:
 6664+ 3			        ;jnb     SCON.1,putc_loop
 6665+ 3			        ;clr     SCON.1
 6666+ 3  1592	75 99 61	        mov     SBUF,#'a'
 6667+ 2  1595	80 06		        sjmp    ??0571
 6668+ 2  1597			??0561:  putc    #'?'
 6669+ 3  1597			??0573:
 6670+ 3			        ;jnb     SCON.1,putc_loop
 6671+ 3			        ;clr     SCON.1
 6672+ 3  1597	75 99 3F	        mov     SBUF,#'?'
 6673+ 2  159A	75 6E 01	        mov     fail,#001h
 6674+ 2  159D			??0571:
 6675+ 1
 6676+ 1			        top_ma  addc,r2,??0562,<081h>
 6677+ 2  159D	7A 43		        mov     r2,#arg0
 6678+ 2  159F	74 FB		        mov     a,#arg1
 6679+ 2			        ifnb    <081h>
 6680+ 2			        set_cy  081h
 6681+ 3	N      0001	??0574  set     (081h and 1)
 6682+ 3	N      FFFF	        if      ??0574 eq 1
 6683+ 3  15A1	D3		        setb    c
 6684+ 3			        else
 6685+ 3			        clr     c
 6686+ 3			        endif
 6687+ 2			        endif
 6688+ 2  15A2	3A		        addc      a,r2
 6689+ 2			        ifnb    <081h>
 6690+ 2			        save_psw
 6691+ 3  15A3	85 D0 70	        mov     saved_psw,PSW
 6692+ 2			        endif
 6693+ 2  15A6	B4 3F 25	        cjne    a,#res,??0562
 6694+ 2			        ifnb    <081h>
 6695+ 2			        tst_psw <081h>,??0562
 6696+ 3  15A9	E5 70		        mov     a,saved_psw
 6697+ 3  15AB	54 C4		        anl     a,#0c4h
 6698+ 3  15AD	64 81		        xrl     a,#081h
 6699+ 3  15AF	54 FE		        anl     a,#0feh
 6700+ 3  15B1	70 1B		        jnz     ??0562
 6701+ 2			        endif
 6702+ 1			        top_ma  addc,r3,??0562,<081h>
 6703+ 2  15B3	7B 43		        mov     r3,#arg0
 6704+ 2  15B5	74 FB		        mov     a,#arg1
 6705+ 2			        ifnb    <081h>
 6706+ 2			        set_cy  081h
 6707+ 3	N      0001	??0575  set     (081h and 1)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 121



 Line  I  Addr  Code            Source

 6708+ 3	N      FFFF	        if      ??0575 eq 1
 6709+ 3  15B7	D3		        setb    c
 6710+ 3			        else
 6711+ 3			        clr     c
 6712+ 3			        endif
 6713+ 2			        endif
 6714+ 2  15B8	3B		        addc      a,r3
 6715+ 2			        ifnb    <081h>
 6716+ 2			        save_psw
 6717+ 3  15B9	85 D0 70	        mov     saved_psw,PSW
 6718+ 2			        endif
 6719+ 2  15BC	B4 3F 0F	        cjne    a,#res,??0562
 6720+ 2			        ifnb    <081h>
 6721+ 2			        tst_psw <081h>,??0562
 6722+ 3  15BF	E5 70		        mov     a,saved_psw
 6723+ 3  15C1	54 C4		        anl     a,#0c4h
 6724+ 3  15C3	64 81		        xrl     a,#081h
 6725+ 3  15C5	54 FE		        anl     a,#0feh
 6726+ 3  15C7	70 05		        jnz     ??0562
 6727+ 2			        endif
 6728+ 1
 6729+ 1			        eot     'b',??0562
 6730+ 2			        putc    #'b'
 6731+ 3  15C9			??0577:
 6732+ 3			        ;jnb     SCON.1,putc_loop
 6733+ 3			        ;clr     SCON.1
 6734+ 3  15C9	75 99 62	        mov     SBUF,#'b'
 6735+ 2  15CC	80 06		        sjmp    ??0576
 6736+ 2  15CE			??0562:  putc    #'?'
 6737+ 3  15CE			??0578:
 6738+ 3			        ;jnb     SCON.1,putc_loop
 6739+ 3			        ;clr     SCON.1
 6740+ 3  15CE	75 99 3F	        mov     SBUF,#'?'
 6741+ 2  15D1	75 6E 01	        mov     fail,#001h
 6742+ 2  15D4			??0576:
 6743+ 1
 6744+ 1			        top_ma  addc,r4,??0563,<081h>
 6745+ 2  15D4	7C 43		        mov     r4,#arg0
 6746+ 2  15D6	74 FB		        mov     a,#arg1
 6747+ 2			        ifnb    <081h>
 6748+ 2			        set_cy  081h
 6749+ 3	N      0001	??0579  set     (081h and 1)
 6750+ 3	N      FFFF	        if      ??0579 eq 1
 6751+ 3  15D8	D3		        setb    c
 6752+ 3			        else
 6753+ 3			        clr     c
 6754+ 3			        endif
 6755+ 2			        endif
 6756+ 2  15D9	3C		        addc      a,r4
 6757+ 2			        ifnb    <081h>
 6758+ 2			        save_psw
 6759+ 3  15DA	85 D0 70	        mov     saved_psw,PSW
 6760+ 2			        endif
 6761+ 2  15DD	B4 3F 25	        cjne    a,#res,??0563
 6762+ 2			        ifnb    <081h>
 6763+ 2			        tst_psw <081h>,??0563

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 122



 Line  I  Addr  Code            Source

 6764+ 3  15E0	E5 70		        mov     a,saved_psw
 6765+ 3  15E2	54 C4		        anl     a,#0c4h
 6766+ 3  15E4	64 81		        xrl     a,#081h
 6767+ 3  15E6	54 FE		        anl     a,#0feh
 6768+ 3  15E8	70 1B		        jnz     ??0563
 6769+ 2			        endif
 6770+ 1			        top_ma  addc,r5,??0563,<081h>
 6771+ 2  15EA	7D 43		        mov     r5,#arg0
 6772+ 2  15EC	74 FB		        mov     a,#arg1
 6773+ 2			        ifnb    <081h>
 6774+ 2			        set_cy  081h
 6775+ 3	N      0001	??0580  set     (081h and 1)
 6776+ 3	N      FFFF	        if      ??0580 eq 1
 6777+ 3  15EE	D3		        setb    c
 6778+ 3			        else
 6779+ 3			        clr     c
 6780+ 3			        endif
 6781+ 2			        endif
 6782+ 2  15EF	3D		        addc      a,r5
 6783+ 2			        ifnb    <081h>
 6784+ 2			        save_psw
 6785+ 3  15F0	85 D0 70	        mov     saved_psw,PSW
 6786+ 2			        endif
 6787+ 2  15F3	B4 3F 0F	        cjne    a,#res,??0563
 6788+ 2			        ifnb    <081h>
 6789+ 2			        tst_psw <081h>,??0563
 6790+ 3  15F6	E5 70		        mov     a,saved_psw
 6791+ 3  15F8	54 C4		        anl     a,#0c4h
 6792+ 3  15FA	64 81		        xrl     a,#081h
 6793+ 3  15FC	54 FE		        anl     a,#0feh
 6794+ 3  15FE	70 05		        jnz     ??0563
 6795+ 2			        endif
 6796+ 1
 6797+ 1			        eot     'c',??0563
 6798+ 2			        putc    #'c'
 6799+ 3  1600			??0582:
 6800+ 3			        ;jnb     SCON.1,putc_loop
 6801+ 3			        ;clr     SCON.1
 6802+ 3  1600	75 99 63	        mov     SBUF,#'c'
 6803+ 2  1603	80 06		        sjmp    ??0581
 6804+ 2  1605			??0563:  putc    #'?'
 6805+ 3  1605			??0583:
 6806+ 3			        ;jnb     SCON.1,putc_loop
 6807+ 3			        ;clr     SCON.1
 6808+ 3  1605	75 99 3F	        mov     SBUF,#'?'
 6809+ 2  1608	75 6E 01	        mov     fail,#001h
 6810+ 2  160B			??0581:
 6811+ 1
 6812+ 1			        top_ma  addc,r6,??0560,<081h>
 6813+ 2  160B	7E 43		        mov     r6,#arg0
 6814+ 2  160D	74 FB		        mov     a,#arg1
 6815+ 2			        ifnb    <081h>
 6816+ 2			        set_cy  081h
 6817+ 3	N      0001	??0584  set     (081h and 1)
 6818+ 3	N      FFFF	        if      ??0584 eq 1
 6819+ 3  160F	D3		        setb    c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 123



 Line  I  Addr  Code            Source

 6820+ 3			        else
 6821+ 3			        clr     c
 6822+ 3			        endif
 6823+ 2			        endif
 6824+ 2  1610	3E		        addc      a,r6
 6825+ 2			        ifnb    <081h>
 6826+ 2			        save_psw
 6827+ 3  1611	85 D0 70	        mov     saved_psw,PSW
 6828+ 2			        endif
 6829+ 2  1614	B4 3F 25	        cjne    a,#res,??0560
 6830+ 2			        ifnb    <081h>
 6831+ 2			        tst_psw <081h>,??0560
 6832+ 3  1617	E5 70		        mov     a,saved_psw
 6833+ 3  1619	54 C4		        anl     a,#0c4h
 6834+ 3  161B	64 81		        xrl     a,#081h
 6835+ 3  161D	54 FE		        anl     a,#0feh
 6836+ 3  161F	70 1B		        jnz     ??0560
 6837+ 2			        endif
 6838+ 1			        top_ma  addc,r7,??0560,<081h>
 6839+ 2  1621	7F 43		        mov     r7,#arg0
 6840+ 2  1623	74 FB		        mov     a,#arg1
 6841+ 2			        ifnb    <081h>
 6842+ 2			        set_cy  081h
 6843+ 3	N      0001	??0585  set     (081h and 1)
 6844+ 3	N      FFFF	        if      ??0585 eq 1
 6845+ 3  1625	D3		        setb    c
 6846+ 3			        else
 6847+ 3			        clr     c
 6848+ 3			        endif
 6849+ 2			        endif
 6850+ 2  1626	3F		        addc      a,r7
 6851+ 2			        ifnb    <081h>
 6852+ 2			        save_psw
 6853+ 3  1627	85 D0 70	        mov     saved_psw,PSW
 6854+ 2			        endif
 6855+ 2  162A	B4 3F 0F	        cjne    a,#res,??0560
 6856+ 2			        ifnb    <081h>
 6857+ 2			        tst_psw <081h>,??0560
 6858+ 3  162D	E5 70		        mov     a,saved_psw
 6859+ 3  162F	54 C4		        anl     a,#0c4h
 6860+ 3  1631	64 81		        xrl     a,#081h
 6861+ 3  1633	54 FE		        anl     a,#0feh
 6862+ 3  1635	70 05		        jnz     ??0560
 6863+ 2			        endif
 6864+ 1
 6865+ 1			        eot     'd',??0560
 6866+ 2			        putc    #'d'
 6867+ 3  1637			??0587:
 6868+ 3			        ;jnb     SCON.1,putc_loop
 6869+ 3			        ;clr     SCON.1
 6870+ 3  1637	75 99 64	        mov     SBUF,#'d'
 6871+ 2  163A	80 06		        sjmp    ??0586
 6872+ 2  163C			??0560:  putc    #'?'
 6873+ 3  163C			??0588:
 6874+ 3			        ;jnb     SCON.1,putc_loop
 6875+ 3			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 124



 Line  I  Addr  Code            Source

 6876+ 3  163C	75 99 3F	        mov     SBUF,#'?'
 6877+ 2  163F	75 6E 01	        mov     fail,#001h
 6878+ 2  1642			??0586:
 6879+ 1
 6880+ 1			        ifb     <081h>
 6881+ 1
 6882+ 1			        top_mb  addc,a,??0564,<081h>
 6883+ 1			        top_mb  addc,dir0,??0564,<081h>
 6884+ 1
 6885+ 1			        eot     'e',??0564
 6886+ 1
 6887+ 1			        top_mc  addc,??0565,<081h>
 6888+ 1
 6889+ 1			        eot     'f',??0565
 6890+ 1			        endif
 6891:
 6892:
 6893:				        put_crlf                    ; end of test series
 6894+ 1			        putc    #13
 6895+ 2  1642			??0589:
 6896+ 2			        ;jnb     SCON.1,putc_loop
 6897+ 2			        ;clr     SCON.1
 6898+ 2  1642	75 99 0D	        mov     SBUF,#13
 6899+ 1			        putc    #10
 6900+ 2  1645			??0590:
 6901+ 2			        ;jnb     SCON.1,putc_loop
 6902+ 2			        ;clr     SCON.1
 6903+ 2  1645	75 99 0A	        mov     SBUF,#10
 6904:
 6905:
 6906:				        ;-- Test series N ------------------------------------------------------
 6907:				        ; SUBB
 6908:				        ; (See comments for 'ALU opcode block test')
 6909:				        ; Note the test runs 4 times for different values of operands
 6910:
 6911:				        putc    #'N'                ; start of test series
 6912+ 1  1648			??0591:
 6913+ 1			        ;jnb     SCON.1,putc_loop
 6914+ 1			        ;clr     SCON.1
 6915+ 1  1648	75 99 4E	        mov     SBUF,#'N'
 6916:
 6917:				        ;tst_alu <arg2>,<A value>,<result>,<PSW | CY input>
 6918:				        ;
 6919:
 6920:				        putc    #'0'
 6921+ 1  164B			??0592:
 6922+ 1			        ;jnb     SCON.1,putc_loop
 6923+ 1			        ;clr     SCON.1
 6924+ 1  164B	75 99 30	        mov     SBUF,#'0'
 6925:				        tst_alu subb,070h,073h,003h,000h     ; /CY /AC /OV
 6926+ 1
 6927+ 1	N      0070	        arg0    set 070h
 6928+ 1	N      0073	        arg1    set 073h
 6929+ 1	N      0003	        res     set 003h
 6930+ 1
 6931+ 1			        top_ma  subb,dir0,??0594,<000h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 125



 Line  I  Addr  Code            Source

 6932+ 2  164E	75 60 70	        mov     dir0,#arg0
 6933+ 2  1651	74 73		        mov     a,#arg1
 6934+ 2			        ifnb    <000h>
 6935+ 2			        set_cy  000h
 6936+ 3	N      0000	??0599  set     (000h and 1)
 6937+ 3	N      0000	        if      ??0599 eq 1
 6938+ 3			        setb    c
 6939+ 3			        else
 6940+ 3  1653	C3		        clr     c
 6941+ 3			        endif
 6942+ 2			        endif
 6943+ 2  1654	95 60		        subb      a,dir0
 6944+ 2			        ifnb    <000h>
 6945+ 2			        save_psw
 6946+ 3  1656	85 D0 70	        mov     saved_psw,PSW
 6947+ 2			        endif
 6948+ 2  1659	B4 03 6B	        cjne    a,#res,??0594
 6949+ 2			        ifnb    <000h>
 6950+ 2			        tst_psw <000h>,??0594
 6951+ 3  165C	E5 70		        mov     a,saved_psw
 6952+ 3  165E	54 C4		        anl     a,#0c4h
 6953+ 3  1660	64 00		        xrl     a,#000h
 6954+ 3  1662	54 FE		        anl     a,#0feh
 6955+ 3  1664	70 61		        jnz     ??0594
 6956+ 2			        endif
 6957+ 1  1666	78 60		        mov     r0,#dir0
 6958+ 1			        top_ma  subb,@r0,??0594,<000h>
 6959+ 2  1668	76 70		        mov     @r0,#arg0
 6960+ 2  166A	74 73		        mov     a,#arg1
 6961+ 2			        ifnb    <000h>
 6962+ 2			        set_cy  000h
 6963+ 3	N      0000	??0600  set     (000h and 1)
 6964+ 3	N      0000	        if      ??0600 eq 1
 6965+ 3			        setb    c
 6966+ 3			        else
 6967+ 3  166C	C3		        clr     c
 6968+ 3			        endif
 6969+ 2			        endif
 6970+ 2  166D	96		        subb      a,@r0
 6971+ 2			        ifnb    <000h>
 6972+ 2			        save_psw
 6973+ 3  166E	85 D0 70	        mov     saved_psw,PSW
 6974+ 2			        endif
 6975+ 2  1671	B4 03 53	        cjne    a,#res,??0594
 6976+ 2			        ifnb    <000h>
 6977+ 2			        tst_psw <000h>,??0594
 6978+ 3  1674	E5 70		        mov     a,saved_psw
 6979+ 3  1676	54 C4		        anl     a,#0c4h
 6980+ 3  1678	64 00		        xrl     a,#000h
 6981+ 3  167A	54 FE		        anl     a,#0feh
 6982+ 3  167C	70 49		        jnz     ??0594
 6983+ 2			        endif
 6984+ 1  167E	79 31		        mov     r1,#031h
 6985+ 1			        top_ma  subb,@r1,??0594,<000h>
 6986+ 2  1680	77 70		        mov     @r1,#arg0
 6987+ 2  1682	74 73		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 126



 Line  I  Addr  Code            Source

 6988+ 2			        ifnb    <000h>
 6989+ 2			        set_cy  000h
 6990+ 3	N      0000	??0601  set     (000h and 1)
 6991+ 3	N      0000	        if      ??0601 eq 1
 6992+ 3			        setb    c
 6993+ 3			        else
 6994+ 3  1684	C3		        clr     c
 6995+ 3			        endif
 6996+ 2			        endif
 6997+ 2  1685	97		        subb      a,@r1
 6998+ 2			        ifnb    <000h>
 6999+ 2			        save_psw
 7000+ 3  1686	85 D0 70	        mov     saved_psw,PSW
 7001+ 2			        endif
 7002+ 2  1689	B4 03 3B	        cjne    a,#res,??0594
 7003+ 2			        ifnb    <000h>
 7004+ 2			        tst_psw <000h>,??0594
 7005+ 3  168C	E5 70		        mov     a,saved_psw
 7006+ 3  168E	54 C4		        anl     a,#0c4h
 7007+ 3  1690	64 00		        xrl     a,#000h
 7008+ 3  1692	54 FE		        anl     a,#0feh
 7009+ 3  1694	70 31		        jnz     ??0594
 7010+ 2			        endif
 7011+ 1
 7012+ 1			        top_ma  subb,r0,??0594,<000h>
 7013+ 2  1696	78 70		        mov     r0,#arg0
 7014+ 2  1698	74 73		        mov     a,#arg1
 7015+ 2			        ifnb    <000h>
 7016+ 2			        set_cy  000h
 7017+ 3	N      0000	??0602  set     (000h and 1)
 7018+ 3	N      0000	        if      ??0602 eq 1
 7019+ 3			        setb    c
 7020+ 3			        else
 7021+ 3  169A	C3		        clr     c
 7022+ 3			        endif
 7023+ 2			        endif
 7024+ 2  169B	98		        subb      a,r0
 7025+ 2			        ifnb    <000h>
 7026+ 2			        save_psw
 7027+ 3  169C	85 D0 70	        mov     saved_psw,PSW
 7028+ 2			        endif
 7029+ 2  169F	B4 03 25	        cjne    a,#res,??0594
 7030+ 2			        ifnb    <000h>
 7031+ 2			        tst_psw <000h>,??0594
 7032+ 3  16A2	E5 70		        mov     a,saved_psw
 7033+ 3  16A4	54 C4		        anl     a,#0c4h
 7034+ 3  16A6	64 00		        xrl     a,#000h
 7035+ 3  16A8	54 FE		        anl     a,#0feh
 7036+ 3  16AA	70 1B		        jnz     ??0594
 7037+ 2			        endif
 7038+ 1			        top_ma  subb,r1,??0594,<000h>
 7039+ 2  16AC	79 70		        mov     r1,#arg0
 7040+ 2  16AE	74 73		        mov     a,#arg1
 7041+ 2			        ifnb    <000h>
 7042+ 2			        set_cy  000h
 7043+ 3	N      0000	??0603  set     (000h and 1)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 127



 Line  I  Addr  Code            Source

 7044+ 3	N      0000	        if      ??0603 eq 1
 7045+ 3			        setb    c
 7046+ 3			        else
 7047+ 3  16B0	C3		        clr     c
 7048+ 3			        endif
 7049+ 2			        endif
 7050+ 2  16B1	99		        subb      a,r1
 7051+ 2			        ifnb    <000h>
 7052+ 2			        save_psw
 7053+ 3  16B2	85 D0 70	        mov     saved_psw,PSW
 7054+ 2			        endif
 7055+ 2  16B5	B4 03 0F	        cjne    a,#res,??0594
 7056+ 2			        ifnb    <000h>
 7057+ 2			        tst_psw <000h>,??0594
 7058+ 3  16B8	E5 70		        mov     a,saved_psw
 7059+ 3  16BA	54 C4		        anl     a,#0c4h
 7060+ 3  16BC	64 00		        xrl     a,#000h
 7061+ 3  16BE	54 FE		        anl     a,#0feh
 7062+ 3  16C0	70 05		        jnz     ??0594
 7063+ 2			        endif
 7064+ 1
 7065+ 1			        eot     'a',??0594
 7066+ 2			        putc    #'a'
 7067+ 3  16C2			??0605:
 7068+ 3			        ;jnb     SCON.1,putc_loop
 7069+ 3			        ;clr     SCON.1
 7070+ 3  16C2	75 99 61	        mov     SBUF,#'a'
 7071+ 2  16C5	80 06		        sjmp    ??0604
 7072+ 2  16C7			??0594:  putc    #'?'
 7073+ 3  16C7			??0606:
 7074+ 3			        ;jnb     SCON.1,putc_loop
 7075+ 3			        ;clr     SCON.1
 7076+ 3  16C7	75 99 3F	        mov     SBUF,#'?'
 7077+ 2  16CA	75 6E 01	        mov     fail,#001h
 7078+ 2  16CD			??0604:
 7079+ 1
 7080+ 1			        top_ma  subb,r2,??0595,<000h>
 7081+ 2  16CD	7A 70		        mov     r2,#arg0
 7082+ 2  16CF	74 73		        mov     a,#arg1
 7083+ 2			        ifnb    <000h>
 7084+ 2			        set_cy  000h
 7085+ 3	N      0000	??0607  set     (000h and 1)
 7086+ 3	N      0000	        if      ??0607 eq 1
 7087+ 3			        setb    c
 7088+ 3			        else
 7089+ 3  16D1	C3		        clr     c
 7090+ 3			        endif
 7091+ 2			        endif
 7092+ 2  16D2	9A		        subb      a,r2
 7093+ 2			        ifnb    <000h>
 7094+ 2			        save_psw
 7095+ 3  16D3	85 D0 70	        mov     saved_psw,PSW
 7096+ 2			        endif
 7097+ 2  16D6	B4 03 25	        cjne    a,#res,??0595
 7098+ 2			        ifnb    <000h>
 7099+ 2			        tst_psw <000h>,??0595

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 128



 Line  I  Addr  Code            Source

 7100+ 3  16D9	E5 70		        mov     a,saved_psw
 7101+ 3  16DB	54 C4		        anl     a,#0c4h
 7102+ 3  16DD	64 00		        xrl     a,#000h
 7103+ 3  16DF	54 FE		        anl     a,#0feh
 7104+ 3  16E1	70 1B		        jnz     ??0595
 7105+ 2			        endif
 7106+ 1			        top_ma  subb,r3,??0595,<000h>
 7107+ 2  16E3	7B 70		        mov     r3,#arg0
 7108+ 2  16E5	74 73		        mov     a,#arg1
 7109+ 2			        ifnb    <000h>
 7110+ 2			        set_cy  000h
 7111+ 3	N      0000	??0608  set     (000h and 1)
 7112+ 3	N      0000	        if      ??0608 eq 1
 7113+ 3			        setb    c
 7114+ 3			        else
 7115+ 3  16E7	C3		        clr     c
 7116+ 3			        endif
 7117+ 2			        endif
 7118+ 2  16E8	9B		        subb      a,r3
 7119+ 2			        ifnb    <000h>
 7120+ 2			        save_psw
 7121+ 3  16E9	85 D0 70	        mov     saved_psw,PSW
 7122+ 2			        endif
 7123+ 2  16EC	B4 03 0F	        cjne    a,#res,??0595
 7124+ 2			        ifnb    <000h>
 7125+ 2			        tst_psw <000h>,??0595
 7126+ 3  16EF	E5 70		        mov     a,saved_psw
 7127+ 3  16F1	54 C4		        anl     a,#0c4h
 7128+ 3  16F3	64 00		        xrl     a,#000h
 7129+ 3  16F5	54 FE		        anl     a,#0feh
 7130+ 3  16F7	70 05		        jnz     ??0595
 7131+ 2			        endif
 7132+ 1
 7133+ 1			        eot     'b',??0595
 7134+ 2			        putc    #'b'
 7135+ 3  16F9			??0610:
 7136+ 3			        ;jnb     SCON.1,putc_loop
 7137+ 3			        ;clr     SCON.1
 7138+ 3  16F9	75 99 62	        mov     SBUF,#'b'
 7139+ 2  16FC	80 06		        sjmp    ??0609
 7140+ 2  16FE			??0595:  putc    #'?'
 7141+ 3  16FE			??0611:
 7142+ 3			        ;jnb     SCON.1,putc_loop
 7143+ 3			        ;clr     SCON.1
 7144+ 3  16FE	75 99 3F	        mov     SBUF,#'?'
 7145+ 2  1701	75 6E 01	        mov     fail,#001h
 7146+ 2  1704			??0609:
 7147+ 1
 7148+ 1			        top_ma  subb,r4,??0596,<000h>
 7149+ 2  1704	7C 70		        mov     r4,#arg0
 7150+ 2  1706	74 73		        mov     a,#arg1
 7151+ 2			        ifnb    <000h>
 7152+ 2			        set_cy  000h
 7153+ 3	N      0000	??0612  set     (000h and 1)
 7154+ 3	N      0000	        if      ??0612 eq 1
 7155+ 3			        setb    c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 129



 Line  I  Addr  Code            Source

 7156+ 3			        else
 7157+ 3  1708	C3		        clr     c
 7158+ 3			        endif
 7159+ 2			        endif
 7160+ 2  1709	9C		        subb      a,r4
 7161+ 2			        ifnb    <000h>
 7162+ 2			        save_psw
 7163+ 3  170A	85 D0 70	        mov     saved_psw,PSW
 7164+ 2			        endif
 7165+ 2  170D	B4 03 25	        cjne    a,#res,??0596
 7166+ 2			        ifnb    <000h>
 7167+ 2			        tst_psw <000h>,??0596
 7168+ 3  1710	E5 70		        mov     a,saved_psw
 7169+ 3  1712	54 C4		        anl     a,#0c4h
 7170+ 3  1714	64 00		        xrl     a,#000h
 7171+ 3  1716	54 FE		        anl     a,#0feh
 7172+ 3  1718	70 1B		        jnz     ??0596
 7173+ 2			        endif
 7174+ 1			        top_ma  subb,r5,??0596,<000h>
 7175+ 2  171A	7D 70		        mov     r5,#arg0
 7176+ 2  171C	74 73		        mov     a,#arg1
 7177+ 2			        ifnb    <000h>
 7178+ 2			        set_cy  000h
 7179+ 3	N      0000	??0613  set     (000h and 1)
 7180+ 3	N      0000	        if      ??0613 eq 1
 7181+ 3			        setb    c
 7182+ 3			        else
 7183+ 3  171E	C3		        clr     c
 7184+ 3			        endif
 7185+ 2			        endif
 7186+ 2  171F	9D		        subb      a,r5
 7187+ 2			        ifnb    <000h>
 7188+ 2			        save_psw
 7189+ 3  1720	85 D0 70	        mov     saved_psw,PSW
 7190+ 2			        endif
 7191+ 2  1723	B4 03 0F	        cjne    a,#res,??0596
 7192+ 2			        ifnb    <000h>
 7193+ 2			        tst_psw <000h>,??0596
 7194+ 3  1726	E5 70		        mov     a,saved_psw
 7195+ 3  1728	54 C4		        anl     a,#0c4h
 7196+ 3  172A	64 00		        xrl     a,#000h
 7197+ 3  172C	54 FE		        anl     a,#0feh
 7198+ 3  172E	70 05		        jnz     ??0596
 7199+ 2			        endif
 7200+ 1
 7201+ 1			        eot     'c',??0596
 7202+ 2			        putc    #'c'
 7203+ 3  1730			??0615:
 7204+ 3			        ;jnb     SCON.1,putc_loop
 7205+ 3			        ;clr     SCON.1
 7206+ 3  1730	75 99 63	        mov     SBUF,#'c'
 7207+ 2  1733	80 06		        sjmp    ??0614
 7208+ 2  1735			??0596:  putc    #'?'
 7209+ 3  1735			??0616:
 7210+ 3			        ;jnb     SCON.1,putc_loop
 7211+ 3			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 130



 Line  I  Addr  Code            Source

 7212+ 3  1735	75 99 3F	        mov     SBUF,#'?'
 7213+ 2  1738	75 6E 01	        mov     fail,#001h
 7214+ 2  173B			??0614:
 7215+ 1
 7216+ 1			        top_ma  subb,r6,??0593,<000h>
 7217+ 2  173B	7E 70		        mov     r6,#arg0
 7218+ 2  173D	74 73		        mov     a,#arg1
 7219+ 2			        ifnb    <000h>
 7220+ 2			        set_cy  000h
 7221+ 3	N      0000	??0617  set     (000h and 1)
 7222+ 3	N      0000	        if      ??0617 eq 1
 7223+ 3			        setb    c
 7224+ 3			        else
 7225+ 3  173F	C3		        clr     c
 7226+ 3			        endif
 7227+ 2			        endif
 7228+ 2  1740	9E		        subb      a,r6
 7229+ 2			        ifnb    <000h>
 7230+ 2			        save_psw
 7231+ 3  1741	85 D0 70	        mov     saved_psw,PSW
 7232+ 2			        endif
 7233+ 2  1744	B4 03 25	        cjne    a,#res,??0593
 7234+ 2			        ifnb    <000h>
 7235+ 2			        tst_psw <000h>,??0593
 7236+ 3  1747	E5 70		        mov     a,saved_psw
 7237+ 3  1749	54 C4		        anl     a,#0c4h
 7238+ 3  174B	64 00		        xrl     a,#000h
 7239+ 3  174D	54 FE		        anl     a,#0feh
 7240+ 3  174F	70 1B		        jnz     ??0593
 7241+ 2			        endif
 7242+ 1			        top_ma  subb,r7,??0593,<000h>
 7243+ 2  1751	7F 70		        mov     r7,#arg0
 7244+ 2  1753	74 73		        mov     a,#arg1
 7245+ 2			        ifnb    <000h>
 7246+ 2			        set_cy  000h
 7247+ 3	N      0000	??0618  set     (000h and 1)
 7248+ 3	N      0000	        if      ??0618 eq 1
 7249+ 3			        setb    c
 7250+ 3			        else
 7251+ 3  1755	C3		        clr     c
 7252+ 3			        endif
 7253+ 2			        endif
 7254+ 2  1756	9F		        subb      a,r7
 7255+ 2			        ifnb    <000h>
 7256+ 2			        save_psw
 7257+ 3  1757	85 D0 70	        mov     saved_psw,PSW
 7258+ 2			        endif
 7259+ 2  175A	B4 03 0F	        cjne    a,#res,??0593
 7260+ 2			        ifnb    <000h>
 7261+ 2			        tst_psw <000h>,??0593
 7262+ 3  175D	E5 70		        mov     a,saved_psw
 7263+ 3  175F	54 C4		        anl     a,#0c4h
 7264+ 3  1761	64 00		        xrl     a,#000h
 7265+ 3  1763	54 FE		        anl     a,#0feh
 7266+ 3  1765	70 05		        jnz     ??0593
 7267+ 2			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 131



 Line  I  Addr  Code            Source

 7268+ 1
 7269+ 1			        eot     'd',??0593
 7270+ 2			        putc    #'d'
 7271+ 3  1767			??0620:
 7272+ 3			        ;jnb     SCON.1,putc_loop
 7273+ 3			        ;clr     SCON.1
 7274+ 3  1767	75 99 64	        mov     SBUF,#'d'
 7275+ 2  176A	80 06		        sjmp    ??0619
 7276+ 2  176C			??0593:  putc    #'?'
 7277+ 3  176C			??0621:
 7278+ 3			        ;jnb     SCON.1,putc_loop
 7279+ 3			        ;clr     SCON.1
 7280+ 3  176C	75 99 3F	        mov     SBUF,#'?'
 7281+ 2  176F	75 6E 01	        mov     fail,#001h
 7282+ 2  1772			??0619:
 7283+ 1
 7284+ 1			        ifb     <000h>
 7285+ 1
 7286+ 1			        top_mb  subb,a,??0597,<000h>
 7287+ 1			        top_mb  subb,dir0,??0597,<000h>
 7288+ 1
 7289+ 1			        eot     'e',??0597
 7290+ 1
 7291+ 1			        top_mc  subb,??0598,<000h>
 7292+ 1
 7293+ 1			        eot     'f',??0598
 7294+ 1			        endif
 7295:				        putc    #'1'
 7296+ 1  1772			??0622:
 7297+ 1			        ;jnb     SCON.1,putc_loop
 7298+ 1			        ;clr     SCON.1
 7299+ 1  1772	75 99 31	        mov     SBUF,#'1'
 7300:				        tst_alu subb,070h,073h,002h,001h     ; /CY /AC /OV (CY input)
 7301+ 1
 7302+ 1	N      0070	        arg0    set 070h
 7303+ 1	N      0073	        arg1    set 073h
 7304+ 1	N      0002	        res     set 002h
 7305+ 1
 7306+ 1			        top_ma  subb,dir0,??0624,<001h>
 7307+ 2  1775	75 60 70	        mov     dir0,#arg0
 7308+ 2  1778	74 73		        mov     a,#arg1
 7309+ 2			        ifnb    <001h>
 7310+ 2			        set_cy  001h
 7311+ 3	N      0001	??0629  set     (001h and 1)
 7312+ 3	N      FFFF	        if      ??0629 eq 1
 7313+ 3  177A	D3		        setb    c
 7314+ 3			        else
 7315+ 3			        clr     c
 7316+ 3			        endif
 7317+ 2			        endif
 7318+ 2  177B	95 60		        subb      a,dir0
 7319+ 2			        ifnb    <001h>
 7320+ 2			        save_psw
 7321+ 3  177D	85 D0 70	        mov     saved_psw,PSW
 7322+ 2			        endif
 7323+ 2  1780	B4 02 6B	        cjne    a,#res,??0624

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 132



 Line  I  Addr  Code            Source

 7324+ 2			        ifnb    <001h>
 7325+ 2			        tst_psw <001h>,??0624
 7326+ 3  1783	E5 70		        mov     a,saved_psw
 7327+ 3  1785	54 C4		        anl     a,#0c4h
 7328+ 3  1787	64 01		        xrl     a,#001h
 7329+ 3  1789	54 FE		        anl     a,#0feh
 7330+ 3  178B	70 61		        jnz     ??0624
 7331+ 2			        endif
 7332+ 1  178D	78 60		        mov     r0,#dir0
 7333+ 1			        top_ma  subb,@r0,??0624,<001h>
 7334+ 2  178F	76 70		        mov     @r0,#arg0
 7335+ 2  1791	74 73		        mov     a,#arg1
 7336+ 2			        ifnb    <001h>
 7337+ 2			        set_cy  001h
 7338+ 3	N      0001	??0630  set     (001h and 1)
 7339+ 3	N      FFFF	        if      ??0630 eq 1
 7340+ 3  1793	D3		        setb    c
 7341+ 3			        else
 7342+ 3			        clr     c
 7343+ 3			        endif
 7344+ 2			        endif
 7345+ 2  1794	96		        subb      a,@r0
 7346+ 2			        ifnb    <001h>
 7347+ 2			        save_psw
 7348+ 3  1795	85 D0 70	        mov     saved_psw,PSW
 7349+ 2			        endif
 7350+ 2  1798	B4 02 53	        cjne    a,#res,??0624
 7351+ 2			        ifnb    <001h>
 7352+ 2			        tst_psw <001h>,??0624
 7353+ 3  179B	E5 70		        mov     a,saved_psw
 7354+ 3  179D	54 C4		        anl     a,#0c4h
 7355+ 3  179F	64 01		        xrl     a,#001h
 7356+ 3  17A1	54 FE		        anl     a,#0feh
 7357+ 3  17A3	70 49		        jnz     ??0624
 7358+ 2			        endif
 7359+ 1  17A5	79 31		        mov     r1,#031h
 7360+ 1			        top_ma  subb,@r1,??0624,<001h>
 7361+ 2  17A7	77 70		        mov     @r1,#arg0
 7362+ 2  17A9	74 73		        mov     a,#arg1
 7363+ 2			        ifnb    <001h>
 7364+ 2			        set_cy  001h
 7365+ 3	N      0001	??0631  set     (001h and 1)
 7366+ 3	N      FFFF	        if      ??0631 eq 1
 7367+ 3  17AB	D3		        setb    c
 7368+ 3			        else
 7369+ 3			        clr     c
 7370+ 3			        endif
 7371+ 2			        endif
 7372+ 2  17AC	97		        subb      a,@r1
 7373+ 2			        ifnb    <001h>
 7374+ 2			        save_psw
 7375+ 3  17AD	85 D0 70	        mov     saved_psw,PSW
 7376+ 2			        endif
 7377+ 2  17B0	B4 02 3B	        cjne    a,#res,??0624
 7378+ 2			        ifnb    <001h>
 7379+ 2			        tst_psw <001h>,??0624

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 133



 Line  I  Addr  Code            Source

 7380+ 3  17B3	E5 70		        mov     a,saved_psw
 7381+ 3  17B5	54 C4		        anl     a,#0c4h
 7382+ 3  17B7	64 01		        xrl     a,#001h
 7383+ 3  17B9	54 FE		        anl     a,#0feh
 7384+ 3  17BB	70 31		        jnz     ??0624
 7385+ 2			        endif
 7386+ 1
 7387+ 1			        top_ma  subb,r0,??0624,<001h>
 7388+ 2  17BD	78 70		        mov     r0,#arg0
 7389+ 2  17BF	74 73		        mov     a,#arg1
 7390+ 2			        ifnb    <001h>
 7391+ 2			        set_cy  001h
 7392+ 3	N      0001	??0632  set     (001h and 1)
 7393+ 3	N      FFFF	        if      ??0632 eq 1
 7394+ 3  17C1	D3		        setb    c
 7395+ 3			        else
 7396+ 3			        clr     c
 7397+ 3			        endif
 7398+ 2			        endif
 7399+ 2  17C2	98		        subb      a,r0
 7400+ 2			        ifnb    <001h>
 7401+ 2			        save_psw
 7402+ 3  17C3	85 D0 70	        mov     saved_psw,PSW
 7403+ 2			        endif
 7404+ 2  17C6	B4 02 25	        cjne    a,#res,??0624
 7405+ 2			        ifnb    <001h>
 7406+ 2			        tst_psw <001h>,??0624
 7407+ 3  17C9	E5 70		        mov     a,saved_psw
 7408+ 3  17CB	54 C4		        anl     a,#0c4h
 7409+ 3  17CD	64 01		        xrl     a,#001h
 7410+ 3  17CF	54 FE		        anl     a,#0feh
 7411+ 3  17D1	70 1B		        jnz     ??0624
 7412+ 2			        endif
 7413+ 1			        top_ma  subb,r1,??0624,<001h>
 7414+ 2  17D3	79 70		        mov     r1,#arg0
 7415+ 2  17D5	74 73		        mov     a,#arg1
 7416+ 2			        ifnb    <001h>
 7417+ 2			        set_cy  001h
 7418+ 3	N      0001	??0633  set     (001h and 1)
 7419+ 3	N      FFFF	        if      ??0633 eq 1
 7420+ 3  17D7	D3		        setb    c
 7421+ 3			        else
 7422+ 3			        clr     c
 7423+ 3			        endif
 7424+ 2			        endif
 7425+ 2  17D8	99		        subb      a,r1
 7426+ 2			        ifnb    <001h>
 7427+ 2			        save_psw
 7428+ 3  17D9	85 D0 70	        mov     saved_psw,PSW
 7429+ 2			        endif
 7430+ 2  17DC	B4 02 0F	        cjne    a,#res,??0624
 7431+ 2			        ifnb    <001h>
 7432+ 2			        tst_psw <001h>,??0624
 7433+ 3  17DF	E5 70		        mov     a,saved_psw
 7434+ 3  17E1	54 C4		        anl     a,#0c4h
 7435+ 3  17E3	64 01		        xrl     a,#001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 134



 Line  I  Addr  Code            Source

 7436+ 3  17E5	54 FE		        anl     a,#0feh
 7437+ 3  17E7	70 05		        jnz     ??0624
 7438+ 2			        endif
 7439+ 1
 7440+ 1			        eot     'a',??0624
 7441+ 2			        putc    #'a'
 7442+ 3  17E9			??0635:
 7443+ 3			        ;jnb     SCON.1,putc_loop
 7444+ 3			        ;clr     SCON.1
 7445+ 3  17E9	75 99 61	        mov     SBUF,#'a'
 7446+ 2  17EC	80 06		        sjmp    ??0634
 7447+ 2  17EE			??0624:  putc    #'?'
 7448+ 3  17EE			??0636:
 7449+ 3			        ;jnb     SCON.1,putc_loop
 7450+ 3			        ;clr     SCON.1
 7451+ 3  17EE	75 99 3F	        mov     SBUF,#'?'
 7452+ 2  17F1	75 6E 01	        mov     fail,#001h
 7453+ 2  17F4			??0634:
 7454+ 1
 7455+ 1			        top_ma  subb,r2,??0625,<001h>
 7456+ 2  17F4	7A 70		        mov     r2,#arg0
 7457+ 2  17F6	74 73		        mov     a,#arg1
 7458+ 2			        ifnb    <001h>
 7459+ 2			        set_cy  001h
 7460+ 3	N      0001	??0637  set     (001h and 1)
 7461+ 3	N      FFFF	        if      ??0637 eq 1
 7462+ 3  17F8	D3		        setb    c
 7463+ 3			        else
 7464+ 3			        clr     c
 7465+ 3			        endif
 7466+ 2			        endif
 7467+ 2  17F9	9A		        subb      a,r2
 7468+ 2			        ifnb    <001h>
 7469+ 2			        save_psw
 7470+ 3  17FA	85 D0 70	        mov     saved_psw,PSW
 7471+ 2			        endif
 7472+ 2  17FD	B4 02 25	        cjne    a,#res,??0625
 7473+ 2			        ifnb    <001h>
 7474+ 2			        tst_psw <001h>,??0625
 7475+ 3  1800	E5 70		        mov     a,saved_psw
 7476+ 3  1802	54 C4		        anl     a,#0c4h
 7477+ 3  1804	64 01		        xrl     a,#001h
 7478+ 3  1806	54 FE		        anl     a,#0feh
 7479+ 3  1808	70 1B		        jnz     ??0625
 7480+ 2			        endif
 7481+ 1			        top_ma  subb,r3,??0625,<001h>
 7482+ 2  180A	7B 70		        mov     r3,#arg0
 7483+ 2  180C	74 73		        mov     a,#arg1
 7484+ 2			        ifnb    <001h>
 7485+ 2			        set_cy  001h
 7486+ 3	N      0001	??0638  set     (001h and 1)
 7487+ 3	N      FFFF	        if      ??0638 eq 1
 7488+ 3  180E	D3		        setb    c
 7489+ 3			        else
 7490+ 3			        clr     c
 7491+ 3			        endif

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 135



 Line  I  Addr  Code            Source

 7492+ 2			        endif
 7493+ 2  180F	9B		        subb      a,r3
 7494+ 2			        ifnb    <001h>
 7495+ 2			        save_psw
 7496+ 3  1810	85 D0 70	        mov     saved_psw,PSW
 7497+ 2			        endif
 7498+ 2  1813	B4 02 0F	        cjne    a,#res,??0625
 7499+ 2			        ifnb    <001h>
 7500+ 2			        tst_psw <001h>,??0625
 7501+ 3  1816	E5 70		        mov     a,saved_psw
 7502+ 3  1818	54 C4		        anl     a,#0c4h
 7503+ 3  181A	64 01		        xrl     a,#001h
 7504+ 3  181C	54 FE		        anl     a,#0feh
 7505+ 3  181E	70 05		        jnz     ??0625
 7506+ 2			        endif
 7507+ 1
 7508+ 1			        eot     'b',??0625
 7509+ 2			        putc    #'b'
 7510+ 3  1820			??0640:
 7511+ 3			        ;jnb     SCON.1,putc_loop
 7512+ 3			        ;clr     SCON.1
 7513+ 3  1820	75 99 62	        mov     SBUF,#'b'
 7514+ 2  1823	80 06		        sjmp    ??0639
 7515+ 2  1825			??0625:  putc    #'?'
 7516+ 3  1825			??0641:
 7517+ 3			        ;jnb     SCON.1,putc_loop
 7518+ 3			        ;clr     SCON.1
 7519+ 3  1825	75 99 3F	        mov     SBUF,#'?'
 7520+ 2  1828	75 6E 01	        mov     fail,#001h
 7521+ 2  182B			??0639:
 7522+ 1
 7523+ 1			        top_ma  subb,r4,??0626,<001h>
 7524+ 2  182B	7C 70		        mov     r4,#arg0
 7525+ 2  182D	74 73		        mov     a,#arg1
 7526+ 2			        ifnb    <001h>
 7527+ 2			        set_cy  001h
 7528+ 3	N      0001	??0642  set     (001h and 1)
 7529+ 3	N      FFFF	        if      ??0642 eq 1
 7530+ 3  182F	D3		        setb    c
 7531+ 3			        else
 7532+ 3			        clr     c
 7533+ 3			        endif
 7534+ 2			        endif
 7535+ 2  1830	9C		        subb      a,r4
 7536+ 2			        ifnb    <001h>
 7537+ 2			        save_psw
 7538+ 3  1831	85 D0 70	        mov     saved_psw,PSW
 7539+ 2			        endif
 7540+ 2  1834	B4 02 25	        cjne    a,#res,??0626
 7541+ 2			        ifnb    <001h>
 7542+ 2			        tst_psw <001h>,??0626
 7543+ 3  1837	E5 70		        mov     a,saved_psw
 7544+ 3  1839	54 C4		        anl     a,#0c4h
 7545+ 3  183B	64 01		        xrl     a,#001h
 7546+ 3  183D	54 FE		        anl     a,#0feh
 7547+ 3  183F	70 1B		        jnz     ??0626

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 136



 Line  I  Addr  Code            Source

 7548+ 2			        endif
 7549+ 1			        top_ma  subb,r5,??0626,<001h>
 7550+ 2  1841	7D 70		        mov     r5,#arg0
 7551+ 2  1843	74 73		        mov     a,#arg1
 7552+ 2			        ifnb    <001h>
 7553+ 2			        set_cy  001h
 7554+ 3	N      0001	??0643  set     (001h and 1)
 7555+ 3	N      FFFF	        if      ??0643 eq 1
 7556+ 3  1845	D3		        setb    c
 7557+ 3			        else
 7558+ 3			        clr     c
 7559+ 3			        endif
 7560+ 2			        endif
 7561+ 2  1846	9D		        subb      a,r5
 7562+ 2			        ifnb    <001h>
 7563+ 2			        save_psw
 7564+ 3  1847	85 D0 70	        mov     saved_psw,PSW
 7565+ 2			        endif
 7566+ 2  184A	B4 02 0F	        cjne    a,#res,??0626
 7567+ 2			        ifnb    <001h>
 7568+ 2			        tst_psw <001h>,??0626
 7569+ 3  184D	E5 70		        mov     a,saved_psw
 7570+ 3  184F	54 C4		        anl     a,#0c4h
 7571+ 3  1851	64 01		        xrl     a,#001h
 7572+ 3  1853	54 FE		        anl     a,#0feh
 7573+ 3  1855	70 05		        jnz     ??0626
 7574+ 2			        endif
 7575+ 1
 7576+ 1			        eot     'c',??0626
 7577+ 2			        putc    #'c'
 7578+ 3  1857			??0645:
 7579+ 3			        ;jnb     SCON.1,putc_loop
 7580+ 3			        ;clr     SCON.1
 7581+ 3  1857	75 99 63	        mov     SBUF,#'c'
 7582+ 2  185A	80 06		        sjmp    ??0644
 7583+ 2  185C			??0626:  putc    #'?'
 7584+ 3  185C			??0646:
 7585+ 3			        ;jnb     SCON.1,putc_loop
 7586+ 3			        ;clr     SCON.1
 7587+ 3  185C	75 99 3F	        mov     SBUF,#'?'
 7588+ 2  185F	75 6E 01	        mov     fail,#001h
 7589+ 2  1862			??0644:
 7590+ 1
 7591+ 1			        top_ma  subb,r6,??0623,<001h>
 7592+ 2  1862	7E 70		        mov     r6,#arg0
 7593+ 2  1864	74 73		        mov     a,#arg1
 7594+ 2			        ifnb    <001h>
 7595+ 2			        set_cy  001h
 7596+ 3	N      0001	??0647  set     (001h and 1)
 7597+ 3	N      FFFF	        if      ??0647 eq 1
 7598+ 3  1866	D3		        setb    c
 7599+ 3			        else
 7600+ 3			        clr     c
 7601+ 3			        endif
 7602+ 2			        endif
 7603+ 2  1867	9E		        subb      a,r6

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 137



 Line  I  Addr  Code            Source

 7604+ 2			        ifnb    <001h>
 7605+ 2			        save_psw
 7606+ 3  1868	85 D0 70	        mov     saved_psw,PSW
 7607+ 2			        endif
 7608+ 2  186B	B4 02 25	        cjne    a,#res,??0623
 7609+ 2			        ifnb    <001h>
 7610+ 2			        tst_psw <001h>,??0623
 7611+ 3  186E	E5 70		        mov     a,saved_psw
 7612+ 3  1870	54 C4		        anl     a,#0c4h
 7613+ 3  1872	64 01		        xrl     a,#001h
 7614+ 3  1874	54 FE		        anl     a,#0feh
 7615+ 3  1876	70 1B		        jnz     ??0623
 7616+ 2			        endif
 7617+ 1			        top_ma  subb,r7,??0623,<001h>
 7618+ 2  1878	7F 70		        mov     r7,#arg0
 7619+ 2  187A	74 73		        mov     a,#arg1
 7620+ 2			        ifnb    <001h>
 7621+ 2			        set_cy  001h
 7622+ 3	N      0001	??0648  set     (001h and 1)
 7623+ 3	N      FFFF	        if      ??0648 eq 1
 7624+ 3  187C	D3		        setb    c
 7625+ 3			        else
 7626+ 3			        clr     c
 7627+ 3			        endif
 7628+ 2			        endif
 7629+ 2  187D	9F		        subb      a,r7
 7630+ 2			        ifnb    <001h>
 7631+ 2			        save_psw
 7632+ 3  187E	85 D0 70	        mov     saved_psw,PSW
 7633+ 2			        endif
 7634+ 2  1881	B4 02 0F	        cjne    a,#res,??0623
 7635+ 2			        ifnb    <001h>
 7636+ 2			        tst_psw <001h>,??0623
 7637+ 3  1884	E5 70		        mov     a,saved_psw
 7638+ 3  1886	54 C4		        anl     a,#0c4h
 7639+ 3  1888	64 01		        xrl     a,#001h
 7640+ 3  188A	54 FE		        anl     a,#0feh
 7641+ 3  188C	70 05		        jnz     ??0623
 7642+ 2			        endif
 7643+ 1
 7644+ 1			        eot     'd',??0623
 7645+ 2			        putc    #'d'
 7646+ 3  188E			??0650:
 7647+ 3			        ;jnb     SCON.1,putc_loop
 7648+ 3			        ;clr     SCON.1
 7649+ 3  188E	75 99 64	        mov     SBUF,#'d'
 7650+ 2  1891	80 06		        sjmp    ??0649
 7651+ 2  1893			??0623:  putc    #'?'
 7652+ 3  1893			??0651:
 7653+ 3			        ;jnb     SCON.1,putc_loop
 7654+ 3			        ;clr     SCON.1
 7655+ 3  1893	75 99 3F	        mov     SBUF,#'?'
 7656+ 2  1896	75 6E 01	        mov     fail,#001h
 7657+ 2  1899			??0649:
 7658+ 1
 7659+ 1			        ifb     <001h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 138



 Line  I  Addr  Code            Source

 7660+ 1
 7661+ 1			        top_mb  subb,a,??0627,<001h>
 7662+ 1			        top_mb  subb,dir0,??0627,<001h>
 7663+ 1
 7664+ 1			        eot     'e',??0627
 7665+ 1
 7666+ 1			        top_mc  subb,??0628,<001h>
 7667+ 1
 7668+ 1			        eot     'f',??0628
 7669+ 1			        endif
 7670:				        putc    #'2'
 7671+ 1  1899			??0652:
 7672+ 1			        ;jnb     SCON.1,putc_loop
 7673+ 1			        ;clr     SCON.1
 7674+ 1  1899	75 99 32	        mov     SBUF,#'2'
 7675:				        tst_alu subb,0c3h,0c5h,002h,004h     ; /CY  AC  OV
 7676+ 1
 7677+ 1	N      00C3	        arg0    set 0c3h
 7678+ 1	N      00C5	        arg1    set 0c5h
 7679+ 1	N      0002	        res     set 002h
 7680+ 1
 7681+ 1			        top_ma  subb,dir0,??0654,<004h>
 7682+ 2  189C	75 60 C3	        mov     dir0,#arg0
 7683+ 2  189F	74 C5		        mov     a,#arg1
 7684+ 2			        ifnb    <004h>
 7685+ 2			        set_cy  004h
 7686+ 3	N      0000	??0659  set     (004h and 1)
 7687+ 3	N      0000	        if      ??0659 eq 1
 7688+ 3			        setb    c
 7689+ 3			        else
 7690+ 3  18A1	C3		        clr     c
 7691+ 3			        endif
 7692+ 2			        endif
 7693+ 2  18A2	95 60		        subb      a,dir0
 7694+ 2			        ifnb    <004h>
 7695+ 2			        save_psw
 7696+ 3  18A4	85 D0 70	        mov     saved_psw,PSW
 7697+ 2			        endif
 7698+ 2  18A7	B4 02 6B	        cjne    a,#res,??0654
 7699+ 2			        ifnb    <004h>
 7700+ 2			        tst_psw <004h>,??0654
 7701+ 3  18AA	E5 70		        mov     a,saved_psw
 7702+ 3  18AC	54 C4		        anl     a,#0c4h
 7703+ 3  18AE	64 04		        xrl     a,#004h
 7704+ 3  18B0	54 FE		        anl     a,#0feh
 7705+ 3  18B2	70 61		        jnz     ??0654
 7706+ 2			        endif
 7707+ 1  18B4	78 60		        mov     r0,#dir0
 7708+ 1			        top_ma  subb,@r0,??0654,<004h>
 7709+ 2  18B6	76 C3		        mov     @r0,#arg0
 7710+ 2  18B8	74 C5		        mov     a,#arg1
 7711+ 2			        ifnb    <004h>
 7712+ 2			        set_cy  004h
 7713+ 3	N      0000	??0660  set     (004h and 1)
 7714+ 3	N      0000	        if      ??0660 eq 1
 7715+ 3			        setb    c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 139



 Line  I  Addr  Code            Source

 7716+ 3			        else
 7717+ 3  18BA	C3		        clr     c
 7718+ 3			        endif
 7719+ 2			        endif
 7720+ 2  18BB	96		        subb      a,@r0
 7721+ 2			        ifnb    <004h>
 7722+ 2			        save_psw
 7723+ 3  18BC	85 D0 70	        mov     saved_psw,PSW
 7724+ 2			        endif
 7725+ 2  18BF	B4 02 53	        cjne    a,#res,??0654
 7726+ 2			        ifnb    <004h>
 7727+ 2			        tst_psw <004h>,??0654
 7728+ 3  18C2	E5 70		        mov     a,saved_psw
 7729+ 3  18C4	54 C4		        anl     a,#0c4h
 7730+ 3  18C6	64 04		        xrl     a,#004h
 7731+ 3  18C8	54 FE		        anl     a,#0feh
 7732+ 3  18CA	70 49		        jnz     ??0654
 7733+ 2			        endif
 7734+ 1  18CC	79 31		        mov     r1,#031h
 7735+ 1			        top_ma  subb,@r1,??0654,<004h>
 7736+ 2  18CE	77 C3		        mov     @r1,#arg0
 7737+ 2  18D0	74 C5		        mov     a,#arg1
 7738+ 2			        ifnb    <004h>
 7739+ 2			        set_cy  004h
 7740+ 3	N      0000	??0661  set     (004h and 1)
 7741+ 3	N      0000	        if      ??0661 eq 1
 7742+ 3			        setb    c
 7743+ 3			        else
 7744+ 3  18D2	C3		        clr     c
 7745+ 3			        endif
 7746+ 2			        endif
 7747+ 2  18D3	97		        subb      a,@r1
 7748+ 2			        ifnb    <004h>
 7749+ 2			        save_psw
 7750+ 3  18D4	85 D0 70	        mov     saved_psw,PSW
 7751+ 2			        endif
 7752+ 2  18D7	B4 02 3B	        cjne    a,#res,??0654
 7753+ 2			        ifnb    <004h>
 7754+ 2			        tst_psw <004h>,??0654
 7755+ 3  18DA	E5 70		        mov     a,saved_psw
 7756+ 3  18DC	54 C4		        anl     a,#0c4h
 7757+ 3  18DE	64 04		        xrl     a,#004h
 7758+ 3  18E0	54 FE		        anl     a,#0feh
 7759+ 3  18E2	70 31		        jnz     ??0654
 7760+ 2			        endif
 7761+ 1
 7762+ 1			        top_ma  subb,r0,??0654,<004h>
 7763+ 2  18E4	78 C3		        mov     r0,#arg0
 7764+ 2  18E6	74 C5		        mov     a,#arg1
 7765+ 2			        ifnb    <004h>
 7766+ 2			        set_cy  004h
 7767+ 3	N      0000	??0662  set     (004h and 1)
 7768+ 3	N      0000	        if      ??0662 eq 1
 7769+ 3			        setb    c
 7770+ 3			        else
 7771+ 3  18E8	C3		        clr     c

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 140



 Line  I  Addr  Code            Source

 7772+ 3			        endif
 7773+ 2			        endif
 7774+ 2  18E9	98		        subb      a,r0
 7775+ 2			        ifnb    <004h>
 7776+ 2			        save_psw
 7777+ 3  18EA	85 D0 70	        mov     saved_psw,PSW
 7778+ 2			        endif
 7779+ 2  18ED	B4 02 25	        cjne    a,#res,??0654
 7780+ 2			        ifnb    <004h>
 7781+ 2			        tst_psw <004h>,??0654
 7782+ 3  18F0	E5 70		        mov     a,saved_psw
 7783+ 3  18F2	54 C4		        anl     a,#0c4h
 7784+ 3  18F4	64 04		        xrl     a,#004h
 7785+ 3  18F6	54 FE		        anl     a,#0feh
 7786+ 3  18F8	70 1B		        jnz     ??0654
 7787+ 2			        endif
 7788+ 1			        top_ma  subb,r1,??0654,<004h>
 7789+ 2  18FA	79 C3		        mov     r1,#arg0
 7790+ 2  18FC	74 C5		        mov     a,#arg1
 7791+ 2			        ifnb    <004h>
 7792+ 2			        set_cy  004h
 7793+ 3	N      0000	??0663  set     (004h and 1)
 7794+ 3	N      0000	        if      ??0663 eq 1
 7795+ 3			        setb    c
 7796+ 3			        else
 7797+ 3  18FE	C3		        clr     c
 7798+ 3			        endif
 7799+ 2			        endif
 7800+ 2  18FF	99		        subb      a,r1
 7801+ 2			        ifnb    <004h>
 7802+ 2			        save_psw
 7803+ 3  1900	85 D0 70	        mov     saved_psw,PSW
 7804+ 2			        endif
 7805+ 2  1903	B4 02 0F	        cjne    a,#res,??0654
 7806+ 2			        ifnb    <004h>
 7807+ 2			        tst_psw <004h>,??0654
 7808+ 3  1906	E5 70		        mov     a,saved_psw
 7809+ 3  1908	54 C4		        anl     a,#0c4h
 7810+ 3  190A	64 04		        xrl     a,#004h
 7811+ 3  190C	54 FE		        anl     a,#0feh
 7812+ 3  190E	70 05		        jnz     ??0654
 7813+ 2			        endif
 7814+ 1
 7815+ 1			        eot     'a',??0654
 7816+ 2			        putc    #'a'
 7817+ 3  1910			??0665:
 7818+ 3			        ;jnb     SCON.1,putc_loop
 7819+ 3			        ;clr     SCON.1
 7820+ 3  1910	75 99 61	        mov     SBUF,#'a'
 7821+ 2  1913	80 06		        sjmp    ??0664
 7822+ 2  1915			??0654:  putc    #'?'
 7823+ 3  1915			??0666:
 7824+ 3			        ;jnb     SCON.1,putc_loop
 7825+ 3			        ;clr     SCON.1
 7826+ 3  1915	75 99 3F	        mov     SBUF,#'?'
 7827+ 2  1918	75 6E 01	        mov     fail,#001h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 141



 Line  I  Addr  Code            Source

 7828+ 2  191B			??0664:
 7829+ 1
 7830+ 1			        top_ma  subb,r2,??0655,<004h>
 7831+ 2  191B	7A C3		        mov     r2,#arg0
 7832+ 2  191D	74 C5		        mov     a,#arg1
 7833+ 2			        ifnb    <004h>
 7834+ 2			        set_cy  004h
 7835+ 3	N      0000	??0667  set     (004h and 1)
 7836+ 3	N      0000	        if      ??0667 eq 1
 7837+ 3			        setb    c
 7838+ 3			        else
 7839+ 3  191F	C3		        clr     c
 7840+ 3			        endif
 7841+ 2			        endif
 7842+ 2  1920	9A		        subb      a,r2
 7843+ 2			        ifnb    <004h>
 7844+ 2			        save_psw
 7845+ 3  1921	85 D0 70	        mov     saved_psw,PSW
 7846+ 2			        endif
 7847+ 2  1924	B4 02 25	        cjne    a,#res,??0655
 7848+ 2			        ifnb    <004h>
 7849+ 2			        tst_psw <004h>,??0655
 7850+ 3  1927	E5 70		        mov     a,saved_psw
 7851+ 3  1929	54 C4		        anl     a,#0c4h
 7852+ 3  192B	64 04		        xrl     a,#004h
 7853+ 3  192D	54 FE		        anl     a,#0feh
 7854+ 3  192F	70 1B		        jnz     ??0655
 7855+ 2			        endif
 7856+ 1			        top_ma  subb,r3,??0655,<004h>
 7857+ 2  1931	7B C3		        mov     r3,#arg0
 7858+ 2  1933	74 C5		        mov     a,#arg1
 7859+ 2			        ifnb    <004h>
 7860+ 2			        set_cy  004h
 7861+ 3	N      0000	??0668  set     (004h and 1)
 7862+ 3	N      0000	        if      ??0668 eq 1
 7863+ 3			        setb    c
 7864+ 3			        else
 7865+ 3  1935	C3		        clr     c
 7866+ 3			        endif
 7867+ 2			        endif
 7868+ 2  1936	9B		        subb      a,r3
 7869+ 2			        ifnb    <004h>
 7870+ 2			        save_psw
 7871+ 3  1937	85 D0 70	        mov     saved_psw,PSW
 7872+ 2			        endif
 7873+ 2  193A	B4 02 0F	        cjne    a,#res,??0655
 7874+ 2			        ifnb    <004h>
 7875+ 2			        tst_psw <004h>,??0655
 7876+ 3  193D	E5 70		        mov     a,saved_psw
 7877+ 3  193F	54 C4		        anl     a,#0c4h
 7878+ 3  1941	64 04		        xrl     a,#004h
 7879+ 3  1943	54 FE		        anl     a,#0feh
 7880+ 3  1945	70 05		        jnz     ??0655
 7881+ 2			        endif
 7882+ 1
 7883+ 1			        eot     'b',??0655

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 142



 Line  I  Addr  Code            Source

 7884+ 2			        putc    #'b'
 7885+ 3  1947			??0670:
 7886+ 3			        ;jnb     SCON.1,putc_loop
 7887+ 3			        ;clr     SCON.1
 7888+ 3  1947	75 99 62	        mov     SBUF,#'b'
 7889+ 2  194A	80 06		        sjmp    ??0669
 7890+ 2  194C			??0655:  putc    #'?'
 7891+ 3  194C			??0671:
 7892+ 3			        ;jnb     SCON.1,putc_loop
 7893+ 3			        ;clr     SCON.1
 7894+ 3  194C	75 99 3F	        mov     SBUF,#'?'
 7895+ 2  194F	75 6E 01	        mov     fail,#001h
 7896+ 2  1952			??0669:
 7897+ 1
 7898+ 1			        top_ma  subb,r4,??0656,<004h>
 7899+ 2  1952	7C C3		        mov     r4,#arg0
 7900+ 2  1954	74 C5		        mov     a,#arg1
 7901+ 2			        ifnb    <004h>
 7902+ 2			        set_cy  004h
 7903+ 3	N      0000	??0672  set     (004h and 1)
 7904+ 3	N      0000	        if      ??0672 eq 1
 7905+ 3			        setb    c
 7906+ 3			        else
 7907+ 3  1956	C3		        clr     c
 7908+ 3			        endif
 7909+ 2			        endif
 7910+ 2  1957	9C		        subb      a,r4
 7911+ 2			        ifnb    <004h>
 7912+ 2			        save_psw
 7913+ 3  1958	85 D0 70	        mov     saved_psw,PSW
 7914+ 2			        endif
 7915+ 2  195B	B4 02 25	        cjne    a,#res,??0656
 7916+ 2			        ifnb    <004h>
 7917+ 2			        tst_psw <004h>,??0656
 7918+ 3  195E	E5 70		        mov     a,saved_psw
 7919+ 3  1960	54 C4		        anl     a,#0c4h
 7920+ 3  1962	64 04		        xrl     a,#004h
 7921+ 3  1964	54 FE		        anl     a,#0feh
 7922+ 3  1966	70 1B		        jnz     ??0656
 7923+ 2			        endif
 7924+ 1			        top_ma  subb,r5,??0656,<004h>
 7925+ 2  1968	7D C3		        mov     r5,#arg0
 7926+ 2  196A	74 C5		        mov     a,#arg1
 7927+ 2			        ifnb    <004h>
 7928+ 2			        set_cy  004h
 7929+ 3	N      0000	??0673  set     (004h and 1)
 7930+ 3	N      0000	        if      ??0673 eq 1
 7931+ 3			        setb    c
 7932+ 3			        else
 7933+ 3  196C	C3		        clr     c
 7934+ 3			        endif
 7935+ 2			        endif
 7936+ 2  196D	9D		        subb      a,r5
 7937+ 2			        ifnb    <004h>
 7938+ 2			        save_psw
 7939+ 3  196E	85 D0 70	        mov     saved_psw,PSW

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 143



 Line  I  Addr  Code            Source

 7940+ 2			        endif
 7941+ 2  1971	B4 02 0F	        cjne    a,#res,??0656
 7942+ 2			        ifnb    <004h>
 7943+ 2			        tst_psw <004h>,??0656
 7944+ 3  1974	E5 70		        mov     a,saved_psw
 7945+ 3  1976	54 C4		        anl     a,#0c4h
 7946+ 3  1978	64 04		        xrl     a,#004h
 7947+ 3  197A	54 FE		        anl     a,#0feh
 7948+ 3  197C	70 05		        jnz     ??0656
 7949+ 2			        endif
 7950+ 1
 7951+ 1			        eot     'c',??0656
 7952+ 2			        putc    #'c'
 7953+ 3  197E			??0675:
 7954+ 3			        ;jnb     SCON.1,putc_loop
 7955+ 3			        ;clr     SCON.1
 7956+ 3  197E	75 99 63	        mov     SBUF,#'c'
 7957+ 2  1981	80 06		        sjmp    ??0674
 7958+ 2  1983			??0656:  putc    #'?'
 7959+ 3  1983			??0676:
 7960+ 3			        ;jnb     SCON.1,putc_loop
 7961+ 3			        ;clr     SCON.1
 7962+ 3  1983	75 99 3F	        mov     SBUF,#'?'
 7963+ 2  1986	75 6E 01	        mov     fail,#001h
 7964+ 2  1989			??0674:
 7965+ 1
 7966+ 1			        top_ma  subb,r6,??0653,<004h>
 7967+ 2  1989	7E C3		        mov     r6,#arg0
 7968+ 2  198B	74 C5		        mov     a,#arg1
 7969+ 2			        ifnb    <004h>
 7970+ 2			        set_cy  004h
 7971+ 3	N      0000	??0677  set     (004h and 1)
 7972+ 3	N      0000	        if      ??0677 eq 1
 7973+ 3			        setb    c
 7974+ 3			        else
 7975+ 3  198D	C3		        clr     c
 7976+ 3			        endif
 7977+ 2			        endif
 7978+ 2  198E	9E		        subb      a,r6
 7979+ 2			        ifnb    <004h>
 7980+ 2			        save_psw
 7981+ 3  198F	85 D0 70	        mov     saved_psw,PSW
 7982+ 2			        endif
 7983+ 2  1992	B4 02 25	        cjne    a,#res,??0653
 7984+ 2			        ifnb    <004h>
 7985+ 2			        tst_psw <004h>,??0653
 7986+ 3  1995	E5 70		        mov     a,saved_psw
 7987+ 3  1997	54 C4		        anl     a,#0c4h
 7988+ 3  1999	64 04		        xrl     a,#004h
 7989+ 3  199B	54 FE		        anl     a,#0feh
 7990+ 3  199D	70 1B		        jnz     ??0653
 7991+ 2			        endif
 7992+ 1			        top_ma  subb,r7,??0653,<004h>
 7993+ 2  199F	7F C3		        mov     r7,#arg0
 7994+ 2  19A1	74 C5		        mov     a,#arg1
 7995+ 2			        ifnb    <004h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 144



 Line  I  Addr  Code            Source

 7996+ 2			        set_cy  004h
 7997+ 3	N      0000	??0678  set     (004h and 1)
 7998+ 3	N      0000	        if      ??0678 eq 1
 7999+ 3			        setb    c
 8000+ 3			        else
 8001+ 3  19A3	C3		        clr     c
 8002+ 3			        endif
 8003+ 2			        endif
 8004+ 2  19A4	9F		        subb      a,r7
 8005+ 2			        ifnb    <004h>
 8006+ 2			        save_psw
 8007+ 3  19A5	85 D0 70	        mov     saved_psw,PSW
 8008+ 2			        endif
 8009+ 2  19A8	B4 02 0F	        cjne    a,#res,??0653
 8010+ 2			        ifnb    <004h>
 8011+ 2			        tst_psw <004h>,??0653
 8012+ 3  19AB	E5 70		        mov     a,saved_psw
 8013+ 3  19AD	54 C4		        anl     a,#0c4h
 8014+ 3  19AF	64 04		        xrl     a,#004h
 8015+ 3  19B1	54 FE		        anl     a,#0feh
 8016+ 3  19B3	70 05		        jnz     ??0653
 8017+ 2			        endif
 8018+ 1
 8019+ 1			        eot     'd',??0653
 8020+ 2			        putc    #'d'
 8021+ 3  19B5			??0680:
 8022+ 3			        ;jnb     SCON.1,putc_loop
 8023+ 3			        ;clr     SCON.1
 8024+ 3  19B5	75 99 64	        mov     SBUF,#'d'
 8025+ 2  19B8	80 06		        sjmp    ??0679
 8026+ 2  19BA			??0653:  putc    #'?'
 8027+ 3  19BA			??0681:
 8028+ 3			        ;jnb     SCON.1,putc_loop
 8029+ 3			        ;clr     SCON.1
 8030+ 3  19BA	75 99 3F	        mov     SBUF,#'?'
 8031+ 2  19BD	75 6E 01	        mov     fail,#001h
 8032+ 2  19C0			??0679:
 8033+ 1
 8034+ 1			        ifb     <004h>
 8035+ 1
 8036+ 1			        top_mb  subb,a,??0657,<004h>
 8037+ 1			        top_mb  subb,dir0,??0657,<004h>
 8038+ 1
 8039+ 1			        eot     'e',??0657
 8040+ 1
 8041+ 1			        top_mc  subb,??0658,<004h>
 8042+ 1
 8043+ 1			        eot     'f',??0658
 8044+ 1			        endif
 8045:				        putc    #'3'
 8046+ 1  19C0			??0682:
 8047+ 1			        ;jnb     SCON.1,putc_loop
 8048+ 1			        ;clr     SCON.1
 8049+ 1  19C0	75 99 33	        mov     SBUF,#'3'
 8050:				        tst_alu subb,0c3h,0c5h,001h,005h     ; /CY  AC  OV (CY input)
 8051+ 1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 145



 Line  I  Addr  Code            Source

 8052+ 1	N      00C3	        arg0    set 0c3h
 8053+ 1	N      00C5	        arg1    set 0c5h
 8054+ 1	N      0001	        res     set 001h
 8055+ 1
 8056+ 1			        top_ma  subb,dir0,??0684,<005h>
 8057+ 2  19C3	75 60 C3	        mov     dir0,#arg0
 8058+ 2  19C6	74 C5		        mov     a,#arg1
 8059+ 2			        ifnb    <005h>
 8060+ 2			        set_cy  005h
 8061+ 3	N      0001	??0689  set     (005h and 1)
 8062+ 3	N      FFFF	        if      ??0689 eq 1
 8063+ 3  19C8	D3		        setb    c
 8064+ 3			        else
 8065+ 3			        clr     c
 8066+ 3			        endif
 8067+ 2			        endif
 8068+ 2  19C9	95 60		        subb      a,dir0
 8069+ 2			        ifnb    <005h>
 8070+ 2			        save_psw
 8071+ 3  19CB	85 D0 70	        mov     saved_psw,PSW
 8072+ 2			        endif
 8073+ 2  19CE	B4 01 6B	        cjne    a,#res,??0684
 8074+ 2			        ifnb    <005h>
 8075+ 2			        tst_psw <005h>,??0684
 8076+ 3  19D1	E5 70		        mov     a,saved_psw
 8077+ 3  19D3	54 C4		        anl     a,#0c4h
 8078+ 3  19D5	64 05		        xrl     a,#005h
 8079+ 3  19D7	54 FE		        anl     a,#0feh
 8080+ 3  19D9	70 61		        jnz     ??0684
 8081+ 2			        endif
 8082+ 1  19DB	78 60		        mov     r0,#dir0
 8083+ 1			        top_ma  subb,@r0,??0684,<005h>
 8084+ 2  19DD	76 C3		        mov     @r0,#arg0
 8085+ 2  19DF	74 C5		        mov     a,#arg1
 8086+ 2			        ifnb    <005h>
 8087+ 2			        set_cy  005h
 8088+ 3	N      0001	??0690  set     (005h and 1)
 8089+ 3	N      FFFF	        if      ??0690 eq 1
 8090+ 3  19E1	D3		        setb    c
 8091+ 3			        else
 8092+ 3			        clr     c
 8093+ 3			        endif
 8094+ 2			        endif
 8095+ 2  19E2	96		        subb      a,@r0
 8096+ 2			        ifnb    <005h>
 8097+ 2			        save_psw
 8098+ 3  19E3	85 D0 70	        mov     saved_psw,PSW
 8099+ 2			        endif
 8100+ 2  19E6	B4 01 53	        cjne    a,#res,??0684
 8101+ 2			        ifnb    <005h>
 8102+ 2			        tst_psw <005h>,??0684
 8103+ 3  19E9	E5 70		        mov     a,saved_psw
 8104+ 3  19EB	54 C4		        anl     a,#0c4h
 8105+ 3  19ED	64 05		        xrl     a,#005h
 8106+ 3  19EF	54 FE		        anl     a,#0feh
 8107+ 3  19F1	70 49		        jnz     ??0684

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 146



 Line  I  Addr  Code            Source

 8108+ 2			        endif
 8109+ 1  19F3	79 31		        mov     r1,#031h
 8110+ 1			        top_ma  subb,@r1,??0684,<005h>
 8111+ 2  19F5	77 C3		        mov     @r1,#arg0
 8112+ 2  19F7	74 C5		        mov     a,#arg1
 8113+ 2			        ifnb    <005h>
 8114+ 2			        set_cy  005h
 8115+ 3	N      0001	??0691  set     (005h and 1)
 8116+ 3	N      FFFF	        if      ??0691 eq 1
 8117+ 3  19F9	D3		        setb    c
 8118+ 3			        else
 8119+ 3			        clr     c
 8120+ 3			        endif
 8121+ 2			        endif
 8122+ 2  19FA	97		        subb      a,@r1
 8123+ 2			        ifnb    <005h>
 8124+ 2			        save_psw
 8125+ 3  19FB	85 D0 70	        mov     saved_psw,PSW
 8126+ 2			        endif
 8127+ 2  19FE	B4 01 3B	        cjne    a,#res,??0684
 8128+ 2			        ifnb    <005h>
 8129+ 2			        tst_psw <005h>,??0684
 8130+ 3  1A01	E5 70		        mov     a,saved_psw
 8131+ 3  1A03	54 C4		        anl     a,#0c4h
 8132+ 3  1A05	64 05		        xrl     a,#005h
 8133+ 3  1A07	54 FE		        anl     a,#0feh
 8134+ 3  1A09	70 31		        jnz     ??0684
 8135+ 2			        endif
 8136+ 1
 8137+ 1			        top_ma  subb,r0,??0684,<005h>
 8138+ 2  1A0B	78 C3		        mov     r0,#arg0
 8139+ 2  1A0D	74 C5		        mov     a,#arg1
 8140+ 2			        ifnb    <005h>
 8141+ 2			        set_cy  005h
 8142+ 3	N      0001	??0692  set     (005h and 1)
 8143+ 3	N      FFFF	        if      ??0692 eq 1
 8144+ 3  1A0F	D3		        setb    c
 8145+ 3			        else
 8146+ 3			        clr     c
 8147+ 3			        endif
 8148+ 2			        endif
 8149+ 2  1A10	98		        subb      a,r0
 8150+ 2			        ifnb    <005h>
 8151+ 2			        save_psw
 8152+ 3  1A11	85 D0 70	        mov     saved_psw,PSW
 8153+ 2			        endif
 8154+ 2  1A14	B4 01 25	        cjne    a,#res,??0684
 8155+ 2			        ifnb    <005h>
 8156+ 2			        tst_psw <005h>,??0684
 8157+ 3  1A17	E5 70		        mov     a,saved_psw
 8158+ 3  1A19	54 C4		        anl     a,#0c4h
 8159+ 3  1A1B	64 05		        xrl     a,#005h
 8160+ 3  1A1D	54 FE		        anl     a,#0feh
 8161+ 3  1A1F	70 1B		        jnz     ??0684
 8162+ 2			        endif
 8163+ 1			        top_ma  subb,r1,??0684,<005h>

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 147



 Line  I  Addr  Code            Source

 8164+ 2  1A21	79 C3		        mov     r1,#arg0
 8165+ 2  1A23	74 C5		        mov     a,#arg1
 8166+ 2			        ifnb    <005h>
 8167+ 2			        set_cy  005h
 8168+ 3	N      0001	??0693  set     (005h and 1)
 8169+ 3	N      FFFF	        if      ??0693 eq 1
 8170+ 3  1A25	D3		        setb    c
 8171+ 3			        else
 8172+ 3			        clr     c
 8173+ 3			        endif
 8174+ 2			        endif
 8175+ 2  1A26	99		        subb      a,r1
 8176+ 2			        ifnb    <005h>
 8177+ 2			        save_psw
 8178+ 3  1A27	85 D0 70	        mov     saved_psw,PSW
 8179+ 2			        endif
 8180+ 2  1A2A	B4 01 0F	        cjne    a,#res,??0684
 8181+ 2			        ifnb    <005h>
 8182+ 2			        tst_psw <005h>,??0684
 8183+ 3  1A2D	E5 70		        mov     a,saved_psw
 8184+ 3  1A2F	54 C4		        anl     a,#0c4h
 8185+ 3  1A31	64 05		        xrl     a,#005h
 8186+ 3  1A33	54 FE		        anl     a,#0feh
 8187+ 3  1A35	70 05		        jnz     ??0684
 8188+ 2			        endif
 8189+ 1
 8190+ 1			        eot     'a',??0684
 8191+ 2			        putc    #'a'
 8192+ 3  1A37			??0695:
 8193+ 3			        ;jnb     SCON.1,putc_loop
 8194+ 3			        ;clr     SCON.1
 8195+ 3  1A37	75 99 61	        mov     SBUF,#'a'
 8196+ 2  1A3A	80 06		        sjmp    ??0694
 8197+ 2  1A3C			??0684:  putc    #'?'
 8198+ 3  1A3C			??0696:
 8199+ 3			        ;jnb     SCON.1,putc_loop
 8200+ 3			        ;clr     SCON.1
 8201+ 3  1A3C	75 99 3F	        mov     SBUF,#'?'
 8202+ 2  1A3F	75 6E 01	        mov     fail,#001h
 8203+ 2  1A42			??0694:
 8204+ 1
 8205+ 1			        top_ma  subb,r2,??0685,<005h>
 8206+ 2  1A42	7A C3		        mov     r2,#arg0
 8207+ 2  1A44	74 C5		        mov     a,#arg1
 8208+ 2			        ifnb    <005h>
 8209+ 2			        set_cy  005h
 8210+ 3	N      0001	??0697  set     (005h and 1)
 8211+ 3	N      FFFF	        if      ??0697 eq 1
 8212+ 3  1A46	D3		        setb    c
 8213+ 3			        else
 8214+ 3			        clr     c
 8215+ 3			        endif
 8216+ 2			        endif
 8217+ 2  1A47	9A		        subb      a,r2
 8218+ 2			        ifnb    <005h>
 8219+ 2			        save_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 148



 Line  I  Addr  Code            Source

 8220+ 3  1A48	85 D0 70	        mov     saved_psw,PSW
 8221+ 2			        endif
 8222+ 2  1A4B	B4 01 25	        cjne    a,#res,??0685
 8223+ 2			        ifnb    <005h>
 8224+ 2			        tst_psw <005h>,??0685
 8225+ 3  1A4E	E5 70		        mov     a,saved_psw
 8226+ 3  1A50	54 C4		        anl     a,#0c4h
 8227+ 3  1A52	64 05		        xrl     a,#005h
 8228+ 3  1A54	54 FE		        anl     a,#0feh
 8229+ 3  1A56	70 1B		        jnz     ??0685
 8230+ 2			        endif
 8231+ 1			        top_ma  subb,r3,??0685,<005h>
 8232+ 2  1A58	7B C3		        mov     r3,#arg0
 8233+ 2  1A5A	74 C5		        mov     a,#arg1
 8234+ 2			        ifnb    <005h>
 8235+ 2			        set_cy  005h
 8236+ 3	N      0001	??0698  set     (005h and 1)
 8237+ 3	N      FFFF	        if      ??0698 eq 1
 8238+ 3  1A5C	D3		        setb    c
 8239+ 3			        else
 8240+ 3			        clr     c
 8241+ 3			        endif
 8242+ 2			        endif
 8243+ 2  1A5D	9B		        subb      a,r3
 8244+ 2			        ifnb    <005h>
 8245+ 2			        save_psw
 8246+ 3  1A5E	85 D0 70	        mov     saved_psw,PSW
 8247+ 2			        endif
 8248+ 2  1A61	B4 01 0F	        cjne    a,#res,??0685
 8249+ 2			        ifnb    <005h>
 8250+ 2			        tst_psw <005h>,??0685
 8251+ 3  1A64	E5 70		        mov     a,saved_psw
 8252+ 3  1A66	54 C4		        anl     a,#0c4h
 8253+ 3  1A68	64 05		        xrl     a,#005h
 8254+ 3  1A6A	54 FE		        anl     a,#0feh
 8255+ 3  1A6C	70 05		        jnz     ??0685
 8256+ 2			        endif
 8257+ 1
 8258+ 1			        eot     'b',??0685
 8259+ 2			        putc    #'b'
 8260+ 3  1A6E			??0700:
 8261+ 3			        ;jnb     SCON.1,putc_loop
 8262+ 3			        ;clr     SCON.1
 8263+ 3  1A6E	75 99 62	        mov     SBUF,#'b'
 8264+ 2  1A71	80 06		        sjmp    ??0699
 8265+ 2  1A73			??0685:  putc    #'?'
 8266+ 3  1A73			??0701:
 8267+ 3			        ;jnb     SCON.1,putc_loop
 8268+ 3			        ;clr     SCON.1
 8269+ 3  1A73	75 99 3F	        mov     SBUF,#'?'
 8270+ 2  1A76	75 6E 01	        mov     fail,#001h
 8271+ 2  1A79			??0699:
 8272+ 1
 8273+ 1			        top_ma  subb,r4,??0686,<005h>
 8274+ 2  1A79	7C C3		        mov     r4,#arg0
 8275+ 2  1A7B	74 C5		        mov     a,#arg1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 149



 Line  I  Addr  Code            Source

 8276+ 2			        ifnb    <005h>
 8277+ 2			        set_cy  005h
 8278+ 3	N      0001	??0702  set     (005h and 1)
 8279+ 3	N      FFFF	        if      ??0702 eq 1
 8280+ 3  1A7D	D3		        setb    c
 8281+ 3			        else
 8282+ 3			        clr     c
 8283+ 3			        endif
 8284+ 2			        endif
 8285+ 2  1A7E	9C		        subb      a,r4
 8286+ 2			        ifnb    <005h>
 8287+ 2			        save_psw
 8288+ 3  1A7F	85 D0 70	        mov     saved_psw,PSW
 8289+ 2			        endif
 8290+ 2  1A82	B4 01 25	        cjne    a,#res,??0686
 8291+ 2			        ifnb    <005h>
 8292+ 2			        tst_psw <005h>,??0686
 8293+ 3  1A85	E5 70		        mov     a,saved_psw
 8294+ 3  1A87	54 C4		        anl     a,#0c4h
 8295+ 3  1A89	64 05		        xrl     a,#005h
 8296+ 3  1A8B	54 FE		        anl     a,#0feh
 8297+ 3  1A8D	70 1B		        jnz     ??0686
 8298+ 2			        endif
 8299+ 1			        top_ma  subb,r5,??0686,<005h>
 8300+ 2  1A8F	7D C3		        mov     r5,#arg0
 8301+ 2  1A91	74 C5		        mov     a,#arg1
 8302+ 2			        ifnb    <005h>
 8303+ 2			        set_cy  005h
 8304+ 3	N      0001	??0703  set     (005h and 1)
 8305+ 3	N      FFFF	        if      ??0703 eq 1
 8306+ 3  1A93	D3		        setb    c
 8307+ 3			        else
 8308+ 3			        clr     c
 8309+ 3			        endif
 8310+ 2			        endif
 8311+ 2  1A94	9D		        subb      a,r5
 8312+ 2			        ifnb    <005h>
 8313+ 2			        save_psw
 8314+ 3  1A95	85 D0 70	        mov     saved_psw,PSW
 8315+ 2			        endif
 8316+ 2  1A98	B4 01 0F	        cjne    a,#res,??0686
 8317+ 2			        ifnb    <005h>
 8318+ 2			        tst_psw <005h>,??0686
 8319+ 3  1A9B	E5 70		        mov     a,saved_psw
 8320+ 3  1A9D	54 C4		        anl     a,#0c4h
 8321+ 3  1A9F	64 05		        xrl     a,#005h
 8322+ 3  1AA1	54 FE		        anl     a,#0feh
 8323+ 3  1AA3	70 05		        jnz     ??0686
 8324+ 2			        endif
 8325+ 1
 8326+ 1			        eot     'c',??0686
 8327+ 2			        putc    #'c'
 8328+ 3  1AA5			??0705:
 8329+ 3			        ;jnb     SCON.1,putc_loop
 8330+ 3			        ;clr     SCON.1
 8331+ 3  1AA5	75 99 63	        mov     SBUF,#'c'

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 150



 Line  I  Addr  Code            Source

 8332+ 2  1AA8	80 06		        sjmp    ??0704
 8333+ 2  1AAA			??0686:  putc    #'?'
 8334+ 3  1AAA			??0706:
 8335+ 3			        ;jnb     SCON.1,putc_loop
 8336+ 3			        ;clr     SCON.1
 8337+ 3  1AAA	75 99 3F	        mov     SBUF,#'?'
 8338+ 2  1AAD	75 6E 01	        mov     fail,#001h
 8339+ 2  1AB0			??0704:
 8340+ 1
 8341+ 1			        top_ma  subb,r6,??0683,<005h>
 8342+ 2  1AB0	7E C3		        mov     r6,#arg0
 8343+ 2  1AB2	74 C5		        mov     a,#arg1
 8344+ 2			        ifnb    <005h>
 8345+ 2			        set_cy  005h
 8346+ 3	N      0001	??0707  set     (005h and 1)
 8347+ 3	N      FFFF	        if      ??0707 eq 1
 8348+ 3  1AB4	D3		        setb    c
 8349+ 3			        else
 8350+ 3			        clr     c
 8351+ 3			        endif
 8352+ 2			        endif
 8353+ 2  1AB5	9E		        subb      a,r6
 8354+ 2			        ifnb    <005h>
 8355+ 2			        save_psw
 8356+ 3  1AB6	85 D0 70	        mov     saved_psw,PSW
 8357+ 2			        endif
 8358+ 2  1AB9	B4 01 25	        cjne    a,#res,??0683
 8359+ 2			        ifnb    <005h>
 8360+ 2			        tst_psw <005h>,??0683
 8361+ 3  1ABC	E5 70		        mov     a,saved_psw
 8362+ 3  1ABE	54 C4		        anl     a,#0c4h
 8363+ 3  1AC0	64 05		        xrl     a,#005h
 8364+ 3  1AC2	54 FE		        anl     a,#0feh
 8365+ 3  1AC4	70 1B		        jnz     ??0683
 8366+ 2			        endif
 8367+ 1			        top_ma  subb,r7,??0683,<005h>
 8368+ 2  1AC6	7F C3		        mov     r7,#arg0
 8369+ 2  1AC8	74 C5		        mov     a,#arg1
 8370+ 2			        ifnb    <005h>
 8371+ 2			        set_cy  005h
 8372+ 3	N      0001	??0708  set     (005h and 1)
 8373+ 3	N      FFFF	        if      ??0708 eq 1
 8374+ 3  1ACA	D3		        setb    c
 8375+ 3			        else
 8376+ 3			        clr     c
 8377+ 3			        endif
 8378+ 2			        endif
 8379+ 2  1ACB	9F		        subb      a,r7
 8380+ 2			        ifnb    <005h>
 8381+ 2			        save_psw
 8382+ 3  1ACC	85 D0 70	        mov     saved_psw,PSW
 8383+ 2			        endif
 8384+ 2  1ACF	B4 01 0F	        cjne    a,#res,??0683
 8385+ 2			        ifnb    <005h>
 8386+ 2			        tst_psw <005h>,??0683
 8387+ 3  1AD2	E5 70		        mov     a,saved_psw

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 151



 Line  I  Addr  Code            Source

 8388+ 3  1AD4	54 C4		        anl     a,#0c4h
 8389+ 3  1AD6	64 05		        xrl     a,#005h
 8390+ 3  1AD8	54 FE		        anl     a,#0feh
 8391+ 3  1ADA	70 05		        jnz     ??0683
 8392+ 2			        endif
 8393+ 1
 8394+ 1			        eot     'd',??0683
 8395+ 2			        putc    #'d'
 8396+ 3  1ADC			??0710:
 8397+ 3			        ;jnb     SCON.1,putc_loop
 8398+ 3			        ;clr     SCON.1
 8399+ 3  1ADC	75 99 64	        mov     SBUF,#'d'
 8400+ 2  1ADF	80 06		        sjmp    ??0709
 8401+ 2  1AE1			??0683:  putc    #'?'
 8402+ 3  1AE1			??0711:
 8403+ 3			        ;jnb     SCON.1,putc_loop
 8404+ 3			        ;clr     SCON.1
 8405+ 3  1AE1	75 99 3F	        mov     SBUF,#'?'
 8406+ 2  1AE4	75 6E 01	        mov     fail,#001h
 8407+ 2  1AE7			??0709:
 8408+ 1
 8409+ 1			        ifb     <005h>
 8410+ 1
 8411+ 1			        top_mb  subb,a,??0687,<005h>
 8412+ 1			        top_mb  subb,dir0,??0687,<005h>
 8413+ 1
 8414+ 1			        eot     'e',??0687
 8415+ 1
 8416+ 1			        top_mc  subb,??0688,<005h>
 8417+ 1
 8418+ 1			        eot     'f',??0688
 8419+ 1			        endif
 8420:
 8421:				        ; FIXME subb tests are specially weak
 8422:
 8423:				        put_crlf                    ; end of test series
 8424+ 1			        putc    #13
 8425+ 2  1AE7			??0712:
 8426+ 2			        ;jnb     SCON.1,putc_loop
 8427+ 2			        ;clr     SCON.1
 8428+ 2  1AE7	75 99 0D	        mov     SBUF,#13
 8429+ 1			        putc    #10
 8430+ 2  1AEA			??0713:
 8431+ 2			        ;jnb     SCON.1,putc_loop
 8432+ 2			        ;clr     SCON.1
 8433+ 2  1AEA	75 99 0A	        mov     SBUF,#10
 8434:
 8435:
 8436:				        ;-- Test series O ------------------------------------------------------
 8437:				        ; PUSH and POP
 8438:				        ; a.- <PUSH dir (IRAM)>
 8439:				        ; b.- <POP dir (IRAM)>
 8440:				        ; c.- <PUSH dir (SFR)>
 8441:				        ; d.- <POP dir (SFR)>
 8442:
 8443:				        putc    #'O'                ; start of test series

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 152



 Line  I  Addr  Code            Source

 8444+ 1  1AED			??0714:
 8445+ 1			        ;jnb     SCON.1,putc_loop
 8446+ 1			        ;clr     SCON.1
 8447+ 1  1AED	75 99 4F	        mov     SBUF,#'O'
 8448:
 8449:				        ; <PUSH dir (IRAM)>
 8450:	  1AF0	75 81 9F	        mov     SP,#stack0          ; prepare SP...
 8451:	  1AF3	75 60 12	        mov     dir0,#012h          ; ...and data to be pushed
 8452:	  1AF6	78 A0		        mov     r0,#(stack0+1)      ; r0->stack so we can verify data is pushed
 8453:	  1AF8	76 00		        mov     @r0,#000h           ; clear target stack location
 8454:	  1AFA	C0 60		        push    dir0                ; <PUSH dir>
 8455:	  1AFC	E6		        mov     a,@r0               ; verify data has been pushed
 8456:	  1AFD	B4 12 0A	        cjne    a,#012h,to_a0
 8457:	  1B00	E5 81		        mov     a,SP                ; verify SP has been incremented
 8458:	  1B02	B4 A0 05	        cjne    a,#(stack0+1),to_a0
 8459:
 8460:				        eot     'a',to_a0
 8461+ 1			        putc    #'a'
 8462+ 2  1B05			??0716:
 8463+ 2			        ;jnb     SCON.1,putc_loop
 8464+ 2			        ;clr     SCON.1
 8465+ 2  1B05	75 99 61	        mov     SBUF,#'a'
 8466+ 1  1B08	80 06		        sjmp    ??0715
 8467+ 1  1B0A			to_a0:  putc    #'?'
 8468+ 2  1B0A			??0717:
 8469+ 2			        ;jnb     SCON.1,putc_loop
 8470+ 2			        ;clr     SCON.1
 8471+ 2  1B0A	75 99 3F	        mov     SBUF,#'?'
 8472+ 1  1B0D	75 6E 01	        mov     fail,#001h
 8473+ 1  1B10			??0715:
 8474:
 8475:				        ; <POP dir (IRAM)> We'll use the data that was pushed previously
 8476:	  1B10	75 61 00	        mov     dir1,#000h          ; clear POP target
 8477:	  1B13	E4		        clr     a
 8478:	  1B14	D0 61		        pop     dir1                ; <POP dir>
 8479:	  1B16	79 61		        mov     r1,#dir1            ; verify data has been popped
 8480:	  1B18	E7		        mov     a,@r1
 8481:	  1B19	B4 12 0A	        cjne    a,#012h,to_b0
 8482:	  1B1C	E5 81		        mov     a,SP                ; verify SP has been decremented
 8483:	  1B1E	B4 9F 05	        cjne    a,#stack0,to_b0
 8484:
 8485:				        eot     'b',to_b0
 8486+ 1			        putc    #'b'
 8487+ 2  1B21			??0719:
 8488+ 2			        ;jnb     SCON.1,putc_loop
 8489+ 2			        ;clr     SCON.1
 8490+ 2  1B21	75 99 62	        mov     SBUF,#'b'
 8491+ 1  1B24	80 06		        sjmp    ??0718
 8492+ 1  1B26			to_b0:  putc    #'?'
 8493+ 2  1B26			??0720:
 8494+ 2			        ;jnb     SCON.1,putc_loop
 8495+ 2			        ;clr     SCON.1
 8496+ 2  1B26	75 99 3F	        mov     SBUF,#'?'
 8497+ 1  1B29	75 6E 01	        mov     fail,#001h
 8498+ 1  1B2C			??0718:
 8499:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 153



 Line  I  Addr  Code            Source

 8500:				        ; <PUSH dir (SFR)>
 8501:	  1B2C	75 81 9F	        mov     SP,#stack0          ; prepare SP...
 8502:	  1B2F	75 F0 42	        mov     B,#042h             ; ...and data to be pushed
 8503:	  1B32	78 A0		        mov     r0,#(stack0+1)      ; r0->stack so we can verify data is pushed
 8504:	  1B34	76 00		        mov     @r0,#000h           ; clear target stack location
 8505:	  1B36	C0 F0		        push    B                   ; <PUSH dir>
 8506:	  1B38	E6		        mov     a,@r0               ; verify data has been pushed
 8507:	  1B39	B4 42 0A	        cjne    a,#042h,to_c0
 8508:	  1B3C	E5 81		        mov     a,SP                ; verify SP has been incremented
 8509:	  1B3E	B4 A0 05	        cjne    a,#(stack0+1),to_c0
 8510:
 8511:				        eot     'c',to_c0
 8512+ 1			        putc    #'c'
 8513+ 2  1B41			??0722:
 8514+ 2			        ;jnb     SCON.1,putc_loop
 8515+ 2			        ;clr     SCON.1
 8516+ 2  1B41	75 99 63	        mov     SBUF,#'c'
 8517+ 1  1B44	80 06		        sjmp    ??0721
 8518+ 1  1B46			to_c0:  putc    #'?'
 8519+ 2  1B46			??0723:
 8520+ 2			        ;jnb     SCON.1,putc_loop
 8521+ 2			        ;clr     SCON.1
 8522+ 2  1B46	75 99 3F	        mov     SBUF,#'?'
 8523+ 1  1B49	75 6E 01	        mov     fail,#001h
 8524+ 1  1B4C			??0721:
 8525:
 8526:				        ; <POP dir (SFR)> We'll use the data that was pushed previously
 8527:	  1B4C	75 F0 00	        mov     B,#000h             ; clear POP target
 8528:	  1B4F	E4		        clr     a
 8529:	  1B50	D0 F0		        pop     B                   ; <POP dir>
 8530:	  1B52	E5 F0		        mov     a,B                 ; verify data has been popped
 8531:	  1B54	B4 42 0A	        cjne    a,#042h,to_d0
 8532:	  1B57	E5 81		        mov     a,SP                ; verify SP has been decremented
 8533:	  1B59	B4 9F 05	        cjne    a,#stack0,to_d0
 8534:
 8535:				        eot     'd',to_d0
 8536+ 1			        putc    #'d'
 8537+ 2  1B5C			??0725:
 8538+ 2			        ;jnb     SCON.1,putc_loop
 8539+ 2			        ;clr     SCON.1
 8540+ 2  1B5C	75 99 64	        mov     SBUF,#'d'
 8541+ 1  1B5F	80 06		        sjmp    ??0724
 8542+ 1  1B61			to_d0:  putc    #'?'
 8543+ 2  1B61			??0726:
 8544+ 2			        ;jnb     SCON.1,putc_loop
 8545+ 2			        ;clr     SCON.1
 8546+ 2  1B61	75 99 3F	        mov     SBUF,#'?'
 8547+ 1  1B64	75 6E 01	        mov     fail,#001h
 8548+ 1  1B67			??0724:
 8549:
 8550:				        put_crlf                    ; end of test series
 8551+ 1			        putc    #13
 8552+ 2  1B67			??0727:
 8553+ 2			        ;jnb     SCON.1,putc_loop
 8554+ 2			        ;clr     SCON.1
 8555+ 2  1B67	75 99 0D	        mov     SBUF,#13

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 154



 Line  I  Addr  Code            Source

 8556+ 1			        putc    #10
 8557+ 2  1B6A			??0728:
 8558+ 2			        ;jnb     SCON.1,putc_loop
 8559+ 2			        ;clr     SCON.1
 8560+ 2  1B6A	75 99 0A	        mov     SBUF,#10
 8561:
 8562:				        ;-- Test series P ------------------------------------------------------
 8563:				        ; Access to XRAM -- note that current tests are bare-bone minimal!
 8564:				        ; a.- <MOV DPTR, #16>
 8565:				        ; b.- <MOVX @DPTR, A>, <MOVX A, @DPTR>
 8566:				        ; c.- <MOVX A, @Ri>
 8567:				        ; d.- <MOVX @Ri, A>
 8568:
 8569:				        putc    #'P'                ; start of test series
 8570+ 1  1B6D			??0729:
 8571+ 1			        ;jnb     SCON.1,putc_loop
 8572+ 1			        ;clr     SCON.1
 8573+ 1  1B6D	75 99 50	        mov     SBUF,#'P'
 8574:
 8575:				        ; a.- <MOV DPTR, #16>
 8576:	  1B70	75 83 65	        mov     DPH,#065h           ; initialize DPTR with known value...
 8577:	  1B73	75 82 43	        mov     DPL,#043h
 8578:
 8579:	  1B76	90 01 23	        mov     DPTR,#0123h         ; ...then load it through MOV...
 8580:	  1B79	E5 83		        mov     a,DPH               ; ...and verify the load
 8581:	  1B7B	B4 01 0A	        cjne    a,#01h,tp_a0
 8582:	  1B7E	E5 82		        mov     a,DPL
 8583:	  1B80	B4 23 05	        cjne    a,#23h,tp_a0
 8584:
 8585:				        eot     'a',tp_a0
 8586+ 1			        putc    #'a'
 8587+ 2  1B83			??0731:
 8588+ 2			        ;jnb     SCON.1,putc_loop
 8589+ 2			        ;clr     SCON.1
 8590+ 2  1B83	75 99 61	        mov     SBUF,#'a'
 8591+ 1  1B86	80 06		        sjmp    ??0730
 8592+ 1  1B88			tp_a0:  putc    #'?'
 8593+ 2  1B88			??0732:
 8594+ 2			        ;jnb     SCON.1,putc_loop
 8595+ 2			        ;clr     SCON.1
 8596+ 2  1B88	75 99 3F	        mov     SBUF,#'?'
 8597+ 1  1B8B	75 6E 01	        mov     fail,#001h
 8598+ 1  1B8E			??0730:
 8599:
 8600:
 8601:				        ; b.- <MOVX @DPTR, A>, <MOVX A, @DPTR>
 8602:				        ; We have no independent means to verify XRAM writes or reads, other
 8603:				        ; than the very instructions we're testing. So we should store a data
 8604:				        ; pattern on XRAM that is difficult to get back 'by chance'.
 8605:				        ; Ideally we would try all areas of XRAM, back-to-back operations, etc.
 8606:				        ; For the time being a simple word store will suffice.
 8607:	  1B8E	90 00 13	        mov     DPTR,#0013h         ; Store 55h, aah at XRAM[0013h]...
 8608:	  1B91	74 55		        mov     A,#55h
 8609:	  1B93	F0		        movx    @DPTR,a
 8610:	  1B94	A3		        inc     DPTR
 8611:	  1B95	F4		        cpl     a

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 155



 Line  I  Addr  Code            Source

 8612:	  1B96	F0		        movx    @DPTR,a
 8613:
 8614:	  1B97	90 00 13	        mov     DPTR,#0013h         ; ...then verify the store
 8615:	  1B9A	E0		        movx    a,@DPTR
 8616:	  1B9B	B4 55 0A	        cjne    a,#55h,tp_b0
 8617:	  1B9E	A3		        inc     DPTR
 8618:	  1B9F	E0		        movx    a,@DPTR
 8619:	  1BA0	B4 AA 05	        cjne    a,#0aah,tp_b0
 8620:
 8621:				        eot     'b',tp_b0
 8622+ 1			        putc    #'b'
 8623+ 2  1BA3			??0734:
 8624+ 2			        ;jnb     SCON.1,putc_loop
 8625+ 2			        ;clr     SCON.1
 8626+ 2  1BA3	75 99 62	        mov     SBUF,#'b'
 8627+ 1  1BA6	80 06		        sjmp    ??0733
 8628+ 1  1BA8			tp_b0:  putc    #'?'
 8629+ 2  1BA8			??0735:
 8630+ 2			        ;jnb     SCON.1,putc_loop
 8631+ 2			        ;clr     SCON.1
 8632+ 2  1BA8	75 99 3F	        mov     SBUF,#'?'
 8633+ 1  1BAB	75 6E 01	        mov     fail,#001h
 8634+ 1  1BAE			??0733:
 8635:
 8636:				        ; c.- <MOVX A, @Ri>
 8637:	  1BAE	74 79		        mov     a,#79h              ; change A and DPTR so we can catch fails
 8638:	  1BB0	90 00 00	        mov     dptr,#0000h
 8639:	  1BB3	78 13		        mov     r0,#13h             ; read back the same data again through
 8640:	  1BB5	79 14		        mov     r1,#14h             ; indexed addressing...
 8641:	  1BB7	E2		        movx    a,@r0
 8642:	  1BB8	B4 55 09	        cjne    a,#55h,tp_c0
 8643:	  1BBB	E3		        movx    a,@r1
 8644:	  1BBC	B4 AA 05	        cjne    a,#0aah,tp_c0
 8645:
 8646:				        eot     'c',tp_c0
 8647+ 1			        putc    #'c'
 8648+ 2  1BBF			??0737:
 8649+ 2			        ;jnb     SCON.1,putc_loop
 8650+ 2			        ;clr     SCON.1
 8651+ 2  1BBF	75 99 63	        mov     SBUF,#'c'
 8652+ 1  1BC2	80 06		        sjmp    ??0736
 8653+ 1  1BC4			tp_c0:  putc    #'?'
 8654+ 2  1BC4			??0738:
 8655+ 2			        ;jnb     SCON.1,putc_loop
 8656+ 2			        ;clr     SCON.1
 8657+ 2  1BC4	75 99 3F	        mov     SBUF,#'?'
 8658+ 1  1BC7	75 6E 01	        mov     fail,#001h
 8659+ 1  1BCA			??0736:
 8660:
 8661:				        put_crlf                    ; end of test series
 8662+ 1			        putc    #13
 8663+ 2  1BCA			??0739:
 8664+ 2			        ;jnb     SCON.1,putc_loop
 8665+ 2			        ;clr     SCON.1
 8666+ 2  1BCA	75 99 0D	        mov     SBUF,#13
 8667+ 1			        putc    #10

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 156



 Line  I  Addr  Code            Source

 8668+ 2  1BCD			??0740:
 8669+ 2			        ;jnb     SCON.1,putc_loop
 8670+ 2			        ;clr     SCON.1
 8671+ 2  1BCD	75 99 0A	        mov     SBUF,#10
 8672:
 8673:				        ;-- Test series Q ------------------------------------------------------
 8674:				        ; MOVC instructions
 8675:				        ; a.- <MOVC A, @A + PC>
 8676:				        ; b.- <MOVC A, @A + DPTR>
 8677:
 8678:				        putc    #'Q'                ; start of test series
 8679+ 1  1BD0			??0741:
 8680+ 1			        ;jnb     SCON.1,putc_loop
 8681+ 1			        ;clr     SCON.1
 8682+ 1  1BD0	75 99 51	        mov     SBUF,#'Q'
 8683:
 8684:				        ; a.- <MOVC A, @A + PC>
 8685:	  1BD3	74 03		        mov     a,#03h              ; we'll read the 4th byte in the table...
 8686:	  1BD5	24 02		        add     a,#02h              ; ...and must account for intervening sjmp
 8687:	  1BD7	83		        movc    a,@a+PC
 8688:	  1BD8	80 04		        sjmp    tq0
 8689:
 8690:	  1BDA	07 13 19 21	tq1:    db      07h, 13h, 19h, 21h
 8691:	  1BDE	B4 21 05	tq0:    cjne    a,#21h,tq_a0
 8692:
 8693:				        eot     'a',tq_a0
 8694+ 1			        putc    #'a'
 8695+ 2  1BE1			??0743:
 8696+ 2			        ;jnb     SCON.1,putc_loop
 8697+ 2			        ;clr     SCON.1
 8698+ 2  1BE1	75 99 61	        mov     SBUF,#'a'
 8699+ 1  1BE4	80 06		        sjmp    ??0742
 8700+ 1  1BE6			tq_a0:  putc    #'?'
 8701+ 2  1BE6			??0744:
 8702+ 2			        ;jnb     SCON.1,putc_loop
 8703+ 2			        ;clr     SCON.1
 8704+ 2  1BE6	75 99 3F	        mov     SBUF,#'?'
 8705+ 1  1BE9	75 6E 01	        mov     fail,#001h
 8706+ 1  1BEC			??0742:
 8707:
 8708:				        ; b.- <MOVC A, @A + DPTR>
 8709:	  1BEC	90 1B DA	        mov   DPTR,#tq1
 8710:
 8711:	  1BEF	74 00		        mov   a,#00h
 8712:	  1BF1	93		        movc  a,@a+DPTR
 8713:	  1BF2	B4 07 17	        cjne  a,#07h,tq_b0
 8714:
 8715:	  1BF5	74 01		        mov   a,#01h
 8716:	  1BF7	93		        movc  a,@a+DPTR
 8717:	  1BF8	B4 13 11	        cjne  a,#13h,tq_b0
 8718:
 8719:	  1BFB	74 02		        mov   a,#02h
 8720:	  1BFD	93		        movc  a,@a+DPTR
 8721:	  1BFE	B4 19 0B	        cjne  a,#19h,tq_b0
 8722:
 8723:	  1C01	74 03		        mov   a,#03h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 157



 Line  I  Addr  Code            Source

 8724:	  1C03	93		        movc  a,@a+DPTR
 8725:	  1C04	B4 21 05	        cjne  a,#21h,tq_b0
 8726:
 8727:				        eot     'b',tq_b0
 8728+ 1			        putc    #'b'
 8729+ 2  1C07			??0746:
 8730+ 2			        ;jnb     SCON.1,putc_loop
 8731+ 2			        ;clr     SCON.1
 8732+ 2  1C07	75 99 62	        mov     SBUF,#'b'
 8733+ 1  1C0A	80 06		        sjmp    ??0745
 8734+ 1  1C0C			tq_b0:  putc    #'?'
 8735+ 2  1C0C			??0747:
 8736+ 2			        ;jnb     SCON.1,putc_loop
 8737+ 2			        ;clr     SCON.1
 8738+ 2  1C0C	75 99 3F	        mov     SBUF,#'?'
 8739+ 1  1C0F	75 6E 01	        mov     fail,#001h
 8740+ 1  1C12			??0745:
 8741:
 8742:				        put_crlf                    ; end of test series
 8743+ 1			        putc    #13
 8744+ 2  1C12			??0748:
 8745+ 2			        ;jnb     SCON.1,putc_loop
 8746+ 2			        ;clr     SCON.1
 8747+ 2  1C12	75 99 0D	        mov     SBUF,#13
 8748+ 1			        putc    #10
 8749+ 2  1C15			??0749:
 8750+ 2			        ;jnb     SCON.1,putc_loop
 8751+ 2			        ;clr     SCON.1
 8752+ 2  1C15	75 99 0A	        mov     SBUF,#10
 8753:
 8754:
 8755:				        ;-- Test series R ------------------------------------------------------
 8756:				        ; ACALL, LCALL, JMP @A+DPTR, LJMP instructions
 8757:				        ; a.- <ACALL addr8>     <-- uses LJMP too
 8758:				        ; b.- <LCALL addr16>    <-- uses LJMP too
 8759:				        ; c.- <JMP @A+DPTR>
 8760:				        ; d.- <LJMP addr16>
 8761:				        ;
 8762:				        ; Biggest limitations:
 8763:				        ; .- Only long jumps; jumps to same page (== H addr byte) untested.
 8764:				        ;
 8765:				        ; Note RET is NOT tested here! we don't return from these calls, just
 8766:				        ; use them as jumps.
 8767:				        ;
 8768:
 8769:				        putc    #'R'                ; start of test series
 8770+ 1  1C18			??0750:
 8771+ 1			        ;jnb     SCON.1,putc_loop
 8772+ 1			        ;clr     SCON.1
 8773+ 1  1C18	75 99 52	        mov     SBUF,#'R'
 8774:
 8775:	  1C1B	75 81 4F	        mov     SP,#4fh             ; Initialize SP...
 8776:	  1C1E	75 50 00	        mov     50h,#00h            ; ...and clear stack area
 8777:	  1C21	75 51 00	        mov     51h,#00h
 8778:	  1C24	75 52 00	        mov     52h,#00h
 8779:	  1C27	75 53 00	        mov     53h,#00h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 158



 Line  I  Addr  Code            Source

 8780:
 8781:				        ; a.- <ACALL addr8>
 8782:				        ; We should test all code pages eventually...
 8783:	  1C2A	91 2E		        acall   tr_sub0             ; Do the call...
 8784:	  1C2C	80 14		tr_rv0: sjmp    tr_a0
 8785:	  1C2E			tr_sub0:
 8786:	  1C2E	E5 81		        mov     A,SP
 8787:	  1C30	B4 51 0F	        cjne    A,#51h,tr_a0       ; ...verify the SP value...
 8788:	  1C33	E5 50		        mov     A,50h
 8789:	  1C35	B4 2C 0A	        cjne    A,#LOW(tr_rv0),tr_a0 ; ...and verify the pushed ret address
 8790:	  1C38	E5 51		        mov     A,51h
 8791:	  1C3A	B4 1C 05	        cjne    A,#HIGH(tr_rv0),tr_a0
 8792:
 8793:				        eot     'a',tr_a0
 8794+ 1			        putc    #'a'
 8795+ 2  1C3D			??0752:
 8796+ 2			        ;jnb     SCON.1,putc_loop
 8797+ 2			        ;clr     SCON.1
 8798+ 2  1C3D	75 99 61	        mov     SBUF,#'a'
 8799+ 1  1C40	80 06		        sjmp    ??0751
 8800+ 1  1C42			tr_a0:  putc    #'?'
 8801+ 2  1C42			??0753:
 8802+ 2			        ;jnb     SCON.1,putc_loop
 8803+ 2			        ;clr     SCON.1
 8804+ 2  1C42	75 99 3F	        mov     SBUF,#'?'
 8805+ 1  1C45	75 6E 01	        mov     fail,#001h
 8806+ 1  1C48			??0751:
 8807:
 8808:				        ; b.- <LCALL addr16>
 8809:	  1C48	12 80 0C	        lcall   tr_sub1             ; Do the call...
 8810:	  1C4B	80 06		tr_rv1: sjmp    tr_b0
 8811:	  1C4D	00		tr_rv2: nop
 8812:				        eot     'b',tr_b0
 8813+ 1			        putc    #'b'
 8814+ 2  1C4E			??0755:
 8815+ 2			        ;jnb     SCON.1,putc_loop
 8816+ 2			        ;clr     SCON.1
 8817+ 2  1C4E	75 99 62	        mov     SBUF,#'b'
 8818+ 1  1C51	80 06		        sjmp    ??0754
 8819+ 1  1C53			tr_b0:  putc    #'?'
 8820+ 2  1C53			??0756:
 8821+ 2			        ;jnb     SCON.1,putc_loop
 8822+ 2			        ;clr     SCON.1
 8823+ 2  1C53	75 99 3F	        mov     SBUF,#'?'
 8824+ 1  1C56	75 6E 01	        mov     fail,#001h
 8825+ 1  1C59			??0754:
 8826:
 8827:
 8828:				        ; c.- <JMP @A+DPTR>
 8829:				        ; Note that tr_sub2 is at 8000h so that we test the A+DPTR carry
 8830:				        ; propagation. Any address xx00h would do.
 8831:	  1C59	90 7F CD	        mov     DPTR,#(tr_sub2-33h) ; Prepare DPTR and A so that their sum
 8832:	  1C5C	74 33		        mov     a,#33h              ; gives the target address.
 8833:	  1C5E	73		        jmp     @a+DPTR
 8834:	  1C5F	02 1C 71	        jmp     tr_c0
 8835:	  1C62	00		        nop

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 159



 Line  I  Addr  Code            Source

 8836:	  1C63	00		        nop
 8837:	  1C64	74 00		tr_rv3: mov     a,#00h
 8838:	  1C66	74 00		        mov     a,#00h
 8839:	  1C68	74 00		        mov     a,#00h
 8840:	  1C6A	74 00		        mov     a,#00h
 8841:
 8842:				        eot     'c',tr_c0
 8843+ 1			        putc    #'c'
 8844+ 2  1C6C			??0758:
 8845+ 2			        ;jnb     SCON.1,putc_loop
 8846+ 2			        ;clr     SCON.1
 8847+ 2  1C6C	75 99 63	        mov     SBUF,#'c'
 8848+ 1  1C6F	80 06		        sjmp    ??0757
 8849+ 1  1C71			tr_c0:  putc    #'?'
 8850+ 2  1C71			??0759:
 8851+ 2			        ;jnb     SCON.1,putc_loop
 8852+ 2			        ;clr     SCON.1
 8853+ 2  1C71	75 99 3F	        mov     SBUF,#'?'
 8854+ 1  1C74	75 6E 01	        mov     fail,#001h
 8855+ 1  1C77			??0757:
 8856:
 8857:				        ; c.- <LJMP addr16>
 8858:	  1C77	02 80 06	        ljmp    tr_sub3
 8859:	  1C7A	02 1C 86	        jmp     tr_d0
 8860:	  1C7D	00		        nop
 8861:	  1C7E	00		        nop
 8862:	  1C7F	00		tr_rv4: nop
 8863:	  1C80	00		        nop
 8864:				        eot     'd',tr_d0
 8865+ 1			        putc    #'d'
 8866+ 2  1C81			??0761:
 8867+ 2			        ;jnb     SCON.1,putc_loop
 8868+ 2			        ;clr     SCON.1
 8869+ 2  1C81	75 99 64	        mov     SBUF,#'d'
 8870+ 1  1C84	80 06		        sjmp    ??0760
 8871+ 1  1C86			tr_d0:  putc    #'?'
 8872+ 2  1C86			??0762:
 8873+ 2			        ;jnb     SCON.1,putc_loop
 8874+ 2			        ;clr     SCON.1
 8875+ 2  1C86	75 99 3F	        mov     SBUF,#'?'
 8876+ 1  1C89	75 6E 01	        mov     fail,#001h
 8877+ 1  1C8C			??0760:
 8878:
 8879:				        put_crlf                    ; end of test series
 8880+ 1			        putc    #13
 8881+ 2  1C8C			??0763:
 8882+ 2			        ;jnb     SCON.1,putc_loop
 8883+ 2			        ;clr     SCON.1
 8884+ 2  1C8C	75 99 0D	        mov     SBUF,#13
 8885+ 1			        putc    #10
 8886+ 2  1C8F			??0764:
 8887+ 2			        ;jnb     SCON.1,putc_loop
 8888+ 2			        ;clr     SCON.1
 8889+ 2  1C8F	75 99 0A	        mov     SBUF,#10
 8890:
 8891:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 160



 Line  I  Addr  Code            Source

 8892:				        ;-- Test series S ------------------------------------------------------
 8893:				        ; RET, RETI instructions
 8894:				        ; a.- <RET>
 8895:				        ; b.- <RETI>
 8896:				        ;
 8897:				        ; RETs to different code pages (!= H addr byte) not tested!
 8898:				        ; Interrupt flag stuff not tested, only RET functionality
 8899:
 8900:				        putc    #'S'                ; start of test series
 8901+ 1  1C92			??0765:
 8902+ 1			        ;jnb     SCON.1,putc_loop
 8903+ 1			        ;clr     SCON.1
 8904+ 1  1C92	75 99 53	        mov     SBUF,#'S'
 8905:
 8906:
 8907:				        ; a.- <RET>
 8908:	  1C95	75 81 4F	        mov     SP,#4fh             ; Initialize SP...
 8909:	  1C98	75 4F 1C	        mov     4fh,#HIGH(s_sub0)   ; ...and load stack area with return
 8910:	  1C9B	75 4E A9	        mov     4eh,#LOW(s_sub0)    ; addresses to be tested
 8911:	  1C9E	75 4D 1C	        mov     4dh,#HIGH(s_sub1)
 8912:	  1CA1	75 4C B3	        mov     4ch,#LOW(s_sub1)
 8913:
 8914:	  1CA4	22		        ret                         ; Do the ret...
 8915:	  1CA5	80 16		        sjmp    ts_a0
 8916:	  1CA7	74 00		        mov     A,#00h
 8917:	  1CA9	E5 81		s_sub0: mov     A,SP
 8918:	  1CAB	B4 4D 0F	        cjne    A,#4dh,ts_a0       ; ... and verify the SP value
 8919:
 8920:	  1CAE	22		        ret                         ; Do another ret...
 8921:	  1CAF	80 0C		        sjmp    ts_a0
 8922:	  1CB1	74 00		        mov     A,#00h
 8923:	  1CB3	E5 81		s_sub1: mov     A,SP
 8924:	  1CB5	B4 4B 05	        cjne    A,#4bh,ts_a0       ; ... and verify the SP value
 8925:
 8926:				        eot     'a',ts_a0
 8927+ 1			        putc    #'a'
 8928+ 2  1CB8			??0767:
 8929+ 2			        ;jnb     SCON.1,putc_loop
 8930+ 2			        ;clr     SCON.1
 8931+ 2  1CB8	75 99 61	        mov     SBUF,#'a'
 8932+ 1  1CBB	80 06		        sjmp    ??0766
 8933+ 1  1CBD			ts_a0:  putc    #'?'
 8934+ 2  1CBD			??0768:
 8935+ 2			        ;jnb     SCON.1,putc_loop
 8936+ 2			        ;clr     SCON.1
 8937+ 2  1CBD	75 99 3F	        mov     SBUF,#'?'
 8938+ 1  1CC0	75 6E 01	        mov     fail,#001h
 8939+ 1  1CC3			??0766:
 8940:
 8941:
 8942:				        ; a.- <RETI>
 8943:	  1CC3	75 81 4F	        mov     SP,#4fh             ; Initialize SP...
 8944:	  1CC6	75 4F 1C	        mov     4fh,#HIGH(s_sub2)   ; ...and load stack area with return
 8945:	  1CC9	75 4E D7	        mov     4eh,#LOW(s_sub2)    ; addresses to be tested
 8946:	  1CCC	75 4D 1C	        mov     4dh,#HIGH(s_sub3)
 8947:	  1CCF	75 4C E1	        mov     4ch,#LOW(s_sub3)

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 161



 Line  I  Addr  Code            Source

 8948:
 8949:	  1CD2	22		        ret                         ; Do the ret...
 8950:	  1CD3	80 E8		        sjmp    ts_a0
 8951:	  1CD5	74 00		        mov     A,#00h
 8952:	  1CD7	E5 81		s_sub2: mov     A,SP
 8953:	  1CD9	B4 4D 0F	        cjne    A,#4dh,ts_b0       ; ... and verify the SP value
 8954:
 8955:	  1CDC	22		        ret                         ; Do another ret...
 8956:	  1CDD	80 DE		        sjmp    ts_a0
 8957:	  1CDF	74 00		        mov     A,#00h
 8958:	  1CE1	E5 81		s_sub3: mov     A,SP
 8959:	  1CE3	B4 4B 05	        cjne    A,#4bh,ts_b0       ; ... and verify the SP value
 8960:
 8961:				        eot     'b',ts_b0
 8962+ 1			        putc    #'b'
 8963+ 2  1CE6			??0770:
 8964+ 2			        ;jnb     SCON.1,putc_loop
 8965+ 2			        ;clr     SCON.1
 8966+ 2  1CE6	75 99 62	        mov     SBUF,#'b'
 8967+ 1  1CE9	80 06		        sjmp    ??0769
 8968+ 1  1CEB			ts_b0:  putc    #'?'
 8969+ 2  1CEB			??0771:
 8970+ 2			        ;jnb     SCON.1,putc_loop
 8971+ 2			        ;clr     SCON.1
 8972+ 2  1CEB	75 99 3F	        mov     SBUF,#'?'
 8973+ 1  1CEE	75 6E 01	        mov     fail,#001h
 8974+ 1  1CF1			??0769:
 8975:
 8976:				        ; Lots of things can go badly and we wouldn't know with this test...
 8977:				        put_crlf                    ; end of test series
 8978+ 1			        putc    #13
 8979+ 2  1CF1			??0772:
 8980+ 2			        ;jnb     SCON.1,putc_loop
 8981+ 2			        ;clr     SCON.1
 8982+ 2  1CF1	75 99 0D	        mov     SBUF,#13
 8983+ 1			        putc    #10
 8984+ 2  1CF4			??0773:
 8985+ 2			        ;jnb     SCON.1,putc_loop
 8986+ 2			        ;clr     SCON.1
 8987+ 2  1CF4	75 99 0A	        mov     SBUF,#10
 8988:
 8989:				        ;-- Test series T ------------------------------------------------------
 8990:				        ; MUL, DIV instructions
 8991:				        ; a.- <DIV>
 8992:				        ; b.- <MUL>
 8993:				        ;
 8994:
 8995:				        putc    #'T'                ; start of test series
 8996+ 1  1CF7			??0774:
 8997+ 1			        ;jnb     SCON.1,putc_loop
 8998+ 1			        ;clr     SCON.1
 8999+ 1  1CF7	75 99 54	        mov     SBUF,#'T'
 9000:
 9001:				        ; a.- <DIV>
 9002:	  1CFA	75 F0 07	        mov     B,#07h              ; First of all, make sure B can be read back
 9003:	  1CFD	74 13		        mov     A,#13h

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 162



 Line  I  Addr  Code            Source

 9004:	  1CFF	E5 F0		        mov     A,B
 9005:	  1D01	B4 07 37	        cjne    A,#07h,tt_a0
 9006:
 9007:				        ; Now do a few representative DIVs using a table. The table has the
 9008:				        ; following format:
 9009:				        ; denominator, numerator, overflow, quotient, remainder
 9010:				        ; Where 'overflow' is 00h or 04h.
 9011:
 9012:				        ; DPTR will point to the start of the table, r0 will be the current data
 9013:				        ; byte offset and r1 the number of test cases remaiining.
 9014:	  1D04	90 1D 43	        mov     DPTR,#tt_a_tab
 9015:	  1D07	78 00		        mov     r0,#00h
 9016:	  1D09	79 09		        mov     r1,#((tt_a_tab_end-tt_a_tab)/5)
 9017:
 9018:	  1D0B			tt_a_loop:
 9019:	  1D0B	E8		        mov     a,r0
 9020:	  1D0C	08		        inc     r0
 9021:	  1D0D	93		        movc    a,@a+DPTR
 9022:	  1D0E	F5 F0		        mov     B,a
 9023:	  1D10	E8		        mov     a,r0
 9024:	  1D11	08		        inc     r0
 9025:	  1D12	93		        movc    a,@a+DPTR
 9026:	  1D13	84		        div     ab
 9027:	  1D14	F5 60		        mov     dir0,a
 9028:
 9029:	  1D16	E8		        mov     a,r0                ; Get expected OV flag
 9030:	  1D17	08		        inc     r0
 9031:	  1D18	93		        movc    a,@a+DPTR
 9032:	  1D19	70 15		        jnz     tt_a_divzero        ; If OV expected, skip verification of
 9033:	  1D1B	E5 D0		        mov     a,PSW               ; quotient and remainder
 9034:	  1D1D	54 04		        anl     a,#04h
 9035:	  1D1F	70 1A		        jnz     tt_a0
 9036:
 9037:	  1D21	E8		        mov     a,r0                ; Verify quotient...
 9038:	  1D22	08		        inc     r0
 9039:	  1D23	93		        movc    a,@a+DPTR
 9040:	  1D24	B5 60 14	        cjne    a,dir0,tt_a0
 9041:	  1D27	E8		        mov     a,r0                ; ...and verify remainder
 9042:	  1D28	08		        inc     r0
 9043:	  1D29	93		        movc    a,@a+DPTR
 9044:	  1D2A	B5 F0 0E	        cjne    a,B,tt_a0
 9045:	  1D2D	02 1D 32	        jmp     tt_a_next
 9046:
 9047:	  1D30			tt_a_divzero:
 9048:	  1D30	08		        inc     r0
 9049:	  1D31	08		        inc     r0
 9050:	  1D32			tt_a_next:
 9051:	  1D32	19		        dec     r1                  ; go for next test vector, if any
 9052:	  1D33	E9		        mov     a,r1
 9053:	  1D34	70 D5		        jnz     tt_a_loop
 9054:
 9055:				        eot     'a',tt_a0
 9056+ 1			        putc    #'a'
 9057+ 2  1D36			??0776:
 9058+ 2			        ;jnb     SCON.1,putc_loop
 9059+ 2			        ;clr     SCON.1

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 163



 Line  I  Addr  Code            Source

 9060+ 2  1D36	75 99 61	        mov     SBUF,#'a'
 9061+ 1  1D39	80 06		        sjmp    ??0775
 9062+ 1  1D3B			tt_a0:  putc    #'?'
 9063+ 2  1D3B			??0777:
 9064+ 2			        ;jnb     SCON.1,putc_loop
 9065+ 2			        ;clr     SCON.1
 9066+ 2  1D3B	75 99 3F	        mov     SBUF,#'?'
 9067+ 1  1D3E	75 6E 01	        mov     fail,#001h
 9068+ 1  1D41			??0775:
 9069:	  1D41	80 2D		        sjmp    tt_a_tab_end
 9070:
 9071:	  1D43			tt_a_tab:
 9072:	  1D43	07 13 00 02	        db      7,19,0,2,5
	  1D47	05
 9073:	  1D48	07 11 00 02	        db      7,17,0,2,3
	  1D4C	03
 9074:	  1D4D	07 0D 00 01	        db      7,13,0,1,6
	  1D51	06
 9075:	  1D52	0D 11 00 01	        db      13,17,0,1,4
	  1D56	04
 9076:	  1D57	11 0D 00 00	        db      17,13,0,0,13
	  1D5B	0D
 9077:	  1D5C	00 0D 04 00	        db      0,13,4,0,13
	  1D60	0D
 9078:	  1D61	80 87 00 01	        db      80h,87h,0,1,7
	  1D65	07
 9079:	  1D66	01 FF 00 FF	        db      1,255,0,255,0
	  1D6A	00
 9080:	  1D6B	02 FF 00 7F	        db      2,255,0,127,1
	  1D6F	01
 9081:	  1D70			tt_a_tab_end:
 9082:
 9083:				        ; b.- <MUL>
 9084:
 9085:				        ; Do with MUL the same we just did with DIV. The test data table has
 9086:				        ; the following format:
 9087:				        ; denominator, numerator, product high byte, product low byte.
 9088:
 9089:				        ; DPTR will point to the start of the table, r0 will be the current data
 9090:				        ; byte offset and r1 the number of test cases remaiining.
 9091:	  1D70	90 1D B1	        mov     DPTR,#tt_b_tab
 9092:	  1D73	78 00		        mov     r0,#00h
 9093:	  1D75	79 09		        mov     r1,#((tt_b_tab_end-tt_b_tab)/4)
 9094:
 9095:	  1D77			tt_b_loop:
 9096:	  1D77	E8		        mov     a,r0                ; Load B with test data...
 9097:	  1D78	08		        inc     r0
 9098:	  1D79	93		        movc    a,@a+DPTR
 9099:	  1D7A	F5 F0		        mov     B,a
 9100:	  1D7C	E8		        mov     a,r0                ; ...then load A with test data...
 9101:	  1D7D	08		        inc     r0
 9102:	  1D7E	93		        movc    a,@a+DPTR
 9103:	  1D7F	A4		        mul     ab                  ; and do the MUL
 9104:	  1D80	F5 60		        mov     dir0,a              ; Save A for later checks
 9105:
 9106:	  1D82	E8		        mov     a,r0                ; Verify product high byte

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 164



 Line  I  Addr  Code            Source

 9107:				        ;inc     r0
 9108:	  1D83	93		        movc    a,@a+DPTR
 9109:	  1D84	60 08		        jz      tt_b_noovf
 9110:
 9111:	  1D86	E5 D0		        mov     a,PSW               ; overflow expected
 9112:	  1D88	54 04		        anl     a,#04h
 9113:	  1D8A	60 1D		        jz      tt_b0
 9114:	  1D8C	80 06		        sjmp    tt_b_0
 9115:
 9116:	  1D8E			tt_b_noovf:
 9117:	  1D8E	E5 D0		        mov     a,PSW               ; no overflow expected
 9118:	  1D90	54 04		        anl     a,#04h
 9119:	  1D92	70 15		        jnz     tt_b0
 9120:
 9121:	  1D94			tt_b_0:
 9122:	  1D94	E8		        mov     a,r0                ; Verify product high byte
 9123:	  1D95	08		        inc     r0
 9124:	  1D96	93		        movc    a,@a+DPTR
 9125:	  1D97	B5 F0 0F	        cjne    a,B,tt_b0
 9126:	  1D9A	E8		        mov     a,r0                ; ...and verify low byte
 9127:	  1D9B	08		        inc     r0
 9128:	  1D9C	93		        movc    a,@a+DPTR
 9129:	  1D9D	B5 60 09	        cjne    a,dir0,tt_b0
 9130:
 9131:	  1DA0	19		        dec     r1                  ; go for next test vector, if any
 9132:	  1DA1	E9		        mov     a,r1
 9133:	  1DA2	70 D3		        jnz     tt_b_loop
 9134:
 9135:				        eot     'b',tt_b0
 9136+ 1			        putc    #'b'
 9137+ 2  1DA4			??0779:
 9138+ 2			        ;jnb     SCON.1,putc_loop
 9139+ 2			        ;clr     SCON.1
 9140+ 2  1DA4	75 99 62	        mov     SBUF,#'b'
 9141+ 1  1DA7	80 06		        sjmp    ??0778
 9142+ 1  1DA9			tt_b0:  putc    #'?'
 9143+ 2  1DA9			??0780:
 9144+ 2			        ;jnb     SCON.1,putc_loop
 9145+ 2			        ;clr     SCON.1
 9146+ 2  1DA9	75 99 3F	        mov     SBUF,#'?'
 9147+ 1  1DAC	75 6E 01	        mov     fail,#001h
 9148+ 1  1DAF			??0778:
 9149:	  1DAF	80 24		        sjmp    tt_b_tab_end
 9150:
 9151:	  1DB1			tt_b_tab:
 9152:	  1DB1	07 13 00 85	        db      7,19,0,133
 9153:	  1DB5	07 11 00 77	        db      7,17,0,119
 9154:	  1DB9	07 0D 00 5B	        db      7,13,0,91
 9155:	  1DBD	0D 11 00 DD	        db      13,17,0,221
 9156:	  1DC1	11 0D 00 DD	        db      17,13,0,221
 9157:	  1DC5	00 0D 00 00	        db      0,13,0,0
 9158:	  1DC9	80 87 43 80	        db      80h,87h,43h,80h
 9159:	  1DCD	01 FF 00 FF	        db      1,255,0,255
 9160:	  1DD1	02 FF 01 FE	        db      2,255,01h,0feh
 9161:	  1DD5			tt_b_tab_end:
 9162:

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 165



 Line  I  Addr  Code            Source

 9163:				        put_crlf                    ; end of test series
 9164+ 1			        putc    #13
 9165+ 2  1DD5			??0781:
 9166+ 2			        ;jnb     SCON.1,putc_loop
 9167+ 2			        ;clr     SCON.1
 9168+ 2  1DD5	75 99 0D	        mov     SBUF,#13
 9169+ 1			        putc    #10
 9170+ 2  1DD8			??0782:
 9171+ 2			        ;jnb     SCON.1,putc_loop
 9172+ 2			        ;clr     SCON.1
 9173+ 2  1DD8	75 99 0A	        mov     SBUF,#10
 9174:
 9175:
 9176:
 9177:				        ;-- Test series U ------------------------------------------------------
 9178:				        ; Register banks
 9179:				        ; a.- Write to register, read from indirect address.
 9180:				        ; a.- Write to indirect address, read from register.
 9181:				        ;
 9182:
 9183:				        putc    #'U'                ; start of test series
 9184+ 1  1DDB			??0783:
 9185+ 1			        ;jnb     SCON.1,putc_loop
 9186+ 1			        ;clr     SCON.1
 9187+ 1  1DDB	75 99 55	        mov     SBUF,#'U'
 9188:
 9189:
 9190:	  1DDE	75 D0 00	        mov     PSW,#00h            ; Test bank 0
 9191:	  1DE1	74 01		        mov     a,#00h + 1
 9192:	  1DE3	12 1E 00	        call    tu_a_test
 9193:
 9194:	  1DE6	75 D0 08	        mov     PSW,#08h            ; Test bank 1
 9195:	  1DE9	74 09		        mov     a,#08h + 1
 9196:	  1DEB	12 1E 00	        call    tu_a_test
 9197:
 9198:	  1DEE	75 D0 10	        mov     PSW,#10h            ; Test bank 2
 9199:	  1DF1	74 11		        mov     a,#10h + 1
 9200:	  1DF3	12 1E 00	        call    tu_a_test
 9201:
 9202:	  1DF6	75 D0 18	        mov     PSW,#18h            ; Test bank 3
 9203:	  1DF9	74 19		        mov     a,#18h + 1
 9204:	  1DFB	12 1E 00	        call    tu_a_test
 9205:
 9206:	  1DFE	80 1E		        sjmp    tu_a_done
 9207:
 9208:	  1E00			tu_a_test:
 9209:	  1E00	F8		        mov     r0,a                ; R0 points to R1 in the selected bank.
 9210:
 9211:	  1E01	79 12		        mov     r1,#12h             ; Write to registers R1 and R7
 9212:	  1E03	7F 34		        mov     r7,#34h
 9213:
 9214:	  1E05	E6		        mov     a,@r0               ; Check R1
 9215:	  1E06	B4 12 1B	        cjne    a,#12h,tu_a0
 9216:	  1E09	74 56		        mov     a,#56h              ; Ok, now write to R1 with reg addressing...
 9217:	  1E0B	F6		        mov     @r0,a               ; ...and check by reading in indirect.
 9218:	  1E0C	B9 56 15	        cjne    r1,#56h,tu_a0

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 166



 Line  I  Addr  Code            Source

 9219:
 9220:	  1E0F	E8		        mov     a,r0                ; Set R0 to point to R7 in selected bank
 9221:	  1E10	24 06		        add     a,#06h
 9222:	  1E12	F8		        mov     r0,a
 9223:	  1E13	E6		        mov     a,@r0               ; Check R7
 9224:	  1E14	B4 34 0D	        cjne    a,#34h,tu_a0
 9225:
 9226:	  1E17	74 78		        mov     a,#78h              ; Ok, now write to R7 with reg addressing...
 9227:	  1E19	F6		        mov     @r0,a               ; ...and check by reading in indirect.
 9228:	  1E1A	B4 78 07	        cjne    a,#78h,tu_a0
 9229:
 9230:	  1E1D	22		        ret
 9231:
 9232:	  1E1E			tu_a_done:
 9233:	  1E1E	00		        nop
 9234:				        eot     'a',tu_a0
 9235+ 1			        putc    #'a'
 9236+ 2  1E1F			??0785:
 9237+ 2			        ;jnb     SCON.1,putc_loop
 9238+ 2			        ;clr     SCON.1
 9239+ 2  1E1F	75 99 61	        mov     SBUF,#'a'
 9240+ 1  1E22	80 06		        sjmp    ??0784
 9241+ 1  1E24			tu_a0:  putc    #'?'
 9242+ 2  1E24			??0786:
 9243+ 2			        ;jnb     SCON.1,putc_loop
 9244+ 2			        ;clr     SCON.1
 9245+ 2  1E24	75 99 3F	        mov     SBUF,#'?'
 9246+ 1  1E27	75 6E 01	        mov     fail,#001h
 9247+ 1  1E2A			??0784:
 9248:
 9249:				        put_crlf                    ; end of test series
 9250+ 1			        putc    #13
 9251+ 2  1E2A			??0787:
 9252+ 2			        ;jnb     SCON.1,putc_loop
 9253+ 2			        ;clr     SCON.1
 9254+ 2  1E2A	75 99 0D	        mov     SBUF,#13
 9255+ 1			        putc    #10
 9256+ 2  1E2D			??0788:
 9257+ 2			        ;jnb     SCON.1,putc_loop
 9258+ 2			        ;clr     SCON.1
 9259+ 2  1E2D	75 99 0A	        mov     SBUF,#10
 9260:
 9261:
 9262:				        ;-- Template for test series -------------------------------------------
 9263:
 9264:				        ;-- Test series X ------------------------------------------------------
 9265:				        ;
 9266:				        ; a.-
 9267:
 9268:				        ;putc    #'X'                ; start of test series
 9269:				        ;put_crlf                    ; end of test series
 9270:
 9271:				        ;-----------------------------------------------------------------------
 9272:
 9273:				        ; Test cases finished. Now print completion message dependent on the
 9274:				        ; value of the fail flag.

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 167



 Line  I  Addr  Code            Source

 9275:
 9276:	  1E30	E5 6E		        mov     a,fail
 9277:	  1E32	70 1A		        jnz     test_failed
 9278:
 9279:				        put_crlf
 9280+ 1			        putc    #13
 9281+ 2  1E34			??0789:
 9282+ 2			        ;jnb     SCON.1,putc_loop
 9283+ 2			        ;clr     SCON.1
 9284+ 2  1E34	75 99 0D	        mov     SBUF,#13
 9285+ 1			        putc    #10
 9286+ 2  1E37			??0790:
 9287+ 2			        ;jnb     SCON.1,putc_loop
 9288+ 2			        ;clr     SCON.1
 9289+ 2  1E37	75 99 0A	        mov     SBUF,#10
 9290:				        putc    #'P'
 9291+ 1  1E3A			??0791:
 9292+ 1			        ;jnb     SCON.1,putc_loop
 9293+ 1			        ;clr     SCON.1
 9294+ 1  1E3A	75 99 50	        mov     SBUF,#'P'
 9295:				        putc    #'A'
 9296+ 1  1E3D			??0792:
 9297+ 1			        ;jnb     SCON.1,putc_loop
 9298+ 1			        ;clr     SCON.1
 9299+ 1  1E3D	75 99 41	        mov     SBUF,#'A'
 9300:				        putc    #'S'
 9301+ 1  1E40			??0793:
 9302+ 1			        ;jnb     SCON.1,putc_loop
 9303+ 1			        ;clr     SCON.1
 9304+ 1  1E40	75 99 53	        mov     SBUF,#'S'
 9305:				        putc    #'S'
 9306+ 1  1E43			??0794:
 9307+ 1			        ;jnb     SCON.1,putc_loop
 9308+ 1			        ;clr     SCON.1
 9309+ 1  1E43	75 99 53	        mov     SBUF,#'S'
 9310:				        put_crlf
 9311+ 1			        putc    #13
 9312+ 2  1E46			??0795:
 9313+ 2			        ;jnb     SCON.1,putc_loop
 9314+ 2			        ;clr     SCON.1
 9315+ 2  1E46	75 99 0D	        mov     SBUF,#13
 9316+ 1			        putc    #10
 9317+ 2  1E49			??0796:
 9318+ 2			        ;jnb     SCON.1,putc_loop
 9319+ 2			        ;clr     SCON.1
 9320+ 2  1E49	75 99 0A	        mov     SBUF,#10
 9321:	  1E4C	80 1A		        sjmp    quit
 9322:
 9323:	  1E4E			test_failed:
 9324:				        put_crlf
 9325+ 1			        putc    #13
 9326+ 2  1E4E			??0797:
 9327+ 2			        ;jnb     SCON.1,putc_loop
 9328+ 2			        ;clr     SCON.1
 9329+ 2  1E4E	75 99 0D	        mov     SBUF,#13
 9330+ 1			        putc    #10

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 168



 Line  I  Addr  Code            Source

 9331+ 2  1E51			??0798:
 9332+ 2			        ;jnb     SCON.1,putc_loop
 9333+ 2			        ;clr     SCON.1
 9334+ 2  1E51	75 99 0A	        mov     SBUF,#10
 9335:				        putc    #'F'
 9336+ 1  1E54			??0799:
 9337+ 1			        ;jnb     SCON.1,putc_loop
 9338+ 1			        ;clr     SCON.1
 9339+ 1  1E54	75 99 46	        mov     SBUF,#'F'
 9340:				        putc    #'A'
 9341+ 1  1E57			??0800:
 9342+ 1			        ;jnb     SCON.1,putc_loop
 9343+ 1			        ;clr     SCON.1
 9344+ 1  1E57	75 99 41	        mov     SBUF,#'A'
 9345:				        putc    #'I'
 9346+ 1  1E5A			??0801:
 9347+ 1			        ;jnb     SCON.1,putc_loop
 9348+ 1			        ;clr     SCON.1
 9349+ 1  1E5A	75 99 49	        mov     SBUF,#'I'
 9350:				        putc    #'L'
 9351+ 1  1E5D			??0802:
 9352+ 1			        ;jnb     SCON.1,putc_loop
 9353+ 1			        ;clr     SCON.1
 9354+ 1  1E5D	75 99 4C	        mov     SBUF,#'L'
 9355:				        put_crlf
 9356+ 1			        putc    #13
 9357+ 2  1E60			??0803:
 9358+ 2			        ;jnb     SCON.1,putc_loop
 9359+ 2			        ;clr     SCON.1
 9360+ 2  1E60	75 99 0D	        mov     SBUF,#13
 9361+ 1			        putc    #10
 9362+ 2  1E63			??0804:
 9363+ 2			        ;jnb     SCON.1,putc_loop
 9364+ 2			        ;clr     SCON.1
 9365+ 2  1E63	75 99 0A	        mov     SBUF,#10
 9366:	  1E66	80 00		        sjmp    quit
 9367:
 9368:				        ;-- End of test program, enter single-instruction endless loop
 9369:	  1E68	C1 68		quit:   ajmp    $
 9370:
 9371:
 9372:				        ; We'll place a few test routines in the 2nd half of the code space so
 9373:				        ; we can test long jumps and calls onto different code pages.
 9374:		N      8000	        org     8000h
 9375:
 9376:				        ; tr_sub2: part of the JMP @A+DPTR test.
 9377:				        ; HAS TO BE in 8000h so we can test the A+DPTR carry propagation!
 9378:	  8000			tr_sub2:
 9379:	  8000	02 1C 64	        jmp     tr_rv3
 9380:	  8003	02 1C 71	        jmp     tr_c0
 9381:				        ; Make sure the assumption we'll make in the test is actually valid
 9382:		N      0000	        if      LOW(tr_sub2) ne 0
 9383:				        $error("Label 'tr_sub2' must be at an address multiple of 256 to properly test JMP @A+DPTR")
 9384:				        endif
 9385:
 9386:				        ; tr_sub3: part of the LJMP test.

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 169



 Line  I  Addr  Code            Source

 9387:	  8006			tr_sub3:
 9388:	  8006	02 1C 7F	        jmp     tr_rv4
 9389:	  8009	02 1C 86	        jmp     tr_d0
 9390:
 9391:				        ; tr_sub1: part of the LCALL test.
 9392:	  800C			tr_sub1:
 9393:	  800C	E5 81		        mov     A,SP
 9394:	  800E	B4 53 0D	        cjne    A,#53h,tr_sub1_fail ; ...verify the SP value...
 9395:	  8011	E5 52		        mov     A,52h               ; ...and verify the pushed ret address
 9396:	  8013	B4 4B 08	        cjne    A,#LOW(tr_rv1),tr_sub1_fail
 9397:	  8016	E5 53		        mov     A,53h
 9398:	  8018	B4 1C 03	        cjne    A,#HIGH(tr_rv1),tr_sub1_fail
 9399:	  801B	02 1C 4D	        ljmp    tr_rv2
 9400:	  801E			tr_sub1_fail:
 9401:	  801E	02 1C 53	        ljmp    tr_b0
 9402:
 9403:
 9404:				        end





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 170





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0000				  CODE	    0033	 177
??0001				  CODE	    0036	 185
??0002				  CODE	    003B	 192
??0003				  CODE	    0041	 198
??0004				  CODE	    0046	 206
??0005				  CODE	    0054	 215
??0006				  CODE	    005D	 222
??0007				  CODE	    0069	 232
??0008				  CODE	    007D	 252
??0009				  CODE	    0072	 241
??0010				  CODE	    0077	 247
??0011				  CODE	    0090	 271
??0012				  CODE	    0085	 260
??0013				  CODE	    008A	 266
??0014				  CODE	    0090	 275
??0015				  CODE	    0093	 280
??0016				  CODE	    0096	 297
??0017				  CODE	    00D4	 354
??0018				  CODE	    00C9	 343
??0019				  CODE	    00CE	 349
??0020				  CODE	    00D9	 359
??0021				  CODE	    00E8	 369
??0022				  CODE	    00EE	 375
??0023				  CODE	    00FE	 401
??0024				  CODE	    00FC	 400
??0025				  CODE	    00F6	 395
??0026				  CODE	    010E	 412
??0027				  CODE	    010C	 411
??0028				  CODE	    0106	 406
??0029				  CODE	    011E	 423
??0030				  CODE	    011C	 422
??0031				  CODE	    0116	 417
??0032				  CODE	    012E	 434
??0033				  CODE	    012C	 433
??0034				  CODE	    0126	 428
??0035				  CODE	    013E	 445
??0036				  CODE	    013C	 444
??0037				  CODE	    0136	 439
??0038				  CODE	    014E	 456
??0039				  CODE	    014C	 455
??0040				  CODE	    0146	 450
??0041				  CODE	    015E	 467
??0042				  CODE	    015C	 466
??0043				  CODE	    0156	 461
??0044				  CODE	    016E	 478
??0045				  CODE	    016C	 477
??0046				  CODE	    0166	 472
??0047				  CODE	    0190	 502
??0048				  CODE	    0185	 491
??0049				  CODE	    018A	 497

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 171



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0050				  CODE	    01A7	 525
??0051				  CODE	    019C	 514
??0052				  CODE	    01A1	 520
??0053				  CODE	    01D4	 567
??0054				  CODE	    01C9	 556
??0055				  CODE	    01CE	 562
??0056				  CODE	    01E3	 592
??0057				  CODE	    01E1	 591
??0058				  CODE	    01DB	 586
??0059				  CODE	    01F5	 604
??0060				  CODE	    01F3	 603
??0061				  CODE	    01ED	 598
??0062				  CODE	    0217	 629
??0063				  CODE	    020C	 618
??0064				  CODE	    0211	 624
??0065				  CODE	    022B	 640
??0066				  CODE	    0236	 648
??0067				  CODE	    0249	 668
??0068				  CODE	    023E	 657
??0069				  CODE	    0243	 663
??0070				  CODE	    0249	 672
??0071				  CODE	    024C	 677
??0072				  CODE	    024F	 706
??0073				  CODE	    025D	 716
??0074				  CODE	    0268	 724
??0075				  CODE	    027C	 744
??0076				  CODE	    0271	 733
??0077				  CODE	    0276	 739
??0078				  CODE	    0292	 764
??0079				  CODE	    0287	 753
??0080				  CODE	    028C	 759
??0081				  CODE	    029C	 772
??0082				  CODE	    02A6	 780
??0083				  CODE	    02B9	 800
??0084				  CODE	    02AE	 789
??0085				  CODE	    02B3	 795
??0086				  CODE	    02D6	 824
??0087				  CODE	    02CB	 813
??0088				  CODE	    02D0	 819
??0089				  CODE	    0303	 859
??0090				  CODE	    02F8	 848
??0091				  CODE	    02FD	 854
??0092				  CODE	    0326	 887
??0093				  CODE	    031B	 876
??0094				  CODE	    0320	 882
??0095				  CODE	    0340	 910
??0096				  CODE	    0335	 899
??0097				  CODE	    033A	 905
??0098				  CODE	    035E	 936
??0099				  CODE	    0353	 925
??0100				  CODE	    0358	 931
??0101				  CODE	    036C	 944
??0102				  CODE	    0377	 952
??0103				  CODE	    038B	 972
??0104				  CODE	    0380	 961
??0105				  CODE	    0385	 967

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 172



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0106				  CODE	    03A8	 995
??0107				  CODE	    039D	 984
??0108				  CODE	    03A2	 990
??0109				  CODE	    03D5	1030
??0110				  CODE	    03CA	1019
??0111				  CODE	    03CF	1025
??0112				  CODE	    03F8	1058
??0113				  CODE	    03ED	1047
??0114				  CODE	    03F2	1053
??0115				  CODE	    0412	1081
??0116				  CODE	    0407	1070
??0117				  CODE	    040C	1076
??0118				  CODE	    0430	1107
??0119				  CODE	    0425	1096
??0120				  CODE	    042A	1102
??0121				  CODE	    0430	1113
??0122				  CODE	    0433	1118
??0123				  CODE	    0436	1136
??0124				  CODE	    044E	1160
??0125				  CODE	    0443	1149
??0126				  CODE	    0448	1155
??0127				  CODE	    0475	1195
??0128				  CODE	    046A	1184
??0129				  CODE	    046F	1190
??0130				  CODE	    049B	1229
??0131				  CODE	    0490	1218
??0132				  CODE	    0495	1224
??0133				  CODE	    04D3	1275
??0134				  CODE	    04C8	1264
??0135				  CODE	    04CD	1270
??0136				  CODE	    04D3	1279
??0137				  CODE	    04D6	1284
??0138				  CODE	    04D9	1302
??0139				  CODE	    04F6	1341
??0140				  CODE	    04EB	1330
??0141				  CODE	    04F0	1336
??0142				  CODE	    057B	1431
??0143				  CODE	    0570	1420
??0144				  CODE	    0575	1426
??0145				  CODE	    05A8	1468
??0146				  CODE	    059D	1457
??0147				  CODE	    05A2	1463
??0148				  CODE	    05BB	1487
??0149				  CODE	    05B0	1476
??0150				  CODE	    05B5	1482
??0151				  CODE	    05DD	1513
??0152				  CODE	    05D2	1502
??0153				  CODE	    05D7	1508
??0154				  CODE	    05F7	1548
??0155				  CODE	    05EC	1537
??0156				  CODE	    05F1	1543
??0157				  CODE	    067C	1638
??0158				  CODE	    0671	1627
??0159				  CODE	    0676	1633
??0160				  CODE	    06A9	1675
??0161				  CODE	    069E	1664

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 173



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0162				  CODE	    06A3	1670
??0163				  CODE	    06BC	1694
??0164				  CODE	    06B1	1683
??0165				  CODE	    06B6	1689
??0166				  CODE	    06BC	1698
??0167				  CODE	    06BF	1703
??0168				  CODE	    06C2	1722
??0169				  CODE	    0718	1788
??0170				  CODE	    070D	1777
??0171				  CODE	    0712	1783
??0172				  CODE	    0735	1814
??0173				  CODE	    072A	1803
??0174				  CODE	    072F	1809
??0175				  CODE	    074B	1834
??0176				  CODE	    0740	1823
??0177				  CODE	    0745	1829
??0178				  CODE	    0796	1888
??0179				  CODE	    078B	1877
??0180				  CODE	    0790	1883
??0181				  CODE	    07B5	1914
??0182				  CODE	    07AA	1903
??0183				  CODE	    07AF	1909
??0184				  CODE	    07F0	1968
??0185				  CODE	    07E5	1957
??0186				  CODE	    07EA	1963
??0187				  CODE	    080B	1994
??0188				  CODE	    0800	1983
??0189				  CODE	    0805	1989
??0190				  CODE	    0824	2016
??0191				  CODE	    0819	2005
??0192				  CODE	    081E	2011
??0193				  CODE	    0843	2042
??0194				  CODE	    0838	2031
??0195				  CODE	    083D	2037
??0196				  CODE	    0843	2046
??0197				  CODE	    0846	2051
??0198				  CODE	    0849	2066
??0199				  CODE	    0868	2096
??0200				  CODE	    085D	2085
??0201				  CODE	    0862	2091
??0202				  CODE	    089A	2129
??0203				  CODE	    088F	2118
??0204				  CODE	    0894	2124
??0205				  CODE	    08B4	2152
??0206				  CODE	    08A9	2141
??0207				  CODE	    08AE	2147
??0208				  CODE	    08CF	2176
??0209				  CODE	    08C4	2165
??0210				  CODE	    08C9	2171
??0211				  CODE	    08E6	2199
??0212				  CODE	    08DB	2188
??0213				  CODE	    08E0	2194
??0214				  CODE	    08E6	2204
??0215				  CODE	    08E9	2209
??0216				  CODE	    08EC	2363
??0217				  CODE	    0973	2587

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 174



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0218				  CODE	    0922	2455
??0219				  CODE	    093D	2499
??0220				  CODE	    0958	2543
??0221				  CODE	    0993	2633
??0222				  CODE	    09AA	2664
??0223				  CODE	    0928	2461
??0224				  CODE	    091D	2450
??0225				  CODE	    0922	2456
??0226				  CODE	    0943	2505
??0227				  CODE	    0938	2494
??0228				  CODE	    093D	2500
??0229				  CODE	    095E	2549
??0230				  CODE	    0953	2538
??0231				  CODE	    0958	2544
??0232				  CODE	    0979	2593
??0233				  CODE	    096E	2582
??0234				  CODE	    0973	2588
??0235				  CODE	    0999	2639
??0236				  CODE	    098E	2628
??0237				  CODE	    0993	2634
??0238				  CODE	    09B0	2670
??0239				  CODE	    09A5	2659
??0240				  CODE	    09AA	2665
??0241				  CODE	    09B0	2675
??0242				  CODE	    09B3	2680
??0243				  CODE	    09B6	2691
??0244				  CODE	    0A3D	2915
??0245				  CODE	    09EC	2783
??0246				  CODE	    0A07	2827
??0247				  CODE	    0A22	2871
??0248				  CODE	    0A5D	2961
??0249				  CODE	    0A74	2992
??0250				  CODE	    09F2	2789
??0251				  CODE	    09E7	2778
??0252				  CODE	    09EC	2784
??0253				  CODE	    0A0D	2833
??0254				  CODE	    0A02	2822
??0255				  CODE	    0A07	2828
??0256				  CODE	    0A28	2877
??0257				  CODE	    0A1D	2866
??0258				  CODE	    0A22	2872
??0259				  CODE	    0A43	2921
??0260				  CODE	    0A38	2910
??0261				  CODE	    0A3D	2916
??0262				  CODE	    0A63	2967
??0263				  CODE	    0A58	2956
??0264				  CODE	    0A5D	2962
??0265				  CODE	    0A7A	2998
??0266				  CODE	    0A6F	2987
??0267				  CODE	    0A74	2993
??0268				  CODE	    0A7A	3003
??0269				  CODE	    0A7D	3008
??0270				  CODE	    0A80	3019
??0271				  CODE	    0B07	3243
??0272				  CODE	    0AB6	3111
??0273				  CODE	    0AD1	3155

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 175



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0274				  CODE	    0AEC	3199
??0275				  CODE	    0B27	3289
??0276				  CODE	    0B3E	3320
??0277				  CODE	    0ABC	3117
??0278				  CODE	    0AB1	3106
??0279				  CODE	    0AB6	3112
??0280				  CODE	    0AD7	3161
??0281				  CODE	    0ACC	3150
??0282				  CODE	    0AD1	3156
??0283				  CODE	    0AF2	3205
??0284				  CODE	    0AE7	3194
??0285				  CODE	    0AEC	3200
??0286				  CODE	    0B0D	3249
??0287				  CODE	    0B02	3238
??0288				  CODE	    0B07	3244
??0289				  CODE	    0B2D	3295
??0290				  CODE	    0B22	3284
??0291				  CODE	    0B27	3290
??0292				  CODE	    0B44	3326
??0293				  CODE	    0B39	3315
??0294				  CODE	    0B3E	3321
??0295				  CODE	    0B44	3331
??0296				  CODE	    0B47	3336
??0297				  CODE	    0B4A	3346
??0298				  CODE	    0B52	3367
??0299				  CODE	    0B66	3385
??0300				  CODE	    0B5B	3374
??0301				  CODE	    0B60	3380
??0302				  CODE	    0B6A	3391
??0303				  CODE	    0B76	3399
??0304				  CODE	    0B82	3407
??0305				  CODE	    0B8E	3415
??0306				  CODE	    0B9A	3423
??0307				  CODE	    0BA6	3431
??0308				  CODE	    0BB2	3439
??0309				  CODE	    0BBE	3447
??0310				  CODE	    0BD1	3465
??0311				  CODE	    0BC6	3454
??0312				  CODE	    0BCB	3460
??0313				  CODE	    0BD1	3469
??0314				  CODE	    0BD4	3474
??0315				  CODE	    0BD7	3486
??0316				  CODE	    0BDA	3492
??0317				  CODE	    0CFB	3847
??0318				  CODE	    0C56	3643
??0319				  CODE	    0C8D	3711
??0320				  CODE	    0CC4	3779
??0323				  NUMBER    0000	3507
??0324				  NUMBER    0000	3534
??0325				  NUMBER    0000	3561
??0326				  NUMBER    0000	3588
??0327				  NUMBER    0000	3614
??0328				  CODE	    0C5C	3649
??0329				  CODE	    0C51	3638
??0330				  CODE	    0C56	3644
??0331				  NUMBER    0000	3656

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 176



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0332				  NUMBER    0000	3682
??0333				  CODE	    0C93	3717
??0334				  CODE	    0C88	3706
??0335				  CODE	    0C8D	3712
??0336				  NUMBER    0000	3724
??0337				  NUMBER    0000	3750
??0338				  CODE	    0CCA	3785
??0339				  CODE	    0CBF	3774
??0340				  CODE	    0CC4	3780
??0341				  NUMBER    0000	3792
??0342				  NUMBER    0000	3818
??0343				  CODE	    0D01	3853
??0344				  CODE	    0CF6	3842
??0345				  CODE	    0CFB	3848
??0346				  CODE	    0D01	3867
??0347				  CODE	    0E22	4222
??0348				  CODE	    0D7D	4018
??0349				  CODE	    0DB4	4086
??0350				  CODE	    0DEB	4154
??0353				  NUMBER    0000	3882
??0354				  NUMBER    0000	3909
??0355				  NUMBER    0000	3936
??0356				  NUMBER    0000	3963
??0357				  NUMBER    0000	3989
??0358				  CODE	    0D83	4024
??0359				  CODE	    0D78	4013
??0360				  CODE	    0D7D	4019
??0361				  NUMBER    0000	4031
??0362				  NUMBER    0000	4057
??0363				  CODE	    0DBA	4092
??0364				  CODE	    0DAF	4081
??0365				  CODE	    0DB4	4087
??0366				  NUMBER    0000	4099
??0367				  NUMBER    0000	4125
??0368				  CODE	    0DF1	4160
??0369				  CODE	    0DE6	4149
??0370				  CODE	    0DEB	4155
??0371				  NUMBER    0000	4167
??0372				  NUMBER    0000	4193
??0373				  CODE	    0E28	4228
??0374				  CODE	    0E1D	4217
??0375				  CODE	    0E22	4223
??0376				  CODE	    0E28	4242
??0377				  CODE	    0F49	4597
??0378				  CODE	    0EA4	4393
??0379				  CODE	    0EDB	4461
??0380				  CODE	    0F12	4529
??0383				  NUMBER    0000	4257
??0384				  NUMBER    0000	4284
??0385				  NUMBER    0000	4311
??0386				  NUMBER    0000	4338
??0387				  NUMBER    0000	4364
??0388				  CODE	    0EAA	4399
??0389				  CODE	    0E9F	4388
??0390				  CODE	    0EA4	4394
??0391				  NUMBER    0000	4406

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 177



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0392				  NUMBER    0000	4432
??0393				  CODE	    0EE1	4467
??0394				  CODE	    0ED6	4456
??0395				  CODE	    0EDB	4462
??0396				  NUMBER    0000	4474
??0397				  NUMBER    0000	4500
??0398				  CODE	    0F18	4535
??0399				  CODE	    0F0D	4524
??0400				  CODE	    0F12	4530
??0401				  NUMBER    0000	4542
??0402				  NUMBER    0000	4568
??0403				  CODE	    0F4F	4603
??0404				  CODE	    0F44	4592
??0405				  CODE	    0F49	4598
??0406				  CODE	    0F4F	4617
??0407				  CODE	    1070	4972
??0408				  CODE	    0FCB	4768
??0409				  CODE	    1002	4836
??0410				  CODE	    1039	4904
??0413				  NUMBER    0000	4632
??0414				  NUMBER    0000	4659
??0415				  NUMBER    0000	4686
??0416				  NUMBER    0000	4713
??0417				  NUMBER    0000	4739
??0418				  CODE	    0FD1	4774
??0419				  CODE	    0FC6	4763
??0420				  CODE	    0FCB	4769
??0421				  NUMBER    0000	4781
??0422				  NUMBER    0000	4807
??0423				  CODE	    1008	4842
??0424				  CODE	    0FFD	4831
??0425				  CODE	    1002	4837
??0426				  NUMBER    0000	4849
??0427				  NUMBER    0000	4875
??0428				  CODE	    103F	4910
??0429				  CODE	    1034	4899
??0430				  CODE	    1039	4905
??0431				  NUMBER    0000	4917
??0432				  NUMBER    0000	4943
??0433				  CODE	    1076	4978
??0434				  CODE	    106B	4967
??0435				  CODE	    1070	4973
??0436				  CODE	    1076	4994
??0437				  CODE	    1079	4999
??0438				  CODE	    107C	5011
??0439				  CODE	    107F	5017
??0440				  CODE	    11A0	5372
??0441				  CODE	    10FB	5168
??0442				  CODE	    1132	5236
??0443				  CODE	    1169	5304
??0446				  NUMBER    0000	5032
??0447				  NUMBER    0000	5059
??0448				  NUMBER    0000	5086
??0449				  NUMBER    0000	5113
??0450				  NUMBER    0000	5139
??0451				  CODE	    1101	5174

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 178



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0452				  CODE	    10F6	5163
??0453				  CODE	    10FB	5169
??0454				  NUMBER    0000	5181
??0455				  NUMBER    0000	5207
??0456				  CODE	    1138	5242
??0457				  CODE	    112D	5231
??0458				  CODE	    1132	5237
??0459				  NUMBER    0000	5249
??0460				  NUMBER    0000	5275
??0461				  CODE	    116F	5310
??0462				  CODE	    1164	5299
??0463				  CODE	    1169	5305
??0464				  NUMBER    0000	5317
??0465				  NUMBER    0000	5343
??0466				  CODE	    11A6	5378
??0467				  CODE	    119B	5367
??0468				  CODE	    11A0	5373
??0469				  CODE	    11A6	5392
??0470				  CODE	    12C7	5747
??0471				  CODE	    1222	5543
??0472				  CODE	    1259	5611
??0473				  CODE	    1290	5679
??0476				  NUMBER    0000	5407
??0477				  NUMBER    0000	5434
??0478				  NUMBER    0000	5461
??0479				  NUMBER    0000	5488
??0480				  NUMBER    0000	5514
??0481				  CODE	    1228	5549
??0482				  CODE	    121D	5538
??0483				  CODE	    1222	5544
??0484				  NUMBER    0000	5556
??0485				  NUMBER    0000	5582
??0486				  CODE	    125F	5617
??0487				  CODE	    1254	5606
??0488				  CODE	    1259	5612
??0489				  NUMBER    0000	5624
??0490				  NUMBER    0000	5650
??0491				  CODE	    1296	5685
??0492				  CODE	    128B	5674
??0493				  CODE	    1290	5680
??0494				  NUMBER    0000	5692
??0495				  NUMBER    0000	5718
??0496				  CODE	    12CD	5753
??0497				  CODE	    12C2	5742
??0498				  CODE	    12C7	5748
??0499				  CODE	    12CD	5767
??0500				  CODE	    13EE	6122
??0501				  CODE	    1349	5918
??0502				  CODE	    1380	5986
??0503				  CODE	    13B7	6054
??0506				  NUMBER    0000	5782
??0507				  NUMBER    0000	5809
??0508				  NUMBER    0000	5836
??0509				  NUMBER    0000	5863
??0510				  NUMBER    0000	5889
??0511				  CODE	    134F	5924

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 179



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0512				  CODE	    1344	5913
??0513				  CODE	    1349	5919
??0514				  NUMBER    0000	5931
??0515				  NUMBER    0000	5957
??0516				  CODE	    1386	5992
??0517				  CODE	    137B	5981
??0518				  CODE	    1380	5987
??0519				  NUMBER    0000	5999
??0520				  NUMBER    0000	6025
??0521				  CODE	    13BD	6060
??0522				  CODE	    13B2	6049
??0523				  CODE	    13B7	6055
??0524				  NUMBER    0000	6067
??0525				  NUMBER    0000	6093
??0526				  CODE	    13F4	6128
??0527				  CODE	    13E9	6117
??0528				  CODE	    13EE	6123
??0529				  CODE	    13F4	6142
??0530				  CODE	    1515	6497
??0531				  CODE	    1470	6293
??0532				  CODE	    14A7	6361
??0533				  CODE	    14DE	6429
??0536				  NUMBER    0001	6157
??0537				  NUMBER    0001	6184
??0538				  NUMBER    0001	6211
??0539				  NUMBER    0001	6238
??0540				  NUMBER    0001	6264
??0541				  CODE	    1476	6299
??0542				  CODE	    146B	6288
??0543				  CODE	    1470	6294
??0544				  NUMBER    0001	6306
??0545				  NUMBER    0001	6332
??0546				  CODE	    14AD	6367
??0547				  CODE	    14A2	6356
??0548				  CODE	    14A7	6362
??0549				  NUMBER    0001	6374
??0550				  NUMBER    0001	6400
??0551				  CODE	    14E4	6435
??0552				  CODE	    14D9	6424
??0553				  CODE	    14DE	6430
??0554				  NUMBER    0001	6442
??0555				  NUMBER    0001	6468
??0556				  CODE	    151B	6503
??0557				  CODE	    1510	6492
??0558				  CODE	    1515	6498
??0559				  CODE	    151B	6517
??0560				  CODE	    163C	6872
??0561				  CODE	    1597	6668
??0562				  CODE	    15CE	6736
??0563				  CODE	    1605	6804
??0566				  NUMBER    0001	6532
??0567				  NUMBER    0001	6559
??0568				  NUMBER    0001	6586
??0569				  NUMBER    0001	6613
??0570				  NUMBER    0001	6639
??0571				  CODE	    159D	6674

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 180



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0572				  CODE	    1592	6663
??0573				  CODE	    1597	6669
??0574				  NUMBER    0001	6681
??0575				  NUMBER    0001	6707
??0576				  CODE	    15D4	6742
??0577				  CODE	    15C9	6731
??0578				  CODE	    15CE	6737
??0579				  NUMBER    0001	6749
??0580				  NUMBER    0001	6775
??0581				  CODE	    160B	6810
??0582				  CODE	    1600	6799
??0583				  CODE	    1605	6805
??0584				  NUMBER    0001	6817
??0585				  NUMBER    0001	6843
??0586				  CODE	    1642	6878
??0587				  CODE	    1637	6867
??0588				  CODE	    163C	6873
??0589				  CODE	    1642	6895
??0590				  CODE	    1645	6900
??0591				  CODE	    1648	6912
??0592				  CODE	    164B	6921
??0593				  CODE	    176C	7276
??0594				  CODE	    16C7	7072
??0595				  CODE	    16FE	7140
??0596				  CODE	    1735	7208
??0599				  NUMBER    0000	6936
??0600				  NUMBER    0000	6963
??0601				  NUMBER    0000	6990
??0602				  NUMBER    0000	7017
??0603				  NUMBER    0000	7043
??0604				  CODE	    16CD	7078
??0605				  CODE	    16C2	7067
??0606				  CODE	    16C7	7073
??0607				  NUMBER    0000	7085
??0608				  NUMBER    0000	7111
??0609				  CODE	    1704	7146
??0610				  CODE	    16F9	7135
??0611				  CODE	    16FE	7141
??0612				  NUMBER    0000	7153
??0613				  NUMBER    0000	7179
??0614				  CODE	    173B	7214
??0615				  CODE	    1730	7203
??0616				  CODE	    1735	7209
??0617				  NUMBER    0000	7221
??0618				  NUMBER    0000	7247
??0619				  CODE	    1772	7282
??0620				  CODE	    1767	7271
??0621				  CODE	    176C	7277
??0622				  CODE	    1772	7296
??0623				  CODE	    1893	7651
??0624				  CODE	    17EE	7447
??0625				  CODE	    1825	7515
??0626				  CODE	    185C	7583
??0629				  NUMBER    0001	7311
??0630				  NUMBER    0001	7338
??0631				  NUMBER    0001	7365

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 181



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0632				  NUMBER    0001	7392
??0633				  NUMBER    0001	7418
??0634				  CODE	    17F4	7453
??0635				  CODE	    17E9	7442
??0636				  CODE	    17EE	7448
??0637				  NUMBER    0001	7460
??0638				  NUMBER    0001	7486
??0639				  CODE	    182B	7521
??0640				  CODE	    1820	7510
??0641				  CODE	    1825	7516
??0642				  NUMBER    0001	7528
??0643				  NUMBER    0001	7554
??0644				  CODE	    1862	7589
??0645				  CODE	    1857	7578
??0646				  CODE	    185C	7584
??0647				  NUMBER    0001	7596
??0648				  NUMBER    0001	7622
??0649				  CODE	    1899	7657
??0650				  CODE	    188E	7646
??0651				  CODE	    1893	7652
??0652				  CODE	    1899	7671
??0653				  CODE	    19BA	8026
??0654				  CODE	    1915	7822
??0655				  CODE	    194C	7890
??0656				  CODE	    1983	7958
??0659				  NUMBER    0000	7686
??0660				  NUMBER    0000	7713
??0661				  NUMBER    0000	7740
??0662				  NUMBER    0000	7767
??0663				  NUMBER    0000	7793
??0664				  CODE	    191B	7828
??0665				  CODE	    1910	7817
??0666				  CODE	    1915	7823
??0667				  NUMBER    0000	7835
??0668				  NUMBER    0000	7861
??0669				  CODE	    1952	7896
??0670				  CODE	    1947	7885
??0671				  CODE	    194C	7891
??0672				  NUMBER    0000	7903
??0673				  NUMBER    0000	7929
??0674				  CODE	    1989	7964
??0675				  CODE	    197E	7953
??0676				  CODE	    1983	7959
??0677				  NUMBER    0000	7971
??0678				  NUMBER    0000	7997
??0679				  CODE	    19C0	8032
??0680				  CODE	    19B5	8021
??0681				  CODE	    19BA	8027
??0682				  CODE	    19C0	8046
??0683				  CODE	    1AE1	8401
??0684				  CODE	    1A3C	8197
??0685				  CODE	    1A73	8265
??0686				  CODE	    1AAA	8333
??0689				  NUMBER    0001	8061
??0690				  NUMBER    0001	8088
??0691				  NUMBER    0001	8115

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 182



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0692				  NUMBER    0001	8142
??0693				  NUMBER    0001	8168
??0694				  CODE	    1A42	8203
??0695				  CODE	    1A37	8192
??0696				  CODE	    1A3C	8198
??0697				  NUMBER    0001	8210
??0698				  NUMBER    0001	8236
??0699				  CODE	    1A79	8271
??0700				  CODE	    1A6E	8260
??0701				  CODE	    1A73	8266
??0702				  NUMBER    0001	8278
??0703				  NUMBER    0001	8304
??0704				  CODE	    1AB0	8339
??0705				  CODE	    1AA5	8328
??0706				  CODE	    1AAA	8334
??0707				  NUMBER    0001	8346
??0708				  NUMBER    0001	8372
??0709				  CODE	    1AE7	8407
??0710				  CODE	    1ADC	8396
??0711				  CODE	    1AE1	8402
??0712				  CODE	    1AE7	8425
??0713				  CODE	    1AEA	8430
??0714				  CODE	    1AED	8444
??0715				  CODE	    1B10	8473
??0716				  CODE	    1B05	8462
??0717				  CODE	    1B0A	8468
??0718				  CODE	    1B2C	8498
??0719				  CODE	    1B21	8487
??0720				  CODE	    1B26	8493
??0721				  CODE	    1B4C	8524
??0722				  CODE	    1B41	8513
??0723				  CODE	    1B46	8519
??0724				  CODE	    1B67	8548
??0725				  CODE	    1B5C	8537
??0726				  CODE	    1B61	8543
??0727				  CODE	    1B67	8552
??0728				  CODE	    1B6A	8557
??0729				  CODE	    1B6D	8570
??0730				  CODE	    1B8E	8598
??0731				  CODE	    1B83	8587
??0732				  CODE	    1B88	8593
??0733				  CODE	    1BAE	8634
??0734				  CODE	    1BA3	8623
??0735				  CODE	    1BA8	8629
??0736				  CODE	    1BCA	8659
??0737				  CODE	    1BBF	8648
??0738				  CODE	    1BC4	8654
??0739				  CODE	    1BCA	8663
??0740				  CODE	    1BCD	8668
??0741				  CODE	    1BD0	8679
??0742				  CODE	    1BEC	8706
??0743				  CODE	    1BE1	8695
??0744				  CODE	    1BE6	8701
??0745				  CODE	    1C12	8740
??0746				  CODE	    1C07	8729
??0747				  CODE	    1C0C	8735

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 183



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0748				  CODE	    1C12	8744
??0749				  CODE	    1C15	8749
??0750				  CODE	    1C18	8770
??0751				  CODE	    1C48	8806
??0752				  CODE	    1C3D	8795
??0753				  CODE	    1C42	8801
??0754				  CODE	    1C59	8825
??0755				  CODE	    1C4E	8814
??0756				  CODE	    1C53	8820
??0757				  CODE	    1C77	8855
??0758				  CODE	    1C6C	8844
??0759				  CODE	    1C71	8850
??0760				  CODE	    1C8C	8877
??0761				  CODE	    1C81	8866
??0762				  CODE	    1C86	8872
??0763				  CODE	    1C8C	8881
??0764				  CODE	    1C8F	8886
??0765				  CODE	    1C92	8901
??0766				  CODE	    1CC3	8939
??0767				  CODE	    1CB8	8928
??0768				  CODE	    1CBD	8934
??0769				  CODE	    1CF1	8974
??0770				  CODE	    1CE6	8963
??0771				  CODE	    1CEB	8969
??0772				  CODE	    1CF1	8979
??0773				  CODE	    1CF4	8984
??0774				  CODE	    1CF7	8996
??0775				  CODE	    1D41	9068
??0776				  CODE	    1D36	9057
??0777				  CODE	    1D3B	9063
??0778				  CODE	    1DAF	9148
??0779				  CODE	    1DA4	9137
??0780				  CODE	    1DA9	9143
??0781				  CODE	    1DD5	9165
??0782				  CODE	    1DD8	9170
??0783				  CODE	    1DDB	9184
??0784				  CODE	    1E2A	9247
??0785				  CODE	    1E1F	9236
??0786				  CODE	    1E24	9242
??0787				  CODE	    1E2A	9251
??0788				  CODE	    1E2D	9256
??0789				  CODE	    1E34	9281
??0790				  CODE	    1E37	9286
??0791				  CODE	    1E3A	9291
??0792				  CODE	    1E3D	9296
??0793				  CODE	    1E40	9301
??0794				  CODE	    1E43	9306
??0795				  CODE	    1E46	9312
??0796				  CODE	    1E49	9317
??0797				  CODE	    1E4E	9326
??0798				  CODE	    1E51	9331
??0799				  CODE	    1E54	9336
??0800				  CODE	    1E57	9341
??0801				  CODE	    1E5A	9346
??0802				  CODE	    1E5D	9351
??0803				  CODE	    1E60	9357

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 184



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??0804				  CODE	    1E63	9362
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6	  87
ACC				  DATA	      E0	  58
ARG0				  NUMBER    00C3	2370
ARG1				  NUMBER    00C5	2371
B				  DATA	      F0	  59
CY				  BIT	      D7	  88
DIR0				  NUMBER    0060	 101
DIR1				  NUMBER    0061	 102
DPH				  DATA	      83	  41
DPL				  DATA	      82	  40
EA				  BIT	      AF	  73
EOT				  MACRO	        	 131
ES				  BIT	      AC	  71
ET0				  BIT	      A9	  68
EX0				  BIT	      A8	  67
EXTI0				  CODE	    0003	  92
EXTI1				  CODE	    0013	  94
EXTINT0				  DATA	      C0	  56
F0				  BIT	      D5	  86
FAIL				  NUMBER    006E	 103
IE				  DATA	      A8	  53
NLOOPS				  NUMBER    0003	3364
OV				  BIT	      D2	  83
P				  BIT	      D0	  82
P0				  DATA	      80	  38
P1				  DATA	      90	  49
P2				  DATA	      A0	  52
P3				  DATA	      B0	  54
PSW				  DATA	      D0	  57
PUTC				  MACRO	        	 112
PUT_CRLF			  MACRO	        	 121
QUIT				  CODE	    1E68	9369
RES				  NUMBER    0001	2372
RESET				  CODE	    0000	  91
RS0				  BIT	      D3	  84
RS1				  BIT	      D4	  85
RXIRQ				  BIT	      99	  77
RXRDY				  BIT	      9D	  79
SAVED_PSW			  NUMBER    0070	 104
SAVE_PSW			  MACRO	        	2227
SBUF				  DATA	      99	  51
SCON				  DATA	      98	  50
SET_CY				  MACRO	        	2241
SINT				  CODE	    0023	  96
SP				  DATA	      81	  39
STACK0				  NUMBER    009F	 105
START				  CODE	    0030	 153
S_SUB0				  CODE	    1CA9	8917
S_SUB1				  CODE	    1CB3	8923
S_SUB2				  CODE	    1CD7	8952
S_SUB3				  CODE	    1CE1	8958
T0ARL				  BIT	      8C	  63
T0CEN				  BIT	      8D	  64

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 185



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
T0IRQ				  BIT	      88	  62
TA_B0				  CODE	    0041	 197
TA_C0				  CODE	    0044	 204
TA_C1				  CODE	    004B	 211
TA_C2				  CODE	    005A	 220
TA_C3				  CODE	    0046	 205
TA_C4				  CODE	    0063	 227
TA_D1				  CODE	    006F	 237
TA_D2				  CODE	    0077	 246
TA_E1				  CODE	    008A	 265
TB_A1				  CODE	    00CE	 348
TB_B0				  CODE	    00DF	 364
TB_B1				  CODE	    00E8	 368
TB_B2				  CODE	    00EE	 374
TB_C0				  CODE	    0171	 480
TB_C1				  CODE	    0179	 483
TB_C2				  CODE	    018A	 496
TB_C3				  CODE	    017E	 485
TB_C4				  CODE	    0183	 487
TB_D0				  CODE	    01A1	 519
TB_E0				  CODE	    01CE	 561
TB_F0				  CODE	    01F8	 606
TB_F1				  CODE	    0200	 610
TB_F2				  CODE	    0211	 623
TB_F3				  CODE	    0205	 612
TB_F4				  CODE	    020A	 614
TB_G0				  CODE	    0243	 662
TB_G1				  CODE	    0231	 645
TB_G2				  CODE	    023C	 653
TB_MA				  MACRO	        	 302
TB_MC				  MACRO	        	 380
TB_ME				  MACRO	        	 527
TB_MF				  MACRO	        	 569
TCH				  DATA	      8F	  48
TCL				  DATA	      8E	  47
TC_A0				  CODE	    0265	 722
TC_A1				  CODE	    0257	 713
TC_A2				  CODE	    026E	 729
TC_A3				  CODE	    0276	 738
TC_B1				  CODE	    028C	 758
TC_C0				  CODE	    02A4	 778
TC_C1				  CODE	    0296	 768
TC_C2				  CODE	    02AC	 785
TC_C3				  CODE	    02B3	 794
TC_D0				  CODE	    02D0	 818
TC_D1				  CODE	    02C1	 806
TC_E0				  CODE	    02FD	 853
TC_F0				  CODE	    0320	 881
TC_G0				  CODE	    033A	 904
TC_H0				  CODE	    0358	 930
TC_H1				  CODE	    034E	 919
TC_H2				  CODE	    0345	 915
TC_H3				  CODE	    0353	 921
TC_I0				  CODE	    0374	 950
TC_I1				  CODE	    0366	 941
TC_I2				  CODE	    037D	 957

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 186



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TC_I3				  CODE	    0385	 966
TC_J0				  CODE	    03A2	 989
TC_J1				  CODE	    0393	 977
TC_K0				  CODE	    03CF	1024
TC_L0				  CODE	    03F2	1052
TC_M0				  CODE	    040C	1075
TC_N0				  CODE	    042A	1101
TC_N1				  CODE	    0420	1090
TC_N2				  CODE	    0417	1086
TC_N3				  CODE	    0425	1092
TD_A0				  CODE	    0448	1154
TD_B0				  CODE	    046F	1189
TD_C0				  CODE	    0495	1223
TD_D0				  CODE	    04CD	1269
TEST_FAILED			  CODE	    1E4E	9323
TE_A0				  CODE	    04F0	1335
TE_B0				  CODE	    0575	1425
TE_C0				  CODE	    05A2	1462
TE_D0				  CODE	    05B5	1481
TE_E0				  CODE	    05D7	1507
TE_F0				  CODE	    05F1	1542
TE_G0				  CODE	    0676	1632
TE_H0				  CODE	    06A3	1669
TE_I0				  CODE	    06B6	1688
TE_MA				  MACRO	        	1307
TE_MF				  MACRO	        	1515
TF_A0				  CODE	    0712	1782
TF_B0				  CODE	    072F	1808
TF_C0				  CODE	    0745	1828
TF_D0				  CODE	    0790	1882
TF_E0				  CODE	    07AF	1908
TF_F0				  CODE	    07EA	1962
TF_G0				  CODE	    0805	1988
TF_H0				  CODE	    081E	2010
TF_I0				  CODE	    083D	2036
TF_MA				  MACRO	        	1727
TF_MD				  MACRO	        	1836
TF_MF				  MACRO	        	1916
TG_A0				  CODE	    0862	2090
TG_B0				  CODE	    0894	2123
TG_C0				  CODE	    08AE	2146
TG_D0				  CODE	    08C9	2170
TG_E0				  CODE	    08E0	2193
TH				  DATA	      8D	  46
TIMER0				  CODE	    000B	  93
TIMER1				  CODE	    001B	  95
TIMER2				  CODE	    002B	  97
TK_A0				  CODE	    0B60	3379
TK_B0				  CODE	    0BCB	3459
TK_MA				  MACRO	        	3352
TL				  DATA	      8C	  45
TOP_MA				  MACRO	        	2255
TOP_MB				  MACRO	        	2271
TOP_MC				  MACRO	        	2287
TO_A0				  CODE	    1B0A	8467
TO_B0				  CODE	    1B26	8492

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                        PAGE 187



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TO_C0				  CODE	    1B46	8518
TO_D0				  CODE	    1B61	8542
TP_A0				  CODE	    1B88	8592
TP_B0				  CODE	    1BA8	8628
TP_C0				  CODE	    1BC4	8653
TQ0				  CODE	    1BDE	8691
TQ1				  CODE	    1BDA	8690
TQ_A0				  CODE	    1BE6	8700
TQ_B0				  CODE	    1C0C	8734
TR_A0				  CODE	    1C42	8800
TR_B0				  CODE	    1C53	8819
TR_C0				  CODE	    1C71	8849
TR_D0				  CODE	    1C86	8871
TR_RV0				  CODE	    1C2C	8784
TR_RV1				  CODE	    1C4B	8810
TR_RV2				  CODE	    1C4D	8811
TR_RV3				  CODE	    1C64	8837
TR_RV4				  CODE	    1C7F	8862
TR_SUB0				  CODE	    1C2E	8785
TR_SUB1				  CODE	    800C	9392
TR_SUB1_FAIL			  CODE	    801E	9400
TR_SUB2				  CODE	    8000	9378
TR_SUB3				  CODE	    8006	9387
TSTAT				  DATA	      88	  43
TST_ALU				  MACRO	        	2306
TST_PSW				  MACRO	        	2232
TS_A0				  CODE	    1CBD	8933
TS_B0				  CODE	    1CEB	8968
TT_A0				  CODE	    1D3B	9062
TT_A_DIVZERO			  CODE	    1D30	9047
TT_A_LOOP			  CODE	    1D0B	9018
TT_A_NEXT			  CODE	    1D32	9050
TT_A_TAB			  CODE	    1D43	9071
TT_A_TAB_END			  CODE	    1D70	9081
TT_B0				  CODE	    1DA9	9142
TT_B_0				  CODE	    1D94	9121
TT_B_LOOP			  CODE	    1D77	9095
TT_B_NOOVF			  CODE	    1D8E	9116
TT_B_TAB			  CODE	    1DB1	9151
TT_B_TAB_END			  CODE	    1DD5	9161
TU_A0				  CODE	    1E24	9241
TU_A_DONE			  CODE	    1E1E	9232
TU_A_TEST			  CODE	    1E00	9208
TXIRQ				  BIT	      98	  76
TXRDY				  BIT	      9C	  78
